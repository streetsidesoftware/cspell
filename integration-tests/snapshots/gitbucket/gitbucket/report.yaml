---
Repository: gitbucket/gitbucket
Url: https://github.com/gitbucket/gitbucket.git
Args: '["**"]'
Summary:
  files: 411
  filesWithIssues: 397
  issues: 2154
  errors: 0
Errors: []

issues:
  - "build.sbt:5:13          gitbucket           U       val Name = \"gitbucket\""
  - "build.sbt:7:5           Scalatra            U       val ScalatraVersion = \"3.0.0\""
  - "build.sbt:9:5           Jgit                U       val JgitVersion = \"6.8.0.202"
  - "build.sbt:22:4          scalafmt            U       // scalafmtOnCompile := true"
  - "build.sbt:29:34         scalatra            U       scalatra\" %% \"scalatra-javax\""
  - "build.sbt:29:43         javax               U       %% \"scalatra-javax\" % ScalatraVers"
  - "build.sbt:34:34         solidbase           U       gitbucket\" % \"solidbase\""
  - "build.sbt:35:34         markedj             U       gitbucket\" % \"markedj\""
  - "build.sbt:39:34         httpclient          U       apache.httpcomponents\" % \"httpclient\""
  - "build.sbt:40:119        mina                U       apache.sshd\", \"sshd-mina\") exclude (\"org.apache"
  - "build.sbt:41:40         tika                U       % \"tika-core\""
  - "build.sbt:43:40         jldap               U       % \"jldap\""
  - "build.sbt:47:40         logback             U       % \"logback-classic\" %"
  - "build.sbt:48:40         Hikari              U       % \"HikariCP\""
  - "build.sbt:50:40         xhub                U       oss.security.xhub\" % \"xhub4j-core\""
  - "build.sbt:53:40         thumbnailator       U       % \"thumbnailator\" % \"0.4."
  - "build.sbt:55:47         oidc                U       % \"oauth2-oidc-sdk\" % \"11"
  - "build.sbt:59:49         scalatest           U       %% \"scalatra-scalatest-javax\" % ScalatraVersion"
  - "build.sbt:61:40         testcontainers      U       %% \"testcontainers-scala\" % \"0.41."
  - "build.sbt:64:40         eddsa               U       % \"eddsa\""
  - "build.sbt:65:40         woothee             U       woothee\" % \"woothee-java\" %"
  - "build.sbt:71:1          scalac              U       scalacOptions := Seq("
  - "build.sbt:76:5          Wunused             U       \"-Wunused:imports\","
  - "build.sbt:77:5          Wconf               U       \"-Wconf:cat=unused&src=twirl"
  - "build.sbt:82:13         Xsource             U       Seq(\"-Xsource:3\")"
  - "build.sbt:87:11         javac               U       compile / javacOptions ++= Seq(\"-target"
  - "build.sbt:88:26         Dlogback            U       Jetty / javaOptions += \"-Dlogback.configurationFile=/logback"
  - "build.sbt:92:25         Dgitbucket          U       Test / javaOptions += \"-Dgitbucket.home=target/gitbucket"
  - "build.sbt:126:32        servlet             U       eclipse.jetty\" % \"jetty-servlet\" % JettyVersion %"
  - "build.sbt:234:11        takezoe             U       <id>takezoe</id>"
  - "build.sbt:235:13        Naoki               U       <name>Naoki Takezoe</name>"
  - "build.sbt:235:19        Takezoe             U       <name>Naoki Takezoe</name>"
  - "build.sbt:239:11        shimamoto           U       <id>shimamoto</id>"
  - "build.sbt:240:13        Takako              U       <name>Takako Shimamoto</name>"
  - "build.sbt:240:20        Shimamoto           U       <name>Takako Shimamoto</name>"
  - "build.sbt:244:11        tanacasino          U       <id>tanacasino</id>"
  - "build.sbt:245:13        Tomofumi            U       <name>Tomofumi Tanaka</name>"
  - "build.sbt:245:22        Tanaka              U       <name>Tomofumi Tanaka</name>"
  - "build.sbt:249:11        mrkm                U       <id>mrkm4ntr</id>"
  - "build.sbt:250:13        Shintaro            U       <name>Shintaro Murakami</name>"
  - "build.sbt:250:22        Murakami            U       <name>Shintaro Murakami</name>"
  - "build.sbt:254:11        nazoking            U       <id>nazoking</id>"
  - "build.sbt:260:13        Matthieu            U       <name>Matthieu Brouillard</name>"
  - "build.sbt:260:22        Brouillard          U       <name>Matthieu Brouillard</name>"
  - "build.sbt:283:5         Xrunjdwp            U       \"-Xrunjdwp:transport=dt_socket"
  - "build.sbt:284:5         Dorg                U       \"-Dorg.eclipse.jetty.annotations"
  - "build.sbt:285:8         Ddev                U       // \"-Ddev-features=keep-session"
  - "contrib/install:10:1        GITBUCKET       U       GITBUCKET_VERSION=2.1"
  - "contrib/install:27:35       dport           U       iptables -A INPUT -p tcp --dport $GITBUCKET_PORT -j ACCEPT"
  - "contrib/linux/redhat/README.md:12:13        rpmbuild        U       6. Execute `rpmbuild -ba rpm/SPECS/gitbucket"
  - "contrib/linux/redhat/README.md:16:15        chkconfig       U       This rpm make chkconfig of gitbucket to be on"
  - "contrib/linux/redhat/selinux/readme.md:14:3         sedeploy        U       ./sedeploy.sh gitbucket"
  - "contrib/linux/redhat/selinux/readme.md:24:1         semanage        U       semanage fcontext -a -t tomcat"
  - "contrib/linux/redhat/selinux/readme.md:24:10        fcontext        U       semanage fcontext -a -t tomcat_var_lib"
  - "contrib/linux/redhat/selinux/readme.md:25:1         restorecon      U       restorecon -rv ${GITBUCKET_HOME"
  - "contrib/linux/redhat/selinux/sedeploy.sh:8:1            checkmodule     U       checkmodule -M -m -o ${MODULE}.mod"
  - "contrib/linux/redhat/selinux/sedeploy.sh:10:31          semodule        U       will create a compiled semodule"
  - "doc/activity.md:21:6        pullreq     U       open_pullreq |$user opened pull"
  - "doc/auto_update.md:3:56         Solidbase       U       automatically using [Solidbase](https://github.com"
  - "doc/auto_update.md:10:9         Liquibase       U       new LiquibaseMigration(\"update/gitbucket"
  - "doc/auto_update.md:28:48        varchar         U       EXTERNAL_WIKI_URL\" type=\"varchar(200)\" nullable=\"true"
  - "doc/auto_update.md:36:104       classpath       U       load a SQL file from classpath in the following order"
  - "doc/debug.md:1:20           Intelli     U       Debug GitBucket on IntelliJ"
  - "doc/debug.md:3:63           buils       U       remote debugging to `buils.sbt`:"
  - "doc/directory.md:15:53          Servlet     U       substance of repository. GitServlet sees this directory"
  - "doc/directory.md:32:24          millis      U       * current time millis + random 10 alphanumeric"
  - "doc/directory.md:43:73          DATADIR     U       Dgitbucket.home=PATH_TO_DATADIR```)"
  - "doc/icons.svg:3:61          xlink           U       org/2000/svg\" xmlns:xlink=\"http://www.w3.org/"
  - "doc/icons.svg:13:145        linecap         U       width=\"0.781\" stroke-linecap=\"round\" stroke-linejoin"
  - "doc/icons.svg:13:168        linejoin        U       linecap=\"round\" stroke-linejoin=\"round\"/>"
  - "doc/icons.svg:716:153       miterlimit      U       width=\"1.392\" stroke-miterlimit=\"4.3\"/>"
  - "doc/licenses.md:5:124       osgi                    U       0.php ) | org.osgi # org.osgi.core # 4"
  - "doc/licenses.md:5:156       notextile               U       osgi.core # 4.3.1 | <notextile></notextile>"
  - "doc/licenses.md:6:75        googlecode              U       LICENSE-2.0.txt) | com.googlecode.javaewah # JavaEWAH"
  - "doc/licenses.md:6:86        javaewah                U       txt) | com.googlecode.javaewah # JavaEWAH # 1.1.6"
  - "doc/licenses.md:6:101       EWAH                    U       googlecode.javaewah # JavaEWAH # 1.1.6 | <notextile"
  - "doc/licenses.md:10:75       objenesis               U       LICENSE-2.0.txt) | org.objenesis # objenesis # 2.6 |"
  - "doc/licenses.md:20:101      stephenc                U       0.txt) | com.github.stephenc.jcip # jcip-annotations"
  - "doc/licenses.md:20:110      jcip                    U       com.github.stephenc.jcip # jcip-annotations"
  - "doc/licenses.md:21:94       kohlschutter            U       LICENSE-2.0.txt) | com.kohlschutter.junixsocket # junixsocket"
  - "doc/licenses.md:21:107      junixsocket             U       | com.kohlschutter.junixsocket # junixsocket-common"
  - "doc/licenses.md:23:91       typesafe                U       licenses/LICENSE-2.0) | com.typesafe # config # 1.3.3 |"
  - "doc/licenses.md:24:99       akka                    U       2.0) | com.typesafe.akka # akka-actor_2.12 #"
  - "doc/licenses.md:26:93       tagomor                 U       LICENSE-2.0.txt) | is.tagomor.woothee # woothee-java"
  - "doc/licenses.md:30:101      httpcomponents          U       0.txt) | org.apache.httpcomponents # httpclient # 4.5."
  - "doc/licenses.md:31:118      httpcore                U       apache.httpcomponents # httpcore # 4.4.10 | <notextile"
  - "doc/licenses.md:32:118      httpmime                U       apache.httpcomponents # httpmime # 4.5.3 | <notextile"
  - "doc/licenses.md:35:90       liquibase               U       licenses/LICENSE-2.0) | org.liquibase # liquibase-core #"
  - "doc/licenses.md:36:101      snakeyaml               U       0.txt) | org.yaml # snakeyaml # 1.18 | <notextile"
  - "doc/licenses.md:37:96       nimbusds                U       LICENSE-2.0.htmlâ€Ž) | com.nimbusds # oauth2-oidc-sdk #"
  - "doc/licenses.md:46:99       bouncycastle            U       licenses/LICENSE-1.1) | org.bouncycastle # bcpg-jdk15on # 1."
  - "doc/licenses.md:46:114      bcpg                    U       org.bouncycastle # bcpg-jdk15on # 1.60 | <notextile"
  - "doc/licenses.md:47:80       bkromhout               U       LICENSE-2.0) | com.github.bkromhout # java-diff-utils #"
  - "doc/licenses.md:52:89       scalap                  U       org.json4s # json4s-scalap_2.12 # 3.5.2 | <notextile"
  - "doc/licenses.md:55:107      enragedginger           U       LICENSE-2.0.txt) | com.enragedginger # akka-quartz-scheduler"
  - "doc/licenses.md:56:107      fasterxml               U       LICENSE-2.0.txt) | com.fasterxml.jackson.core # jackson"
  - "doc/licenses.md:58:140      databind                U       jackson.core # jackson-databind # 2.8.4 | <notextile"
  - "doc/licenses.md:60:119      findbugs                U       txt) | com.google.code.findbugs # jsr305 # 3.0.0 |"
  - "doc/licenses.md:63:107      zaxxer                  U       LICENSE-2.0.txt) | com.zaxxer # HikariCP # 3.2.0"
  - "doc/licenses.md:64:106      medsea                  U       LICENSE-2.0.txt) | eu.medsea.mimeutil # mime-util"
  - "doc/licenses.md:64:113      mimeutil                U       .0.txt) | eu.medsea.mimeutil # mime-util # 2.1.3"
  - "doc/licenses.md:67:107      bytebuddy               U       LICENSE-2.0.txt) | net.bytebuddy # byte-buddy # 1.9."
  - "doc/licenses.md:69:107      minidev                 U       LICENSE-2.0.txt) | net.minidev # accessors-smart #"
  - "doc/licenses.md:71:107      jetbrains               U       LICENSE-2.0.txt) | org.jetbrains # annotations # 15."
  - "doc/licenses.md:73:98       scalactic               U       licenses/LICENSE-2.0) | org.scalactic # scalactic_2.12 #"
  - "doc/licenses.md:81:106      compat                  U       modules # scala-java8-compat_2.12 # 0.8.0 | <notextile"
  - "doc/licenses.md:82:107      combinators             U       modules # scala-parser-combinators_2.12 # 1.0.6 | <notextile"
  - "doc/licenses.md:85:76       jgit                    U       null) | org.eclipse.jgit # org.eclipse.jgit"
  - "doc/licenses.md:88:83       hamcrest                U       bsd-license.php) | org.hamcrest # hamcrest-core # 1"
  - "doc/licenses.md:89:67       jcraft                  U       jsch/LICENSE.txt) | com.jcraft # jsch # 0.1.54 | <notextile"
  - "doc/licenses.md:89:76       jsch                    U       txt) | com.jcraft # jsch # 0.1.54 | <notextile"
  - "doc/licenses.md:90:77       jzlib                   U       txt) | com.jcraft # jzlib # 1.1.1 | <notextile"
  - "doc/licenses.md:92:70       reactivestreams         U       publicdomain/zero/1.0/) | org.reactivestreams # reactive-streams"
  - "doc/licenses.md:94:92       scijava                 U       publicdomain/zero/1.0/) | org.scijava # native-lib-loader"
  - "doc/licenses.md:97:86       jaxb                    U       | javax.xml.bind # jaxb-api # 2.3.0 | <notextile"
  - "doc/licenses.md:98:10       Classpath               U       GPL with Classpath Extension | [CDDL +"
  - "doc/licenses.md:102:106     mchange                 U       lgpl-2.1.html) | com.mchange # c3p0 # 0.9.5.2 |"
  - "doc/licenses.md:104:39      jdbc                    U       null) | org.mariadb.jdbc # mariadb-java-client"
  - "doc/licenses.md:105:55      rnorth                  U       licenses/MIT) | org.rnorth # tcp-unix-socket-proxy"
  - "doc/licenses.md:114:90      zafarkhaja              U       license.php) | com.github.zafarkhaja # java-semver # 0.9"
  - "doc/licenses.md:115:58      jsoup                   U       jsoup.org/license) | org.jsoup # jsoup # 1.10.2 |"
  - "doc/licenses.md:117:74      dimafeng                U       licenses/MIT) | com.dimafeng # testcontainers-scala"
  - "doc/licenses.md:118:90      coobird                 U       license.html) | net.coobird # thumbnailator # 0"
  - "doc/licenses.md:120:108     juniversalchardet       U       html) | com.googlecode.juniversalchardet # juniversalchardet"
  - "doc/licenses.md:121:31      Licence                 U       unrecognized | [Bouncy Castle Licence](http://www.bouncycastle"
  - "doc/licenses.md:121:103     bcpkix                  U       org.bouncycastle # bcpkix-jdk15on # 1.60 | <notextile"
  - "doc/licenses.md:122:103     bcprov                  U       org.bouncycastle # bcprov-jdk15on # 1.60 | <notextile"
  - "doc/licenses.md:125:55      thoughtworks            U       none specified) | com.thoughtworks.paranamer # paranamer"
  - "doc/licenses.md:125:68      paranamer               U       | com.thoughtworks.paranamer # paranamer # 2.8 |"
  - "doc/licenses.md:128:54      brouillard              U       none specified) | fr.brouillard.oss.security.xhub #"
  - "doc/release.md:41:58        sonatype    U       publish artifacts to the sonatype OSS repository:"
  - "doc/validation.md:28:139        fieldname       U       set to `span#error-<fieldname>`."
  - "project/plugins.sbt:9:41        scoverage       U       scoverage\" % \"sbt-scoverage\" % \"2.0.9\")"
  - "README.md:1:14          Gitter      U       GitBucket [![Gitter chat](https://badges"
  - "src/main/java/gitbucket/core/util/PatchUtil.java:89:17          lhrt    U       RawText lhrt = new RawText(lastHunk"
  - "src/main/java/JettyLauncher.java:162:36         KEYSTOREPATH            U       \" or GITBUCKET_KEYSTOREPATH environment variable"
  - "src/main/java/JettyLauncher.java:166:36         KEYSTOREPASSWORD        U       \" or GITBUCKET_KEYSTOREPASSWORD environment variable"
  - "src/main/java/JettyLauncher.java:170:36         KEYMANAGERPASSWORD      U       \" or GITBUCKET_KEYMANAGERPASSWORD environment variable"
  - "src/main/java/JettyLauncher.java:194:18         sess                    U       File sessDir = new File(getGitBucketHom"
  - "src/main/java/JettyLauncher.java:200:34         fsds                    U       FileSessionDataStore fsds = new FileSessionDataStore"
  - "src/main/java/org/postgresql/Driver2.java:11:25         JDBC    U       Wraps the PostgreSQL JDBC driver to convert the"
  - "src/main/scala/gitbucket/core/api/ApiPullRequest.scala:16:3         mergeable       U       mergeable: Option[Boolean],"
  - "src/main/scala/gitbucket/core/api/CreateARelease.scala:5:10         commitish       U       target_commitish: Option[String],"
  - "src/main/scala/gitbucket/core/controller/AccountController.scala:88:58          maxlength       U       name\", text(required, maxlength(100), identifier, uniqueUserN"
  - "src/main/scala/gitbucket/core/controller/AccountController.scala:208:5          ctype           U       ctype: WebHookContentType"
  - "src/main/scala/gitbucket/core/controller/AccountController.scala:327:73         noimage         U       getResourceAsStream(\"noimage.png\")"
  - "src/main/scala/gitbucket/core/controller/AccountController.scala:714:21         editgroup       U       get(\"/:groupName/_editgroup\")(managersOnly {"
  - "src/main/scala/gitbucket/core/controller/AccountController.scala:721:21         deletegroup     U       get(\"/:groupName/_deletegroup\")(managersOnly {"
  - "src/main/scala/gitbucket/core/controller/api/ApiGitReferenceControllerBase.scala:40:9           revstr      U       val revstr = multiParams(\"splat"
  - "src/main/scala/gitbucket/core/controller/api/ApiRepositoryCommitControllerBase.scala:49:13          revfilters      U       val revfilters = new ListBuffer[(RevFilter"
  - "src/main/scala/gitbucket/core/controller/api/ApiRepositoryContentsControllerBase.scala:8:39         Renderable      U       core.view.helpers.{isRenderable, renderMarkup}"
  - "src/main/scala/gitbucket/core/controller/ControllerBase.scala:149:68        mobilephone     U       smartphone\" || category == \"mobilephone\""
  - "src/main/scala/gitbucket/core/controller/ControllerBase.scala:231:51        nosniff         U       Content-Type-Options\", \"nosniff\")"
  - "src/main/scala/gitbucket/core/controller/ControllerBase.scala:305:51        Charsets        U       toString(in, StandardCharsets.UTF_8)"
  - "src/main/scala/gitbucket/core/controller/IndexController.scala:63:14        Oidc    U       case class OidcAuthContext(state: State"
  - "src/main/scala/gitbucket/core/controller/IndexController.scala:131:41       OIDC    U       authenticationRequest = createOIDCAuthenticationRequest"
  - "src/main/scala/gitbucket/core/controller/IssuesController.scala:383:40      customfield     U       owner/:repository/issues/customfield_validation/:fieldId"
  - "src/main/scala/gitbucket/core/controller/IssuesController.scala:412:36      batchedit       U       owner/:repository/issues/batchedit/state\")(writableUsersOnly"
  - "src/main/scala/gitbucket/core/controller/IssuesController.scala:502:66      octicon         U       isPullRequest) \"<i class='octicon octicon-git-pull-request"
  - "src/main/scala/gitbucket/core/controller/PullRequestsController.scala:219:41        mergeguide      U       repository/pull/:id/mergeguide\")(referrersOnly { repository"
  - "src/main/scala/gitbucket/core/controller/PullRequestsController.scala:567:46        mergecheck      U       repository/compare/*...*/mergecheck\")(readableUsersOnly"
  - "src/main/scala/gitbucket/core/controller/RepositorySettingsController.scala:182:9       protecteions    U       val protecteions = getProtectedBranchList"
  - "src/main/scala/gitbucket/core/controller/RepositorySettingsController.scala:475:37      deploykey       U       repository/settings/deploykey\")(ownerOnly { repository"
  - "src/main/scala/gitbucket/core/controller/RepositoryViewerController.scala:767:16        authed                  U       \"authed\" -> helper.html.datetimeago"
  - "src/main/scala/gitbucket/core/controller/RepositoryViewerController.scala:770:16        commited (committed)    U       \"commited\" -> blame.commitTime"
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:77:10       starttls    U       \"starttls\" -> trim(label(\"Enable"
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:77:42       STARTTLS    U       trim(label(\"Enable STARTTLS\", optional(boolean("
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:250:15      dbviewer    U       get(\"/admin/dbviewer\")(adminOnly {"
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:395:22      newuser     U       get(\"/admin/users/_newuser\")(adminOnly {"
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:414:32      edituser    U       admin/users/:userName/_edituser\")(adminOnly {"
  - "src/main/scala/gitbucket/core/controller/SystemSettingsController.scala:462:22      newgroup    U       get(\"/admin/users/_newgroup\")(adminOnly {"
  - "src/main/scala/gitbucket/core/controller/WikiController.scala:229:22        Gollum      U       WebHookGollumPayload(\"edited\", form"
  - "src/main/scala/gitbucket/core/model/AccountWebHook.scala:7:55           whct        U       WebHookContentType, String](whct => whct.code, code"
  - "src/main/scala/gitbucket/core/model/AccountWebHook.scala:14:45          CTYPE       U       WebHookContentType](\"CTYPE\")"
  - "src/main/scala/gitbucket/core/model/Profile.scala:7:24          Jdbc    U       val profile: BlockingJdbcProfile"
  - "src/main/scala/gitbucket/core/model/WebHook.scala:34:37         gollum      U       Gollum extends Event(\"gollum\")"
  - "src/main/scala/gitbucket/core/plugin/PluginRegistry.scala:92:7          renderable      U       def renderableExtensions: Seq[String"
  - "src/main/scala/gitbucket/core/service/AccountFederationService.scala:21:31          Fullname    U       param fullName Fullname (defaults to username"
  - "src/main/scala/gitbucket/core/service/AccountService.scala:253:35       devnull     U       mailAddress = groupName + \"@devnull\","
  - "src/main/scala/gitbucket/core/service/IssuesService.scala:680:31        unassignment    U       TODO Notify plugins of unassignment as doing in registerIssueAssi"
  - "src/main/scala/gitbucket/core/service/OpenIDConnectService.scala:217:6          HMAC    U       \"HMAC\" -> Family.HMAC_SHA"
  - "src/main/scala/gitbucket/core/service/ProtectedBranchService.scala:155:15       Successed       U       unSuccessedContexts(command.getNewId"
  - "src/main/scala/gitbucket/core/service/PullRequestService.scala:411:9        patchs      U       val patchs = positions.map { case"
  - "src/main/scala/gitbucket/core/service/RepositoryCreationService.scala:123:13        gitdir      U       val gitdir = getRepositoryDir(owner"
  - "src/main/scala/gitbucket/core/service/RepositoryCreationService.scala:268:44        wontfix     U       userName, repositoryName, \"wontfix\", \"ffffff\")"
  - "src/main/scala/gitbucket/core/service/RepositoryCreationService.scala:300:8         fccd        U       \"fccd29\""
  - "src/main/scala/gitbucket/core/service/RepositoryCreationService.scala:302:76        acacac      U       Some(\"Default.\"), \"acacac\")"
  - "src/main/scala/gitbucket/core/service/SystemSettingsService.scala:50:58         Starttls    U       props.setProperty(SmtpStarttls, x.toString))"
  - "src/main/scala/gitbucket/core/service/SystemSettingsService.scala:253:41        Proto       U       getHeader(\"X-Forwarded-Proto\"))"
  - "src/main/scala/gitbucket/core/service/WebHookService.scala:47:23        informations    U       /** get All WebHook informations of repository */"
  - "src/main/scala/gitbucket/core/service/WebHookService.scala:289:15       itcp            U       val itcp = new org.apache.http"
  - "src/main/scala/gitbucket/core/servlet/InitializeListener.scala:175:14       datasource      U       // Close datasource"
  - "src/main/scala/gitbucket/core/servlet/PluginAssetsServlet.scala:22:15       etag    U       val etag = s\"\"\"\"${info.pluginJar"
  - "src/main/scala/gitbucket/core/ssh/PublicKeyAuthenticator.scala:44:13        Publickey       U       extends PublickeyAuthenticator"
  - "src/main/scala/gitbucket/core/util/DatabaseConfig.scala:23:45       MVCC        U       jdbc:h2:${DatabaseHome};MVCC=true\""
  - "src/main/scala/gitbucket/core/util/DatabaseConfig.scala:59:12       liqui       U       lazy val liquiDriver: AbstractJdbcDatabase"
  - "src/main/scala/gitbucket/core/util/FileUtil.scala:11:20         Tika    U       val tika = new Tika()"
  - "src/main/scala/gitbucket/core/util/HttpClientUtil.scala:39:21       Inet    U       val ipAddress = InetAddress.getByName(address"
  - "src/main/scala/gitbucket/core/util/JDBCUtil.scala:194:46        FKTABLE     U       hildTableName = rs.getString(\"FKTABLE_NAME\").toUpperCase"
  - "src/main/scala/gitbucket/core/util/JDBCUtil.scala:215:21        tsort       U       val ordered = tsort(edges).toSeq"
  - "src/main/scala/gitbucket/core/util/JDBCUtil.scala:223:19        Preds       U       def tsort(toPreds: Map[A, Set[A]], done"
  - "src/main/scala/gitbucket/core/util/JGitUtil.scala:920:38        receivepack     U       setBoolean(\"http\", null, \"receivepack\", true)"
  - "src/main/scala/gitbucket/core/util/LDAPUtil.scala:165:46        JSSE        U       set the property that JSSE uses to identify"
  - "src/main/scala/gitbucket/core/util/LDAPUtil.scala:173:32        LDAPJSSE    U       new LDAPConnection(new LDAPJSSESecureSocketFactory("
  - "src/main/scala/gitbucket/core/util/StringUtil.scala:30:62       Hmac    U       getInstance(\"PBKDF2WithHmacSHA256\")"
  - "src/main/scala/gitbucket/core/util/TextAvatarUtil.scala:16:17       Blightness      U       private val bgBlightness = 0.73f"
  - "src/main/scala/gitbucket/core/view/helpers.scala:25:7           datetime        U       def datetime(date: Date): String"
  - "src/main/scala/gitbucket/core/view/helpers.scala:490:36         inlinediff      U       <table class=\\\"diff inlinediff\\\">\")"
  - "src/main/scala/gitbucket/core/view/helpers.scala:493:41         oldline         U       <th class=\"line-num oldline ${line.`type`}\">\"\"\""
  - "src/main/scala/gitbucket/core/view/Markdown.scala:120:18        listitem    U       override def listitem(text: String): String"
  - "src/main/twirl/gitbucket/core/account/creategroup.scala.html:7:38           groupform       U       gitbucket.core.account.html.groupform(None, members, false"
  - "src/main/twirl/gitbucket/core/account/edit.scala.html:55:45         uploadavatar    U       gitbucket.core.helper.html.uploadavatar(Some(account))"
  - "src/main/twirl/gitbucket/core/account/edit.scala.html:75:9          pwval           U       let pwval = $('#password').val"
  - "src/main/twirl/gitbucket/core/account/edithook.scala.html:8:35          edithookform    U       gitbucket.core.settings.html.edithookform("
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:32:29          sulphurpool     U       (\"atelier-sulphurpool-dark\", \"Atelier Sulphurpool"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:32:57          Sulphurpool     U       sulphurpool-dark\", \"Atelier Sulphurpool Dark\"),"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:36:21          hemisu          U       (\"hemisu-dark\", \"Hemisu Dark"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:36:36          Hemisu          U       (\"hemisu-dark\", \"Hemisu Dark\"),"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:54:32          iostream        U       \"\"\"#include <iostream>"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:59:24          cout            U       | cout << 'Hello world.' <"
  - "src/main/twirl/gitbucket/core/account/preferences.scala.html:59:50          endl            U       < 'Hello world.' << endl;"
  - "src/main/twirl/gitbucket/core/account/repositories.scala.html:13:39         repositoryicon      U       gitbucket.core.helper.html.repositoryicon(repository, true)"
  - "src/main/twirl/gitbucket/core/account/repositories.scala.html:28:78         datetimeago         U       gitbucket.core.helper.html.datetimeago(repository.repository"
  - "src/main/twirl/gitbucket/core/admin/dbviewer.scala.html:10:22       jstree      U       <li data-jstree='{\"icon\":\"@context.path"
  - "src/main/twirl/gitbucket/core/admin/dbviewer.scala.html:29:55       autorun     U       id=\"autorun\" name=\"autorun\"/> Auto Run Query"
  - "src/main/twirl/gitbucket/core/admin/dbviewer.scala.html:38:40       vakata      U       helpers.assets(\"/vendors/vakata-jstree-3.3.4/jstree"
  - "src/main/twirl/gitbucket/core/admin/dbviewer.scala.html:53:30       monokai     U       setTheme(\"ace/theme/monokai\");"
  - "src/main/twirl/gitbucket/core/dashboard/header.scala.html:10:37         checkicon       U       gitbucket.core.helper.html.checkicon(condition.visibility"
  - "src/main/twirl/gitbucket/core/dashboard/issues.scala.html:14:38         issuesnavi      U       core.dashboard.html.issuesnavi(\"issues\", filter, openCount"
  - "src/main/twirl/gitbucket/core/dashboard/issues.scala.html:15:38         issueslist      U       core.dashboard.html.issueslist(issues, page, openCount"
  - "src/main/twirl/gitbucket/core/dashboard/issueslist.scala.html:30:41         commitstatus    U       gitbucket.core.helper.html.commitstatus(commitId.get, summary"
  - "src/main/twirl/gitbucket/core/helper/account.scala.html:7:13        typeahead       U       $('#@id').typeahead({"
  - "src/main/twirl/gitbucket/core/helper/attached.scala.html:20:21          textcomplete        U       $('#@textareaId').textcomplete(["
  - "src/main/twirl/gitbucket/core/helper/attached.scala.html:92:6           Filesize            U       maxFilesize: @{context.settings"
  - "src/main/twirl/gitbucket/core/helper/attached.scala.html:95:112         uploadprogress      U       dz-upload\\\" data-dz-uploadprogress>Uploading your files"
  - "src/main/twirl/gitbucket/core/helper/commitcomments.scala.html:17:35        commitcomment       U       gitbucket.core.helper.html.commitcomment(comment, hasWritePermission"
  - "src/main/twirl/gitbucket/core/helper/copy.scala.html:21:86          tooptip     U       is displayed because tooptip width is narrow. *@"
  - "src/main/twirl/gitbucket/core/helper/datepicker.scala.html:9:15         datetimepicker      U       $('#@name').datetimepicker({"
  - "src/main/twirl/gitbucket/core/helper/diff.scala.html:155:63         jsdifflib       U       helpers.assets(\"/vendors/jsdifflib/difflib.js\")\"></script"
  - "src/main/twirl/gitbucket/core/helper/diff.scala.html:155:73         difflib         U       \"/vendors/jsdifflib/difflib.js\")\"></script>"
  - "src/main/twirl/gitbucket/core/helper/diff.scala.html:156:49         diffview        U       \"/vendors/jsdifflib/diffview.css\")\" type=\"text/css"
  - "src/main/twirl/gitbucket/core/helper/diff.scala.html:373:16         diffstat        U       table.find(\".diffstat\").text(add + del +"
  - "src/main/twirl/gitbucket/core/index.scala.html:40:32        signinform      U       gitbucket.core.html.signinform(context.settings)"
  - "src/main/twirl/gitbucket/core/issues/commentform.scala.html:2:3         reopenable      U       reopenable: Boolean,"
  - "src/main/twirl/gitbucket/core/issues/commentlist.scala.html:313:33      commitcomments      U       gitbucket.core.helper.html.commitcomments(comments, isManageable"
  - "src/main/twirl/gitbucket/core/issues/create.scala.html:35:39        issueinfo       U       gitbucket.core.issues.html.issueinfo("
  - "src/main/twirl/gitbucket/core/issues/issue.scala.html:57:37         commentlist     U       gitbucket.core.issues.html.commentlist(Some(issue), comments"
  - "src/main/twirl/gitbucket/core/issues/issue.scala.html:58:37         commentform     U       gitbucket.core.issues.html.commentform(issue, true, isEditable"
  - "src/main/twirl/gitbucket/core/issues/issueinfo.scala.html:1:27          scalasig        U       import org.json4s.scalap.scalasig.ClassFileParser.field"
  - "src/main/twirl/gitbucket/core/issues/issueinfo.scala.html:37:31         labellist       U       gitbucket.core.issues.html.labellist(issueLabels)"
  - "src/main/twirl/gitbucket/core/issues/labels/edit.scala.html:13:35       colorpicker     U       label-color-@labelId').colorpicker({format: \"hex\"});"
  - "src/main/twirl/gitbucket/core/issues/list.scala.html:44:33          listparts       U       gitbucket.core.issues.html.listparts(target, issues, page"
  - "src/main/twirl/gitbucket/core/main.scala.html:31:43         facebox     U       helpers.assets(\"/vendors/facebox/facebox.css\")\" rel="
  - "src/main/twirl/gitbucket/core/main.scala.html:59:62         adminlte    U       vendors/AdminLTE-2.4.2/js/adminlte.min.js\")\" type=\"text"
  - "src/main/twirl/gitbucket/core/menu.scala.html:113:54        closelabel      U       assets(\"/vendors/facebox/closelabel.png\")'"
  - "src/main/twirl/gitbucket/core/repo/blob.scala.html:41:35        branchcontrol       U       gitbucket.core.helper.html.branchcontrol(branch, repository,"
  - "src/main/twirl/gitbucket/core/repo/blob.scala.html:116:30       linenums            U       const pos = pre.find('ol.linenums').position();"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:54:34          dreamweaver     U       <option value=\"dreamweaver\">Dreamweaver</option"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:54:47          Dreamweaver     U       value=\"dreamweaver\">Dreamweaver</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:58:34          gruvbox         U       <option value=\"gruvbox\">Gruvbox</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:58:43          Gruvbox         U       option value=\"gruvbox\">Gruvbox</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:60:34          iplastic        U       <option value=\"iplastic\">Iplastic</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:60:44          Iplastic        U       option value=\"iplastic\">Iplastic</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:61:34          katzenmilch     U       <option value=\"katzenmilch\">Katzenmilch</option"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:61:47          Katzenmilch     U       value=\"katzenmilch\">Katzenmilch</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:63:34          kuroir          U       <option value=\"kuroir\">Kuroir</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:63:42          Kuroir          U       option value=\"kuroir\">Kuroir</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:64:34          merbivore       U       <option value=\"merbivore\">Merbivore</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:64:45          Merbivore       U       option value=\"merbivore\">Merbivore</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:66:52          Monokai         U       selected value=\"monokai\">Monokai</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:67:34          nord            U       <option value=\"nord_dark\">Nord Dark</option"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:67:45          Nord            U       option value=\"nord_dark\">Nord Dark</option>"
  - "src/main/twirl/gitbucket/core/repo/editor.scala.html:134:48         modelist        U       assets(\"/vendors/ace/ext-modelist.js\")\" type=\"text/javascript"
  - "src/main/twirl/gitbucket/core/settings/deploykey.scala.html:6:41        deploykeys      U       settings.html.menu(\"deploykeys\", repository){"
  - "src/main/twirl/gitbucket/core/settings/issues.scala.html:18:41          issuesfield     U       gitbucket.core.settings.html.issuesfield(customField)"
  - "src/test/scala/gitbucket/core/api/ApiIntegrationTest.scala:298:44       testref     U       createRef(\"refs/heads/testref\", sha1)"
  - "src/test/scala/gitbucket/core/api/ApiSpecModels.scala:33:17         octocat     U       userName = \"octocat\","
  - "src/test/scala/gitbucket/core/api/ApiSpecModels.scala:101:21        myboss      U       managers = Seq(\"myboss\")"
  - "src/test/scala/gitbucket/core/api/ApiSpecModels.scala:463:32        Njpy        U       id = \"MDM6UmVmOTM1MDc0NjpyZWZzL3RhZ3MvMS4w\","
  - "src/test/scala/gitbucket/core/api/ApiSpecModels.scala:768:22        VBRE        U       |\"content\":\"UkVBRE1F\","
  - "src/test/scala/gitbucket/core/GitBucketCoreModuleSpec.scala:38:32       mysqld      U       container.withCommand(\"mysqld --default-authentication"
  - "src/test/scala/gitbucket/core/model/CommitStateSpec.scala:14:49         peinding    U       includes FAILURE must eq peinding\") {"
  - "src/test/scala/gitbucket/core/service/MergeServiceSpec.scala:51:57          hoge        U       master\", \"test.txt\", \"hoge\")"
  - "src/test/scala/gitbucket/core/service/MergeServiceSpec.scala:56:13          Confrict    U       def createConfrict(git: Git) = {"
  - "src/test/scala/gitbucket/core/service/MergeServiceSpec.scala:152:48         fullname    U       eateAccount(\"dummy2\", \"dummy2-fullname\", \"dummy2@example.com"
  - "src/test/scala/gitbucket/core/service/ProtectedBranchServiceSpec.scala:73:73        fuga    U       branch2\", false, Seq(\"fuga\"))"
  - "src/test/scala/gitbucket/core/service/ServiceSpecBase.scala:168:49      baes    U       baseRepositoryName, baesBranch) = base.split"
  - "src/test/scala/gitbucket/core/util/EditorConfigUtilSpec.scala:20:11         subdir      U       val subdirInfo = EditorConfigUtil"
  - "src/test/scala/gitbucket/core/util/JGitUtilSpec.scala:289:53        finfo       U       git, branch, path).map(finfo => (finfo.name, finfo"
  - "src/test/scala/gitbucket/core/util/ValidationsSpec.scala:21:40          gghhii      U       validate(\"color\", \"#gghhii\", messages) == Some"
  - "src/test/scala/gitbucket/core/view/HelpersSpec.scala:45:37          metacharacters      U       properly escape html metacharacters\") {"
  - "src/test/scala/gitbucket/core/view/HelpersSpec.scala:57:43          metacharacter       U       link recognition at a metacharacter\") {"
  - "src/test/scala/gitbucket/core/view/HelpersSpec.scala:64:33          mple                U       before = \"http://exa\\\"mple.com\""
  - "src/test/scala/gitbucket/core/view/MarkdownSpec.scala:20:21         DÃ³nde       U       val before = \"DÃ³nde estarÃ¡ mi vida\""
  - "src/test/scala/gitbucket/core/view/MarkdownSpec.scala:20:27         estarÃ¡      U       val before = \"DÃ³nde estarÃ¡ mi vida\""
  - "src/test/scala/gitbucket/core/view/MarkdownSpec.scala:22:36         estara      U       after == \"do%cc%81nde-estara%cc%81-mi-vida\")"
