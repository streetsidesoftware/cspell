
Repository: wireapp/wire-webapp
Url: "https://github.com/wireapp/wire-webapp.git"
Args: ["src/script/**/*.{js,ts,tsx,md}"]
Lines:
 CSpell: Files checked: 1173, Issues found: 2757 in 636 files.
 exit code: 1
./src/script/Config.ts:83:31     - Unknown word (acces)      -- DataDog client api keys acces */
./src/script/E2EIdentity/E2EIdentityEnrollment.test.ts:132:33    - Unknown word (enrollement) -- should trigger an initial enrollement when device is a fresh
./src/script/E2EIdentity/E2EIdentityEnrollment.test.ts:138:73    - Unknown word (alreaady)    -- progress and device is alreaady enrolled', async ()
./src/script/E2EIdentity/E2EIdentityEnrollment.test.ts:72:14     - Unknown word (johndoe)    -- handle: 'johndoe',
./src/script/E2EIdentity/E2EIdentityEnrollment.ts:151:46    - Unknown word (enorollment) -- allow to snooze the enorollment if the client is still
./src/script/E2EIdentity/E2EIdentityEnrollment.ts:152:28    - Unknown word (snoozable)   -- await this.enroll({snoozable: !isFreshClient});
./src/script/E2EIdentity/E2EIdentityEnrollment.ts:203:46    - Unknown word (Snoozable)   -- computedFiringDate, isSnoozable} = getEnrollmentTimer
./src/script/E2EIdentity/E2EIdentityEnrollment.ts:218:112   - Unknown word (eidentity)   -- that just activated e2eidentity
./src/script/E2EIdentity/E2EIdentityEnrollment.ts:305:51    - Unknown word (keycloak)    -- cannot do silent login as keycloak refresh token extension
./src/script/E2EIdentity/OIDCService/OIDCService.ts:44:11     - Unknown word (dexio)      -- const dexioConfig: UserManagerSettings
./src/script/E2EIdentity/OIDCService/OIDCService.ts:68:9      - Unknown word (keyauth)    -- keyauth: {essential: true, value
./src/script/E2EIdentity/OIDCService/OauthEncryptedStore.ts:20:33     - Unknown word (bazinga)    -- Encoder, Decoder} from 'bazinga64';
./src/script/assets/AssetMapper.test.ts:20:64     - Unknown word (wireapp)    -- UserAssetType} from '@wireapp/api-client/lib/user
./src/script/assets/AssetMetaDataBuilder.ts:22:17     - Unknown word (MILLIS)     -- import {TIME_IN_MILLIS} from 'Util/TimeUtil
./src/script/assets/AssetMetaDataBuilder.ts:25:40     - Unknown word (Millis)     -- AudioMetadata = {durationInMillis: number; normalizedLoudness
./src/script/assets/AssetRepository.test.ts:180:19    - Unknown word (Qytx)       -- token: 'hYQytxHS6hSP6DlemD13uQ==&size
./src/script/assets/AssetRepository.test.ts:180:30    - Unknown word (Dlem)       -- token: 'hYQytxHS6hSP6DlemD13uQ==&size=100&q=test
./src/script/assets/AssetRepository.test.ts:21:26     - Unknown word (tsyringe)   -- import {container} from 'tsyringe';
./src/script/assets/AssetRepository.ts:179:59    - Unknown word (DECRPYT)    -- TransferState.DOWNLOAD_FAILED_DECRPYT);
./src/script/assets/AssetService.ts:38:35     - Unknown word (conv)       -- conversationIdParam = `&conv_id=${encodeURIComponent
./src/script/auth/component/AccountForm.tsx:254:9     - Unknown word (aligncenter) -- aligncenter
./src/script/auth/component/AccountForm.tsx:267:17    - Unknown word (privacypolicy) -- privacypolicy: (...chunks: string
./src/script/auth/component/ClientItem.tsx:129:38    - Unknown word (clazz)      -- formatName = (model: string, clazz: string): string | JSX
./src/script/auth/component/ClientItem.tsx:154:15    - Unknown word (Passwordless) -- const handlePasswordlessClientDeletion = (event
./src/script/auth/component/ClientList.tsx:74:15     - Unknown word (Acode)      -- const SFAcode = (await getLocalStorage
./src/script/auth/component/EntropyCanvas.tsx:24:12     - Unknown word (Pausable)   -- import {usePausableInterval} from '../.
./src/script/auth/component/ProgressBar.tsx:33:30     - Unknown word (progess)    -- data-uie-name="element-progess-bar"
./src/script/auth/configureStore.ts:27:12     - Unknown word (Logdown)    -- const reduxLogdown = require('redux-logdown
./src/script/auth/configureStore.ts:27:37     - Unknown word (logdown)    -- reduxLogdown = require('redux-logdown');
./src/script/auth/module/action/AuthAction.test.ts:39:22     - Unknown word (Cqhah)      -- 'Ntc8CsuNMeGFaRCqhah1dSyDFmNq6m8zL1R2h5TEtLQy
./src/script/auth/module/action/AuthAction.ts:44:60     - Unknown word (cryption)   -- error.message.includes('cryption is not available');
./src/script/auth/module/action/ConversationAction.ts:59:21     - Unknown word (passsword)  -- expected: passsword-required.
./src/script/auth/page/ConversationJoin.tsx:90:12     - Unknown word (Submiting)  -- const [isSubmitingName, setIsSubmitingName
./src/script/auth/page/EntropyContainer.test.tsx:28:9      - Unknown word (mockon)     -- const mockonSetEntropy = jest.fn
./src/script/auth/page/EntropyContainer.tsx:93:34     - Unknown word (subheadline) -- _(setEntropyStrings.subheadline)}
./src/script/auth/page/HistoryInfo.tsx:117:5     - Unknown word (Feching)    -- isFeching: ClientSelector.isFetching
./src/script/auth/page/Index.test.tsx:43:22     - Unknown word (mybrand)    -- BACKEND_NAME: 'mybrand',
./src/script/auth/page/SingleSignOn.tsx:47:54     - Unknown word (caculate)   -- indowPosition} from 'Util/DOM/caculateChildWindowPosition'
./src/script/auth/page/SingleSignOnForm.test.tsx:166:21    - Unknown word (clienttype) -- `${inputHost}&clienttype=permanent&sso_auto_login
./src/script/auth/page/SingleSignOnForm.tsx:260:30    - Unknown word (hanlded)    -- // error will be hanlded by opening modal
./src/script/auth/route.ts:50:15     - Unknown word (authuser)   -- AUTH_USER: 'authuser',
./src/script/auth/route.ts:72:21     - Unknown word (checkpassword) -- CHECK_PASSWORD: '/checkpassword',
./src/script/auth/route.ts:76:21     - Unknown word (createaccount) -- CREATE_ACCOUNT: '/createaccount',
./src/script/auth/route.ts:77:18     - Unknown word (createteam)    -- CREATE_TEAM: '/createteam',
./src/script/auth/route.ts:78:26     - Unknown word (createteamaccount) -- CREATE_TEAM_ACCOUNT: '/createteamaccount',
./src/script/auth/route.ts:80:19     - Unknown word (historyinfo)       -- HISTORY_INFO: '/historyinfo',
./src/script/auth/route.ts:82:21     - Unknown word (teaminvite)        -- INITIAL_INVITE: '/teaminvite',
./src/script/auth/route.ts:84:18     - Unknown word (phonelogin)        -- LOGIN_PHONE: '/phonelogin',
./src/script/auth/route.ts:85:23     - Unknown word (setaccounttype)    -- SET_ACCOUNT_TYPE: '/setaccounttype',
./src/script/auth/route.ts:86:16     - Unknown word (setemail)          -- SET_EMAIL: '/setemail',
./src/script/auth/route.ts:87:18     - Unknown word (setentropy)        -- SET_ENTROPY: '/setentropy',
./src/script/auth/route.ts:88:17     - Unknown word (sethandle)         -- SET_HANDLE: '/sethandle',
./src/script/auth/route.ts:89:19     - Unknown word (setpassword)       -- SET_PASSWORD: '/setpassword',
./src/script/auth/route.ts:91:24     - Unknown word (verifyemailcode)   -- VERIFY_EMAIL_CODE: '/verifyemailcode',
./src/script/auth/route.ts:92:24     - Unknown word (verifyemaillink)   -- VERIFY_EMAIL_LINK: '/verifyemaillink',
./src/script/auth/route.ts:93:24     - Unknown word (verifyphonecode)   -- VERIFY_PHONE_CODE: '/verifyphonecode',
./src/script/auth/util/__mocks__/SVGProvider.ts:20:7      - Unknown word (svgs)       -- const svgs: {[index: string]: Document
./src/script/auth/util/handleUtil.ts:20:22     - Unknown word (speakingurl) -- import getSlug from 'speakingurl';
./src/script/backup/BackUpHeader.ts:20:21     - Unknown word (libsodium)  -- import sodium from 'libsodium-wrappers';
./src/script/backup/BackUpHeader.ts:31:41     - Unknown word (WBUX)       -- ENCRYPTED_BACKUP_FORMAT = 'WBUX';
./src/script/backup/BackUpHeader.ts:46:20     - Unknown word (MEMLIMIT)   -- private readonly MEMLIMIT_INTERACTIVE_VALUE =
./src/script/backup/BackUpHeader.ts:47:20     - Unknown word (OPSLIMIT)   -- private readonly OPSLIMIT_INTERACTIVE_VALUE =
./src/script/backup/BackUpHeader.ts:69:55     - Unknown word (pwhash)     -- randombytes_buf(sodium.crypto_pwhash_SALTBYTES);
./src/script/backup/BackUpHeader.ts:69:62     - Unknown word (SALTBYTES)  -- sodium.crypto_pwhash_SALTBYTES);
./src/script/backup/BackupHeader.test.tsx:48:26     - Unknown word (opslimit)   -- expect(decodedHeader.opslimit).toBe(4);
./src/script/backup/BackupHeader.test.tsx:49:26     - Unknown word (memlimit)   -- expect(decodedHeader.memlimit).toBe(33554432);
./src/script/backup/BackupRepository.test.ts:244:20    - Unknown word (encrytion)  -- describe('Backup encrytion', () => {
./src/script/backup/BackupRepository.test.ts:47:3      - Unknown word (overwites)  -- overwites: {
./src/script/backup/BackupRepository.ts:20:13     - Unknown word (Dexie)      -- import type Dexie from 'dexie';
./src/script/backup/BackupRepository.ts:20:25     - Unknown word (dexie)      -- import type Dexie from 'dexie';
./src/script/backup/BackupService.ts:52:37     - Unknown word (verno)      -- this.storageService.db.verno;
./src/script/backup/zipWorker.ts:78:37     - Unknown word (secretstream) -- headerBytes = sodium.crypto_secretstream_xchacha20poly1305_HEADERBYTES
./src/script/backup/zipWorker.ts:78:50     - Unknown word (xchacha)      -- crypto_secretstream_xchacha20poly1305_HEADERBYTES
./src/script/backup/zipWorker.ts:78:68     - Unknown word (HEADERBYTES)  -- ecretstream_xchacha20poly1305_HEADERBYTES;
./src/script/calling/Call.ts:103:67    - Unknown word (ESTAB)      -- ANSWERED, CALL_STATE.MEDIA_ESTAB].includes(this.state
./src/script/calling/Call.ts:23:20     - Unknown word (CONV)       -- import {CALL_TYPE, CONV_TYPE, STATE as CALL
./src/script/calling/CallingRepository.test.ts:123:38    - Unknown word (senderdomain) -- senderUserId = {domain: 'senderdomain', id: 'senderid'};
./src/script/calling/CallingRepository.test.ts:123:58    - Unknown word (senderid)     -- senderdomain', id: 'senderid'};
./src/script/calling/CallingRepository.test.ts:251:17    - Unknown word (ONEONONE)     -- 'starts a ONEONONE call for proteus or
./src/script/calling/CallingRepository.test.ts:292:47    - Unknown word (subconversation) -- resolve(Core).service?.subconversation.subscribeToEpochUpdates
./src/script/calling/CallingRepository.test.ts:30:60     - Unknown word (Wcall)      -- CALL_STATE, REASON, Wcall} from '@wireapp/avs
./src/script/calling/CallingRepository.test.ts:426:24    - Unknown word (mediastream)     -- it('returns cached mediastream for self user if set
./src/script/calling/CallingRepository.test.ts:557:13    - Unknown word (audiocbr)        -- audiocbr: 'false',
./src/script/calling/CallingRepository.test.ts:558:13    - Unknown word (videosend)       -- videosend: 'false',
./src/script/calling/CallingRepository.test.ts:571:36    - Unknown word (SAVPF)           -- audio 9 UDP/TLS/RTP/SAVPF 111\r\n' +
./src/script/calling/CallingRepository.test.ts:573:16    - Unknown word (rtpmap)          -- 'a=rtpmap:111 opus/48000/2\r\n
./src/script/calling/CallingRepository.test.ts:574:34    - Unknown word (sprop)           -- a=fmtp:111 stereo=0;sprop-stereo=0;useinbandfec
./src/script/calling/CallingRepository.test.ts:574:49    - Unknown word (useinbandfec)    -- stereo=0;sprop-stereo=0;useinbandfec=1\r\n' +
./src/script/calling/CallingRepository.test.ts:578:44    - Unknown word (Snfvx)           -- 0746628 cname:p5CtZYSnfvxMinp\r\n' +
./src/script/calling/CallingRepository.test.ts:578:49    - Unknown word (Minp)            -- 28 cname:p5CtZYSnfvxMinp\r\n' +
./src/script/calling/CallingRepository.test.ts:580:20    - Unknown word (ufrag)           -- 'a=ice-ufrag:cnLOdLEowwh6PnM\r\n
./src/script/calling/CallingRepository.test.ts:580:32    - Unknown word (Eowwh)           -- 'a=ice-ufrag:cnLOdLEowwh6PnM\r\n' +
./src/script/calling/CallingRepository.test.ts:581:39    - Unknown word (TDNSB)           -- ice-pwd:li7K4QBbAX9RUKrTDNSBUcIRCIxEDHP\r\n' +
./src/script/calling/CallingRepository.test.ts:581:51    - Unknown word (EDHP)            -- QBbAX9RUKrTDNSBUcIRCIxEDHP\r\n' +
./src/script/calling/CallingRepository.test.ts:584:22    - Unknown word (actpass)         -- 'a=setup:actpass\r\n' +
./src/script/calling/CallingRepository.test.ts:586:103   - Unknown word (rport)           -- raddr 192.168.121.208 rport 9\r\n' +
./src/script/calling/CallingRepository.test.ts:586:81    - Unknown word (raddr)           -- .44 41175 typ srflx raddr 192.168.121.208 rport
./src/script/calling/CallingRepository.test.ts:595:33    - Unknown word (remb)            -- 'a=rtcp-fb:100 goog-remb\r\n' +
./src/script/calling/CallingRepository.test.ts:596:16    - Unknown word (extmap)          -- 'a=extmap:1 http://www.webrtc
./src/script/calling/CallingRepository.test.ts:610:32    - Unknown word (msid)            -- 'a=ssrc:4068473288 msid:U7GC2rpv2vK5m163DdYPHfZG
./src/script/calling/CallingRepository.test.ts:610:62    - Unknown word (Twekv)           -- rpv2vK5m163DdYPHfZG7TwekvApvrB 3ff0fc9b-c15f-
./src/script/calling/CallingRepository.test.ts:610:67    - Unknown word (Apvr)            -- vK5m163DdYPHfZG7TwekvApvrB 3ff0fc9b-c15f-9bee
./src/script/calling/CallingRepository.test.ts:611:32    - Unknown word (mslabel)         -- 'a=ssrc:4068473288 mslabel:U7GC2rpv2vK5m163DdYPHfZG
./src/script/calling/CallingRepository.test.ts:624:16    - Unknown word (sctpmap)         -- 'a=sctpmap:5000 webrtc-datachannel
./src/script/calling/CallingRepository.test.ts:624:29    - Unknown word (webrtc)          -- 'a=sctpmap:5000 webrtc-datachannel 16\r\n'
./src/script/calling/CallingRepository.test.ts:626:11    - Unknown word (sessid)          -- sessid: 'jEcO',
./src/script/calling/CallingRepository.test.ts:666:13    - Unknown word (Wuser)           -- let remoteWuser: number;
./src/script/calling/CallingRepository.test.ts:684:33    - Unknown word (clientid)        -- context, convId, userId, clientid, destUserId, destDeviceId
./src/script/calling/CallingRepository.test.ts:78:3      - Unknown word (screeninput) -- screeninput: ko.pureComputed(()
./src/script/calling/CallingRepository.test.ts:835:19    - Unknown word (readyh)          -- () => {}, // `readyh`,
./src/script/calling/CallingRepository.test.ts:836:18    - Unknown word (sendh)           -- sendMsg, // `sendh`,
./src/script/calling/CallingRepository.test.ts:837:18    - Unknown word (sfth)            -- () => 0, // `sfth`
./src/script/calling/CallingRepository.test.ts:838:19    - Unknown word (incomingh)       -- incoming, // `incomingh`,
./src/script/calling/CallingRepository.test.ts:839:19    - Unknown word (missedh)         -- () => {}, // `missedh`,
./src/script/calling/CallingRepository.test.ts:840:19    - Unknown word (answerh)         -- () => {}, // `answerh`,
./src/script/calling/CallingRepository.test.ts:841:19    - Unknown word (estabh)          -- () => {}, // `estabh`,
./src/script/calling/CallingRepository.test.ts:842:19    - Unknown word (closeh)          -- () => {}, // `closeh`,
./src/script/calling/CallingRepository.test.ts:843:19    - Unknown word (metricsh)        -- () => {}, // `metricsh`,
./src/script/calling/CallingRepository.test.ts:844:28    - Unknown word (reqh)            -- requestConfig, // `cfg_reqh`,
./src/script/calling/CallingRepository.test.ts:845:28    - Unknown word (acbrh)           -- => {}) as any, // `acbrh`,
./src/script/calling/CallingRepository.test.ts:846:19    - Unknown word (vstateh)         -- () => {}, // `vstateh`,
./src/script/calling/CallingRepository.ts:104:55    - Unknown word (userid)          -- Omit<WcallMember, 'userid'> & {userId: QualifiedId
./src/script/calling/CallingRepository.ts:1064:18   - Unknown word (aestab)          -- if (member.aestab === AUDIO_STATE.ESTABLISHED
./src/script/calling/CallingRepository.ts:1094:7    - Unknown word (convid)          -- convid: serializedConversationId
./src/script/calling/CallingRepository.ts:1218:70   - Unknown word (screensharing)   -- V preferences) when screensharing is activated
./src/script/calling/CallingRepository.ts:1376:47   - Unknown word (Recepients)      -- rtParticipantsToCallingMessageRecepients = (participants: Participant
./src/script/calling/CallingRepository.ts:1456:27   - Unknown word (NOONE)           -- if (reason === REASON.NOONE_JOINED || reason ==
./src/script/calling/CallingRepository.ts:1534:27   - Unknown word (ECONN)           -- case REASON.TIMEOUT_ECONN:
./src/script/calling/CallingRepository.ts:1640:102  - Unknown word (vrecv)           -- ?.videoState(member.vrecv));
./src/script/calling/CallingRepository.ts:1804:44   - Unknown word (wuser)           -- updateActiveSpeakers = (wuser: number, convId: string
./src/script/calling/CallingRepository.ts:1936:11   - Unknown word (Segmentations)   -- customSegmentations: Record<string, any
./src/script/calling/CallingRepository.ts:1944:11   - Unknown word (segmentations)   -- const segmentations = {
./src/script/calling/CallingRepository.ts:2003:68   - Unknown word (noopener)        -- target="_blank" rel="noopener noreferrer">`,
./src/script/calling/CallingRepository.ts:2003:77   - Unknown word (noreferrer)      -- blank" rel="noopener noreferrer">`,
./src/script/calling/CallingRepository.ts:256:55    - Unknown word (initialised)     -- ubconversationService was not initialised');
./src/script/calling/CallingRepository.ts:26:9      - Unknown word (Subconversation) -- import {SubconversationEpochInfoMember} from
./src/script/calling/CallingRepository.ts:428:32    - Unknown word (Conv)            -- wCall?.setClientsForConv(
./src/script/calling/CallingRepository.ts:47:3      - Unknown word (VSTREAMS)        -- VSTREAMS,
./src/script/calling/CallingRepository.ts:552:49    - Unknown word (Insertable)      -- browser supports WebRTC Insertable Streams
./src/script/calling/CallingRepository.ts:572:32    - Unknown word (Screensharing)   -- Runtime.isSupportingScreensharing();
./src/script/calling/CallingRepository.ts:682:30    - Unknown word (CONFKEY)         -- case CALL_MESSAGE_TYPE.CONFKEY: {
./src/script/calling/CallingRepository.ts:718:27    - Unknown word (Targetted)       -- const isSelfClientTargetted =
./src/script/calling/CallingRepository.ts:781:33    - Unknown word (CONFSTART)       -- event.content.type === 'CONFSTART'
./src/script/calling/CallingRepository.ts:899:14    - Unknown word (screenshare)     -- * Toggles screenshare ON and OFF for the given
./src/script/calling/CallingRepository.ts:901:9     - Unknown word (Screenshare)     -- toggleScreenshare = async (call: Call
./src/script/calling/CallingRepository.ts:929:46    - Unknown word (SCREENSHARE)     -- videoState(VIDEO_STATE.SCREENSHARE);
./src/script/calling/enum/CallMessageType.ts:23:15     - Unknown word (CONFEND)    -- CONF_END = 'CONFEND',
./src/script/calling/enum/CallMessageType.ts:25:18     - Unknown word (GROUPCHECK) -- GROUP_CHECK = 'GROUPCHECK',
./src/script/calling/enum/CallMessageType.ts:26:18     - Unknown word (GROUPLEAVE) -- GROUP_LEAVE = 'GROUPLEAVE',
./src/script/calling/enum/CallMessageType.ts:27:18     - Unknown word (GROUPSETUP) -- GROUP_SETUP = 'GROUPSETUP',
./src/script/calling/enum/CallMessageType.ts:28:18     - Unknown word (GROUPSTART) -- GROUP_START = 'GROUPSTART',
./src/script/calling/enum/CallMessageType.ts:30:16     - Unknown word (PROPSYNC)   -- PROP_SYNC = 'PROPSYNC',
./src/script/calling/enum/CallMessageType.ts:32:18     - Unknown word (REMOTEKICK) -- REMOTE_KICK = 'REMOTEKICK',
./src/script/calling/enum/CallMessageType.ts:33:18     - Unknown word (REMOTEMUTE) -- REMOTE_MUTE = 'REMOTEMUTE',
./src/script/calling/enum/LeaveCallReason.ts:27:42     - Unknown word (manualy)    -- CONVERSATION = 'user_manualy_left_conversation',
./src/script/calling/enum/LeaveCallReason.ts:27:8      - Unknown word (MANUALY)    -- USER_MANUALY_LEFT_CONVERSATION =
./src/script/client/ClientRepository.test.ts:169:38    - Unknown word (Respy)      -- as any).getEnv().allowRespy(true);
./src/script/client/ClientRepository.ts:26:8      - Unknown word (murmurhash) -- import murmurhash from 'murmurhash';
./src/script/client/clientMLSConfig.ts:33:16     - Unknown word (Ciphersuite) -- defaultCiphersuite: mlsConfig.config.defaultCiph
./src/script/client/clientMLSConfig.ts:34:9      - Unknown word (ciphersuites) -- ciphersuites: mlsConfig.config.allowedCiph
./src/script/components/AppContainer/hooks/useTheme.test.ts:31:75     - Unknown word (bodyclass)  -- body classes', (theme, bodyclass) => {
./src/script/components/Avatar/Avatar.test.tsx:63:11     - Unknown word (behaviour)  -- * This behaviour exists in the message
./src/script/components/Avatar/Avatar.tsx:41:23     - Unknown word (xxxs)       -- XXX_SMALL = 'avatar-xxxs',
./src/script/components/Avatar/GroupAvatar.test.tsx:33:25     - Unknown word (Senger)     -- user1.name('Spencer Senger');
./src/script/components/Avatar/GroupAvatar.test.tsx:34:17     - Unknown word (Tasia)      -- user2.name('Tasia Price');
./src/script/components/Conversation/Conversation.tsx:29:9      - Unknown word (Giphy)      -- import {Giphy} from 'Components/Giphy
./src/script/components/Conversation/Conversation.tsx:564:16    - Unknown word (giphy)      -- <Giphy giphyRepository={repositories
./src/script/components/Conversation/ReadOnlyConversationMessage/ReadOnlyConversationMessage.test.tsx:105:66    - Unknown word (pakages)    -- that don't have any key pakages available", () => {
./src/script/components/DragableClickWrapper.tsx:24:11     - Unknown word (Dragable)   -- interface DragableClickWrapperProps {
./src/script/components/DropFileArea/DropFileArea.test.tsx:28:22     - Unknown word (chucknorris) -- const pngFileName = 'chucknorris.png';
./src/script/components/FadingScrollbar/FadingScrollbar.tsx:30:3      - Unknown word (fadein)     -- fadein: {step: config.ANIMATION
./src/script/components/FadingScrollbar/FadingScrollbar.tsx:35:64     - Unknown word (thiselementdoesnotexist) -- document.createElement('thiselementdoesnotexist'));
./src/script/components/FadingScrollbar/FadingScrollbar.tsx:53:9      - Unknown word (inital)                  -- const initalColor = useRef<[number
./src/script/components/Giphy/Giphy.test.tsx:28:21     - Unknown word (Yammy)      -- const inputValue = 'Yammy yammy';
./src/script/components/Giphy/Giphy.test.tsx:28:27     - Unknown word (yammy)      -- inputValue = 'Yammy yammy';
./src/script/components/Giphy/Giphy.test.tsx:30:24     - Unknown word (Gifs)       -- giphyRepository: {getGifs: jest.fn().mockResolvedValue
./src/script/components/Giphy/Giphy.test.tsx:55:10     - Unknown word (giphys)     -- it('no giphys found', async () =>
./src/script/components/Giphy/Giphy.tsx:190:40    - Unknown word (giphs)      -- data-uie-name="do-open-giphs"
./src/script/components/Giphy/Giphy.tsx:34:7      - Unknown word (GIPHY)      -- const GIPHY_CLOSE_TIMEOUT = 350
./src/script/components/Giphy/Giphy.tsx:55:10     - Unknown word (gifs)       -- const [gifs, setGifs] = useState
./src/script/components/Image/Image.tsx:72:11     - Unknown word (Unmouted)   -- const isUnmouted = useRef(false);
./src/script/components/Image/Image.tsx:90:55     - Unknown word (umounted)   -- a component that is umounted
./src/script/components/InputBar/InputBar.tsx:269:26    - Unknown word (Replyable)  -- if (messageEntity?.isReplyable() && messageEntity
./src/script/components/InputBar/InputBar.tsx:619:41    - Unknown word (shrinked)   -- 'controls-right-shrinked': textValue.length
./src/script/components/InputBar/components/InputBarControls/ControlButtons.test.tsx:48:14     - Unknown word (Filesharing) -- [{disableFilesharing: true}, ['tooltipConversation
./src/script/components/InputBar/components/PastedFileControls.tsx:62:50     - Unknown word (noninteractive) -- next-line jsx-a11y/no-noninteractive-tabindex */}
./src/script/components/InputBar/components/TypingIndicator/TypingIndicator.styles.ts:71:18     - Unknown word (Frams)      -- const editIconKeyFrams = keyframes({
./src/script/components/MessagesList/Message/CallMessage.test.tsx:68:33     - Unknown word (incompleted) -- red hangup icon for incompleted calls', async () =>
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageActions.styles.ts:43:44     - Unknown word (Reactable)  -- messageActionsMenuButton = (isReactable = true): CSSObject
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageActions.tsx:50:14     - Unknown word (reactwith)  -- THUMBSUP: 'reactwith-thumbsup-messag',
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageActions.tsx:50:24     - Unknown word (thumbsup)   -- THUMBSUP: 'reactwith-thumbsup-messag',
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageActions.tsx:50:3      - Unknown word (THUMBSUP)   -- THUMBSUP: 'reactwith-thumbsup
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageActions.tsx:50:33     - Unknown word (messag)     -- 'reactwith-thumbsup-messag',
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageReactions/EmojiPicker.tsx:109:58    - Unknown word (naviage)    -- up/down arrow key to naviage between messages in
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageReactions/EmojiPill.tsx:110:16    - Unknown word (showmore)   -- start: '[showmore]',
./src/script/components/MessagesList/Message/ContentMessage/MessageActions/MessageReactions/MessageReactions.tsx:62:22     - Unknown word (POSX)       -- const [clientX, setPOSX] = useState(INITIAL
./src/script/components/MessagesList/Message/ContentMessage/Warnings/PartialFailureToSend/PartialFailureToSend.tsx:55:28     - Unknown word (Qulified)   -- parsedUsers, currentQulifiedId) => {
./src/script/components/MessagesList/Message/ContentMessage/asset/AudioAsset.tsx:140:55    - Unknown word (seekbar)    -- uie-name="status-audio-seekbar"
./src/script/components/MessagesList/Message/ContentMessage/asset/FileAssetComponent.tsx:132:40    - Unknown word (nocase)     -- li className="label-nocase-xs" data-uie-name="file
./src/script/components/MessagesList/Message/ContentMessage/asset/TextMessageRenderer/TextMessageRenderer.test.tsx:39:66     - Unknown word (correcly)   -- event of mention message correcly', () => {
./src/script/components/MessagesList/Message/ContentMessage/asset/TextMessageRenderer/TextMessageRenderer.test.tsx:41:177    - Unknown word (zinfra)     -- user-domain="staging.zinfra.io"><span class="mention
./src/script/components/MessagesList/Message/ContentMessage/asset/TextMessageRenderer/TextMessageRenderer.test.tsx:41:54     - Unknown word (buttton)    -- message-mention" role="buttton" data-uie-name="label
./src/script/components/MessagesList/Message/ContentMessage/asset/TextMessageRenderer/TextMessageRenderer.tsx:144:11    - Unknown word (clickabled) -- //clickabled elements directly.
./src/script/components/MessagesList/Message/DecryptErrorMessage.tsx:54:33     - Unknown word (sysmsg)     -- span className="icon-sysmsg-error text-red" />
./src/script/components/MessagesList/Message/FailedToAddUsersMessage.test.tsx:108:45    - Unknown word (Przemek)    -- createUser(qualifiedId3, 'Przemek');
./src/script/components/MessagesList/Message/FailedToAddUsersMessage.test.tsx:150:45    - Unknown word (Arjita)     -- createUser(qualifiedId2, 'Arjita');
./src/script/components/MessagesList/Message/FailedToAddUsersMessage.test.tsx:79:45     - Unknown word (Virgile)    -- createUser(qualifiedId1, 'Virgile');
./src/script/components/MessagesList/Message/FailedToAddUsersMessage.test.tsx:80:45     - Unknown word (Bardia)     -- createUser(qualifiedId2, 'Bardia');
./src/script/components/MessagesList/Message/FailedToAddUsersMessage.test.tsx:81:45     - Unknown word (Patryk)     -- createUser(qualifiedId3, 'Patryk');
./src/script/components/MessagesList/Message/LegalHoldMessage.test.tsx:41:34     - Unknown word (legalhold)  -- queryByTestId('status-legalhold-deactivated')).not.toBeNull
./src/script/components/MessagesList/Message/ReadReceiptStatus.test.tsx:54:30     - Unknown word (noone)      -- shows "delivered" when noone read the message',
./src/script/components/MessagesList/Message/SystemMessage/SystemMessage.test.tsx:31:35     - Unknown word (editicon)   -- span data-uie-name="editicon" className="editicon
./src/script/components/MessagesList/Message/SystemMessage/SystemMessage.test.tsx:34:35     - Unknown word (readicon)   -- span data-uie-name="readicon" className="readicon
./src/script/components/MessagesList/Message/SystemMessage/SystemMessage.test.tsx:37:35     - Unknown word (timericon)  -- span data-uie-name="timericon" className="timericon
./src/script/components/MessagesList/Message/SystemMessage/SystemMessage.tsx:26:32     - Unknown word (Finalisation) -- JoinedAfterMLSMigrationFinalisationMessage} from 'src/script
./src/script/components/MessagesList/Message/index.tsx:138:54    - Unknown word (mesages)    -- for non content type mesages
./src/script/components/MessagesList/MessageList.tsx:56:18     - Unknown word (convesation) -- invitePeople: (convesation: Conversation) => void
./src/script/components/MessagesList/utils/messagesFilter.ts:49:16     - Unknown word (Dont)       -- // Dont show duplicated group
./src/script/components/MessagesList/utils/messagesGroup.ts:79:29     - Unknown word (timeframe)  -- if it's sent within a timeframe (30 seconds) of the
./src/script/components/Modals/DetailViewModal/index.tsx:27:9      - Unknown word (Zoomable)   -- import {ZoomableImage} from 'Components
./src/script/components/Modals/InviteModal/InviteModal.test.tsx:32:21     - Unknown word (janek)      -- const userName = 'janek';
./src/script/components/Modals/LegalHoldModal/LegalHoldModal.tsx:204:25    - Unknown word (prekey)     -- response.last_prekey,
./src/script/components/Modals/PrimaryModal/PrimaryModal.tsx:305:31    - Unknown word (pswd)       -- id="modal_pswd"
./src/script/components/Modals/PrimaryModal/PrimaryModalState.tsx:54:42     - Unknown word (Moda)       -- rentModalContent: (nextCurrentModaContent: ModalContent
./src/script/components/ParticipantItemContent/ParticipantItemContent.tsx:112:26    - Unknown word (subline)    -- className="subline"
./src/script/components/PasswordGeneratorButton.test.tsx:41:68     - Unknown word (charachters) -- random password with 15 charachters when clicked', () =
./src/script/components/RichTextEditor/plugins/AutoFocusPlugin.tsx:47:13     - Unknown word (Pageup)     -- const isPageupDownKeyPressed = isPageUpDownK
./src/script/components/RichTextEditor/plugins/EmojiPickerPlugin/EmojiPickerPlugin.tsx:24:145    - Unknown word (typechecked) -- import it but since it's typechecked, we will be warned if
./src/script/components/RichTextEditor/plugins/EmojiPickerPlugin/EmojiPickerPlugin.tsx:94:7      - Unknown word (emojies)     -- const emojies: {n: string[]; u: string
./src/script/components/RichTextEditor/plugins/InlineEmojiReplacementPlugin/inlineReplacements.ts:199:22    - Unknown word (haha)       -- tags: ['happy', 'haha'],
./src/script/components/RichTextEditor/plugins/TypeaheadMenuPlugin.tsx:24:56     - Unknown word (instanciated) -- when the component is instanciated (the last one by default
./src/script/components/TitleBar/TitleBar.tsx:39:15     - Unknown word (Identifer)  -- import {StringIdentifer, t} from 'Util/LocalizerUtil
./src/script/components/UserList/components/UserListItem/UserListItem.tsx:30:9      - Unknown word (Userlist)   -- import {UserlistMode} from 'Components
./src/script/components/calling/CallParticipantsListItem/CallParticipantItemContent/CallParticipantItemContent.tsx:77:30     - Unknown word (UNFOCUSABLE) -- tabIndex={TabIndex.UNFOCUSABLE}
./src/script/components/calling/CallParticipantsListItem/CallParticipantsListItem.test.tsx:152:54    - Unknown word (unestablishd) -- text if user is in unestablishd audio state', () =>
./src/script/components/calling/DetachedCallingCell/DetachedCallingFeature.state.ts:20:23     - Unknown word (zustand)    -- import {create} from 'zustand';
./src/script/components/calling/FullscreenVideoCall.styles.ts:37:52     - Unknown word (inversed)   -- accent-color-highlight-inversed);
./src/script/components/calling/FullscreenVideoCall.tsx:165:22    - Unknown word (Callaudio)  -- label: t('videoCallaudioInputMicrophone'),
./src/script/components/calling/FullscreenVideoCall.tsx:220:20    - Unknown word (Callbackground) -- label: t('videoCallbackgroundBlurHeadline'),
./src/script/components/calling/FullscreenVideoCall.tsx:240:22    - Unknown word (Callvideo)      -- label: t('videoCallvideoInputCamera'),
./src/script/components/calling/FullscreenVideoCall.tsx:61:10     - Unknown word (bluroff)    -- OFF = 'bluroff',
./src/script/components/calling/FullscreenVideoCall.tsx:62:9      - Unknown word (bluron)     -- ON = 'bluron',
./src/script/components/calling/GroupVideoGrid.test.tsx:49:28     - Unknown word (Anot)       -- participant.user.name('Anot Heruser');
./src/script/components/calling/GroupVideoGrid.test.tsx:49:33     - Unknown word (Heruser)    -- participant.user.name('Anot Heruser');
./src/script/components/calling/GroupVideoGrid.tsx:148:76    - Unknown word (xsmall)     -- fontSize: 'var(--font-size-xsmall)', fontWeight: 500}
./src/script/components/panel/ConversationProtocolDetails/ConversationProtocolDetails.test.tsx:30:40     - Unknown word (DHKEMP)     -- Ciphersuite.MLS_128_DHKEMP256_AES128GCM_SHA256
./src/script/components/utils/InViewport.tsx:22:9      - Unknown word (overlayed)  -- import {overlayedObserver} from 'Util
./src/script/conversation/ConversationAccessPermission.ts:138:53    - Unknown word (sigfigs)    -- feature with the correct sigfigs
./src/script/conversation/ConversationFilter.test.ts:66:16     - Unknown word (Florian)    -- name: 'Florian@Staging11',
./src/script/conversation/ConversationLabelRepository.ts:117:12    - Unknown word (unmarshal)  -- readonly unmarshal = (labelJson: LabelProperty
./src/script/conversation/ConversationLabelRepository.ts:84:88     - Unknown word (favorited)  -- type: 'conversation-favorited'}> {
./src/script/conversation/ConversationMapper.test.ts:59:25     - Unknown word (Emtpy)      -- const functionCallEmtpyArray = () => ConversationMapp
./src/script/conversation/ConversationRepository.test.ts:1072:9    - Unknown word (deos)       -- it('deos not mark mls 1:1 conversation
./src/script/conversation/ConversationRepository.test.ts:1300:34   - Unknown word (Gregor)     -- b.name('René, Benny, Gregor, Lipis');
./src/script/conversation/ConversationRepository.test.ts:1300:42   - Unknown word (Lipis)      -- René, Benny, Gregor, Lipis');
./src/script/conversation/ConversationRepository.test.ts:1573:18   - Unknown word (initialise) -- it('should initialise mls 1:1 conversation
./src/script/conversation/ConversationRepository.test.ts:1731:42   - Unknown word (msdownload) -- type: 'application/x-msdownload',
./src/script/conversation/ConversationRepository.test.ts:2999:97   - Unknown word (atively)    -- to mls if we're not atively participating in a call
./src/script/conversation/ConversationRepository.test.ts:830:80    - Unknown word (testt)      -- dk03f38414', domain: 'testt-domain'};
./src/script/conversation/ConversationRepository.test.ts:836:59    - Unknown word (kfbe)       -- ca-a495asd47a8-ac70-9kfbe924b2d0', domain: 'testt
./src/script/conversation/ConversationRepository.test.ts:940:102   - Unknown word (choosen)    -- even when proteus is choosen.', async () => {
./src/script/conversation/ConversationRepository.ts:1276:19   - Unknown word (unarchived)   -- * Get the next unarchived conversation.
./src/script/conversation/ConversationRepository.ts:1338:36   - Unknown word (initialisation) -- mls 1:1 conversation initialisation is triggered by some
./src/script/conversation/ConversationRepository.ts:1778:23   - Unknown word (Initialising)   -- this.logger.info(`Initialising MLS 1:1 conversation
./src/script/conversation/ConversationRepository.ts:1812:58   - Unknown word (conversaiton)   -- was previously active conversaiton, we want to make mls
./src/script/conversation/ConversationRepository.ts:184:6     - Unknown word (Conversaiton) -- type ConversaitonWithServiceParams =
./src/script/conversation/ConversationRepository.ts:1925:85   - Unknown word (initialising)   -- from backend before initialising the conversation
./src/script/conversation/ConversationRepository.ts:2087:16   - Unknown word (inccessible)    -- for (const inccessibleConversation of not_found
./src/script/conversation/ConversationRepository.ts:231:46    - Unknown word (agains)       -- client mismatch handler agains the message repository
./src/script/conversation/ConversationRepository.ts:2547:32   - Unknown word (corecrypto)     -- MLS conversation in corecrypto and deletes the conversation
./src/script/conversation/ConversationRepository.ts:2680:117  - Unknown word (ciphersuite)    -- new fields (groupId, ciphersuite, epoch and new protocol
./src/script/conversation/ConversationRepository.ts:3815:14   - Unknown word (Unarchived)     -- const wasUnarchived = previouslyArchived
./src/script/conversation/ConversationRepository.ts:453:9     - Unknown word (teamid)       -- teamid: this.teamState.team
./src/script/conversation/ConversationRepository.ts:562:75    - Unknown word (metat)        -- users & conversations metat data`, error);
./src/script/conversation/ConversationRepository.ts:58:18     - Unknown word (Protobuf)   -- import {Asset as ProtobufAsset, Confirmation,
./src/script/conversation/ConversationRepository.ts:653:10    - Unknown word (Converstions) -- localConverstions: ConversationDatabaseData
./src/script/conversation/ConversationRepository.ts:661:53    - Unknown word (refetched)    -- proteus 1:1 (so it's never refetched) conversation and remove
./src/script/conversation/ConversationState.test.ts:37:29     - Unknown word (groupid)    -- conversation.groupId = `groupid-${randomUUID()}`;
./src/script/conversation/EventMapper.test.ts:115:27    - Unknown word (ugpawm)     -- token: 'aV0TGxF3ugpawm3wAYPmew==',
./src/script/conversation/EventMapper.test.ts:115:37    - Unknown word (Pmew)       -- 'aV0TGxF3ugpawm3wAYPmew==',
./src/script/conversation/MessageRepository.test.ts:283:9     - Unknown word (unverifies) -- it('unverifies device if fingerprint
./src/script/conversation/MessageRepository.test.ts:57:28     - Unknown word (selfid)     -- selfUser = new User('selfid', '');
./src/script/conversation/MessageRepository.ts:1405:41   - Unknown word (countly)     -- message to backend to sync countly id across other clients
./src/script/conversation/MessageRepository.ts:1407:23   - Unknown word (Countly)     -- * @param countlyId Countly new ID
./src/script/conversation/MessageRepository.ts:354:24    - Unknown word (explicitely) -- // We set the id explicitely in order to be able
./src/script/conversation/MessageRepository.ts:501:34    - Unknown word (messsage)    -- originalId Id of the messsage currently in db, necessary
./src/script/conversation/MessageRepository.ts:522:27    - Unknown word (Remotedata)  -- await this.sendAssetRemotedata(conversation, file,
./src/script/conversation/MessageRepository.ts:895:12    - Unknown word (unverify)    -- // unverify the client entity in
./src/script/conversation/linkPreviews/blackList.test.ts:23:18     - Unknown word (youtu)      -- it('blacklists youtu.be links', () => {
./src/script/conversation/linkPreviews/blackList.ts:42:4      - Unknown word (soundcloud) -- `soundcloud.com/(?!${soundCloudStatic
./src/script/conversation/linkPreviews/helpers.test.ts:79:11     - Unknown word (ticksception) -- const ticksception = "cool code: ```\nwire
./src/script/conversation/linkPreviews/helpers.ts:20:22     - Unknown word (linkify)    -- import Linkify from 'linkify-it';
./src/script/conversation/linkPreviews/helpers.ts:20:8      - Unknown word (Linkify)    -- import Linkify from 'linkify-it';
./src/script/conversation/linkPreviews/index.ts:22:11     - Unknown word (Arrayify)   -- import {deArrayify} from 'Util/ArrayUtil
./src/script/conversation/linkPreviews/index.ts:41:3      - Unknown word (permanant)  -- permanantUrl: string;
./src/script/cryptography/CryptographyRepository.ts:31:3      - Unknown word (enckey)     -- enckey: string;
./src/script/cryptography/CryptographyRepository.ts:32:3      - Unknown word (mackey)     -- mackey: string;
./src/script/entity/Conversation.test.ts:151:40    - Unknown word (exisiting)  -- add message with an exisiting id', () => {
./src/script/entity/Conversation.test.ts:492:29    - Unknown word (Delson)     -- third_user.name('Brad Delson');
./src/script/entity/Conversation.test.ts:678:39    - Unknown word (TSFI)       -- Federation @SF.Separation @TSFI.UserInterface @S0.2
./src/script/entity/Conversation.test.ts:681:60    - Unknown word (otherdomain) -- Conversation(createUuid(), 'otherdomain.test');
./src/script/entity/Conversation.ts:143:21    - Unknown word (Leavable)   -- public readonly isLeavable: ko.PureComputed<boolean
./src/script/entity/User/User.ts:122:16    - Unknown word (scim)       -- SCIM: 'scim',
./src/script/entity/User/User.ts:122:9     - Unknown word (SCIM)       -- SCIM: 'scim',
./src/script/entity/message/LegalHoldMessage.ts:35:33     - Unknown word (LEGALHOLD)  -- super_type = SuperType.LEGALHOLD;
./src/script/entity/message/Message.ts:309:29    - Unknown word (undecryptable) -- Check if message is an undecryptable message.
./src/script/event/EventRepository.ts:130:26    - Unknown word (Connectivitity) -- private readonly updateConnectivitityStatus = (state: ConnectionSta
./src/script/event/EventRepository.ts:393:17    - Unknown word (Outated)        -- 208, // Outated event decyption error
./src/script/event/EventRepository.ts:393:31    - Unknown word (decyption)      -- 8, // Outated event decyption error (see https://github
./src/script/event/preprocessor/EventStorageMiddleware/EventStorageMiddleware.ts:103:21    - Unknown word (Partof)     -- const usersNotPartofConversation = qualifiedUserId
./src/script/event/preprocessor/ReceiptsMiddleware.test.ts:63:13     - Unknown word (originale)  -- const originaleEvent = {from: createUuid
./src/script/extension/GiphyRepository.test.ts:29:18     - Unknown word (downsampled) -- fixed_height_downsampled_height: '200',
./src/script/extension/GiphyRepository.test.ts:43:14     - Unknown word (Ficoab)      -- id: 'GKLmFicoabZrW',
./src/script/externalRoute.ts:84:13     - Unknown word (Personnal)  -- termsOfUsePersonnal: getTermsOfUsePersonalUrl
./src/script/guards/Protocol.ts:21:28     - Unknown word (MLSE)       -- {FeatureMLS, FeatureMLSE2EId} from '@wireapp
./src/script/hooks/usePushToTalk/usePushToTalk.test.ts:25:7      - Unknown word (unmutes)    -- it('unmutes if key was pressed when
./src/script/hooks/useRelativeTimestamp.tsx:67:10     - Unknown word (timeago)    -- const [timeago, setTimeago] = useState
./src/script/hooks/useRelativeTimestamp.tsx:67:22     - Unknown word (Timeago)    -- const [timeago, setTimeago] = useState<string>
./src/script/hooks/useSingleInstance.test.ts:32:30     - Unknown word (Intance)    -- result: {current: firstIntance},
./src/script/integration/ServiceTag.ts:34:3      - Unknown word (LIFETSTYLE) -- LIFETSTYLE = 'lifestyle',
./src/script/main/app.ts:91:89     - Unknown word (Finaliser)  -- MLSMigration/migrationFinaliser';
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:140:6     - Unknown word (Assiging)      -- // Assiging the segmentation mask
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:20:38     - Unknown word (mediapipe)  -- ImageSegmenterResult} from '@mediapipe/tasks-vision';
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:25:46     - Unknown word (glsl)       -- from './fragmentShader.glsl';
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:36:3      - Unknown word (texcoord)   -- texcoord: number;
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:47:3      - Unknown word (textcoord)  -- textcoord: WebGLBuffer | null
./src/script/media/BackgroundBlurrer/BackgroundBlurrer.ts:84:56     - Unknown word (reprensenting) -- points of the 2 triangles reprensenting the rectangle we want
./src/script/media/BackgroundBlurrer/index.ts:20:28     - Unknown word (Blurrer)    -- * from './BackgroundBlurrer';
./src/script/media/MediaDevicesHandler.test.ts:219:41    - Unknown word (newcamera)       -- newCameras = [{deviceId: 'newcamera', kind: MediaDeviceType
./src/script/media/MediaDevicesHandler.test.ts:24:54     - Unknown word (nolegacy)   -- MediaDevicesHandler --nolegacy */
./src/script/media/MediaDevicesHandler.test.ts:267:53    - Unknown word (inexistant)      -- currentDeviceId.audiooutput('inexistant-id');
./src/script/media/MediaDevicesHandler.test.ts:29:27     - Unknown word (Realtek)    -- Laptop microphone (Realtek High Definition Audio
./src/script/media/MediaDevicesHandler.test.ts:63:17     - Unknown word (Microphonearray) -- label: 'Microphonearray (Realtek High Definition
./src/script/media/MediaDevicesHandler.ts:90:9      - Unknown word (windowinput) -- windowinput: 'window',
./src/script/media/MediaEmbeds.test.ts:52:14     - Unknown word (Soundcloud) -- const buildSoundcloudIframeForTracks = (link
./src/script/media/MediaEmbeds.test.ts:544:60    - Unknown word (Wroxrr)     -- 867741/playlist/2w63WroxrrIbNg4WIxdoBn';
./src/script/media/MediaEmbeds.test.ts:544:72    - Unknown word (Ixdo)       -- playlist/2w63WroxrrIbNg4WIxdoBn';
./src/script/media/MediaEmbeds.test.ts:574:50    - Unknown word (OUNUCO)     -- 'album/7iN0r7Sl624EkOUNUCOGu9';
./src/script/media/MediaEmbeds.test.ts:605:42    - Unknown word (Djbbz)      -- partial_link = 'track/5yEPxDjbbzUzyauGtnmVEC';
./src/script/media/MediaEmbeds.test.ts:605:47    - Unknown word (Uzyau)      -- link = 'track/5yEPxDjbbzUzyauGtnmVEC';
./src/script/media/MediaEmbeds.test.ts:605:52    - Unknown word (Gtnm)       -- track/5yEPxDjbbzUzyauGtnmVEC';
./src/script/media/MediaEmbeds.ts:116:23    - Unknown word (enablejsapi) -- searchParams.set('enablejsapi', '0');
./src/script/media/MediaEmbeds.ts:117:23    - Unknown word (modestbranding) -- searchParams.set('modestbranding', '1');
./src/script/media/MediaEmbeds.ts:132:26    - Unknown word (showinfo)       -- searchParams.delete('showinfo');
./src/script/media/MediaEmbeds.ts:170:54    - Unknown word (mbed)           -- com\/\S*(?:(?:\/e(?:mbed))?\/|watch\/?\?(?:\S
./src/script/media/VideoBackgroundBlur.ts:20:25     - Unknown word (Fileset)    -- import {ImageSegmenter, FilesetResolver} from '@mediapipe
./src/script/media/VideoBackgroundBlur.ts:25:208    - Unknown word (yeild)      -- for performance and yeild rather good results
./src/script/media/VideoBackgroundBlur.ts:26:61     - Unknown word (tflite)     -- models/selfie_segmenter.tflite',
./src/script/mls/MLSMigration/MLSMigration.ts:55:11     - Unknown word (Initialise) -- interface InitialiseMLSMigrationFlowParams
./src/script/mls/MLSMigration/migrationFinaliser/joinConversationsAfterMigrationFinalisation/joinConversationsAfterMigrationFinalisation.test.ts:74:10     - Unknown word (siema)      -- name: 'siema siema',
./src/script/mls/MLSMigration/migrationFinaliser/joinConversationsAfterMigrationFinalisation/joinConversationsAfterMigrationFinalisation.ts:31:105    - Unknown word (insterting) -- we would join without insterting the system message.
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.test.ts:29:9      - Unknown word (finalise)   -- import {finaliseMigrationOfMixedConversations
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:38:14     - Unknown word (Conversatons) -- const mixedConversatons = conversations.filter
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:40:98     - Unknown word (finalised)    -- they are ready to be finalised...`,
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:53:12     - Unknown word (Finalise)     -- onReadyToFinalise: (mixedConversation
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:56:20     - Unknown word (Finalised)    -- const isMigrationFinalised = migrationStatus =
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:56:71     - Unknown word (FINALISED)    -- MLSMigrationStatus.FINALISED;
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:59:103    - Unknown word (finalising)   -- finalise the migration, finalising...`);
./src/script/mls/MLSMigration/migrationFinaliser/migrationFinaliser.ts:74:28     - Unknown word (Finalising)   -- mlsMigrationLogger.info(`Finalising migration of mixed conversati
./src/script/mls/MLSMigration/migrationInitialiser/index.ts:20:27     - Unknown word (Initialiser) -- export * from './migrationInitialiser';
./src/script/notification/PreferenceNotificationRepository.ts:104:11    - Unknown word (prio)       -- const prio = (item: GroupedNotifications
./src/script/page/AppLock/AppLock.test.tsx:29:18     - Unknown word (APPLOCK)    -- import {AppLock, APPLOCK_STATE} from './AppLock
./src/script/page/AppLock/AppLock.test.tsx:58:5      - Unknown word (applock)    -- applock: {
./src/script/page/AppLock/AppLock.tsx:321:50    - Unknown word (charnumber) -- passcode-validation-charnumber"
./src/script/page/AppLock/AppLock.tsx:355:50    - Unknown word (specialchar) -- passcode-validation-specialchar"
./src/script/page/LeftSidebar/LeftSidebar.tsx:32:53     - Unknown word (Temporaty)  -- Conversations} from './panels/TemporatyGuestConversations';
./src/script/page/MainContent/panels/Collection/Collection.tsx:108:39    - Unknown word (converation) -- message from a different converation, nothing to do
./src/script/page/MainContent/panels/Collection/Collection.tsx:202:28    - Unknown word (fullsearch)  -- aria-label={t('fullsearchCancelLabel')}
./src/script/page/MainContent/panels/preferences/DevicesPreferences/components/E2EICertificateDetails/E2EICertificateDetails.test.tsx:74:13     - Unknown word (idicates)   -- describe('idicates the state of the e2ei
./src/script/page/MainContent/panels/preferences/accountPreferences/DataUsageSection.tsx:59:49     - Unknown word (COUNTLY)    -- !Config.getConfig().COUNTLY_API_KEY;
./src/script/page/RightSidebar/MessageDetails/MessageDetails.test.tsx:72:27     - Unknown word (Kowalski)   -- const userName = 'Jan Kowalski';
./src/script/page/RightSidebar/Notifications/Notifications.test.tsx:61:41     - Unknown word (ative)      -- correct new value on the ative conversation', () =
./src/script/page/RightSidebar/PanelHeader/PanelHeader.tsx:72:77     - Unknown word (libray)     -- transition group animation libray
./src/script/page/components/FeatureConfigChange/FeatureConfigChangeNotifier/FeatureConfigChangeNotifier.test.tsx:101:101   - Unknown word (dlpath)     -- enforcedDownloadLocation: 'dlpath'}}),
./src/script/page/components/FeatureConfigChange/FeatureConfigChangeNotifier/FeatureConfigChangeNotifier.ts:87:47     - Unknown word (Applock)    -- featureConfigChangeModalApplock'),
./src/script/search/FullTextSearch.ts:24:18     - Unknown word (gumi)       -- const flags = 'gumi';
./src/script/search/SearchRepository.test.ts:131:13    - Unknown word (smily)          -- const smilyFelix = createUser('smily
./src/script/search/SearchRepository.test.ts:150:13    - Unknown word (notmatching)    -- const notmatching1 = createUser('notix
./src/script/search/SearchRepository.test.ts:150:40    - Unknown word (notix)          -- notmatching1 = createUser('notix', 'Felix');
./src/script/search/SearchRepository.test.ts:207:69    - Unknown word (notfelix)       -- felix'), createUser('notfelix', 'notfelix')];
./src/script/search/SearchRepository.test.ts:42:32     - Unknown word (jesuissabine) -- sabine = createUser('jesuissabine', 'Sabine Duchemin'
./src/script/search/SearchRepository.test.ts:42:55     - Unknown word (Duchemin)     -- jesuissabine', 'Sabine Duchemin');
./src/script/search/SearchRepository.test.ts:43:32     - Unknown word (yosoyjanina)  -- janina = createUser('yosoyjanina', 'Janina Felix');
./src/script/search/SearchRepository.test.ts:44:11     - Unknown word (felixa)       -- const felixa = createUser('iamfelix
./src/script/search/SearchRepository.test.ts:44:32     - Unknown word (iamfelix)     -- felixa = createUser('iamfelix', 'Felix Abo');
./src/script/search/SearchRepository.test.ts:45:49     - Unknown word (Oulala)       -- createUser('iamfelix', 'Felix Oulala');
./src/script/search/SearchRepository.test.ts:46:11     - Unknown word (felicien)     -- const felicien = createUser('ichbinfelicien
./src/script/search/SearchRepository.test.ts:46:34     - Unknown word (ichbinfelicien) -- felicien = createUser('ichbinfelicien', 'Felicien Delatour
./src/script/search/SearchRepository.test.ts:46:52     - Unknown word (Felicien)       -- createUser('ichbinfelicien', 'Felicien Delatour');
./src/script/search/SearchRepository.test.ts:46:61     - Unknown word (Delatour)       -- ichbinfelicien', 'Felicien Delatour');
./src/script/search/SearchRepository.test.ts:47:11     - Unknown word (lastguy)        -- const lastguy = createUser('lastfelicien
./src/script/search/SearchRepository.test.ts:47:33     - Unknown word (lastfelicien)   -- lastguy = createUser('lastfelicien', 'lastsabine lastjanina
./src/script/search/SearchRepository.test.ts:47:49     - Unknown word (lastsabine)     -- createUser('lastfelicien', 'lastsabine lastjanina');
./src/script/search/SearchRepository.test.ts:47:60     - Unknown word (lastjanina)     -- lastfelicien', 'lastsabine lastjanina');
./src/script/search/SearchRepository.test.ts:48:11     - Unknown word (jeanpierre)     -- const jeanpierre = createUser('jean-pierre
./src/script/search/SearchRepository.test.ts:48:63     - Unknown word (Sansbijou)      -- pierre', 'Jean-Pierre Sansbijou');
./src/script/search/SearchRepository.test.ts:49:50     - Unknown word (Monsouci)       -- createUser('pierrot', 'Pierre Monsouci');
./src/script/search/SearchRepository.test.ts:70:29     - Unknown word (firstname)      -- testCase: 'sorts by firstname and lastname',
./src/script/search/SearchRepository.test.ts:70:43     - Unknown word (lastname)       -- sorts by firstname and lastname',
./src/script/search/SearchRepository.test.ts:74:16     - Unknown word (felici)         -- term: 'felici',
./src/script/search/SearchRepository.ts:88:51     - Unknown word (bardia)     -- Bardia and username of bardia_wire this mapping
./src/script/service/APIClientSingleton.ts:22:31     - Unknown word (Unconfigured) -- APIClient as APIClientUnconfigured} from '@wireapp/api
./src/script/service/CoreSingleton.ts:64:9      - Unknown word (Prekeys)    -- nbPrekeys: 100,
./src/script/service/StoreEngineProvider.ts:33:9      - Unknown word (permament)  -- /** a permament storage that will still
./src/script/service/StoreEngineProvider.ts:36:3      - Unknown word (EFFEMERAL)  -- EFFEMERAL,
./src/script/service/StoreEngineProvider.ts:51:21     - Unknown word (encyption)  -- logger.info('DB encyption config has changed'
./src/script/storage/DexieDatabase.ts:24:44     - Unknown word (Cryptobox)  -- ConversationRecord, CryptoboxRecord, EventRecord,
./src/script/storage/DexieDatabase.ts:41:3      - Unknown word (prekeys)    -- prekeys: Table<CryptoboxRecord
./src/script/storage/StorageService.ts:37:9      - Unknown word (DEXIE)      -- type: DEXIE_CRUD_EVENT;
./src/script/storage/record/CryptoboxRecord.ts:23:3      - Unknown word (serialised) -- serialised: string;
./src/script/storage/record/EventRecord.ts:69:19     - Unknown word (datestring) -- * - string: a datestring
./src/script/team/TeamRepository.ts:89:30     - Unknown word (Detete)     -- private readonly onMemberDetete: () => Promise<void
./src/script/team/TeamService.ts:73:80     - Unknown word (webapps)    -- to ensure that modern webapps work with legacy backends
./src/script/tracking/EventTrackingRepository.ts:111:11    - Unknown word (unsynced)   -- const unsyncedCountlyDeviceId = loadValue
./src/script/tracking/EventTrackingRepository.ts:62:17     - Unknown word (UNSYNCED)   -- COUNTLY_UNSYNCED_DEVICE_ID_LOCAL_STORAGE
./src/script/ui/ContextMenu.tsx:115:90    - Unknown word (trigerer)   -- the menu and focus the trigerer
./src/script/ui/ContextMenu.tsx:97:54     - Unknown word (begings)    -- such as 10 seconds etc begings with digit which is
./src/script/ui/Shortcut.ts:139:33    - Unknown word (graveaccent) -- macos: 'command + alt + graveaccent', // KeyboardJS fires
./src/script/ui/Shortcut.ts:21:25     - Unknown word (keyboardjs) -- import keyboardJS from 'keyboardjs';
./src/script/user/AvailabilityModal.ts:38:20     - Unknown word (dont)       -- action: (dontShowAgain?: boolean)
./src/script/util/ArrayUtil.ts:124:14    - Unknown word (uniquify)    -- export const uniquify = <T>(elements: T[]
./src/script/util/ArrayUtil.ts:37:54     - Unknown word (referencial) -- matching function in case referencial equality is not enough
./src/script/util/BackupUtil.ts:24:9      - Unknown word (encrpted)   -- const encrptedFileFormat = new TextEncoder
./src/script/util/ComponentUtil.ts:44:97     - Unknown word (everytime)  -- the onUpdate callback everytime one observable updates
./src/script/util/ComponentUtil.ts:46:29     - Unknown word (containinig) -- param object The object containinig some observable properties
./src/script/util/CountryCodes.ts:1093:18   - Unknown word (Barthelemy) -- name: 'Saint Barthelemy',
./src/script/util/CountryCodes.ts:1105:18   - Unknown word (Kitts)      -- name: 'Saint Kitts and Nevis',
./src/script/util/CountryCodes.ts:1141:16   - Unknown word (Marino)     -- name: 'San Marino',
./src/script/util/CountryCodes.ts:1189:17   - Unknown word (Maarten)    -- name: 'Sint Maarten',
./src/script/util/CountryCodes.ts:1261:29   - Unknown word (Mayen)      -- name: 'Svalbard and Jan Mayen',
./src/script/util/CountryCodes.ts:1321:12   - Unknown word (Tokelau)    -- name: 'Tokelau',
./src/script/util/CountryCodes.ts:1357:22   - Unknown word (Caicos)     -- name: 'Turks and Caicos Islands',
./src/script/util/CountryCodes.ts:1441:23   - Unknown word (Futuna)     -- name: 'Wallis and Futuna',
./src/script/util/CountryCodes.ts:229:12    - Unknown word (Burkina)    -- name: 'Burkina Faso',
./src/script/util/CountryCodes.ts:229:20    - Unknown word (Faso)       -- name: 'Burkina Faso',
./src/script/util/CountryCodes.ts:325:18    - Unknown word (Rica)       -- name: 'Costa Rica',
./src/script/util/DOM/overlayedObserver.ts:31:15     - Unknown word (Overlayed)  -- function checkOverlayedElements() {
./src/script/util/DataDog.ts:52:12     - Unknown word (datadoghq)  -- site: 'datadoghq.eu',
./src/script/util/DebugUtil.ts:281:20    - Unknown word (programatically) -- * will allow to programatically add text in the message
./src/script/util/EmojiUtil.ts:71:38     - Unknown word (skintone)   -- get the emoji without skintone modifiers
./src/script/util/Entropy.test.ts:133:10    - Unknown word (CSPRNG)      -- // @SF.CSPRNG @TSFI.UserInterface
./src/script/util/Entropy.test.ts:170:29    - Unknown word (inputdata)   -- makes sense with with inputdata being a simple linear
./src/script/util/Entropy.test.ts:22:7      - Unknown word (seedrandom) -- const seedrandom = require('seedrandom
./src/script/util/Entropy.test.ts:235:11    - Unknown word (randomdata)  -- const randomdata = new Uint8Array([.
./src/script/util/Entropy.test.ts:98:21     - Unknown word (dimensonial) -- 'Calculate %d-dimensonial entropy on: %s',
./src/script/util/Entropy.ts:44:83     - Unknown word (multipe)    -- differences on, containing a multipe of `n` elements
./src/script/util/LocalizerUtil/ReactLocalizerUtil.tsx:40:21     - Unknown word (occurences) -- * Will replace all occurences of `replacements` by
./src/script/util/SanitizationUtil.test.ts:38:39     - Unknown word (Unsanitzed) -- name(`<script>alert('Unsanitzed');</script>`);
./src/script/util/TimeUtil.ts:96:26     - Unknown word (momentjs)   -- This is equivalent to momentjs' `LT` formatting
./src/script/util/localStorage.ts:21:41     - Unknown word (localstorage) -- browser's instance of localstorage if present.
./src/script/util/messageRenderer.test.ts:118:58    - Unknown word (ohoh)       -- quot;javascript:alert('ohoh!')&quot;&gt;what?&lt
./src/script/util/messageRenderer.test.ts:162:15    - Unknown word (endlines)   -- it('renders endlines to <br>', () => {
./src/script/util/messageRenderer.test.ts:189:28    - Unknown word (doop)       -- expect(renderMessage('[doop](http://www.example
./src/script/util/messageRenderer.test.ts:194:22    - Unknown word (deeplink)   -- it('renders a wire deeplink from markdown notation
./src/script/util/messageRenderer.test.ts:248:28    - Unknown word (sometext)   -- expect(renderMessage('[sometext](https://some.domain
./src/script/util/messageRenderer.test.ts:292:7     - Unknown word (conversts)  -- it('conversts unicode links to punycode
./src/script/util/messageRenderer.test.ts:302:15    - Unknown word (confusables) -- it('unicode confusables generate a code', (
./src/script/util/messageRenderer.test.ts:324:182   - Unknown word (bien)        -- felix</span>, tu vas bien <span class="message
./src/script/util/messageRenderer.test.ts:334:12    - Unknown word (salut)       -- 'salut <span class="message
./src/script/util/messageRenderer.test.ts:512:111   - Unknown word (redcarpet)   -- "hljs-string">&#x27;redcarpet&#x27;</span>\nmarkdown
./src/script/util/messageRenderer.test.ts:512:178   - Unknown word (Redcarpet)   -- "hljs-title class_">Redcarpet</span>.new(<span class
./src/script/util/messageRenderer.test.ts:568:100   - Unknown word (anotherlink) -- noopener noreferrer">www.anotherlink.net</a>';
./src/script/util/messageRenderer.test.ts:595:23    - Unknown word (blockquotes) -- it('does not render blockquotes', () => {
./src/script/util/messageRenderer.test.ts:617:43    - Unknown word (fulltitle)   -- calling__voice_channel__fulltitle';
./src/script/util/messageRenderer.ts:107:7     - Unknown word (mentionless) -- let mentionlessText = mentionEntities
./src/script/util/messageRenderer.ts:41:7      - Unknown word (markdownit) -- const markdownit = new MarkdownIt('zero
./src/script/util/messageRenderer.ts:71:27     - Unknown word (softbreak)  -- markdownit.renderer.rules.softbreak = () => '<br>';
./src/script/util/messageRenderer.ts:72:27     - Unknown word (hardbreak)  -- markdownit.renderer.rules.hardbreak = () => '<br>';
./src/script/util/test/mock/WebRTCMock.ts:20:20     - Unknown word (koush)      -- import wrtc from '@koush/wrtc';
./src/script/util/test/mock/WebRTCMock.ts:20:8      - Unknown word (wrtc)       -- import wrtc from '@koush/wrtc';
./src/script/util/util.test.ts:131:65    - Unknown word (AQABAAAAA)  -- image/gif;base64,R0lGODlhAQABAAAAACw=');
./src/script/util/uuid.ts:20:15     - Unknown word (uuidv)      -- import {v4 as uuidv4, v1 as uuidv1} from
./src/script/util/worker.ts:26:59     - Unknown word (instanciate) -- creation function that will instanciate the worker (only called
