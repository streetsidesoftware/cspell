---
Repository: django/django
Url: https://github.com/django/django.git
Args: '["--issues-summary-report","**/*.{md,py}"]'
Summary:
  files: 2792
  filesWithIssues: 897
  issues: 7906
  errors: 0
Errors: []

issues:
  - "django/__init__.py:12:26        urlresolvers    U       Set the thread-local urlresolvers script prefix if `set"
  - "django/apps/registry.py:32:49       reexecute       U       module safely (it could reexecute initialization code"
  - "django/apps/registry.py:45:19       autoreloader    U       # For the autoreloader."
  - "django/apps/registry.py:134:40      unconfigured    U       not ready\" is due to unconfigured settings, accessing"
  - "django/conf/__init__.py:195:27      tzset       U       if hasattr(time, \"tzset\") and self.TIME_ZONE"
  - "django/conf/__init__.py:205:18      tzset       U       time.tzset()"
  - "django/conf/global_settings.py:57:27        Asturian            U       ast\", gettext_noop(\"Asturian\")),"
  - "django/conf/global_settings.py:65:44        Sorani              U       noop(\"Central Kurdish (Sorani)\")),"
  - "django/conf/global_settings.py:111:26       Luxembourgish       U       \"lb\", gettext_noop(\"Luxembourgish\")),"
  - "django/conf/global_settings.py:120:36       Bokmål              U       gettext_noop(\"Norwegian Bokmål\")),"
  - "django/conf/global_settings.py:145:27       Udmurt              U       udm\", gettext_noop(\"Udmurt\")),"
  - "django/conf/global_settings.py:146:26       Uyghur              U       \"ug\", gettext_noop(\"Uyghur\")),"
  - "django/conf/global_settings.py:244:43       systemwide          U       allowed to visit any page, systemwide. Use this for bad"
  - "django/conf/global_settings.py:251:25       sohu                U       re.compile(r'^sohu-search'),"
  - "django/conf/global_settings.py:264:25       phpmyadmin          U       re.compile(r'^/phpmyadmin/'),"
  - "django/conf/locale/__init__.py:21:24        العربيّة            U       \"name_local\": \"العربيّة\","
  - "django/conf/locale/__init__.py:27:24        العربية             U       \"name_local\": \"العربية الجزائرية\","
  - "django/conf/locale/__init__.py:27:32        الجزائرية           U       name_local\": \"العربية الجزائرية\","
  - "django/conf/locale/__init__.py:32:18        Asturian            U       \"name\": \"Asturian\","
  - "django/conf/locale/__init__.py:33:24        asturianu           U       \"name_local\": \"asturianu\","
  - "django/conf/locale/__init__.py:39:24        Azərbaycanca        U       \"name_local\": \"Azərbaycanca\","
  - "django/conf/locale/__init__.py:45:24        беларуская          U       \"name_local\": \"беларуская\","
  - "django/conf/locale/__init__.py:51:24        български           U       \"name_local\": \"български\","
  - "django/conf/locale/__init__.py:63:24        brezhoneg           U       \"name_local\": \"brezhoneg\","
  - "django/conf/locale/__init__.py:69:24        bosanski            U       \"name_local\": \"bosanski\","
  - "django/conf/locale/__init__.py:75:24        català              U       \"name_local\": \"català\","
  - "django/conf/locale/__init__.py:80:35        Sorani              U       : \"Central Kurdish (Sorani)\","
  - "django/conf/locale/__init__.py:81:24        کوردی               U       \"name_local\": \"کوردی\","
  - "django/conf/locale/__init__.py:87:24        česky               U       \"name_local\": \"česky\","
  - "django/conf/locale/__init__.py:93:24        Cymraeg             U       \"name_local\": \"Cymraeg\","
  - "django/conf/locale/__init__.py:99:24        dansk               U       \"name_local\": \"dansk\","
  - "django/conf/locale/__init__.py:105:24       Deutsch             U       \"name_local\": \"Deutsch\","
  - "django/conf/locale/__init__.py:111:24       dolnoserbski        U       \"name_local\": \"dolnoserbski\","
  - "django/conf/locale/__init__.py:117:24       Ελληνικά            U       \"name_local\": \"Ελληνικά\","
  - "django/conf/locale/__init__.py:183:24       eesti               U       \"name_local\": \"eesti\","
  - "django/conf/locale/__init__.py:195:24       فارسی               U       \"name_local\": \"فارسی\","
  - "django/conf/locale/__init__.py:213:24       frysk               U       \"name_local\": \"frysk\","
  - "django/conf/locale/__init__.py:219:24       Gaeilge             U       \"name_local\": \"Gaeilge\","
  - "django/conf/locale/__init__.py:225:24       Gàidhlig            U       \"name_local\": \"Gàidhlig\","
  - "django/conf/locale/__init__.py:231:24       galego              U       \"name_local\": \"galego\","
  - "django/conf/locale/__init__.py:237:24       עברית               U       \"name_local\": \"עברית\","
  - "django/conf/locale/__init__.py:249:24       Hrvatski            U       \"name_local\": \"Hrvatski\","
  - "django/conf/locale/__init__.py:255:24       hornjoserbsce       U       \"name_local\": \"hornjoserbsce\","
  - "django/conf/locale/__init__.py:267:24       հայերեն             U       \"name_local\": \"հայերեն\","
  - "django/conf/locale/__init__.py:285:24       Bahasa              U       \"name_local\": \"Bahasa Indonesia\","
  - "django/conf/locale/__init__.py:291:24       Asụsụ               U       \"name_local\": \"Asụsụ Ìgbò\","
  - "django/conf/locale/__init__.py:291:30       Ìgbò                U       name_local\": \"Asụsụ Ìgbò\","
  - "django/conf/locale/__init__.py:297:24       Íslenska            U       \"name_local\": \"Íslenska\","
  - "django/conf/locale/__init__.py:303:24       italiano            U       \"name_local\": \"italiano\","
  - "django/conf/locale/__init__.py:315:24       ქართული             U       \"name_local\": \"ქართული\","
  - "django/conf/locale/__init__.py:321:24       taqbaylit           U       \"name_local\": \"taqbaylit\","
  - "django/conf/locale/__init__.py:327:24       Қазақ               U       \"name_local\": \"Қазақ\","
  - "django/conf/locale/__init__.py:351:24       Кыргызча            U       \"name_local\": \"Кыргызча\","
  - "django/conf/locale/__init__.py:356:18       Luxembourgish       U       \"name\": \"Luxembourgish\","
  - "django/conf/locale/__init__.py:357:24       Lëtzebuergesch      U       \"name_local\": \"Lëtzebuergesch\","
  - "django/conf/locale/__init__.py:363:24       Lietuviškai         U       \"name_local\": \"Lietuviškai\","
  - "django/conf/locale/__init__.py:369:24       latviešu            U       \"name_local\": \"latviešu\","
  - "django/conf/locale/__init__.py:375:24       Македонски          U       \"name_local\": \"Македонски\","
  - "django/conf/locale/__init__.py:381:24       മലയാളം              U       \"name_local\": \"മലയാളം\","
  - "django/conf/locale/__init__.py:393:24       मराठी               U       \"name_local\": \"मराठी\","
  - "django/conf/locale/__init__.py:399:24       Bahasa              U       \"name_local\": \"Bahasa Melayu\","
  - "django/conf/locale/__init__.py:399:31       Melayu              U       name_local\": \"Bahasa Melayu\","
  - "django/conf/locale/__init__.py:405:24       မြန်မာဘာသာ          U       \"name_local\": \"မြန်မာဘာသာ\","
  - "django/conf/locale/__init__.py:410:28       Bokmal              U       \"name\": \"Norwegian Bokmal\","
  - "django/conf/locale/__init__.py:411:24       norsk               U       \"name_local\": \"norsk (bokmål)\","
  - "django/conf/locale/__init__.py:411:31       bokmål              U       name_local\": \"norsk (bokmål)\","
  - "django/conf/locale/__init__.py:417:24       नेपाली              U       \"name_local\": \"नेपाली\","
  - "django/conf/locale/__init__.py:423:24       Nederlands          U       \"name_local\": \"Nederlands\","
  - "django/conf/locale/__init__.py:429:24       norsk               U       \"name_local\": \"norsk (nynorsk)\","
  - "django/conf/locale/__init__.py:435:24       norsk               U       \"name_local\": \"norsk\","
  - "django/conf/locale/__init__.py:441:24       Ирон                U       \"name_local\": \"Ирон\","
  - "django/conf/locale/__init__.py:453:24       polski              U       \"name_local\": \"polski\","
  - "django/conf/locale/__init__.py:459:24       Português           U       \"name_local\": \"Português\","
  - "django/conf/locale/__init__.py:465:24       Português           U       \"name_local\": \"Português Brasileiro\","
  - "django/conf/locale/__init__.py:465:34       Brasileiro          U       name_local\": \"Português Brasileiro\","
  - "django/conf/locale/__init__.py:477:24       Русский             U       \"name_local\": \"Русский\","
  - "django/conf/locale/__init__.py:483:24       slovensky           U       \"name_local\": \"slovensky\","
  - "django/conf/locale/__init__.py:489:24       Slovenščina         U       \"name_local\": \"Slovenščina\","
  - "django/conf/locale/__init__.py:495:24       shqip               U       \"name_local\": \"shqip\","
  - "django/conf/locale/__init__.py:501:24       српски              U       \"name_local\": \"српски\","
  - "django/conf/locale/__init__.py:507:24       srpski              U       \"name_local\": \"srpski (latinica)\","
  - "django/conf/locale/__init__.py:507:32       latinica            U       name_local\": \"srpski (latinica)\","
  - "django/conf/locale/__init__.py:513:24       svenska             U       \"name_local\": \"svenska\","
  - "django/conf/locale/__init__.py:519:24       Kiswahili           U       \"name_local\": \"Kiswahili\","
  - "django/conf/locale/__init__.py:525:24       தமிழ்               U       \"name_local\": \"தமிழ்\","
  - "django/conf/locale/__init__.py:531:24       తెలుగు              U       \"name_local\": \"తెలుగు\","
  - "django/conf/locale/__init__.py:537:24       тоҷикӣ              U       \"name_local\": \"тоҷикӣ\","
  - "django/conf/locale/__init__.py:543:24       ภาษาไทย             U       \"name_local\": \"ภาษาไทย\","
  - "django/conf/locale/__init__.py:549:24       Türkmençe           U       \"name_local\": \"Türkmençe\","
  - "django/conf/locale/__init__.py:555:24       Türkçe              U       \"name_local\": \"Türkçe\","
  - "django/conf/locale/__init__.py:561:24       Татарча             U       \"name_local\": \"Татарча\","
  - "django/conf/locale/__init__.py:566:18       Udmurt              U       \"name\": \"Udmurt\","
  - "django/conf/locale/__init__.py:567:24       Удмурт              U       \"name_local\": \"Удмурт\","
  - "django/conf/locale/__init__.py:572:18       Uyghur              U       \"name\": \"Uyghur\","
  - "django/conf/locale/__init__.py:573:24       ئۇيغۇرچە            U       \"name_local\": \"ئۇيغۇرچە\","
  - "django/conf/locale/__init__.py:579:24       Українська          U       \"name_local\": \"Українська\","
  - "django/conf/locale/__init__.py:585:24       اردو                U       \"name_local\": \"اردو\","
  - "django/conf/locale/__init__.py:591:24       oʻzbek              U       \"name_local\": \"oʻzbek tili\","
  - "django/conf/locale/__init__.py:591:31       tili                U       name_local\": \"oʻzbek tili\","
  - "django/conf/locale/__init__.py:597:24       Tiếng              U       \"name_local\": \"Tiếng Việt\","
  - "django/conf/locale/__init__.py:597:31       Việt               U       name_local\": \"Tiếng Việt\","
  - "django/conf/locale/ckb/formats.py:7:27          کاتژمێر     U       DATETIME_FORMAT = \"j F Y، کاتژمێر G:i\""
  - "django/conf/locale/cy/formats.py:5:30           Hydref      U       FORMAT = \"j F Y\" # '25 Hydref 2006'"
  - "django/conf/locale/cy/formats.py:7:37           Hydref      U       = \"j F Y, P\" # '25 Hydref 2006, 2:30 y.b.'"
  - "django/conf/locale/cy/formats.py:8:31           Hydref      U       MONTH_FORMAT = \"F Y\" # 'Hydref 2006'"
  - "django/conf/locale/cy/formats.py:9:33           Hydref      U       FORMAT = \"j F\" # '25 Hydref'"
  - "django/conf/locale/cy/formats.py:12:27          Dydd        U       DAY_OF_WEEK = 1 # 'Dydd Llun'"
  - "django/conf/locale/cy/formats.py:12:32          Llun        U       OF_WEEK = 1 # 'Dydd Llun'"
  - "django/conf/locale/eo/formats.py:12:34          lundo       U       WEEK = 1 # Monday (lundo)"
  - "django/conf/locale/es_MX/formats.py:24:72       SCFI    U       less common): NOM-008-SCFI-2002"
  - "django/conf/locale/eu/formats.py:12:26          Astelehena      U       FIRST_DAY_OF_WEEK = 1 # Astelehena"
  - "django/conf/locale/fa/formats.py:7:27           ساعت    U       DATETIME_FORMAT = \"j F Y، ساعت G:i\""
  - "django/conf/locale/fr_CA/formats.py:5:29        janvier     U       FORMAT = \"j F Y\" # 31 janvier 2024"
  - "django/conf/locale/fr_CA/formats.py:7:46        janvier     U       H\\xa0h\\xa0i\" # 31 janvier 2024, 13 h 40"
  - "django/conf/locale/fr_CA/formats.py:12:26       Dimanche    U       FIRST_DAY_OF_WEEK = 0 # Dimanche"
  - "django/conf/locale/it/formats.py:5:29           Ottobre         U       FORMAT = \"d F Y\" # 25 Ottobre 2006"
  - "django/conf/locale/it/formats.py:7:36           Mercoledì       U       FORMAT = \"l d F Y H:i\" # Mercoledì 25 Ottobre 2006 14:"
  - "django/conf/locale/it/formats.py:7:49           Ottobre         U       H:i\" # Mercoledì 25 Ottobre 2006 14:30"
  - "django/conf/locale/it/formats.py:8:30           Ottobre         U       MONTH_FORMAT = \"F Y\" # Ottobre 2006"
  - "django/conf/locale/it/formats.py:9:32           Ottobre         U       FORMAT = \"j F\" # 25 Ottobre"
  - "django/conf/locale/it/formats.py:12:26          Lunedì          U       FIRST_DAY_OF_WEEK = 1 # Lunedì"
  - "django/conf/locale/km/formats.py:5:23           ឆ្នា    U       DATE_FORMAT = \"j ខែ F ឆ្នាំ Y\""
  - "django/conf/locale/km/formats.py:7:27           ឆ្នា    U       DATETIME_FORMAT = \"j ខែ F ឆ្នាំ Y, G:i\""
  - "django/conf/locale/ky/formats.py:12:26          Дүйшөмбү    U       FIRST_DAY_OF_WEEK = 1 # Дүйшөмбү, Monday"
  - "django/conf/locale/nb/formats.py:25:28          oktober     U       %d. %B %Y\", # '25. oktober 2006'"
  - "django/conf/locale/nb/formats.py:26:26          oktober     U       \"%d %B %Y\", # '25 oktober 2006'"
  - "django/conf/locale/nl/formats.py:5:30           januari     U       FORMAT = \"j F Y\" # '20 januari 2009'"
  - "django/conf/locale/nl/formats.py:7:38           januari     U       \"j F Y H:i\" # '20 januari 2009 15:23'"
  - "django/conf/locale/nl/formats.py:8:31           januari     U       MONTH_FORMAT = \"F Y\" # 'januari 2009'"
  - "django/conf/locale/nl/formats.py:9:33           januari     U       FORMAT = \"j F\" # '20 januari'"
  - "django/conf/locale/nl/formats.py:12:44          maandag     U       # Monday (in Dutch 'maandag')"
  - "django/conf/locale/nl/formats.py:24:26          januari     U       \"%d %B %Y\", # '20 januari 2009'"
  - "django/conf/locale/nn/formats.py:25:28          oktober     U       %d. %B %Y\", # '25. oktober 2006'"
  - "django/conf/locale/nn/formats.py:26:26          oktober     U       \"%d %B %Y\", # '25 oktober 2006'"
  - "django/conf/locale/pl/formats.py:20:28          października    U       %d. %B %Y\", # '25. października 2006'"
  - "django/conf/locale/pt_BR/formats.py:21:35       Outubro     U       B de %Y\", # '25 de Outubro de 2006'"
  - "django/conf/locale/pt_BR/formats.py:22:33       Outubro     U       de %B, %Y\", # '25 de Outubro, 2006'"
  - "django/conf/locale/pt/formats.py:23:35          Outubro     U       B de %Y\", # '25 de Outubro de 2006'"
  - "django/conf/locale/pt/formats.py:24:33          Outubro     U       de %B, %Y\", # '25 de Outubro, 2006'"
  - "django/conf/locale/th/formats.py:19:23          ตุลาคม      U       \"%d %B %Y\", # 25 ตุลาคม 2006"
  - "django/conf/locale/tr/formats.py:12:26          Pazartesi       U       FIRST_DAY_OF_WEEK = 1 # Pazartesi"
  - "django/conf/locale/tr/formats.py:20:26          Ekim            U       \"%d %B %Y\", # '25 Ekim 2006'"
  - "django/conf/locale/uz/formats.py:18:29          Oktabr      U       %B, %Y-yil\", # '25-Oktabr, 2006-yil'"
  - "django/conf/locale/uz/formats.py:24:38          Oktabr      U       yil %H:%M:%S\", # '25-Oktabr, 2006-yil 14:30:59'"
  - "django/conf/locale/uz/formats.py:25:41          Oktabr      U       H:%M:%S.%f\", # '25-Oktabr, 2006-yil 14:30:59."
  - "django/conf/locale/uz/formats.py:26:35          Oktabr      U       Y-yil %H:%M\", # '25-Oktabr, 2006-yil 14:30'"
  - "django/contrib/admin/actions.py:25:5        childs      U       childs (foreignkeys), a \"permission"
  - "django/contrib/admin/checks.py:19:22        classinfo       U       def _issubclass(cls, classinfo):"
  - "django/contrib/admin/checks.py:25:32        classinfo       U       return issubclass(cls, classinfo)"
  - "django/contrib/admin/helpers.py:18:32       flatatt     U       django.forms.utils import flatatt"
  - "django/contrib/admin/helpers.py:246:13      flatatt     U       flatatt(attrs),"
  - "django/contrib/admin/options.py:8:35        urlquote        U       parse import quote as urlquote"
  - "django/contrib/admin/options.py:224:13      klass           U       for klass in db_field.__class"
  - "django/contrib/admin/options.py:225:16      klass           U       if klass in self.formfield_overrides"
  - "django/contrib/admin/options.py:226:68      klass           U       formfield_overrides[klass]), **kwargs}"
  - "django/contrib/admin/options.py:768:14      urlify          U       \"urlify.js\","
  - "django/contrib/admin/options.py:769:14      prepopulate     U       \"prepopulate.js\","
  - "django/contrib/admin/options.py:770:21      xregexp         U       \"vendor/xregexp/xregexp%s.js\" % extra"
  - "django/contrib/admin/options.py:770:29      xregexp         U       \"vendor/xregexp/xregexp%s.js\" % extra,"
  - "django/contrib/admin/options.py:1406:59     urlquote        U       a href=\"{}\">{}</a>', urlquote(obj_url), obj)"
  - "django/contrib/admin/options.py:1445:15     saveasnew       U       \"_saveasnew\" in request.POST"
  - "django/contrib/admin/options.py:1531:55     urlquote        U       a href=\"{}\">{}</a>', urlquote(request.path), obj)"
  - "django/contrib/admin/options.py:1832:43     saveasnew       U       method == \"POST\" and \"_saveasnew\" in request.POST:"
  - "django/contrib/admin/options.py:1950:19     saveasnew       U       and \"_saveasnew\" in request.POST"
  - "django/contrib/admin/options.py:2325:38     saveasnew       U       \"save_as_new\": \"_saveasnew\" in request.POST,"
  - "django/contrib/admin/sites.py:85:9          modeladmins     U       modeladmins = ("
  - "django/contrib/admin/sites.py:88:27         modeladmins     U       for modeladmin in modeladmins:"
  - "django/contrib/admin/static/admin/css/vendor/select2/LICENSE-SELECT2.md:3:43        Vaynberg    U       7 Kevin Brown, Igor Vaynberg, and Select2 contributors"
  - "django/contrib/admin/static/admin/js/vendor/select2/LICENSE.md:3:43         Vaynberg    U       7 Kevin Brown, Igor Vaynberg, and Select2 contributors"
  - "django/contrib/admin/templatetags/admin_urls.py:12:11       urlname     U       def admin_urlname(value, arg):"
  - "django/contrib/admin/templatetags/admin_urls.py:17:11       urlquote    U       def admin_urlquote(value):"
  - "django/contrib/admin/templatetags/base.py:14:26         varkw       U       params, varargs, varkw, defaults, kwonly, kwonly"
  - "django/contrib/admin/templatetags/base.py:14:43         kwonly      U       varargs, varkw, defaults, kwonly, kwonly_defaults, _"
  - "django/contrib/admin/templatetags/base.py:14:51         kwonly      U       varkw, defaults, kwonly, kwonly_defaults, _ = getfullargspec"
  - "django/contrib/admin/templatetags/base.py:23:13         varkw       U       varkw,"
  - "django/contrib/admin/templatetags/base.py:25:13         kwonly      U       kwonly,"
  - "django/contrib/admin/templatetags/base.py:26:13         kwonly      U       kwonly_defaults,"
  - "django/contrib/admin/tests.py:221:39        klass       U       class(self, selector, klass):"
  - "django/contrib/admin/tests.py:224:10        klass       U       `klass`."
  - "django/contrib/admin/tests.py:234:19        klass       U       .find(klass)"
  - "django/contrib/admin/views/main.py:306:53       doseq       U       urlencode(sorted(p.items()), doseq=True)"
  - "django/contrib/admin/widgets.py:15:37       urlquote        U       utils.html import smart_urlquote"
  - "django/contrib/admin/widgets.py:17:31       Truncator       U       django.utils.text import Truncator"
  - "django/contrib/admin/widgets.py:44:48       selectfilter    U       attrs\"][\"class\"] = \"selectfilter\""
  - "django/contrib/admin/widgets.py:213:16      Truncator       U       return Truncator(obj).words(14), url"
  - "django/contrib/admin/widgets.py:396:19      urlquote        U       smart_urlquote(context[\"widget\"][\"value"
  - "django/contrib/admindocs/utils.py:24:9          klass       U       klass = view_func.view_class"
  - "django/contrib/admindocs/utils.py:25:19         klass       U       return f\"{klass.__module__}.{klass."
  - "django/contrib/admindocs/utils.py:25:38         klass       U       {klass.__module__}.{klass.__qualname__}\""
  - "django/contrib/admindocs/utils.py:64:10         doctitle    U       \"doctitle_xform\": True,"
  - "django/contrib/admindocs/utils.py:64:19         xform       U       \"doctitle_xform\": True,"
  - "django/contrib/admindocs/utils.py:103:27        rolename    U       create_reference_role(rolename, urlbase):"
  - "django/contrib/admindocs/utils.py:105:25        rolename    U       is_case_sensitive = rolename in [\"template\", \"view"
  - "django/contrib/admindocs/utils.py:113:13        refuri      U       refuri=("
  - "django/contrib/admindocs/utils.py:124:56        rolename    U       register_canonical_role(rolename, _role)"
  - "django/contrib/admindocs/utils.py:136:9         refuri      U       refuri=("
  - "django/contrib/admindocs/views.py:174:35        myview      U       # 'mymodule.views.myview' -> 'mymodule.views"
  - "django/contrib/admindocs/views.py:174:65        myview      U       'mymodule.views', 'myview')."
  - "django/contrib/admindocs/views.py:181:22        klass       U       mod, klass = get_mod_func(mod)"
  - "django/contrib/admindocs/views.py:182:60        klass       U       import_module(mod), klass), func)"
  - "django/contrib/auth/__init__.py:97:11       aauthenticate       U       async def aauthenticate(request=None, **credentials"
  - "django/contrib/auth/__init__.py:155:11      alogin              U       async def alogin(request, user, backend"
  - "django/contrib/auth/__init__.py:178:11      alogout             U       async def alogout(request):"
  - "django/contrib/auth/__init__.py:272:27      acycle              U       await request.session.acycle_key()"
  - "django/contrib/auth/base_user.py:11:5           acheck      U       acheck_password,"
  - "django/contrib/auth/base_user.py:111:15         acheck      U       async def acheck_password(self, raw_password"
  - "django/contrib/auth/base_user.py:120:22         acheck      U       return await acheck_password(raw_password"
  - "django/contrib/auth/context_processors.py:16:33         someapp     U       To fix 'item in perms.someapp' and __getitem__ interaction"
  - "django/contrib/auth/context_processors.py:40:20         someapp     U       Lookup by \"someapp\" or \"someapp.someperm"
  - "django/contrib/auth/context_processors.py:40:33         someapp     U       Lookup by \"someapp\" or \"someapp.someperm\" in perms."
  - "django/contrib/auth/context_processors.py:40:41         someperm    U       someapp\" or \"someapp.someperm\" in perms."
  - "django/contrib/auth/decorators.py:41:17         auser       U       auser = await request.auser"
  - "django/contrib/auth/decorators.py:41:39         auser       U       auser = await request.auser()"
  - "django/contrib/auth/decorators.py:43:49         auser       U       pass = await test_func(auser)"
  - "django/contrib/auth/decorators.py:45:64         auser       U       to_async(test_func)(auser)"
  - "django/contrib/auth/hashers.py:86:11        acheck      U       async def acheck_password(password, encoded"
  - "django/contrib/auth/hashers.py:370:20       PKCS        U       recommended by PKCS #5. This is compatible"
  - "django/contrib/auth/hashers.py:372:5        PKCS        U       PKCS5_PBKDF2_HMAC_SHA1()"
  - "django/contrib/auth/hashers.py:498:23       gensalt     U       return bcrypt.gensalt(self.rounds)"
  - "django/contrib/auth/hashers.py:506:28       hexlify     U       # Use binascii.hexlify() because a hex encoded"
  - "django/contrib/auth/hashers.py:507:33       hexlify     U       password = binascii.hexlify(self.digest(password"
  - "django/contrib/auth/hashers.py:509:23       hashpw      U       data = bcrypt.hashpw(password, salt)"
  - "django/contrib/auth/hashers.py:513:27       algostr     U       algorithm, empty, algostr, work_factor, data"
  - "django/contrib/auth/hashers.py:517:14       algostr     U       \"algostr\": algostr,"
  - "django/contrib/auth/hashers.py:517:24       algostr     U       \"algostr\": algostr,"
  - "django/contrib/auth/hashers.py:578:5        maxmem      U       maxmem = 0"
  - "django/contrib/auth/hashers.py:593:13       maxmem      U       maxmem=self.maxmem,"
  - "django/contrib/auth/hashers.py:593:25       maxmem      U       maxmem=self.maxmem,"
  - "django/contrib/auth/hashers.py:594:13       dklen       U       dklen=64,"
  - "django/contrib/auth/middleware.py:21:11         auser       U       async def auser(request):"
  - "django/contrib/auth/middleware.py:22:31         acached     U       not hasattr(request, \"_acached_user\"):"
  - "django/contrib/auth/middleware.py:23:18         acached     U       request._acached_user = await auth.aget"
  - "django/contrib/auth/middleware.py:24:21         acached     U       return request._acached_user"
  - "django/contrib/auth/middleware.py:38:17         auser       U       request.auser = partial(auser, request"
  - "django/contrib/auth/middleware.py:38:33         auser       U       request.auser = partial(auser, request)"
  - "django/contrib/auth/password_validation.py:29:13        klass       U       klass = import_string(validator"
  - "django/contrib/auth/password_validation.py:36:27        klass       U       validators.append(klass(**validator.get(\"OPTIONS"
  - "django/contrib/auth/urls.py:27:17       uidb    U       \"reset/<uidb64>/<token>/\","
  - "django/contrib/auth/views.py:269:13         uidb        U       if \"uidb64\" not in kwargs or"
  - "django/contrib/auth/views.py:271:45         uidb        U       URL path must contain 'uidb64' and 'token' parameters"
  - "django/contrib/auth/views.py:275:43         uidb        U       self.get_user(kwargs[\"uidb64\"])"
  - "django/contrib/auth/views.py:290:28         Referer     U       # HTTP Referer header."
  - "django/contrib/auth/views.py:300:24         uidb        U       def get_user(self, uidb64):"
  - "django/contrib/auth/views.py:303:41         uidb        U       urlsafe_base64_decode(uidb64).decode()"
  - "django/contrib/contenttypes/admin.py:25:9           gfks    U       gfks = ["
  - "django/contrib/contenttypes/admin.py:30:16          gfks    U       if not gfks:"
  - "django/contrib/contenttypes/admin.py:72:24          gfks    U       for gfk in gfks:"
  - "django/contrib/flatpages/templatetags/flatpages.py:68:30        someuser    U       % get_flatpages for someuser as flatpages %}"
  - "django/contrib/flatpages/templatetags/flatpages.py:71:40        someuser    U       flatpages '/about/' for someuser as about_pages %}"
  - "django/contrib/gis/db/backends/base/features.py:10:9        spatialrefsys       U       has_spatialrefsys_table = True"
  - "django/contrib/gis/db/backends/base/features.py:91:26       aggr                U       def supports_collect_aggr(self):"
  - "django/contrib/gis/db/backends/base/features.py:95:25       aggr                U       def supports_extent_aggr(self):"
  - "django/contrib/gis/db/backends/base/features.py:99:28       aggr                U       def supports_make_line_aggr(self):"
  - "django/contrib/gis/db/backends/base/features.py:103:24      aggr                U       def supports_union_aggr(self):"
  - "django/contrib/gis/db/backends/base/models.py:44:10         semimajor       U       (semimajor axis, semiminor axis"
  - "django/contrib/gis/db/backends/base/models.py:44:26         semiminor       U       (semimajor axis, semiminor axis, and inverse flattening"
  - "django/contrib/gis/db/backends/base/operations.py:13:5          spatialite          U       spatialite = False"
  - "django/contrib/gis/db/backends/base/operations.py:136:43        spatialrefsys       U       connection.features.has_spatialrefsys_table:"
  - "django/contrib/gis/db/backends/mysql/base.py:6:23           SQLGIS      U       from .schema import MySQLGISSchemaEditor"
  - "django/contrib/gis/db/backends/mysql/base.py:10:27          SQLGIS      U       SchemaEditorClass = MySQLGISSchemaEditor"
  - "django/contrib/gis/db/backends/mysql/features.py:8:9            spatialrefsys       U       has_spatialrefsys_table = False"
  - "django/contrib/gis/db/backends/mysql/operations.py:36:54        aggr    U       features.supports_collect_aggr:"
  - "django/contrib/gis/db/backends/mysql/schema.py:10:9         SQLGIS      U       class MySQLGISSchemaEditor(DatabaseSchemaEdi"
  - "django/contrib/gis/db/backends/oracle/adapter.py:7:27           CLOB    U       input_size = oracledb.CLOB"
  - "django/contrib/gis/db/backends/oracle/introspection.py:7:23         OBJECTVAR       U       # Associating any OBJECTVAR instances with GeometryField"
  - "django/contrib/gis/db/backends/oracle/introspection.py:8:43         MDSYS           U       objects that aren't MDSYS.SDO_GEOMETRY, but it"
  - "django/contrib/gis/db/backends/oracle/introspection.py:22:30        DIMINFO         U       'SELECT \"DIMINFO\", \"SRID\" FROM \"USER"
  - "django/contrib/gis/db/backends/oracle/models.py:20:30       diminfo     U       TODO: Add support for `diminfo` column (type MDSYS"
  - "django/contrib/gis/db/backends/oracle/models.py:20:52       MDSYS       U       diminfo` column (type MDSYS.SDO_DIM_ARRAY)."
  - "django/contrib/gis/db/backends/oracle/models.py:48:25       MDSYS       U       \"Maps to the Oracle MDSYS.CS_SRS table.\""
  - "django/contrib/gis/db/backends/oracle/models.py:53:5        wktext      U       wktext = models.CharField(max"
  - "django/contrib/gis/db/backends/oracle/models.py:65:21       wktext      U       return self.wktext"
  - "django/contrib/gis/db/backends/oracle/operations.py:29:7        SDOD                    U       class SDODWithin(SpatialOperator"
  - "django/contrib/gis/db/backends/oracle/operations.py:45:20       OVERLAPBDYDISJOINT      U       \"TOUCH|OVERLAPBDYDISJOINT|OVERLAPBDYINTERSECT"
  - "django/contrib/gis/db/backends/oracle/operations.py:46:30       ANYINTERACT             U       \"CONTAINS|COVERS|ANYINTERACT|ON\""
  - "django/contrib/gis/db/backends/oracle/operations.py:64:19       AGGR                    U       extent = \"SDO_AGGR_MBR\""
  - "django/contrib/gis/db/backends/oracle/operations.py:65:5        unionagg                U       unionagg = \"SDO_AGGR_UNION\""
  - "django/contrib/gis/db/backends/oracle/operations.py:65:21       AGGR                    U       unionagg = \"SDO_AGGR_UNION\""
  - "django/contrib/gis/db/backends/oracle/operations.py:72:31       WKBGEOMETRY             U       AsWKB\": \"SDO_UTIL.TO_WKBGEOMETRY\","
  - "django/contrib/gis/db/backends/oracle/operations.py:73:31       WKTGEOMETRY             U       AsWKT\": \"SDO_UTIL.TO_WKTGEOMETRY\","
  - "django/contrib/gis/db/backends/oracle/operations.py:79:35       WKBGEOMETRY             U       FromWKB\": \"SDO_UTIL.FROM_WKBGEOMETRY\","
  - "django/contrib/gis/db/backends/oracle/operations.py:80:35       WKTGEOMETRY             U       FromWKT\": \"SDO_UTIL.FROM_WKTGEOMETRY\","
  - "django/contrib/gis/db/backends/oracle/operations.py:84:36       GETNUMELEM              U       NumGeometries\": \"SDO_UTIL.GETNUMELEM\","
  - "django/contrib/gis/db/backends/oracle/operations.py:85:32       GETNUMVERTICES          U       NumPoints\": \"SDO_UTIL.GETNUMVERTICES\","
  - "django/contrib/gis/db/backends/oracle/operations.py:99:27       WKBGEOMETRY             U       select = \"SDO_UTIL.TO_WKBGEOMETRY(%s)\""
  - "django/contrib/gis/db/backends/oracle/operations.py:117:20      SDOD                    U       \"dwithin\": SDODWithin(),"
  - "django/contrib/gis/db/backends/oracle/operations.py:140:30      clob                    U       convert_extent(self, clob):"
  - "django/contrib/gis/db/backends/oracle/operations.py:141:12      clob                    U       if clob:"
  - "django/contrib/gis/db/backends/oracle/operations.py:145:48      clob                    U       GEOSGeometry(memoryview(clob.read()))"
  - "django/contrib/gis/db/backends/oracle/operations.py:170:17      MDSYS                   U       return \"MDSYS.SDO_GEOMETRY\""
  - "django/contrib/gis/db/backends/oracle/operations.py:208:21      unionagg                U       agg_name = \"unionagg\" if agg_name.lower("
  - "django/contrib/gis/db/backends/oracle/schema.py:9:44        DIMINFO         U       NAME\", \"COLUMN_NAME\", \"DIMINFO\", \"SRID\")"
  - "django/contrib/gis/db/backends/oracle/schema.py:13:13       MDSYS           U       MDSYS.SDO_DIM_ARRAY("
  - "django/contrib/gis/db/backends/oracle/schema.py:14:17       MDSYS           U       MDSYS.SDO_DIM_ELEMENT('LONG"
  - "django/contrib/gis/db/backends/oracle/schema.py:15:17       MDSYS           U       MDSYS.SDO_DIM_ELEMENT('LAT"
  - "django/contrib/gis/db/backends/oracle/schema.py:21:10       INDEXTYPE       U       \"INDEXTYPE IS MDSYS.SPATIAL_INDEX"
  - "django/contrib/gis/db/backends/oracle/schema.py:21:23       MDSYS           U       \"INDEXTYPE IS MDSYS.SPATIAL_INDEX\""
  - "django/contrib/gis/db/backends/postgis/adapter.py:29:41         ISQL    U       psycopg2.extensions import ISQLQuote"
  - "django/contrib/gis/db/backends/postgis/adapter.py:31:21         ISQL    U       if proto == ISQLQuote:"
  - "django/contrib/gis/db/backends/postgis/base.py:116:62       extname     U       FROM pg_extension WHERE extname = %s\", [\"postgis\"])"
  - "django/contrib/gis/db/backends/postgis/const.py:62:10       PIXTYPE     U       BANDTYPE_PIXTYPE_MASK = 0x0F"
  - "django/contrib/gis/db/backends/postgis/introspection.py:25:34       typname     U       \"SELECT oid, typname \""
  - "django/contrib/gis/db/backends/postgis/introspection.py:27:28       typname     U       \"WHERE typname IN ('geometry', 'geography"
  - "django/contrib/gis/db/backends/postgis/models.py:63:5           srtext      U       srtext = models.CharField(max"
  - "django/contrib/gis/db/backends/postgis/models.py:73:21          srtext      U       return self.srtext"
  - "django/contrib/gis/db/backends/postgis/operations.py:83:70          rast        U       don't support mixed (rast-geom)"
  - "django/contrib/gis/db/backends/postgis/operations.py:128:5          unionagg    U       unionagg = geom_func_prefix"
  - "django/contrib/gis/db/backends/postgis/operations.py:167:44         bytea       U       is_psycopg3 else \"%s::bytea\""
  - "django/contrib/gis/db/backends/postgis/operations.py:201:17         vtup        U       vtup = self.postgis_version"
  - "django/contrib/gis/db/backends/postgis/operations.py:210:23         vtup        U       version = vtup[1:]"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:7:14         PIXTYPE         U       BANDTYPE_PIXTYPE_MASK,"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:25:26        hexlified       U       Unpack little endian hexlified binary string into a"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:55:53        PIXTYPE         U       with_flags & BANDTYPE_PIXTYPE_MASK"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:100:17       rast            U       def to_pgraster(rast):"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:107:5        rasterheader    U       rasterheader = ("
  - "django/contrib/gis/db/backends/postgis/pgraster.py:110:13       rast            U       len(rast.bands),"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:111:9        rast            U       rast.scale.x,"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:112:9        rast            U       rast.scale.y,"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:113:9        rast            U       rast.origin.x,"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:123:45       rasterheader    U       POSTGIS_HEADER_STRUCTURE, rasterheader)"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:147:9        bandheader      U       bandheader = pack(structure, (pixeltype"
  - "django/contrib/gis/db/backends/postgis/pgraster.py:150:19       bandheader      U       result += bandheader + band.data(as_memoryview"
  - "django/contrib/gis/db/backends/postgis/schema.py:9:5            rast    U       rast_index_template = \"ST"
  - "django/contrib/gis/db/backends/postgis/schema.py:105:64         rast    U       field), template=self.rast_index_template)"
  - "django/contrib/gis/db/backends/spatialite/adapter.py:5:7            Spatia      U       class SpatiaLiteAdapter(WKTAdapter"
  - "django/contrib/gis/db/backends/spatialite/base.py:7:21          Spatia              U       from .client import SpatiaLiteClient"
  - "django/contrib/gis/db/backends/spatialite/base.py:9:28          Spatia              U       introspection import SpatiaLiteIntrospection"
  - "django/contrib/gis/db/backends/spatialite/base.py:10:25         Spatia              U       from .operations import SpatiaLiteOperations"
  - "django/contrib/gis/db/backends/spatialite/base.py:11:21         Spatialite          U       from .schema import SpatialiteSchemaEditor"
  - "django/contrib/gis/db/backends/spatialite/base.py:15:25         Spatialite          U       SchemaEditorClass = SpatialiteSchemaEditor"
  - "django/contrib/gis/db/backends/spatialite/base.py:17:20         Spatia              U       client_class = SpatiaLiteClient"
  - "django/contrib/gis/db/backends/spatialite/base.py:19:27         Spatia              U       introspection_class = SpatiaLiteIntrospection"
  - "django/contrib/gis/db/backends/spatialite/base.py:25:13         libspatialite       U       # (`libspatialite`). If it's not in the"
  - "django/contrib/gis/db/backends/spatialite/base.py:27:45         SPATIALITE          U       the settings via the `SPATIALITE_LIBRARY_PATH` setting"
  - "django/contrib/gis/db/backends/spatialite/base.py:28:18         spatialite          U       self.lib_spatialite_paths = ["
  - "django/contrib/gis/db/backends/spatialite/base.py:31:36         SPATIALITE          U       getattr(settings, \"SPATIALITE_LIBRARY_PATH\", None"
  - "django/contrib/gis/db/backends/spatialite/base.py:32:22         spatialite          U       \"mod_spatialite.so\","
  - "django/contrib/gis/db/backends/spatialite/base.py:33:22         spatialite          U       \"mod_spatialite\","
  - "django/contrib/gis/db/backends/spatialite/base.py:34:31         spatialite          U       find_library(\"spatialite\"),"
  - "django/contrib/gis/db/backends/spatialite/base.py:51:30         spatialite          U       for path in self.lib_spatialite_paths:"
  - "django/contrib/gis/db/backends/spatialite/base.py:55:39         SPATIALITE          U       if getattr(settings, \"SPATIALITE_LIBRARY_PATH\", None"
  - "django/contrib/gis/db/backends/spatialite/base.py:58:47         SPATIALITE          U       as specified in your SPATIALITE_LIBRARY_PATH setting"
  - "django/contrib/gis/db/backends/spatialite/client.py:4:7         Spatia          U       class SpatiaLiteClient(DatabaseClient"
  - "django/contrib/gis/db/backends/spatialite/client.py:5:24        spatialite      U       executable_name = \"spatialite\""
  - "django/contrib/gis/db/backends/spatialite/features.py:21:18         Spatia      U       \"SpatiaLite doesn't support"
  - "django/contrib/gis/db/backends/spatialite/features.py:22:32         geogapp     U       \"gis_tests.geogapp.tests.GeographyTest"
  - "django/contrib/gis/db/backends/spatialite/introspection.py:26:7         Spatia      U       class SpatiaLiteIntrospection(DatabaseIntr"
  - "django/contrib/gis/db/backends/spatialite/introspection.py:49:19        Spatia      U       # SpatiaLite uses SFSQL 1.2 offsets"
  - "django/contrib/gis/db/backends/spatialite/introspection.py:49:35        SFSQL       U       # SpatiaLite uses SFSQL 1.2 offsets 1000 (Z"
  - "django/contrib/gis/db/backends/spatialite/models.py:2:55        Spatia          U       SpatialRefSys models for the SpatiaLite backend."
  - "django/contrib/gis/db/backends/spatialite/models.py:9:7         Spatialite      U       class SpatialiteGeometryColumns(models"
  - "django/contrib/gis/db/backends/spatialite/models.py:11:39       Spatia          U       columns' table from SpatiaLite."
  - "django/contrib/gis/db/backends/spatialite/models.py:52:7        Spatialite      U       class SpatialiteSpatialRefSys(models"
  - "django/contrib/gis/db/backends/spatialite/models.py:54:38       Spatia          U       ref_sys' table from SpatiaLite."
  - "django/contrib/gis/db/backends/spatialite/models.py:62:5        srtext          U       srtext = models.CharField(max"
  - "django/contrib/gis/db/backends/spatialite/models.py:71:21       srtext          U       return self.srtext"
  - "django/contrib/gis/db/backends/spatialite/operations.py:8:37        spatialite      U       contrib.gis.db.backends.spatialite.adapter import SpatiaLiteAdap"
  - "django/contrib/gis/db/backends/spatialite/operations.py:8:63        Spatia          U       spatialite.adapter import SpatiaLiteAdapter"
  - "django/contrib/gis/db/backends/spatialite/operations.py:19:7        Spatialite      U       class SpatialiteNullCheckOperator(SpatialOpera"
  - "django/contrib/gis/db/backends/spatialite/operations.py:25:7        Spatia          U       class SpatiaLiteOperations(BaseSpatialOper"
  - "django/contrib/gis/db/backends/spatialite/operations.py:26:13       spatialite      U       name = \"spatialite\""
  - "django/contrib/gis/db/backends/spatialite/operations.py:27:5        spatialite      U       spatialite = True"
  - "django/contrib/gis/db/backends/spatialite/operations.py:29:15       Spatia          U       Adapter = SpatiaLiteAdapter"
  - "django/contrib/gis/db/backends/spatialite/operations.py:34:5        unionagg        U       unionagg = \"GUnion\""
  - "django/contrib/gis/db/backends/spatialite/operations.py:40:19       Spatialite      U       \"equals\": SpatialiteNullCheckOperator(func"
  - "django/contrib/gis/db/backends/spatialite/operations.py:41:21       Spatialite      U       \"disjoint\": SpatialiteNullCheckOperator(func"
  - "django/contrib/gis/db/backends/spatialite/operations.py:42:20       Spatialite      U       \"touches\": SpatialiteNullCheckOperator(func"
  - "django/contrib/gis/db/backends/spatialite/operations.py:43:20       Spatialite      U       \"crosses\": SpatialiteNullCheckOperator(func"
  - "django/contrib/gis/db/backends/spatialite/operations.py:94:41       Spatia          U       Determine the version of the SpatiaLite library.\"\"\""
  - "django/contrib/gis/db/backends/spatialite/operations.py:96:28       spatialite      U       version = self.spatialite_version_tuple()[1:]"
  - "django/contrib/gis/db/backends/spatialite/operations.py:99:39       Spatia          U       Cannot determine the SpatiaLite version for the"
  - "django/contrib/gis/db/backends/spatialite/operations.py:149:14      spatialite      U       def _get_spatialite_func(self, func):"
  - "django/contrib/gis/db/backends/spatialite/operations.py:171:9       lwgeom          U       def lwgeom_version(self):"
  - "django/contrib/gis/db/backends/spatialite/operations.py:172:34      LWGEOM          U       Return the version of LWGEOM library used by SpatiaLite"
  - "django/contrib/gis/db/backends/spatialite/operations.py:173:43      lwgeom          U       get_spatialite_func(\"lwgeom_version()\")"
  - "django/contrib/gis/db/backends/spatialite/operations.py:175:9       rttopo          U       def rttopo_version(self):"
  - "django/contrib/gis/db/backends/spatialite/operations.py:176:34      RTTOPO          U       Return the version of RTTOPO library used by SpatiaLite"
  - "django/contrib/gis/db/backends/spatialite/operations.py:177:43      rttopo          U       get_spatialite_func(\"rttopo_version()\")"
  - "django/contrib/gis/db/backends/spatialite/operations.py:185:25      rttopo          U       return self.rttopo_version()"
  - "django/contrib/gis/db/backends/spatialite/operations.py:187:25      lwgeom          U       return self.lwgeom_version()"
  - "django/contrib/gis/db/backends/spatialite/operations.py:206:21      unionagg        U       agg_name = \"unionagg\" if agg_name.lower("
  - "django/contrib/gis/db/backends/spatialite/schema.py:5:7         Spatialite      U       class SpatialiteSchemaEditor(DatabaseSchemaEdi"
  - "django/contrib/gis/db/models/aggregates.py:37:65        SDOAGGRTYPE     U       t wrap filters with SDOAGGRTYPE()."
  - "django/contrib/gis/db/models/aggregates.py:41:27        SDOAGGRTYPE     U       function=\"SDOAGGRTYPE\","
  - "django/contrib/gis/db/models/aggregates.py:56:22        Geospatial      U       \"Geospatial aggregates only allowed"
  - "django/contrib/gis/db/models/functions.py:228:31        GMLGEOMETRY     U       else \"SDO_UTIL.TO_GMLGEOMETRY\""
  - "django/contrib/gis/db/models/functions.py:353:15        Spatia          U       # SpatiaLite returns NULL instead"
  - "django/contrib/gis/db/models/proxy.py:13:24         klass       U       def __init__(self, klass, field, load_func=None"
  - "django/contrib/gis/db/models/proxy.py:18:15         klass       U       self._klass = klass"
  - "django/contrib/gis/db/models/proxy.py:18:23         klass       U       self._klass = klass"
  - "django/contrib/gis/db/models/proxy.py:19:40         klass       U       func = load_func or klass"
  - "django/contrib/gis/db/models/proxy.py:39:40         klass       U       isinstance(geo_value, self._klass):"
  - "django/contrib/gis/db/models/sql/conversion.py:2:45         geospatial      U       simple classes to convert geospatial values from the"
  - "django/contrib/gis/feeds.py:11:9        georss      U       def georss_coords(self, coords"
  - "django/contrib/gis/feeds.py:19:13       georss      U       def add_georss_point(self, handler"
  - "django/contrib/gis/feeds.py:30:38       georss      U       handler.addQuickElement(\"georss:point\", self.georss"
  - "django/contrib/gis/feeds.py:30:58       georss      U       georss:point\", self.georss_coords((coords,)))"
  - "django/contrib/gis/feeds.py:32:13       georss      U       def add_georss_element(self, handler"
  - "django/contrib/gis/forms/widgets.py:71:32       geodjango       U       \"module\": \"geodjango_%s\" % name.replace("
  - "django/contrib/gis/gdal/__init__.py:35:30       libgdal     U       django.contrib.gis.gdal.libgdal import ("
  - "django/contrib/gis/gdal/datasource.py:4:26          shapefiles      U       formats (including ESRI shapefiles)."
  - "django/contrib/gis/gdal/datasource.py:43:54         capi            U       prototypes import ds as capi"
  - "django/contrib/gis/gdal/datasource.py:53:18         capi            U       destructor = capi.destroy_ds"
  - "django/contrib/gis/gdal/datasource.py:57:23         capi            U       self._write = capi.GDAL_OF_UPDATE if write"
  - "django/contrib/gis/gdal/datasource.py:57:57         capi            U       UPDATE if write else capi.GDAL_OF_READONLY"
  - "django/contrib/gis/gdal/datasource.py:66:22         capi            U       ds = capi.open_ds("
  - "django/contrib/gis/gdal/driver.py:5:54          capi    U       prototypes import ds as capi"
  - "django/contrib/gis/gdal/driver.py:51:31         capi    U       driver = c_void_p(capi.get_driver_by_name(force"
  - "django/contrib/gis/gdal/driver.py:54:22         capi    U       driver = capi.get_driver(dr_input"
  - "django/contrib/gis/gdal/driver.py:79:16         capi    U       if not capi.get_driver_count():"
  - "django/contrib/gis/gdal/driver.py:80:13         capi    U       capi.register_all()"
  - "django/contrib/gis/gdal/envelope.py:130:28      miny    U       (minx, miny, maxx, maxy) = args"
  - "django/contrib/gis/gdal/envelope.py:130:34      maxx    U       (minx, miny, maxx, maxy) = args[0]"
  - "django/contrib/gis/gdal/envelope.py:130:40      maxy    U       (minx, miny, maxx, maxy) = args[0]"
  - "django/contrib/gis/gdal/envelope.py:133:24      miny    U       if miny < self._envelope.MinY"
  - "django/contrib/gis/gdal/envelope.py:134:47      miny    U       self._envelope.MinY = miny"
  - "django/contrib/gis/gdal/envelope.py:135:24      maxx    U       if maxx > self._envelope.MaxX"
  - "django/contrib/gis/gdal/envelope.py:136:47      maxx    U       self._envelope.MaxX = maxx"
  - "django/contrib/gis/gdal/envelope.py:137:24      maxy    U       if maxy > self._envelope.MaxY"
  - "django/contrib/gis/gdal/envelope.py:138:47      maxy    U       self._envelope.MaxY = maxy"
  - "django/contrib/gis/gdal/error.py:20:1           OGRERR      U       OGRERR_DICT = {"
  - "django/contrib/gis/gdal/error.py:33:1           CPLERR      U       CPLERR_DICT = {"
  - "django/contrib/gis/gdal/error.py:51:25          OGRERR      U       Check the given CPL/OGRERR and raise an exception"
  - "django/contrib/gis/gdal/error.py:53:16          CPLERR      U       err_dict = CPLERR_DICT if cpl else OGRERR"
  - "django/contrib/gis/gdal/error.py:53:40          OGRERR      U       CPLERR_DICT if cpl else OGRERR_DICT"
  - "django/contrib/gis/gdal/feature.py:5:54         capi    U       prototypes import ds as capi"
  - "django/contrib/gis/gdal/feature.py:20:18        capi    U       destructor = capi.destroy_feature"
  - "django/contrib/gis/gdal/feature.py:58:21        capi    U       return bool(capi.feature_equal(self.ptr"
  - "django/contrib/gis/gdal/feature.py:68:16        capi    U       return capi.get_fid(self.ptr)"
  - "django/contrib/gis/gdal/feature.py:73:16        capi    U       name = capi.get_feat_name(self."
  - "django/contrib/gis/gdal/feature.py:86:52        defn    U       name(capi.get_field_defn(self._layer._ldefn,"
  - "django/contrib/gis/gdal/field.py:6:54           capi            U       prototypes import ds as capi"
  - "django/contrib/gis/gdal/field.py:29:19          capi            U       fld_ptr = capi.get_feat_field_defn"
  - "django/contrib/gis/gdal/field.py:29:39          defn            U       capi.get_feat_field_defn(feat.ptr, index)"
  - "django/contrib/gis/gdal/field.py:45:13          capi            U       capi.get_field_as_double"
  - "django/contrib/gis/gdal/field.py:54:17          capi            U       capi.get_field_as_integer"
  - "django/contrib/gis/gdal/field.py:60:17          capi            U       capi.get_field_as_integer"
  - "django/contrib/gis/gdal/field.py:147:9          shapefiles      U       shapefiles -- forcing the type"
  - "django/contrib/gis/gdal/field.py:253:1          ROGR            U       ROGRFieldTypes = {cls: num"
  - "django/contrib/gis/gdal/geometries.py:26:18         ellps       U       +proj=longlat +ellps=WGS84 +datum=WGS84"
  - "django/contrib/gis/gdal/geometries.py:29:18         ellps       U       +proj=longlat +ellps=clrk66 +datum=NAD27"
  - "django/contrib/gis/gdal/geometries.py:29:24         clrk        U       proj=longlat +ellps=clrk66 +datum=NAD27 +no_defs"
  - "django/contrib/gis/gdal/geometries.py:51:56         capi        U       prototypes import geom as capi"
  - "django/contrib/gis/gdal/geometries.py:66:18         capi        U       destructor = capi.destroy_geom"
  - "django/contrib/gis/gdal/geometries.py:88:25         capi        U       g = capi.create_geom(OGRGeomType"
  - "django/contrib/gis/gdal/geometries.py:89:21         capi        U       capi.import_wkt(g, byref"
  - "django/contrib/gis/gdal/geometries.py:91:25         capi        U       g = capi.from_wkt("
  - "django/contrib/gis/gdal/geometries.py:394:25        wkbsize     U       return capi.get_wkbsize(self.ptr)"
  - "django/contrib/gis/gdal/geometries.py:455:13        klone       U       klone = self.clone()"
  - "django/contrib/gis/gdal/geometries.py:456:13        klone       U       klone.transform(coord_trans"
  - "django/contrib/gis/gdal/geometries.py:457:20        klone       U       return klone"
  - "django/contrib/gis/gdal/geometries.py:520:10        geomgen     U       def _geomgen(self, gen_func, other"
  - "django/contrib/gis/gdal/geometries.py:530:22        geomgen     U       return self._geomgen(capi.get_boundary)"
  - "django/contrib/gis/gdal/geometries.py:538:22        geomgen     U       return self._geomgen(capi.geom_convex_hull"
  - "django/contrib/gis/gdal/geometries.py:545:22        geomgen     U       return self._geomgen(capi.geom_diff, other"
  - "django/contrib/gis/gdal/geometries.py:552:22        geomgen     U       return self._geomgen(capi.geom_intersection"
  - "django/contrib/gis/gdal/geometries.py:608:25        getm        U       return capi.getm(self.ptr, 0)"
  - "django/contrib/gis/gdal/geometries.py:684:39        getm        U       return self._listarr(capi.getm)"
  - "django/contrib/gis/gdal/geomtype.py:38:16       TINZ        U       1016: \"TINZ\","
  - "django/contrib/gis/gdal/geomtype.py:53:16       TINM        U       2016: \"TINM\","
  - "django/contrib/gis/gdal/geomtype.py:68:16       TINZM       U       3016: \"TINZM\","
  - "django/contrib/gis/gdal/layer.py:10:54          capi    U       prototypes import ds as capi"
  - "django/contrib/gis/gdal/layer.py:38:23          capi    U       self._ldefn = capi.get_layer_defn(self"
  - "django/contrib/gis/gdal/layer.py:38:38          defn    U       ldefn = capi.get_layer_defn(self._ptr)"
  - "django/contrib/gis/gdal/layer.py:63:9           capi    U       capi.reset_reading(self."
  - "django/contrib/gis/gdal/layer.py:65:27          capi    U       yield Feature(capi.get_next_feature(self"
  - "django/contrib/gis/gdal/layer.py:85:32          capi    U       return Feature(capi.get_feature(self.ptr"
  - "django/contrib/gis/gdal/layer.py:143:52         defn    U       name(capi.get_field_defn(self._ldefn, i)),"
  - "django/contrib/gis/gdal/layer.py:158:62         defn    U       type(capi.get_field_defn(self._ldefn, i))]"
  - "django/contrib/gis/gdal/layer.py:166:49         defn    U       width(capi.get_field_defn(self._ldefn, i))"
  - "django/contrib/gis/gdal/layer.py:174:53         defn    U       precision(capi.get_field_defn(self._ldefn, i))"
  - "django/contrib/gis/gdal/libgdal.py:67:1         lgdal       U       lgdal = CDLL(lib_path)"
  - "django/contrib/gis/gdal/libgdal.py:76:5         lwingdal    U       lwingdal = WinDLL(lib_path)"
  - "django/contrib/gis/gdal/libgdal.py:85:16        lwingdal    U       return lwingdal[func]"
  - "django/contrib/gis/gdal/libgdal.py:87:16        lgdal       U       return lgdal[func]"
  - "django/contrib/gis/gdal/prototypes/ds.py:10:30          libgdal     U       django.contrib.gis.gdal.libgdal import lgdal"
  - "django/contrib/gis/gdal/prototypes/ds.py:10:45          lgdal       U       gdal.libgdal import lgdal"
  - "django/contrib/gis/gdal/prototypes/ds.py:20:5           voidptr     U       voidptr_output,"
  - "django/contrib/gis/gdal/prototypes/ds.py:33:28          lgdal       U       register_all = void_output(lgdal.GDALAllRegister, []"
  - "django/contrib/gis/gdal/prototypes/ds.py:34:27          lgdal       U       cleanup_all = void_output(lgdal.GDALDestroyDriverManager"
  - "django/contrib/gis/gdal/prototypes/ds.py:35:14          voidptr     U       get_driver = voidptr_output(lgdal.GDALGetDriver"
  - "django/contrib/gis/gdal/prototypes/ds.py:35:29          lgdal       U       driver = voidptr_output(lgdal.GDALGetDriver, [c_int"
  - "django/contrib/gis/gdal/prototypes/ds.py:36:22          voidptr     U       get_driver_by_name = voidptr_output("
  - "django/contrib/gis/gdal/prototypes/ds.py:37:5           lgdal       U       lgdal.GDALGetDriverByName"
  - "django/contrib/gis/gdal/prototypes/ds.py:43:11          voidptr     U       open_ds = voidptr_output("
  - "django/contrib/gis/gdal/prototypes/ds.py:49:22          voidptr     U       get_dataset_driver = voidptr_output(lgdal.GDALGetDatasetDr"
  - "django/contrib/gis/gdal/prototypes/ds.py:60:11          defn        U       get_layer_defn = voidptr_output(lgdal"
  - "django/contrib/gis/gdal/prototypes/ds.py:60:53          Defn        U       lgdal.OGR_L_GetLayerDefn, [c_void_p])"
  - "django/contrib/gis/gdal/prototypes/ds.py:80:11          defn        U       get_field_defn = voidptr_output(lgdal"
  - "django/contrib/gis/gdal/prototypes/ds.py:80:54          Defn        U       lgdal.OGR_FD_GetFieldDefn, [c_void_p, c_int])"
  - "django/contrib/gis/gdal/prototypes/ds.py:88:16          defn        U       get_feat_field_defn = voidptr_output(lgdal"
  - "django/contrib/gis/gdal/prototypes/ds.py:88:58          Defn        U       lgdal.OGR_F_GetFieldDefnRef, [c_void_p, c_int"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:9:30         libgdal     U       django.contrib.gis.gdal.libgdal import lgdal"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:9:45         lgdal       U       gdal.libgdal import lgdal"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:25:38        cargs       U       string(result, func, cargs, offset=None, cpl=False"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:31:25        cargs       U       ptr = ptr_byref(cargs, offset)"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:37:32        cargs       U       string(result, func, cargs, offset=-1, str_result"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:56:25        cargs       U       ptr = ptr_byref(cargs, offset)"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:62:9         lgdal       U       lgdal.VSIFree(ptr)"
  - "django/contrib/gis/gdal/prototypes/errcheck.py:70:34        cargs       U       envelope(result, func, cargs, offset=-1):"
  - "django/contrib/gis/gdal/prototypes/generation.py:35:51          strarg          U       argtypes, errcheck=False, strarg=False, cpl=False):"
  - "django/contrib/gis/gdal/prototypes/generation.py:41:8           strarg          U       if strarg:"
  - "django/contrib/gis/gdal/prototypes/generation.py:62:13          geomerrcheck    U       def geomerrcheck(result, func, cargs"
  - "django/contrib/gis/gdal/prototypes/generation.py:62:40          cargs           U       geomerrcheck(result, func, cargs):"
  - "django/contrib/gis/gdal/prototypes/generation.py:63:52          cargs           U       offset(result, func, cargs, offset)"
  - "django/contrib/gis/gdal/prototypes/generation.py:65:25          geomerrcheck    U       func.errcheck = geomerrcheck"
  - "django/contrib/gis/gdal/prototypes/generation.py:105:36         cargs           U       const(result, func, cargs):"
  - "django/contrib/gis/gdal/prototypes/generation.py:106:48         cargs           U       string(result, func, cargs, offset=offset, cpl"
  - "django/contrib/gis/gdal/prototypes/generation.py:135:34         cargs           U       check_str(result, func, cargs):"
  - "django/contrib/gis/gdal/prototypes/generation.py:163:5          voidptr         U       def voidptr_output(func, argtypes"
  - "django/contrib/gis/gdal/prototypes/geom.py:4:30         libgdal     U       django.contrib.gis.gdal.libgdal import GDAL_VERSION"
  - "django/contrib/gis/gdal/prototypes/geom.py:4:59         lgdal       U       import GDAL_VERSION, lgdal"
  - "django/contrib/gis/gdal/prototypes/geom.py:35:39        cargs       U       lambda result, func, cargs: bool(result)"
  - "django/contrib/gis/gdal/prototypes/geom.py:42:25        lgdal       U       from_json = geom_output(lgdal.OGR_G_CreateGeometryFromJson"
  - "django/contrib/gis/gdal/prototypes/geom.py:44:5         lgdal       U       lgdal.OGR_G_ExportToJson,"
  - "django/contrib/gis/gdal/prototypes/geom.py:47:5         lgdal       U       lgdal.OGR_G_ExportToKML,"
  - "django/contrib/gis/gdal/prototypes/geom.py:51:17        lgdal       U       getx = pnt_func(lgdal.OGR_G_GetX)"
  - "django/contrib/gis/gdal/prototypes/geom.py:54:1         getm        U       getm = pnt_func(lgdal.OGR"
  - "django/contrib/gis/gdal/prototypes/geom.py:111:9        wkbsize     U       get_wkbsize = int_output(lgdal.OGR"
  - "django/contrib/gis/gdal/prototypes/geom.py:113:9        wkbsize     U       get_wkbsize = int_output(lgdal.OGR"
  - "django/contrib/gis/gdal/prototypes/geom.py:130:68       cargs       U       lambda result, func, cargs: bool(result)"
  - "django/contrib/gis/gdal/prototypes/raster.py:9:30           libgdal         U       django.contrib.gis.gdal.libgdal import std_call"
  - "django/contrib/gis/gdal/prototypes/raster.py:16:5           voidptr         U       voidptr_output,"
  - "django/contrib/gis/gdal/prototypes/raster.py:30:13          voidptr         U       create_ds = voidptr_output("
  - "django/contrib/gis/gdal/prototypes/raster.py:33:11          voidptr         U       open_ds = voidptr_output(std_call(\"GDALOpen"
  - "django/contrib/gis/gdal/prototypes/raster.py:36:11          voidptr         U       copy_ds = voidptr_output("
  - "django/contrib/gis/gdal/prototypes/raster.py:42:17          voidptr         U       get_ds_driver = voidptr_output(std_call(\"GDALGetDatas"
  - "django/contrib/gis/gdal/prototypes/raster.py:140:3          Reprojection    U       # Reprojection routine"
  - "django/contrib/gis/gdal/prototypes/raster.py:141:1          reproject       U       reproject_image = void_output"
  - "django/contrib/gis/gdal/prototypes/raster.py:142:19         Reproject       U       std_call(\"GDALReprojectImage\"),"
  - "django/contrib/gis/gdal/prototypes/srs.py:3:30          libgdal             U       django.contrib.gis.gdal.libgdal import lgdal, std_call"
  - "django/contrib/gis/gdal/prototypes/srs.py:3:45          lgdal               U       gdal.libgdal import lgdal, std_call"
  - "django/contrib/gis/gdal/prototypes/srs.py:28:60         strarg              U       POINTER(c_char_p)], strarg=True)"
  - "django/contrib/gis/gdal/prototypes/srs.py:34:27         lgdal               U       release_srs = void_output(lgdal.OSRRelease, [c_void"
  - "django/contrib/gis/gdal/prototypes/srs.py:38:28         lgdal               U       validate = void_output(lgdal.OSRValidate, [c_void"
  - "django/contrib/gis/gdal/prototypes/srs.py:40:5          lgdal               U       lgdal.OSRSetAxisMappingStrategy"
  - "django/contrib/gis/gdal/prototypes/srs.py:44:25         lgdal               U       semi_major = srs_double(lgdal.OSRGetSemiMajor)"
  - "django/contrib/gis/gdal/prototypes/srs.py:46:1          invflattening       U       invflattening = srs_double(lgdal.OSRGetInvF"
  - "django/contrib/gis/gdal/prototypes/srs.py:99:1          isgeographic        U       isgeographic = int_output(lgdal.OSRIsGeogr"
  - "django/contrib/gis/gdal/prototypes/srs.py:99:33         OSRIs               U       geographic = int_output(lgdal.OSRIsGeographic, [c_void_p"
  - "django/contrib/gis/gdal/prototypes/srs.py:100:1         islocal             U       islocal = int_output(lgdal.OSRIsLocal"
  - "django/contrib/gis/gdal/prototypes/srs.py:100:28        OSRIs               U       islocal = int_output(lgdal.OSRIsLocal, [c_void_p])"
  - "django/contrib/gis/gdal/prototypes/srs.py:101:1         isprojected         U       isprojected = int_output(lgdal.OSRIsProje"
  - "django/contrib/gis/gdal/prototypes/srs.py:101:32        OSRIs               U       sprojected = int_output(lgdal.OSRIsProjected, [c_void_p"
  - "django/contrib/gis/gdal/raster/band.py:4:58         capi            U       prototypes import raster as capi"
  - "django/contrib/gis/gdal/raster/band.py:24:21        capi            U       self._ptr = capi.get_ds_raster_band(source"
  - "django/contrib/gis/gdal/raster/band.py:39:26        capi            U       return force_str(capi.get_band_description"
  - "django/contrib/gis/gdal/raster/band.py:46:16        capi            U       return capi.get_band_xsize(self"
  - "django/contrib/gis/gdal/raster/band.py:53:16        capi            U       return capi.get_band_ysize(self"
  - "django/contrib/gis/gdal/raster/band.py:84:9         smin            U       smin, smax, smean, sstd"
  - "django/contrib/gis/gdal/raster/band.py:84:15        smax            U       smin, smax, smean, sstd = c_double"
  - "django/contrib/gis/gdal/raster/band.py:84:21        smean           U       smin, smax, smean, sstd = c_double(),"
  - "django/contrib/gis/gdal/raster/band.py:88:19        smin            U       byref(smin),"
  - "django/contrib/gis/gdal/raster/band.py:89:19        smax            U       byref(smax),"
  - "django/contrib/gis/gdal/raster/band.py:90:19        smean           U       byref(smean),"
  - "django/contrib/gis/gdal/raster/band.py:108:22       smin            U       result = smin.value, smax.value, smean"
  - "django/contrib/gis/gdal/raster/band.py:108:34       smax            U       result = smin.value, smax.value, smean.value,"
  - "django/contrib/gis/gdal/raster/band.py:108:46       smean           U       smin.value, smax.value, smean.value, sstd.value"
  - "django/contrib/gis/gdal/raster/band.py:220:50       ndarray         U       isinstance(data, numpy.ndarray)"
  - "django/contrib/gis/gdal/raster/band.py:248:30       frombuffer      U       return numpy.frombuffer("
  - "django/contrib/gis/gdal/raster/base.py:2:58         capi    U       prototypes import raster as capi"
  - "django/contrib/gis/gdal/raster/base.py:22:21        capi    U       meta_list = capi.get_ds_metadata_domain"
  - "django/contrib/gis/gdal/raster/base.py:34:9         capi    U       capi.free_dsl(meta_list)"
  - "django/contrib/gis/gdal/raster/base.py:40:20        capi    U       data = capi.get_ds_metadata("
  - "django/contrib/gis/gdal/raster/base.py:72:17        capi    U       capi.set_ds_metadata_item"
  - "django/contrib/gis/gdal/raster/const.py:64:13       Neighbour       U       \"NearestNeighbour\": 0,"
  - "django/contrib/gis/gdal/raster/const.py:68:6        Lanczos         U       \"Lanczos\": 4,"
  - "django/contrib/gis/gdal/raster/const.py:77:31       Paletted        U       GCI_PaletteIndex\", # Paletted"
  - "django/contrib/gis/gdal/raster/const.py:88:43       CMLY            U       BlackBand\", # Black band of CMLY image"
  - "django/contrib/gis/gdal/raster/const.py:98:34       vsimem          U       FILESYSTEM_BASE_PATH = \"/vsimem/\""
  - "django/contrib/gis/gdal/raster/source.py:19:58          capi                U       prototypes import raster as capi"
  - "django/contrib/gis/gdal/raster/source.py:75:18          capi                U       destructor = capi.close_ds"
  - "django/contrib/gis/gdal/raster/source.py:97:29          capi                U       self._ptr = capi.open_ds(force_bytes"
  - "django/contrib/gis/gdal/raster/source.py:106:24         getsizeof           U       size = sys.getsizeof(ds_input)"
  - "django/contrib/gis/gdal/raster/source.py:108:24         vsimem              U       # that the vsimem file remains available"
  - "django/contrib/gis/gdal/raster/source.py:111:50         vsimem              U       name to reference in vsimem filesystem."
  - "django/contrib/gis/gdal/raster/source.py:113:22         vsimem              U       # Create vsimem file from buffer."
  - "django/contrib/gis/gdal/raster/source.py:114:13         capi                U       capi.create_vsi_file_from"
  - "django/contrib/gis/gdal/raster/source.py:120:28         vsimem              U       # Open the new vsimem file as a GDALRaster"
  - "django/contrib/gis/gdal/raster/source.py:122:29         capi                U       self._ptr = capi.open_ds(force_bytes"
  - "django/contrib/gis/gdal/raster/source.py:153:13         papsz               U       papsz_options = []"
  - "django/contrib/gis/gdal/raster/source.py:154:43         papsz               U       val in ds_input.get(\"papsz_options\", {}).items"
  - "django/contrib/gis/gdal/raster/source.py:156:17         papsz               U       papsz_options.append(option"
  - "django/contrib/gis/gdal/raster/source.py:157:13         papsz               U       papsz_options.append(None"
  - "django/contrib/gis/gdal/raster/source.py:159:23         papszlist           U       # Convert papszlist to ctypes array."
  - "django/contrib/gis/gdal/raster/source.py:160:13         papsz               U       papsz_options = (c_char_p"
  - "django/contrib/gis/gdal/raster/source.py:232:42         geotransforms       U       that needs flushing are geotransforms, coordinate systems"
  - "django/contrib/gis/gdal/raster/source.py:400:49         Neighbour           U       resampling=\"NearestNeighbour\", max_error=0.0):"
  - "django/contrib/gis/gdal/raster/source.py:442:11         Reproject           U       # Reproject image"
  - "django/contrib/gis/gdal/raster/source.py:443:14         reproject           U       capi.reproject_image("
  - "django/contrib/gis/gdal/raster/source.py:483:63         Neighbour           U       resampling=\"NearestNeighbour\", max_error=0.0"
  - "django/contrib/gis/gdal/raster/source.py:486:38         reprojected         U       copy of this raster reprojected into the given spatial"
  - "django/contrib/gis/gdal/raster/source.py:539:30         gdalinfo            U       to the output of the gdalinfo command line utility"
  - "django/contrib/gis/gdal/srs.py:8:3          GEOGCS              U       GEOGCS[\"WGS 84\","
  - "django/contrib/gis/gdal/srs.py:12:11        TOWGS               U       TOWGS84[0,0,0,0,0,0,0],"
  - "django/contrib/gis/gdal/srs.py:14:7         PRIMEM              U       PRIMEM[\"Greenwich\",0,"
  - "django/contrib/gis/gdal/srs.py:20:18        ellps               U       +proj=longlat +ellps=WGS84 +datum=WGS84"
  - "django/contrib/gis/gdal/srs.py:36:55        capi                U       prototypes import srs as capi"
  - "django/contrib/gis/gdal/srs.py:52:18        capi                U       destructor = capi.release_srs"
  - "django/contrib/gis/gdal/srs.py:67:24        capi                U       self.ptr = capi.new_srs(c_char_p(b\""
  - "django/contrib/gis/gdal/srs.py:70:17        capi                U       capi.set_axis_strategy(self"
  - "django/contrib/gis/gdal/srs.py:95:19        capi                U       srs = capi.new_srs(buf)"
  - "django/contrib/gis/gdal/srs.py:119:20       GEOGCS              U       >>> wkt = 'GEOGCS[\"WGS 84\", DATUM[\"WGS"
  - "django/contrib/gis/gdal/srs.py:121:24       GEOGCS              U       >>> print(srs['GEOGCS'])"
  - "django/contrib/gis/gdal/srs.py:129:24       TOWGS               U       >>> print(srs['TOWGS84', 4]) # the fourth"
  - "django/contrib/gis/gdal/srs.py:131:61       symbole             U       have to use the pipe symbole."
  - "django/contrib/gis/gdal/srs.py:149:62       PROJCS              U       given target node (e.g. 'PROJCS'). The index"
  - "django/contrib/gis/gdal/srs.py:196:37       PROJCS              U       return self.attr_value(\"PROJCS\")"
  - "django/contrib/gis/gdal/srs.py:198:37       GEOGCS              U       return self.attr_value(\"GEOGCS\")"
  - "django/contrib/gis/gdal/srs.py:257:11       semimajor           U       (semimajor axis, semiminor axis"
  - "django/contrib/gis/gdal/srs.py:257:27       semiminor           U       (semimajor axis, semiminor axis, and inverse flattening"
  - "django/contrib/gis/gdal/srs.py:274:21       invflattening       U       return capi.invflattening(self.ptr, byref(c_int"
  - "django/contrib/gis/gdal/srs.py:281:24       GEOGCS              U       (root node is GEOGCS)."
  - "django/contrib/gis/gdal/srs.py:283:26       isgeographic        U       return bool(capi.isgeographic(self.ptr))"
  - "django/contrib/gis/gdal/srs.py:288:26       islocal             U       return bool(capi.islocal(self.ptr))"
  - "django/contrib/gis/gdal/srs.py:294:24       PROJCS              U       (root node is PROJCS)."
  - "django/contrib/gis/gdal/srs.py:296:26       isprojected         U       return bool(capi.isprojected(self.ptr))"
  - "django/contrib/gis/geoip2.py:11:23          mmdb                U       Grab GeoLite2-Country.mmdb.gz and GeoLite2-City"
  - "django/contrib/gis/geoip2.py:11:49          mmdb                U       gz and GeoLite2-City.mmdb.gz, and unzip them in"
  - "django/contrib/gis/geoip2.py:67:56          mmdb                U       country data files (*.mmdb) are located."
  - "django/contrib/gis/geoip2.py:78:31          mmdb                U       'GeoLite2-Country.mmdb'; overrides the GEOIP"
  - "django/contrib/gis/geoip2.py:81:28          mmdb                U       'GeoLite2-City.mmdb'; overrides the GEOIP"
  - "django/contrib/gis/geoip2.py:187:28         djangoproject       U       '24.124.1.80' and 'djangoproject.com' are valid parameters"
  - "django/contrib/gis/geometry.py:13:55        CIRCULARSTRING          U       LTIPOLYGON|GEOMETRYCOLLECTION|CIRCULARSTRING|COMPOUNDCURVE|\""
  - "django/contrib/gis/geometry.py:13:70        COMPOUNDCURVE           U       ETRYCOLLECTION|CIRCULARSTRING|COMPOUNDCURVE|\""
  - "django/contrib/gis/geometry.py:14:7         CURVEPOLYGON            U       r\"CURVEPOLYGON|MULTICURVE|MULTISURFACE"
  - "django/contrib/gis/geometry.py:14:20        MULTICURVE              U       r\"CURVEPOLYGON|MULTICURVE|MULTISURFACE|CURVE|SURFACE"
  - "django/contrib/gis/geometry.py:14:31        MULTISURFACE            U       CURVEPOLYGON|MULTICURVE|MULTISURFACE|CURVE|SURFACE|POLYHEDRALSURFA"
  - "django/contrib/gis/geometry.py:14:58        POLYHEDRALSURFACE       U       MULTISURFACE|CURVE|SURFACE|POLYHEDRALSURFACE|TIN|\""
  - "django/contrib/gis/geometry.py:16:8         ACEGIMLONPSRUTYZ        U       r\"[ACEGIMLONPSRUTYZ0-9,.+() -]+)$\","
  - "django/contrib/gis/geos/__init__.py:16:7        libgeos     U       from .libgeos import geos_version"
  - "django/contrib/gis/geos/collections.py:6:51         capi        U       import prototypes as capi"
  - "django/contrib/gis/geos/collections.py:8:30         libgeos     U       django.contrib.gis.geos.libgeos import GEOM_PTR"
  - "django/contrib/gis/geos/collections.py:54:17        capi        U       capi.geom_clone(getattr(g"
  - "django/contrib/gis/geos/collections.py:58:16        capi        U       return capi.create_collection(self"
  - "django/contrib/gis/geos/collections.py:61:16        capi        U       return capi.get_geomn(self.ptr,"
  - "django/contrib/gis/geos/collections.py:61:25        geomn       U       return capi.get_geomn(self.ptr, index)"
  - "django/contrib/gis/geos/collections.py:67:13        capi        U       capi.geom_clone(self._get"
  - "django/contrib/gis/geos/coordseq.py:9:51        capi            U       import prototypes as capi"
  - "django/contrib/gis/geos/coordseq.py:12:30       libgeos         U       django.contrib.gis.geos.libgeos import CS_PTR"
  - "django/contrib/gis/geos/coordseq.py:51:48       ndarray         U       isinstance(value, numpy.ndarray):"
  - "django/contrib/gis/geos/coordseq.py:81:16       capi            U       return capi.cs_getx(self.ptr, index"
  - "django/contrib/gis/geos/coordseq.py:84:16       capi            U       return capi.cs_gety(self.ptr, index"
  - "django/contrib/gis/geos/coordseq.py:87:16       capi            U       return capi.cs_getz(self.ptr, index"
  - "django/contrib/gis/geos/coordseq.py:90:9        capi            U       capi.cs_setx(self.ptr, index"
  - "django/contrib/gis/geos/coordseq.py:96:17       setz            U       capi.cs_setz(self.ptr, index, value"
  - "django/contrib/gis/geos/coordseq.py:124:24      getordinate     U       return capi.cs_getordinate(self.ptr, index, dimension"
  - "django/contrib/gis/geos/coordseq.py:130:17      setordinate     U       capi.cs_setordinate(self.ptr, index, dimension"
  - "django/contrib/gis/geos/coordseq.py:165:24      getdims         U       return capi.cs_getdims(self.ptr, byref(c_uint"
  - "django/contrib/gis/geos/geometry.py:11:51       capi                U       import prototypes as capi"
  - "django/contrib/gis/geos/geometry.py:15:30       libgeos             U       django.contrib.gis.geos.libgeos import GEOM_PTR, geos"
  - "django/contrib/gis/geos/geometry.py:27:18       capi                U       destructor = capi.destroy_geom"
  - "django/contrib/gis/geos/geometry.py:67:26       capi                U       GEOSCoordSeq(capi.get_cs(self.ptr), self"
  - "django/contrib/gis/geos/geometry.py:198:16      capi                U       return capi.geos_type(self.ptr)"
  - "django/contrib/gis/geos/geometry.py:203:16      capi                U       return capi.geos_typeid(self.ptr"
  - "django/contrib/gis/geos/geometry.py:261:26      isring              U       return capi.geos_isring(self.ptr)"
  - "django/contrib/gis/geos/geometry.py:266:26      issimple            U       return capi.geos_issimple(self.ptr)"
  - "django/contrib/gis/geos/geometry.py:278:26      isvalidreason       U       return capi.geos_isvalidreason(self.ptr).decode()"
  - "django/contrib/gis/geos/geometry.py:320:26      equalsexact         U       return capi.geos_equalsexact(self.ptr, other.ptr"
  - "django/contrib/gis/geos/geometry.py:330:26      equalsidentical     U       return capi.geos_equalsidentical(self.ptr, other.ptr"
  - "django/contrib/gis/geos/geometry.py:350:26      relatepattern       U       return capi.geos_relatepattern(self.ptr, other.ptr"
  - "django/contrib/gis/geos/geometry.py:523:25      gptr                U       def _topology(self, gptr):"
  - "django/contrib/gis/geos/geometry.py:525:29      gptr                U       return GEOSGeometry(gptr, srid=self.srid)"
  - "django/contrib/gis/geos/geometry.py:532:29      quadsegs            U       buffer(self, width, quadsegs=8):"
  - "django/contrib/gis/geos/geometry.py:540:65      quadsegs            U       buffer(self.ptr, width, quadsegs))"
  - "django/contrib/gis/geos/geometry.py:543:22      quadsegs            U       self, width, quadsegs=8, end_cap_style=1,"
  - "django/contrib/gis/geos/geometry.py:553:23      bufferwithstyle     U       capi.geos_bufferwithstyle("
  - "django/contrib/gis/geos/geometry.py:554:34      quadsegs            U       self.ptr, width, quadsegs, end_cap_style, join"
  - "django/contrib/gis/geos/geometry.py:573:41      convexhull          U       _topology(capi.geos_convexhull(self.ptr))"
  - "django/contrib/gis/geos/geometry.py:602:59      Peucker             U       simplified using the Douglas-Peucker algorithm"
  - "django/contrib/gis/geos/geometry.py:613:45      preservesimplify    U       _topology(capi.geos_preservesimplify(self.ptr, tolerance"
  - "django/contrib/gis/geos/geometry.py:709:41      linemerge           U       _topology(capi.geos_linemerge(self.ptr))"
  - "django/contrib/gis/geos/libgeos.py:36:33        libgeos         U       names = [\"geos_c\", \"libgeos_c-1\"]"
  - "django/contrib/gis/geos/libgeos.py:45:28        libgeos         U       and extension (e.g., libgeos_c.[so|so.1|dylib].)"
  - "django/contrib/gis/geos/libgeos.py:62:6         lgeos           U       _lgeos = CDLL(lib_path)"
  - "django/contrib/gis/geos/libgeos.py:66:23        threadsafe      U       # geos/prototypes/threadsafe.py."
  - "django/contrib/gis/geos/libgeos.py:67:6         lgeos           U       _lgeos.initGEOS_r.restype"
  - "django/contrib/gis/geos/libgeos.py:68:6         lgeos           U       _lgeos.finishGEOS_r.argtypes"
  - "django/contrib/gis/geos/libgeos.py:70:6         lgeos           U       _lgeos.GEOSversion.restype"
  - "django/contrib/gis/geos/libgeos.py:71:13        lgeos           U       return _lgeos"
  - "django/contrib/gis/geos/libgeos.py:77:1         NOTICEFUNC      U       NOTICEFUNC = CFUNCTYPE(None, c"
  - "django/contrib/gis/geos/libgeos.py:89:12        NOTICEFUNC      U       notice_h = NOTICEFUNC(notice_h)"
  - "django/contrib/gis/geos/libgeos.py:91:1         ERRORFUNC       U       ERRORFUNC = CFUNCTYPE(None, c"
  - "django/contrib/gis/geos/libgeos.py:103:11       ERRORFUNC       U       error_h = ERRORFUNC(error_h)"
  - "django/contrib/gis/geos/libgeos.py:127:1        PREPGEOM        U       PREPGEOM_PTR = POINTER(GEOSPrepGeom"
  - "django/contrib/gis/geos/libgeos.py:158:49       threadsafe      U       gis.geos.prototypes.threadsafe import GEOSFunc"
  - "django/contrib/gis/geos/linestring.py:1:51          capi        U       import prototypes as capi"
  - "django/contrib/gis/geos/linestring.py:10:18         capi        U       _init_func = capi.create_linestring"
  - "django/contrib/gis/geos/linestring.py:35:42         ndarray     U       isinstance(coords, numpy.ndarray)"
  - "django/contrib/gis/geos/linestring.py:42:9          ncoords     U       ncoords = len(coords)"
  - "django/contrib/gis/geos/linestring.py:43:16         ncoords     U       if not ncoords:"
  - "django/contrib/gis/geos/linestring.py:47:12         ncoords     U       if ncoords < self._minlength:"
  - "django/contrib/gis/geos/linestring.py:53:21         ncoords     U       ncoords,"
  - "django/contrib/gis/geos/linestring.py:83:27         capi        U       cs = GEOSCoordSeq(capi.create_cs(ncoords, ndim"
  - "django/contrib/gis/geos/linestring.py:83:42         ncoords     U       GEOSCoordSeq(capi.create_cs(ncoords, ndim), z=bool(ndim"
  - "django/contrib/gis/geos/linestring.py:119:27        capi        U       cs = GEOSCoordSeq(capi.create_cs(length, ndim"
  - "django/contrib/gis/geos/linestring.py:125:13        capi        U       capi.destroy_geom(self.ptr"
  - "django/contrib/gis/geos/linestring.py:156:40        ARRRR       U       numpy.array(lst) # ARRRR!"
  - "django/contrib/gis/geos/mutable_list.py:1:27        Aryeh       U       Copyright (c) 2008-2009 Aryeh Leib Taurog, all rights"
  - "django/contrib/gis/geos/mutable_list.py:1:33        Leib        U       (c) 2008-2009 Aryeh Leib Taurog, all rights reserved"
  - "django/contrib/gis/geos/mutable_list.py:1:38        Taurog      U       008-2009 Aryeh Leib Taurog, all rights reserved"
  - "django/contrib/gis/geos/mutable_list.py:9:9         Aryeh       U       Author: Aryeh Leib Taurog."
  - "django/contrib/gis/geos/mutable_list.py:9:15        Leib        U       Author: Aryeh Leib Taurog."
  - "django/contrib/gis/geos/mutable_list.py:9:20        Taurog      U       Author: Aryeh Leib Taurog."
  - "django/contrib/gis/geos/point.py:4:51           capi    U       import prototypes as capi"
  - "django/contrib/gis/geos/point.py:64:20          capi    U       return capi.create_point(None)"
  - "django/contrib/gis/geos/point.py:69:14          capi    U       cs = capi.create_cs(c_uint(1)"
  - "django/contrib/gis/geos/point.py:71:9           capi    U       capi.cs_setx(cs, 0, next"
  - "django/contrib/gis/geos/point.py:72:9           capi    U       capi.cs_sety(cs, 0, next"
  - "django/contrib/gis/geos/point.py:74:21          setz    U       capi.cs_setz(cs, 0, next(i))"
  - "django/contrib/gis/geos/polygon.py:1:51         capi        U       import prototypes as capi"
  - "django/contrib/gis/geos/polygon.py:3:30         libgeos     U       django.contrib.gis.geos.libgeos import GEOM_PTR"
  - "django/contrib/gis/geos/polygon.py:76:20        capi        U       return capi.create_empty_polygon"
  - "django/contrib/gis/geos/polygon.py:93:16        capi        U       return capi.create_polygon(shell"
  - "django/contrib/gis/geos/polygon.py:97:20        capi        U       return capi.geom_clone(g)"
  - "django/contrib/gis/geos/polygon.py:99:20        capi        U       return capi.geom_clone(g.ptr)"
  - "django/contrib/gis/geos/polygon.py:140:29       extring     U       return capi.get_extring(self.ptr)"
  - "django/contrib/gis/geos/polygon.py:143:29       intring     U       return capi.get_intring(self.ptr, index - 1"
  - "django/contrib/gis/geos/polygon.py:158:25       nrings      U       return capi.get_nrings(self.ptr)"
  - "django/contrib/gis/geos/prepared.py:2:37        capi        U       prototypes import prepared as capi"
  - "django/contrib/gis/geos/prepared.py:12:16       capi        U       ptr_type = capi.PREPGEOM_PTR"
  - "django/contrib/gis/geos/prepared.py:12:21       PREPGEOM    U       ptr_type = capi.PREPGEOM_PTR"
  - "django/contrib/gis/geos/prepared.py:13:18       capi        U       destructor = capi.prepared_destroy"
  - "django/contrib/gis/geos/prepared.py:24:20       capi        U       self.ptr = capi.geos_prepare(geom.ptr"
  - "django/contrib/gis/geos/prepared.py:27:16       capi        U       return capi.prepared_contains(self"
  - "django/contrib/gis/geos/prototypes/__init__.py:10:8         getdims             U       cs_getdims,"
  - "django/contrib/gis/geos/prototypes/__init__.py:11:8         getordinate         U       cs_getordinate,"
  - "django/contrib/gis/geos/prototypes/__init__.py:17:8         setordinate         U       cs_setordinate,"
  - "django/contrib/gis/geos/prototypes/__init__.py:20:8         setz                U       cs_setz,"
  - "django/contrib/gis/geos/prototypes/__init__.py:39:9         extring             U       get_extring,"
  - "django/contrib/gis/geos/prototypes/__init__.py:40:9         geomn               U       get_geomn,"
  - "django/contrib/gis/geos/prototypes/__init__.py:41:9         intring             U       get_intring,"
  - "django/contrib/gis/geos/prototypes/__init__.py:42:9         nrings              U       get_nrings,"
  - "django/contrib/gis/geos/prototypes/__init__.py:53:10        equalsexact         U       geos_equalsexact,"
  - "django/contrib/gis/geos/prototypes/__init__.py:54:10        equalsidentical     U       geos_equalsidentical,"
  - "django/contrib/gis/geos/prototypes/__init__.py:59:10        isring              U       geos_isring,"
  - "django/contrib/gis/geos/prototypes/__init__.py:60:10        issimple            U       geos_issimple,"
  - "django/contrib/gis/geos/prototypes/__init__.py:63:10        relatepattern       U       geos_relatepattern,"
  - "django/contrib/gis/geos/prototypes/coordseq.py:3:30         libgeos         U       django.contrib.gis.geos.libgeos import CS_PTR, GEOM"
  - "django/contrib/gis/geos/prototypes/coordseq.py:8:31         cargs           U       cs_op(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/coordseq.py:16:32        cargs           U       cs_get(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/coordseq.py:18:31        cargs           U       cs_op(result, func, cargs)"
  - "django/contrib/gis/geos/prototypes/coordseq.py:20:27        cargs           U       return last_arg_byref(cargs)"
  - "django/contrib/gis/geos/prototypes/coordseq.py:59:32        cargs           U       errcheck(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/coordseq.py:76:4         getordinate     U       cs_getordinate = CsOperation(\"GEOSCoordSeq"
  - "django/contrib/gis/geos/prototypes/coordseq.py:77:4         setordinate     U       cs_setordinate = CsOperation(\"GEOSCoordSeq"
  - "django/contrib/gis/geos/prototypes/coordseq.py:87:4         setz            U       cs_setz = CsOperation(\"GEOSCoordSeq"
  - "django/contrib/gis/geos/prototypes/coordseq.py:91:4         getdims         U       cs_getdims = CsInt(\"GEOSCoordSeq"
  - "django/contrib/gis/geos/prototypes/errcheck.py:8:30         libgeos     U       django.contrib.gis.geos.libgeos import GEOSFuncFactory"
  - "django/contrib/gis/geos/prototypes/errcheck.py:21:29        cargs       U       check_dbl(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/errcheck.py:27:27        cargs       U       return last_arg_byref(cargs)"
  - "django/contrib/gis/geos/prototypes/errcheck.py:30:30        cargs       U       check_geom(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/errcheck.py:40:35        cargs       U       minus_one(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/errcheck.py:50:35        cargs       U       predicate(result, func, cargs):"
  - "django/contrib/gis/geos/prototypes/geom.py:3:30         libgeos     U       django.contrib.gis.geos.libgeos import CS_PTR, GEOM"
  - "django/contrib/gis/geos/prototypes/geom.py:76:5         extring     U       get_extring = GeomOutput(\"GEOSGetExterior"
  - "django/contrib/gis/geos/prototypes/geom.py:77:5         intring     U       get_intring = GeomOutput(\"GEOSGetInterior"
  - "django/contrib/gis/geos/prototypes/geom.py:78:5         nrings      U       get_nrings = IntFromGeom(\"GEOSGetNumInte"
  - "django/contrib/gis/geos/prototypes/geom.py:81:5         geomn       U       get_geomn = GeomOutput(\"GEOSGetGeometry"
  - "django/contrib/gis/geos/prototypes/io.py:5:30           libgeos     U       django.contrib.gis.geos.libgeos import ("
  - "django/contrib/gis/geos/prototypes/io.py:43:38          GEOSWKT     U       create = GEOSFuncFactory(\"GEOSWKTReader_create\", restype"
  - "django/contrib/gis/geos/prototypes/io.py:44:39          GEOSWKT     U       destroy = GEOSFuncFactory(\"GEOSWKTReader_destroy\", argtypes"
  - "django/contrib/gis/geos/prototypes/io.py:47:6           GEOSWKT     U       \"GEOSWKTReader_read\","
  - "django/contrib/gis/geos/prototypes/io.py:53:38          GEOSWKT     U       create = GEOSFuncFactory(\"GEOSWKTWriter_create\", restype"
  - "django/contrib/gis/geos/prototypes/io.py:54:39          GEOSWKT     U       destroy = GEOSFuncFactory(\"GEOSWKTWriter_destroy\", argtypes"
  - "django/contrib/gis/geos/prototypes/io.py:78:38          GEOSWKB     U       create = GEOSFuncFactory(\"GEOSWKBReader_create\", restype"
  - "django/contrib/gis/geos/prototypes/io.py:79:39          GEOSWKB     U       destroy = GEOSFuncFactory(\"GEOSWKBReader_destroy\", argtypes"
  - "django/contrib/gis/geos/prototypes/io.py:93:32          GEOSWKB     U       read = WKBReadFunc(\"GEOSWKBReader_read\")"
  - "django/contrib/gis/geos/prototypes/io.py:94:36          GEOSWKB     U       read_hex = WKBReadFunc(\"GEOSWKBReader_readHEX\")"
  - "django/contrib/gis/geos/prototypes/io.py:97:38          GEOSWKB     U       create = GEOSFuncFactory(\"GEOSWKBWriter_create\", restype"
  - "django/contrib/gis/geos/prototypes/misc.py:8:30         libgeos             U       django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact"
  - "django/contrib/gis/geos/prototypes/misc.py:12:63        isvalidreason       U       geos_length\", \"geos_isvalidreason\"]"
  - "django/contrib/gis/geos/prototypes/misc.py:33:6         isvalidreason       U       geos_isvalidreason = GEOSFuncFactory("
  - "django/contrib/gis/geos/prototypes/predicates.py:8:30           libgeos             U       django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact"
  - "django/contrib/gis/geos/prototypes/predicates.py:29:6           isring              U       geos_isring = UnaryPredicate(\"GEOSisRing"
  - "django/contrib/gis/geos/prototypes/predicates.py:30:6           issimple            U       geos_issimple = UnaryPredicate(\"GEOSisSimpl"
  - "django/contrib/gis/geos/prototypes/predicates.py:39:6           equalsexact         U       geos_equalsexact = BinaryPredicate("
  - "django/contrib/gis/geos/prototypes/predicates.py:42:6           equalsidentical     U       geos_equalsidentical = BinaryPredicate(\"GEOSEquals"
  - "django/contrib/gis/geos/prototypes/predicates.py:45:6           relatepattern       U       geos_relatepattern = BinaryPredicate("
  - "django/contrib/gis/geos/prototypes/prepared.py:3:30         libgeos     U       django.contrib.gis.geos.libgeos import GEOM_PTR, PREPGEOM"
  - "django/contrib/gis/geos/prototypes/prepared.py:3:55         PREPGEOM    U       libgeos import GEOM_PTR, PREPGEOM_PTR, GEOSFuncFactory"
  - "django/contrib/gis/geos/prototypes/prepared.py:7:76         PREPGEOM    U       [GEOM_PTR], restype=PREPGEOM_PTR)"
  - "django/contrib/gis/geos/prototypes/prepared.py:8:74         PREPGEOM    U       destroy\", argtypes=[PREPGEOM_PTR])"
  - "django/contrib/gis/geos/prototypes/prepared.py:13:17        PREPGEOM    U       argtypes = [PREPGEOM_PTR, GEOM_PTR]"
  - "django/contrib/gis/geos/prototypes/threadsafe.py:4:30           libgeos     U       django.contrib.gis.geos.libgeos import CONTEXT_PTR,"
  - "django/contrib/gis/geos/prototypes/threadsafe.py:4:67           lgeos       U       CONTEXT_PTR, error_h, lgeos, notice_h"
  - "django/contrib/gis/geos/prototypes/threadsafe.py:11:18          lgeos       U       destructor = lgeos.finishGEOS_r"
  - "django/contrib/gis/geos/prototypes/threadsafe.py:16:20          lgeos       U       self.ptr = lgeos.initGEOS_r(notice_h"
  - "django/contrib/gis/geos/prototypes/threadsafe.py:37:30          lgeos       U       self.cfunc = getattr(lgeos, func_name + \"_r\")"
  - "django/contrib/gis/geos/prototypes/topology.py:8:30         libgeos             U       django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact"
  - "django/contrib/gis/geos/prototypes/topology.py:27:6         bufferwithstyle     U       geos_bufferwithstyle = Topology("
  - "django/contrib/gis/geos/prototypes/topology.py:31:6         convexhull          U       geos_convexhull = Topology(\"GEOSConvexHull"
  - "django/contrib/gis/geos/prototypes/topology.py:35:6         linemerge           U       geos_linemerge = Topology(\"GEOSLineMerge"
  - "django/contrib/gis/geos/prototypes/topology.py:37:6         preservesimplify    U       geos_preservesimplify = Topology("
  - "django/contrib/gis/measure.py:33:30         Bronn           U       Robert Coup, Justin Bronn, Riccardo Di Virgilio"
  - "django/contrib/gis/measure.py:33:37         Riccardo        U       Coup, Justin Bronn, Riccardo Di Virgilio"
  - "django/contrib/gis/measure.py:33:49         Virgilio        U       Justin Bronn, Riccardo Di Virgilio"
  - "django/contrib/gis/measure.py:36:5          Geoff           U       and Geoff Biggs' PhD work on dimensione"
  - "django/contrib/gis/measure.py:36:11         Biggs           U       and Geoff Biggs' PhD work on dimensioned"
  - "django/contrib/gis/measure.py:56:5          LALIAS          U       LALIAS = {}"
  - "django/contrib/gis/measure.py:222:36        LALIAS          U       elif lower in self.LALIAS:"
  - "django/contrib/gis/measure.py:223:30        LALIAS          U       u = self.LALIAS[lower]"
  - "django/contrib/gis/measure.py:242:27        LALIAS          U       elif lower in cls.LALIAS:"
  - "django/contrib/gis/measure.py:243:24        LALIAS          U       return cls.LALIAS[lower]"
  - "django/contrib/gis/measure.py:252:16        benoit          U       \"chain_benoit\": 20.116782,"
  - "django/contrib/gis/measure.py:254:24        benoit          U       \"british_chain_benoit\": 20.1167824944,"
  - "django/contrib/gis/measure.py:271:15        benoit          U       \"link_benoit\": 0.20116782,"
  - "django/contrib/gis/measure.py:291:10        kilometre       U       \"kilometre\": \"km\","
  - "django/contrib/gis/measure.py:295:10        micrometre      U       \"micrometre\": \"um\","
  - "django/contrib/gis/measure.py:297:10        millimetre      U       \"millimetre\": \"mm\","
  - "django/contrib/gis/measure.py:300:25        Benoit          U       \"British chain (Benoit 1895 B)\": \"british_chain"
  - "django/contrib/gis/measure.py:300:57        benoit          U       B)\": \"british_chain_benoit\","
  - "django/contrib/gis/measure.py:309:17        Benoit          U       \"Chain (Benoit)\": \"chain_benoit\","
  - "django/contrib/gis/measure.py:309:34        benoit          U       Chain (Benoit)\": \"chain_benoit\","
  - "django/contrib/gis/measure.py:316:16        Benoit          U       \"Link (Benoit)\": \"link_benoit\","
  - "django/contrib/gis/sitemaps/views.py:18:9           klass       U       klass = apps.get_model(label"
  - "django/contrib/gis/sitemaps/views.py:27:21          klass       U       field = klass._meta.get_field(field"
  - "django/contrib/gis/sitemaps/views.py:37:22          klass       U       placemarks = klass._default_manager.using"
  - "django/contrib/gis/sitemaps/views.py:43:18          klass       U       qs = klass._default_manager.using"
  - "django/contrib/gis/sitemaps/views.py:48:18          klass       U       qs = klass._default_manager.using"
  - "django/contrib/gis/utils/__init__.py:5:31           ogrinfo     U       django.contrib.gis.utils.ogrinfo import ogrinfo"
  - "django/contrib/gis/utils/__init__.py:5:46           ogrinfo     U       utils.ogrinfo import ogrinfo"
  - "django/contrib/gis/utils/__init__.py:13:6           ogrinfo     U       \"ogrinfo\","
  - "django/contrib/gis/utils/layermapping.py:423:13         dtup        U       dtup = d.as_tuple()"
  - "django/contrib/gis/utils/layermapping.py:424:22         dtup        U       digits = dtup[1]"
  - "django/contrib/gis/utils/layermapping.py:425:21         dtup        U       d_idx = dtup[2] # index where the"
  - "django/contrib/gis/utils/layermapping.py:428:17         prec        U       max_prec = model_field.max_digits"
  - "django/contrib/gis/utils/layermapping.py:433:19         prec        U       n_prec = len(digits[:d_idx"
  - "django/contrib/gis/utils/layermapping.py:435:19         prec        U       n_prec = len(digits) + d_idx"
  - "django/contrib/gis/utils/layermapping.py:439:18         prec        U       if n_prec > max_prec:"
  - "django/contrib/gis/utils/layermapping.py:439:29         prec        U       if n_prec > max_prec:"
  - "django/contrib/gis/utils/layermapping.py:698:9          nfeat       U       nfeat = self.layer.num_feat"
  - "django/contrib/gis/utils/layermapping.py:699:54         nfeat       U       step, int) and step < nfeat:"
  - "django/contrib/gis/utils/layermapping.py:707:35         nfeat       U       indices = range(step, nfeat, step)"
  - "django/contrib/gis/utils/ogrinfo.py:4:18        ogrinfo     U       produced by the `ogrinfo` utility."
  - "django/contrib/gis/utils/ogrinfo.py:11:5        ogrinfo     U       def ogrinfo(data_source, num_features"
  - "django/contrib/gis/utils/srs.py:28:12       Spatia      U       For SpatiaLite users only, sets"
  - "django/contrib/gis/utils/srs.py:57:11       Spatia      U       # and SpatiaLite."
  - "django/contrib/gis/utils/srs.py:66:9        srtext      U       if \"srtext\" in srs_field_names"
  - "django/contrib/gis/utils/srs.py:67:17       srtext      U       kwargs[\"srtext\"] = srs.wkt"
  - "django/contrib/gis/utils/srs.py:69:11       Spatia      U       # SpatiaLite specific"
  - "django/contrib/messages/storage/cookie.py:86:23         messagesnotfinished     U       not_finished = \"__messagesnotfinished__\""
  - "django/contrib/messages/storage/cookie.py:87:39         messagesnotfinished     U       json = json.dumps(\"__messagesnotfinished__\")"
  - "django/contrib/postgres/aggregates/statistics.py:36:32          SAMP    U       self.function = \"COVAR_SAMP\" if sample else \"COVAR"
  - "django/contrib/postgres/aggregates/statistics.py:41:22          AVGX    U       function = \"REGR_AVGX\""
  - "django/contrib/postgres/aggregates/statistics.py:45:22          AVGY    U       function = \"REGR_AVGY\""
  - "django/contrib/postgres/constraints.py:37:63        spgist      U       lower() not in {\"gist\", \"spgist\"}:"
  - "django/contrib/postgres/fields/hstore.py:104:17         akeys       U       function = \"akeys\""
  - "django/contrib/postgres/fields/hstore.py:111:17         avals       U       function = \"avals\""
  - "django/contrib/postgres/fields/ranges.py:191:17         numrange        U       return \"numrange\""
  - "django/contrib/postgres/fields/ranges.py:200:17         tstzrange       U       return \"tstzrange\""
  - "django/contrib/postgres/fields/ranges.py:209:17         daterange       U       return \"daterange\""
  - "django/contrib/postgres/fields/ranges.py:268:30         numrange        U       double precision\": \"numrange\","
  - "django/contrib/postgres/fields/ranges.py:269:21         numrange        U       \"numeric\": \"numrange\","
  - "django/contrib/postgres/fields/ranges.py:270:18         daterange       U       \"date\": \"daterange\","
  - "django/contrib/postgres/fields/ranges.py:271:38         tstzrange       U       timestamp with time zone\": \"tstzrange\","
  - "django/contrib/postgres/indexes.py:218:15       spgist      U       suffix = \"spgist\""
  - "django/contrib/postgres/operations.py:2:16          oids        U       get_citext_oids,"
  - "django/contrib/postgres/operations.py:3:16          oids        U       get_hstore_oids,"
  - "django/contrib/postgres/operations.py:32:31         oids        U       Clear cached, stale oids."
  - "django/contrib/postgres/operations.py:33:20         oids        U       get_hstore_oids.cache_clear()"
  - "django/contrib/postgres/operations.py:34:20         oids        U       get_citext_oids.cache_clear()"
  - "django/contrib/postgres/operations.py:58:51         extname     U       FROM pg_extension WHERE extname = %s\","
  - "django/contrib/postgres/operations.py:93:22         pgcrypto    U       self.name = \"pgcrypto\""
  - "django/contrib/postgres/operations.py:103:25        trgm        U       self.name = \"pg_trgm\""
  - "django/contrib/postgres/operations.py:173:51        libc        U       locale, *, provider=\"libc\", deterministic=True"
  - "django/contrib/postgres/operations.py:184:48        libc        U       and self.provider != \"libc\":"
  - "django/contrib/postgres/operations.py:196:30        libc        U       if self.provider != \"libc\":"
  - "django/contrib/postgres/search.py:34:17         tsvector        U       return \"tsvector\""
  - "django/contrib/postgres/search.py:39:17         tsquery         U       return \"tsquery\""
  - "django/contrib/postgres/search.py:68:21         regconfig       U       return \"%s::regconfig\" % sql, params"
  - "django/contrib/postgres/search.py:91:20         tsvector        U       function = \"to_tsvector\""
  - "django/contrib/postgres/search.py:147:20        setweight       U       sql = \"setweight({}, {})\".format(sql"
  - "django/contrib/postgres/search.py:191:19        plainto         U       \"plain\": \"plainto_tsquery\","
  - "django/contrib/postgres/search.py:191:27        tsquery         U       \"plain\": \"plainto_tsquery\","
  - "django/contrib/postgres/search.py:192:20        phraseto        U       \"phrase\": \"phraseto_tsquery\","
  - "django/contrib/postgres/search.py:192:29        tsquery         U       \"phrase\": \"phraseto_tsquery\","
  - "django/contrib/postgres/search.py:193:20        tsquery         U       \"raw\": \"to_tsquery\","
  - "django/contrib/postgres/search.py:194:36        tsquery         U       websearch\": \"websearch_to_tsquery\","
  - "django/contrib/postgres/signals.py:8:14         oids        U       def get_type_oids(connection_alias, type"
  - "django/contrib/postgres/signals.py:11:26        typarray    U       \"SELECT oid, typarray FROM pg_type WHERE typname"
  - "django/contrib/postgres/signals.py:11:54        typname     U       typarray FROM pg_type WHERE typname = %s\", (type_name,)"
  - "django/contrib/postgres/signals.py:13:9         oids        U       oids = []"
  - "django/contrib/postgres/signals.py:14:15        oids        U       array_oids = []"
  - "django/contrib/postgres/signals.py:16:13        oids        U       oids.append(row[0])"
  - "django/contrib/postgres/signals.py:17:19        oids        U       array_oids.append(row[1])"
  - "django/contrib/sessions/backends/base.py:40:25          testcookie      U       TEST_COOKIE_NAME = \"testcookie\""
  - "django/contrib/sessions/backends/base.py:96:15          asetdefault     U       async def asetdefault(self, key, value):"
  - "django/contrib/sessions/backends/base.py:113:15         atest           U       async def atest_cookie_worked(self)"
  - "django/contrib/sessions/backends/base.py:156:15         ahas            U       async def ahas_key(self, key):"
  - "django/contrib/sessions/backends/base.py:162:15         akeys           U       async def akeys(self):"
  - "django/contrib/sessions/backends/base.py:168:15         avalues         U       async def avalues(self):"
  - "django/contrib/sessions/backends/base.py:174:15         aitems          U       async def aitems(self):"
  - "django/contrib/sessions/backends/base.py:260:50         aload           U       session_cache = await self.aload()"
  - "django/contrib/sessions/backends/base.py:421:15         aflush          U       async def aflush(self):"
  - "django/contrib/sessions/backends/base.py:437:15         acycle          U       async def acycle_key(self):"
  - "django/contrib/sessions/backends/base.py:507:15         aload           U       async def aload(self):"
  - "django/contrib/sessions/backends/cache.py:23:15         acache      U       async def acache_key(self):"
  - "django/contrib/sessions/backends/cache.py:38:15         aload       U       async def aload(self):"
  - "django/contrib/sessions/backends/cache.py:40:62         acache      U       cache.aget(await self.acache_key())"
  - "django/contrib/sessions/backends/cache.py:103:48        acache      U       cache.aget(await self.acache_key()) is not None:"
  - "django/contrib/sessions/backends/cache.py:108:24        acache      U       await self.acache_key(),"
  - "django/contrib/sessions/backends/cache.py:121:56        ahas        U       and await self._cache.ahas_key("
  - "django/contrib/sessions/backends/cached_db.py:31:15         acache      U       async def acache_key(self):"
  - "django/contrib/sessions/backends/cached_db.py:53:15         aload       U       async def aload(self):"
  - "django/contrib/sessions/backends/cached_db.py:55:54         acache      U       cache.aget(await self.acache_key())"
  - "django/contrib/sessions/backends/cached_db.py:66:32         acache      U       await self.acache_key(),"
  - "django/contrib/sessions/backends/cached_db.py:99:28         acache      U       await self.acache_key(),"
  - "django/contrib/sessions/backends/cached_db.py:131:15        aflush      U       async def aflush(self):"
  - "django/contrib/sessions/backends/db.py:58:15        aload       U       async def aload(self):"
  - "django/contrib/sessions/backends/file.py:107:15         aload       U       async def aload(self):"
  - "django/contrib/sessions/backends/file.py:135:26         WRONLY      U       flags = os.O_WRONLY | getattr(os, \"O_BINARY"
  - "django/contrib/sessions/backends/file.py:137:43         CREAT       U       |= os.O_EXCL | os.O_CREAT"
  - "django/contrib/sessions/backends/signed_cookies.py:26:15        aload       U       async def aload(self):"
  - "django/contrib/sessions/backends/signed_cookies.py:82:15        acycle      U       async def acycle_key(self):"
  - "django/contrib/sessions/models.py:19:55         Referer     U       session-ID theft via the \"Referer\" header."
  - "django/contrib/sitemaps/views.py:24:54          noodp       U       Robots-Tag\"] = \"noindex, noodp, noarchive\""
  - "django/contrib/sites/management.py:39:60        incrementation      U       instead of relying on auto-incrementation,"
  - "django/contrib/staticfiles/handlers.py:9:27         asgi        U       django.core.handlers.asgi import ASGIHandler"
  - "django/contrib/staticfiles/handlers.py:9:39         ASGI        U       handlers.asgi import ASGIHandler"
  - "django/contrib/staticfiles/handlers.py:17:37        ASGI        U       methods used by WSGI and ASGI handlers."
  - "django/contrib/staticfiles/handlers.py:84:7         ASGI        U       class ASGIStaticFilesHandler(StaticFiles"
  - "django/contrib/staticfiles/handlers.py:84:55        ASGI        U       StaticFilesHandlerMixin, ASGIHandler):"
  - "django/contrib/staticfiles/handlers.py:86:5         ASGI        U       ASGI application which wraps"
  - "django/contrib/staticfiles/handlers.py:110:23       awrapper    U       async def awrapper():"
  - "django/contrib/staticfiles/handlers.py:114:42       awrapper    U       streaming_content = awrapper()"
  - "django/contrib/staticfiles/management/commands/runserver.py:14:16       nostatic    U       \"--nostatic\","
  - "django/contrib/staticfiles/storage.py:163:58        myfont      U       face hack, like url(myfont.eot?#iefix\")"
  - "django/contrib/staticfiles/storage.py:163:70        iefix       U       like url(myfont.eot?#iefix\")"
  - "django/contrib/staticfiles/storage.py:187:58        myfont      U       face hack, like url(myfont.eot?#iefix\")"
  - "django/contrib/staticfiles/storage.py:187:70        iefix       U       like url(myfont.eot?#iefix\")"
  - "django/contrib/staticfiles/storage.py:213:23        matchobj    U       def converter(matchobj):"
  - "django/contrib/staticfiles/storage.py:220:23        matchobj    U       matches = matchobj.groupdict()"
  - "django/contrib/staticfiles/storage.py:524:58        myfont      U       face hack, like url(myfont.eot?#iefix\")"
  - "django/contrib/staticfiles/storage.py:524:70        iefix       U       like url(myfont.eot?#iefix\")"
  - "django/contrib/syndication/views.py:40:9        feedgen     U       feedgen = self.get_feed(obj"
  - "django/contrib/syndication/views.py:41:46       feedgen     U       HttpResponse(content_type=feedgen.content_type)"
  - "django/contrib/syndication/views.py:46:17       feedgen     U       feedgen.latest_post_date().timestamp"
  - "django/contrib/syndication/views.py:48:9        feedgen     U       feedgen.write(response, \"utf"
  - "django/contrib/syndication/views.py:84:24       argcount    U       # Check co_argcount rather than try/excepting"
  - "django/contrib/syndication/views.py:95:28       argcount    U       if not code.co_argcount and not isinstance("
  - "django/contrib/syndication/views.py:102:24      argcount    U       if code.co_argcount == 2: # one argument"
  - "django/core/asgi.py:2:27        asgi    U       django.core.handlers.asgi import ASGIHandler"
  - "django/core/asgi.py:2:39        ASGI    U       handlers.asgi import ASGIHandler"
  - "django/core/asgi.py:5:9         asgi    U       def get_asgi_application():"
  - "django/core/asgi.py:7:38        ASGI    U       interface to Django's ASGI support. Return an ASGI"
  - "django/core/asgi.py:7:62        ASGI    U       ASGI support. Return an ASGI 3 callable."
  - "django/core/asgi.py:9:40        ASGI    U       django.core.handlers.ASGIHandler a public API"
  - "django/core/asgi.py:13:12       ASGI    U       return ASGIHandler()"
  - "django/core/cache/backends/base.py:176:15       atouch      U       async def atouch(self, key, timeout=DEFAULT"
  - "django/core/cache/backends/base.py:196:9        pgsql       U       pgsql) this can be *much*"
  - "django/core/cache/backends/base.py:256:15       ahas        U       async def ahas_key(self, key, version"
  - "django/core/cache/backends/base.py:274:15       aincr       U       async def aincr(self, key, delta=1,"
  - "django/core/cache/backends/base.py:290:15       adecr       U       async def adecr(self, key, delta=1,"
  - "django/core/cache/backends/base.py:291:27       aincr       U       return await self.aincr(key, -delta, version"
  - "django/core/cache/backends/base.py:361:15       aincr       U       async def aincr_version(self, key, delta"
  - "django/core/cache/backends/base.py:381:15       adecr       U       async def adecr_version(self, key, delta"
  - "django/core/cache/backends/base.py:382:27       aincr       U       return await self.aincr_version(key, -delta"
  - "django/core/cache/backends/db.py:21:28          cacheentry      U       self.model_name = \"cacheentry\""
  - "django/core/cache/backends/db.py:94:48          clob            U       connection.ops.process_clob(value)"
  - "django/core/cache/backends/db.py:200:25         threadsafe      U       # To be threadsafe, updates/inserts are"
  - "django/core/cache/backends/filebased.py:17:22       djcache         U       cache_suffix = \".djcache\""
  - "django/core/cache/backends/filebased.py:23:15       createdir       U       self._createdir()"
  - "django/core/cache/backends/filebased.py:47:15       createdir       U       self._createdir() # Cache dir can be"
  - "django/core/cache/backends/filebased.py:116:10      createdir       U       def _createdir(self):"
  - "django/core/cache/backends/memcached.py:168:11      libmemcached    U       # libmemcached manages its own connections"
  - "django/core/cache/backends/memcached.py:177:27      serde           U       import pymemcache.serde"
  - "django/core/cache/backends/memcached.py:186:14      serde           U       \"serde\": pymemcache.serde.pickle"
  - "django/core/cache/backends/memcached.py:186:33      serde           U       \"serde\": pymemcache.serde.pickle_serde,"
  - "django/core/cache/backends/memcached.py:186:46      serde           U       pymemcache.serde.pickle_serde,"
  - "django/core/checks/messages.py:32:38        applabel        U       method doesn't return \"applabel.modellabel\" and cannot"
  - "django/core/checks/messages.py:32:47        modellabel      U       doesn't return \"applabel.modellabel\" and cannot be changed"
  - "django/core/checks/registry.py:42:33        mytag           U       @registry.register('mytag', 'anothertag')"
  - "django/core/checks/registry.py:42:42        anothertag      U       registry.register('mytag', 'anothertag')"
  - "django/core/checks/registry.py:47:42        mytag           U       register(my_check, 'mytag', 'anothertag')"
  - "django/core/checks/registry.py:47:51        anothertag      U       my_check, 'mytag', 'anothertag')"
  - "django/core/checks/security/base.py:149:6       xframe      U       def _xframe_middleware():"
  - "django/core/checks/security/base.py:162:11      xframe      U       def check_xframe_options_middleware(app"
  - "django/core/checks/security/base.py:163:21      xframe      U       passed_check = _xframe_middleware()"
  - "django/core/checks/security/base.py:249:11      xframe      U       def check_xframe_deny(app_configs, *"
  - "django/core/checks/security/base.py:250:25      xframe      U       passed_check = not _xframe_middleware() or settings"
  - "django/core/files/locks.py:4:43         Feignberg           U       example by Jonathan Feignberg in the Python"
  - "django/core/files/locks.py:6:1          Anatoly             U       Anatoly Techtonik for Roundup"
  - "django/core/files/locks.py:6:9          Techtonik           U       Anatoly Techtonik for Roundup [2] (license"
  - "django/core/files/locks.py:26:14        filedescriptor      U       \"\"\"Get a filedescriptor from something which"
  - "django/core/files/locks.py:57:37        stackoverflow       U       inside Structure by stackoverflow:3480240 ---"
  - "django/core/files/locks.py:74:5         LPOVERLAPPED        U       LPOVERLAPPED = POINTER(OVERLAPPED"
  - "django/core/files/locks.py:80:64        LPOVERLAPPED        U       DWORD, DWORD, DWORD, LPOVERLAPPED]"
  - "django/core/files/locks.py:83:59        LPOVERLAPPED        U       DWORD, DWORD, DWORD, LPOVERLAPPED]"
  - "django/core/files/locks.py:86:28        osfhandle           U       hfile = msvcrt.get_osfhandle(_fd(f))"
  - "django/core/files/locks.py:92:28        osfhandle           U       hfile = msvcrt.get_osfhandle(_fd(f))"
  - "django/core/files/move.py:54:22         WRONLY      U       os.O_WRONLY"
  - "django/core/files/move.py:55:24         CREAT       U       | os.O_CREAT"
  - "django/core/files/move.py:73:37         CIFS        U       Certain filesystems (e.g. CIFS) fail to copy the file"
  - "django/core/files/move.py:89:24         winerror    U       if getattr(e, \"winerror\", 0) != 32:"
  - "django/core/files/storage/base.py:40:35         overriden (overridden)      U       get_available_name` is overriden and validation is lost"
  - "django/core/files/storage/filesystem.py:27:26       WRONLY      U       OS_OPEN_FLAGS = os.O_WRONLY | os.O_CREAT | os.O"
  - "django/core/files/storage/filesystem.py:27:40       CREAT       U       os.O_WRONLY | os.O_CREAT | os.O_EXCL | getattr"
  - "django/core/files/storage/filesystem.py:44:39       WRONLY      U       OS_OPEN_FLAGS != os.O_WRONLY | os.O_CREAT | os.O"
  - "django/core/files/storage/filesystem.py:44:53       CREAT       U       os.O_WRONLY | os.O_CREAT | os.O_EXCL | getattr"
  - "django/core/files/storage/filesystem.py:122:44      CREAT       U       The combination of O_CREAT and O_EXCL makes os"
  - "django/core/files/storage/filesystem.py:125:30      WRONLY      U       os.O_WRONLY"
  - "django/core/files/storage/filesystem.py:126:32      CREAT       U       | os.O_CREAT"
  - "django/core/files/storage/memory.py:2:43        Soyland         U       inmemorystorage (BSD) by Cody Soyland, Seán Hayes, Tore Birkeland"
  - "django/core/files/storage/memory.py:2:52        Seán            U       BSD) by Cody Soyland, Seán Hayes, Tore Birkeland"
  - "django/core/files/storage/memory.py:2:69        Birkeland       U       Soyland, Seán Hayes, Tore Birkeland,"
  - "django/core/files/storage/memory.py:3:10        Presta          U       and Nick Presta."
  - "django/core/files/storage/memory.py:116:27      ENOTDIR         U       errno.ENOTDIR, os.strerror(errno.ENOTDIR"
  - "django/core/files/storage/memory.py:116:39      strerror        U       errno.ENOTDIR, os.strerror(errno.ENOTDIR), current"
  - "django/core/files/storage/memory.py:116:54      ENOTDIR         U       ENOTDIR, os.strerror(errno.ENOTDIR), current_path"
  - "django/core/files/storage/memory.py:127:43      ENOENT          U       FileNotFoundError(errno.ENOENT, os.strerror(errno.ENOENT"
  - "django/core/files/storage/memory.py:127:54      strerror        U       otFoundError(errno.ENOENT, os.strerror(errno.ENOENT), path"
  - "django/core/files/storage/memory.py:127:69      ENOENT          U       ENOENT, os.strerror(errno.ENOENT), path)"
  - "django/core/files/storage/memory.py:132:44      ENOTDIR         U       NotADirectoryError, errno.ENOTDIR)"
  - "django/core/files/storage/memory.py:134:48      EISDIR          U       IsADirectoryError, errno.EISDIR)"
  - "django/core/files/storage/memory.py:136:44      strerror        U       error_cls(error_code, os.strerror(error_code), path)"
  - "django/core/handlers/asgi.py:38:7           ASGI        U       class ASGIRequest(HttpRequest)"
  - "django/core/handlers/asgi.py:40:50          ASGI        U       that decodes from an ASGI-standard request dict"
  - "django/core/handlers/asgi.py:139:7          ASGI        U       class ASGIHandler(base.BaseHandler"
  - "django/core/handlers/asgi.py:140:20         ASGI        U       \"\"\"Handler for ASGI requests.\"\"\""
  - "django/core/handlers/asgi.py:142:21         ASGI        U       request_class = ASGIRequest"
  - "django/core/handlers/asgi.py:175:39         asend       U       signals.request_started.asend(sender=self.__class"
  - "django/core/handlers/asgi.py:227:44         asend       U       signals.request_finished.asend(sender=self.__class"
  - "django/core/handlers/base.py:193:58         subthread       U       synchronous view, run it in a subthread."
  - "django/core/handlers/base.py:247:56         subthread       U       synchronous view, run it in a subthread"
  - "django/core/handlers/wsgi.py:8:35           repercent       U       utils.encoding import repercent_broken_unicode"
  - "django/core/handlers/wsgi.py:151:12         repercent       U       return repercent_broken_unicode(path"
  - "django/core/handlers/wsgi.py:167:53         lighttpd        U       not every web server (lighttpd!) passes this"
  - "django/core/mail/__init__.py:55:5           klass           U       klass = import_string(backend"
  - "django/core/mail/__init__.py:56:12          klass           U       return klass(fail_silently=fail_silently"
  - "django/core/mail/__init__.py:96:5           datatuple       U       datatuple, fail_silently=False"
  - "django/core/mail/__init__.py:99:13          datatuple       U       Given a datatuple of (subject, message"
  - "django/core/mail/__init__.py:117:52         datatuple       U       sender, recipient in datatuple"
  - "django/core/mail/message.py:172:41      surrogateescape     U       line.encode(errors=\"surrogateescape\"))"
  - "django/core/management/__init__.py:273:13       klass           U       klass = app_name"
  - "django/core/management/__init__.py:275:13       klass           U       klass = load_command_class"
  - "django/core/management/__init__.py:276:16       klass           U       return klass"
  - "django/core/management/__init__.py:282:58       COMPREPLY       U       is passed to BASH's `COMPREPLY` variable"
  - "django/core/management/__init__.py:283:49       COMPREPLY       U       completion suggestions. `COMPREPLY` expects a space"
  - "django/core/management/__init__.py:392:49       noreload        U       \"runserver\" and \"--noreload\" not in self.argv:"
  - "django/core/management/__init__.py:397:38       autoreloader    U       # started by the autoreloader. Pretend it didn't happen"
  - "django/core/management/base.py:341:25       djangoprojects      U       '\"/home/djangoprojects/myproject\".'"
  - "django/core/management/color.py:9:26        termcolors      U       django.utils import termcolors"
  - "django/core/management/color.py:59:13       ANSICON         U       or \"ANSICON\" in os.environ"
  - "django/core/management/color.py:78:44       termcolors      U       is empty django.utils.termcolors.DEFAULT_PALETTE is used"
  - "django/core/management/color.py:83:22       termcolors      U       color_settings = termcolors.parse_color_setting"
  - "django/core/management/color.py:88:17       termcolors      U       for role in termcolors.PALETTES[termcolors"
  - "django/core/management/color.py:88:37       termcolors      U       termcolors.PALETTES[termcolors.NOCOLOR_PALETTE]:"
  - "django/core/management/commands/compilemessages.py:93:58        topdown         U       filenames in os.walk(\".\", topdown=True):"
  - "django/core/management/commands/compilemessages.py:132:17       ldir            U       for ldir in dirs:"
  - "django/core/management/commands/compilemessages.py:133:61       ldir            U       filenames in os.walk(ldir):"
  - "django/core/management/commands/compilemessages.py:174:25       writability     U       # Check writability on first location"
  - "django/core/management/commands/createcachetable.py:43:23       tablenames      U       def handle(self, *tablenames, **options):"
  - "django/core/management/commands/createcachetable.py:47:12       tablenames      U       if tablenames:"
  - "django/core/management/commands/createcachetable.py:49:30       tablenames      U       for tablename in tablenames:"
  - "django/core/management/commands/diffsettings.py:4:28        omittable       U       module_to_dict(module, omittable=lambda k: k.startswith"
  - "django/core/management/commands/diffsettings.py:6:69        omittable       U       in dir(module) if not omittable(k)}"
  - "django/core/management/commands/diffsettings.py:64:34       postconf        U       Inspired by Postfix's \"postconf -n\"."
  - "django/core/management/commands/inspectdb.py:298:26         sfield      U       new_name = \"%sfield\" % new_name"
  - "django/core/management/commands/makemessages.py:81:12       templatized     U       def is_templatized(self):"
  - "django/core/management/commands/makemessages.py:97:24       templatized     U       if not self.is_templatized:"
  - "django/core/management/commands/makemessages.py:105:9       xgettext        U       xgettext GNU gettext utility"
  - "django/core/management/commands/makemessages.py:107:24      templatized     U       if not self.is_templatized:"
  - "django/core/management/commands/makemessages.py:121:43      xgettext        U       messages generated by xgettext GNU gettext utility"
  - "django/core/management/commands/makemessages.py:126:24      templatized     U       if not self.is_templatized:"
  - "django/core/management/commands/makemessages.py:149:20      templatized     U       if self.is_templatized:"
  - "django/core/management/commands/makemessages.py:216:5       xgettext        U       xgettext_options = [\"--from-code"
  - "django/core/management/commands/makemessages.py:254:32      djangojs        U       'if the domain is \"djangojs\"). Separate multiple"
  - "django/core/management/commands/makemessages.py:336:18      xgettext        U       self.xgettext_options = self.xgettext"
  - "django/core/management/commands/makemessages.py:336:42      xgettext        U       xgettext_options = self.xgettext_options[:] + [\"--no"
  - "django/core/management/commands/makemessages.py:352:43      djangojs        U       domain not in (\"django\", \"djangojs\"):"
  - "django/core/management/commands/makemessages.py:355:32      djangojs        U       \"'django' and 'djangojs'\""
  - "django/core/management/commands/makemessages.py:357:28      djangojs        U       if self.domain == \"djangojs\":"
  - "django/core/management/commands/makemessages.py:536:19      topdown         U       root, topdown=True, followlinks=self"
  - "django/core/management/commands/makemessages.py:536:33      followlinks     U       root, topdown=True, followlinks=self.symlinks"
  - "django/core/management/commands/makemessages.py:602:37      djangojs        U       self.domain not in (\"djangojs\", \"django\"):"
  - "django/core/management/commands/makemessages.py:702:9       pofile          U       pofile = os.path.join(basedir"
  - "django/core/management/commands/makemessages.py:704:27      pofile          U       if os.path.exists(pofile):"
  - "django/core/management/commands/makemessages.py:705:60      pofile          U       msgmerge_options + [pofile, potfile]"
  - "django/core/management/commands/makemessages.py:714:25      pofile          U       msgs = Path(pofile).read_text(encoding"
  - "django/core/management/commands/makemessages.py:724:19      pofile          U       with open(pofile, \"w\", encoding=\"utf"
  - "django/core/management/commands/migrate.py:14:31        Truncator       U       django.utils.text import Truncator"
  - "django/core/management/commands/migrate.py:511:21       Truncator       U       truncated = Truncator(action)"
  - "django/core/management/commands/runserver.py:16:1           naiveip             U       naiveip_re = _lazy_re_compile"
  - "django/core/management/commands/runserver.py:53:16          nothreading         U       \"--nothreading\","
  - "django/core/management/commands/runserver.py:59:16          noreload            U       \"--noreload\","
  - "django/core/management/commands/runserver.py:94:26          naiveip             U       m = re.match(naiveip_re, options[\"addrport"
  - "django/core/management/commands/runserver.py:116:38         autoreloader        U       the server, using the autoreloader if needed.\"\"\""
  - "django/core/management/commands/runserver.py:158:23         EADDRINUSE          U       errno.EADDRINUSE: \"That port is already"
  - "django/core/management/commands/runserver.py:159:23         EADDRNOTAVAIL       U       errno.EADDRNOTAVAIL: \"That IP address can"
  - "django/core/management/commands/runserver.py:197:67         ASGI                U       a production WSGI or ASGI server \""
  - "django/core/management/commands/sendtestemail.py:33:56          gethostname     U       %s on %s\" % (socket.gethostname(), timezone.now())"
  - "django/core/management/commands/shell.py:13:10          bpython     U       \"bpython, if one of them is available"
  - "django/core/management/commands/shell.py:18:27          bpython     U       shells = [\"ipython\", \"bpython\", \"python\"]"
  - "django/core/management/commands/shell.py:35:30          bpython     U       '\"ipython\", \"bpython\", and \"python\"'"
  - "django/core/management/commands/shell.py:52:9           bpython     U       def bpython(self, options):"
  - "django/core/management/commands/shell.py:53:16          bpython     U       import bpython"
  - "django/core/management/commands/squashmigrations.py:143:13      smigration      U       for smigration in migrations_to_squash"
  - "django/core/management/commands/squashmigrations.py:144:16      smigration      U       if smigration.replaces:"
  - "django/core/management/commands/squashmigrations.py:150:31      smigration      U       operations.extend(smigration.operations)"
  - "django/core/management/commands/squashmigrations.py:151:31      smigration      U       for dependency in smigration.dependencies:"
  - "django/core/management/commands/squashmigrations.py:157:39      smigration      U       elif dependency[0] != smigration.app_label or first_migration"
  - "django/core/management/templates.py:315:16      addheaders      U       opener.addheaders = [(\"User-Agent\", f"
  - "django/core/management/utils.py:73:13       fext    U       fext = f + ext"
  - "django/core/management/utils.py:74:31       fext    U       if os.path.isfile(fext):"
  - "django/core/management/utils.py:75:24       fext    U       return fext"
  - "django/core/paginator.py:29:26          paginators      U       range generated by paginators, e.g. [1, 2, '…', 5"
  - "django/core/serializers/base.py:2:32        unserializer    U       abstract serializer/unserializer base classes."
  - "django/core/serializers/base.py:59:9        perc            U       perc = count * 100 // self"
  - "django/core/serializers/base.py:60:16       perc            U       done = perc * self.progress_width"
  - "django/core/serializers/pyyaml.py:33:22         representer     U       DjangoSafeDumper.add_representer(decimal.Decimal, DjangoSafeDu"
  - "django/core/serializers/pyyaml.py:34:22         representer     U       DjangoSafeDumper.add_representer("
  - "django/core/serializers/pyyaml.py:39:22         representer     U       DjangoSafeDumper.add_representer(dict, DjangoSafeDumper"
  - "django/core/serializers/xml_serializer.py:15:19         xmlutils        U       from django.utils.xmlutils import SimplerXMLGenerator"
  - "django/core/serializers/xml_serializer.py:117:59        subelements     U       keys are rolled out as subelements"
  - "django/core/serializers/xml_serializer.py:142:63        subelements     U       keys are rolled out as subelements"
  - "django/core/serializers/xml_serializer.py:305:46        subelements     U       there are 'natural' subelements, it must be a natural"
  - "django/core/serializers/xml_serializer.py:345:46        subelements     U       there are 'natural' subelements, it must be a natural"
  - "django/core/serializers/xml_serializer.py:411:33        Heimes          U       code based on Christian Heimes' defusedxml"
  - "django/core/servers/basehttp.py:32:50       projectname     U       application`` object in ``projectname/wsgi.py``."
  - "django/core/servers/basehttp.py:238:18      requestline     U       self.raw_requestline = self.rfile.readline"
  - "django/core/servers/basehttp.py:239:25      requestline     U       if len(self.raw_requestline) > 65536:"
  - "django/core/servers/basehttp.py:240:18      requestline     U       self.requestline = \"\""
  - "django/core/servers/basehttp.py:252:43      backpointer     U       request_handler = self # backpointer for logging & connection"
  - "django/core/signing.py:7:2          Imhlb       U       'ImhlbGxvIg:1QaUZC:YIye-ze"
  - "django/core/signing.py:7:43         sgmk        U       YIye-ze3TTx7gtSv422nZA4sgmk'"
  - "django/core/signing.py:16:20        Imhlb       U       >>> signing.loads(\"ImhlbGxvIg:1QaUZC:YIye-ze"
  - "django/core/signing.py:16:61        sgmk        U       YIye-ze3TTx7gtSv422nZA4sgmk\")"
  - "django/core/signing.py:18:20        Imhlb       U       >>> signing.loads(\"ImhlbGxvIg:1QaUZC:YIye-ze"
  - "django/core/signing.py:20:26        Imhlb       U       BadSignature: Signature \"ImhlbGxvIg:1QaUZC:YIye-ze"
  - "django/core/signing.py:27:9         ERACA       U       '.eJwFwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxo"
  - "django/core/signing.py:27:32        ZVJs        U       eJwFwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T"
  - "django/core/signing.py:27:36        Ngkxa       U       FwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T7vhAml"
  - "django/core/signing.py:27:44        Dgxc        U       rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T7vhAml:1QaUaL"
  - "django/core/signing.py:27:81        FQVXI       U       vhAml:1QaUaL:BA0thEZrp4FQVXIXuOvYJtLJSrQ'"
  - "django/core/validators.py:71:19         uffff       U       ul = \"\\u00a1-\\uffff\" # Unicode letters"
  - "django/core/validators.py:128:19        uffff       U       ul = \"\\u00a1-\\uffff\" # Unicode letters"
  - "django/db/backends/base/base.py:108:62      executemany     U       invoked around execute()/executemany()"
  - "django/db/backends/base/creation.py:33:63       keepdb      U       False, serialize=True, keepdb=False"
  - "django/db/backends/base/creation.py:46:16       keepdb      U       if keepdb:"
  - "django/db/backends/base/creation.py:57:38       keepdb      U       could skip this call if keepdb is True, but we instead"
  - "django/db/backends/base/creation.py:58:23       keepdb      U       # give it the keepdb param. This is to handle"
  - "django/db/backends/base/creation.py:62:54       keepdb      U       verbosity, autoclobber, keepdb)"
  - "django/db/backends/base/creation.py:101:36      DJANGOS     U       environ.get(\"RUNNING_DJANGOS_TEST_SUITE\") == \"true"
  - "django/db/backends/base/creation.py:367:28      RDBMS       U       accordingly to the RDBMS particularities."
  - "django/db/backends/base/features.py:83:36       timedeltas      U       a true datatype for timedeltas?"
  - "django/db/backends/base/features.py:175:24      clientside      U       schema_editor_uses_clientside_param_binding = False"
  - "django/db/backends/base/operations.py:316:23        lastrowid           U       return cursor.lastrowid"
  - "django/db/backends/base/operations.py:371:17        clob                U       def process_clob(self, value):"
  - "django/db/backends/base/operations.py:373:31        CLOB                U       Return the value of a CLOB column, for backends"
  - "django/db/backends/base/operations.py:525:18        autopk              U       def validate_autopk_value(self, value):"
  - "django/db/backends/base/operations.py:683:9         subexpression       U       subexpression types (e.g., date expressions"
  - "django/db/backends/base/schema.py:83:7          Overrideable    U       # Overrideable SQL templates"
  - "django/db/backends/base/schema.py:86:9          retablespace    U       sql_retablespace_table = \"ALTER TABLE"
  - "django/db/backends/base/schema.py:214:37        deferreds       U       Create column SQL, add FK deferreds if needed."
  - "django/db/backends/base/schema.py:215:16        sqls            U       column_sqls = []"
  - "django/db/backends/base/schema.py:249:20        sqls            U       column_sqls.append("
  - "django/db/backends/base/schema.py:273:20        sqls            U       constraint_sqls = []"
  - "django/db/backends/base/schema.py:281:24        sqls            U       constraint_sqls.extend("
  - "django/db/backends/base/schema.py:289:43        sqls            U       statement in (*column_sqls, *constraint_sqls)"
  - "django/db/backends/base/schema.py:705:22        retablespace    U       self.sql_retablespace_table"
  - "django/db/backends/base/schema.py:1223:9        rels            U       rels_to_update = []"
  - "django/db/backends/base/schema.py:1225:13       rels            U       rels_to_update.extend(_related"
  - "django/db/backends/base/schema.py:1231:13       rels            U       rels_to_update.extend(_related"
  - "django/db/backends/base/schema.py:1232:54       rels            U       on the other end of rels from the PK stuff above"
  - "django/db/backends/base/schema.py:1233:33       rels            U       old_rel, new_rel in rels_to_update:"
  - "django/db/backends/mysql/base.py:57:29          reraises        U       exception instances and reraises them with the correct"
  - "django/db/backends/mysql/base.py:84:9           executemany     U       def executemany(self, query, args):"
  - "django/db/backends/mysql/base.py:86:32          executemany     U       return self.cursor.executemany(query, args)"
  - "django/db/backends/mysql/base.py:151:10         tinyblob        U       \"tinyblob\","
  - "django/db/backends/mysql/base.py:153:10         mediumblob      U       \"mediumblob\","
  - "django/db/backends/mysql/base.py:155:10         tinytext        U       \"tinytext\","
  - "django/db/backends/mysql/base.py:157:10         mediumtext      U       \"mediumtext\","
  - "django/db/backends/mysql/creation.py:20:59          keepdb          U       cursor, parameters, keepdb=False):"
  - "django/db/backends/mysql/creation.py:22:65          keepdb          U       cursor, parameters, keepdb)"
  - "django/db/backends/mysql/creation.py:31:49          keepdb          U       suffix, verbosity, keepdb=False):"
  - "django/db/backends/mysql/creation.py:40:70          keepdb          U       cursor, test_db_params, keepdb)"
  - "django/db/backends/mysql/creation.py:42:20          keepdb          U       if keepdb:"
  - "django/db/backends/mysql/creation.py:67:14          mysqldump       U       \"mysqldump\","
  - "django/db/backends/mysql/creation.py:86:48          SIGPIPE         U       dump_proc to receive a SIGPIPE if the load process"
  - "django/db/backends/mysql/features.py:144:46         nonaggregated       U       GROUP BY cannot contain nonaggregated column when \""
  - "django/db/backends/mysql/introspection.py:19:37         prec        U       data_type max_len num_prec num_scale extra column"
  - "django/db/backends/mysql/introspection.py:169:37        prec        U       to_int(info.num_prec) or line[4],"
  - "django/db/backends/mysql/introspection.py:335:39        colseq      U       non_unique, index, colseq, column, order, type"
  - "django/db/backends/mysql/operations.py:47:15        DAYOFWEEK           U       # DAYOFWEEK() returns an integer"
  - "django/db/backends/mysql/operations.py:48:22        DAYOFWEEK           U       return f\"DAYOFWEEK({sql})\", params"
  - "django/db/backends/mysql/operations.py:58:42        YEARWEEK            U       the year part from the YEARWEEK function, which returns"
  - "django/db/backends/mysql/operations.py:60:31        YEARWEEK            U       return f\"TRUNCATE(YEARWEEK({sql}, 3), -2) / 10"
  - "django/db/backends/mysql/operations.py:65:44        loookup             U       ValueError(f\"Invalid loookup type: {lookup_type!r"
  - "django/db/backends/mysql/operations.py:79:19        MAKEDATE            U       f\"MAKEDATE(YEAR({sql}), 1) + \""
  - "django/db/backends/mysql/operations.py:120:36       MAKEDATE            U       f\"CAST(DATE_FORMAT(MAKEDATE(YEAR({sql}), 1) + \""
  - "django/db/backends/mysql/operations.py:245:18       autopk              U       def validate_autopk_value(self, value):"
  - "django/db/backends/mysql/operations.py:285:32       timespec            U       return value.isoformat(timespec=\"microseconds\")"
  - "django/db/backends/mysql/operations.py:362:17       TIMESTAMPDIFF       U       return \"TIMESTAMPDIFF(MICROSECOND, %s, %s"
  - "django/db/backends/oracle/base.py:80:61         DJANGOTEST              U       integrity constraint (TEST_DJANGOTEST.SYS"
  - "django/db/backends/oracle/base.py:83:53         DJANGOTEST              U       unique constraint (DJANGOTEST.DEFERRABLE_"
  - "django/db/backends/oracle/base.py:133:23        NCLOB                   U       \"JSONField\": \"NCLOB\","
  - "django/db/backends/oracle/base.py:144:23        NCLOB                   U       \"TextField\": \"NCLOB\","
  - "django/db/backends/oracle/base.py:158:29        clob                    U       limited_data_types = (\"clob\", \"nclob\", \"blob\")"
  - "django/db/backends/oracle/base.py:158:37        nclob                   U       data_types = (\"clob\", \"nclob\", \"blob\")"
  - "django/db/backends/oracle/base.py:192:6         likec                   U       _likec_operators = {"
  - "django/db/backends/oracle/base.py:194:22        LIKEC                   U       \"contains\": \"LIKEC %s ESCAPE '\\\\'\","
  - "django/db/backends/oracle/base.py:195:23        LIKEC                   U       \"icontains\": \"LIKEC UPPER(%s) ESCAPE '\\"
  - "django/db/backends/oracle/base.py:196:24        LIKEC                   U       \"startswith\": \"LIKEC %s ESCAPE '\\\\'\","
  - "django/db/backends/oracle/base.py:197:22        LIKEC                   U       \"endswith\": \"LIKEC %s ESCAPE '\\\\'\","
  - "django/db/backends/oracle/base.py:198:25        LIKEC                   U       \"istartswith\": \"LIKEC UPPER(%s) ESCAPE '\\"
  - "django/db/backends/oracle/base.py:225:6         likec                   U       _likec_pattern_ops = {"
  - "django/db/backends/oracle/base.py:296:40        likec                   U       self.operators = self._likec_operators"
  - "django/db/backends/oracle/base.py:297:42        likec                   U       pattern_ops = self._likec_pattern_ops"
  - "django/db/backends/oracle/base.py:302:25        stmtcachesize           U       self.connection.stmtcachesize = 20"
  - "django/db/backends/oracle/base.py:362:39        CLOB                    U       size needs to be set as CLOB. Alternatively, if the"
  - "django/db/backends/oracle/base.py:402:71        CLOB                    U       000 characters as a CLOB."
  - "django/db/backends/oracle/base.py:403:48        CLOB                    U       size = Database.DB_TYPE_CLOB"
  - "django/db/backends/oracle/base.py:447:21        outputtypehandler       U       self.cursor.outputtypehandler = self._output_type"
  - "django/db/backends/oracle/base.py:458:35        prec                    U       context = decimal.Context(prec=precision)"
  - "django/db/backends/oracle/base.py:459:45        scaleb                  U       decimal.Decimal(1).scaleb(-scale)"
  - "django/db/backends/oracle/base.py:466:38        NCLOB                   U       appropriate Python type, and NCLOB with JSON as strings"
  - "django/db/backends/oracle/base.py:474:21        outconverter            U       outconverter = FormatStylePlaceholderCurso"
  - "django/db/backends/oracle/base.py:478:21        outconverter            U       outconverter = float"
  - "django/db/backends/oracle/base.py:482:17        outconverter            U       outconverter = FormatStylePlaceholderCurso"
  - "django/db/backends/oracle/base.py:489:17        outconverter            U       outconverter = FormatStylePlaceholderCurso"
  - "django/db/backends/oracle/base.py:493:17        arraysize               U       arraysize=cursor.arraysize,"
  - "django/db/backends/oracle/base.py:493:34        arraysize               U       arraysize=cursor.arraysize,"
  - "django/db/backends/oracle/base.py:494:17        outconverter            U       outconverter=outconverter,"
  - "django/db/backends/oracle/base.py:496:35        NLOB                    U       oracledb 2.0.0+ returns NLOB columns with IS JSON"
  - "django/db/backends/oracle/base.py:498:46        NCLOB                   U       == Database.DB_TYPE_NCLOB:"
  - "django/db/backends/oracle/base.py:499:48        NCLOB                   U       var(Database.DB_TYPE_NCLOB, arraysize=cursor.arraysize"
  - "django/db/backends/oracle/base.py:499:55        arraysize               U       Database.DB_TYPE_NCLOB, arraysize=cursor.arraysize)"
  - "django/db/backends/oracle/base.py:499:72        arraysize               U       NCLOB, arraysize=cursor.arraysize)"
  - "django/db/backends/oracle/base.py:516:22        setinputsizes           U       self.setinputsizes(**sizes)"
  - "django/db/backends/oracle/base.py:525:22        setinputsizes           U       self.setinputsizes(*sizes)"
  - "django/db/backends/oracle/base.py:550:15        executemany             U       # executemany() shares the formatted"
  - "django/db/backends/oracle/base.py:583:9         executemany             U       def executemany(self, query, params"
  - "django/db/backends/oracle/base.py:589:16        firstparams             U       query, firstparams = self._fix_for_params"
  - "django/db/backends/oracle/base.py:592:22        firstparams             U       formatted = [firstparams] + [self._format_params"
  - "django/db/backends/oracle/base.py:595:32        executemany             U       return self.cursor.executemany("
  - "django/db/backends/oracle/base.py:609:9         arrayvar                U       def arrayvar(self, *args):"
  - "django/db/backends/oracle/base.py:610:44        arrayvar                U       VariableWrapper(self.cursor.arrayvar(*args))"
  - "django/db/backends/oracle/client.py:8:21        rlwrap      U       wrapper_name = \"rlwrap\""
  - "django/db/backends/oracle/creation.py:29:63         keepdb          U       autoclobber=False, keepdb=False):"
  - "django/db/backends/oracle/creation.py:35:56         keepdb          U       parameters, verbosity, keepdb"
  - "django/db/backends/oracle/creation.py:78:64         keepdb          U       parameters, verbosity, keepdb"
  - "django/db/backends/oracle/creation.py:93:75         keepdb          U       parameters, verbosity, keepdb)"
  - "django/db/backends/oracle/creation.py:113:64        keepdb          U       parameters, verbosity, keepdb"
  - "django/db/backends/oracle/creation.py:307:37        DATAFILES       U       INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS"
  - "django/db/backends/oracle/creation.py:309:37        DATAFILES       U       INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS"
  - "django/db/backends/oracle/features.py:46:15         uppercasing     U       # does by uppercasing all identifiers."
  - "django/db/backends/oracle/features.py:125:47        NCLOB           U       t support comparing NCLOB to NUMBER.\": {"
  - "django/db/backends/oracle/features.py:127:23        textlink        U       \"test_textlink_filter\","
  - "django/db/backends/oracle/functions.py:20:17        NUMTODSINTERVAL     U       function = \"NUMTODSINTERVAL\""
  - "django/db/backends/oracle/introspection.py:24:26        CLOB        U       oracledb.DB_TYPE_CLOB: \"TextField\","
  - "django/db/backends/oracle/introspection.py:27:26        NCLOB       U       oracledb.DB_TYPE_NCLOB: \"TextField\","
  - "django/db/backends/oracle/introspection.py:54:36        NCLOB       U       data_type == oracledb.NCLOB and description.is_json"
  - "django/db/backends/oracle/introspection.py:74:31        mviews      U       FROM user_mviews"
  - "django/db/backends/oracle/introspection.py:75:32        mviews      U       WHERE user_mviews.mview_name = user_tables"
  - "django/db/backends/oracle/introspection.py:75:39        mview       U       WHERE user_mviews.mview_name = user_tables.table"
  - "django/db/backends/oracle/introspection.py:80:20        mview       U       SELECT mview_name, 'v', NULL FROM"
  - "django/db/backends/oracle/introspection.py:80:52        mviews      U       'v', NULL FROM user_mviews"
  - "django/db/backends/oracle/introspection.py:102:31       mviews      U       FROM user_mviews"
  - "django/db/backends/oracle/introspection.py:103:32       mviews      U       WHERE user_mviews.mview_name = user_tables"
  - "django/db/backends/oracle/introspection.py:103:39       mview       U       WHERE user_mviews.mview_name = user_tables.table"
  - "django/db/backends/oracle/introspection.py:112:31       mview       U       WHERE user_mviews.mview_name = UPPER(%s)"
  - "django/db/backends/oracle/introspection.py:180:37       ROWNUM      U       SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0\".format"
  - "django/db/backends/oracle/introspection.py:309:17       LISTAGG     U       LISTAGG(LOWER(cols.column_name"
  - "django/db/backends/oracle/introspection.py:350:17       LISTAGG     U       LISTAGG(LOWER(cols.column_name"
  - "django/db/backends/oracle/introspection.py:386:17       LISTAGG     U       LISTAGG(LOWER(cols.column_name"
  - "django/db/backends/oracle/introspection.py:388:17       LISTAGG     U       LISTAGG(cols.descend, ',') WITHIN"
  - "django/db/backends/oracle/operations.py:98:30       IYYY                U       extract_param = \"IYYY\""
  - "django/db/backends/oracle/operations.py:102:44      loookup             U       ValueError(f\"Invalid loookup type: {lookup_type!r"
  - "django/db/backends/oracle/operations.py:346:30      currval             U       cursor.execute('\"%s\".currval' % sq_name)"
  - "django/db/backends/oracle/operations.py:371:17      clob                U       def process_clob(self, value):"
  - "django/db/backends/oracle/operations.py:421:49      rcons               U       user_tables.table_name, rcons.constraint_name"
  - "django/db/backends/oracle/operations.py:429:42      rcons               U       user_constraints rcons"
  - "django/db/backends/oracle/operations.py:430:54      rcons               U       tables.table_name = rcons.table_name"
  - "django/db/backends/oracle/operations.py:431:29      rcons               U       AND rcons.constraint_type = 'R"
  - "django/db/backends/oracle/operations.py:434:25      NOCYCLE             U       NOCYCLE PRIOR cons.constraint"
  - "django/db/backends/oracle/operations.py:434:62      rcons               U       cons.constraint_name = rcons.r_constraint_name"
  - "django/db/backends/oracle/operations.py:707:18      NUMTODSINTERVAL     U       \"NUMTODSINTERVAL(TO_NUMBER(%s - %s),"
  - "django/db/backends/oracle/schema.py:130:25      CLOB            U       if re.match(\"^N?CLOB\", old_type):"
  - "django/db/backends/oracle/schema.py:187:40      uppercased      U       properly shortened and uppercased identifier as returned"
  - "django/db/backends/oracle/utils.py:69:5         NCLOB       U       NCLOB = \"TO_NCLOB(%s)\""
  - "django/db/backends/oracle/utils.py:69:17        NCLOB       U       NCLOB = \"TO_NCLOB(%s)\""
  - "django/db/backends/oracle/utils.py:90:22        NCLOB       U       \"TextField\": NCLOB,"
  - "django/db/backends/oracle/utils.py:98:25        makedsn     U       return Database.makedsn(host, int(settings_dict"
  - "django/db/backends/postgresql/base.py:53:62         tzloader        U       adapters_template, register_tzloader"
  - "django/db/backends/postgresql/base.py:55:5          TIMESTAMPTZ     U       TIMESTAMPTZ_OID = adapters.types"
  - "django/db/backends/postgresql/base.py:55:39         timestamptz     U       OID = adapters.types[\"timestamptz\"].oid"
  - "django/db/backends/postgresql/base.py:66:5          INETARRAY       U       INETARRAY_OID = 1041"
  - "django/db/backends/postgresql/base.py:67:5          INETARRAY       U       INETARRAY = psycopg2.extensions"
  - "django/db/backends/postgresql/base.py:68:10         INETARRAY       U       (INETARRAY_OID,),"
  - "django/db/backends/postgresql/base.py:69:10         INETARRAY       U       \"INETARRAY\","
  - "django/db/backends/postgresql/base.py:72:39         INETARRAY       U       extensions.register_type(INETARRAY)"
  - "django/db/backends/postgresql/base.py:99:25         bytea           U       \"BinaryField\": \"bytea\","
  - "django/db/backends/postgresql/base.py:297:73        poolers         U       default to keep connection poolers"
  - "django/db/backends/postgresql/base.py:330:36        getconn         U       connection = self.pool.getconn()"
  - "django/db/backends/postgresql/base.py:383:54        putconn         U       errors` only works for `putconn` as long as there"
  - "django/db/backends/postgresql/base.py:391:43        putconn         U       self.connection._pool.putconn(self.connection)"
  - "django/db/backends/postgresql/base.py:434:13        tzloader        U       tzloader = self.connection.adapters"
  - "django/db/backends/postgresql/base.py:434:60        TIMESTAMPTZ     U       adapters.get_loader(TIMESTAMPTZ_OID, Format.TEXT)"
  - "django/db/backends/postgresql/base.py:435:33        tzloader        U       if self.timezone != tzloader.timezone:"
  - "django/db/backends/postgresql/base.py:436:26        tzloader        U       register_tzloader(self.timezone, cursor"
  - "django/db/backends/postgresql/base.py:561:13        qparts          U       qparts = [sql.SQL(\"SELECT"
  - "django/db/backends/postgresql/base.py:564:21        qparts          U       qparts.append(sql.Literal(item"
  - "django/db/backends/postgresql/base.py:565:21        qparts          U       qparts.append(sql.SQL(\",\")"
  - "django/db/backends/postgresql/base.py:566:21        qparts          U       del qparts[-1]"
  - "django/db/backends/postgresql/base.py:568:13        qparts          U       qparts.append(sql.SQL(\")\")"
  - "django/db/backends/postgresql/base.py:585:9         prepareable     U       prepareable SQL (#20516)."
  - "django/db/backends/postgresql/client.py:43:18       PGSERVICE           U       env[\"PGSERVICE\"] = str(service)"
  - "django/db/backends/postgresql/client.py:45:18       PGSSLMODE           U       env[\"PGSSLMODE\"] = str(sslmode)"
  - "django/db/backends/postgresql/client.py:47:18       PGSSLROOTCERT       U       env[\"PGSSLROOTCERT\"] = str(sslrootcert"
  - "django/db/backends/postgresql/client.py:49:18       PGSSLCERT           U       env[\"PGSSLCERT\"] = str(sslcert)"
  - "django/db/backends/postgresql/client.py:51:18       PGSSLKEY            U       env[\"PGSSLKEY\"] = str(sslkey)"
  - "django/db/backends/postgresql/client.py:53:18       PGPASSFILE          U       env[\"PGPASSFILE\"] = str(passfile)"
  - "django/db/backends/postgresql/creation.py:35:57         datname     U       catalog.pg_database WHERE datname = %s\","
  - "django/db/backends/postgresql/creation.py:40:59         keepdb      U       cursor, parameters, keepdb=False):"
  - "django/db/backends/postgresql/creation.py:42:16         keepdb      U       if keepdb and self._database_exists"
  - "django/db/backends/postgresql/creation.py:46:65         keepdb      U       cursor, parameters, keepdb)"
  - "django/db/backends/postgresql/creation.py:52:22         keepdb      U       elif not keepdb:"
  - "django/db/backends/postgresql/creation.py:57:49         keepdb      U       suffix, verbosity, keepdb=False):"
  - "django/db/backends/postgresql/features.py:31:24         clientside      U       schema_editor_uses_clientside_param_binding = True"
  - "django/db/backends/postgresql/features.py:46:17         plpgsql         U       $$ LANGUAGE plpgsql;\"\"\""
  - "django/db/backends/postgresql/features.py:54:17         plpgsql         U       $$ LANGUAGE plpgsql;\"\"\""
  - "django/db/backends/postgresql/introspection.py:63:28        relispartition      U       WHEN c.relispartition THEN 'p'"
  - "django/db/backends/postgresql/introspection.py:71:23        nspname             U       AND n.nspname NOT IN ('pg_catalog"
  - "django/db/backends/postgresql/introspection.py:93:24        attnotnull          U       NOT (a.attnotnull OR (t.typtype = 'd'"
  - "django/db/backends/postgresql/introspection.py:93:41        typtype             U       (a.attnotnull OR (t.typtype = 'd' AND t.typnotnull"
  - "django/db/backends/postgresql/introspection.py:93:61        typnotnull          U       typtype = 'd' AND t.typnotnull)) AS is_nullable,"
  - "django/db/backends/postgresql/introspection.py:94:32        adbin               U       pg_get_expr(ad.adbin, ad.adrelid) AS column"
  - "django/db/backends/postgresql/introspection.py:94:42        adrelid             U       get_expr(ad.adbin, ad.adrelid) AS column_default,"
  - "django/db/backends/postgresql/introspection.py:95:27        collname            U       CASE WHEN collname = 'default' THEN NULL"
  - "django/db/backends/postgresql/introspection.py:95:63        collname            U       default' THEN NULL ELSE collname END AS collation,"
  - "django/db/backends/postgresql/introspection.py:96:19        attidentity         U       a.attidentity != '' AS is_autofield"
  - "django/db/backends/postgresql/introspection.py:97:35        attrelid            U       col_description(a.attrelid, a.attnum) AS column"
  - "django/db/backends/postgresql/introspection.py:97:47        attnum              U       description(a.attrelid, a.attnum) AS column_comment"
  - "django/db/backends/postgresql/introspection.py:99:26        attrdef             U       LEFT JOIN pg_attrdef ad ON a.attrelid = ad"
  - "django/db/backends/postgresql/introspection.py:99:42        attrelid            U       JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum"
  - "django/db/backends/postgresql/introspection.py:99:56        adrelid             U       ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum"
  - "django/db/backends/postgresql/introspection.py:99:70        attnum              U       attrelid = ad.adrelid AND a.attnum = ad.adnum"
  - "django/db/backends/postgresql/introspection.py:99:82        adnum               U       adrelid AND a.attnum = ad.adnum"
  - "django/db/backends/postgresql/introspection.py:100:44       attcollation        U       pg_collation co ON a.attcollation = co.oid"
  - "django/db/backends/postgresql/introspection.py:101:33       atttypid            U       JOIN pg_type t ON a.atttypid = t.oid"
  - "django/db/backends/postgresql/introspection.py:102:34       attrelid            U       JOIN pg_class c ON a.attrelid = c.oid"
  - "django/db/backends/postgresql/introspection.py:106:23       nspname             U       AND n.nspname NOT IN ('pg_catalog"
  - "django/db/backends/postgresql/introspection.py:134:30       colname             U       a.attname AS colname"
  - "django/db/backends/postgresql/introspection.py:138:27       classid             U       AND d.classid = 'pg_class'::regclass"
  - "django/db/backends/postgresql/introspection.py:138:49       regclass            U       classid = 'pg_class'::regclass"
  - "django/db/backends/postgresql/introspection.py:139:27       refclassid          U       AND d.refclassid = 'pg_class'::regclass"
  - "django/db/backends/postgresql/introspection.py:139:52       regclass            U       refclassid = 'pg_class'::regclass"
  - "django/db/backends/postgresql/introspection.py:140:42       refobjid            U       pg_attribute a ON d.refobjid = a.attrelid"
  - "django/db/backends/postgresql/introspection.py:140:55       attrelid            U       a ON d.refobjid = a.attrelid"
  - "django/db/backends/postgresql/introspection.py:141:27       refobjsubid         U       AND d.refobjsubid = a.attnum"
  - "django/db/backends/postgresql/introspection.py:141:43       attnum              U       AND d.refobjsubid = a.attnum"
  - "django/db/backends/postgresql/introspection.py:142:50       refobjid            U       class tbl ON tbl.oid = d.refobjid"
  - "django/db/backends/postgresql/introspection.py:164:42       conrelid            U       JOIN pg_class c1 ON con.conrelid = c1.oid"
  - "django/db/backends/postgresql/introspection.py:165:42       confrelid           U       JOIN pg_class c2 ON con.confrelid = c2.oid"
  - "django/db/backends/postgresql/introspection.py:167:48       attrelid            U       attribute a1 ON c1.oid = a1.attrelid AND a1.attnum = con"
  - "django/db/backends/postgresql/introspection.py:167:64       attnum              U       a1.attrelid AND a1.attnum = con.conkey[1]"
  - "django/db/backends/postgresql/introspection.py:167:77       conkey              U       AND a1.attnum = con.conkey[1]"
  - "django/db/backends/postgresql/introspection.py:169:64       attnum              U       a2.attrelid AND a2.attnum = con.confkey[1]"
  - "django/db/backends/postgresql/introspection.py:169:77       confkey             U       AND a2.attnum = con.confkey[1]"
  - "django/db/backends/postgresql/introspection.py:172:21       contype             U       con.contype = 'f' AND"
  - "django/db/backends/postgresql/introspection.py:193:19       conname             U       c.conname,"
  - "django/db/backends/postgresql/introspection.py:196:35       conkey              U       FROM unnest(c.conkey) WITH ORDINALITY cols"
  - "django/db/backends/postgresql/introspection.py:196:48       ORDINALITY          U       unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)"
  - "django/db/backends/postgresql/introspection.py:196:64       colid               U       WITH ORDINALITY cols(colid, arridx)"
  - "django/db/backends/postgresql/introspection.py:196:71       arridx              U       ORDINALITY cols(colid, arridx)"
  - "django/db/backends/postgresql/introspection.py:197:53       colid               U       attribute AS ca ON cols.colid = ca.attnum"
  - "django/db/backends/postgresql/introspection.py:198:43       conrelid            U       WHERE ca.attrelid = c.conrelid"
  - "django/db/backends/postgresql/introspection.py:199:35       arridx              U       ORDER BY cols.arridx"
  - "django/db/backends/postgresql/introspection.py:201:19       contype             U       c.contype,"
  - "django/db/backends/postgresql/introspection.py:205:40       confrelid           U       WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey"
  - "django/db/backends/postgresql/introspection.py:205:69       confkey             U       confrelid AND fka.attnum = c.confkey[1]),"
  - "django/db/backends/postgresql/introspection.py:206:20       reloptions          U       cl.reloptions"
  - "django/db/backends/postgresql/introspection.py:208:38       conrelid            U       pg_class AS cl ON c.conrelid = cl.oid"
  - "django/db/backends/postgresql/introspection.py:229:44       arridx              U       agg(attname ORDER BY arridx),"
  - "django/db/backends/postgresql/introspection.py:230:17       indisunique         U       indisunique,"
  - "django/db/backends/postgresql/introspection.py:231:17       indisprimary        U       indisprimary,"
  - "django/db/backends/postgresql/introspection.py:232:45       arridx              U       agg(ordering ORDER BY arridx),"
  - "django/db/backends/postgresql/introspection.py:233:17       amname              U       amname,"
  - "django/db/backends/postgresql/introspection.py:234:17       exprdef             U       exprdef,"
  - "django/db/backends/postgresql/introspection.py:235:20       attoptions          U       s2.attoptions"
  - "django/db/backends/postgresql/introspection.py:238:70       amname              U       *, attr.attname, am.amname,"
  - "django/db/backends/postgresql/introspection.py:240:34       indexprs            U       WHEN idx.indexprs IS NOT NULL THEN"
  - "django/db/backends/postgresql/introspection.py:241:36       indexdef            U       pg_get_indexdef(idx.indexrelid)"
  - "django/db/backends/postgresql/introspection.py:242:28       exprdef             U       END AS exprdef,"
  - "django/db/backends/postgresql/introspection.py:243:29       amname              U       CASE am.amname"
  - "django/db/backends/postgresql/introspection.py:249:24       reloptions          U       c2.reloptions as attoptions"
  - "django/db/backends/postgresql/introspection.py:249:38       attoptions          U       c2.reloptions as attoptions"
  - "django/db/backends/postgresql/introspection.py:254:34       indkey              U       unnest(i.indkey, i.indoption)"
  - "django/db/backends/postgresql/introspection.py:254:44       indoption           U       unnest(i.indkey, i.indoption)"
  - "django/db/backends/postgresql/introspection.py:255:34       ORDINALITY          U       WITH ORDINALITY koi(key, option, arridx"
  - "django/db/backends/postgresql/introspection.py:255:62       arridx              U       ORDINALITY koi(key, option, arridx)"
  - "django/db/backends/postgresql/introspection.py:257:45       indrelid            U       JOIN pg_class c ON idx.indrelid = c.oid"
  - "django/db/backends/postgresql/introspection.py:259:42       relam               U       JOIN pg_am am ON c2.relam = am.oid"
  - "django/db/backends/postgresql/introspection.py:264:33       indisunique         U       GROUP BY indexname, indisunique, indisprimary, amname"
  - "django/db/backends/postgresql/introspection.py:264:46       indisprimary        U       indexname, indisunique, indisprimary, amname, exprdef, attoptions"
  - "django/db/backends/postgresql/introspection.py:264:60       amname              U       indisunique, indisprimary, amname, exprdef, attoptions"
  - "django/db/backends/postgresql/introspection.py:264:68       exprdef             U       indisprimary, amname, exprdef, attoptions;"
  - "django/db/backends/postgresql/introspection.py:264:77       attoptions          U       ndisprimary, amname, exprdef, attoptions;"
  - "django/db/backends/postgresql/operations.py:11:5        mogrify         U       mogrify,"
  - "django/db/backends/postgresql/operations.py:89:30       ISODOW          U       return f\"EXTRACT(ISODOW FROM {sql})\", params"
  - "django/db/backends/postgresql/operations.py:91:30       ISOYEAR         U       return f\"EXTRACT(ISOYEAR FROM {sql})\", params"
  - "django/db/backends/postgresql/operations.py:193:16      mogrify         U       return mogrify(sql, params, self.connection"
  - "django/db/backends/postgresql/operations.py:224:21      setval          U       \"%s setval(pg_get_serial_sequence"
  - "django/db/backends/postgresql/operations.py:247:60      setval          U       the third argument to `setval`) to true if"
  - "django/db/backends/postgresql/operations.py:255:29      setval          U       \"%s setval(pg_get_serial_sequence"
  - "django/db/backends/postgresql/operations.py:281:61      NAMEDATALEN     U       PostgreSQL after editing the NAMEDATALEN"
  - "django/db/backends/postgresql/psycopg_any.py:7:40           Timestamptz     U       types.datetime import TimestamptzLoader"
  - "django/db/backends/postgresql/psycopg_any.py:17:5           TSRANGE         U       TSRANGE_OID = types[\"tsrange"
  - "django/db/backends/postgresql/psycopg_any.py:17:26          tsrange         U       TSRANGE_OID = types[\"tsrange\"].oid"
  - "django/db/backends/postgresql/psycopg_any.py:18:5           TSTZRANGE       U       TSTZRANGE_OID = types[\"tstzrange"
  - "django/db/backends/postgresql/psycopg_any.py:18:28          tstzrange       U       TSTZRANGE_OID = types[\"tstzrange\"].oid"
  - "django/db/backends/postgresql/psycopg_any.py:20:9           mogrify         U       def mogrify(sql, params, connection"
  - "django/db/backends/postgresql/psycopg_any.py:22:52          mogrify         U       ientCursor(cursor.connection).mogrify(sql, params)"
  - "django/db/backends/postgresql/psycopg_any.py:25:24          Timestamptz     U       class BaseTzLoader(TimestamptzLoader):"
  - "django/db/backends/postgresql/psycopg_any.py:27:27          timestamptz     U       Load a PostgreSQL timestamptz using the a specific"
  - "django/db/backends/postgresql/psycopg_any.py:37:18          tzloader        U       def register_tzloader(tz, context):"
  - "django/db/backends/postgresql/psycopg_any.py:41:43          timestamptz     U       adapters.register_loader(\"timestamptz\", SpecificTzLoader)"
  - "django/db/backends/postgresql/psycopg_any.py:47:57          tstzrange       U       containing naive datetimes as tstzrange, because"
  - "django/db/backends/postgresql/psycopg_any.py:50:53          TSRANGE         U       self and dumper.oid == TSRANGE_OID:"
  - "django/db/backends/postgresql/psycopg_any.py:51:30          TSTZRANGE       U       dumper.oid = TSTZRANGE_OID"
  - "django/db/backends/postgresql/psycopg_any.py:67:22          timestamptz     U       # Register a timestamptz loader configured on"
  - "django/db/backends/postgresql/psycopg_any.py:69:18          tzloader        U       register_tzloader(timezone, ctx)"
  - "django/db/backends/postgresql/psycopg_any.py:105:9          mogrify         U       def mogrify(sql, params, connection"
  - "django/db/backends/postgresql/psycopg_any.py:107:27         mogrify         U       return cursor.mogrify(sql, params).decode"
  - "django/db/backends/postgresql/schema.py:54:14       indentity               U       sql_drop_indentity = ("
  - "django/db/backends/postgresql/schema.py:204:31      indentity               U       self.sql_drop_indentity"
  - "django/db/backends/postgresql/schema.py:362:24      collisdeterministic     U       SELECT collisdeterministic"
  - "django/db/backends/postgresql/schema.py:364:23      collname                U       WHERE collname = %s"
  - "django/db/backends/sqlite3/_functions.py:61:50          dtdelta             U       function(\"django_format_dtdelta\", 3, _sqlite_format"
  - "django/db/backends/sqlite3/_functions.py:61:78          dtdelta             U       , 3, _sqlite_format_dtdelta)"
  - "django/db/backends/sqlite3/_functions.py:80:41          SAMP                U       create_aggregate(\"STDDEV_SAMP\", 1, StdDevSamp)"
  - "django/db/backends/sqlite3/_functions.py:80:57          Samp                U       STDDEV_SAMP\", 1, StdDevSamp)"
  - "django/db/backends/sqlite3/_functions.py:82:38          SAMP                U       create_aggregate(\"VAR_SAMP\", 1, VarSamp)"
  - "django/db/backends/sqlite3/_functions.py:82:51          Samp                U       aggregate(\"VAR_SAMP\", 1, VarSamp)"
  - "django/db/backends/sqlite3/_functions.py:84:26          compileoption       U       sql = \"select sqlite_compileoption_used('ENABLE_MATH_FUNCTIONS"
  - "django/db/backends/sqlite3/_functions.py:240:21         dtdelta             U       def _sqlite_prepare_dtdelta_param(conn, param):"
  - "django/db/backends/sqlite3/_functions.py:249:20         dtdelta             U       def _sqlite_format_dtdelta(connector, lhs, rhs"
  - "django/db/backends/sqlite3/_functions.py:260:36         dtdelta             U       lhs = _sqlite_prepare_dtdelta_param(connector, lhs"
  - "django/db/backends/sqlite3/_functions.py:506:13         Samp                U       class StdDevSamp(ListAggregate):"
  - "django/db/backends/sqlite3/_functions.py:514:10         Samp                U       class VarSamp(ListAggregate):"
  - "django/db/backends/sqlite3/base.py:164:44       DECLTYPES       U       types\": Database.PARSE_DECLTYPES | Database.PARSE_COLNAMES"
  - "django/db/backends/sqlite3/base.py:164:71       COLNAMES        U       DECLTYPES | Database.PARSE_COLNAMES,"
  - "django/db/backends/sqlite3/base.py:338:8        QMARK           U       FORMAT_QMARK_REGEX = _lazy_re_compile"
  - "django/db/backends/sqlite3/base.py:348:26       qmark           U       \"format\" style to \"qmark\" style"
  - "django/db/backends/sqlite3/base.py:362:9        executemany     U       def executemany(self, query, param_list"
  - "django/db/backends/sqlite3/base.py:365:9        peekable        U       peekable, param_list = tee(iter"
  - "django/db/backends/sqlite3/base.py:366:28       peekable        U       if (params := next(peekable, None)) and isinstance"
  - "django/db/backends/sqlite3/base.py:371:24       executemany     U       return super().executemany(query, param_list)"
  - "django/db/backends/sqlite3/base.py:375:47       qmark           U       from \"format\" style to \"qmark\" style."
  - "django/db/backends/sqlite3/base.py:376:27       QMARK           U       return FORMAT_QMARK_REGEX.sub(\"?\", query"
  - "django/db/backends/sqlite3/creation.py:22:26        memorydb    U       return \"file:memorydb_%s?mode=memory&cache"
  - "django/db/backends/sqlite3/creation.py:25:55        keepdb      U       verbosity, autoclobber, keepdb=False):"
  - "django/db/backends/sqlite3/creation.py:28:12        keepdb      U       if keepdb:"
  - "django/db/backends/sqlite3/creation.py:74:49        keepdb      U       suffix, verbosity, keepdb=False):"
  - "django/db/backends/sqlite3/creation.py:80:20        keepdb      U       if keepdb:"
  - "django/db/backends/sqlite3/creation.py:105:13       ondisk      U       ondisk_db = sqlite3.connect"
  - "django/db/backends/sqlite3/creation.py:106:47       ondisk      U       connection.connection.backup(ondisk_db)"
  - "django/db/backends/sqlite3/creation.py:107:13       ondisk      U       ondisk_db.close()"
  - "django/db/backends/sqlite3/creation.py:143:24       memorydb    U       f\"file:memorydb_{alias}_{_worker_id"
  - "django/db/backends/sqlite3/creation.py:158:40       DJANGOS     U       environ.get(\"RUNNING_DJANGOS_TEST_SUITE\") == \"true"
  - "django/db/backends/sqlite3/features.py:44:16        nocase              U       \"ci\": \"nocase\","
  - "django/db/backends/sqlite3/features.py:46:25        nocase              U       \"non_default\": \"nocase\","
  - "django/db/backends/sqlite3/features.py:47:21        nocase              U       \"virtual\": \"nocase\","
  - "django/db/backends/sqlite3/features.py:50:29        dtdelta             U       # The django_format_dtdelta() function doesn't properly"
  - "django/db/backends/sqlite3/features.py:51:36        timedeltas          U       DateTime fields and timedeltas."
  - "django/db/backends/sqlite3/features.py:76:43        doesnt (doesn't)    U       alter_field_default_doesnt_perform_queries\","
  - "django/db/backends/sqlite3/features.py:99:39        liveserverthread    U       \"servers.test_liveserverthread.LiveServerThreadTest"
  - "django/db/backends/sqlite3/introspection.py:37:10       smallinteger    U       \"smallinteger\": \"SmallIntegerField"
  - "django/db/backends/sqlite3/introspection.py:94:27       xinfo           U       \"PRAGMA table_xinfo(%s)\" % self.connection"
  - "django/db/backends/sqlite3/operations.py:54:33          subexpression       U       # Not every subexpression has an output_field"
  - "django/db/backends/sqlite3/operations.py:97:28          tznames             U       *self._convert_tznames_to_sql(tzname),"
  - "django/db/backends/sqlite3/operations.py:104:28         tznames             U       *self._convert_tznames_to_sql(tzname),"
  - "django/db/backends/sqlite3/operations.py:107:18         tznames             U       def _convert_tznames_to_sql(self, tzname"
  - "django/db/backends/sqlite3/operations.py:115:28         tznames             U       *self._convert_tznames_to_sql(tzname),"
  - "django/db/backends/sqlite3/operations.py:121:28         tznames             U       *self._convert_tznames_to_sql(tzname),"
  - "django/db/backends/sqlite3/operations.py:328:42         prec                U       decimal = decimal.Context(prec=15).create_decimal_from"
  - "django/db/backends/sqlite3/operations.py:330:49         scaleb              U       decimal.Decimal(1).scaleb("
  - "django/db/backends/sqlite3/operations.py:371:31         dtdelta             U       return \"django_format_dtdelta(%s)\" % \", \".join(fn"
  - "django/db/backends/sqlite3/schema.py:257:41         autom       U       model(model, handle_autom2m=False)"
  - "django/db/backends/sqlite3/schema.py:274:42         autom       U       self, model, handle_autom2m=True):"
  - "django/db/backends/sqlite3/schema.py:275:19         autom       U       if handle_autom2m:"
  - "django/db/backends/utils.py:22:73       nextset         U       fetchmany\", \"fetchall\", \"nextset\"])"
  - "django/db/backends/utils.py:83:9        executemany     U       def executemany(self, sql, param_list"
  - "django/db/backends/utils.py:85:56       executemany     U       True, executor=self._executemany"
  - "django/db/backends/utils.py:107:10      executemany     U       def _executemany(self, sql, param_list"
  - "django/db/backends/utils.py:114:32      executemany     U       return self.cursor.executemany(sql, param_list)"
  - "django/db/backends/utils.py:124:9       executemany     U       def executemany(self, sql, param_list"
  - "django/db/backends/utils.py:322:23      getcontext      U       context = decimal.getcontext().copy()"
  - "django/db/backends/utils.py:324:17      prec            U       context.prec = max_digits"
  - "django/db/backends/utils.py:327:32      scaleb          U       decimal.Decimal(1).scaleb(-decimal_places), context"
  - "django/db/migrations/autodetector.py:771:30         opns    U       # Generate other opns"
  - "django/db/migrations/migration.py:131:26        behaviour       U       # Normal behaviour"
  - "django/db/migrations/migration.py:192:26        behaviour       U       # Normal behaviour"
  - "django/db/migrations/operations/base.py:43:5        elidable    U       elidable = False"
  - "django/db/migrations/operations/base.py:155:17      elidable    U       if self.elidable:"
  - "django/db/migrations/operations/base.py:157:24      elidable    U       elif operation.elidable:"
  - "django/db/migrations/operations/models.py:105:25        smodel      U       return \"Create %smodel %s\" % ("
  - "django/db/migrations/operations/special.py:46:13        dbop        U       for dbop in self.database_operations"
  - "django/db/migrations/operations/special.py:47:23        dbop        U       to_states[dbop] = to_state"
  - "django/db/migrations/operations/special.py:49:13        dbop        U       dbop.state_forwards(app_label"
  - "django/db/migrations/operations/special.py:76:73        elidable    U       operations=None, hints=None, elidable=False"
  - "django/db/migrations/operations/special.py:82:14        elidable    U       self.elidable = elidable"
  - "django/db/migrations/operations/special.py:82:25        elidable    U       self.elidable = elidable"
  - "django/db/migrations/operations/special.py:121:39       sqls        U       self, schema_editor, sqls):"
  - "django/db/migrations/operations/special.py:122:23       sqls        U       if isinstance(sqls, (list, tuple)):"
  - "django/db/migrations/operations/special.py:123:24       sqls        U       for sql in sqls:"
  - "django/db/migrations/operations/special.py:132:14       sqls        U       elif sqls != RunSQL.noop:"
  - "django/db/migrations/operations/special.py:133:74       sqls        U       ops.prepare_sql_script(sqls)"
  - "django/db/migrations/operations/special.py:147:65       elidable    U       atomic=None, hints=None, elidable=False"
  - "django/db/migrations/operations/special.py:162:14       elidable    U       self.elidable = elidable"
  - "django/db/migrations/questioner.py:18:36        noninteractive      U       class has a built-in noninteractive mode, but the"
  - "django/db/migrations/serializer.py:95:7         Deconstructable     U       class DeconstructableSerializer(BaseSerializer"
  - "django/db/migrations/serializer.py:98:25        Deconstructable     U       name, imports = DeconstructableSerializer._serialize"
  - "django/db/migrations/serializer.py:178:13       klass               U       klass = self.value.__self"
  - "django/db/migrations/serializer.py:179:22       klass               U       module = klass.__module__"
  - "django/db/migrations/serializer.py:180:42       klass               U       s.%s.%s\" % (module, klass.__qualname__, self.value"
  - "django/db/migrations/serializer.py:237:28       Deconstructable     U       ModelFieldSerializer(DeconstructableSerializer):"
  - "django/db/migrations/serializer.py:243:30       Deconstructable     U       ModelManagerSerializer(DeconstructableSerializer):"
  - "django/db/migrations/serializer.py:264:24       fspath              U       return repr(os.fspath(self.value)), {}"
  - "django/db/migrations/serializer.py:397:16       Deconstructable     U       return DeconstructableSerializer(value)"
  - "django/db/migrations/state.py:612:78        rels    U       model(model, exclude_rels=True))"
  - "django/db/migrations/state.py:772:40        rels    U       cls, model, exclude_rels=False):"
  - "django/db/migrations/state.py:777:65        rels    U       , None) and exclude_rels:"
  - "django/db/migrations/state.py:793:24        rels    U       if not exclude_rels:"
  - "django/db/migrations/state.py:834:20        rels    U       if exclude_rels:"
  - "django/db/models/__init__.py:52:5           aprefetch       U       aprefetch_related_objects,"
  - "django/db/models/__init__.py:112:6          aprefetch       U       \"aprefetch_related_objects\","
  - "django/db/models/aggregates.py:192:33       SAMP    U       self.function = \"STDDEV_SAMP\" if sample else \"STDDEV"
  - "django/db/models/aggregates.py:196:83       SAMP    U       function == \"STDDEV_SAMP\"}"
  - "django/db/models/aggregates.py:209:30       SAMP    U       self.function = \"VAR_SAMP\" if sample else \"VAR"
  - "django/db/models/aggregates.py:213:80       SAMP    U       self.function == \"VAR_SAMP\"}"
  - "django/db/models/base.py:114:9          contributable       U       contributable_attrs = {}"
  - "django/db/models/base.py:117:17         contributable       U       contributable_attrs[obj_name] = obj"
  - "django/db/models/base.py:193:30         contributable       U       for obj_name, obj in contributable_attrs.items():"
  - "django/db/models/base.py:687:40         attnames            U       an iterable of field attnames. If fields is None,"
  - "django/db/models/base.py:1142:19        autopopulate        U       # autopopulate the _order field"
  - "django/db/models/enums.py:32:17         metacls     U       def __new__(metacls, classname, bases, classdict"
  - "django/db/models/enums.py:49:31         metacls     U       cls = super().__new__(metacls, classname, bases, classdict"
  - "django/db/models/expressions.py:285:47      multijoins      U       of reusable joins for multijoins"
  - "django/db/models/fields/__init__.py:520:76      EXXX                U       details.get(\"id\", \"fields.EXXX\"),"
  - "django/db/models/fields/__init__.py:531:79      WXXX                U       details.get(\"id\", \"fields.WXXX\"),"
  - "django/db/models/fields/__init__.py:1791:32     prec                U       return decimal.Context(prec=self.max_digits)"
  - "django/db/models/fields/__init__.py:2816:45     autopk              U       connection.ops.validate_autopk_value(value)"
  - "django/db/models/fields/__init__.py:2858:11     subclasscheck       U       def __subclasscheck__(self, subclass):"
  - "django/db/models/fields/__init__.py:2859:68     subclasscheck       U       subclasses) or super().__subclasscheck__("
  - "django/db/models/fields/json.py:322:7       JSONI       U       class JSONIContains(CaseInsensitiveMixin"
  - "django/db/models/fields/json.py:332:27      JSONI       U       JSONField.register_lookup(JSONIContains)"
  - "django/db/models/fields/json.py:401:65      MDEV        U       and ->> operators (see MDEV-13594)."
  - "django/db/models/fields/related_descriptors.py:31:69        unicity     U       is checked upstream (unicity"
  - "django/db/models/fields/related_descriptors.py:1573:41      colname     U       source_field_name: the PK colname in join table for the"
  - "django/db/models/fields/related_descriptors.py:1574:41      colname     U       target_field_name: the PK colname in join table for the"
  - "django/db/models/fields/related.py:825:63       pushdown    U       joining and subquery pushdown. The"
  - "django/db/models/fields/related.py:830:57       pushdown    U       conditions, like subquery pushdown."
  - "django/db/models/fields/related.py:1266:51      klass       U       intermediary_model(field, klass):"
  - "django/db/models/fields/related.py:1272:33      klass       U       model = resolve_relation(klass, field.remote_field"
  - "django/db/models/fields/related.py:1273:23      klass       U       name = \"%s_%s\" % (klass._meta.object_name, field"
  - "django/db/models/fields/related.py:1274:41      klass       U       operation(set_managed, klass, to_model, name)"
  - "django/db/models/fields/related.py:1277:13      klass       U       from_ = klass._meta.model_name"
  - "django/db/models/functions/comparison.py:92:46          NCLOB       U       prohibits mixing TextField (NCLOB) and CharField (NVARCHAR"
  - "django/db/models/functions/comparison.py:93:36          NCLOB       U       convert all fields to NCLOB when that type is expected"
  - "django/db/models/functions/comparison.py:98:51          NCLOB       U       expression, function=\"TO_NCLOB\")"
  - "django/db/models/functions/comparison.py:198:64         CLOB        U       connection, returning=\"CLOB\", **extra_context)"
  - "django/db/models/functions/datetime.py:156:35       mydatetime          U       replicate this in Python: (mydatetime.isoweekday() % 7) +"
  - "django/db/models/functions/datetime.py:241:45       LOCALTIMESTAMP      U       connection, template=\"LOCALTIMESTAMP\", **extra_context"
  - "django/db/models/functions/math.py:39:30        spatialite      U       connection.ops, \"spatialite\", False"
  - "django/db/models/functions/math.py:43:45        Spatia          U       it's ATan2(x, y) on SpatiaLite < 5.0.0."
  - "django/db/models/functions/math.py:117:41       spatialite      U       getattr(connection.ops, \"spatialite\", False):"
  - "django/db/models/functions/math.py:120:30       Spatia          U       the base b, but on SpatiaLite it's Log(x, b)."
  - "django/db/models/functions/text.py:24:24        RAWTOHEX    U       \"LOWER(RAWTOHEX(STANDARD_HASH(UTL_I"
  - "django/db/models/functions/text.py:31:7         Postgre     U       class PostgreSQLSHAMixin:"
  - "django/db/models/functions/text.py:271:26       LISTAGG     U       \"(SELECT LISTAGG(s) WITHIN GROUP (ORDER"
  - "django/db/models/functions/text.py:301:29       Postgre     U       SHA1(OracleHashMixin, PostgreSQLSHAMixin, Transform"
  - "django/db/models/functions/text.py:306:30       Postgre     U       SHA224(MySQLSHA2Mixin, PostgreSQLSHAMixin, Transform"
  - "django/db/models/functions/text.py:314:47       Postgre     U       Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform"
  - "django/db/models/functions/text.py:319:47       Postgre     U       Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform"
  - "django/db/models/functions/text.py:341:63       STRPOS      U       connection, function=\"STRPOS\", **extra_context)"
  - "django/db/models/functions/window.py:20:17          CUME    U       function = \"CUME_DIST\""
  - "django/db/models/lookups.py:59:13       sqls            U       sqls, sqls_params = [],"
  - "django/db/models/lookups.py:59:19       sqls            U       sqls, sqls_params = [], []"
  - "django/db/models/lookups.py:65:17       sqls            U       sqls.append(sql)"
  - "django/db/models/lookups.py:66:17       sqls            U       sqls_params.extend(sql_params"
  - "django/db/models/lookups.py:69:13       sqls            U       sqls, sqls_params = [\"%s"
  - "django/db/models/lookups.py:377:18      boolfield       U       # turns \"boolfield__exact=True\" into \"WHERE"
  - "django/db/models/lookups.py:571:30      thevalue        U       col LIKE %s, ['thevalue%']"
  - "django/db/models/lookups.py:575:24      othercol        U       # col LIKE othercol || '%%'"
  - "django/db/models/lookups.py:771:7       UUIDI           U       class UUIDIExact(UUIDTextMixin,"
  - "django/db/models/lookups.py:781:7       UUIDI           U       class UUIDIContains(UUIDTextMixin"
  - "django/db/models/lookups.py:791:7       UUIDI           U       class UUIDIStartsWith(UUIDTextMixin"
  - "django/db/models/lookups.py:801:7       UUIDI           U       class UUIDIEndsWith(UUIDTextMixin"
  - "django/db/models/options.py:530:33      longwinded      U       The third lambda is a longwinded way of checking f.related"
  - "django/db/models/options.py:981:13      klass           U       for klass in self.model.__mro"
  - "django/db/models/options.py:984:36      klass           U       for name, value in klass.__dict__.items()"
  - "django/db/models/options.py:987:25      klass           U       seen |= set(klass.__dict__)"
  - "django/db/models/query_utils.py:24:49       somecol     U       converting lookups (fk__somecol). The contents"
  - "django/db/models/query.py:89:67         klass           U       fill compiler.select, klass_info,"
  - "django/db/models/query.py:94:17         klass           U       select, klass_info, annotation_col"
  - "django/db/models/query.py:96:22         klass           U       compiler.klass_info,"
  - "django/db/models/query.py:99:21         klass           U       model_cls = klass_info[\"model\"]"
  - "django/db/models/query.py:100:25        klass           U       select_fields = klass_info[\"select_fields"
  - "django/db/models/query.py:545:27        aprefetch       U       await aprefetch_related_objects("
  - "django/db/models/query.py:553:23        aprefetch       U       await aprefetch_related_objects("
  - "django/db/models/query.py:761:30        childmost       U       insert into the childmost table."
  - "django/db/models/query.py:2416:11       aprefetch       U       async def aprefetch_related_objects(model"
  - "django/db/models/query.py:2656:35       attnames        U       init_list: the field attnames fetched from the database"
  - "django/db/models/query.py:2657:57       attnames        U       isn't the same as all attnames of the"
  - "django/db/models/query.py:2677:24       attnames        U       model_init_attnames = ("
  - "django/db/models/query.py:2681:51       attnames        U       attname in model_init_attnames if attname in attname"
  - "django/db/models/sql/compiler.py:54:23          klass           U       # The select, klass_info, and annotations"
  - "django/db/models/sql/compiler.py:60:14          klass           U       self.klass_info = None"
  - "django/db/models/sql/compiler.py:73:27          klass           U       self.select, self.klass_info, self.annotation"
  - "django/db/models/sql/compiler.py:103:49         somecol         U       objects.annotate(Count('somecol'))"
  - "django/db/models/sql/compiler.py:106:63         somecol         U       name').annotate(Count('somecol'))"
  - "django/db/models/sql/compiler.py:109:48         somecol         U       objects.annotate(Count('somecol')).values('name')"
  - "django/db/models/sql/compiler.py:113:31         somecol         U       .annotate(Count('somecol')).values('pk')"
  - "django/db/models/sql/compiler.py:116:63         somecol         U       name').annotate(Count('somecol')).values('pk')"
  - "django/db/models/sql/compiler.py:233:13         klass           U       - a klass_info structure,"
  - "django/db/models/sql/compiler.py:239:13         klass           U       The klass_info structure contains"
  - "django/db/models/sql/compiler.py:463:23         combinated      U       # combinated queries might define"
  - "django/db/models/sql/compiler.py:510:37         orderbycol      U       col_alias = f\"__orderbycol{order_by_idx}\""
  - "django/db/models/sql/compiler.py:609:54         resultset       U       always including an empty resultset query to force"
  - "django/db/models/sql/compiler.py:742:22         sqls            U       ordering_sqls = []"
  - "django/db/models/sql/compiler.py:745:26         sqls            U       ordering_sqls.append(ordering_sql"
  - "django/db/models/sql/compiler.py:747:59         sqls            U       \", \".join(ordering_sqls)])"
  - "django/db/models/sql/compiler.py:962:36         subparams       U       subselect, subparams = select_clone.as_sql"
  - "django/db/models/sql/compiler.py:966:43         subparams       U       sub_params.extend(subparams)"
  - "django/db/models/sql/compiler.py:1442:49        popleft         U       klass_info = queue.popleft()"
  - "django/db/models/sql/compiler.py:1520:23        convs           U       for pos, (convs, expression) in converters"
  - "django/db/models/sql/compiler.py:1522:34        convs           U       for converter in convs:"
  - "django/db/models/sql/compiler.py:1744:24        sqls            U       # tuple like ([sqls], [[params]s]) for each"
  - "django/db/models/sql/compiler.py:1928:9         innerq          U       innerq = self.query.clone("
  - "django/db/models/sql/compiler.py:1929:9         innerq          U       innerq.__class__ = Query"
  - "django/db/models/sql/compiler.py:1930:9         innerq          U       innerq.clear_select_clause"
  - "django/db/models/sql/compiler.py:1932:9         innerq          U       innerq.select = [pk.get_col"
  - "django/db/models/sql/compiler.py:1933:9         outerq          U       outerq = Query(self.query.model"
  - "django/db/models/sql/compiler.py:1937:27        innerq          U       sql, params = innerq.get_compiler(connection"
  - "django/db/models/sql/compiler.py:1939:9         outerq          U       outerq.add_filter(\"pk__in\""
  - "django/db/models/sql/compiler.py:1940:29        outerq          U       return self._as_sql(outerq)"
  - "django/db/models/sql/constants.py:9:3           Namedtuples     U       # Namedtuples for sql.* internal use"
  - "django/db/models/sql/constants.py:24:1          LOUTER          U       LOUTER = \"LEFT OUTER JOIN\""
  - "django/db/models/sql/datastructures.py:9:51         LOUTER          U       constants import INNER, LOUTER"
  - "django/db/models/sql/datastructures.py:22:20        travelled       U       # The path travelled, this includes the path"
  - "django/db/models/sql/datastructures.py:22:61        multijoin       U       includes the path to the multijoin."
  - "django/db/models/sql/datastructures.py:34:26        sometable       U       LEFT OUTER JOIN \"sometable\" T1"
  - "django/db/models/sql/datastructures.py:35:14        othertable      U       ON (\"othertable\".\"sometable_id\" = \"sometable"
  - "django/db/models/sql/datastructures.py:35:27        sometable       U       ON (\"othertable\".\"sometable_id\" = \"sometable\".\"id"
  - "django/db/models/sql/datastructures.py:35:44        sometable       U       othertable\".\"sometable_id\" = \"sometable\".\"id\")"
  - "django/db/models/sql/datastructures.py:64:11        LOUTER          U       # LOUTER or INNER"
  - "django/db/models/sql/datastructures.py:84:24        nullabled       U       # Is this join nullabled?"
  - "django/db/models/sql/datastructures.py:91:28        sometable       U       LEFT OUTER JOIN sometable ON sometable.somecol"
  - "django/db/models/sql/datastructures.py:91:41        sometable       U       OUTER JOIN sometable ON sometable.somecol = othertable"
  - "django/db/models/sql/datastructures.py:91:51        somecol         U       sometable ON sometable.somecol = othertable.othercol"
  - "django/db/models/sql/datastructures.py:91:61        othertable      U       sometable.somecol = othertable.othercol, params"
  - "django/db/models/sql/datastructures.py:91:72        othercol        U       somecol = othertable.othercol, params"
  - "django/db/models/sql/datastructures.py:99:46        depraction      U       edInDjango60Warning: when the depraction ends, replace with:"
  - "django/db/models/sql/datastructures.py:104:54       depraction      U       edInDjango60Warning: when the depraction ends, remove"
  - "django/db/models/sql/datastructures.py:196:25       LOUTER          U       new.join_type = LOUTER"
  - "django/db/models/sql/datastructures.py:204:35       somecond        U       SELECT * FROM \"foo\" WHERE somecond"
  - "django/db/models/sql/query.py:42:51         LOUTER              U       constants import INNER, LOUTER, ORDER_DIR, SINGLE"
  - "django/db/models/sql/query.py:113:19        repointing          U       # without repointing to the filtered annotation"
  - "django/db/models/sql/query.py:353:53        deepcopied          U       work when a Query is deepcopied.\"\"\""
  - "django/db/models/sql/query.py:421:21        klass               U       def chain(self, klass=None):"
  - "django/db/models/sql/query.py:424:13        klass               U       The klass argument changes the"
  - "django/db/models/sql/query.py:427:12        klass               U       if klass and obj.__class__ !"
  - "django/db/models/sql/query.py:427:39        klass               U       and obj.__class__ != klass:"
  - "django/db/models/sql/query.py:428:29        klass               U       obj.__class__ = klass"
  - "django/db/models/sql/query.py:547:62        realiasing          U       would require complex realiasing logic."
  - "django/db/models/sql/query.py:568:50        repointed           U       sure the aggregates are repointed to them."
  - "django/db/models/sql/query.py:720:15        revrel              U       # revrel__col=1 & revrel__col"
  - "django/db/models/sql/query.py:720:31        revrel              U       revrel__col=1 & revrel__col=2"
  - "django/db/models/sql/query.py:924:76        LOUTER              U       chains that contain a LOUTER"
  - "django/db/models/sql/query.py:940:20        louter              U       parent_louter = ("
  - "django/db/models/sql/query.py:941:76        LOUTER              U       alias].join_type == LOUTER"
  - "django/db/models/sql/query.py:943:21        louter              U       already_louter = self.alias_map[alias"
  - "django/db/models/sql/query.py:943:65        LOUTER              U       alias].join_type == LOUTER"
  - "django/db/models/sql/query.py:944:58        louter              U       .nullable or parent_louter) and not already_louter"
  - "django/db/models/sql/query.py:944:82        louter              U       louter) and not already_louter:"
  - "django/db/models/sql/query.py:957:31        LOUTER              U       Change join type from LOUTER to INNER for all joins"
  - "django/db/models/sql/query.py:1471:56       multijoins          U       of reusable joins for multijoins."
  - "django/db/models/sql/query.py:1475:28       unreffing           U       is responsible for unreffing the joins used."
  - "django/db/models/sql/query.py:1582:40       someval             U       is null, then col != someval will result in SQL"
  - "django/db/models/sql/query.py:1585:42       someval             U       col IS NULL OR col != someval)"
  - "django/db/models/sql/query.py:1587:50       someval             U       IS NOT NULL AND col = someval)."
  - "django/db/models/sql/query.py:1595:22       someval             U       # If someval is a nullable column"
  - "django/db/models/sql/query.py:1595:52       someval             U       is a nullable column, someval IS NOT NULL is"
  - "django/db/models/sql/query.py:2072:34       louter              U       trimmed_prefix, contains_louter = query.trim_start(names"
  - "django/db/models/sql/query.py:2388:44       datastructure       U       that we can use a set datastructure. We do the foo__bar"
  - "django/db/models/sql/query.py:2578:42       outerq              U       lookup usable for doing outerq.filter(lookup=self)"
  - "django/db/models/sql/query.py:2672:5        dirn                U       dirn = ORDER_DIR[default"
  - "django/db/models/sql/query.py:2674:27       dirn                U       return field[1:], dirn[1]"
  - "django/db/models/sql/query.py:2675:19       dirn                U       return field, dirn[0]"
  - "django/db/models/sql/query.py:2738:61       rels                U       2, if either of the rels produce NULL"
  - "django/db/models/sql/where.py:339:24        sqls    U       def __init__(self, sqls, params):"
  - "django/db/models/sql/where.py:340:14        sqls    U       self.sqls = sqls"
  - "django/db/models/sql/where.py:340:21        sqls    U       self.sqls = sqls"
  - "django/db/models/sql/where.py:344:9         sqls    U       sqls = [\"(%s)\" % sql for"
  - "django/db/models/sql/where.py:344:46        sqls    U       sql for sql in self.sqls]"
  - "django/db/transaction.py:162:17         reentrancy      U       This allows reentrancy even if the same AtomicWrappe"
  - "django/db/utils.py:55:40        reraises    U       manager and decorator that reraises backend-specific database"
  - "django/db/utils.py:121:26       ispkg       U       for _, name, ispkg in pkgutil.iter_modules"
  - "django/db/utils.py:122:16       ispkg       U       if ispkg and name not in {\"base"
  - "django/db/utils.py:125:21       reprs       U       backend_reprs = map(repr, sorted(builtin"
  - "django/db/utils.py:131:61       reprs       U       name, \", \".join(backend_reprs))"
  - "django/dispatch/__init__.py:3:21        pydispatch      U       Originally based on pydispatch (BSD) https://pypi.org"
  - "django/dispatch/dispatcher.py:32:15         receiverkey     U       { receiverkey (id) : weakref(receiver"
  - "django/dispatch/dispatcher.py:193:23        asend           U       async def asend():"
  - "django/dispatch/dispatcher.py:202:44        asend           U       extend(async_to_sync(asend)())"
  - "django/dispatch/dispatcher.py:205:15        asend           U       async def asend(self, sender, **named"
  - "django/dispatch/dispatcher.py:314:23        asend           U       async def asend_and_wrap_exception(receiver"
  - "django/dispatch/dispatcher.py:322:23        asend           U       async def asend():"
  - "django/dispatch/dispatcher.py:435:23        receiverkey     U       for (_receiverkey, r_senderkey), receiver"
  - "django/dispatch/dispatcher.py:463:54        weakrefs        U       receivers list has dead weakrefs. If so, we will"
  - "django/forms/boundfield.py:4:32         Renderable      U       django.forms.utils import RenderableFieldMixin, pretty_name"
  - "django/forms/boundfield.py:13:18        Renderable      U       class BoundField(RenderableFieldMixin):"
  - "django/forms/boundfield.py:292:28       describedby     U       # If a custom aria-describedby attribute is given"
  - "django/forms/boundfield.py:296:33       describedby     U       not attrs.get(\"aria-describedby\")"
  - "django/forms/boundfield.py:297:44       describedby     U       widget.attrs.get(\"aria-describedby\")"
  - "django/forms/boundfield.py:303:25       describedby     U       attrs[\"aria-describedby\"] = f\"{self.auto_id"
  - "django/forms/boundfield.py:327:21       myform          U       {% for radio in myform.beatles %}"
  - "django/forms/fields.py:448:39       scaleb          U       step = str(Decimal(1).scaleb(-self.decimal_places"
  - "django/forms/fields.py:802:19       misformatted    U       # misformatted URLs."
  - "django/forms/forms.py:10:54         Renderable      U       ErrorDict, ErrorList, RenderableFormMixin"
  - "django/forms/forms.py:52:16         Renderable      U       class BaseForm(RenderableFormMixin):"
  - "django/forms/formsets.py:5:43           Renderable      U       utils import ErrorList, RenderableFormMixin"
  - "django/forms/formsets.py:52:19          Renderable      U       class BaseFormSet(RenderableFormMixin):"
  - "django/forms/models.py:824:13       uclass      U       for uclass, unique_check in all"
  - "django/forms/models.py:864:13       uclass      U       uclass, lookup, field, unique"
  - "django/forms/renderers.py:42:26         djangoforms     U       \"NAME\": \"djangoforms\","
  - "django/forms/utils.py:20:5          flatatt         U       def flatatt(attrs):"
  - "django/forms/utils.py:45:7          Renderable      U       class RenderableMixin:"
  - "django/forms/utils.py:48:28         Renderable      U       \"Subclasses of RenderableMixin must provide a"
  - "django/forms/utils.py:61:7          Renderable      U       class RenderableFieldMixin(RenderableMixin"
  - "django/forms/utils.py:61:28         Renderable      U       RenderableFieldMixin(RenderableMixin):"
  - "django/forms/utils.py:67:28         Renderable      U       \"Subclasses of RenderableFieldMixin must provide"
  - "django/forms/utils.py:150:24        initlist        U       def __init__(self, initlist=None, error_class=None"
  - "django/forms/utils.py:151:26        initlist        U       super().__init__(initlist)"
  - "django/forms/widgets.py:688:17      subvalue                U       for subvalue, sublabel in choices"
  - "django/forms/widgets.py:688:27      sublabel                U       for subvalue, sublabel in choices:"
  - "django/forms/widgets.py:690:21      subvalue                U       subvalue"
  - "django/forms/widgets.py:696:25      subvalue                U       subvalue,"
  - "django/forms/widgets.py:697:25      sublabel                U       sublabel,"
  - "django/forms/widgets.py:1016:43     splitdatetime           U       django/forms/widgets/splitdatetime.html\""
  - "django/forms/widgets.py:1050:43     splithiddendatetime     U       django/forms/widgets/splithiddendatetime.html\""
  - "django/http/cookie.py:11:5          cookiedict      U       cookiedict = {}"
  - "django/http/cookie.py:22:13         cookiedict      U       cookiedict[key] = cookies._unquote"
  - "django/http/cookie.py:23:12         cookiedict      U       return cookiedict"
  - "django/http/multipartparser.py:362:17       shortcircuits       U       # any() shortcircuits if a handler's upload"
  - "django/http/multipartparser.py:513:64       ungetting           U       one chunk. If we keep ungetting the"
  - "django/http/multipartparser.py:715:33       CRLFCRLF            U       as throwing away the CRLFCRLF bytes from above."
  - "django/http/multipartparser.py:719:5        outdict             U       outdict = {}"
  - "django/http/multipartparser.py:737:9        outdict             U       outdict[name] = value, params"
  - "django/http/multipartparser.py:742:19       outdict             U       return (TYPE, outdict, stream)"
  - "django/http/multipartparser.py:751:9        boundarystream      U       boundarystream = InterBoundaryIter"
  - "django/http/multipartparser.py:752:27       boundarystream      U       for sub_stream in boundarystream:"
  - "django/http/request.py:249:44       schemeless      U       an absolute url (but schemeless and domainless) for"
  - "django/http/request.py:249:59       domainless      U       (but schemeless and domainless) for the"
  - "django/http/request.py:501:12       asgi            U       def to_asgi_name(cls, header):"
  - "django/http/request.py:512:12       asgi            U       def to_asgi_names(cls, headers)"
  - "django/http/request.py:514:20       asgi            U       cls.to_asgi_name(header_name): value"
  - "django/http/request.py:755:66       codepoint       U       with Unicode \"unknown\" codepoint"
  - "django/http/request.py:756:7        ufffd           U       (\\ufffd)."
  - "django/http/response.py:470:23      awrapper        U       async def awrapper():"
  - "django/http/response.py:474:20      awrapper        U       return awrapper()"
  - "django/http/response.py:576:37      getbuffer       U       elif hasattr(filelike, \"getbuffer\"):"
  - "django/http/response.py:578:30      getbuffer       U       filelike.getbuffer().nbytes - filelike"
  - "django/http/response.py:578:42      nbytes          U       filelike.getbuffer().nbytes - filelike.tell()"
  - "django/middleware/clickjacking.py:17:7          xframe      U       a xframe_options_exempt value"
  - "django/middleware/clickjacking.py:30:38         xframe      U       set it if they used @xframe_options_exempt"
  - "django/middleware/clickjacking.py:31:31         xframe      U       if getattr(response, \"xframe_options_exempt\", False"
  - "django/middleware/clickjacking.py:34:56         xframe      U       Options\"] = self.get_xframe_options_value("
  - "django/middleware/clickjacking.py:40:13         xframe      U       def get_xframe_options_value(self,"
  - "django/middleware/common.py:124:13      referer     U       referer = request.META.get("
  - "django/middleware/common.py:124:46      REFERER     U       request.META.get(\"HTTP_REFERER\", \"\")"
  - "django/middleware/common.py:126:69      referer     U       request, path, domain, referer):"
  - "django/middleware/common.py:134:65      referer     U       internal_request(domain, referer)"
  - "django/middleware/common.py:140:43      referer     U       IP address: %s\\n\" % (referer, path, ua, ip),"
  - "django/middleware/common.py:145:43      referer     U       request(self, domain, referer):"
  - "django/middleware/csrf.py:30:11         REFERER     U       REASON_NO_REFERER = \"Referer checking"
  - "django/middleware/csrf.py:30:22         Referer     U       REASON_NO_REFERER = \"Referer checking failed - no"
  - "django/middleware/csrf.py:30:51         Referer     U       checking failed - no Referer.\""
  - "django/middleware/csrf.py:31:12         REFERER     U       REASON_BAD_REFERER = \"Referer checking"
  - "django/middleware/csrf.py:31:23         Referer     U       REASON_BAD_REFERER = \"Referer checking failed - %s"
  - "django/middleware/csrf.py:34:18         REFERER     U       REASON_MALFORMED_REFERER = \"Referer checking"
  - "django/middleware/csrf.py:34:29         Referer     U       MALFORMED_REFERER = \"Referer checking failed - Referer"
  - "django/middleware/csrf.py:34:55         Referer     U       Referer checking failed - Referer is malformed.\""
  - "django/middleware/csrf.py:35:17         REFERER     U       REASON_INSECURE_REFERER = ("
  - "django/middleware/csrf.py:297:16        referer     U       def _check_referer(self, request):"
  - "django/middleware/csrf.py:298:9         referer     U       referer = request.META.get("
  - "django/middleware/csrf.py:298:42        REFERER     U       request.META.get(\"HTTP_REFERER\")"
  - "django/middleware/csrf.py:299:12        referer     U       if referer is None:"
  - "django/middleware/csrf.py:303:13        referer     U       referer = urlsplit(referer)"
  - "django/middleware/csrf.py:303:32        referer     U       referer = urlsplit(referer)"
  - "django/middleware/gzip.py:23:17         gzipping    U       # Avoid gzipping if we've already got"
  - "django/middleware/gzip.py:37:17         orignal     U       orignal_iterator = response"
  - "django/middleware/gzip.py:40:40         orignal     U       async for chunk in orignal_iterator:"
  - "django/shortcuts.py:52:19       klass       U       def _get_queryset(klass):"
  - "django/shortcuts.py:60:16       klass       U       if hasattr(klass, \"_default_manager\""
  - "django/shortcuts.py:61:16       klass       U       return klass._default_manager.all"
  - "django/shortcuts.py:62:12       klass       U       return klass"
  - "django/shortcuts.py:65:23       klass       U       def get_object_or_404(klass, *args, **kwargs):"
  - "django/template/__init__.py:34:19       smartif     U       - django.template.smartif"
  - "django/template/base.py:526:25      endtag      U       def skip_past(self, endtag):"
  - "django/template/base.py:529:74      endtag      U       and token.contents == endtag:"
  - "django/template/base.py:531:34      endtag      U       unclosed_block_tag([endtag])"
  - "django/template/base.py:618:19      strdq       U       (?:%(i18n_open)s%(strdq)s%(i18n_close)s|"
  - "django/template/base.py:619:16      strsq       U       %(i18n_open)s%(strsq)s%(i18n_close)s|"
  - "django/template/base.py:620:3       strdq       U       %(strdq)s|"
  - "django/template/base.py:621:3       strsq       U       %(strsq)s)"
  - "django/template/base.py:623:6       strdq       U       \"strdq\": r'\"[^\"\\\\]*(?:\\\\.["
  - "django/template/base.py:624:6       strsq       U       \"strsq\": r\"'[^'\\\\]*(?:\\\\.["
  - "django/template/base.py:760:9       alen        U       alen = len(args)"
  - "django/template/base.py:761:9       dlen        U       dlen = len(defaults or ["
  - "django/template/base.py:763:20      alen        U       if plen < (alen - dlen) or plen > alen"
  - "django/template/base.py:763:27      dlen        U       if plen < (alen - dlen) or plen > alen:"
  - "django/template/base.py:763:43      alen        U       alen - dlen) or plen > alen:"
  - "django/template/base.py:765:66      alen        U       d provided\" % (name, alen - dlen, plen)"
  - "django/template/base.py:765:73      dlen        U       provided\" % (name, alen - dlen, plen)"
  - "django/template/base.py:838:34      bonafide    U       # dealing with a bonafide variable"
  - "django/template/defaultfilters.py:6:72          getcontext      U       Decimal, InvalidOperation, getcontext"
  - "django/template/defaultfilters.py:21:31         Truncator       U       django.utils.text import Truncator, normalize_newlines"
  - "django/template/defaultfilters.py:193:22        scaleb          U       exp = Decimal(1).scaleb(-abs(p))"
  - "django/template/defaultfilters.py:195:5         tupl            U       tupl = d.as_tuple()"
  - "django/template/defaultfilters.py:196:17        tupl            U       units = len(tupl[1])"
  - "django/template/defaultfilters.py:197:15        tupl            U       units += -tupl[2] if m else tupl[2"
  - "django/template/defaultfilters.py:197:33        tupl            U       -tupl[2] if m else tupl[2]"
  - "django/template/defaultfilters.py:198:5         prec            U       prec = abs(p) + units +"
  - "django/template/defaultfilters.py:199:5         prec            U       prec = max(getcontext().prec"
  - "django/template/defaultfilters.py:199:16        getcontext      U       prec = max(getcontext().prec, prec)"
  - "django/template/defaultfilters.py:199:29        prec            U       prec = max(getcontext().prec, prec)"
  - "django/template/defaultfilters.py:199:35        prec            U       max(getcontext().prec, prec)"
  - "django/template/defaultfilters.py:203:56        prec            U       ROUND_HALF_UP, Context(prec=prec))"
  - "django/template/defaultfilters.py:298:30        titlecase       U       Convert a string into titlecase.\"\"\""
  - "django/template/defaultfilters.py:311:12        Truncator       U       return Truncator(value).chars(length"
  - "django/template/defaultfilters.py:325:12        Truncator       U       return Truncator(value).chars(length"
  - "django/template/defaultfilters.py:339:12        Truncator       U       return Truncator(value).words(length"
  - "django/template/defaultfilters.py:353:12        Truncator       U       return Truncator(value).words(length"
  - "django/template/defaultfilters.py:460:5         escapeseq       U       def escapeseq(value):"
  - "django/template/defaultfilters.py:956:22        cand            U       * If value is 0, cand{{ value|pluralize:\"y"
  - "django/template/defaultfilters.py:957:22        cand            U       * If value is 1, cand{{ value|pluralize:\"y"
  - "django/template/defaultfilters.py:958:22        cand            U       * If value is 2, cand{{ value|pluralize:\"y"
  - "django/template/defaulttags.py:40:7         smartif         U       from .smartif import IfParser, Literal"
  - "django/template/defaulttags.py:146:35       asvar           U       init__(self, variables, asvar=None):"
  - "django/template/defaulttags.py:148:14       asvar           U       self.asvar = asvar"
  - "django/template/defaulttags.py:148:22       asvar           U       self.asvar = asvar"
  - "django/template/defaulttags.py:157:17       asvar           U       if self.asvar:"
  - "django/template/defaulttags.py:158:26       asvar           U       context[self.asvar] = first"
  - "django/template/defaulttags.py:610:53       subtemplate     U       rowcolors }}\">{% include \"subtemplate.html \" %}</tr>"
  - "django/template/defaulttags.py:1118:48      amet            U       Lorem ipsum dolor sit amet, consectetuer...\")."
  - "django/template/defaulttags.py:1118:54      consectetuer    U       ipsum dolor sit amet, consectetuer...\")."
  - "django/template/defaulttags.py:1224:21      Remler          U       * Emily Remler"
  - "django/template/defaulttags.py:1226:15      Lovie           U       * Lovie Austin"
  - "django/template/defaulttags.py:1457:21      myblock         U       {% verbatim myblock %}"
  - "django/template/defaulttags.py:1459:24      myblock         U       {% endverbatim myblock %}"
  - "django/template/library.py:37:34        somename        U       # @register.tag('somename') or @register.tag(name"
  - "django/template/library.py:37:68        somename        U       @register.tag(name='somename')"
  - "django/template/library.py:43:29        somename        U       # register.tag('somename', somefunc)"
  - "django/template/library.py:43:40        somefunc        U       register.tag('somename', somefunc)"
  - "django/template/library.py:75:37        somename        U       # @register.filter('somename') or @register.filter"
  - "django/template/library.py:75:74        somename        U       register.filter(name='somename')"
  - "django/template/library.py:81:43        somefunc        U       register.filter('somename', somefunc)"
  - "django/template/library.py:115:17       varkw           U       varkw,"
  - "django/template/library.py:117:17       kwonly          U       kwonly,"
  - "django/template/library.py:118:17       kwonly          U       kwonly_defaults,"
  - "django/template/library.py:135:21       varkw           U       varkw,"
  - "django/template/library.py:137:21       kwonly          U       kwonly,"
  - "django/template/library.py:138:21       kwonly          U       kwonly_defaults,"
  - "django/template/library.py:170:17       varkw           U       varkw,"
  - "django/template/library.py:172:17       kwonly          U       kwonly,"
  - "django/template/library.py:186:21       varkw           U       varkw,"
  - "django/template/library.py:254:36       reparsing       U       render_context to avoid reparsing and loading when used"
  - "django/template/library.py:288:5        varkw           U       varkw,"
  - "django/template/loader_tags.py:179:36       reparsing       U       render_context to avoid reparsing and loading when used"
  - "django/template/loader_tags.py:312:49       BAZZ            U       some_include\" with bar=\"BAZZ!\" baz=\"BING!\" %}"
  - "django/template/loader_tags.py:348:5        namemap         U       namemap = options.get(\"with"
  - "django/template/loader_tags.py:352:23       namemap         U       extra_context=namemap,"
  - "django/template/response.py:116:17      newretval       U       newretval = post_callback(retval"
  - "django/template/response.py:117:20      newretval       U       if newretval is not None:"
  - "django/template/response.py:118:30      newretval       U       retval = newretval"
  - "django/templatetags/i18n.py:75:49       asvar       U       filter_expression, noop, asvar=None, message_context"
  - "django/templatetags/i18n.py:77:14       asvar       U       self.asvar = asvar"
  - "django/templatetags/i18n.py:77:22       asvar       U       self.asvar = asvar"
  - "django/templatetags/i18n.py:97:17       asvar       U       if self.asvar:"
  - "django/templatetags/i18n.py:98:26       asvar       U       context[self.asvar] = value"
  - "django/templatetags/tz.py:14:7          datetimeobject      U       class datetimeobject(datetime):"
  - "django/templatetags/tz.py:56:32         exceptionsm         U       Filters must never raise exceptionsm, so catch everything"
  - "django/templatetags/tz.py:75:14         datetimeobject      U       result = datetimeobject("
  - "django/test/client.py:16:27         asgi                U       django.core.handlers.asgi import ASGIRequest"
  - "django/test/client.py:16:39         ASGI                U       handlers.asgi import ASGIRequest"
  - "django/test/client.py:232:31        asend               U       await request_started.asend(sender=self.__class"
  - "django/test/client.py:235:19        ASGI                U       request = ASGIRequest(scope, LimitedStream"
  - "django/test/client.py:244:34        ASGI                U       Attach the originating ASGI request to the response"
  - "django/test/client.py:246:18        asgi                U       response.asgi_request = request"
  - "django/test/client.py:399:69        doseq               U       urlencode(query_params, doseq=True)"
  - "django/test/client.py:665:61        doseq               U       urlencode(query_params, doseq=True)"
  - "django/test/client.py:676:37        ASGI                U       lets you create mock ASGI-like Request objects"
  - "django/test/client.py:685:19        ASGI                U       a) this makes ASGIRequest subclasses, and"
  - "django/test/client.py:695:14        asgi                U       \"asgi\": {\"version\": \"3.0\""
  - "django/test/client.py:764:57        doseq               U       urlencode(query_params, doseq=True)"
  - "django/test/client.py:772:41        asgi                U       update(HttpHeaders.to_asgi_names(headers))"
  - "django/test/client.py:814:15        asession            U       async def asession(self):"
  - "django/test/client.py:839:15        alogin              U       async def alogin(self, **credentials"
  - "django/test/client.py:841:41        aauthenticate       U       contrib.auth import aauthenticate"
  - "django/test/client.py:843:22        aauthenticate       U       user = await aauthenticate(**credentials)"
  - "django/test/client.py:845:25        alogin              U       await self._alogin(user)"
  - "django/test/client.py:855:15        aforce              U       async def aforce_login(self, user, backend"
  - "django/test/client.py:859:21        alogin              U       await self._alogin(user, backend)"
  - "django/test/client.py:884:16        alogin              U       async def _alogin(self, user, backend"
  - "django/test/client.py:885:41        alogin              U       contrib.auth import alogin"
  - "django/test/client.py:889:30        asession            U       session = await self.asession()"
  - "django/test/client.py:928:15        alogout             U       async def alogout(self):"
  - "django/test/client.py:930:52        alogout             U       auth import aget_user, alogout"
  - "django/test/client.py:933:30        asession            U       session = await self.asession()"
  - "django/test/client.py:940:15        alogout             U       await alogout(request)"
  - "django/test/client.py:1453:36       asgi                U       urlconf = getattr(response.asgi_request, \"urlconf\","
  - "django/test/client.py:1490:36       ahandle             U       response = await self._ahandle_redirects("
  - "django/test/client.py:1520:36       ahandle             U       response = await self._ahandle_redirects("
  - "django/test/client.py:1553:36       ahandle             U       response = await self._ahandle_redirects("
  - "django/test/client.py:1583:36       ahandle             U       response = await self._ahandle_redirects("
  - "django/test/client.py:1618:36       ahandle             U       response = await self._ahandle_redirects("
  - "django/test/html.py:19:6        autoplay            U       \"autoplay\","
  - "django/test/html.py:25:6        formnovalidate      U       \"formnovalidate\","
  - "django/test/html.py:28:6        itemscope           U       \"itemscope\","
  - "django/test/html.py:35:6        playsinline         U       \"playsinline\","
  - "django/test/html.py:41:6        truespeed           U       \"truespeed\","
  - "django/test/html.py:212:40      getpos              U       HTMLParseError(msg, self.getpos())"
  - "django/test/html.py:218:29      getpos              U       position = self.getpos()"
  - "django/test/html.py:241:48      getpos              U       positions[element] = self.getpos()"
  - "django/test/runner.py:353:36        unpythonic      U       implementation matches the unpythonic coding style of unittest"
  - "django/test/runner.py:445:10        subsuite        U       def _run_subsuite(args):"
  - "django/test/runner.py:452:19        subsuite        U       runner_class, subsuite_index, subsuite, failfast"
  - "django/test/runner.py:452:35        subsuite        U       class, subsuite_index, subsuite, failfast, buffer ="
  - "django/test/runner.py:454:25        subsuite        U       result = runner.run(subsuite)"
  - "django/test/runner.py:455:12        subsuite        U       return subsuite_index, result.events"
  - "django/test/runner.py:487:15        subsuites       U       self, subsuites, processes, failfast"
  - "django/test/runner.py:489:14        subsuites       U       self.subsuites = subsuites"
  - "django/test/runner.py:489:26        subsuites       U       self.subsuites = subsuites"
  - "django/test/runner.py:508:45        subsuites       U       numeric indexes in self.subsuites instead of tests"
  - "django/test/runner.py:519:13        initargs        U       initargs=["
  - "django/test/runner.py:531:51        subsuites       U       subsuite in enumerate(self.subsuites)"
  - "django/test/runner.py:653:9         keepdb          U       keepdb=False,"
  - "django/test/runner.py:675:14        keepdb          U       self.keepdb = keepdb"
  - "django/test/runner.py:675:23        keepdb          U       self.keepdb = keepdb"
  - "django/test/runner.py:727:16        keepdb          U       \"--keepdb\", action=\"store_true"
  - "django/test/runner.py:968:13        keepdb          U       keepdb=self.keepdb,"
  - "django/test/signals.py:61:27        tzset       U       if hasattr(time, \"tzset\"):"
  - "django/test/signals.py:66:18        tzset       U       time.tzset()"
  - "django/test/signals.py:243:54       modwsgi     U       auth.handlers import modwsgi"
  - "django/test/signals.py:245:13       modwsgi     U       modwsgi.UserModel = UserModel"
  - "django/test/testcases.py:99:8           pickable        U       def is_pickable(obj):"
  - "django/test/testcases.py:328:53         picklability    U       cannot be tested on picklability, since they"
  - "django/test/testcases.py:331:13         pickable        U       pickable_state = {\"_outcome\""
  - "django/test/testcases.py:333:27         pickable        U       if key in pickable_state or not is_pickable"
  - "django/test/testcases.py:333:52         pickable        U       pickable_state or not is_pickable(value):"
  - "django/test/testcases.py:335:17         pickable        U       pickable_state[key] = value"
  - "django/test/utils.py:58:29          tzset               U       SUPPORT = hasattr(time, \"tzset\")"
  - "django/test/utils.py:103:27         subcontexts         U       Flattened keys of subcontexts."
  - "django/test/utils.py:178:5          keepdb              U       keepdb=False,"
  - "django/test/utils.py:209:25         keepdb              U       keepdb=keepdb,"
  - "django/test/utils.py:209:32         keepdb              U       keepdb=keepdb,"
  - "django/test/utils.py:218:33         keepdb              U       keepdb=keepdb,"
  - "django/test/utils.py:218:40         keepdb              U       keepdb=keepdb,"
  - "django/test/utils.py:751:30         tzset               U       OSes that don't provide tzset (Windows), we can't"
  - "django/test/utils.py:993:22         weakreferences      U       # Collecting weakreferences can take two collections"
  - "django/urls/conf.py:1:27        Lsconfs     U       Functions for use in URLsconfs.\"\"\""
  - "django/urls/resolvers.py:25:39          SUBDELIMS       U       http import RFC3986_SUBDELIMS, escape_leading_slashes"
  - "django/urls/resolvers.py:673:66         submatch        U       arguments in match with submatch"
  - "django/urls/resolvers.py:799:38         SUBDELIMS       U       safe=RFC3986_SUBDELIMS + \"/~:@\","
  - "django/urls/utils.py:34:9           parentmod       U       parentmod, submod = get_mod_func"
  - "django/urls/utils.py:34:20          submod          U       parentmod, submod = get_mod_func(mod_name"
  - "django/urls/utils.py:35:12          submod          U       if submod and not module_has_submodule"
  - "django/urls/utils.py:35:62          parentmod       U       submodule(import_module(parentmod), submod):"
  - "django/urls/utils.py:35:74          submod          U       import_module(parentmod), submod):"
  - "django/utils/archive.py:112:28      unarchived      U       permissions to the unarchived file."
  - "django/utils/autoreload.py:97:25        tcgetattr       U       attr_list = termios.tcgetattr(sys.stdin)"
  - "django/utils/autoreload.py:100:29       SIGTTOU         U       if hasattr(signal, \"SIGTTOU\"):"
  - "django/utils/autoreload.py:101:48       SIGTTOU         U       signal.signal(signal.SIGTTOU, signal.SIG_IGN)"
  - "django/utils/autoreload.py:104:17       tcsetattr       U       termios.tcsetattr(sys.stdin, termios.TCSANOW"
  - "django/utils/autoreload.py:104:46       TCSANOW         U       tcsetattr(sys.stdin, termios.TCSANOW, attr_list)"
  - "django/utils/autoreload.py:106:34       SIGTTOU         U       signal.signal(signal.SIGTTOU, old_handler)"
  - "django/utils/autoreload.py:388:9        mtimes          U       mtimes = {}"
  - "django/utils/autoreload.py:391:28       mtimes          U       old_time = mtimes.get(filepath)"
  - "django/utils/autoreload.py:392:17       mtimes          U       mtimes[filepath] = mtime"
  - "django/utils/autoreload.py:483:14       dedup           U       \"dedup_results\": True,"
  - "django/utils/cache.py:47:9          dictitem        U       def dictitem(s):"
  - "django/utils/cache.py:54:9          dictvalue       U       def dictvalue(*t):"
  - "django/utils/cache.py:63:32         dictitem        U       directive, value = dictitem(field)"
  - "django/utils/cache.py:96:32         dictvalue       U       directives.extend([dictvalue(directive, value) for"
  - "django/utils/cache.py:98:31         dictvalue       U       directives.append(dictvalue(directive, values))"
  - "django/utils/cache.py:316:9         newheader       U       newheader"
  - "django/utils/cache.py:317:13        newheader       U       for newheader in newheaders"
  - "django/utils/cache.py:318:12        newheader       U       if newheader.lower() not in existing"
  - "django/utils/choices.py:20:68       fillvalue       U       longest(self, other, fillvalue=object()))"
  - "django/utils/choices.py:25:15       Suboptimally    U       # Suboptimally consume whole iterator"
  - "django/utils/crypto.py:45:50        digestmod       U       force_bytes(value), digestmod=hasher)"
  - "django/utils/crypto.py:70:40        dklen           U       password, salt, iterations, dklen=0, digest=None):"
  - "django/utils/crypto.py:74:5         dklen           U       dklen = dklen or None"
  - "django/utils/crypto.py:74:13        dklen           U       dklen = dklen or None"
  - "django/utils/crypto.py:77:75        dklen           U       password, salt, iterations, dklen)"
  - "django/utils/datastructures.py:65:33        Holovaty    U       setlist('lastname', ['Holovaty', 'Willison'])"
  - "django/utils/datastructures.py:65:45        Willison    U       lastname', ['Holovaty', 'Willison'])"
  - "django/utils/datastructures.py:243:7        delslice    U       __delslice__ = complain"
  - "django/utils/datastructures.py:247:7        setslice    U       __setslice__ = complain"
  - "django/utils/dateformat.py:35:4         formatchars     U       re_formatchars = _lazy_re_compile(r"
  - "django/utils/dateformat.py:40:22        formatstr       U       def format(self, formatstr):"
  - "django/utils/dateformat.py:42:38        formatchars     U       piece in enumerate(re_formatchars.split(str(formatstr"
  - "django/utils/dateformat.py:42:60        formatstr       U       formatchars.split(str(formatstr))):"
  - "django/utils/dateformat.py:319:41       yday            U       data.timetuple().tm_yday"
  - "django/utils/deconstruct.py:14:19       klass       U       def decorator(klass):"
  - "django/utils/deconstruct.py:17:25       klass       U       obj = super(klass, cls).__new__(cls)"
  - "django/utils/deconstruct.py:27:38       klass       U       path and type(obj) is klass:"
  - "django/utils/deconstruct.py:47:46       klass       U       path and type(obj) is klass"
  - "django/utils/deconstruct.py:54:9        klass       U       klass.__new__ = staticmethod"
  - "django/utils/decorators.py:5:47         markcoroutinefunction       U       iscoroutinefunction, markcoroutinefunction"
  - "django/utils/decorators.py:8:7          classonlymethod             U       class classonlymethod(classmethod):"
  - "django/utils/decorators.py:57:9         markcoroutinefunction       U       markcoroutinefunction(_wrapper)"
  - "django/utils/deprecation.py:4:47        markcoroutinefunction       U       iscoroutinefunction, markcoroutinefunction, sync_to_async"
  - "django/utils/deprecation.py:99:46       dunder                      U       to avoid swapping out dunder methods."
  - "django/utils/deprecation.py:100:13      markcoroutinefunction       U       markcoroutinefunction(self)"
  - "django/utils/deprecation.py:116:27      acall                       U       return self.__acall__(request)"
  - "django/utils/deprecation.py:125:17      acall                       U       async def __acall__(self, request):"
  - "django/utils/encoding.py:147:66         multibyte       U       bytes ≥ 128 are part of multibyte"
  - "django/utils/encoding.py:149:2          hexdig          U       _hexdig = \"0123456789ABCDEFabcdef"
  - "django/utils/encoding.py:151:55         hexdig          U       fromhex(a + b) for a in _hexdig[8:] for b in _hexdig"
  - "django/utils/encoding.py:151:76         hexdig          U       hexdig[8:] for b in _hexdig}"
  - "django/utils/encoding.py:188:12         repercent       U       return repercent_broken_unicode(iri)"
  - "django/utils/encoding.py:199:23         alphanum        U       # unreserved = alphanum | mark"
  - "django/utils/encoding.py:213:5          repercent       U       def repercent_broken_unicode(path"
  - "django/utils/encoding.py:216:5          repercent       U       repercent-encode any octet produced"
  - "django/utils/encoding.py:226:13         repercent       U       repercent = quote(path[e.start"
  - "django/utils/encoding.py:227:52         repercent       U       append(path[: e.start] + repercent.encode())"
  - "django/utils/feedgenerator.py:8:16          Poynter         U       ... title=\"Poynter E-Media Tidbits\","
  - "django/utils/feedgenerator.py:32:19         xmlutils        U       from django.utils.xmlutils import SimplerXMLGenerator"
  - "django/utils/feedgenerator.py:66:5          mimetypedb      U       mimetypedb = mimetypes.MimeTypes"
  - "django/utils/feedgenerator.py:71:5          mimetypedb      U       mimetypedb.readfp(StringIO(\"text"
  - "django/utils/feedgenerator.py:73:12         mimetypedb      U       return mimetypedb.guess_type(url)"
  - "django/utils/formats.py:270:33      CFGY    U       ?:^|[^%])(?:%%)*)%([CFGY])\","
  - "django/utils/functional.py:323:66       unpickler       U       _ method and custom unpickler. We"
  - "django/utils/functional.py:324:40       unpickler's     U       wrapped object as the unpickler's argument, so that pickle"
  - "django/utils/functional.py:325:45       unpickler       U       normally, and then the unpickler simply returns its"
  - "django/utils/functional.py:330:26       lazyobject      U       return (unpickle_lazyobject, (self._wrapped,))"
  - "django/utils/functional.py:375:14       lazyobject      U       def unpickle_lazyobject(wrapped):"
  - "django/utils/html.py:14:39          GENDELIMS       U       http import RFC3986_GENDELIMS, RFC3986_SUBDELIMS"
  - "django/utils/html.py:14:58          SUBDELIMS       U       _GENDELIMS, RFC3986_SUBDELIMS"
  - "django/utils/html.py:184:34         charrefs        U       super().__init__(convert_charrefs=False)"
  - "django/utils/html.py:232:11         urlquote        U       def smart_urlquote(url):"
  - "django/utils/html.py:239:44         SUBDELIMS       U       segment, safe=RFC3986_SUBDELIMS + RFC3986_GENDELIMS"
  - "django/utils/html.py:239:64         GENDELIMS       U       SUBDELIMS + RFC3986_GENDELIMS + \"~\")"
  - "django/utils/html.py:345:29         urlquote        U       url = smart_urlquote(html.unescape(middle"
  - "django/utils/html.py:347:29         urlquote        U       url = smart_urlquote(\"http://%s\" % html.unescape"
  - "django/utils/html.py:414:21         rstripped       U       rstripped = middle.rstrip(closing"
  - "django/utils/html.py:415:24         rstripped       U       if rstripped != middle:"
  - "django/utils/html.py:424:17         rstripped       U       rstripped = middle.rstrip(self"
  - "django/utils/html.py:426:17         rstripped       U       rstripped = middle.rstrip(self"
  - "django/utils/html.py:427:16         rstripped       U       if rstripped != middle:"
  - "django/utils/html.py:492:15         klass           U       def html_safe(klass):"
  - "django/utils/html.py:497:22         klass           U       if \"__html__\" in klass.__dict__:"
  - "django/utils/html.py:500:29         klass           U       \"__html__().\" % klass.__name__"
  - "django/utils/html.py:502:25         klass           U       if \"__str__\" not in klass.__dict__:"
  - "django/utils/html.py:505:35         klass           U       define __str__().\" % klass.__name__"
  - "django/utils/http.py:38:9           GENDELIMS           U       RFC3986_GENDELIMS = \":/?#[]@\""
  - "django/utils/http.py:39:9           SUBDELIMS           U       RFC3986_SUBDELIMS = \"!$&'()*+,;=\""
  - "django/utils/http.py:42:22          doseq               U       def urlencode(query, doseq=False):"
  - "django/utils/http.py:58:18          doseq               U       elif not doseq or isinstance(value"
  - "django/utils/http.py:66:58          doseq               U       and iterators, when doseq=True, to"
  - "django/utils/http.py:80:45          doseq               U       urlencode(query_params, doseq)"
  - "django/utils/http.py:94:38          usegmt              U       formatdate(epoch_seconds, usegmt=True)"
  - "django/utils/http.py:106:19         parsedate           U       # email.utils.parsedate() does the job for RFC"
  - "django/utils/http.py:155:18         overconsumption     U       # To prevent overconsumption of server resources"
  - "django/utils/http.py:313:6          parseparam          U       def _parseparam(s):"
  - "django/utils/http.py:331:14         parseparam          U       parts = _parseparam(\";\" + line)"
  - "django/utils/ipv6.py:16:31          hextets     U       zeroes, and make sure all hextets are lowercase."
  - "django/utils/itercompat.py:11:23        itercompat      U       \"django.utils.itercompat.is_iterable() is deprecated"
  - "django/utils/log.py:105:24      levelname       U       record.levelname,"
  - "django/utils/log.py:114:42      levelname       U       \"%s: %s\" % (record.levelname, record.getMessage("
  - "django/utils/lorem_ipsum.py:8:28        amet                U       Lorem ipsum dolor sit amet, consectetur adipisicing"
  - "django/utils/lorem_ipsum.py:8:34        consectetur         U       ipsum dolor sit amet, consectetur adipisicing elit, sed"
  - "django/utils/lorem_ipsum.py:8:46        adipisicing         U       sit amet, consectetur adipisicing elit, sed do eiusmod"
  - "django/utils/lorem_ipsum.py:8:58        elit                U       consectetur adipisicing elit, sed do eiusmod \""
  - "django/utils/lorem_ipsum.py:8:71        eiusmod             U       adipisicing elit, sed do eiusmod \""
  - "django/utils/lorem_ipsum.py:9:6         tempor              U       \"tempor incididunt ut labore"
  - "django/utils/lorem_ipsum.py:9:13        incididunt          U       \"tempor incididunt ut labore et dolore"
  - "django/utils/lorem_ipsum.py:9:27        labore              U       tempor incididunt ut labore et dolore magna aliqua"
  - "django/utils/lorem_ipsum.py:9:37        dolore              U       incididunt ut labore et dolore magna aliqua. Ut enim"
  - "django/utils/lorem_ipsum.py:9:50        aliqua              U       labore et dolore magna aliqua. Ut enim ad minim \""
  - "django/utils/lorem_ipsum.py:9:61        enim                U       dolore magna aliqua. Ut enim ad minim \""
  - "django/utils/lorem_ipsum.py:10:6        veniam              U       \"veniam, quis nostrud exercitation"
  - "django/utils/lorem_ipsum.py:10:14       quis                U       \"veniam, quis nostrud exercitation"
  - "django/utils/lorem_ipsum.py:10:19       nostrud             U       \"veniam, quis nostrud exercitation ullamco"
  - "django/utils/lorem_ipsum.py:10:40       ullamco             U       nostrud exercitation ullamco laboris nisi ut aliquip"
  - "django/utils/lorem_ipsum.py:10:48       laboris             U       exercitation ullamco laboris nisi ut aliquip ex ea"
  - "django/utils/lorem_ipsum.py:10:64       aliquip             U       ullamco laboris nisi ut aliquip ex ea \""
  - "django/utils/lorem_ipsum.py:11:6        commodo             U       \"commodo consequat. Duis aute"
  - "django/utils/lorem_ipsum.py:11:14       consequat           U       \"commodo consequat. Duis aute irure dolor"
  - "django/utils/lorem_ipsum.py:11:25       Duis                U       \"commodo consequat. Duis aute irure dolor in"
  - "django/utils/lorem_ipsum.py:11:30       aute                U       commodo consequat. Duis aute irure dolor in reprehenderit"
  - "django/utils/lorem_ipsum.py:11:35       irure               U       consequat. Duis aute irure dolor in reprehenderit"
  - "django/utils/lorem_ipsum.py:11:50       reprehenderit       U       aute irure dolor in reprehenderit in voluptate \""
  - "django/utils/lorem_ipsum.py:11:67       voluptate           U       in reprehenderit in voluptate \""
  - "django/utils/lorem_ipsum.py:12:6        velit               U       \"velit esse cillum dolore eu"
  - "django/utils/lorem_ipsum.py:12:17       cillum              U       \"velit esse cillum dolore eu fugiat nulla"
  - "django/utils/lorem_ipsum.py:12:24       dolore              U       \"velit esse cillum dolore eu fugiat nulla pariatur"
  - "django/utils/lorem_ipsum.py:12:34       fugiat              U       esse cillum dolore eu fugiat nulla pariatur. Excepteur"
  - "django/utils/lorem_ipsum.py:12:41       nulla               U       cillum dolore eu fugiat nulla pariatur. Excepteur"
  - "django/utils/lorem_ipsum.py:12:47       pariatur            U       dolore eu fugiat nulla pariatur. Excepteur sint \""
  - "django/utils/lorem_ipsum.py:12:57       Excepteur           U       fugiat nulla pariatur. Excepteur sint \""
  - "django/utils/lorem_ipsum.py:13:6        occaecat            U       \"occaecat cupidatat non proident"
  - "django/utils/lorem_ipsum.py:13:15       cupidatat           U       \"occaecat cupidatat non proident, sunt in"
  - "django/utils/lorem_ipsum.py:13:29       proident            U       occaecat cupidatat non proident, sunt in culpa qui officia"
  - "django/utils/lorem_ipsum.py:13:39       sunt                U       cupidatat non proident, sunt in culpa qui officia"
  - "django/utils/lorem_ipsum.py:13:57       officia             U       proident, sunt in culpa qui officia deserunt \""
  - "django/utils/lorem_ipsum.py:13:65       deserunt            U       in culpa qui officia deserunt \""
  - "django/utils/lorem_ipsum.py:14:6        mollit              U       \"mollit anim id est laborum"
  - "django/utils/lorem_ipsum.py:14:25       laborum             U       \"mollit anim id est laborum.\""
  - "django/utils/lorem_ipsum.py:18:6        exercitationem      U       \"exercitationem\","
  - "django/utils/lorem_ipsum.py:19:6        perferendis         U       \"perferendis\","
  - "django/utils/lorem_ipsum.py:20:6        perspiciatis        U       \"perspiciatis\","
  - "django/utils/lorem_ipsum.py:21:6        laborum             U       \"laborum\","
  - "django/utils/lorem_ipsum.py:22:6        eveniet             U       \"eveniet\","
  - "django/utils/lorem_ipsum.py:23:6        sunt                U       \"sunt\","
  - "django/utils/lorem_ipsum.py:24:6        iure                U       \"iure\","
  - "django/utils/lorem_ipsum.py:26:6        nobis               U       \"nobis\","
  - "django/utils/lorem_ipsum.py:29:6        officiis            U       \"officiis\","
  - "django/utils/lorem_ipsum.py:30:6        excepturi           U       \"excepturi\","
  - "django/utils/lorem_ipsum.py:31:6        odio                U       \"odio\","
  - "django/utils/lorem_ipsum.py:32:6        consectetur         U       \"consectetur\","
  - "django/utils/lorem_ipsum.py:35:6        quisquam            U       \"quisquam\","
  - "django/utils/lorem_ipsum.py:37:6        eligendi            U       \"eligendi\","
  - "django/utils/lorem_ipsum.py:38:6        itaque              U       \"itaque\","
  - "django/utils/lorem_ipsum.py:40:6        odit                U       \"odit\","
  - "django/utils/lorem_ipsum.py:42:6        quaerat             U       \"quaerat\","
  - "django/utils/lorem_ipsum.py:43:6        dignissimos         U       \"dignissimos\","
  - "django/utils/lorem_ipsum.py:44:6        facilis             U       \"facilis\","
  - "django/utils/lorem_ipsum.py:45:6        neque               U       \"neque\","
  - "django/utils/lorem_ipsum.py:47:6        expedita            U       \"expedita\","
  - "django/utils/lorem_ipsum.py:49:6        vero                U       \"vero\","
  - "django/utils/lorem_ipsum.py:52:6        animi               U       \"animi\","
  - "django/utils/lorem_ipsum.py:53:6        cumque              U       \"cumque\","
  - "django/utils/lorem_ipsum.py:54:6        pariatur            U       \"pariatur\","
  - "django/utils/lorem_ipsum.py:55:6        velit               U       \"velit\","
  - "django/utils/lorem_ipsum.py:57:6        natus               U       \"natus\","
  - "django/utils/lorem_ipsum.py:58:6        iusto               U       \"iusto\","
  - "django/utils/lorem_ipsum.py:59:6        eaque               U       \"eaque\","
  - "django/utils/lorem_ipsum.py:60:6        sequi               U       \"sequi\","
  - "django/utils/lorem_ipsum.py:61:6        illo                U       \"illo\","
  - "django/utils/lorem_ipsum.py:65:6        voluptatibus        U       \"voluptatibus\","
  - "django/utils/lorem_ipsum.py:66:6        tempora             U       \"tempora\","
  - "django/utils/lorem_ipsum.py:67:6        veritatis           U       \"veritatis\","
  - "django/utils/lorem_ipsum.py:68:6        ratione             U       \"ratione\","
  - "django/utils/lorem_ipsum.py:69:6        assumenda           U       \"assumenda\","
  - "django/utils/lorem_ipsum.py:70:6        incidunt            U       \"incidunt\","
  - "django/utils/lorem_ipsum.py:72:6        placeat             U       \"placeat\","
  - "django/utils/lorem_ipsum.py:73:6        aliquid             U       \"aliquid\","
  - "django/utils/lorem_ipsum.py:74:6        fuga                U       \"fuga\","
  - "django/utils/lorem_ipsum.py:76:6        praesentium         U       \"praesentium\","
  - "django/utils/lorem_ipsum.py:78:6        necessitatibus      U       \"necessitatibus\","
  - "django/utils/lorem_ipsum.py:79:6        suscipit            U       \"suscipit\","
  - "django/utils/lorem_ipsum.py:80:6        adipisci            U       \"adipisci\","
  - "django/utils/lorem_ipsum.py:81:6        quidem              U       \"quidem\","
  - "django/utils/lorem_ipsum.py:82:6        possimus            U       \"possimus\","
  - "django/utils/lorem_ipsum.py:83:6        voluptas            U       \"voluptas\","
  - "django/utils/lorem_ipsum.py:84:6        debitis             U       \"debitis\","
  - "django/utils/lorem_ipsum.py:86:6        accusantium         U       \"accusantium\","
  - "django/utils/lorem_ipsum.py:87:6        unde                U       \"unde\","
  - "django/utils/lorem_ipsum.py:88:6        sapiente            U       \"sapiente\","
  - "django/utils/lorem_ipsum.py:89:6        voluptate           U       \"voluptate\","
  - "django/utils/lorem_ipsum.py:91:6        aspernatur          U       \"aspernatur\","
  - "django/utils/lorem_ipsum.py:92:6        laudantium          U       \"laudantium\","
  - "django/utils/lorem_ipsum.py:93:6        soluta              U       \"soluta\","
  - "django/utils/lorem_ipsum.py:94:6        amet                U       \"amet\","
  - "django/utils/lorem_ipsum.py:96:6        aliquam             U       \"aliquam\","
  - "django/utils/lorem_ipsum.py:97:6        saepe               U       \"saepe\","
  - "django/utils/lorem_ipsum.py:100:6       ipsa                U       \"ipsa\","
  - "django/utils/lorem_ipsum.py:102:6       reiciendis          U       \"reiciendis\","
  - "django/utils/lorem_ipsum.py:103:6       nesciunt            U       \"nesciunt\","
  - "django/utils/lorem_ipsum.py:104:6       doloribus           U       \"doloribus\","
  - "django/utils/lorem_ipsum.py:105:6       autem               U       \"autem\","
  - "django/utils/lorem_ipsum.py:106:6       impedit             U       \"impedit\","
  - "django/utils/lorem_ipsum.py:108:6       maiores             U       \"maiores\","
  - "django/utils/lorem_ipsum.py:109:6       repudiandae         U       \"repudiandae\","
  - "django/utils/lorem_ipsum.py:110:6       ipsam               U       \"ipsam\","
  - "django/utils/lorem_ipsum.py:111:6       obcaecati           U       \"obcaecati\","
  - "django/utils/lorem_ipsum.py:112:6       ullam               U       \"ullam\","
  - "django/utils/lorem_ipsum.py:113:6       enim                U       \"enim\","
  - "django/utils/lorem_ipsum.py:114:6       totam               U       \"totam\","
  - "django/utils/lorem_ipsum.py:115:6       delectus            U       \"delectus\","
  - "django/utils/lorem_ipsum.py:116:6       ducimus             U       \"ducimus\","
  - "django/utils/lorem_ipsum.py:117:6       quis                U       \"quis\","
  - "django/utils/lorem_ipsum.py:118:6       voluptates          U       \"voluptates\","
  - "django/utils/lorem_ipsum.py:120:6       molestiae           U       \"molestiae\","
  - "django/utils/lorem_ipsum.py:121:6       harum               U       \"harum\","
  - "django/utils/lorem_ipsum.py:122:6       dolorem             U       \"dolorem\","
  - "django/utils/lorem_ipsum.py:124:6       voluptatem          U       \"voluptatem\","
  - "django/utils/lorem_ipsum.py:125:6       molestias           U       \"molestias\","
  - "django/utils/lorem_ipsum.py:126:6       magni               U       \"magni\","
  - "django/utils/lorem_ipsum.py:127:6       distinctio          U       \"distinctio\","
  - "django/utils/lorem_ipsum.py:128:6       omnis               U       \"omnis\","
  - "django/utils/lorem_ipsum.py:129:6       illum               U       \"illum\","
  - "django/utils/lorem_ipsum.py:130:6       dolorum             U       \"dolorum\","
  - "django/utils/lorem_ipsum.py:131:6       voluptatum          U       \"voluptatum\","
  - "django/utils/lorem_ipsum.py:133:6       quas                U       \"quas\","
  - "django/utils/lorem_ipsum.py:135:6       corporis            U       \"corporis\","
  - "django/utils/lorem_ipsum.py:137:6       blanditiis          U       \"blanditiis\","
  - "django/utils/lorem_ipsum.py:138:6       atque               U       \"atque\","
  - "django/utils/lorem_ipsum.py:139:6       deserunt            U       \"deserunt\","
  - "django/utils/lorem_ipsum.py:140:6       laboriosam          U       \"laboriosam\","
  - "django/utils/lorem_ipsum.py:141:6       earum               U       \"earum\","
  - "django/utils/lorem_ipsum.py:142:6       consequuntur        U       \"consequuntur\","
  - "django/utils/lorem_ipsum.py:144:6       cupiditate          U       \"cupiditate\","
  - "django/utils/lorem_ipsum.py:145:6       quibusdam           U       \"quibusdam\","
  - "django/utils/lorem_ipsum.py:146:6       accusamus           U       \"accusamus\","
  - "django/utils/lorem_ipsum.py:148:6       rerum               U       \"rerum\","
  - "django/utils/lorem_ipsum.py:151:6       eius                U       \"eius\","
  - "django/utils/lorem_ipsum.py:154:6       nemo                U       \"nemo\","
  - "django/utils/lorem_ipsum.py:156:6       officia             U       \"officia\","
  - "django/utils/lorem_ipsum.py:161:6       reprehenderit       U       \"reprehenderit\","
  - "django/utils/lorem_ipsum.py:162:6       numquam             U       \"numquam\","
  - "django/utils/lorem_ipsum.py:163:6       iste                U       \"iste\","
  - "django/utils/lorem_ipsum.py:164:6       fugiat              U       \"fugiat\","
  - "django/utils/lorem_ipsum.py:166:6       inventore           U       \"inventore\","
  - "django/utils/lorem_ipsum.py:167:6       beatae              U       \"beatae\","
  - "django/utils/lorem_ipsum.py:168:6       repellendus         U       \"repellendus\","
  - "django/utils/lorem_ipsum.py:169:6       magnam              U       \"magnam\","
  - "django/utils/lorem_ipsum.py:170:6       recusandae          U       \"recusandae\","
  - "django/utils/lorem_ipsum.py:172:6       explicabo           U       \"explicabo\","
  - "django/utils/lorem_ipsum.py:173:6       doloremque          U       \"doloremque\","
  - "django/utils/lorem_ipsum.py:174:6       aperiam             U       \"aperiam\","
  - "django/utils/lorem_ipsum.py:175:6       consequatur         U       \"consequatur\","
  - "django/utils/lorem_ipsum.py:176:6       asperiores          U       \"asperiores\","
  - "django/utils/lorem_ipsum.py:177:6       commodi             U       \"commodi\","
  - "django/utils/lorem_ipsum.py:178:6       optio               U       \"optio\","
  - "django/utils/lorem_ipsum.py:180:6       labore              U       \"labore\","
  - "django/utils/lorem_ipsum.py:181:6       temporibus          U       \"temporibus\","
  - "django/utils/lorem_ipsum.py:182:6       repellat            U       \"repellat\","
  - "django/utils/lorem_ipsum.py:183:6       veniam              U       \"veniam\","
  - "django/utils/lorem_ipsum.py:184:6       architecto          U       \"architecto\","
  - "django/utils/lorem_ipsum.py:187:6       mollitia            U       \"mollitia\","
  - "django/utils/lorem_ipsum.py:188:6       nulla               U       \"nulla\","
  - "django/utils/lorem_ipsum.py:190:6       similique           U       \"similique\","
  - "django/utils/lorem_ipsum.py:193:6       dolore              U       \"dolore\","
  - "django/utils/lorem_ipsum.py:194:6       tenetur             U       \"tenetur\","
  - "django/utils/lorem_ipsum.py:195:6       deleniti            U       \"deleniti\","
  - "django/utils/lorem_ipsum.py:196:6       porro               U       \"porro\","
  - "django/utils/lorem_ipsum.py:197:6       facere              U       \"facere\","
  - "django/utils/lorem_ipsum.py:198:6       maxime              U       \"maxime\","
  - "django/utils/lorem_ipsum.py:199:6       corrupti            U       \"corrupti\","
  - "django/utils/lorem_ipsum.py:207:6       amet                U       \"amet\","
  - "django/utils/lorem_ipsum.py:208:6       consectetur         U       \"consectetur\","
  - "django/utils/lorem_ipsum.py:209:6       adipisicing         U       \"adipisicing\","
  - "django/utils/lorem_ipsum.py:210:6       elit                U       \"elit\","
  - "django/utils/lorem_ipsum.py:213:6       eiusmod             U       \"eiusmod\","
  - "django/utils/lorem_ipsum.py:214:6       tempor              U       \"tempor\","
  - "django/utils/lorem_ipsum.py:215:6       incididunt          U       \"incididunt\","
  - "django/utils/lorem_ipsum.py:217:6       labore              U       \"labore\","
  - "django/utils/lorem_ipsum.py:219:6       dolore              U       \"dolore\","
  - "django/utils/lorem_ipsum.py:221:6       aliqua              U       \"aliqua\","
  - "django/utils/regex_helper.py:5:60           decompiler      U       a complete reg-exp decompiler. It"
  - "django/utils/termcolors.py:2:1          termcolors      U       termcolors.py"
  - "django/utils/text.py:102:56         charrefs            U       replacement, convert_charrefs=True):"
  - "django/utils/text.py:103:34         charrefs            U       super().__init__(convert_charrefs=convert_charrefs)"
  - "django/utils/text.py:103:51         charrefs            U       convert_charrefs=convert_charrefs)"
  - "django/utils/text.py:123:23         appendleft          U       self.tags.appendleft(tag)"
  - "django/utils/text.py:156:56         charrefs            U       replacement, convert_charrefs=True):"
  - "django/utils/text.py:162:21         charrefs            U       convert_charrefs=convert_charrefs,"
  - "django/utils/text.py:168:54         rawdata             U       len(data) == len(self.rawdata)"
  - "django/utils/text.py:183:7          Truncator           U       class Truncator(SimpleLazyObject):"
  - "django/utils/text.py:356:40         compresslevel       U       data = gzip_compress(s, compresslevel=6, mtime=0)"
  - "django/utils/text.py:383:39         compresslevel       U       filename, mode=\"wb\", compresslevel=6, fileobj=buf, mtime"
  - "django/utils/text.py:384:10         zfile               U       ) as zfile:"
  - "django/utils/text.py:388:13         zfile               U       zfile.write(item)"
  - "django/utils/timezone.py:84:63          tzset       U       'TZ'] and call time.tzset()"
  - "django/utils/translation/template.py:41:65          xgettext        U       that is understood by xgettext. It"
  - "django/utils/translation/template.py:48:5           inplural        U       inplural = False"
  - "django/utils/translation/template.py:52:5           incomment       U       incomment = False"
  - "django/utils/translation/template.py:66:12          incomment       U       if incomment:"
  - "django/utils/translation/template.py:81:17          incomment       U       incomment = False"
  - "django/utils/translation/template.py:87:17          endbmatch       U       endbmatch = endblock_re.match"
  - "django/utils/translation/template.py:88:17          pluralmatch     U       pluralmatch = plural_re.match(t"
  - "django/utils/translation/template.py:89:20          endbmatch       U       if endbmatch:"
  - "django/utils/translation/template.py:90:24          inplural        U       if inplural:"
  - "django/utils/translation/template.py:132:21         inplural        U       inplural = False"
  - "django/utils/translation/template.py:135:22         pluralmatch     U       elif pluralmatch:"
  - "django/utils/translation/template.py:136:21         inplural        U       inplural = True"
  - "django/utils/translation/template.py:146:20         inplural        U       if inplural:"
  - "django/utils/translation/template.py:182:17         bmatch          U       bmatch = block_re.match(t.contents"
  - "django/utils/translation/template.py:183:17         cmatches        U       cmatches = constant_re.findall"
  - "django/utils/translation/template.py:207:22         bmatch          U       elif bmatch:"
  - "django/utils/translation/template.py:208:25         fmatch          U       for fmatch in constant_re.findall"
  - "django/utils/translation/template.py:209:47         fmatch          U       out.write(\" _(%s) \" % fmatch)"
  - "django/utils/translation/template.py:210:24         bmatch          U       if bmatch[1]:"
  - "django/utils/translation/template.py:212:58         bmatch          U       match = context_re.match(bmatch[1])"
  - "django/utils/translation/template.py:223:22         cmatches        U       elif cmatches:"
  - "django/utils/translation/template.py:224:35         cmatches        U       for cmatch in cmatches:"
  - "django/utils/translation/template.py:227:21         incomment       U       incomment = True"
  - "django/utils/translation/trans_real.py:24:41        threadid        U       translations are stored by threadid to make them thread"
  - "django/utils/translation/trans_real.py:123:13       tmsg            U       tmsg = cat.get((msgid, plural"
  - "django/utils/translation/trans_real.py:124:16       tmsg            U       if tmsg is not None:"
  - "django/utils/translation/trans_real.py:125:24       tmsg            U       return tmsg"
  - "django/utils/translation/trans_real.py:207:9        settingsfile    U       settingsfile = sys.modules[settings"
  - "django/utils/translation/trans_real.py:208:50       settingsfile    U       join(os.path.dirname(settingsfile), \"locale\")"
  - "django/utils/translation/trans_real.py:275:13       tmsg            U       tmsg = self._catalog.plural"
  - "django/utils/translation/trans_real.py:280:17       tmsg            U       tmsg = msgid1"
  - "django/utils/translation/trans_real.py:395:14       ctxt            U       msg_with_ctxt = \"%s%s%s\" % (context"
  - "django/utils/translation/trans_real.py:396:31       ctxt            U       result = gettext(msg_with_ctxt)"
  - "django/utils/translation/trans_real.py:415:8        ntranslate      U       def do_ntranslate(singular, plural, number"
  - "django/utils/translation/trans_real.py:431:15       ntranslate      U       return do_ntranslate(singular, plural, number"
  - "django/utils/translation/trans_real.py:435:15       ctxt            U       msgs_with_ctxt = ("
  - "django/utils/translation/trans_real.py:440:34       ctxt            U       ngettext(*msgs_with_ctxt)"
  - "django/utils/translation/trans_real.py:451:5        globalpath      U       globalpath = os.path.join("
  - "django/utils/translation/trans_real.py:459:13       globalpath      U       return [globalpath, *settings.LOCALE_PATHS"
  - "django/utils/translation/trans_real.py:564:28       sublanguage     U       the user requests a sublanguage where we have a main"
  - "django/utils/tree.py:120:42         pushdown    U       children could be used for pushdown here."
  - "django/utils/version.py:12:57       PYXY    U       the Python version. PYXY means \"Python X.Y"
  - "django/views/csrf.py:26:73          REFERER         U       CSRF_COOKIE, REASON_NO_REFERER"
  - "django/views/csrf.py:32:13          referer         U       \"no_referer\": reason == REASON_NO"
  - "django/views/csrf.py:32:43          REFERER         U       reason == REASON_NO_REFERER,"
  - "django/views/csrf.py:33:13          referer         U       \"no_referer1\": _("
  - "django/views/csrf.py:35:15          Referer         U       \"“Referer header” to be sent by"
  - "django/views/csrf.py:39:13          referer         U       \"no_referer2\": _("
  - "django/views/csrf.py:40:62          Referer         U       browser to disable “Referer” headers, \""
  - "django/views/csrf.py:44:13          referer         U       \"no_referer3\": _("
  - "django/views/csrf.py:48:28          Referer         U       \"requires the “Referer” header to do strict"
  - "django/views/csrf.py:48:57          referer         U       header to do strict referer checking. If \""
  - "django/views/csrf.py:50:22          noreferrer      U       '<a rel=\"noreferrer\" …> for links to third"
  - "django/views/debug.py:254:69        firstlineno     U       {tb_frame.f_code.co_firstlineno}\""
  - "django/views/debug.py:421:16        lastframe       U       c[\"lastframe\"] = frames[-1]"
  - "django/views/debug.py:573:66        lasti           U       co_positions(), tb.tb_lasti // 2, None"
  - "django/views/decorators/cache.py:41:27          viewfunc    U       def _cache_controller(viewfunc):"
  - "django/views/decorators/cache.py:42:32          viewfunc    U       iscoroutinefunction(viewfunc):"
  - "django/views/decorators/cache.py:46:34          viewfunc    U       response = await viewfunc(request, *args, **kw"
  - "django/views/decorators/cache.py:54:28          viewfunc    U       response = viewfunc(request, *args, **kw"
  - "django/views/decorators/cache.py:58:22          viewfunc    U       return wraps(viewfunc)(_view_wrapper)"
  - "django/views/decorators/clickjacking.py:6:5         xframe      U       def xframe_options_deny(view_func"
  - "django/views/decorators/clickjacking.py:12:6        xframe      U       @xframe_options_deny"
  - "django/views/decorators/clickjacking.py:36:5        xframe      U       def xframe_options_sameorigin(view"
  - "django/views/decorators/clickjacking.py:42:6        xframe      U       @xframe_options_sameorigin"
  - "django/views/decorators/clickjacking.py:66:5        xframe      U       def xframe_options_exempt(view"
  - "django/views/decorators/debug.py:59:62          firstlineno     U       wrapped_func.__code__.co_firstlineno"
  - "django/views/generic/base.py:3:47           markcoroutinefunction       U       iscoroutinefunction, markcoroutinefunction"
  - "django/views/generic/base.py:15:37          classonlymethod             U       utils.decorators import classonlymethod"
  - "django/views/generic/base.py:80:6           classonlymethod             U       @classonlymethod"
  - "django/views/generic/base.py:121:13         markcoroutinefunction       U       markcoroutinefunction(view)"
  - "django/views/i18n.py:49:43          REFERER     U       request.META.get(\"HTTP_REFERER\")"
  - "django/views/i18n.py:107:54         djangojs    U       JavaScript messages go to the djangojs domain. This"
  - "django/views/i18n.py:111:15         djangojs    U       domain = \"djangojs\""
  - "django/views/static.py:53:5         statobj     U       statobj = fullpath.stat()"
  - "django/views/static.py:55:53        statobj     U       IF_MODIFIED_SINCE\"), statobj.st_mtime"
  - "django/views/static.py:61:51        statobj     U       Modified\"] = http_date(statobj.st_mtime)"
  - "docs/_ext/djangodocs.py:11:15       statemachine        U       from docutils.statemachine import ViewList"
  - "docs/_ext/djangodocs.py:16:32       Cmdoption           U       sphinx.domains.std import Cmdoption"
  - "docs/_ext/djangodocs.py:30:9        rolename            U       rolename=\"setting\","
  - "docs/_ext/djangodocs.py:35:9        rolename            U       rolename=\"ttag\","
  - "docs/_ext/djangodocs.py:35:19       ttag                U       rolename=\"ttag\","
  - "docs/_ext/djangodocs.py:40:9        rolename            U       rolename=\"tfilter\","
  - "docs/_ext/djangodocs.py:40:19       tfilter             U       rolename=\"tfilter\","
  - "docs/_ext/djangodocs.py:44:24       fieldlookup         U       directivename=\"fieldlookup\","
  - "docs/_ext/djangodocs.py:45:9        rolename            U       rolename=\"lookup\","
  - "docs/_ext/djangodocs.py:50:9        rolename            U       rolename=\"djadmin\","
  - "docs/_ext/djangodocs.py:50:19       djadmin             U       rolename=\"djadmin\","
  - "docs/_ext/djangodocs.py:54:46       Cmdoption           U       django-admin-option\", Cmdoption)"
  - "docs/_ext/djangodocs.py:59:25       djangohtml          U       app.set_translator(\"djangohtml\", DjangoHTMLTranslator"
  - "docs/_ext/djangodocs.py:93:25       versionmodified     U       node = addnodes.versionmodified()"
  - "docs/_ext/djangodocs.py:123:31      starttag            U       self.body.append(self.starttag(node, \"table\", CLASS"
  - "docs/_ext/djangodocs.py:130:20      parameterlist       U       def visit_desc_parameterlist(self, node):"
  - "docs/_ext/djangodocs.py:150:21      parameterlist       U       def depart_desc_parameterlist(self, node):"
  - "docs/_ext/djangodocs.py:167:15      versionmodified     U       def visit_versionmodified(self, node):"
  - "docs/_ext/djangodocs.py:168:31      starttag            U       self.body.append(self.starttag(node, \"div\", CLASS=node"
  - "docs/_ext/djangodocs.py:174:16      versionmodified     U       def depart_versionmodified(self, node):"
  - "docs/_ext/djangodocs.py:186:39      signode             U       admin_node(env, sig, signode):"
  - "docs/_ext/djangodocs.py:190:5       signode             U       signode += addnodes.desc_name"
  - "docs/_ext/djangodocs.py:199:13      djangohtml          U       name = \"djangohtml\""
  - "docs/_ext/djangodocs.py:204:26      domaindata          U       xrefs = self.env.domaindata[\"std\"][\"objects\"]"
  - "docs/_ext/djangodocs.py:206:14      ttags               U       \"ttags\": ["
  - "docs/_ext/djangodocs.py:211:14      tfilters            U       \"tfilters\": ["
  - "docs/_ext/djangodocs.py:217:9       outfilename         U       outfilename = os.path.join(self"
  - "docs/_ext/djangodocs.py:218:19      outfilename         U       with open(outfilename, \"w\") as fp:"
  - "docs/_ext/djangodocs.py:232:24      litblk              U       def __init__(self, litblk_obj):"
  - "docs/_ext/djangodocs.py:233:24      litblk              U       self.wrapped = litblk_obj"
  - "docs/_ext/djangodocs.py:253:31      djangohtml          U       self.builder.name in (\"djangohtml\", \"json\") and node["
  - "docs/_ext/djangodocs.py:283:58      docname             U       self.builder.current_docname, node.line))"
  - "docs/_ext/djangodocs.py:286:24      doscon              U       win_text, \"doscon\", warn=warner, linenos"
  - "docs/_ext/djangodocs.py:304:12      doscon              U       # The 'doscon' Pygments formatter"
  - "docs/_ext/djangodocs.py:354:13      bchanged            U       bchanged = False"
  - "docs/_ext/djangodocs.py:357:17      modline             U       modline = cmdline_to_win(line"
  - "docs/_ext/djangodocs.py:358:20      modline             U       if modline is None:"
  - "docs/_ext/djangodocs.py:361:52      modline             U       append(self.WIN_PROMPT + modline)"
  - "docs/_ext/djangodocs.py:362:21      bchanged            U       bchanged = True"
  - "docs/_ext/djangodocs.py:363:16      bchanged            U       if bchanged:"
  - "docs/_ext/djangodocs.py:371:33      djangohtml          U       Only do work when the djangohtml HTML Sphinx builder"
  - "docs/_ext/djangodocs.py:373:42      djangohtml          U       builder.name not in (\"djangohtml\", \"json\"):"
  - "docs/_ext/djangodocs.py:376:42      serialno            U       uid\"] = str(env.new_serialno(\"console\"))"
  - "docs/_ext/djangodocs.py:384:64      rawsource           U       = super().run()[0].rawsource"
  - "docs/_ext/djangodocs.py:391:33      pagename            U       page_context_hook(app, pagename, templatename, context"
  - "docs/_ext/djangodocs.py:391:43      templatename        U       hook(app, pagename, templatename, context, doctree):"
  - "docs/_ext/djangodocs.py:391:66      doctree             U       templatename, context, doctree):"
  - "docs/_ext/djangodocs.py:397:9       doctree             U       doctree, \"_console_directive"
  - "docs/_ext/github_links.py:35:22         asname      U       if alias.asname:"
  - "docs/_ext/github_links.py:88:43         maxsplit    U       fullname.split(\".\", maxsplit=1)[0]"
  - "docs/_ext/github_links.py:103:37        maxsplit    U       module.rsplit(\".\", maxsplit=1)[0]"
  - "docs/_ext/github_links.py:118:57        maxsplit    U       fullname.rsplit(\".\", maxsplit=1)"
  - "docs/conf.py:17:15          doctree                 U       # pickle.dump(doctree, f, pickle.HIGHEST_PROTOCOL"
  - "docs/conf.py:23:5           setrecursionlimit       U       sys.setrecursionlimit(2000)"
  - "docs/conf.py:33:71          directoy                U       import it after the _ext directoy"
  - "docs/conf.py:45:6           djangodocs              U       \"djangodocs\","
  - "docs/conf.py:46:17          extlinks                U       \"sphinx.ext.extlinks\","
  - "docs/conf.py:47:17          intersphinx             U       \"sphinx.ext.intersphinx\","
  - "docs/conf.py:48:17          autosectionlabel        U       \"sphinx.ext.autosectionlabel\","
  - "docs/conf.py:52:3           Autosection             U       # AutosectionLabel settings."
  - "docs/conf.py:55:1           autosectionlabel        U       autosectionlabel_prefix_document = True"
  - "docs/conf.py:56:1           autosectionlabel        U       autosectionlabel_maxdepth = 2"
  - "docs/conf.py:58:3           Linkcheck               U       # Linkcheck settings."
  - "docs/conf.py:59:1           linkcheck               U       linkcheck_ignore = ["
  - "docs/conf.py:83:24          sphinxcontrib           U       extensions.append(\"sphinxcontrib.spelling\")"
  - "docs/conf.py:89:41          wordlist                U       filename = \"spelling_wordlist\""
  - "docs/conf.py:102:12         toctree                 U       # The root toctree document."
  - "docs/conf.py:138:1          extlinks                U       extlinks = {"
  - "docs/conf.py:175:12         sectionauthor           U       # If true, sectionauthor and moduleauthor directives"
  - "docs/conf.py:175:30         moduleauthor            U       true, sectionauthor and moduleauthor directives will be shown"
  - "docs/conf.py:180:19         trac                    U       pygments_style = \"trac\""
  - "docs/conf.py:184:1          intersphinx             U       intersphinx_mapping = {"
  - "docs/conf.py:191:1          intersphinx             U       intersphinx_cache_limit = 90 #"
  - "docs/conf.py:200:15         djangodocs              U       html_theme = \"djangodocs\""
  - "docs/conf.py:255:13         sourcelink              U       # html_show_sourcelink = True"
  - "docs/conf.py:266:12         opensearch              U       # html_use_opensearch = ''"
  - "docs/conf.py:272:1          htmlhelp                U       htmlhelp_basename = \"Djangodoc"
  - "docs/conf.py:272:22         Djangodoc               U       htmlhelp_basename = \"Djangodoc\""
  - "docs/conf.py:274:1          modindex                U       modindex_common_prefix = [\"django"
  - "docs/conf.py:287:17         xelatex                 U       latex_engine = \"xelatex\""
  - "docs/conf.py:288:11         xindy                   U       latex_use_xindy = False"
  - "docs/conf.py:291:6          fontpkg                 U       \"fontpkg\": r\"\"\""
  - "docs/conf.py:292:10         setmainfont             U       \\setmainfont{Symbola}"
  - "docs/conf.py:292:22         Symbola                 U       \\setmainfont{Symbola}"
  - "docs/conf.py:295:10         usepackage              U       \\usepackage[UTF8]{ctex}"
  - "docs/conf.py:295:27         ctex                    U       \\usepackage[UTF8]{ctex}"
  - "docs/conf.py:300:10         usepackage              U       \\usepackage{newunicodechar}"
  - "docs/conf.py:301:29         ensuremath              U       \\newunicodechar{π}{\\ensuremath{\\pi}}"
  - "docs/conf.py:302:29         ensuremath              U       \\newunicodechar{≤}{\\ensuremath{\\le}}"
  - "docs/conf.py:303:29         ensuremath              U       \\newunicodechar{≥}{\\ensuremath{\\ge}}"
  - "docs/conf.py:304:29         ensuremath              U       \\newunicodechar{♥}{\\ensuremath{\\heartsuit}}"
  - "docs/conf.py:304:41         heartsuit               U       ewunicodechar{♥}{\\ensuremath{\\heartsuit}}"
  - "docs/conf.py:305:29         ensuremath              U       \\newunicodechar{…}{\\ensuremath{\\ldots}}"
  - "docs/conf.py:310:67         howto                   U       author, document class [howto/manual])."
  - "docs/conf.py:331:14         pagerefs                U       # latex_show_pagerefs = False"
  - "docs/conf.py:360:19         startdocname            U       # List of tuples (startdocname, targetname, title,"
  - "docs/conf.py:360:33         targetname              U       tuples (startdocname, targetname, title, author, dir"
  - "docs/conf.py:361:26         toctree                 U       description, category, toctree_only)"
  - "docs/conf.py:391:15         djangodocs              U       epub_theme = \"djangodocs-epub\""
  - "docs/conf.py:425:8          tocdepth                U       # epub_tocdepth = 3"
  - "docs/conf.py:428:8          tocdup                  U       # epub_tocdup = True"
  - "docs/conf.py:430:33         includehidden           U       between 'default' and 'includehidden'."
  - "docs/conf.py:431:8          tocscope                U       # epub_tocscope = 'default'"
  - "scripts/manage_translations.py:13:36        transifex       U       fetch translations from transifex.com"
  - "scripts/manage_translations.py:45:55        transifexrc     U       otherwise read from the ~/.transifexrc file."
  - "scripts/manage_translations.py:46:28        TRANSIFEX       U       api_token = os.getenv(\"TRANSIFEX_API_TOKEN\")"
  - "scripts/manage_translations.py:49:44        transifexrc     U       path.expanduser(\"~/.transifexrc\"))"
  - "scripts/manage_translations.py:52:42        TRANSIFEX       U       \"Please define the TRANSIFEX_API_TOKEN env var.\""
  - "scripts/manage_translations.py:138:19       Transifex       U       \"\"\"Return the Transifex resource name\"\"\""
  - "scripts/manage_translations.py:177:57       djangojs        U       locale=[\"en\"], domain=\"djangojs\")"
  - "scripts/manage_translations.py:222:29       Transifex       U       Fetch translations from Transifex, wrap long lines, generate"
  - "scripts/manage_translations.py:234:24       perc            U       \"--minimum-perc=5\","
  - "scripts/manage_translations.py:236:11       Transifex       U       # Transifex pull"
  - "scripts/manage_translations.py:249:11       msgcat          U       # msgcat to wrap lines and msgfmt"
  - "scripts/manage_translations.py:262:19       msgcat          U       run([\"msgcat\", \"--no-location\","
  - "scripts/manage_translations.py:275:29       Transifex       U       Fetch translations from Transifex that were modified since"
  - "scripts/manage_translations.py:327:39       Transifex       U       fetch translations from Transifex, wrap long lines, generate"
  - "tests/absolute_url_overrides/tests.py:32:41         testb       U       absolute_url_overrides.testb\": lambda o: \"/overridden"
  - "tests/absolute_url_overrides/tests.py:47:41         testc       U       absolute_url_overrides.testc\": lambda o: \"/test-c"
  - "tests/admin_changelist/admin.py:160:49      swallowonetoone     U       , \"load\", \"speed\", \"swallowonetoone\")"
  - "tests/admin_changelist/tests.py:367:45      dunder              U       checkbox_for_model_with_dunder_html(self):"
  - "tests/admin_changelist/tests.py:628:38      chordsband          U       self.factory.get(\"/chordsband/\", data={\"members\":"
  - "tests/admin_changelist/tests.py:724:51      Halvorson           U       objects.create(name=\"Mary Halvorson\")"
  - "tests/admin_changelist/tests.py:725:59      Finlayson           U       create(name=\"Jonathan Finlayson\")"
  - "tests/admin_changelist/tests.py:759:15      Finlayson           U       (\"Finlayson Duo Tiny\", 1),"
  - "tests/admin_changelist/tests.py:760:15      Finlayson           U       (\"Finlayson\", 1),"
  - "tests/admin_changelist/tests.py:761:15      Finlayson           U       (\"Finlayson Hype\", 0),"
  - "tests/admin_changelist/tests.py:762:24      Finlayson           U       (\"Jonathan Finlayson Duo\", 1),"
  - "tests/admin_changelist/tests.py:1096:57     swallowonetoone     U       response, '<td class=\"field-swallowonetoone\">-</td>')"
  - "tests/admin_changelist/tests.py:1098:41     swallowonetoone     U       response, '<td class=\"field-swallowonetoone\">%s</td>' % swallow"
  - "tests/admin_changelist/tests.py:1101:14     multiuser           U       def test_multiuser_edit(self):"
  - "tests/admin_changelist/tests.py:1217:32     INVALD              U       data[\"form-0-uuid\"] = \"INVALD_PRIMARY_KEY\""
  - "tests/admin_changelist/tests.py:1305:23     unorderedobject     U       \"/unorderedobject/?p=%s\" % page, superuser"
  - "tests/admin_changelist/tests.py:1365:23     orderedobject       U       \"/orderedobject/?p=%s\" % page, superuser"
  - "tests/admin_changelist/tests.py:1449:32     attnames            U       # Composite unique attnames."
  - "tests/admin_changelist/tests.py:1667:19     describedby         U       'aria-describedby=\"searchbar_helptext"
  - "tests/admin_changelist/tests.py:1710:46     parentless          U       objects.create(name=\"I am parentless\", parent=None)"
  - "tests/admin_changelist/tests.py:1775:31     jondoe              U       user = User(username=\"jondoe\", password=\"secret\""
  - "tests/admin_changelist/tests.py:1786:53     jondoe              U       render(context), \"Added “jondoe”.\")"
  - "tests/admin_changelist/tests.py:1808:70     foruser             U       log 10 as admin_log foruser user %}\")"
  - "tests/admin_changelist/tests.py:2120:58     proxyuser           U       admin:admin_changelist_proxyuser_changelist\")"
  - "tests/admin_checks/tests.py:275:45      modeladmins     U       checks_relying_on_other_modeladmins(self):"
  - "tests/admin_checks/tests.py:398:21      modelforms      U       def test_custom_modelforms_with_fields_fieldsets"
  - "tests/admin_checks/tests.py:435:14      nonfirst        U       def test_nonfirst_fieldset(self):"
  - "tests/admin_checks/tests.py:965:20      sublists        U       def test_check_sublists_for_duplicates(self"
  - "tests/admin_checks/tests.py:979:29      sublists        U       test_check_fieldset_sublists_for_duplicates(self"
  - "tests/admin_checks/tests.py:1002:29     authorsbooks    U       list_filter = [\"authorsbooks__featured\"]"
  - "tests/admin_docs/test_utils.py:101:43       firstline       U       = parse_docstring(\"firstline\\n\\n second line\""
  - "tests/admin_docs/test_utils.py:103:56       firstline       U       rst(title, \"\"), \"<p>firstline</p>\\n\")"
  - "tests/admin_docs/test_views.py:340:18       docstrings      U       # method docstrings"
  - "tests/admin_filters/tests.py:26:15          dictlist                        U       def select_by(dictlist, key, value):"
  - "tests/admin_filters/tests.py:27:24          dictlist                        U       return [x for x in dictlist if x[key] == value]"
  - "tests/admin_filters/tests.py:332:11         improvedbook                    U       (\"improvedbook\", EmptyFieldListFilter"
  - "tests/admin_filters/tests.py:373:13         djangonaut                      U       cls.djangonaut_book = Book.objects"
  - "tests/admin_filters/tests.py:374:20         Djangonaut                      U       title=\"Djangonaut: an art of living\","
  - "tests/admin_filters/tests.py:417:14         choicesfieldlistfilter          U       def test_choicesfieldlistfilter_has_none_choice(self"
  - "tests/admin_filters/tests.py:435:14         datefieldlistfilter             U       def test_datefieldlistfilter(self):"
  - "tests/admin_filters/tests.py:451:66         djangonaut                      U       self.django_book, self.djangonaut_book])"
  - "tests/admin_filters/tests.py:486:59         djangonaut                      U       self.django_book, self.djangonaut_book],"
  - "tests/admin_filters/tests.py:489:70         djangonaut                      U       self.django_book, self.djangonaut_book])"
  - "tests/admin_filters/tests.py:521:59         djangonaut                      U       self.django_book, self.djangonaut_book],"
  - "tests/admin_filters/tests.py:611:14         datefieldlistfilter             U       def test_datefieldlistfilter_with_time_zone_support"
  - "tests/admin_filters/tests.py:613:19         datefieldlistfilter             U       self.test_datefieldlistfilter()"
  - "tests/admin_filters/tests.py:615:14         allvaluesfieldlistfilter        U       def test_allvaluesfieldlistfilter(self):"
  - "tests/admin_filters/tests.py:644:14         allvaluesfieldlistfilter        U       def test_allvaluesfieldlistfilter_custom_qs(self):"
  - "tests/admin_filters/tests.py:900:40         Djangonaut                      U       djangonaut_book.pk, \"Djangonaut: an art of living\")"
  - "tests/admin_filters/tests.py:906:14         relatedonlyfieldlistfilter      U       def test_relatedonlyfieldlistfilter_foreignkey(self):"
  - "tests/admin_filters/tests.py:918:14         relatedonlyfieldlistfilter      U       def test_relatedonlyfieldlistfilter_foreignkey_reverse_relationsh"
  - "tests/admin_filters/tests.py:935:44         Djangonaut                      U       djangonaut_book.pk, \"Djangonaut: an art of living\")"
  - "tests/admin_filters/tests.py:941:14         relatedonlyfieldlistfilter      U       def test_relatedonlyfieldlistfilter_manytomany_reverse_relationsh"
  - "tests/admin_filters/tests.py:955:14         relatedonlyfieldlistfilter      U       def test_relatedonlyfieldlistfilter_foreignkey_ordering"
  - "tests/admin_filters/tests.py:981:14         relatedonlyfieldlistfilter      U       def test_relatedonlyfieldlistfilter_foreignkey_default_ordering"
  - "tests/admin_filters/tests.py:1004:41        underscorelookup                U       relatedonlyfieldlistfilter_underscorelookup_foreignkey(self):"
  - "tests/admin_filters/tests.py:1037:14        listfilter                      U       def test_listfilter_genericrelation(self"
  - "tests/admin_filters/tests.py:1171:14        fieldlistfilter                 U       def test_fieldlistfilter_underscorelookup_tuple"
  - "tests/admin_filters/tests.py:1171:30        underscorelookup                U       test_fieldlistfilter_underscorelookup_tuple(self):"
  - "tests/admin_filters/tests.py:1173:18        fieldpath                       U       Ensure ('fieldpath', ClassName ) lookups"
  - "tests/admin_filters/tests.py:1174:14        fieldpath                       U       when fieldpath contains double underscore"
  - "tests/admin_filters/tests.py:1189:14        fieldlistfilter                 U       def test_fieldlistfilter_invalid_lookup_parameters"
  - "tests/admin_filters/tests.py:1199:14        fieldlistfilter                 U       def test_fieldlistfilter_multiple_invalid_lookup"
  - "tests/admin_filters/tests.py:1310:14        listfilter                      U       def test_listfilter_without_title(self)"
  - "tests/admin_filters/tests.py:1869:61        EMPT                            U       objects.create(code=\"EMPT\", description=\"\")"
  - "tests/admin_filters/tests.py:1934:19        improvedbook                    U       {\"improvedbook__isempty\": \"1\"},"
  - "tests/admin_filters/tests.py:1937:28        improvedbook                    U       (book_admin, {\"improvedbook__isempty\": \"0\"}, [self"
  - "tests/admin_inlines/admin.py:9:9            Famiglia        U       CapoFamiglia,"
  - "tests/admin_inlines/admin.py:15:5           Consigliere     U       Consigliere,"
  - "tests/admin_inlines/admin.py:56:5           Sotto           U       SottoCapo,"
  - "tests/admin_inlines/admin.py:319:7          Consigliere     U       class ConsigliereInline(admin.TabularInline"
  - "tests/admin_inlines/admin.py:320:13         Consigliere     U       model = Consigliere"
  - "tests/admin_inlines/admin.py:323:7          Sotto           U       class SottoCapoInline(admin.TabularInline"
  - "tests/admin_inlines/admin.py:324:13         Sotto           U       model = SottoCapo"
  - "tests/admin_inlines/admin.py:401:7          Fashonista      U       class FashonistaStackedInline(admin.StackedInl"
  - "tests/admin_inlines/admin.py:513:9          Famiglia        U       CapoFamiglia, inlines=[ConsigliereInline"
  - "tests/admin_inlines/admin.py:513:28         Consigliere     U       CapoFamiglia, inlines=[ConsigliereInline, SottoCapoInline"
  - "tests/admin_inlines/admin.py:513:47         Sotto           U       [ConsigliereInline, SottoCapoInline, ReadOnlyInlineInli"
  - "tests/admin_inlines/admin.py:524:53         Fashonista      U       AuthorTabularInline, FashonistaStackedInline])"
  - "tests/admin_inlines/models.py:261:11        Famiglia        U       class CapoFamiglia(models.Model):"
  - "tests/admin_inlines/models.py:265:7         Consigliere     U       class Consigliere(models.Model):"
  - "tests/admin_inlines/models.py:266:70        Consigliere     U       text=\"Help text for Consigliere\")"
  - "tests/admin_inlines/models.py:267:10        famiglia        U       capo_famiglia = models.ForeignKey"
  - "tests/admin_inlines/models.py:267:43        Famiglia        U       models.ForeignKey(CapoFamiglia, models.CASCADE, related"
  - "tests/admin_inlines/models.py:270:7         Sotto           U       class SottoCapo(models.Model):"
  - "tests/admin_inlines/models.py:272:10        famiglia        U       capo_famiglia = models.ForeignKey"
  - "tests/admin_inlines/models.py:272:43        Famiglia        U       models.ForeignKey(CapoFamiglia, models.CASCADE, related"
  - "tests/admin_inlines/models.py:277:10        famiglia        U       capo_famiglia = models.ForeignKey"
  - "tests/admin_inlines/models.py:277:43        Famiglia        U       models.ForeignKey(CapoFamiglia, models.CASCADE)"
  - "tests/admin_inlines/tests.py:53:34          inlinechangelink            U       CHANGELINK_HTML = 'class=\"inlinechangelink\">Change</a>'"
  - "tests/admin_inlines/tests.py:86:28          someparentmodel             U       codename=\"view_someparentmodel\","
  - "tests/admin_inlines/tests.py:91:28          somechildmodel              U       codename=\"view_somechildmodel\","
  - "tests/admin_inlines/tests.py:124:42         uuidparent                  U       admin:admin_inlines_uuidparent_change\", args=(parent"
  - "tests/admin_inlines/tests.py:128:42         uuidchild                   U       type=\"hidden\" name=\"uuidchild_set-0-id\" value=\"{child"
  - "tests/admin_inlines/tests.py:129:21         uuidchild                   U       'id=\"id_uuidchild_set-0-id\">',"
  - "tests/admin_inlines/tests.py:190:65         titlecollection             U       admin:admin_inlines_titlecollection_add\"))"
  - "tests/admin_inlines/tests.py:196:65         outfititem                  U       admin:admin_inlines_outfititem_add\"))"
  - "tests/admin_inlines/tests.py:210:65         someparentmodel             U       admin:admin_inlines_someparentmodel_add\"))"
  - "tests/admin_inlines/tests.py:231:42         titlecollection             U       admin:admin_inlines_titlecollection_add\"), data"
  - "tests/admin_inlines/tests.py:300:65         capofamiglia                U       admin:admin_inlines_capofamiglia_add\"))"
  - "tests/admin_inlines/tests.py:315:65         someparentmodel             U       admin:admin_inlines_someparentmodel_add\"))"
  - "tests/admin_inlines/tests.py:331:42         someparentmodel             U       admin:admin_inlines_someparentmodel_change\", args=(parent"
  - "tests/admin_inlines/tests.py:335:28         somechildmodel              U       '<input id=\"id_somechildmodel_set-1-position\" '"
  - "tests/admin_inlines/tests.py:336:20         somechildmodel              U       'name=\"somechildmodel_set-1-position\" type"
  - "tests/admin_inlines/tests.py:347:62         someparentmodel             U       admin:admin_inlines_someparentmodel_change\","
  - "tests/admin_inlines/tests.py:447:14         somechildmodel              U       \"somechildmodel_set-TOTAL_FORMS\": 1"
  - "tests/admin_inlines/tests.py:448:14         somechildmodel              U       \"somechildmodel_set-INITIAL_FORMS\":"
  - "tests/admin_inlines/tests.py:482:65         capofamiglia                U       admin:admin_inlines_capofamiglia_add\"))"
  - "tests/admin_inlines/tests.py:488:51         famiglia                    U       hidden\" name=\"-1-0-capo_famiglia\" '"
  - "tests/admin_inlines/tests.py:489:31         famiglia                    U       'id=\"id_-1-0-capo_famiglia\">',"
  - "tests/admin_inlines/tests.py:495:35         describedby                 U       maxlength=\"100\" aria-describedby=\"id_-1-0-name_helptext"
  - "tests/admin_inlines/tests.py:503:51         famiglia                    U       hidden\" name=\"-2-0-capo_famiglia\" '"
  - "tests/admin_inlines/tests.py:504:31         famiglia                    U       'id=\"id_-2-0-capo_famiglia\">',"
  - "tests/admin_inlines/tests.py:540:42         parentmodelwithcustompk     U       admin:admin_inlines_parentmodelwithcustompk_change\", args=(\"foo"
  - "tests/admin_inlines/tests.py:658:21         nonauto                     U       def test_inline_nonauto_noneditable_pk(self"
  - "tests/admin_inlines/tests.py:658:29         noneditable                 U       test_inline_nonauto_noneditable_pk(self):"
  - "tests/admin_inlines/tests.py:662:28         nonautopkbook               U       '<input id=\"id_nonautopkbook_set-0-rand_pk\" '"
  - "tests/admin_inlines/tests.py:663:20         nonautopkbook               U       'name=\"nonautopkbook_set-0-rand_pk\" type"
  - "tests/admin_inlines/tests.py:668:28         nonautopkbook               U       '<input id=\"id_nonautopkbook_set-2-0-rand_pk\" '"
  - "tests/admin_inlines/tests.py:669:20         nonautopkbook               U       'name=\"nonautopkbook_set-2-0-rand_pk\" type"
  - "tests/admin_inlines/tests.py:673:21         nonauto                     U       def test_inline_nonauto_noneditable_inherited"
  - "tests/admin_inlines/tests.py:673:29         noneditable                 U       test_inline_nonauto_noneditable_inherited_pk(self):"
  - "tests/admin_inlines/tests.py:677:28         nonautopkbookchild          U       '<input id=\"id_nonautopkbookchild_set-0-nonautopkbook"
  - "tests/admin_inlines/tests.py:677:53         nonautopkbook               U       nonautopkbookchild_set-0-nonautopkbook_ptr\" '"
  - "tests/admin_inlines/tests.py:678:20         nonautopkbookchild          U       'name=\"nonautopkbookchild_set-0-nonautopkbook"
  - "tests/admin_inlines/tests.py:683:28         nonautopkbookchild          U       '<input id=\"id_nonautopkbookchild_set-2-nonautopkbook"
  - "tests/admin_inlines/tests.py:684:20         nonautopkbookchild          U       'name=\"nonautopkbookchild_set-2-nonautopkbook"
  - "tests/admin_inlines/tests.py:692:50         editablepkbook              U       vIntegerField\" id=\"id_editablepkbook_set-0-manual_pk\" '"
  - "tests/admin_inlines/tests.py:693:20         editablepkbook              U       'name=\"editablepkbook_set-0-manual_pk\" type"
  - "tests/admin_inlines/tests.py:699:50         editablepkbook              U       vIntegerField\" id=\"id_editablepkbook_set-2-0-manual_pk\""
  - "tests/admin_inlines/tests.py:700:20         editablepkbook              U       'name=\"editablepkbook_set-2-0-manual_pk\" type"
  - "tests/admin_inlines/tests.py:747:42         parentmodelwithcustompk     U       admin:admin_inlines_parentmodelwithcustompk_change\", args=(\"foo"
  - "tests/admin_inlines/tests.py:766:14         noneditable                 U       def test_noneditable_inline_has_field_inputs"
  - "tests/admin_inlines/tests.py:769:42         novelreadonlychapter        U       admin:admin_inlines_novelreadonlychapter_add\")"
  - "tests/admin_inlines/tests.py:784:25         stackeds                    U       \"Inner4 stackeds</h2>\""
  - "tests/admin_inlines/tests.py:792:25         tabulars                    U       \"Inner4 tabulars</h2>\""
  - "tests/admin_inlines/tests.py:817:34         showinlineparent            U       admin:admin_inlines_showinlineparent_change\","
  - "tests/admin_inlines/tests.py:891:9          lotr                        U       lotr = Novel.objects.create"
  - "tests/admin_inlines/tests.py:892:48         lotr                        U       objects.create(novel=lotr, name=\"Many Meetings"
  - "tests/admin_inlines/tests.py:893:68         yadda                       U       chapter=chapter, note=\"yadda yadda\")"
  - "tests/admin_inlines/tests.py:893:74         yadda                       U       chapter, note=\"yadda yadda\")"
  - "tests/admin_inlines/tests.py:895:72         lotr                        U       novel_change\", args=(lotr.id,))"
  - "tests/admin_inlines/tests.py:898:21         lotr                        U       \"name\": lotr.name,"
  - "tests/admin_inlines/tests.py:905:36         lotr                        U       chapter_set-0-novel\": lotr.id,"
  - "tests/admin_inlines/tests.py:1456:58        closelink                   U       inlines/poll/\" class=\"closelink\">Close</a>',"
  - "tests/admin_inlines/tests.py:1495:41        childs                      U       name = \"Non-verbose childs\""
  - "tests/admin_inlines/tests.py:1499:29        Childs                      U       verbose_name = \"Childs with verbose name\""
  - "tests/admin_inlines/tests.py:1503:29        Childs                      U       verbose_name = \"Childs with verbose name plural"
  - "tests/admin_inlines/tests.py:1507:29        Childs                      U       verbose_name = \"Childs with both verbose names"
  - "tests/admin_inlines/tests.py:1527:30        childss                     U       \"Non-verbose childss</h2>\""
  - "tests/admin_inlines/tests.py:1541:26        verbosenameprofile          U       '<h2 id=\"verbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1542:18        Childs                      U       \"Childs with verbose names<"
  - "tests/admin_inlines/tests.py:1546:52        Childs                      U       response, \"Add another Childs with verbose name\")"
  - "tests/admin_inlines/tests.py:1549:22        verbosenameprofile          U       '<h2 id=\"verbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1550:38        onlys                       U       Model with verbose name onlys</h2>\","
  - "tests/admin_inlines/tests.py:1558:26        verbosenamepluralprofile    U       '<h2 id=\"verbosenamepluralprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1566:22        verbosenamepluralprofile    U       '<h2 id=\"verbosenamepluralprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1574:26        bothverbosenameprofile      U       '<h2 id=\"bothverbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1575:43        namess                      U       Childs with both verbose namess</h2>\""
  - "tests/admin_inlines/tests.py:1582:22        bothverbosenameprofile      U       '<h2 id=\"bothverbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1591:48        childs                      U       plural = \"Non-verbose childs\""
  - "tests/admin_inlines/tests.py:1622:30        childs                      U       \"Non-verbose childs</h2>\""
  - "tests/admin_inlines/tests.py:1636:26        verbosenameprofile          U       '<h2 id=\"verbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1644:22        verbosenameprofile          U       '<h2 id=\"verbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1645:38        onlys                       U       Model with verbose name onlys</h2>\","
  - "tests/admin_inlines/tests.py:1652:26        verbosenamepluralprofile    U       '<h2 id=\"verbosenamepluralprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1660:22        verbosenamepluralprofile    U       '<h2 id=\"verbosenamepluralprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1668:26        bothverbosenameprofile      U       '<h2 id=\"bothverbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1676:22        bothverbosenameprofile      U       '<h2 id=\"bothverbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1684:41        childs                      U       name = \"Non-verbose childs - name\""
  - "tests/admin_inlines/tests.py:1685:48        childs                      U       plural = \"Non-verbose childs - plural name\""
  - "tests/admin_inlines/tests.py:1734:26        verbosenameprofile          U       '<h2 id=\"verbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1743:38        onlys                       U       Model with verbose name onlys</h2>\","
  - "tests/admin_inlines/tests.py:1750:26        verbosenamepluralprofile    U       '<h2 id=\"verbosenamepluralprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1768:22        bothverbosenameprofile      U       '<h2 id=\"bothverbosenameprofile_set-heading\" class="
  - "tests/admin_inlines/tests.py:1809:28        labelledby                  U       f'aria-labelledby=\"{heading_id}\">',"
  - "tests/admin_inlines/tests.py:1853:36        labelledby                  U       f'aria-labelledby=\"{heading_id}\">',"
  - "tests/admin_inlines/tests.py:1885:18        stackeds                    U       def test_add_stackeds(self):"
  - "tests/admin_inlines/tests.py:1907:21        stackeds                    U       def test_delete_stackeds(self):"
  - "tests/admin_inlines/tests.py:2419:34        courseproxy                 U       admin:admin_inlines_courseproxy_add\","
  - "tests/admin_inlines/tests.py:2420:34        courseproxy                 U       admin:admin_inlines_courseproxy1_add\","
  - "tests/admin_inlines/tests.py:2421:34        courseproxy                 U       admin:admin_inlines_courseproxy2_add\","
  - "tests/admin_ordering/tests.py:47:28         Aerosmith       U       Band(name=\"Aerosmith\", bio=\"\", rank=3),"
  - "tests/admin_ordering/tests.py:48:28         Radiohead       U       Band(name=\"Radiohead\", bio=\"\", rank=1),"
  - "tests/admin_ordering/tests.py:49:32         Halen           U       Band(name=\"Van Halen\", bio=\"\", rank=2),"
  - "tests/admin_ordering/tests.py:60:28         Aerosmith       U       self.assertEqual([\"Aerosmith\", \"Radiohead\", \"Van"
  - "tests/admin_ordering/tests.py:60:41         Radiohead       U       assertEqual([\"Aerosmith\", \"Radiohead\", \"Van Halen\"], names"
  - "tests/admin_ordering/tests.py:60:58         Halen           U       , \"Radiohead\", \"Van Halen\"], names)"
  - "tests/admin_ordering/tests.py:73:28         Radiohead       U       self.assertEqual([\"Radiohead\", \"Van Halen\", \"Aerosmith"
  - "tests/admin_ordering/tests.py:73:45         Halen           U       ssertEqual([\"Radiohead\", \"Van Halen\", \"Aerosmith\"], names"
  - "tests/admin_ordering/tests.py:73:54         Aerosmith       U       Radiohead\", \"Van Halen\", \"Aerosmith\"], names)"
  - "tests/admin_ordering/tests.py:81:28         Aerosmith       U       self.assertEqual([\"Aerosmith\", \"Van Halen\", \"Radiohead"
  - "tests/admin_ordering/tests.py:81:45         Halen           U       ssertEqual([\"Aerosmith\", \"Van Halen\", \"Radiohead\"], names"
  - "tests/admin_ordering/tests.py:81:54         Radiohead       U       Aerosmith\", \"Van Halen\", \"Radiohead\"], names)"
  - "tests/admin_ordering/tests.py:93:28         Radiohead       U       self.assertEqual([\"Radiohead\", \"Van Halen\", \"Aerosmith"
  - "tests/admin_ordering/tests.py:93:45         Halen           U       ssertEqual([\"Radiohead\", \"Van Halen\", \"Aerosmith\"], names"
  - "tests/admin_ordering/tests.py:93:54         Aerosmith       U       Radiohead\", \"Van Halen\", \"Aerosmith\"], names)"
  - "tests/admin_scripts/broken_app/models.py:1:23           modelz      U       from django.db import modelz # NOQA"
  - "tests/admin_scripts/tests.py:58:65          sdict                   U       None, is_dir=False, sdict=None, extra=None):"
  - "tests/admin_scripts/tests.py:95:16          sdict                   U       if sdict:"
  - "tests/admin_scripts/tests.py:96:29          sdict                   U       for k, v in sdict.items():"
  - "tests/admin_scripts/tests.py:1390:44        sdict                   U       settings(\"settings.py\", sdict={\"BAD_VAR\": \"INSTALLED"
  - "tests/admin_scripts/tests.py:1397:44        sdict                   U       settings(\"settings.py\", sdict={\"BAD_VAR\": 'DATABASES"
  - "tests/admin_scripts/tests.py:1424:26        scriptz                 U       apps=[\"admin_scriptz.broken_app\"],"
  - "tests/admin_scripts/tests.py:1432:39        scriptz                 U       assertOutput(err, \"admin_scriptz\")"
  - "tests/admin_scripts/tests.py:1604:59        ASGI                    U       a production WSGI or ASGI server instead.\""
  - "tests/admin_scripts/tests.py:1622:59        ASGI                    U       a production WSGI or ASGI server instead.\""
  - "tests/admin_scripts/tests.py:1641:59        ASGI                    U       a production WSGI or ASGI server instead.\""
  - "tests/admin_scripts/tests.py:1787:56        trackback               U       support --verbosity and --trackback options.\"\"\""
  - "tests/admin_scripts/tests.py:1790:40        trackback               U       assertNotInOutput(out, \"--trackback\")"
  - "tests/admin_scripts/tests.py:1902:25        altert                  U       def test_help_short_altert(self):"
  - "tests/admin_scripts/tests.py:2156:33        Erreur                  U       raise CommandError(\"Erreur personnalisée\")"
  - "tests/admin_scripts/tests.py:2156:40        personnalisée           U       CommandError(\"Erreur personnalisée\")"
  - "tests/admin_scripts/tests.py:2360:15        deflaut                 U       \"'deflaut' (choose from 'default"
  - "tests/admin_scripts/tests.py:2382:50        deflaut                 U       arg, \"--database\", \"deflaut\", verbosity=0)"
  - "tests/admin_scripts/tests.py:2568:49        othertestproject        U       tartproject\", \"testproject\", \"othertestproject\"]"
  - "tests/admin_scripts/tests.py:2569:56        othertestproject        U       join(self.test_dir, \"othertestproject\")"
  - "tests/admin_scripts/tests.py:2633:63        tarballtestproject      U       template\", template_path, \"tarballtestproject\"]"
  - "tests/admin_scripts/tests.py:2634:56        tarballtestproject      U       join(self.test_dir, \"tarballtestproject\")"
  - "tests/admin_scripts/tests.py:2651:14        tarballtestproject      U       \"tarballtestproject\","
  - "tests/admin_scripts/tests.py:2652:14        altlocation             U       \"altlocation\","
  - "tests/admin_scripts/tests.py:2654:56        altlocation             U       join(self.test_dir, \"altlocation\")"
  - "tests/admin_scripts/tests.py:2734:14        Procfile                U       \"Procfile\","
  - "tests/admin_scripts/tests.py:2743:20        Procfile                U       for f in (\"Procfile\", \"additional_file.py"
  - "tests/admin_scripts/tests.py:2926:42        umasks                  U       only partially supports umasks and chmod.\","
  - "tests/admin_scripts/tests.py:3169:18        rnserver                U       args = [\"rnserver\", \"--settings=test_project"
  - "tests/admin_scripts/tests.py:3172:51        rnserver                U       \"Unknown command: 'rnserver'. Did you mean runserver"
  - "tests/admin_utils/test_logentry.py:84:74        Historique          U       Modification de Title et Historique.\""
  - "tests/admin_utils/test_logentry.py:96:62        Ajout               U       get_change_message(), \"Ajout.\")"
  - "tests/admin_utils/test_logentry.py:189:42       Ajout               U       Modification de Domain. Ajout de article « Added article"
  - "tests/admin_utils/test_logentry.py:332:14       recentactions       U       def test_recentactions_without_content_type"
  - "tests/admin_utils/tests.py:439:74       Aother      U       ), \"something_0Aor_0Aother\")"
  - "tests/admin_views/admin.py:42:12        Referer             U       ChildOfReferer,"
  - "tests/admin_views/admin.py:76:11        Referer             U       InlineReferer,"
  - "tests/admin_views/admin.py:88:15        UUIDPK              U       ParentWithUUIDPK,"
  - "tests/admin_views/admin.py:114:16       UUIDPK              U       RelatedWithUUIDPKModel,"
  - "tests/admin_views/admin.py:140:5        Vodcast             U       Vodcast,"
  - "tests/admin_views/admin.py:436:7        Vodcast             U       class VodcastAdmin(admin.ModelAdmin"
  - "tests/admin_views/admin.py:497:11       titletranslation    U       \"=titletranslation__text\","
  - "tests/admin_views/admin.py:498:28       titletranslation    U       \"=the_recommender__titletranslation__text\","
  - "tests/admin_views/admin.py:556:29       subslug             U       prepopulated_fields = {\"subslug\": (\"subtitle\",)}"
  - "tests/admin_views/admin.py:560:22       subslug             U       return (\"subslug\",)"
  - "tests/admin_views/admin.py:1143:13      Referer             U       class InlineRefererAdmin(admin.ModelAdmin"
  - "tests/admin_views/admin.py:1213:15      Vodcast             U       site.register(Vodcast, VodcastAdmin)"
  - "tests/admin_views/admin.py:1213:24      Vodcast             U       site.register(Vodcast, VodcastAdmin)"
  - "tests/admin_views/admin.py:1256:22      Referer             U       site.register(ChildOfReferer)"
  - "tests/admin_views/admin.py:1258:21      Referer             U       site.register(InlineReferer, InlineRefererAdmin"
  - "tests/admin_views/admin.py:1261:25      UUIDPK              U       site.register(ParentWithUUIDPK)"
  - "tests/admin_views/admin.py:1263:26      UUIDPK              U       register(RelatedWithUUIDPKModel)"
  - "tests/admin_views/admin.py:1325:26      UUIDPK              U       .register(ParentWithUUIDPK)"
  - "tests/admin_views/forms.py:12:25        customform      U       if username == \"customform\":"
  - "tests/admin_views/models.py:195:30      Palin           U       \"leader__name\": \"Palin\","
  - "tests/admin_views/models.py:342:7       Vodcast         U       class Vodcast(Media):"
  - "tests/admin_views/models.py:501:5       subslug         U       subslug = models.SlugField("
  - "tests/admin_views/models.py:506:82      Žćžšđ           U       title (with Unicode ŠĐĆŽćžšđ)\""
  - "tests/admin_views/models.py:509:68      Žćžšđ           U       content (with Unicode ŠĐĆŽćžšđ)\""
  - "tests/admin_views/models.py:514:65      Žćžšđ           U       date (with Unicode ŠĐĆŽćžšđ)\","
  - "tests/admin_views/models.py:595:5       supervillain    U       supervillain = models.ForeignKey"
  - "tests/admin_views/models.py:736:24      Pography        U       (\"thai\", \"Thai Pography\"),"
  - "tests/admin_views/models.py:999:14      Referer         U       class ChildOfReferer(ParentWithFK):"
  - "tests/admin_views/models.py:1004:13     Referer         U       class InlineReferer(models.Model):"
  - "tests/admin_views/models.py:1013:5      referer         U       referer = models.ForeignKey"
  - "tests/admin_views/models.py:1013:39     Referer         U       models.ForeignKey(InlineReferer, models.CASCADE)"
  - "tests/admin_views/models.py:1023:5      rname           U       rname = models.CharField(max"
  - "tests/admin_views/models.py:1033:66     rname           U       models.CASCADE, to_field=\"rname\")"
  - "tests/admin_views/models.py:1062:17     UUIDPK          U       class ParentWithUUIDPK(models.Model):"
  - "tests/admin_views/models.py:1070:18     UUIDPK          U       class RelatedWithUUIDPKModel(models.Model):"
  - "tests/admin_views/models.py:1072:19     UUIDPK          U       ParentWithUUIDPK, on_delete=models.SET"
  - "tests/admin_views/models.py:1098:7      Héllo           U       class Héllo(models.Model):"
  - "tests/admin_views/test_actions.py:38:23         Mustermann              U       name=\"Max Mustermann\", email=\"max@example"
  - "tests/admin_views/test_actions.py:188:40        unchangeableobject      U       reverse(\"admin:admin_views_unchangeableobject_changelist\"), action"
  - "tests/admin_views/test_actions.py:312:40        oldsubscriber           U       reverse(\"admin:admin_views_oldsubscriber_changelist\")"
  - "tests/admin_views/test_actions.py:318:59        checkboxbox             U       unexpected action toggle checkboxbox in response\","
  - "tests/admin_views/test_actions.py:327:40        oldsubscriber           U       reverse(\"admin:admin_views_oldsubscriber_changelist\")"
  - "tests/admin_views/test_actions.py:443:53        Tennant                 U       objects.create(name=\"David Tennant\", age=45)"
  - "tests/admin_views/test_actions.py:447:29        Tennant                 U       {\"name\": \"David Tennant\", \"age\": \"46\", IS_POPUP"
  - "tests/admin_views/test_actions.py:461:53        Tennant                 U       objects.create(name=\"David Tennant\", age=45)"
  - "tests/admin_views/test_actions.py:503:23        Mustermann              U       name=\"Max Mustermann\", email=\"max@example"
  - "tests/admin_views/test_autocomplete_view.py:176:27      Frida       U       name=\"Frida Kahlo\", gender=2, code"
  - "tests/admin_views/test_autocomplete_view.py:176:33      Kahlo       U       name=\"Frida Kahlo\", gender=2, code=\"painter"
  - "tests/admin_views/test_autocomplete_view.py:183:64      frida       U       self.url, {\"term\": \"frida\", **opts})"
  - "tests/admin_views/test_nav_sidebar.py:7:21          Héllo       U       from .models import Héllo"
  - "tests/admin_views/test_nav_sidebar.py:22:28         Héllo       U       with_sidebar.register(Héllo)"
  - "tests/admin_views/test_nav_sidebar.py:26:16         wihout      U       path(\"test_wihout_sidebar/admin/\", site"
  - "tests/admin_views/test_nav_sidebar.py:106:54        héllo       U       sidebar:admin_views_héllo_changelist\")"
  - "tests/admin_views/test_nav_sidebar.py:111:57        héllo       U       response, '<tr class=\"model-héllo current-model\">')"
  - "tests/admin_views/test_nav_sidebar.py:114:46        héllo       U       row\" id=\"admin_views-héllo\">'"
  - "tests/admin_views/test_nav_sidebar.py:116:14        Héllos      U       \"Héllos</a></th>\","
  - "tests/admin_views/test_related_object_lookups.py:85:46          camelcaserelatedmodel       U       reverse(\"admin:admin_views_camelcaserelatedmodel_add\")"
  - "tests/admin_views/test_related_object_lookups.py:132:46         camelcaserelatedmodel       U       reverse(\"admin:admin_views_camelcaserelatedmodel_add\")"
  - "tests/admin_views/test_related_object_lookups.py:139:17         Bergeron                    U       name = \"Bergeron\""
  - "tests/admin_views/test_skip_link_to_content.py:99:42        doesnt (doesn't)    U       link_with_RTL_language_doesnt_create_horizontal_scrolling"
  - "tests/admin_views/test_skip_link_to_content.py:117:25       scrolleable         U       is_vertical_scrolleable = self.selenium.execute"
  - "tests/admin_views/test_skip_link_to_content.py:120:27       scrolleable         U       is_horizontal_scrolleable = self.selenium.execute"
  - "tests/admin_views/test_skip_link_to_content.py:123:41       scrolleable         U       assertTrue(is_vertical_scrolleable)"
  - "tests/admin_views/test_skip_link_to_content.py:124:44       scrolleable         U       assertFalse(is_horizontal_scrolleable)"
  - "tests/admin_views/tests.py:101:15       UUIDPK                                                                      U       ParentWithUUIDPK,"
  - "tests/admin_views/tests.py:120:16       UUIDPK                                                                      U       RelatedWithUUIDPKModel,"
  - "tests/admin_views/tests.py:142:5        Vodcast                                                                     U       Vodcast,"
  - "tests/admin_views/tests.py:152:11       ENCTYPE                                                                     U       MULTIPART_ENCTYPE = 'enctype=\"multipart"
  - "tests/admin_views/tests.py:152:22       enctype                                                                     U       MULTIPART_ENCTYPE = 'enctype=\"multipart/form-data"
  - "tests/admin_views/tests.py:244:36       Palin                                                                       U       objects.create(name=\"Palin\", age=27)"
  - "tests/admin_views/tests.py:255:37       Norske                                                                      U       article_set-0-title\": \"Norske bostaver æøå skaper"
  - "tests/admin_views/tests.py:255:44       bostaver                                                                    U       set-0-title\": \"Norske bostaver æøå skaper problemer"
  - "tests/admin_views/tests.py:255:57       skaper                                                                      U       Norske bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:255:64       problemer                                                                   U       bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:336:16       saveasnew                                                                   U       {\"_saveasnew\": \"1\"}, # \"Save as"
  - "tests/admin_views/tests.py:437:40       supervillain                                                                U       reverse(\"admin:admin_views_supervillain_change\", args=(\"abc"
  - "tests/admin_views/tests.py:486:19       saveasnew                                                                   U       \"_saveasnew\": \"Save+as+new\","
  - "tests/admin_views/tests.py:506:19       saveasnew                                                                   U       \"_saveasnew\": \"Save+as+new\","
  - "tests/admin_views/tests.py:795:44       complexsortedperson                                                         U       reverse(\"admin:admin_views_complexsortedperson_change\", args=(p1.pk"
  - "tests/admin_views/tests.py:796:44       complexsortedperson                                                         U       reverse(\"admin:admin_views_complexsortedperson_change\", args=(p2.pk"
  - "tests/admin_views/tests.py:799:40       complexsortedperson                                                         U       reverse(\"admin:admin_views_complexsortedperson_changelist\"), {}"
  - "tests/admin_views/tests.py:822:34       adminorderedfield                                                           U       AdminOrderedField, \"adminorderedfield\"),"
  - "tests/admin_views/tests.py:823:40       adminorderedmodelmethod                                                     U       AdminOrderedModelMethod, \"adminorderedmodelmethod\"),"
  - "tests/admin_views/tests.py:824:40       adminorderedadminmethod                                                     U       AdminOrderedAdminMethod, \"adminorderedadminmethod\"),"
  - "tests/admin_views/tests.py:825:37       adminorderedcallable                                                        U       AdminOrderedCallable, \"adminorderedcallable\"),"
  - "tests/admin_views/tests.py:852:44       Karnataka                                                                   U       objects.create(name=\"Karnataka\")"
  - "tests/admin_views/tests.py:865:9        Vodcast                                                                     U       Vodcast.objects.create(media"
  - "tests/admin_views/tests.py:866:63       vodcast                                                                     U       reverse(\"admin:admin_views_vodcast_changelist\"), {})"
  - "tests/admin_views/tests.py:882:47       labelledby                                                                  U       changelist-filter\" aria-labelledby=\"changelist-filter-header"
  - "tests/admin_views/tests.py:898:45       viewlink                                                                    U       facets=True\" class=\"viewlink\">Show counts</a>',"
  - "tests/admin_views/tests.py:904:33       hidelink                                                                    U       '<a href=\"?\" class=\"hidelink\">Hide counts</a>',"
  - "tests/admin_views/tests.py:908:63       workhour                                                                    U       reverse(\"admin:admin_views_workhour_changelist\"))"
  - "tests/admin_views/tests.py:920:63       fooddelivery                                                                U       reverse(\"admin:admin_views_fooddelivery_changelist\"))"
  - "tests/admin_views/tests.py:933:53       chapterxtra                                                                 U       reverse(\"admin:admin_views_chapterxtra1_changelist\")"
  - "tests/admin_views/tests.py:937:47       labelledby                                                                  U       changelist-filter\" aria-labelledby=\"changelist-filter-header"
  - "tests/admin_views/tests.py:993:54       notarealfield                                                               U       get(changelist_url, {\"notarealfield\": \"5\"})"
  - "tests/admin_views/tests.py:997:54       notarealfield                                                               U       get(changelist_url, {\"notarealfield__whatever\": \"5\"})"
  - "tests/admin_views/tests.py:1077:47      labelledby                                                                  U       changelist-filter\" aria-labelledby=\"changelist-filter-header"
  - "tests/admin_views/tests.py:1117:47      Choisir                                                                     U       assertNotContains(response, \"Choisir une heure\")"
  - "tests/admin_views/tests.py:1117:59      heure                                                                       U       response, \"Choisir une heure\")"
  - "tests/admin_views/tests.py:1126:44      Choisir                                                                     U       assertContains(response, \"Choisir une heure\")"
  - "tests/admin_views/tests.py:1126:56      heure                                                                       U       response, \"Choisir une heure\")"
  - "tests/admin_views/tests.py:1176:63      workhour                                                                    U       reverse(\"admin:admin_views_workhour_changelist\"))"
  - "tests/admin_views/tests.py:1180:43      workhour                                                                    U       reverse(\"admin:admin_views_workhour_changelist\"), e1.pk"
  - "tests/admin_views/tests.py:1201:40      notreferenced                                                               U       reverse(\"admin:admin_views_notreferenced_changelist\"), {TO_FIELD"
  - "tests/admin_views/tests.py:1208:77      rname                                                                       U       changelist\"), {TO_FIELD_VAR: \"rname\"}"
  - "tests/admin_views/tests.py:1223:40      referencedbyparent                                                          U       reverse(\"admin:admin_views_referencedbyparent_changelist\"),"
  - "tests/admin_views/tests.py:1231:40      referencedbyinline                                                          U       reverse(\"admin:admin_views_referencedbyinline_changelist\"),"
  - "tests/admin_views/tests.py:1238:42      referencedbygenrel                                                          U       reverse(\"admin:admin_views_referencedbygenrel_changelist\")"
  - "tests/admin_views/tests.py:1270:32      Palin                                                                       U       url = \"%s?leader__name=Palin&leader__age=27\" % reverse"
  - "tests/admin_views/tests.py:1280:44      Palin                                                                       U       objects.create(name=\"Palin\", age=27)"
  - "tests/admin_views/tests.py:1313:40      undeletableobject                                                           U       reverse(\"admin:admin_views_undeletableobject_change\", args=(instance"
  - "tests/admin_views/tests.py:1323:40      readablepizza                                                               U       reverse(\"admin:admin_views_readablepizza_change\", args=(pizza"
  - "tests/admin_views/tests.py:1327:50      readablepizza                                                               U       reverse(\"admin:admin_views_readablepizza_changelist\")"
  - "tests/admin_views/tests.py:1354:40      unchangeableobject                                                          U       reverse(\"admin:admin_views_unchangeableobject_changelist\")"
  - "tests/admin_views/tests.py:1361:22      appindex                                                                    U       def test_invalid_appindex_url(self):"
  - "tests/admin_views/tests.py:1629:55      tabindex                                                                    U       start\" class=\"content\" tabindex=\"-1\">',"
  - "tests/admin_views/tests.py:1639:19      describedby                                                                 U       def test_aria_describedby_for_add_and_change_links"
  - "tests/admin_views/tests.py:1654:47      describedby                                                                 U       class=\"changelink\" aria-describedby=\"{row_id}\">Change</a"
  - "tests/admin_views/tests.py:1659:30      addlink                                                                     U       f'class=\"addlink\" aria-describedby=\""
  - "tests/admin_views/tests.py:1659:44      describedby                                                                 U       class=\"addlink\" aria-describedby=\"{row_id}\">Add</a>'"
  - "tests/admin_views/tests.py:1772:23      extrabody                                                                   U       def test_extended_extrabody(self):"
  - "tests/admin_views/tests.py:1774:40      extrabody                                                                   U       assertContains(response, \"extrabody_check\\n</body>\")"
  - "tests/admin_views/tests.py:1857:44      foogroup                                                                    U       objects.create(name=\"foogroup\")"
  - "tests/admin_views/tests.py:1866:44      foogroup                                                                    U       objects.create(name=\"foogroup\")"
  - "tests/admin_views/tests.py:1942:35      behaviour                                                                   U       this would be the usual behaviour"
  - "tests/admin_views/tests.py:1944:34      behaviour                                                                   U       this is the overridden behaviour"
  - "tests/admin_views/tests.py:1967:44      prepopulate                                                                 U       assertContains(response, \"prepopulate.js\")"
  - "tests/admin_views/tests.py:1974:44      prepopulate                                                                 U       assertContains(response, \"prepopulate.js\")"
  - "tests/admin_views/tests.py:1986:53      Mauchly                                                                     U       objects.create(name=\"John Mauchly\", gender=1, alive=True"
  - "tests/admin_views/tests.py:1993:24      saveasnew                                                                   U       post_data = {\"_saveasnew\": \"\", \"name\": \"John"
  - "tests/admin_views/tests.py:2009:24      saveasnew                                                                   U       post_data = {\"_saveasnew\": \"\", \"name\": \"John"
  - "tests/admin_views/tests.py:2098:30      customform                                                                  U       \"username\": \"customform\","
  - "tests/admin_views/tests.py:2280:26      notsecret                                                                   U       \"password\": \"notsecret\","
  - "tests/admin_views/tests.py:2342:35      jondoe                                                                      U       user = User(username=\"jondoe\", password=\"secret\""
  - "tests/admin_views/tests.py:2502:27      ikke                                                                        U       \"title\": \"Døm ikke\","
  - "tests/admin_views/tests.py:2549:51      ikke                                                                        U       success\">The article “Døm ikke” was added successfully"
  - "tests/admin_views/tests.py:2557:30      rsaquo                                                                      U       change_list_link = '&rsaquo; <a href=\"%s\">Articles"
  - "tests/admin_views/tests.py:2582:57      ikke                                                                        U       log.object_repr, \"Døm ikke\")"
  - "tests/admin_views/tests.py:2636:23      Ikke                                                                        U       \"title\": \"Ikke fordømt\","
  - "tests/admin_views/tests.py:2636:28      fordømt                                                                     U       \"title\": \"Ikke fordømt\","
  - "tests/admin_views/tests.py:2672:70      closelink                                                                   U       views/article/\" class=\"closelink\">Close'"
  - "tests/admin_views/tests.py:2732:78      mult                                                                        U       create(id=3, name=\"odd id mult 3\")"
  - "tests/admin_views/tests.py:2733:79      mult                                                                        U       id=6, name=\"even id mult 3\")"
  - "tests/admin_views/tests.py:2735:32      rowlevelchangepermissionmodel                                               U       \"admin:admin_views_rowlevelchangepermissionmodel_change\", args=(r1.pk"
  - "tests/admin_views/tests.py:2738:32      rowlevelchangepermissionmodel                                               U       \"admin:admin_views_rowlevelchangepermissionmodel_change\", args=(r2.pk"
  - "tests/admin_views/tests.py:2741:32      rowlevelchangepermissionmodel                                               U       \"admin:admin_views_rowlevelchangepermissionmodel_change\", args=(r3.pk"
  - "tests/admin_views/tests.py:2744:32      rowlevelchangepermissionmodel                                               U       \"admin:admin_views_rowlevelchangepermissionmodel_change\", args=(r6.pk"
  - "tests/admin_views/tests.py:2776:29      mult                                                                        U       \"odd id mult 3\","
  - "tests/admin_views/tests.py:2824:71      closelink                                                                   U       views/article/\" class=\"closelink\">Close'"
  - "tests/admin_views/tests.py:2835:23      Ikke                                                                        U       \"title\": \"Ikke fordømt\","
  - "tests/admin_views/tests.py:2835:28      fordømt                                                                     U       \"title\": \"Ikke fordømt\","
  - "tests/admin_views/tests.py:2897:24      reshows                                                                     U       # Invalid POST reshows inlines."
  - "tests/admin_views/tests.py:2955:24      reshows                                                                     U       # Invalid POST reshows inlines."
  - "tests/admin_views/tests.py:3054:49      readonlypizza                                                               U       reverse(\"admin:admin_views_readonlypizza_delete\", args=(pizza"
  - "tests/admin_views/tests.py:3057:52      readonlypizza                                                               U       response, \"admin_views/readonlypizza/%s/\" % pizza.pk)"
  - "tests/admin_views/tests.py:3062:46      readonlypizza                                                               U       reverse(\"admin:admin_views_readonlypizza_changelist\")"
  - "tests/admin_views/tests.py:3115:40      rowlevelchangepermissionmodel                                               U       \"admin:admin_views_rowlevelchangepermissionmodel_history\","
  - "tests/admin_views/tests.py:3582:48      supervillain                                                                U       super floating castle!\", supervillain=cls.sv1"
  - "tests/admin_views/tests.py:3614:40      cyclicone                                                                   U       reverse(\"admin:admin_views_cyclicone_change\", args=(self"
  - "tests/admin_views/tests.py:3617:40      cyclictwo                                                                   U       reverse(\"admin:admin_views_cyclictwo_change\", args=(self"
  - "tests/admin_views/tests.py:3620:40      cyclicone                                                                   U       reverse(\"admin:admin_views_cyclicone_delete\", args=(self"
  - "tests/admin_views/tests.py:3760:42      supervillain                                                                U       reverse(\"admin:admin_views_supervillain_change\", args=(self"
  - "tests/admin_views/tests.py:3770:40      supervillain                                                                U       reverse(\"admin:admin_views_supervillain_delete\", args=(self"
  - "tests/admin_views/tests.py:3781:66      hott                                                                        U       content_object=plot, name=\"hott\")"
  - "tests/admin_views/tests.py:3782:55      hott                                                                        U       Funky tag: <a href=\"%s\">hott' % reverse("
  - "tests/admin_views/tests.py:3783:32      funkytag                                                                    U       \"admin:admin_views_funkytag_change\", args=(tag.id"
  - "tests/admin_views/tests.py:3796:50      djangoproject                                                               U       objects.create(name=\"djangoproject\")"
  - "tests/admin_views/tests.py:3798:46      funkytag                                                                    U       reverse(\"admin:admin_views_funkytag_change\", args=(tag.id"
  - "tests/admin_views/tests.py:3831:64      hott                                                                        U       object=self.pl3, name=\"hott\")"
  - "tests/admin_views/tests.py:3832:63      funkytag                                                                    U       reverse(\"admin:admin_views_funkytag_changelist\"))"
  - "tests/admin_views/tests.py:3935:14      recentactions                                                               U       def test_recentactions_link(self):"
  - "tests/admin_views/tests.py:3947:14      recentactions                                                               U       def test_recentactions_description(self):"
  - "tests/admin_views/tests.py:3955:14      deleteconfirmation                                                          U       def test_deleteconfirmation_link(self):"
  - "tests/admin_views/tests.py:4030:40      viewsitelink                                                                U       contain = '/%s/\" class=\"viewsitelink\">' % model.pk"
  - "tests/admin_views/tests.py:4048:44      historylink                                                                 U       <a href=\"%s\" class=\"historylink\"' % escape(expected"
  - "tests/admin_views/tests.py:4067:30      Fhistory                                                                    U       self.assertIn(\"/123_2Fhistory/\", response.headers"
  - "tests/admin_views/tests.py:4105:44      Lærdommer                                                                   U       objects.create(name=\"Lærdommer\")"
  - "tests/admin_views/tests.py:4106:56      Lærdommer                                                                   U       create(name=\"<Promo for Lærdommer>\", book=cls.b1)"
  - "tests/admin_views/tests.py:4108:20      Norske                                                                      U       title=\"Norske bostaver æøå skaper"
  - "tests/admin_views/tests.py:4108:27      bostaver                                                                    U       title=\"Norske bostaver æøå skaper problemer"
  - "tests/admin_views/tests.py:4108:40      skaper                                                                      U       Norske bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:4108:47      problemer                                                                   U       bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:4109:25      Svært                                                                       U       content=\"<p>Svært frustrerende med UnicodeDecod"
  - "tests/admin_views/tests.py:4109:31      frustrerende                                                                U       content=\"<p>Svært frustrerende med UnicodeDecodeErro"
  - "tests/admin_views/tests.py:4109:61      Erro                                                                        U       frustrerende med UnicodeDecodeErro</p>\","
  - "tests/admin_views/tests.py:4113:20      Kjærlighet                                                                  U       title=\"Kjærlighet\","
  - "tests/admin_views/tests.py:4114:28      kjærligheten                                                                U       content=\"<p>La kjærligheten til de lidende seire"
  - "tests/admin_views/tests.py:4114:48      lidende                                                                     U       kjærligheten til de lidende seire.</p>\","
  - "tests/admin_views/tests.py:4114:56      seire                                                                       U       rligheten til de lidende seire.</p>\","
  - "tests/admin_views/tests.py:4118:20      Kjærlighet                                                                  U       title=\"Kjærlighet\", content=\"<p>Noe innhold"
  - "tests/admin_views/tests.py:4118:49      innhold                                                                     U       rlighet\", content=\"<p>Noe innhold</p>\", book=cls.b1"
  - "tests/admin_views/tests.py:4121:44      Norske                                                                      U       chap1, xtra=\"<Xtra(1) Norske bostaver æøå skaper"
  - "tests/admin_views/tests.py:4121:51      bostaver                                                                    U       xtra=\"<Xtra(1) Norske bostaver æøå skaper problemer"
  - "tests/admin_views/tests.py:4121:64      skaper                                                                      U       Norske bostaver æøå skaper problemer>\""
  - "tests/admin_views/tests.py:4121:71      problemer                                                                   U       bostaver æøå skaper problemer>\""
  - "tests/admin_views/tests.py:4124:44      Kjærlighet                                                                  U       chap2, xtra=\"<Xtra(1) Kjærlighet>\""
  - "tests/admin_views/tests.py:4127:44      Kjærlighet                                                                  U       chap3, xtra=\"<Xtra(1) Kjærlighet>\""
  - "tests/admin_views/tests.py:4130:44      Norske                                                                      U       chap1, xtra=\"<Xtra(2) Norske bostaver æøå skaper"
  - "tests/admin_views/tests.py:4130:51      bostaver                                                                    U       xtra=\"<Xtra(2) Norske bostaver æøå skaper problemer"
  - "tests/admin_views/tests.py:4130:64      skaper                                                                      U       Norske bostaver æøå skaper problemer>\""
  - "tests/admin_views/tests.py:4130:71      problemer                                                                   U       bostaver æøå skaper problemer>\""
  - "tests/admin_views/tests.py:4133:44      Kjærlighet                                                                  U       chap2, xtra=\"<Xtra(2) Kjærlighet>\""
  - "tests/admin_views/tests.py:4147:27      lærdommer                                                                   U       \"name\": \"Test lærdommer\","
  - "tests/admin_views/tests.py:4153:37      Norske                                                                      U       chapter_set-0-title\": \"Norske bostaver æøå skaper"
  - "tests/admin_views/tests.py:4153:44      bostaver                                                                    U       set-0-title\": \"Norske bostaver æøå skaper problemer"
  - "tests/admin_views/tests.py:4153:57      skaper                                                                      U       Norske bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:4153:64      problemer                                                                   U       bostaver æøå skaper problemer\","
  - "tests/admin_views/tests.py:4155:27      Svært                                                                       U       \"&lt;p&gt;Svært frustrerende med UnicodeDecod"
  - "tests/admin_views/tests.py:4155:33      frustrerende                                                                U       \"&lt;p&gt;Svært frustrerende med UnicodeDecodeError"
  - "tests/admin_views/tests.py:4160:30      kjærligheten                                                                U       \"&lt;p&gt;La kjærligheten til de lidende seire"
  - "tests/admin_views/tests.py:4160:50      lidende                                                                     U       kjærligheten til de lidende seire.&lt;/p&gt;\""
  - "tests/admin_views/tests.py:4160:58      seire                                                                       U       rligheten til de lidende seire.&lt;/p&gt;\""
  - "tests/admin_views/tests.py:4219:53      Mauchly                                                                     U       objects.create(name=\"John Mauchly\", gender=1, alive=True"
  - "tests/admin_views/tests.py:4221:58      Rossum                                                                      U       create(name=\"Guido van Rossum\", gender=1, alive=True"
  - "tests/admin_views/tests.py:4234:9       Vodcast                                                                     U       Vodcast.objects.create(name"
  - "tests/admin_views/tests.py:4235:63      vodcast                                                                     U       reverse(\"admin:admin_views_vodcast_changelist\"))"
  - "tests/admin_views/tests.py:4294:53      Mauchly                                                                     U       objects.get(name=\"John Mauchly\").alive, False)"
  - "tests/admin_views/tests.py:4314:53      Mauchly                                                                     U       objects.get(name=\"John Mauchly\").alive, True)"
  - "tests/admin_views/tests.py:4329:53      Mauchly                                                                     U       objects.get(name=\"John Mauchly\").alive, False)"
  - "tests/admin_views/tests.py:4366:40      fooddelivery                                                                U       reverse(\"admin:admin_views_fooddelivery_changelist\"), data"
  - "tests/admin_views/tests.py:4397:40      fooddelivery                                                                U       reverse(\"admin:admin_views_fooddelivery_changelist\"), data"
  - "tests/admin_views/tests.py:4447:68      Clegg                                                                       U       id=1, name=\"Frederick Clegg\")"
  - "tests/admin_views/tests.py:4495:40      unorderedobject                                                             U       reverse(\"admin:admin_views_unorderedobject_changelist\")"
  - "tests/admin_views/tests.py:4501:40      unorderedobject                                                             U       reverse(\"admin:admin_views_unorderedobject_changelist\") + \"?p="
  - "tests/admin_views/tests.py:4571:75      Djangoland                                                                  U       Once upon a time in Djangoland...\""
  - "tests/admin_views/tests.py:4599:42      Djangoland                                                                  U       Once upon a time in Djangoland...\","
  - "tests/admin_views/tests.py:4605:44      otherstory                                                                  U       reverse(\"admin:admin_views_otherstory_change\", args=(story"
  - "tests/admin_views/tests.py:4606:44      otherstory                                                                  U       reverse(\"admin:admin_views_otherstory_change\", args=(story"
  - "tests/admin_views/tests.py:4607:63      otherstory                                                                  U       reverse(\"admin:admin_views_otherstory_changelist\"))"
  - "tests/admin_views/tests.py:4663:58      Rossum                                                                      U       create(name=\"Guido van Rossum\", gender=1, alive=True"
  - "tests/admin_views/tests.py:4665:44      Hara                                                                        U       create(name='John O\"Hara', gender=1)"
  - "tests/admin_views/tests.py:4726:66      uido                                                                        U       person_changelist\") + \"?q=uido\""
  - "tests/admin_views/tests.py:4737:40      pluggablesearchperson                                                       U       reverse(\"admin:admin_views_pluggablesearchperson_changelist\") + \"?q=Bob"
  - "tests/admin_views/tests.py:4744:40      pluggablesearchperson                                                       U       reverse(\"admin:admin_views_pluggablesearchperson_changelist\") + \"?q="
  - "tests/admin_views/tests.py:4797:25      Hara                                                                        U       (\"'John O\\\\'Hara'\", 1),"
  - "tests/admin_views/tests.py:4798:23      Hara                                                                        U       ('\"John O\"Hara\"', 0),"
  - "tests/admin_views/tests.py:4799:25      Hara                                                                        U       ('\"John O\\\\\"Hara\"', 1),"
  - "tests/admin_views/tests.py:4961:63      emptymodel                                                                  U       reverse(\"admin:admin_views_emptymodel_changelist\"))"
  - "tests/admin_views/tests.py:4998:46      emptymodel                                                                  U       reverse(\"admin:admin_views_emptymodel_change\", args=(i,))"
  - "tests/admin_views/tests.py:5227:40      filteredmanager                                                             U       reverse(\"admin:admin_views_filteredmanager_changelist\")"
  - "tests/admin_views/tests.py:5233:44      filteredmanager                                                             U       reverse(\"admin:admin_views_filteredmanager_history\", args=(1,)"
  - "tests/admin_views/tests.py:5239:44      filteredmanager                                                             U       reverse(\"admin:admin_views_filteredmanager_history\", args=(2,)"
  - "tests/admin_views/tests.py:5266:33      enctype                                                                     U       test_form_has_multipart_enctype(self):"
  - "tests/admin_views/tests.py:5271:49      ENCTYPE                                                                     U       response, MULTIPART_ENCTYPE)"
  - "tests/admin_views/tests.py:5358:14      fancydoodad                                                                 U       \"fancydoodad_set-TOTAL_FORMS\": \""
  - "tests/admin_views/tests.py:5359:14      fancydoodad                                                                 U       \"fancydoodad_set-INITIAL_FORMS\":"
  - "tests/admin_views/tests.py:5360:14      fancydoodad                                                                 U       \"fancydoodad_set-MAX_NUM_FORMS\":"
  - "tests/admin_views/tests.py:5361:14      fancydoodad                                                                 U       \"fancydoodad_set-0-doodad_ptr\":"
  - "tests/admin_views/tests.py:5362:14      fancydoodad                                                                 U       \"fancydoodad_set-0-owner\": \"1\","
  - "tests/admin_views/tests.py:5406:39      enctype                                                                     U       or image fields, no enctype on the forms"
  - "tests/admin_views/tests.py:5408:52      ENCTYPE                                                                     U       response, MULTIPART_ENCTYPE)"
  - "tests/admin_views/tests.py:5582:36      Clegg                                                                       U       \"name\": \"Frederick Clegg\","
  - "tests/admin_views/tests.py:5727:40      prepopulatedsubpost                                                         U       id&quot;: &quot;#id_prepopulatedsubpost_set-0-subslug&quot;"
  - "tests/admin_views/tests.py:5727:66      subslug                                                                     U       prepopulatedsubpost_set-0-subslug&quot;\","
  - "tests/admin_views/tests.py:5741:40      prepopulatedsubpost                                                         U       id&quot;: &quot;#id_prepopulatedsubpost_set-0-subslug&quot;"
  - "tests/admin_views/tests.py:5741:66      subslug                                                                     U       prepopulatedsubpost_set-0-subslug&quot;\","
  - "tests/admin_views/tests.py:5751:40      prepopulatedpostlargeslug                                                   U       reverse(\"admin:admin_views_prepopulatedpostlargeslug_add\")"
  - "tests/admin_views/tests.py:5820:63      mainprepopulated                                                            U       reverse(\"admin:admin_views_mainprepopulated_add\")"
  - "tests/admin_views/tests.py:5830:38      awεšomeııı                                                                  U       the mAin nÀMë and it's awεšomeıııİ\""
  - "tests/admin_views/tests.py:5835:56      awesomeiiii                                                                 U       the-main-name-and-its-awesomeiiii-2012-02-18\")"
  - "tests/admin_views/tests.py:5836:67      awesomeiiii                                                                 U       the-main-name-and-its-awesomeiiii\")"
  - "tests/admin_views/tests.py:5844:24      relatedprepopulated                                                         U       By.ID, \"id_relatedprepopulated_set-0-pubdate\""
  - "tests/admin_views/tests.py:5847:24      relatedprepopulated                                                         U       By.ID, \"id_relatedprepopulated_set-0-status\""
  - "tests/admin_views/tests.py:5850:33      relatedprepopulated                                                         U       self.select_option(\"#id_relatedprepopulated_set-0-status\", \"option"
  - "tests/admin_views/tests.py:5852:24      relatedprepopulated                                                         U       By.ID, \"id_relatedprepopulated_set-0-name\""
  - "tests/admin_views/tests.py:5853:36      Çkeð                                                                        U       keys(\" here is a sŤāÇkeð inline ! \")"
  - "tests/admin_views/tests.py:5855:24      relatedprepopulated                                                         U       By.ID, \"id_relatedprepopulated_set-0-slug1\""
  - "tests/admin_views/tests.py:5889:28      anöther                                                                     U       \" now you haVe anöther sŤāÇkeð inline with"
  - "tests/admin_views/tests.py:5889:41      Çkeð                                                                        U       you haVe anöther sŤāÇkeð inline with a very"
  - "tests/admin_views/tests.py:5890:14      loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooog      U       \"loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooog \""
  - "tests/admin_views/tests.py:5918:39      Ãbűla                                                                       U       keys(\"And now, with a tÃbűlaŘ inline !!!\")"
  - "tests/admin_views/tests.py:5949:24      Ãbűla                                                                       U       ).send_keys(r'tÃbűlaŘ inline with ignored"
  - "tests/admin_views/tests.py:5976:18      Çkeð                                                                        U       \" sŤāÇkeð inline ! \""
  - "tests/admin_views/tests.py:5997:28      anöther                                                                     U       \" now you haVe anöther sŤāÇkeð inline with"
  - "tests/admin_views/tests.py:5997:41      Çkeð                                                                        U       you haVe anöther sŤāÇkeð inline with a very"
  - "tests/admin_views/tests.py:5997:66      loooong                                                                     U       inline with a very loooong \""
  - "tests/admin_views/tests.py:6013:43      awεšomeııı                                                                  U       the mAin nÀMë and it's awεšomeıııİ\","
  - "tests/admin_views/tests.py:6016:42      awesomeiiii                                                                 U       the-main-name-and-its-awesomeiiii-2012-02-18\","
  - "tests/admin_views/tests.py:6017:53      awesomeiiii                                                                 U       the-main-name-and-its-awesomeiiii\","
  - "tests/admin_views/tests.py:6018:29      nàmë                                                                        U       slug3=\"the-main-nàmë-and-its-awεšomeıııi"
  - "tests/admin_views/tests.py:6018:42      awεšomeıııi                                                                 U       the-main-nàmë-and-its-awεšomeıııi\","
  - "tests/admin_views/tests.py:6022:33      Çkeð                                                                        U       name=\" here is a sŤāÇkeð inline ! \","
  - "tests/admin_views/tests.py:6031:32      anöther                                                                     U       \" now you haVe anöther sŤāÇkeð inline with"
  - "tests/admin_views/tests.py:6032:18      loooooooooooooooooo                                                         U       \"loooooooooooooooooo\""
  - "tests/admin_views/tests.py:6040:36      Ãbűla                                                                       U       name=\"And now, with a tÃbűlaŘ inline !!!\","
  - "tests/admin_views/tests.py:6047:21      Ãbűla                                                                       U       name=r'tÃbűlaŘ inline with ignored"
  - "tests/admin_views/tests.py:6056:13      prepopulation                                                               U       The prepopulation works for existing objects"
  - "tests/admin_views/tests.py:6074:32      mainprepopulated                                                            U       \"admin:admin_views_mainprepopulated_change\", args=(item"
  - "tests/admin_views/tests.py:6120:14      selectbox                                                                   U       def test_selectbox_height_collapsible_fieldset"
  - "tests/admin_views/tests.py:6145:31      selectbox                                                                   U       self.take_screenshot(\"selectbox-collapsible\")"
  - "tests/admin_views/tests.py:6148:14      selectbox                                                                   U       def test_selectbox_height_not_collapsible"
  - "tests/admin_views/tests.py:6176:31      selectbox                                                                   U       self.take_screenshot(\"selectbox-non-collapsible\")"
  - "tests/admin_views/tests.py:6319:28      UUIDPK                                                                      U       parent = ParentWithUUIDPK.objects.create(title"
  - "tests/admin_views/tests.py:6320:42      UUIDPK                                                                      U       parent = RelatedWithUUIDPKModel.objects.create"
  - "tests/admin_views/tests.py:6325:32      relatedwithuuidpkmodel                                                      U       \"admin:admin_views_relatedwithuuidpkmodel_change\","
  - "tests/admin_views/tests.py:6350:42      relatedwithuuidpkmodel                                                      U       reverse(\"admin:admin_views_relatedwithuuidpkmodel_add\")"
  - "tests/admin_views/tests.py:6359:33      UUIDPK                                                                      U       uuid_id = str(ParentWithUUIDPK.objects.first().id)"
  - "tests/admin_views/tests.py:6374:32      relatedwithuuidpkmodel                                                      U       \"admin:admin_views_relatedwithuuidpkmodel_change\","
  - "tests/admin_views/tests.py:6400:32      relatedwithuuidpkmodel                                                      U       \"admin:admin_views_relatedwithuuidpkmodel_change\","
  - "tests/admin_views/tests.py:6422:32      relatedwithuuidpkmodel                                                      U       \"admin:admin_views_relatedwithuuidpkmodel_changelist\","
  - "tests/admin_views/tests.py:6454:18      Segoe                                                                       U       \"Segoe UI\","
  - "tests/admin_views/tests.py:6456:18      Roboto                                                                      U       \"Roboto\","
  - "tests/admin_views/tests.py:6457:28      Neue                                                                        U       \"Helvetica Neue\","
  - "tests/admin_views/tests.py:6461:18      Segoe                                                                       U       \"Segoe UI Emoji\","
  - "tests/admin_views/tests.py:6462:18      Segoe                                                                       U       \"Segoe UI Symbol\","
  - "tests/admin_views/tests.py:6463:18      Noto                                                                        U       \"Noto Color Emoji\","
  - "tests/admin_views/tests.py:6470:47      Rossum                                                                      U       create(name=\"Guido van Rossum\", gender=1, alive=True"
  - "tests/admin_views/tests.py:6846:37      Žćžšđ                                                                       U       title (with Unicode ŠĐĆŽćžšđ)</div></div>\","
  - "tests/admin_views/tests.py:6852:39      Žćžšđ                                                                       U       content (with Unicode ŠĐĆŽćžšđ)</div></div>\","
  - "tests/admin_views/tests.py:6857:82      Žćžšđ                                                                       U       date (with Unicode ŠĐĆŽćžšđ)'"
  - "tests/admin_views/tests.py:6954:44      readonlyrelatedfield                                                        U       admin_site}:admin_views_readonlyrelatedfield_change\", args=(obj.pk"
  - "tests/admin_views/tests.py:7006:23      onetoone                                                                    U       def test_readonly_onetoone_backwards_ref(self)"
  - "tests/admin_views/tests.py:7015:40      plotproxy                                                                   U       reverse(\"admin:admin_views_plotproxy_change\", args=(pl.pk"
  - "tests/admin_views/tests.py:7026:40      plotproxy                                                                   U       reverse(\"admin:admin_views_plotproxy_change\", args=(pl.pk"
  - "tests/admin_views/tests.py:7044:40      fieldoverridepost                                                           U       reverse(\"admin:admin_views_fieldoverridepost_change\", args=(p.pk"
  - "tests/admin_views/tests.py:7057:69      Žćžšđ                                                                       U       date (with Unicode ŠĐĆŽćžšđ)\""
  - "tests/admin_views/tests.py:7092:9       threepwood                                                                  U       threepwood = Character.objects"
  - "tests/admin_views/tests.py:7093:23      threepwood                                                                  U       username=\"threepwood\","
  - "tests/admin_views/tests.py:7100:63      stumpjoke                                                                   U       reverse(\"admin:admin_views_stumpjoke_add\"))"
  - "tests/admin_views/tests.py:7102:39      threepwood                                                                  U       assertContains(response, threepwood.username, count=2)"
  - "tests/admin_views/tests.py:7119:44      Palin                                                                       U       objects.create(name=\"Palin\", age=27)"
  - "tests/admin_views/tests.py:7145:36      Palin                                                                       U       objects.create(name=\"Palin\", age=27)"
  - "tests/admin_views/tests.py:7146:36      Kilbraken                                                                   U       objects.create(name=\"Kilbraken\", age=50, title=\"Judge"
  - "tests/admin_views/tests.py:7162:41      Kilbraken                                                                   U       assertContains(response2, \"Kilbraken\")"
  - "tests/admin_views/tests.py:7168:36      Kilbraken                                                                   U       objects.create(name=\"Kilbraken\", age=50, title=\"Judge"
  - "tests/admin_views/tests.py:7184:44      Kilbraken                                                                   U       assertNotContains(response2, \"Kilbraken\")"
  - "tests/admin_views/tests.py:7237:58      Rossum                                                                      U       create(name=\"Guido van Rossum\", gender=1, alive=True"
  - "tests/admin_views/tests.py:7446:26      newgroup                                                                    U       \"name\": \"newgroup\","
  - "tests/admin_views/tests.py:8014:40      usermessenger                                                               U       reverse(\"admin:admin_views_usermessenger_changelist\"),"
  - "tests/admin_views/tests.py:8046:40      usermessenger                                                               U       reverse(\"admin:admin_views_usermessenger_changelist\"),"
  - "tests/admin_views/tests.py:8230:37      historylink                                                                 U       href=\"(.*?)\" class=\"historylink\">History</a>', response"
  - "tests/admin_views/tests.py:8276:37      closelink                                                                   U       href=\"(.*?)\" class=\"closelink\">Close</a>', response"
  - "tests/admin_views/tests.py:8375:63      emptymodelvisible                                                           U       reverse(\"admin:admin_views_emptymodelvisible_add\"))"
  - "tests/admin_views/tests.py:8381:63      emptymodelhidden                                                            U       reverse(\"admin:admin_views_emptymodelhidden_add\"))"
  - "tests/admin_views/tests.py:8387:63      emptymodelmixin                                                             U       reverse(\"admin:admin_views_emptymodelmixin_add\"))"
  - "tests/admin_views/tests.py:8429:79      Rossi                                                                       U       name=\"Mario\", surname=\"Rossi\")"
  - "tests/admin_views/tests.py:8431:54      Bianchi                                                                     U       \"Antonio\", surname=\"Bianchi\""
  - "tests/admin_views/tests.py:8459:40      parentwithdependentchildren                                                 U       reverse(\"admin:admin_views_parentwithdependentchildren_add\"), post_data"
  - "tests/admin_views/tests.py:8486:9       pwdc                                                                        U       pwdc = ParentWithDependentChildren"
  - "tests/admin_views/tests.py:8498:48      pwdc                                                                        U       ndentchild_set-0-parent\": str(pwdc.id),"
  - "tests/admin_views/tests.py:8503:36      parentwithdependentchildren                                                 U       \"admin:admin_views_parentwithdependentchildren_change\", args=(pwdc"
  - "tests/admin_views/tests.py:8503:79      pwdc                                                                        U       endentchildren_change\", args=(pwdc.id,)"
  - "tests/admin_views/tests.py:8618:79      Rossi                                                                       U       name=\"Mario\", surname=\"Rossi\")"
  - "tests/admin_views/tests.py:8620:54      Bianchi                                                                     U       \"Antonio\", surname=\"Bianchi\""
  - "tests/admin_views/tests.py:8679:40      explicitlyprovidedpk                                                        U       reverse(\"admin:admin_views_explicitlyprovidedpk_add\"), post_data"
  - "tests/admin_views/tests.py:8685:40      explicitlyprovidedpk                                                        U       reverse(\"admin:admin_views_explicitlyprovidedpk_change\", args=(1,))"
  - "tests/admin_views/tests.py:8693:40      implicitlygeneratedpk                                                       U       reverse(\"admin:admin_views_implicitlygeneratedpk_add\"), post_data"
  - "tests/admin_views/tests.py:8699:40      implicitlygeneratedpk                                                       U       reverse(\"admin:admin_views_implicitlygeneratedpk_change\", args=(1,))"
  - "tests/admin_views/tests.py:8708:18      behaviour                                                                   U       Verifies the behaviour of the admin catch-all"
  - "tests/admin_views/tests.py:8710:7       Anonynous                                                                   U       * Anonynous/non-staff users are"
  - "tests/admin_views/tests.py:8771:14      unkown (unknown)                                                            U       def test_unkown_url_without_trailing"
  - "tests/admin_widgets/models.py:51:40         escapeme    U       choices_to={\"name\": '\"&><escapeme'},"
  - "tests/admin_widgets/tests.py:53:7           widgetadmin             U       from .widgetadmin import site as widget"
  - "tests/admin_widgets/tests.py:62:53          testser                 U       create_user(username=\"testser\", password=\"secret\""
  - "tests/admin_widgets/tests.py:63:75          Passat                  U       Volkswagen\", model=\"Passat\")"
  - "tests/admin_widgets/tests.py:72:49          widgetclass             U       self, model, fieldname, widgetclass, **admin_overrides)"
  - "tests/admin_widgets/tests.py:95:39          widgetclass             U       assertIsInstance(widget, widgetclass)"
  - "tests/admin_widgets/tests.py:307:65         cartire                 U       admin:admin_widgets_cartire_add\"))"
  - "tests/admin_widgets/tests.py:309:51         Passat                  U       response, \"Volkswagen Passat\")"
  - "tests/admin_widgets/tests.py:345:27         Iñtërnâtiônàlizætiøn    U       for test_str in (\"Iñtërnâtiônàlizætiøn\", \"1234'\", -1234):"
  - "tests/admin_widgets/tests.py:384:50         selectfilter            U       multiple name=\"test\" class=\"selectfilter\" '"
  - "tests/admin_widgets/tests.py:393:50         selectfilterstacked     U       multiple name=\"test\" class=\"selectfilterstacked\" '"
  - "tests/admin_widgets/tests.py:575:42         Linkin                  U       objects.create(name=\"Linkin Park\")"
  - "tests/admin_widgets/tests.py:584:71         salbums                 U       href=\"%(STORAGE_URL)salbums/'"
  - "tests/admin_widgets/tests.py:617:71         salbums                 U       href=\"%(STORAGE_URL)salbums/'"
  - "tests/admin_widgets/tests.py:629:71         salbums                 U       href=\"%(STORAGE_URL)salbums/'"
  - "tests/admin_widgets/tests.py:664:59         salbums                 U       href=\"%(STORAGE_URL)salbums/hybrid_theory.jpg\">"
  - "tests/admin_widgets/tests.py:685:42         Linkin                  U       objects.create(name=\"Linkin Park\")"
  - "tests/admin_widgets/tests.py:693:59         banduuid                U       name=\"test\" value=\"%(banduuid)s\" '"
  - "tests/admin_widgets/tests.py:697:45         bandpk                  U       admin_widgets/band/%(bandpk)s/change/\">Linkin Park"
  - "tests/admin_widgets/tests.py:697:63         Linkin                  U       %(bandpk)s/change/\">Linkin Park</a>'"
  - "tests/admin_widgets/tests.py:698:35         banduuid                U       /strong></div>\" % {\"banduuid\": band.uuid, \"bandpk"
  - "tests/admin_widgets/tests.py:698:58         bandpk                  U       banduuid\": band.uuid, \"bandpk\": band.pk},"
  - "tests/admin_widgets/tests.py:738:66         hcombpk                 U       honeycomb_widget\" value=\"%(hcombpk)s\">'"
  - "tests/admin_widgets/tests.py:739:30         hcomb                   U       \"&nbsp;<strong>%(hcomb)s</strong>\""
  - "tests/admin_widgets/tests.py:740:17         hcombpk                 U       % {\"hcombpk\": big_honeycomb.pk,"
  - "tests/admin_widgets/tests.py:740:46         hcomb                   U       big_honeycomb.pk, \"hcomb\": big_honeycomb},"
  - "tests/admin_widgets/tests.py:783:60         Cescapeme               U       band/?name=%22%26%3E%3Cescapeme&amp;'"
  - "tests/admin_widgets/tests.py:794:38         releaseevent            U       href=\"/admin_widgets/releaseevent/?_to_field=album\" '"
  - "tests/admin_widgets/tests.py:802:42         Linkin                  U       objects.create(name=\"Linkin Park\")"
  - "tests/admin_widgets/tests.py:835:9          consultor               U       consultor1 = Advisor.objects.create"
  - "tests/admin_widgets/tests.py:835:51         Rockstar                U       objects.create(name=\"Rockstar Techie\")"
  - "tests/admin_widgets/tests.py:839:9          consultor               U       consultor1.companies.add(c1, c"
  - "tests/admin_widgets/tests.py:953:50         releaseevent            U       context[\"model_name\"], \"releaseevent\")"
  - "tests/admin_widgets/tests.py:956:61         releaseevent            U       wrapper\" data-model-ref=\"releaseevent\">"
  - "tests/admin_widgets/tests.py:961:35         releaseevent            U       href=\"/admin_widgets/releaseevent/add/?_to_field=album"
  - "tests/admin_widgets/tests.py:962:46         addlink                 U       static/admin/img/icon-addlink.svg\" alt=\"\" width=\""
  - "tests/admin_widgets/tests.py:1024:56        clocklink               U       find_element(By.ID, \"clocklink0\")"
  - "tests/admin_widgets/tests.py:1035:45        timelist                U       XPATH, \"//ul[@class='timelist']/li/a\""
  - "tests/admin_widgets/tests.py:1073:56        calendarin              U       find_element(By.ID, \"calendarin0\")"
  - "tests/admin_widgets/tests.py:1100:56        calendarin              U       find_element(By.ID, \"calendarin0\")"
  - "tests/admin_widgets/tests.py:1126:56        calendarin              U       find_element(By.ID, \"calendarin0\")"
  - "tests/admin_widgets/tests.py:1157:52        djangojs                U       gettext.translation(\"djangojs\", path, [language_code"
  - "tests/admin_widgets/tests.py:1176:42        calendarin              U       self.wait_for_text(\"#calendarin0 caption\", expected"
  - "tests/admin_widgets/tests.py:1197:21        neighbouring            U       # If we are neighbouring a DST, we add an hour"
  - "tests/admin_widgets/tests.py:1213:49        datetimeshortcuts       U       \".field-birthdate .datetimeshortcuts\""
  - "tests/admin_widgets/tests.py:1224:61        timezonewarning         U       umElements(\".field-birthdate .timezonewarning\", 1)"
  - "tests/admin_widgets/tests.py:1901:59        brokenimg               U       tests_files_folder}/brokenimg.png\")"
  - "tests/admin_widgets/urls.py:3:15        widgetadmin     U       from . import widgetadmin"
  - "tests/admin_widgets/urls.py:6:14        widgetadmin     U       path(\"\", widgetadmin.site.urls),"
  - "tests/aggregation_regress/tests.py:55:53        Holovaty            U       create(name=\"Adrian Holovaty\", age=34)"
  - "tests/aggregation_regress/tests.py:56:52        Kaplan              U       objects.create(name=\"Jacob Kaplan-Moss\", age=35)"
  - "tests/aggregation_regress/tests.py:57:51        Dayley              U       objects.create(name=\"Brad Dayley\", age=45)"
  - "tests/aggregation_regress/tests.py:59:54        Forcier             U       create(name=\"Jeffrey Forcier\", age=37)"
  - "tests/aggregation_regress/tests.py:60:51        Bissex              U       objects.create(name=\"Paul Bissex\", age=29)"
  - "tests/aggregation_regress/tests.py:61:56        Chun                U       create(name=\"Wesley J. Chun\", age=25)"
  - "tests/aggregation_regress/tests.py:73:49        Apress              U       objects.create(name=\"Apress\", num_awards=3)"
  - "tests/aggregation_regress/tests.py:74:49        Sams                U       objects.create(name=\"Sams\", num_awards=1)"
  - "tests/aggregation_regress/tests.py:76:56        Kaufmann            U       create(name=\"Morgan Kaufmann\", num_awards=9)"
  - "tests/aggregation_regress/tests.py:77:49        Jonno's             U       objects.create(name=\"Jonno's House of Books\", num"
  - "tests/aggregation_regress/tests.py:91:19        Sams                U       name=\"Sams Teach Yourself Django"
  - "tests/aggregation_regress/tests.py:162:29       Pappa's             U       name=\"Mamma and Pappa's Books\","
  - "tests/aggregation_regress/tests.py:310:19       Sams                U       name=\"Sams Teach Yourself Django"
  - "tests/aggregation_regress/tests.py:331:19       Sams                U       name=\"Sams Teach Yourself Django"
  - "tests/aggregation_regress/tests.py:358:26       Sams                U       \"name\": \"Sams Teach Yourself Django"
  - "tests/aggregation_regress/tests.py:600:35       hardbackbook        U       contact, contact_id, hardbackbook, id, isbn, name, pages"
  - "tests/aggregation_regress/tests.py:611:35       hardbackbook        U       contact, contact_id, hardbackbook, id, isbn, name, num"
  - "tests/aggregation_regress/tests.py:700:24       fexpr               U       def test_aggregate_fexpr(self):"
  - "tests/aggregation_regress/tests.py:712:50       Kaufmann            U       1, \"name\": \"Morgan Kaufmann\", \"num_awards\": 9},"
  - "tests/aggregation_regress/tests.py:726:43       Apress              U       books\": 2, \"name\": \"Apress\", \"num_awards\": 3},"
  - "tests/aggregation_regress/tests.py:727:43       Jonno's             U       books\": 0, \"name\": \"Jonno's House of Books\", \"num"
  - "tests/aggregation_regress/tests.py:742:50       Kaufmann            U       1, \"name\": \"Morgan Kaufmann\", \"num_awards\": 9},"
  - "tests/aggregation_regress/tests.py:756:43       Apress              U       books\": 2, \"name\": \"Apress\", \"num_awards\": 3},"
  - "tests/aggregation_regress/tests.py:757:43       Jonno's             U       books\": 0, \"name\": \"Jonno's House of Books\", \"num"
  - "tests/aggregation_regress/tests.py:806:44       Jonno's             U       objects.filter(name=\"Jonno's House of Books\")"
  - "tests/aggregation_regress/tests.py:821:30       Jonno's             U       \"name\": \"Jonno's House of Books\","
  - "tests/aggregation_regress/tests.py:868:54       Apress              U       Django Projects\", 29.0, \"Apress\", \"James Bennett\"),"
  - "tests/aggregation_regress/tests.py:873:30       Forcier             U       \"Jeffrey Forcier\","
  - "tests/aggregation_regress/tests.py:875:80       Dayley              U       45.0, \"Sams\", \"Brad Dayley\"),"
  - "tests/aggregation_regress/tests.py:915:11       realiased           U       # realiased when used in a subquery"
  - "tests/aggregation_regress/tests.py:932:9        qstr                U       qstr = str("
  - "tests/aggregation_regress/tests.py:939:26       qstr                U       self.assertEqual(qstr[qstr.index(\"GROUP BY"
  - "tests/aggregation_regress/tests.py:939:31       qstr                U       self.assertEqual(qstr[qstr.index(\"GROUP BY\") :"
  - "tests/aggregation_regress/tests.py:982:54       Holovaty            U       0][\"name\"], \"Adrian Holovaty\")"
  - "tests/aggregation_regress/tests.py:992:54       Holovaty            U       0][\"name\"], \"Adrian Holovaty\")"
  - "tests/aggregation_regress/tests.py:1002:54      Holovaty            U       0][\"name\"], \"Adrian Holovaty\")"
  - "tests/aggregation_regress/tests.py:1082:64      Apress              U       p in publishers), [\"Apress\", \"Sams\"])"
  - "tests/aggregation_regress/tests.py:1305:25      Kaufmann            U       \"Morgan Kaufmann\","
  - "tests/aggregation_regress/tests.py:1419:49      LOUTER              U       join isn't promoted to LOUTER. This could"
  - "tests/aggregation_regress/tests.py:1444:26      Holovaty            U       (\"Adrian Holovaty\", 1),"
  - "tests/aggregation_regress/tests.py:1445:24      Dayley              U       (\"Brad Dayley\", 1),"
  - "tests/aggregation_regress/tests.py:1446:25      Kaplan              U       (\"Jacob Kaplan-Moss\", 0),"
  - "tests/aggregation_regress/tests.py:1448:27      Forcier             U       (\"Jeffrey Forcier\", 1),"
  - "tests/aggregation_regress/tests.py:1449:24      Bissex              U       (\"Paul Bissex\", 0),"
  - "tests/aggregation_regress/tests.py:1452:29      Chun                U       (\"Wesley J. Chun\", 0),"
  - "tests/aggregation_regress/tests.py:1471:24      Dayley              U       (\"Brad Dayley\", 1),"
  - "tests/aggregation_regress/tests.py:1472:25      Kaplan              U       (\"Jacob Kaplan-Moss\", 0),"
  - "tests/aggregation_regress/tests.py:1474:27      Forcier             U       (\"Jeffrey Forcier\", 1),"
  - "tests/aggregation_regress/tests.py:1475:24      Bissex              U       (\"Paul Bissex\", 0),"
  - "tests/aggregation_regress/tests.py:1478:29      Chun                U       (\"Wesley J. Chun\", 0),"
  - "tests/aggregation_regress/tests.py:1621:9       wmpk                U       wmpk = WithManualPK.objects"
  - "tests/aggregation_regress/tests.py:1623:23      wmpk                U       object_id=wmpk.id,"
  - "tests/aggregation_regress/tests.py:1625:60      wmpk                U       objects.get_for_model(wmpk),"
  - "tests/aggregation_regress/tests.py:1754:14      fobj                U       def test_fobj_group_by(self):"
  - "tests/aggregation_regress/tests.py:1851:55      Kaufmann            U       1\", \"name\": \"Morgan Kaufmann\", \"num_authors\": 1}"
  - "tests/aggregation_regress/tests.py:1906:42      recipeunmanaged     U       annotate(num_recipes=Count(\"recipeunmanaged\"))"
  - "tests/aggregation_regress/tests.py:1937:38      unpromoted          U       the existing join is unpromoted when doing filtering"
  - "tests/aggregation_regress/tests.py:1943:70      LOUTER              U       by annotate will be LOUTER"
  - "tests/aggregation/test_filter_argument.py:32:19         Apress      U       name=\"Apress\", num_awards=3, duration"
  - "tests/aggregation/test_filter_argument.py:46:19         Sams        U       name=\"Sams Teach Yourself Django"
  - "tests/aggregation/test_filter_argument.py:102:47        Apress      U       book__publisher__name=\"Apress\") & ~Q(friends__name"
  - "tests/aggregation/test_filter_argument.py:142:9         aggs        U       aggs = Author.objects.annotate"
  - "tests/aggregation/test_filter_argument.py:145:26        aggs        U       self.assertEqual(aggs[\"cnt\"], 2)"
  - "tests/aggregation/test_filter_argument.py:148:9         aggs        U       aggs = Author.objects.annotate"
  - "tests/aggregation/test_filter_argument.py:159:26        aggs        U       self.assertEqual(aggs[\"cnt\"], 2)"
  - "tests/aggregation/tests.py:68:53        Holovaty        U       create(name=\"Adrian Holovaty\", age=34)"
  - "tests/aggregation/tests.py:69:52        Kaplan          U       objects.create(name=\"Jacob Kaplan-Moss\", age=35)"
  - "tests/aggregation/tests.py:70:51        Dayley          U       objects.create(name=\"Brad Dayley\", age=45)"
  - "tests/aggregation/tests.py:72:54        Forcier         U       create(name=\"Jeffrey Forcier\", age=37)"
  - "tests/aggregation/tests.py:73:51        Bissex          U       objects.create(name=\"Paul Bissex\", age=29)"
  - "tests/aggregation/tests.py:74:56        Chun            U       create(name=\"Wesley J. Chun\", age=25)"
  - "tests/aggregation/tests.py:87:19        Apress          U       name=\"Apress\", num_awards=3, duration"
  - "tests/aggregation/tests.py:90:19        Sams            U       name=\"Sams\", num_awards=1, duration"
  - "tests/aggregation/tests.py:93:56        Kaufmann        U       create(name=\"Morgan Kaufmann\", num_awards=9)"
  - "tests/aggregation/tests.py:94:49        Jonno's         U       objects.create(name=\"Jonno's House of Books\", num"
  - "tests/aggregation/tests.py:108:19       Sams            U       name=\"Sams Teach Yourself Django"
  - "tests/aggregation/tests.py:177:29       Pappa's         U       name=\"Mamma and Pappa's Books\","
  - "tests/aggregation/tests.py:252:18       Sams            U       \"Sams Teach Yourself Django"
  - "tests/aggregation/tests.py:301:25       Holovaty        U       \"Adrian Holovaty\","
  - "tests/aggregation/tests.py:323:19       Sams            U       (\"Sams Teach Yourself Django"
  - "tests/aggregation/tests.py:340:19       Sams            U       (\"Sams Teach Yourself Django"
  - "tests/aggregation/tests.py:355:26       Holovaty        U       (\"Adrian Holovaty\", 4.5),"
  - "tests/aggregation/tests.py:356:24       Dayley          U       (\"Brad Dayley\", 3.0),"
  - "tests/aggregation/tests.py:357:25       Kaplan          U       (\"Jacob Kaplan-Moss\", 4.5),"
  - "tests/aggregation/tests.py:359:24       Bissex          U       (\"Paul Bissex\", 4.0),"
  - "tests/aggregation/tests.py:369:26       Holovaty        U       (\"Adrian Holovaty\", 1),"
  - "tests/aggregation/tests.py:370:24       Dayley          U       (\"Brad Dayley\", 1),"
  - "tests/aggregation/tests.py:371:25       Kaplan          U       (\"Jacob Kaplan-Moss\", 1),"
  - "tests/aggregation/tests.py:373:27       Forcier         U       (\"Jeffrey Forcier\", 1),"
  - "tests/aggregation/tests.py:374:24       Bissex          U       (\"Paul Bissex\", 1),"
  - "tests/aggregation/tests.py:377:29       Chun            U       (\"Wesley J. Chun\", 1),"
  - "tests/aggregation/tests.py:405:19       Apress          U       (\"Apress\", Decimal(\"59.69\"))"
  - "tests/aggregation/tests.py:406:19       Jonno's         U       (\"Jonno's House of Books\", None"
  - "tests/aggregation/tests.py:407:26       Kaufmann        U       (\"Morgan Kaufmann\", Decimal(\"75.00\"))"
  - "tests/aggregation/tests.py:526:26       Holovaty        U       (\"Adrian Holovaty\", 32.0),"
  - "tests/aggregation/tests.py:527:24       Dayley          U       (\"Brad Dayley\", None),"
  - "tests/aggregation/tests.py:528:25       Kaplan          U       (\"Jacob Kaplan-Moss\", 29.5),"
  - "tests/aggregation/tests.py:530:27       Forcier         U       (\"Jeffrey Forcier\", 27.0),"
  - "tests/aggregation/tests.py:531:24       Bissex          U       (\"Paul Bissex\", 31.0),"
  - "tests/aggregation/tests.py:534:29       Chun            U       (\"Wesley J. Chun\", Approximate(33.66"
  - "tests/aggregation/tests.py:550:9        aggs            U       aggs = Book.objects.aggregate"
  - "tests/aggregation/tests.py:555:26       aggs            U       self.assertEqual(aggs[\"distinct_ratings\"]"
  - "tests/aggregation/tests.py:575:35       xprice          U       Book.objects.annotate(xprice=F(\"price\"))"
  - "tests/aggregation/tests.py:590:35       xprice          U       Book.objects.annotate(xprice=F(\"price\"))"
  - "tests/aggregation/tests.py:592:32       xprice          U       .values(\"rating\", \"xprice\")"
  - "tests/aggregation/tests.py:719:15       Apress          U       [\"Apress\", \"Prentice Hall\","
  - "tests/aggregation/tests.py:729:18       Apress          U       \"Apress\","
  - "tests/aggregation/tests.py:730:18       Apress          U       \"Apress\","
  - "tests/aggregation/tests.py:768:25       Kaufmann        U       \"Morgan Kaufmann\","
  - "tests/aggregation/tests.py:781:57       Kaufmann        U       Prentice Hall\", \"Morgan Kaufmann\"],"
  - "tests/aggregation/tests.py:792:30       Kaufmann        U       [\"Sams\", \"Morgan Kaufmann\", \"Expensive Publisher"
  - "tests/aggregation/tests.py:824:50       Dayley          U       QuerySetEqual(authors, [\"Brad Dayley\"], lambda a: a.name"
  - "tests/aggregation/tests.py:1038:13      qstr            U       qstr = captured_queries["
  - "tests/aggregation/tests.py:1039:44      qstr            U       assertNotIn(\"for update\", qstr)"
  - "tests/aggregation/tests.py:1045:51      qstr            U       findall(r\"order by (\\w+)\", qstr),"
  - "tests/aggregation/tests.py:1049:46      qstr            U       assertNotIn(\"order by\", qstr)"
  - "tests/aggregation/tests.py:1050:30      qstr            U       self.assertEqual(qstr.count(\" join \"), 0)"
  - "tests/aggregation/tests.py:1056:9       thedate         U       thedate = timezone.now()"
  - "tests/aggregation/tests.py:1066:25      thedate         U       pubdate=thedate,"
  - "tests/aggregation/tests.py:1072:14      nonaggregate    U       def test_nonaggregate_aggregation_throws(self"
  - "tests/aggregation/tests.py:1099:29      Kaplan          U       (\"Jacob Kaplan-Moss\", 129),"
  - "tests/aggregation/tests.py:1101:31      Forcier         U       (\"Jeffrey Forcier\", 128),"
  - "tests/aggregation/tests.py:1102:28      Bissex          U       (\"Paul Bissex\", 120),"
  - "tests/aggregation/tests.py:1105:33      Chun            U       (\"Wesley J. Chun\", 176),"
  - "tests/aggregation/tests.py:1463:18      Jonno's         U       \"Jonno's House of Books\","
  - "tests/aggregation/tests.py:1683:45      outeref         U       ggregation_exists_multivalued_outeref(self):"
  - "tests/aggregation/tests.py:1721:27      Forcier         U       (\"Jeffrey Forcier\", 1),"
  - "tests/aggregation/tests.py:1723:29      Chun            U       (\"Wesley J. Chun\", 1),"
  - "tests/aggregation/tests.py:1885:24      Jonno's         U       [{\"name\": \"Jonno's House of Books\", \"books"
  - "tests/aggregation/tests.py:1896:27      Jonno's         U       {\"name\": \"Jonno's House of Books\", \"rating"
  - "tests/annotations/tests.py:59:53        Holovaty        U       create(name=\"Adrian Holovaty\", age=34)"
  - "tests/annotations/tests.py:60:52        Kaplan          U       objects.create(name=\"Jacob Kaplan-Moss\", age=35)"
  - "tests/annotations/tests.py:61:51        Dayley          U       objects.create(name=\"Brad Dayley\", age=45)"
  - "tests/annotations/tests.py:63:54        Forcier         U       create(name=\"Jeffrey Forcier\", age=37)"
  - "tests/annotations/tests.py:64:51        Bissex          U       objects.create(name=\"Paul Bissex\", age=29)"
  - "tests/annotations/tests.py:65:56        Chun            U       create(name=\"Wesley J. Chun\", age=25)"
  - "tests/annotations/tests.py:77:49        Apress          U       objects.create(name=\"Apress\", num_awards=3)"
  - "tests/annotations/tests.py:78:49        Sams            U       objects.create(name=\"Sams\", num_awards=1)"
  - "tests/annotations/tests.py:80:56        Kaufmann        U       create(name=\"Morgan Kaufmann\", num_awards=9)"
  - "tests/annotations/tests.py:81:49        Jonno's         U       objects.create(name=\"Jonno's House of Books\", num"
  - "tests/annotations/tests.py:95:19        Sams            U       name=\"Sams Teach Yourself Django"
  - "tests/annotations/tests.py:164:29       Pappa's         U       name=\"Mamma and Pappa's Books\","
  - "tests/annotations/tests.py:390:13       otherage        U       otherage_sum=Sum(\"other_age\""
  - "tests/annotations/tests.py:393:31       otherage        U       self.assertEqual(agg[\"otherage_sum\"], other_agg[\"age"
  - "tests/annotations/tests.py:407:14       Catelyn         U       \"Catelyn Stark\","
  - "tests/annotations/tests.py:523:14       preupdate       U       book_preupdate = Book.objects.get(pk"
  - "tests/annotations/tests.py:527:14       postupdate      U       book_postupdate = Book.objects.get(pk"
  - "tests/annotations/tests.py:528:31       preupdate       U       self.assertEqual(book_preupdate.rating - 1, book_postupdate"
  - "tests/annotations/tests.py:528:58       postupdate      U       preupdate.rating - 1, book_postupdate.rating)"
  - "tests/annotations/tests.py:552:52       Pappa's         U       Books.com\", \"Mamma and Pappa's Books\"],"
  - "tests/annotations/tests.py:619:20       Westfield       U       chain=\"Westfield\","
  - "tests/annotations/tests.py:634:28       Westfield       U       .filter(chain=\"Westfield\")"
  - "tests/annotations/tests.py:640:39       Westfield       U       Angus & Robinson\", \"Westfield\", True, \"155860191\""
  - "tests/annotations/tests.py:641:39       Westfield       U       Angus & Robinson\", \"Westfield\", True, \"159059725\""
  - "tests/annotations/tests.py:699:20       Westfield       U       chain=\"Westfield\","
  - "tests/annotations/tests.py:834:26       APPL            U       ticker_name=\"APPL\","
  - "tests/annotations/tests.py:866:28       APPL            U       (\"Apple\", \"APPL\"),"
  - "tests/annotations/tests.py:878:26       APPL            U       ticker_name=\"APPL\","
  - "tests/annotations/tests.py:922:28       APPL            U       (\"Apple\", \"APPL\".lower()),"
  - "tests/annotations/tests.py:953:54       Apress          U       value_sum\": 9, \"name\": \"Apress\"},"
  - "tests/annotations/tests.py:954:54       Jonno's         U       value_sum\": 0, \"name\": \"Jonno's House of Books\"},"
  - "tests/annotations/tests.py:955:62       Kaufmann        U       27, \"name\": \"Morgan Kaufmann\"},"
  - "tests/annotations/tests.py:957:54       Sams            U       value_sum\": 3, \"name\": \"Sams\"},"
  - "tests/annotations/tests.py:975:30       Holovaty        U       name=\"Adrian Holovaty\","
  - "tests/annotations/tests.py:991:36       Kaplan          U       jacob_name\": \"Jacob Kaplan-Moss\", \"james_name\""
  - "tests/annotations/tests.py:1014:44      Sams            U       books_qs, [{\"name\": \"Sams\"}, {\"name\": \"Morgan"
  - "tests/annotations/tests.py:1014:69      Kaufmann        U       }, {\"name\": \"Morgan Kaufmann\"}]"
  - "tests/annotations/tests.py:1038:27      Apress          U       {\"name\": \"Apress\"},"
  - "tests/annotations/tests.py:1039:27      Sams            U       {\"name\": \"Sams\"},"
  - "tests/annotations/tests.py:1041:34      Kaufmann        U       {\"name\": \"Morgan Kaufmann\"},"
  - "tests/annotations/tests.py:1135:32      Bissex          U       {\"name\": \"Paul Bissex\", \"max_pages\": 0},"
  - "tests/annotations/tests.py:1136:37      Chun            U       {\"name\": \"Wesley J. Chun\", \"max_pages\": 0},"
  - "tests/annotations/tests.py:1154:14      alia            U       \"alia s\","
  - "tests/annotations/tests.py:1195:53      Holovaty        U       create(name=\"Adrian Holovaty\", age=34)"
  - "tests/annotations/tests.py:1196:52      Kaplan          U       objects.create(name=\"Jacob Kaplan-Moss\", age=35)"
  - "tests/annotations/tests.py:1200:45      Apress          U       objects.create(name=\"Apress\", num_awards=3)"
  - "tests/annotations/tests.py:1430:25      otherage        U       ).aggregate(otherage_sum=Sum(\"other_age\""
  - "tests/app_loading/tests.py:15:24        modelapp        U       egg_name = \"%s/modelapp.egg\" % self.egg_dir"
  - "tests/app_loading/tests.py:27:24        nomodelapp      U       egg_name = \"%s/nomodelapp.egg\" % self.egg_dir"
  - "tests/app_loading/tests.py:63:24        brokenapp       U       egg_name = \"%s/brokenapp.egg\" % self.egg_dir"
  - "tests/app_loading/tests.py:65:57        modelz          U       rtRaisesMessage(ImportError, \"modelz\"):"
  - "tests/apps/apps.py:11:14        myauth      U       label = \"myauth\""
  - "tests/apps/namespace_package_base/nsapp/apps.py:8:13        nsapp       U       name = \"nsapp\""
  - "tests/apps/query_performing_app/apps.py:61:20       executemany     U       cursor.executemany("
  - "tests/apps/tests.py:172:81      myauth          U       auth'. Did you mean 'myauth'\""
  - "tests/apps/tests.py:215:72      currsize        U       settings_name.cache_info().currsize, 0)"
  - "tests/apps/tests.py:216:55      currsize        U       models.cache_info().currsize, 0)"
  - "tests/apps/tests.py:317:26      southponies     U       \"Model 'apps.southponies' was already registered"
  - "tests/apps/tests.py:330:41      southponies     U       RuntimeError, \"Conflicting 'southponies' models in application"
  - "tests/apps/tests.py:365:33      lazya           U       for model_name in [\"lazya\", \"lazyb\", \"lazyb\","
  - "tests/apps/tests.py:365:42      lazyb           U       model_name in [\"lazya\", \"lazyb\", \"lazyb\", \"lazyc\","
  - "tests/apps/tests.py:365:51      lazyb           U       [\"lazya\", \"lazyb\", \"lazyb\", \"lazyc\", \"lazya\"]"
  - "tests/apps/tests.py:365:60      lazyc           U       \"lazyb\", \"lazyb\", \"lazyc\", \"lazya\"]"
  - "tests/apps/tests.py:365:69      lazya           U       \"lazyb\", \"lazyc\", \"lazya\"]"
  - "tests/apps/tests.py:372:73      lazyb           U       pending, {(\"apps\", \"lazyb\")}"
  - "tests/apps/tests.py:376:56      lazyb           U       test_func, (\"apps\", \"lazyb\"))"
  - "tests/apps/tests.py:385:73      lazyc           U       pending, {(\"apps\", \"lazyc\")}"
  - "tests/apps/tests.py:423:14      dunder          U       def test_dunder_path(self):"
  - "tests/apps/tests.py:429:17      dunder          U       def test_no_dunder_path_fallback_to_dunder"
  - "tests/apps/tests.py:429:41      dunder          U       dunder_path_fallback_to_dunder_file(self):"
  - "tests/apps/tests.py:435:20      dunder          U       def test_empty_dunder_path_fallback_to_dunder"
  - "tests/apps/tests.py:435:44      dunder          U       dunder_path_fallback_to_dunder_file(self):"
  - "tests/apps/tests.py:508:15      nsapp           U       # We need nsapp to be top-level so our"
  - "tests/apps/tests.py:514:45      nsapp           U       join(base_location, \"nsapp\")"
  - "tests/apps/tests.py:521:49      nsapp           U       settings(INSTALLED_APPS=[\"nsapp\"]):"
  - "tests/apps/tests.py:522:51      nsapp           U       apps.get_app_config(\"nsapp\")"
  - "tests/apps/tests.py:533:30      nsapp           U       components of the \"nsapp\" package."
  - "tests/asgi/tests.py:10:49       ASGI        U       staticfiles.handlers import ASGIStaticFilesHandler"
  - "tests/asgi/tests.py:11:18       asgi        U       from django.core.asgi import get_asgi_application"
  - "tests/asgi/tests.py:11:34       asgi        U       core.asgi import get_asgi_application"
  - "tests/asgi/tests.py:13:27       asgi        U       django.core.handlers.asgi import ASGIHandler,"
  - "tests/asgi/tests.py:13:39       ASGI        U       handlers.asgi import ASGIHandler, ASGIRequest"
  - "tests/asgi/tests.py:13:52       ASGI        U       import ASGIHandler, ASGIRequest"
  - "tests/asgi/tests.py:44:34       asgi        U       settings(ROOT_URLCONF=\"asgi.urls\")"
  - "tests/asgi/tests.py:45:7        ASGI        U       class ASGITest(SimpleTestCase)"
  - "tests/asgi/tests.py:52:24       asgi        U       async def test_get_asgi_application(self):"
  - "tests/asgi/tests.py:54:54       ASGI        U       returns a functioning ASGI callable."
  - "tests/asgi/tests.py:174:24      referer     U       [b\"referer\", b\"Scotland\"],"
  - "tests/asgi/tests.py:175:24      referer     U       [b\"referer\", b\"Wales\"],"
  - "tests/asgi/urls.py:23:44        REFERER     U       request.META.get(\"HTTP_REFERER\") or \"\","
  - "tests/async/test_async_auth.py:2:5          aauthenticate       U       aauthenticate,"
  - "tests/async/test_async_auth.py:4:5          alogin              U       alogin,"
  - "tests/async/test_async_auth.py:5:5          alogout             U       alogout,"
  - "tests/async/test_async_auth.py:17:46        testpw              U       test@example.com\", \"testpw\""
  - "tests/async/test_async_auth.py:20:20        aauthenticate       U       async def test_aauthenticate(self):"
  - "tests/async/test_async_auth.py:21:22        aauthenticate       U       user = await aauthenticate(username=\"testuser\""
  - "tests/async/test_async_auth.py:21:67        testpw              U       testuser\", password=\"testpw\")"
  - "tests/async/test_async_auth.py:26:33        aauthenticate       U       self.assertIsNone(await aauthenticate(username=\"testuser\""
  - "tests/async/test_async_auth.py:26:78        testpw              U       testuser\", password=\"testpw\"))"
  - "tests/async/test_async_auth.py:28:20        alogin              U       async def test_alogin(self):"
  - "tests/async/test_async_auth.py:30:45        asession            U       = await self.client.asession()"
  - "tests/async/test_async_auth.py:31:15        alogin              U       await alogin(request, self.test_user"
  - "tests/async/test_async_auth.py:36:20        alogin              U       async def test_alogin_without_user(self):"
  - "tests/async/test_async_auth.py:39:45        asession            U       = await self.client.asession()"
  - "tests/async/test_async_auth.py:40:15        alogin              U       await alogin(request, None)"
  - "tests/async/test_async_auth.py:45:20        alogout             U       async def test_alogout(self):"
  - "tests/async/test_async_auth.py:46:65        testpw              U       testuser\", password=\"testpw\")"
  - "tests/async/test_async_auth.py:48:45        asession            U       = await self.client.asession()"
  - "tests/async/test_async_auth.py:49:15        alogout             U       await alogout(request)"
  - "tests/async/test_async_auth.py:53:27        alogout             U       async def test_client_alogout(self):"
  - "tests/async/test_async_auth.py:54:65        testpw              U       testuser\", password=\"testpw\")"
  - "tests/async/test_async_auth.py:56:45        asession            U       = await self.client.asession()"
  - "tests/async/test_async_auth.py:57:27        alogout             U       await self.client.alogout()"
  - "tests/async/test_async_auth.py:64:45        asession            U       = await self.client.asession()"
  - "tests/async/test_async_auth.py:75:27        aforce              U       async def test_client_aforce_login(self):"
  - "tests/async/test_async_auth.py:76:27        aforce              U       await self.client.aforce_login(self.test_user"
  - "tests/async/test_async_auth.py:88:27        aforce              U       async def test_client_aforce_login_backend(self)"
  - "tests/async/test_async_auth.py:91:27        aforce              U       await self.client.aforce_login("
  - "tests/async/test_async_model_methods.py:14:9        refetched       U       refetched = await SimpleModel"
  - "tests/async/test_async_model_methods.py:15:26       refetched       U       self.assertEqual(refetched.field, 10)"
  - "tests/async/test_async_queryset.py:56:23        relatedmodel    U       Prefetch(\"relatedmodel_set\", to_attr=\"prefetched"
  - "tests/async/test_async_queryset.py:56:62        relatedmodel    U       to_attr=\"prefetched_relatedmodel\")"
  - "tests/async/test_async_queryset.py:58:41        relatedmodel    U       append(s.prefetched_relatedmodel)"
  - "tests/async/test_async_queryset.py:257:44       simplemodel     U       id, field FROM async_simplemodel WHERE created=%s\""
  - "tests/async/test_async_related_managers.py:20:23        relatedmodel    U       await self.s1.relatedmodel_set.acreate()"
  - "tests/async/test_async_related_managers.py:21:13        relatedmodel    U       new_relatedmodel = await self.s1.relatedmodel"
  - "tests/async/test_async_related_managers.py:21:42        relatedmodel    U       relatedmodel = await self.s1.relatedmodel_set.aget()"
  - "tests/async/test_async_related_managers.py:22:30        relatedmodel    U       self.assertEqual(new_relatedmodel.simple, self.s1)"
  - "tests/async/test_async_related_managers.py:37:13        relatedmodel    U       new_relatedmodel, created = await self"
  - "tests/async/test_async_shortcuts.py:23:46       relatedmodel    U       object_or_404(self.s1.relatedmodel_set, pk=self.r1.pk)"
  - "tests/async/test_async_shortcuts.py:37:44       relatedmodel    U       list_or_404(self.s1.relatedmodel_set, pk=self.r1.pk)"
  - "tests/auth_tests/models/proxy.py:12:34          proxys      U       permissions = ((\"display_proxys\", \"May display proxys"
  - "tests/auth_tests/models/proxy.py:12:56          proxys      U       proxys\", \"May display proxys information\"),)"
  - "tests/auth_tests/test_auth_backends.py:9:5          aauthenticate       U       aauthenticate,"
  - "tests/auth_tests/test_auth_backends.py:178:12       Regressiontest      U       \"\"\"Regressiontest for #12462\"\"\""
  - "tests/auth_tests/test_auth_backends.py:737:36       mypassword          U       sensitive_password = \"mypassword\""
  - "tests/auth_tests/test_auth_backends.py:752:36       testusername        U       authenticate(username=\"testusername\", password=self.sensitive"
  - "tests/auth_tests/test_auth_backends.py:770:20       aauthenticate       U       async def test_aauthenticate_sensitive_variables"
  - "tests/auth_tests/test_auth_backends.py:772:19       aauthenticate       U       await aauthenticate("
  - "tests/auth_tests/test_auth_backends.py:773:27       testusername        U       username=\"testusername\", password=self.sensitive"
  - "tests/auth_tests/test_auth_backends.py:842:41       thismodel           U       settings(AUTH_USER_MODEL=\"thismodel.doesntexist\")"
  - "tests/auth_tests/test_auth_backends.py:842:51       doesntexist         U       USER_MODEL=\"thismodel.doesntexist\")"
  - "tests/auth_tests/test_auth_backends.py:849:47       thismodel           U       MODEL refers to model 'thismodel.doesntexist' \""
  - "tests/auth_tests/test_auth_backends.py:849:57       doesntexist         U       to model 'thismodel.doesntexist' \""
  - "tests/auth_tests/test_basic.py:18:71        testpw          U       test@example.com\", \"testpw\")"
  - "tests/auth_tests/test_basic.py:21:43        testpw          U       assertTrue(u.check_password(\"testpw\"))"
  - "tests/auth_tests/test_basic.py:26:44        testpw          U       assertFalse(u.check_password(\"testpw\"))"
  - "tests/auth_tests/test_basic.py:28:25        testpw          U       u.set_password(\"testpw\")"
  - "tests/auth_tests/test_basic.py:29:43        testpw          U       assertTrue(u.check_password(\"testpw\"))"
  - "tests/auth_tests/test_basic.py:48:35        jörg            U       objects.create_user(\"jörg\")"
  - "tests/auth_tests/test_basic.py:49:35        Григорий        U       objects.create_user(\"Григорий\")"
  - "tests/auth_tests/test_basic.py:51:27        iamthe          U       omega_username = \"iamtheΩ\" # U+03A9 GREEK CAPITAL"
  - "tests/auth_tests/test_basic.py:52:25        iamthe          U       ohm_username = \"iamtheΩ\" # U+2126 OHM SIGN"
  - "tests/auth_tests/test_basic.py:100:41       badsetting      U       settings(AUTH_USER_MODEL=\"badsetting\")"
  - "tests/auth_tests/test_basic.py:107:41       thismodel       U       settings(AUTH_USER_MODEL=\"thismodel.doesntexist\")"
  - "tests/auth_tests/test_basic.py:107:51       doesntexist     U       USER_MODEL=\"thismodel.doesntexist\")"
  - "tests/auth_tests/test_basic.py:111:47       thismodel       U       MODEL refers to model 'thismodel.doesntexist' \""
  - "tests/auth_tests/test_basic.py:111:57       doesntexist     U       to model 'thismodel.doesntexist' \""
  - "tests/auth_tests/test_basic.py:123:56       usuario         U       meta.verbose_name, \"usuario\")"
  - "tests/auth_tests/test_basic.py:124:63       usuarios        U       verbose_name_plural, \"usuarios\")"
  - "tests/auth_tests/test_basic.py:136:45       asession        U       = await self.client.asession()"
  - "tests/auth_tests/test_basic.py:160:25       newsecret       U       SECRET_KEY=\"newsecret\","
  - "tests/auth_tests/test_basic.py:169:44       newsecret       U       settings(SECRET_KEY=\"newsecret\"):"
  - "tests/auth_tests/test_basic.py:178:27       alogin          U       await self.client.alogin(username=\"testuser\""
  - "tests/auth_tests/test_basic.py:180:45       asession        U       = await self.client.asession()"
  - "tests/auth_tests/test_context_processors.py:19:33       someperm            U       return perm == \"mockapp.someperm\""
  - "tests/auth_tests/test_context_processors.py:45:14       permwrapper         U       def test_permwrapper_in(self):"
  - "tests/auth_tests/test_context_processors.py:53:32       someperm            U       self.assertIn(\"mockapp.someperm\", perms)"
  - "tests/auth_tests/test_context_processors.py:56:14       permlookupdict      U       def test_permlookupdict_in(self):"
  - "tests/auth_tests/test_context_processors.py:60:9        pldict              U       pldict = PermLookupDict(MockUser"
  - "tests/auth_tests/test_context_processors.py:62:39       pldict              U       EQLimiterObject() in pldict"
  - "tests/auth_tests/test_context_processors.py:149:46      someflag            U       context[\"user\"]) & Q(someflag=True)"
  - "tests/auth_tests/test_decorators.py:91:19       auser           U       async def auser_anonymous():"
  - "tests/auth_tests/test_decorators.py:94:19       auser           U       async def auser():"
  - "tests/auth_tests/test_decorators.py:104:17      auser           U       request.auser = auser_anonymous"
  - "tests/auth_tests/test_decorators.py:104:25      auser           U       request.auser = auser_anonymous"
  - "tests/auth_tests/test_decorators.py:109:17      auser           U       request.auser = auser"
  - "tests/auth_tests/test_decorators.py:219:14      permissioned    U       def test_permissioned_denied_redirect(self"
  - "tests/auth_tests/test_decorators.py:235:14      permissioned    U       def test_permissioned_denied_exception_raised"
  - "tests/auth_tests/test_decorators.py:286:20      permissioned    U       async def test_permissioned_denied_redirect_async"
  - "tests/auth_tests/test_decorators.py:302:20      permissioned    U       async def test_permissioned_denied_exception_raised"
  - "tests/auth_tests/test_forms.py:104:26       jsmith              U       \"username\": \"jsmith!\","
  - "tests/auth_tests/test_forms.py:120:26       jsmith              U       \"username\": \"jsmith\","
  - "tests/auth_tests/test_forms.py:132:30       jsmith              U       data = {\"username\": \"jsmith\"}"
  - "tests/auth_tests/test_forms.py:199:27       iamthe              U       omega_username = \"iamtheΩ\" # U+03A9 GREEK CAPITAL"
  - "tests/auth_tests/test_forms.py:200:25       iamthe              U       ohm_username = \"iamtheΩ\" # U+2126 OHM SIGN"
  - "tests/auth_tests/test_forms.py:234:26       otherclient         U       \"username\": \"otherclient\","
  - "tests/auth_tests/test_forms.py:235:27       otherclient         U       \"password1\": \"otherclient\","
  - "tests/auth_tests/test_forms.py:236:27       otherclient         U       \"password2\": \"otherclient\","
  - "tests/auth_tests/test_forms.py:473:26       jsmith              U       \"username\": \"jsmith_does_not_exist\","
  - "tests/auth_tests/test_forms.py:606:44       Σαρα                U       create_user(username=\"Σαρα\", password=\"pwd\")"
  - "tests/auth_tests/test_forms.py:608:26       Σαρα                U       \"username\": \"Σαρα\","
  - "tests/auth_tests/test_forms.py:678:56       credentails         U       necessary to have valid credentails for the test."
  - "tests/auth_tests/test_forms.py:859:14       Votre               U       \"Votre mot de passe ne peut"
  - "tests/auth_tests/test_forms.py:859:36       peut                U       Votre mot de passe ne peut pas trop ressembler"
  - "tests/auth_tests/test_forms.py:859:50       ressembler          U       passe ne peut pas trop ressembler à vos autres informations"
  - "tests/auth_tests/test_forms.py:859:67       autres              U       trop ressembler à vos autres informations \""
  - "tests/auth_tests/test_forms.py:859:74       informations        U       ressembler à vos autres informations \""
  - "tests/auth_tests/test_forms.py:860:14       personnelles        U       \"personnelles.\","
  - "tests/auth_tests/test_forms.py:861:14       Votre               U       \"Votre mot de passe doit contenir"
  - "tests/auth_tests/test_forms.py:861:38       contenir            U       Votre mot de passe doit contenir au minimum 12 caract"
  - "tests/auth_tests/test_forms.py:861:61       caractères          U       contenir au minimum 12 caractères.\","
  - "tests/auth_tests/test_forms.py:959:31       oldpassword         U       user.set_password(\" oldpassword \")"
  - "tests/auth_tests/test_forms.py:961:33       oldpassword         U       \"old_password\": \" oldpassword \","
  - "tests/auth_tests/test_forms.py:1158:21      jsmith              U       username = \"jsmith\""
  - "tests/auth_tests/test_forms.py:1180:51      ıxample             U       user(\"mike456\", \"mike@ıxample.org\", \"test123\")"
  - "tests/auth_tests/test_forms.py:1181:32      ıxample             U       data = {\"email\": \"mike@ıxample.org\"}"
  - "tests/auth_tests/test_forms.py:1185:47      ıxample             U       ertEmailMessageSent(to=[\"mike@ıxample.org\"])"
  - "tests/auth_tests/test_forms.py:1197:32      ıxample             U       data = {\"email\": \"mike@ıxample.org\"}"
  - "tests/auth_tests/test_forms.py:1361:45      catched             U       email_exceptions_are_catched_and_logged(self):"
  - "tests/auth_tests/test_forms.py:1411:37      Pucb                U       pbkdf2_sha256$100000$a6Pucb1qSFcD$WmCkn9Hqidj48NVe"
  - "tests/auth_tests/test_forms.py:1420:48      Pucb                U       salt</strong>: <bdi>a6Pucb******</bdi>\""
  - "tests/auth_tests/test_forms.py:1436:45      labelable           U       it doesn't have any labelable elements."
  - "tests/auth_tests/test_forms.py:1584:28      complexpassword     U       {\"password1\": \"complexpassword\", \"password2\": \"complexpasswo"
  - "tests/auth_tests/test_forms.py:1584:60      complexpassword     U       mplexpassword\", \"password2\": \"complexpassword\"},"
  - "tests/auth_tests/test_forms.py:1638:26      otherclient         U       \"username\": \"otherclient\","
  - "tests/auth_tests/test_forms.py:1639:27      otherclient         U       \"password1\": \"otherclient\","
  - "tests/auth_tests/test_handlers.py:1:35          modwsgi     U       contrib.auth.handlers.modwsgi import check_password"
  - "tests/auth_tests/test_hashers.py:15:5           acheck          U       acheck_password,"
  - "tests/auth_tests/test_hashers.py:51:34          lètmein         U       encoded = make_password(\"lètmein\")"
  - "tests/auth_tests/test_hashers.py:54:41          lètmein         U       assertTrue(check_password(\"lètmein\", encoded))"
  - "tests/auth_tests/test_hashers.py:55:42          lètmeinz        U       assertFalse(check_password(\"lètmeinz\", encoded))"
  - "tests/auth_tests/test_hashers.py:63:20          acheck          U       async def test_acheck_password(self):"
  - "tests/auth_tests/test_hashers.py:64:34          lètmein         U       encoded = make_password(\"lètmein\")"
  - "tests/auth_tests/test_hashers.py:65:29          acheck          U       self.assertIs(await acheck_password(\"lètmein\","
  - "tests/auth_tests/test_hashers.py:65:46          lètmein         U       await acheck_password(\"lètmein\", encoded), True)"
  - "tests/auth_tests/test_hashers.py:66:29          acheck          U       self.assertIs(await acheck_password(\"lètmeinz\""
  - "tests/auth_tests/test_hashers.py:66:46          lètmeinz        U       await acheck_password(\"lètmeinz\", encoded), False)"
  - "tests/auth_tests/test_hashers.py:69:29          acheck          U       self.assertIs(await acheck_password(\"\", blank_encoded"
  - "tests/auth_tests/test_hashers.py:84:34          lètmein         U       encoded = make_password(\"lètmein\", \"seasalt\", \"pbkdf"
  - "tests/auth_tests/test_hashers.py:92:42          lètmeinz        U       assertFalse(check_password(\"lètmeinz\", encoded))"
  - "tests/auth_tests/test_hashers.py:115:42         lètmeinz        U       assertFalse(check_password(\"lètmeinz\", encoded))"
  - "tests/auth_tests/test_hashers.py:136:42         lètmeinz        U       assertFalse(check_password(\"lètmeinz\", encoded))"
  - "tests/auth_tests/test_hashers.py:185:38         letmein         U       encoded = make_password(\"letmein\", hasher=\"bcrypt\")"
  - "tests/auth_tests/test_hashers.py:195:45         letmein         U       assertTrue(check_password(\"letmein\", encoded, setter,"
  - "tests/auth_tests/test_hashers.py:202:45         letmein         U       assertTrue(check_password(\"letmein\", encoded, setter,"
  - "tests/auth_tests/test_hashers.py:216:38         letmein         U       encoded = make_password(\"letmein\", hasher=\"bcrypt\")"
  - "tests/auth_tests/test_hashers.py:271:31         badencoded      U       passwords = (\"lètmein_badencoded\", \"\", None)"
  - "tests/auth_tests/test_hashers.py:301:14         bcryptsha       U       def test_bcryptsha256_salt_check(self)"
  - "tests/auth_tests/test_hashers.py:365:38         letmein         U       encoded = make_password(\"letmein\")"
  - "tests/auth_tests/test_hashers.py:612:55         QOXS            U       1,p=1$c29tZXNhbHQ$gwQOXSNhxiOxPOA0+PY10P9QFO"
  - "tests/auth_tests/test_hashers.py:612:59         Nhxi            U       1$c29tZXNhbHQ$gwQOXSNhxiOxPOA0+PY10P9QFO\""
  - "tests/auth_tests/test_hashers.py:647:60         Nklj            U       400,t=2,p=8$Y041dExhNkljRUUy$TMa6A8fPJh\""
  - "tests/auth_tests/test_hashers.py:648:14         CAUX            U       \"CAUXRhJXCXdw\""
  - "tests/auth_tests/test_management.py:141:53      xfalia                              U       username = lambda: \"J\\xfalia\""
  - "tests/auth_tests/test_management.py:245:46      xfalia                              U       create_user(username=\"J\\xfalia\", password=\"qwerty\""
  - "tests/auth_tests/test_management.py:246:52      xfalia                              U       changepassword\", username=\"J\\xfalia\", stdout=self.stdout"
  - "tests/auth_tests/test_management.py:330:18      Uživatel                            U       \"Uživatel (leave blank to use"
  - "tests/auth_tests/test_management.py:338:52      eivatel                             U       verbose_name = _(\"u\\u017eivatel\")"
  - "tests/auth_tests/test_management.py:509:44      mygroup                             U       objects.create(name=\"mygroup\")"
  - "tests/auth_tests/test_management.py:539:44      mygroup                             U       objects.create(name=\"mygroup\")"
  - "tests/auth_tests/test_management.py:569:44      mygroup                             U       objects.create(name=\"mygroup\")"
  - "tests/auth_tests/test_management.py:811:21      supremelycomplex                    U       username = \"supremelycomplex\""
  - "tests/auth_tests/test_management.py:815:14      superduperunguessablepassword       U       \"superduperunguessablepassword\","
  - "tests/auth_tests/test_management.py:816:14      superduperunguessablepassword       U       \"superduperunguessablepassword\","
  - "tests/auth_tests/test_management.py:863:14      superduperunguessablepassword       U       \"superduperunguessablepassword\","
  - "tests/auth_tests/test_management.py:864:14      superduperunguessablepassword       U       \"superduperunguessablepassword\","
  - "tests/auth_tests/test_management.py:913:14      superduperunguessablepassword       U       \"superduperunguessablepassword\","
  - "tests/auth_tests/test_management.py:1266:14     usermodel                           U       def test_usermodel_without_password(self"
  - "tests/auth_tests/test_management.py:1279:14     usermodel                           U       def test_usermodel_without_password_interactive"
  - "tests/auth_tests/test_middleware.py:27:33       doesnt (doesn't)    U       test_no_password_change_doesnt_invalidate_session(self"
  - "tests/auth_tests/test_middleware.py:53:20       auser               U       async def test_auser(self):"
  - "tests/auth_tests/test_middleware.py:55:9        auser               U       auser = await self.request"
  - "tests/auth_tests/test_middleware.py:55:36       auser               U       await self.request.auser()"
  - "tests/auth_tests/test_middleware.py:56:26       auser               U       self.assertEqual(auser, self.user)"
  - "tests/auth_tests/test_middleware.py:57:9        auser               U       auser_second = await self"
  - "tests/auth_tests/test_migrations.py:127:31      proxys      U       codename=\"display_proxys\","
  - "tests/auth_tests/test_migrations.py:128:31      proxys      U       name=\"May display proxys information\","
  - "tests/auth_tests/test_migrations.py:207:31      proxys      U       codename=\"display_proxys\","
  - "tests/auth_tests/test_migrations.py:208:31      proxys      U       name=\"May display proxys information\","
  - "tests/auth_tests/test_mixins.py:274:14      permissioned    U       def test_permissioned_denied_redirect(self"
  - "tests/auth_tests/test_mixins.py:292:14      permissioned    U       def test_permissioned_denied_exception_raised"
  - "tests/auth_tests/test_models.py:63:24       examplemodela       U       model=\"examplemodela\","
  - "tests/auth_tests/test_models.py:67:24       examplemodelb       U       model=\"examplemodelb\","
  - "tests/auth_tests/test_models.py:73:24       examplemodelb       U       model=\"examplemodelb\","
  - "tests/auth_tests/test_models.py:77:24       examplemodela       U       model=\"examplemodela\","
  - "tests/auth_tests/test_models.py:85:30       examplemodelb       U       codename=\"delete_examplemodelb\","
  - "tests/auth_tests/test_models.py:90:30       examplemodelb       U       codename=\"delete_examplemodelb\","
  - "tests/auth_tests/test_models.py:95:21       examplemodelb       U       \"delete_examplemodelb\","
  - "tests/auth_tests/test_models.py:200:43      gibbberish          U       User(password=\"some-gibbberish\").has_usable_password"
  - "tests/auth_tests/test_models.py:207:25      iamthe              U       ohm_username = \"iamtheΩ\" # U+2126 OHM SIGN"
  - "tests/auth_tests/test_models.py:216:32      iamthe              U       username, \"iamtheΩ\""
  - "tests/auth_tests/test_models.py:303:20      acheck              U       async def test_acheck_password_upgrade(self"
  - "tests/auth_tests/test_models.py:308:34      acheck              U       assertIs(await user.acheck_password(\"foo\"), True"
  - "tests/auth_tests/test_models.py:319:42      acheck              U       assertIs(await user.acheck_password(\"foo\"), True"
  - "tests/auth_tests/test_models.py:330:49      charliebrown        U       and obj.username == \"charliebrown\":"
  - "tests/auth_tests/test_models.py:357:14      charliebrown        U       \"charliebrown\", \"charlie@brown.com"
  - "tests/auth_tests/test_models.py:363:14      superpassword       U       \"superpassword\","
  - "tests/auth_tests/test_models.py:375:23      nodots              U       for perm in (\"nodots\", \"too.many.dots\","
  - "tests/auth_tests/test_models.py:491:27      isactive            U       def test_builtin_user_isactive(self):"
  - "tests/auth_tests/test_models.py:603:51      customemailfield    U       objects.get(codename=\"view_customemailfield\")"
  - "tests/auth_tests/test_remote_user.py:59:34          fakeuser        U       headers = {self.header: \"fakeuser\"}"
  - "tests/auth_tests/test_remote_user.py:143:22         remoteuser      U       # verify the remoteuser middleware will not"
  - "tests/auth_tests/test_remote_user.py:161:70         newnewuser      U       \", **{self.header: \"newnewuser\"})"
  - "tests/auth_tests/test_remote_user.py:163:60         newnewuser      U       new user, username is \"newnewuser\""
  - "tests/auth_tests/test_remote_user.py:279:20         AUTHUSER        U       header = \"HTTP_AUTHUSER\""
  - "tests/auth_tests/test_remote_user.py:289:20         AUTHUSER        U       header = \"HTTP_AUTHUSER\""
  - "tests/auth_tests/test_templates.py:27:42        jsmith      U       objects.create_user(\"jsmith\", \"jsmith@example.com"
  - "tests/auth_tests/test_templates.py:29:45        somepath    U       request_factory.get(\"/somepath/\")"
  - "tests/auth_tests/test_templates.py:57:48        uidb        U       reset_confirm\", kwargs={\"uidb64\": \"Bad\", \"token\":"
  - "tests/auth_tests/test_templates.py:70:9         uidb        U       uidb64 = urlsafe_base64_encode"
  - "tests/auth_tests/test_templates.py:72:48        uidb        U       reset_confirm\", kwargs={\"uidb64\": uidb64, \"token\""
  - "tests/auth_tests/test_templates.py:72:57        uidb        U       , kwargs={\"uidb64\": uidb64, \"token\": token}"
  - "tests/auth_tests/test_templates.py:83:67        jsmith      U       utocomplete=\"username\" value=\"jsmith\">',"
  - "tests/auth_tests/test_templates.py:90:9         uidb        U       uidb64 = urlsafe_base64_encode"
  - "tests/auth_tests/test_tokens.py:24:42       tokentestuser       U       objects.create_user(\"tokentestuser\", \"test2@example.com"
  - "tests/auth_tests/test_tokens.py:24:80       testpw              U       test2@example.com\", \"testpw\")"
  - "tests/auth_tests/test_tokens.py:34:42       comebackkid         U       objects.create_user(\"comebackkid\", \"test3@example.com"
  - "tests/auth_tests/test_tokens.py:34:78       testpw              U       test3@example.com\", \"testpw\")"
  - "tests/auth_tests/test_tokens.py:35:50       comebackkid         U       objects.get(username=\"comebackkid\")"
  - "tests/auth_tests/test_tokens.py:51:22       changeemailuser     U       \"changeemailuser\","
  - "tests/auth_tests/test_tokens.py:53:31       testpw              U       password=\"testpw\","
  - "tests/auth_tests/test_tokens.py:66:42       tokentestuser       U       objects.create_user(\"tokentestuser\", \"test2@example.com"
  - "tests/auth_tests/test_tokens.py:66:80       testpw              U       test2@example.com\", \"testpw\")"
  - "tests/auth_tests/test_tokens.py:89:42       tokentestuser       U       objects.create_user(\"tokentestuser\", \"test2@example.com"
  - "tests/auth_tests/test_tokens.py:89:80       testpw              U       test2@example.com\", \"testpw\")"
  - "tests/auth_tests/test_tokens.py:100:42      tokentestuser       U       objects.create_user(\"tokentestuser\", \"test2@example.com"
  - "tests/auth_tests/test_tokens.py:120:42      tokentestuser       U       objects.create_user(\"tokentestuser\", \"test2@example.com"
  - "tests/auth_tests/test_tokens.py:149:22      newsecret           U       p2.secret = \"newsecret\""
  - "tests/auth_tests/test_validators.py:270:44      ᴮᴵᴳᴮᴵᴿᴰ             U       usernames = [\"joe\", \"René\", \"ᴮᴵᴳᴮᴵᴿᴰ\", \"أحمد\"]"
  - "tests/auth_tests/test_validators.py:270:55      أحمد                U       \"René\", \"ᴮᴵᴳᴮᴵᴿᴰ\", \"أحمد\"]"
  - "tests/auth_tests/test_validators.py:274:14      zerowidth           U       \"zerowidth\\u200Bspace\","
  - "tests/auth_tests/test_validators.py:275:14      nonbreaking         U       \"nonbreaking\\u00A0space\","
  - "tests/auth_tests/test_validators.py:277:14      trailingnewline     U       \"trailingnewline\\u000A\","
  - "tests/auth_tests/test_validators.py:294:14      أحمد                U       \"أحمد\","
  - "tests/auth_tests/test_validators.py:295:14      trailingnewline     U       \"trailingnewline\\n\","
  - "tests/auth_tests/test_views.py:116:22       uidb                U       \"uidb64\": \"aaaaaaa\","
  - "tests/auth_tests/test_views.py:280:35       anewpassword        U       \"new_password1\": \"anewpassword\","
  - "tests/auth_tests/test_views.py:281:36       anewpassword        U       \"new_password2\": \" anewpassword\","
  - "tests/auth_tests/test_views.py:286:47       anewpassword        U       not u.check_password(\"anewpassword\"))"
  - "tests/auth_tests/test_views.py:300:35       anewpassword        U       \"new_password1\": \"anewpassword\","
  - "tests/auth_tests/test_views.py:301:35       anewpassword        U       \"new_password2\": \"anewpassword\","
  - "tests/auth_tests/test_views.py:383:44       passwordcustom      U       reset_url_token = \"set-passwordcustom\""
  - "tests/auth_tests/test_views.py:448:51       uidb                U       resolver_match.kwargs[\"uidb64\"]"
  - "tests/auth_tests/test_views.py:458:51       uidb                U       resolver_match.kwargs[\"uidb64\"]"
  - "tests/auth_tests/test_views.py:460:51       passwordcustom      U       custom/token/%s/set-passwordcustom/\" % uuidb64"
  - "tests/auth_tests/test_views.py:471:43       uidb                U       URL path must contain 'uidb64' and 'token' parameters"
  - "tests/auth_tests/test_views.py:482:56       uidb                U       reset_confirm\", kwargs={\"uidb64\": \"abc\", \"token\":"
  - "tests/auth_tests/test_views.py:1255:21      doesnt (doesn't)    U       def test_logout_doesnt_cache(self):"
  - "tests/auth_tests/test_views.py:1535:53      rsaquo              U       admin.username}</a>\\n&rsaquo; Change password\""
  - "tests/auth_tests/test_views.py:1629:52      rsaquo              U       user.username}</a>\\n&rsaquo; Set password\""
  - "tests/auth_tests/test_views.py:1709:29      shouldnotchange     U       data[\"password\"] = \"shouldnotchange\""
  - "tests/auth_tests/test_views.py:1729:43      uuiduser            U       user_admin:auth_tests_uuiduser_change\", args=(u.pk"
  - "tests/auth_tests/test_views.py:1739:64      uuiduser            U       form method=\"post\" id=\"uuiduser_form\">')"
  - "tests/auth_tests/urls.py:172:24         uidb                U       \"reset/custom/<uidb64>/<token>/\","
  - "tests/auth_tests/urls.py:176:30         uidb                U       reset/custom/named/<uidb64>/<token>/\","
  - "tests/auth_tests/urls.py:182:30         uidb                U       reset/custom/token/<uidb64>/<token>/\","
  - "tests/auth_tests/urls.py:183:69         passwordcustom      U       reset_url_token=\"set-passwordcustom\"),"
  - "tests/auth_tests/urls.py:186:34         uidb                U       reset/post_reset_login/<uidb64>/<token>/\","
  - "tests/auth_tests/urls.py:190:49         uidb                U       login_custom_backend/<uidb64>/<token>/\","
  - "tests/backends/base/test_base.py:123:14         executemany     U       def call_executemany(self, connection, params"
  - "tests/backends/base/test_base.py:124:11         executemany     U       # executemany() must use an update"
  - "tests/backends/base/test_base.py:130:20         executemany     U       cursor.executemany(sql, params)"
  - "tests/backends/base/test_base.py:150:23         executemany     U       self.call_executemany(connection)"
  - "tests/backends/base/test_base.py:166:23         executemany     U       self.call_executemany(connection)"
  - "tests/backends/base/test_creation.py:35:22          hodor               U       prod_name = \"hodor\""
  - "tests/backends/base/test_creation.py:44:22          hodor               U       test_name = \"hodor\""
  - "tests/backends/base/test_creation.py:52:45          hodor               U       TEST_DATABASE_PREFIX + \"hodor\""
  - "tests/backends/base/test_creation.py:148:44         DJANGOS             U       os.environ, {\"RUNNING_DJANGOS_TEST_SUITE\": \"\"})"
  - "tests/backends/base/test_creation.py:156:17         DJANGOS             U       RUNNING_DJANGOS_TEST_SUITE is 'true"
  - "tests/backends/base/test_creation.py:186:36         objectreference     U       \"model\": \"backends.objectreference\","
  - "tests/backends/base/test_creation.py:251:43         schoolclass         U       '\"model\": \"backends.schoolclass\"', data)"
  - "tests/backends/base/test_creation.py:255:9          sclass              U       sclass = SchoolClass.objects"
  - "tests/backends/base/test_creation.py:259:13         schoolclasses       U       bus.schoolclasses.add(sclass)"
  - "tests/backends/base/test_creation.py:259:31         sclass              U       bus.schoolclasses.add(sclass)"
  - "tests/backends/base/test_creation.py:266:43         schoolbus           U       '\"model\": \"backends.schoolbus\"', data)"
  - "tests/backends/base/test_creation.py:267:43         schoolclass         U       '\"model\": \"backends.schoolclass\"', data)"
  - "tests/backends/base/test_creation.py:268:26         schoolclasses       U       self.assertIn(f'\"schoolclasses\": [{sclass.pk}]', data"
  - "tests/backends/base/test_creation.py:268:44         sclass              U       f'\"schoolclasses\": [{sclass.pk}]', data)"
  - "tests/backends/models.py:37:57          schoolclasses       U       ).prefetch_related(\"schoolclasses\")"
  - "tests/backends/models.py:42:5           schoolclasses       U       schoolclasses = models.ManyToManyField"
  - "tests/backends/mysql/test_creation.py:14:66         keepdb          U       cursor, parameters, keepdb=False):"
  - "tests/backends/mysql/test_creation.py:19:64         keepdb          U       cursor, parameters, keepdb=False):"
  - "tests/backends/mysql/test_creation.py:38:57         keepdb          U       autoclobber=False, keepdb=False"
  - "tests/backends/mysql/test_creation.py:40:55         keepdb          U       shouldn't appear when keepdb is on"
  - "tests/backends/mysql/test_creation.py:41:70         keepdb          U       autoclobber=False, keepdb=True)"
  - "tests/backends/mysql/test_creation.py:80:34         mysqldump       U       \"mysqldump\","
  - "tests/backends/mysql/test_schema.py:15:19       hablas      U       (\"¿Tú hablas inglés?\", \"'¿Tú hablas"
  - "tests/backends/mysql/test_schema.py:15:42       hablas      U       hablas inglés?\", \"'¿Tú hablas inglés?'\"),"
  - "tests/backends/oracle/test_creation.py:54:59        keepdb      U       test_db(verbosity=0, keepdb=False)"
  - "tests/backends/oracle/test_creation.py:55:65        keepdb      U       error is ignored when keepdb is on"
  - "tests/backends/oracle/test_creation.py:56:51        keepdb      U       test_db(verbosity=0, keepdb=True)"
  - "tests/backends/oracle/test_creation.py:60:55        keepdb      U       test_db(verbosity=0, keepdb=False)"
  - "tests/backends/oracle/test_creation.py:62:55        keepdb      U       test_db(verbosity=0, keepdb=True)"
  - "tests/backends/oracle/test_creation.py:92:27        sqls        U       self.tblspace_sqls = statements"
  - "tests/backends/oracle/test_creation.py:105:72       sqls        U       = creation.tblspace_sqls"
  - "tests/backends/oracle/test_introspection.py:68:16       mview       U       person_mview = connection.introspection"
  - "tests/backends/oracle/test_introspection.py:69:26       MVIEW       U       \"TEST_PERSON_MVIEW\""
  - "tests/backends/oracle/test_introspection.py:74:52       mview       U       MATERIALIZED VIEW {person_mview} \""
  - "tests/backends/oracle/test_introspection.py:80:36       mview       U       cursor, person_mview"
  - "tests/backends/oracle/test_introspection.py:86:65       mview       U       MATERIALIZED VIEW {person_mview}\")"
  - "tests/backends/oracle/test_operations.py:16:21          authorwithevenlongee    U       \"schema_authorwithevenlongee869\""
  - "tests/backends/oracle/test_operations.py:18:44          AUTHORWITHEVENLOB       U       assertEqual(seq_name, \"SCHEMA_AUTHORWITHEVENLOB0B8_SQ\")"
  - "tests/backends/oracle/test_operations.py:67:36          VERYLONGMODELNAME       U       ALTER TABLE \"BACKENDS_VERYLONGMODELNAME540F\" DISABLE CONSTRAINT"
  - "tests/backends/oracle/test_operations.py:75:43          VERYLONGMODELNAME       U       TRUNCATE TABLE \"BACKENDS_VERYLONGMODELNAME540F\";',"
  - "tests/backends/oracle/test_operations.py:80:36          VERYLONGMODELNAME       U       ALTER TABLE \"BACKENDS_VERYLONGMODELNAME540F\" ENABLE CONSTRAINT"
  - "tests/backends/oracle/test_operations.py:123:36         VERYLONGMODELNAME       U       ALTER TABLE \"BACKENDS_VERYLONGMODELNAME540F\" DISABLE CONSTRAINT"
  - "tests/backends/oracle/test_operations.py:131:43         VERYLONGMODELNAME       U       TRUNCATE TABLE \"BACKENDS_VERYLONGMODELNAME540F\";',"
  - "tests/backends/oracle/test_operations.py:142:33         VERYLONGMODELN          U       self.assertIn(\"BACKENDS_VERYLONGMODELN7BE2_SQ\", statements"
  - "tests/backends/oracle/tests.py:25:27        verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz     U       \"backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\","
  - "tests/backends/oracle/tests.py:48:67        SYSDATE                                                         U       1936-12-29 00:00' < SYSDATE\""
  - "tests/backends/oracle/tests.py:110:51       ssword                                                          U       dict[\"PASSWORD\"] = \"p@ssword\""
  - "tests/backends/oracle/tests.py:113:22       ssword                                                          U       '/\"p@ssword\"@',"
  - "tests/backends/postgresql/test_creation.py:73:74        keepdb      U       cursor, parameters, keepdb=False):"
  - "tests/backends/postgresql/test_creation.py:79:68        keepdb      U       cursor, parameters, keepdb=False):"
  - "tests/backends/postgresql/test_creation.py:99:57        keepdb      U       autoclobber=False, keepdb=False"
  - "tests/backends/postgresql/test_creation.py:101:63       keepdb      U       error is ignored when keepdb is on"
  - "tests/backends/postgresql/test_creation.py:102:70       keepdb      U       autoclobber=False, keepdb=True)"
  - "tests/backends/postgresql/test_introspection.py:24:77       pers    U       person_id_seq RENAME TO pers_seq\")"
  - "tests/backends/postgresql/test_introspection.py:28:76       pers    U       column\": \"id\", \"name\": \"pers_seq\"}],"
  - "tests/backends/postgresql/tests.py:474:15       awef    U       a = [\"awef\"]"
  - "tests/backends/postgresql/tests.py:479:16       awef    U       a = [\"ᄲawef\"]"
  - "tests/backends/sqlite/test_operations.py:36:40          verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz                     U       DELETE FROM \"backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz'"
  - "tests/backends/sqlite/test_operations.py:70:40          verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz                     U       DELETE FROM \"backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz'"
  - "tests/backends/sqlite/test_operations.py:84:24          verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz     U       \"'backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\""
  - "tests/backends/sqlite/tests.py:74:31        memorydb    U       \"NAME\": \"file:memorydb_test?mode=memory&cache"
  - "tests/backends/test_utils.py:78:24          Nera    U       (\"Asia/Ust+Nera\", (\"Asia/Ust+Nera\","
  - "tests/backends/test_utils.py:78:42          Nera    U       Ust+Nera\", (\"Asia/Ust+Nera\", None, None)),"
  - "tests/backends/test_utils.py:79:24          Nera    U       (\"Asia/Ust-Nera\", (\"Asia/Ust-Nera\","
  - "tests/backends/test_utils.py:79:42          Nera    U       Ust-Nera\", (\"Asia/Ust-Nera\", None, None)),"
  - "tests/backends/test_utils.py:80:24          Nera    U       (\"Asia/Ust+Nera-02:00\", (\"Asia/Ust+Nera"
  - "tests/backends/tests.py:167:12      executemany     U       An executemany call with too many/not"
  - "tests/backends/tests.py:177:24      executemany     U       cursor.executemany(query, [(1, 2, 3)])"
  - "tests/backends/tests.py:179:24      executemany     U       cursor.executemany(query, [(1,)])"
  - "tests/backends/tests.py:284:14      paramless       U       def test_paramless_no_escaping(self):"
  - "tests/backends/tests.py:303:29      executemany     U       create_squares_with_executemany(self, args):"
  - "tests/backends/tests.py:323:24      executemany     U       cursor.executemany(query, args)"
  - "tests/backends/tests.py:388:46      Agnelline       U       name=\"Mary\", last_name=\"Agnelline\").save()"
  - "tests/backends/tests.py:408:53      Agnelline       U       fetchall()), [(\"Mary\", \"Agnelline\"), (\"Peter\", \"Parker"
  - "tests/backends/tests.py:599:34      MYISAM          U       MySQL+InnoDB and MySQL+MYISAM (something we currently"
  - "tests/backends/tests.py:942:9       SQLPK           U       class MySQLPKZeroTests(TestCase):"
  - "tests/backends/tests.py:950:22      autoval         U       def test_zero_as_autoval(self):"
  - "tests/basic/tests.py:75:14          autofields          U       def test_autofields_generate_different_values"
  - "tests/basic/tests.py:138:18         datetimefields      U       def test_for_datetimefields_saves_as_much_precision"
  - "tests/basic/tests.py:503:43         undashedvalue       U       dashed-value\": \"1\", \"undashedvalue\": \"2\"}"
  - "tests/basic/tests.py:505:38         undashedvalue       U       assertEqual(articles[0].undashedvalue, 2)"
  - "tests/basic/tests.py:531:14         emptyqs             U       def test_emptyqs(self):"
  - "tests/basic/tests.py:538:14         emptyqs             U       def test_emptyqs_values(self):"
  - "tests/basic/tests.py:546:14         emptyqs             U       def test_emptyqs_customqs(self):"
  - "tests/basic/tests.py:546:22         customqs            U       def test_emptyqs_customqs(self):"
  - "tests/basic/tests.py:562:14         emptyqs             U       def test_emptyqs_values_order(self):"
  - "tests/basic/tests.py:580:14         emptyqs             U       def test_emptyqs_distinct(self):"
  - "tests/basic/tests.py:941:9          asos                U       asos = ArticleSelectOnSave"
  - "tests/basic/tests.py:943:13         asos                U       asos.save()"
  - "tests/basic/tests.py:945:13         asos                U       asos.save(force_update=True"
  - "tests/basic/tests.py:951:17         asos                U       asos.save(force_update=True"
  - "tests/basic/tests.py:977:13         asos                U       asos = ArticleSelectOnSave"
  - "tests/bulk_create/tests.py:77:63        CLOB            U       bytes, must be set as a CLOB on Oracle"
  - "tests/bulk_create/tests.py:106:45       Fillory         U       ProxyMultiCountry(name=\"Fillory\", iso_two_letter=\"FL"
  - "tests/bulk_create/tests.py:112:50       Fillory         U       ProxyMultiProxyCountry(name=\"Fillory\", iso_two_letter=\"FL"
  - "tests/bulk_create/tests.py:119:36       Qwghlm          U       ProxyCountry(name=\"Qwghlm\", iso_two_letter=\"QW"
  - "tests/bulk_create/tests.py:120:31       Tortall         U       Country(name=\"Tortall\", iso_two_letter=\"TA"
  - "tests/bulk_create/tests.py:125:15       Qwghlm          U       {\"Qwghlm\", \"Tortall\"},"
  - "tests/bulk_create/tests.py:125:25       Tortall         U       {\"Qwghlm\", \"Tortall\"},"
  - "tests/bulk_create/tests.py:138:18       Qwghlm          U       \"Qwghlm\","
  - "tests/bulk_create/tests.py:139:18       Tortall         U       \"Tortall\","
  - "tests/bulk_create/tests.py:179:22       autoval         U       def test_zero_as_autoval(self):"
  - "tests/bulk_create/tests.py:523:33       relatedmodel    U       update_fields=[\"relatedmodel\"],"
  - "tests/bulk_create/tests.py:561:33       relatedmodel    U       unique_fields=[\"relatedmodel\"],"
  - "tests/cache/tests_async.py:54:20        ahas                    U       async def test_ahas_key(self):"
  - "tests/cache/tests_async.py:55:12        ahas                    U       \"\"\"ahas_key() doesn't ever return"
  - "tests/cache/tests_async.py:57:35        ahas                    U       assertIs(await cache.ahas_key(\"hello1\"), False"
  - "tests/cache/tests_async.py:58:35        ahas                    U       assertIs(await cache.ahas_key(\"goodbye1\"), False"
  - "tests/cache/tests_async.py:60:20        aincr                   U       async def test_aincr(self):"
  - "tests/cache/tests_async.py:64:25        aincr                   U       await cache.aincr(\"answer\")"
  - "tests/cache/tests_async.py:66:25        aincr                   U       await cache.aincr(\"does_not_exist\")"
  - "tests/cache/tests_async.py:68:25        aincr                   U       await cache.aincr(\"does_not_exist\", -"
  - "tests/cache/tests_async.py:70:20        adecr                   U       async def test_adecr(self):"
  - "tests/cache/tests_async.py:74:25        adecr                   U       await cache.adecr(\"answer\")"
  - "tests/cache/tests_async.py:76:25        adecr                   U       await cache.adecr(\"does_not_exist\")"
  - "tests/cache/tests_async.py:78:25        adecr                   U       await cache.adecr(\"does_not_exist\", -"
  - "tests/cache/tests_async.py:80:20        atouch                  U       async def test_atouch(self):"
  - "tests/cache/tests_async.py:81:35        atouch                  U       assertIs(await cache.atouch(\"key\"), False)"
  - "tests/cache/tests_async.py:116:35       ahas                    U       assertIs(await cache.ahas_key(\"expire3\"), False"
  - "tests/cache/tests_async.py:122:31       Iñtërnâtiônàlizætiøn    U       \"unicode_ascii\": \"Iñtërnâtiônàlizætiøn1\","
  - "tests/cache/tests_async.py:123:14       Iñtërnâtiônàlizætiøn    U       \"Iñtërnâtiônàlizætiøn\": \"Iñtërnâtiônàlizæti"
  - "tests/cache/tests_async.py:123:38       Iñtërnâtiônàlizætiøn    U       rnâtiônàlizætiøn\": \"Iñtërnâtiônàlizætiøn2\","
  - "tests/cache/tests_async.py:161:20       aincr                   U       async def test_aincr_version(self):"
  - "tests/cache/tests_async.py:171:20       adecr                   U       async def test_adecr_version(self):"
  - "tests/cache/tests.py:228:31         Iñtërnâtiônàlizætiøn    U       \"unicode_ascii\": \"Iñtërnâtiônàlizætiøn1\","
  - "tests/cache/tests.py:229:14         Iñtërnâtiônàlizætiøn    U       \"Iñtërnâtiônàlizætiøn\": \"Iñtërnâtiônàlizæti"
  - "tests/cache/tests.py:229:38         Iñtërnâtiônàlizætiøn    U       rnâtiônàlizætiøn\": \"Iñtërnâtiônàlizætiøn2\","
  - "tests/cache/tests.py:295:31         cacheprefix             U       prefix\": {\"KEY_PREFIX\": \"cacheprefix{}\".format(os.getpid"
  - "tests/cache/tests.py:295:56         getpid                  U       cacheprefix{}\".format(os.getpid())},"
  - "tests/cache/tests.py:350:20         somekey                 U       cache.set(\"somekey\", \"value\")"
  - "tests/cache/tests.py:353:49         somekey                 U       caches[\"prefix\"].has_key(\"somekey\"), False)"
  - "tests/cache/tests.py:355:31         somekey                 U       caches[\"prefix\"].set(\"somekey\", \"value2\")"
  - "tests/cache/tests.py:357:37         somekey                 U       assertEqual(cache.get(\"somekey\"), \"value\")"
  - "tests/cache/tests.py:358:48         somekey                 U       caches[\"prefix\"].get(\"somekey\"), \"value2\")"
  - "tests/cache/tests.py:533:31         Iñtërnâtiônàlizætiøn    U       \"unicode_ascii\": \"Iñtërnâtiônàlizætiøn1\","
  - "tests/cache/tests.py:534:14         Iñtërnâtiônàlizætiøn    U       \"Iñtërnâtiônàlizætiøn\": \"Iñtërnâtiônàlizæti"
  - "tests/cache/tests.py:1248:26        doesnt (doesn't)        U       def test_second_call_doesnt_crash(self):"
  - "tests/cache/tests.py:1615:7         libmemcached            U       # libmemcached manages its own connections"
  - "tests/cache/tests.py:1628:36        nodelay                 U       \"behaviors\": {\"tcp_nodelay\": True},"
  - "tests/cache/tests.py:1634:54        nodelay                 U       cache.behaviors[\"tcp_nodelay\"], int(True))"
  - "tests/cache/tests.py:1670:42        serde                   U       cache.default_kwargs[\"serde\"]._serialize_func.keywords"
  - "tests/cache/tests.py:1679:32        serde                   U       client.serde._serialize_func.keywords"
  - "tests/cache/tests.py:1743:26        enoent                  U       def test_get_ignores_enoent(self):"
  - "tests/cache/tests.py:1751:42        umasks                  U       only partially supports umasks and chmod.\","
  - "tests/cache/tests.py:1755:53        filebasedcache          U       dirname) / \"nested\" / \"filebasedcache\""
  - "tests/cache/tests.py:1771:38        filenotfound            U       does_not_ignore_non_filenotfound_exceptions(self):"
  - "tests/cache/tests.py:2216:28        cacheprefix             U       \"KEY_PREFIX\": \"cacheprefix\","
  - "tests/cache/tests.py:2430:63        somethingelse           U       path, {\"foo\": \"bar\", \"somethingelse\": \"true\"})"
  - "tests/cache/tests.py:2439:28        mundo                   U       es_message = \"Hola mundo!\""
  - "tests/cache/tests.py:2474:25        doesnt (doesn't)        U       def test_middleware_doesnt_cache_streaming_response"
  - "tests/cache/tests.py:2496:28        cacheprefix             U       \"KEY_PREFIX\": \"cacheprefix\","
  - "tests/check_framework/test_model_field_deprecation.py:23:32         WXXX    U       id=\"fields.WXXX\","
  - "tests/check_framework/test_model_field_deprecation.py:72:32         EXXX    U       id=\"fields.EXXX\","
  - "tests/check_framework/test_security.py:319:37       xframe      U       assertEqual(base.check_xframe_options_middleware(None"
  - "tests/check_framework/test_security.py:325:37       xframe      U       assertEqual(base.check_xframe_options_middleware(None"
  - "tests/check_framework/test_security.py:338:37       xframe      U       assertEqual(base.check_xframe_deny(None), [base.W"
  - "tests/check_framework/test_security.py:346:37       xframe      U       assertEqual(base.check_xframe_deny(None), [])"
  - "tests/check_framework/test_security.py:352:14       xframe      U       def test_xframe_deny(self):"
  - "tests/check_framework/test_security.py:519:14       badkey      U       \"badkey\","
  - "tests/check_framework/test_security.py:533:14       badkey      U       \"badkey1\","
  - "tests/check_framework/test_security.py:534:14       badkey      U       \"badkey2\","
  - "tests/check_framework/test_translation.py:16:36         extlang     U       sgn-ase\", # language+extlang"
  - "tests/check_framework/test_translation.py:30:32         subtag      U       \"en--us\", # empty subtag."
  - "tests/check_framework/tests.py:223:51       missingtag          U       system check with the \"missingtag\" tag.'"
  - "tests/check_framework/tests.py:225:42       missingtag          U       command(\"check\", tags=[\"missingtag\"])"
  - "tests/check_framework/tests.py:273:32       myerrorcheck        U       [Error(\"Error\", id=\"myerrorcheck.E001\")]"
  - "tests/check_framework/tests.py:277:36       mywarningcheck      U       Warning(\"Warning\", id=\"mywarningcheck.E001\")]"
  - "tests/check_framework/tests.py:289:49       myerrorcheck        U       SILENCED_SYSTEM_CHECKS=[\"myerrorcheck.E001\"])"
  - "tests/check_framework/tests.py:300:49       mywarningcheck      U       SILENCED_SYSTEM_CHECKS=[\"mywarningcheck.E001\"])"
  - "tests/check_framework/tests.py:368:15       reimports           U       \"Spawning reimports modules, overwriting"
  - "tests/constraints/models.py:123:23      sheld       U       name=\"sheld_init_immediate_uniq"
  - "tests/constraints/tests.py:261:36       childmodel      U       assertIn(\"constraints_childmodel_adult\", constraints"
  - "tests/constraints/tests.py:1281:58      sheld           U       connection.ops.quote_name(\"sheld_init_immediate_uniq"
  - "tests/contenttypes_tests/test_models.py:147:37      modelcreatedonthefly    U       assertEqual(ct.model, \"modelcreatedonthefly\")"
  - "tests/contenttypes_tests/test_models.py:148:36      modelcreatedonthefly    U       assertEqual(str(ct), \"modelcreatedonthefly\")"
  - "tests/contenttypes_tests/test_operations.py:67:56       renamedfoo      U       contenttypes_tests\", model=\"renamedfoo\""
  - "tests/contenttypes_tests/test_operations.py:85:56       renamedfoo      U       contenttypes_tests\", model=\"renamedfoo\""
  - "tests/contenttypes_tests/test_operations.py:105:59      renamedfoo      U       types.filter(model=\"renamedfoo\").exists())"
  - "tests/contenttypes_tests/test_operations.py:115:60      renamedfoo      U       types.filter(model=\"renamedfoo\").exists())"
  - "tests/contenttypes_tests/test_operations.py:132:56      renamedfoo      U       contenttypes_tests\", model=\"renamedfoo\""
  - "tests/contenttypes_tests/test_views.py:125:14       nonint      U       def test_nonint_content_type(self):"
  - "tests/csrf_tests/tests.py:39:16         lccccccc        U       TEST_SECRET = \"lcccccccX2kcccccccY2jcccccccssIC"
  - "tests/csrf_tests/tests.py:39:26         kccccccc        U       SECRET = \"lcccccccX2kcccccccY2jcccccccssIC\""
  - "tests/csrf_tests/tests.py:39:36         jcccccccss      U       lcccccccX2kcccccccY2jcccccccssIC\""
  - "tests/csrf_tests/tests.py:41:25         bcdefghij       U       MASKED_TEST_SECRET1 = \"1bcdefghij2bcdefghij3bcdefghij"
  - "tests/csrf_tests/tests.py:41:35         bcdefghij       U       SECRET1 = \"1bcdefghij2bcdefghij3bcdefghij4bcdefghij"
  - "tests/csrf_tests/tests.py:41:45         bcdefghij       U       bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij"
  - "tests/csrf_tests/tests.py:41:55         bcdefghij       U       bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD"
  - "tests/csrf_tests/tests.py:41:65         bcdefghij       U       bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD\""
  - "tests/csrf_tests/tests.py:83:31         vcgiso          U       \"da4SrUiHJYoJ0HYQ0vcgisoIuFOxx4ER\","
  - "tests/csrf_tests/tests.py:618:24        referer         U       def test_https_bad_referer(self):"
  - "tests/csrf_tests/tests.py:620:41        referer         U       HTTPS request with a bad referer is rejected"
  - "tests/csrf_tests/tests.py:625:24        REFERER         U       req.META[\"HTTP_REFERER\"] = \"https://www.evil"
  - "tests/csrf_tests/tests.py:631:14        Referer         U       \"Referer checking failed - https"
  - "tests/csrf_tests/tests.py:636:16        referer         U       def _check_referer_rejects(self, mw, req"
  - "tests/csrf_tests/tests.py:638:23        referer         U       mw._check_referer(req)"
  - "tests/csrf_tests/tests.py:641:23        referer         U       def test_https_no_referer(self):"
  - "tests/csrf_tests/tests.py:650:14        Referer         U       \"Referer checking failed - no"
  - "tests/csrf_tests/tests.py:650:43        Referer         U       checking failed - no Referer.\","
  - "tests/csrf_tests/tests.py:662:24        REFERER         U       req.META[\"HTTP_REFERER\"] = \"https://www.evil"
  - "tests/csrf_tests/tests.py:666:14        Referer         U       \"Referer checking failed - https"
  - "tests/csrf_tests/tests.py:689:34        Referer         U       malformed_referer_msg = \"Referer checking failed - Referer"
  - "tests/csrf_tests/tests.py:692:24        REFERER         U       req.META[\"HTTP_REFERER\"] = \"http://http://www"
  - "tests/csrf_tests/tests.py:702:24        REFERER         U       req.META[\"HTTP_REFERER\"] = \"\""
  - "tests/csrf_tests/tests.py:707:24        REFERER         U       req.META[\"HTTP_REFERER\"] = \"ØBöIß\""
  - "tests/csrf_tests/tests.py:1240:41       badvalue        U       get_request(cookie=\"badvalue\")"
  - "tests/custom_lookups/tests.py:48:7          Mult                U       class Mult3BilateralTransform(models"
  - "tests/custom_lookups/tests.py:50:20         mult                U       lookup_name = \"mult3\""
  - "tests/custom_lookups/tests.py:58:20         lastdigit           U       lookup_name = \"lastdigit\""
  - "tests/custom_lookups/tests.py:124:21        somecol             U       # WHERE somecol <= '2013-12-31')"
  - "tests/custom_lookups/tests.py:180:36        transformfunc       U       lookup_name.startswith(\"transformfunc_\"):"
  - "tests/custom_lookups/tests.py:198:20        inmonth             U       lookup_name = \"inmonth\""
  - "tests/custom_lookups/tests.py:222:22        unixtime            U       return \"from_unixtime({})\".format(lhs), params"
  - "tests/custom_lookups/tests.py:243:75        justtheyear         U       YearTransform, lookup_name=\"justtheyear\"),"
  - "tests/custom_lookups/tests.py:245:66        isactually          U       Exactly, lookup_name=\"isactually\"),"
  - "tests/custom_lookups/tests.py:248:52        justtheyear         U       objects.filter(birthdate__justtheyear__isactually=1981)"
  - "tests/custom_lookups/tests.py:248:65        isactually          U       birthdate__justtheyear__isactually=1981)"
  - "tests/custom_lookups/tests.py:289:50        inmonth             U       objects.filter(birthdate__inmonth=date(2012, 1, 15)),"
  - "tests/custom_lookups/tests.py:292:50        inmonth             U       objects.filter(birthdate__inmonth=date(2012, 2, 1)),"
  - "tests/custom_lookups/tests.py:295:50        inmonth             U       objects.filter(birthdate__inmonth=date(1981, 2, 28)),"
  - "tests/custom_lookups/tests.py:298:50        inmonth             U       objects.filter(birthdate__inmonth=date(2012, 3, 12)),"
  - "tests/custom_lookups/tests.py:310:13        baseqs              U       baseqs = Author.objects.order"
  - "tests/custom_lookups/tests.py:311:38        baseqs              U       assertSequenceEqual(baseqs.filter(age__div3=2)"
  - "tests/custom_lookups/tests.py:312:38        baseqs              U       assertSequenceEqual(baseqs.filter(age__div3__lte"
  - "tests/custom_lookups/tests.py:313:38        baseqs              U       assertSequenceEqual(baseqs.filter(age__div3__in"
  - "tests/custom_lookups/tests.py:314:38        baseqs              U       assertSequenceEqual(baseqs.filter(age__div3__in"
  - "tests/custom_lookups/tests.py:320:14        foreignobject       U       def test_foreignobject_lookup_registration"
  - "tests/custom_lookups/tests.py:341:11        Unregistration      U       # Unregistration should bust the cache"
  - "tests/custom_lookups/tests.py:403:34        Mult                U       models.IntegerField, Mult3BilateralTransform,"
  - "tests/custom_lookups/tests.py:411:15        mult                U       # mult3__div3 always leads"
  - "tests/custom_lookups/tests.py:413:36        mult                U       baseqs.filter(age__mult3__div3=42), [a1, a2"
  - "tests/custom_lookups/tests.py:415:63        mult                U       baseqs.filter(age__div3__mult3=42), [a3])"
  - "tests/custom_lookups/tests.py:423:48        lastdigit           U       objects.order_by(\"age__lastdigit\")"
  - "tests/custom_lookups/tests.py:426:24        fexpr               U       def test_bilateral_fexpr(self):"
  - "tests/custom_lookups/tests.py:427:51        Mult                U       models.IntegerField, Mult3BilateralTransform)"
  - "tests/custom_lookups/tests.py:434:36        mult                U       baseqs.filter(age__mult3=models.F(\"age\")),"
  - "tests/custom_lookups/tests.py:489:23        fexpr               U       def test_year_lte_fexpr(self):"
  - "tests/custom_lookups/tests.py:634:7         Customised          U       class CustomisedMethodsTests(SimpleTestCase"
  - "tests/custom_lookups/tests.py:640:47        transformfunc       U       objects.filter(field__transformfunc_banana=3)"
  - "tests/custom_lookups/tests.py:645:20        transformfunc       U       field__transformfunc_banana__lookupfunc_elephants"
  - "tests/custom_lookups/tests.py:651:20        transformfunc       U       field__transformfunc_banana__transformfunc"
  - "tests/custom_lookups/tests.py:651:42        transformfunc       U       transformfunc_banana__transformfunc_pear=3"
  - "tests/custom_managers/models.py:52:10       optin       U       def _optin_private_method(self"
  - "tests/custom_managers/models.py:55:6        optin       U       _optin_private_method.queryset"
  - "tests/custom_managers/tests.py:69:26        optin           U       manager._optin_private_method()"
  - "tests/custom_managers/tests.py:500:25       funperson       U       lambda c: c.funperson.first_name,"
  - "tests/custom_managers/tests.py:510:25       funperson       U       lambda c: c.funperson.first_name,"
  - "tests/custom_managers/tests.py:521:25       funperson       U       lambda c: c.funperson.first_name,"
  - "tests/custom_pk/tests.py:133:9          emps    U       emps = Employee.objects.in"
  - "tests/custom_pk/tests.py:134:26         emps    U       self.assertEqual(emps[123], self.dan)"
  - "tests/custom_pk/tests.py:169:39         jaźń    U       objects.create(name=\"jaźń\")"
  - "tests/datatypes/tests.py:86:14          textfields      U       def test_textfields_str(self):"
  - "tests/datatypes/tests.py:89:9           newd            U       newd = Donut.objects.get"
  - "tests/datatypes/tests.py:90:31          newd            U       self.assertIsInstance(newd.review, str)"
  - "tests/dates/tests.py:35:19          LMAO    U       text=\"LMAO\","
  - "tests/datetimes/tests.py:33:19          LMAO    U       text=\"LMAO\","
  - "tests/db_functions/comparison/test_coalesce.py:9:27         amet            U       Lorem ipsum dolor sit amet, consectetur adipiscing"
  - "tests/db_functions/comparison/test_coalesce.py:9:33         consectetur     U       ipsum dolor sit amet, consectetur adipiscing elit, sed"
  - "tests/db_functions/comparison/test_coalesce.py:9:45         adipiscing      U       sit amet, consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/comparison/test_coalesce.py:9:56         elit            U       consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/comparison/test_coalesce.py:9:69         eiusmod         U       adipiscing elit, sed do eiusmod"
  - "tests/db_functions/comparison/test_coalesce.py:10:5         tempor          U       tempor incididunt ut labore"
  - "tests/db_functions/comparison/test_coalesce.py:10:12        incididunt      U       tempor incididunt ut labore et dolore"
  - "tests/db_functions/comparison/test_coalesce.py:10:26        labore          U       tempor incididunt ut labore et dolore magna aliqua"
  - "tests/db_functions/comparison/test_coalesce.py:10:36        dolore          U       incididunt ut labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/comparison/test_coalesce.py:10:49        aliqua          U       labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/comparison/test_coalesce.py:15:57        smithj          U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/comparison/test_coalesce.py:19:41        smithj          U       order_by(\"name\"), [\"smithj\", \"Rhonda\"], lambda"
  - "tests/db_functions/comparison/test_coalesce.py:29:62        smithj          U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/comparison/test_coalesce.py:56:57        smithj          U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/comparison/test_json_object.py:17:35         Ivanov      U       Author(name=\"Ivan Ivanov\", alias=\"iivanov\"),"
  - "tests/db_functions/comparison/test_json_object.py:17:51         iivanov     U       Ivan Ivanov\", alias=\"iivanov\"),"
  - "tests/db_functions/comparison/test_json_object.py:18:37         Berthy      U       Author(name=\"Bertha Berthy\", alias=\"bberthy\"),"
  - "tests/db_functions/comparison/test_json_object.py:18:53         bberthy     U       Bertha Berthy\", alias=\"bberthy\"),"
  - "tests/db_functions/comparison/test_json_object.py:28:58         Ivanov      U       object, {\"name\": \"Ivan Ivanov\"})"
  - "tests/db_functions/comparison/test_json_object.py:43:31         ivanov      U       \"name\": \"ivan ivanov\","
  - "tests/db_functions/comparison/test_json_object.py:44:27         iivanov     U       \"alias\": \"iivanov\","
  - "tests/db_functions/comparison/test_json_object.py:64:31         Ivanov      U       \"name\": \"Ivan Ivanov\","
  - "tests/db_functions/comparison/test_json_object.py:66:31         iivanov     U       \"alias\": \"iivanov\","
  - "tests/db_functions/comparison/test_json_object.py:82:31         Ivanov      U       \"name\": \"Ivan Ivanov\","
  - "tests/db_functions/comparison/test_nullif.py:14:57          smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/comparison/test_nullif.py:24:19          smithj      U       (\"smithj\",),"
  - "tests/db_functions/datetime/test_extract_trunc.py:166:27        greaterthan     U       def test_extract_year_greaterthan_lookup(self):"
  - "tests/db_functions/datetime/test_extract_trunc.py:191:27        lessthan        U       def test_extract_year_lessthan_lookup(self):"
  - "tests/db_functions/datetime/test_extract_trunc.py:1679:9        melb            U       melb = zoneinfo.ZoneInfo"
  - "tests/db_functions/datetime/test_extract_trunc.py:1683:17       melb            U       day_melb=Extract(\"start_datetime"
  - "tests/db_functions/datetime/test_extract_trunc.py:1683:62       melb            U       datetime\", \"day\", tzinfo=melb),"
  - "tests/db_functions/datetime/test_extract_trunc.py:1684:59       melb            U       datetime\", \"week\", tzinfo=melb),"
  - "tests/db_functions/datetime/test_extract_trunc.py:1685:13       isoyear         U       isoyear=ExtractIsoYear(\"start"
  - "tests/db_functions/datetime/test_extract_trunc.py:1685:61       melb            U       start_datetime\", tzinfo=melb),"
  - "tests/db_functions/datetime/test_extract_trunc.py:1704:36       isoyear         U       assertEqual(utc_model.isoyear, 2015)"
  - "tests/db_functions/datetime/test_extract_trunc.py:1722:37       isoyear         U       assertEqual(melb_model.isoyear, 2015)"
  - "tests/db_functions/datetime/test_extract_trunc.py:1737:13       nera            U       ust_nera = zoneinfo.ZoneInfo"
  - "tests/db_functions/datetime/test_extract_trunc.py:1737:48       Nera            U       zoneinfo.ZoneInfo(\"Asia/Ust-Nera\")"
  - "tests/db_functions/datetime/test_extract_trunc.py:1741:62       nera            U       datetime\", tzinfo=ust_nera),"
  - "tests/db_functions/datetime/test_extract_trunc.py:1748:36       nera            U       timezone.override(ust_nera):"
  - "tests/db_functions/datetime/test_extract_trunc.py:1749:17       nera            U       ust_nera_model = qs.get()"
  - "tests/db_functions/datetime/test_extract_trunc.py:1751:30       nera            U       self.assertEqual(ust_nera_model.hour, 9)"
  - "tests/db_functions/datetime/test_now.py:12:27       amet            U       Lorem ipsum dolor sit amet, consectetur adipiscing"
  - "tests/db_functions/datetime/test_now.py:12:33       consectetur     U       ipsum dolor sit amet, consectetur adipiscing elit, sed"
  - "tests/db_functions/datetime/test_now.py:12:45       adipiscing      U       sit amet, consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/datetime/test_now.py:12:56       elit            U       consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/datetime/test_now.py:12:69       eiusmod         U       adipiscing elit, sed do eiusmod"
  - "tests/db_functions/datetime/test_now.py:13:5        tempor          U       tempor incididunt ut labore"
  - "tests/db_functions/datetime/test_now.py:13:12       incididunt      U       tempor incididunt ut labore et dolore"
  - "tests/db_functions/datetime/test_now.py:13:26       labore          U       tempor incididunt ut labore et dolore magna aliqua"
  - "tests/db_functions/datetime/test_now.py:13:36       dolore          U       incididunt ut labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/datetime/test_now.py:13:49       aliqua          U       labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/tests.py:41:61       smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/tests.py:54:61       smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/tests.py:67:57       SMITHJ      U       John Smith\", alias=\"SMITHJ\")"
  - "tests/db_functions/tests.py:70:50       smithj      U       filter(alias=Upper(V(\"smithj\"))),"
  - "tests/db_functions/tests.py:75:51       smithj      U       exclude(alias=Upper(V(\"smithj\"))),"
  - "tests/db_functions/text/test_chr.py:12:68       smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_chr.py:13:49       Élena       U       objects.create(name=\"Élena Jordan\", alias=\"elena"
  - "tests/db_functions/text/test_concat.py:13:27        amet            U       Lorem ipsum dolor sit amet, consectetur adipiscing"
  - "tests/db_functions/text/test_concat.py:13:33        consectetur     U       ipsum dolor sit amet, consectetur adipiscing elit, sed"
  - "tests/db_functions/text/test_concat.py:13:45        adipiscing      U       sit amet, consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/text/test_concat.py:13:56        elit            U       consectetur adipiscing elit, sed do eiusmod"
  - "tests/db_functions/text/test_concat.py:13:69        eiusmod         U       adipiscing elit, sed do eiusmod"
  - "tests/db_functions/text/test_concat.py:14:5         tempor          U       tempor incididunt ut labore"
  - "tests/db_functions/text/test_concat.py:14:12        incididunt      U       tempor incididunt ut labore et dolore"
  - "tests/db_functions/text/test_concat.py:14:26        labore          U       tempor incididunt ut labore et dolore magna aliqua"
  - "tests/db_functions/text/test_concat.py:14:36        dolore          U       incididunt ut labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/text/test_concat.py:14:49        aliqua          U       labore et dolore magna aliqua.\"\"\""
  - "tests/db_functions/text/test_concat.py:19:37        Jayden          U       objects.create(name=\"Jayden\")"
  - "tests/db_functions/text/test_concat.py:20:57        smithj          U       John Smith\", alias=\"smithj\", goes_by=\"John\")"
  - "tests/db_functions/text/test_concat.py:22:53        adnoh           U       name=\"Rhonda\", alias=\"adnohR\")"
  - "tests/db_functions/text/test_concat.py:28:18        smithj          U       \"smithjJohn\","
  - "tests/db_functions/text/test_concat.py:30:18        adnoh           U       \"adnohR\","
  - "tests/db_functions/text/test_concat.py:42:37        Jayden          U       objects.create(name=\"Jayden\")"
  - "tests/db_functions/text/test_concat.py:43:57        smithj          U       John Smith\", alias=\"smithj\", goes_by=\"John\")"
  - "tests/db_functions/text/test_concat.py:45:53        adnoh           U       name=\"Rhonda\", alias=\"adnohR\")"
  - "tests/db_functions/text/test_concat.py:52:18        Jayden          U       \"Jayden ()\","
  - "tests/db_functions/text/test_left.py:11:57          smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_left.py:17:50          Rhond       U       \"name\"), [\"John \", \"Rhond\"], lambda a: a.name"
  - "tests/db_functions/text/test_left.py:22:41          smithj      U       order_by(\"name\"), [\"smithj\", \"rh\"], lambda a: a"
  - "tests/db_functions/text/test_length.py:11:57        smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_length.py:25:57        smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_length.py:26:57        smithj      U       John Smith\", alias=\"smithj1\")"
  - "tests/db_functions/text/test_length.py:33:33        smithj      U       (\"John Smith\", \"smithj\"),"
  - "tests/db_functions/text/test_length.py:34:33        smithj      U       (\"John Smith\", \"smithj1\"),"
  - "tests/db_functions/text/test_lower.py:11:57         smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_lower.py:35:61         smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_md5.py:16:38       Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_ord.py:12:68       smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_ord.py:13:49       Élena       U       objects.create(name=\"Élena Jordan\", alias=\"elena"
  - "tests/db_functions/text/test_pad.py:17:45       Johnxyx     U       , 7, Value(\"xy\")), \"Johnxyx\"),"
  - "tests/db_functions/text/test_pad.py:19:44       Johnxx      U       name\", 6, Value(\"x\")), \"Johnxx\"),"
  - "tests/db_functions/text/test_replace.py:16:21       middlename      U       without_middlename=Replace(F(\"name\"), Value"
  - "tests/db_functions/text/test_replace.py:24:52       middlename      U       (x.name, x.without_middlename),"
  - "tests/db_functions/text/test_reverse.py:13:68       smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_reverse.py:14:49       Élena       U       objects.create(name=\"Élena Jordan\", alias=\"elena"
  - "tests/db_functions/text/test_reverse.py:34:33       htim        U       (\"John Smith\", \"htimS nhoJ\", \"gnirts citats"
  - "tests/db_functions/text/test_reverse.py:34:47       gnirts      U       Smith\", \"htimS nhoJ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_reverse.py:34:54       citats      U       htimS nhoJ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_reverse.py:35:19       Élena       U       (\"Élena Jordan\", \"nadroJ anel"
  - "tests/db_functions/text/test_reverse.py:35:35       nadro       U       (\"Élena Jordan\", \"nadroJ anelÉ\", \"gnirts citats"
  - "tests/db_functions/text/test_reverse.py:35:42       anel        U       lena Jordan\", \"nadroJ anelÉ\", \"gnirts citats\")"
  - "tests/db_functions/text/test_reverse.py:35:51       gnirts      U       Jordan\", \"nadroJ anelÉ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_reverse.py:35:58       citats      U       nadroJ anelÉ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_reverse.py:36:35       gnirts      U       (\"パイソン\", \"ンソイパ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_reverse.py:36:42       citats      U       ン\", \"ンソイパ\", \"gnirts citats\"),"
  - "tests/db_functions/text/test_right.py:12:57         smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_right.py:23:41         smithj      U       order_by(\"name\"), [\"smithj\", \"da\"], lambda a: a"
  - "tests/db_functions/text/test_right.py:38:18         mith        U       \"mith\","
  - "tests/db_functions/text/test_sha1.py:16:38          Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_sha224.py:18:38        Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_sha256.py:16:38        Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_sha384.py:16:38        Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_sha512.py:16:38        Élena       U       Author(alias=\"Jordan Élena\"),"
  - "tests/db_functions/text/test_strindex.py:14:43          fullstop    U       Author.objects.annotate(fullstop=StrIndex(\"name\", Value"
  - "tests/db_functions/text/test_strindex.py:16:62          fullstop    U       4, 0], lambda a: a.fullstop"
  - "tests/db_functions/text/test_substr.py:10:57        smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_substr.py:25:41        smithj      U       order_by(\"name\"), [\"smithj\", \"rhond\"], lambda a"
  - "tests/db_functions/text/test_substr.py:25:51        rhond       U       name\"), [\"smithj\", \"rhond\"], lambda a: a.alias"
  - "tests/db_functions/text/test_substr.py:29:57        smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_substr.py:33:22        smithj      U       ).get(alias=\"smithj\")"
  - "tests/db_functions/text/test_substr.py:42:57        smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_upper.py:11:57         smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_functions/text/test_upper.py:34:61         smithj      U       John Smith\", alias=\"smithj\")"
  - "tests/db_typecasts/tests.py:77:17       inpt    U       for inpt, expected in v:"
  - "tests/db_typecasts/tests.py:78:40       inpt    U       with self.subTest(k=k, inpt=inpt):"
  - "tests/db_typecasts/tests.py:78:45       inpt    U       self.subTest(k=k, inpt=inpt):"
  - "tests/db_typecasts/tests.py:79:49       inpt    U       getattr(typecasts, k)(inpt)"
  - "tests/db_typecasts/tests.py:84:31       inpt    U       % (k, inpt, expected, got),"
  - "tests/db_utils/tests.py:65:14       reraising       U       def test_reraising_backend_specific_database"
  - "tests/db_utils/tests.py:75:62       sqlstate        U       exception.__cause__.diag.sqlstate)"
  - "tests/db_utils/tests.py:79:57       pgerror         U       exception.__cause__.pgerror)"
  - "tests/dbshell/test_mysql.py:26:21       someuser                    U       \"--user=someuser\","
  - "tests/dbshell/test_mysql.py:29:14       somedbname                  U       \"somedbname\","
  - "tests/dbshell/test_mysql.py:31:39       somepassword                U       env = {\"MYSQL_PWD\": \"somepassword\"}"
  - "tests/dbshell/test_mysql.py:35:30       somedbname                  U       \"NAME\": \"somedbname\","
  - "tests/dbshell/test_mysql.py:36:30       someuser                    U       \"USER\": \"someuser\","
  - "tests/dbshell/test_mysql.py:37:34       somepassword                U       \"PASSWORD\": \"somepassword\","
  - "tests/dbshell/test_mysql.py:52:21       optionuser                  U       \"--user=optionuser\","
  - "tests/dbshell/test_mysql.py:53:21       optionhost                  U       \"--host=optionhost\","
  - "tests/dbshell/test_mysql.py:64:38       settingdbname               U       \"NAME\": \"settingdbname\","
  - "tests/dbshell/test_mysql.py:65:38       settinguser                 U       \"USER\": \"settinguser\","
  - "tests/dbshell/test_mysql.py:66:42       settingpassword             U       \"PASSWORD\": \"settingpassword\","
  - "tests/dbshell/test_mysql.py:67:38       settinghost                 U       \"HOST\": \"settinghost\","
  - "tests/dbshell/test_mysql.py:71:42       optionuser                  U       \"user\": \"optionuser\","
  - "tests/dbshell/test_mysql.py:73:42       optionhost                  U       \"host\": \"optionhost\","
  - "tests/dbshell/test_mysql.py:84:21       someuser                    U       \"--user=someuser\","
  - "tests/dbshell/test_mysql.py:93:30       settingdbname               U       \"NAME\": \"settingdbname\","
  - "tests/dbshell/test_mysql.py:94:30       someuser                    U       \"USER\": \"someuser\","
  - "tests/dbshell/test_mysql.py:95:34       settingpassword             U       \"PASSWORD\": \"settingpassword\","
  - "tests/dbshell/test_mysql.py:100:32      deprecatedoptiondbname      U       \"db\": \"deprecatedoptiondbname\","
  - "tests/dbshell/test_mysql.py:102:36      deprecatedoptionpassword    U       \"passwd\": \"deprecatedoptionpassword\","
  - "tests/dbshell/test_mysql.py:112:21      someuser                    U       \"--user=someuser\","
  - "tests/dbshell/test_mysql.py:116:14      somedbname                  U       \"somedbname\","
  - "tests/dbshell/test_mysql.py:118:39      somepassword                U       env = {\"MYSQL_PWD\": \"somepassword\"}"
  - "tests/dbshell/test_mysql.py:122:30      somedbname                  U       \"NAME\": \"somedbname\","
  - "tests/dbshell/test_mysql.py:124:34      somepassword                U       \"PASSWORD\": \"somepassword\","
  - "tests/dbshell/test_mysql.py:138:14      somedbname                  U       \"somedbname\","
  - "tests/dbshell/test_mysql.py:140:39      somepassword                U       env = {\"MYSQL_PWD\": \"somepassword\"}"
  - "tests/dbshell/test_mysql.py:161:23      sslca                       U       \"--ssl-ca=sslca\","
  - "tests/dbshell/test_mysql.py:177:36      sslca                       U       \"ca\": \"sslca\","
  - "tests/dbshell/test_oracle.py:10:72          rlwrap      U       dict, parameters=None, rlwrap=False):"
  - "tests/dbshell/test_oracle.py:14:52          rlwrap      U       return_value=\"/usr/bin/rlwrap\" if rlwrap else None"
  - "tests/dbshell/test_oracle.py:14:63          rlwrap      U       /usr/bin/rlwrap\" if rlwrap else None"
  - "tests/dbshell/test_oracle.py:18:22          rlwrap      U       def test_without_rlwrap(self):"
  - "tests/dbshell/test_oracle.py:25:69          rlwrap      U       connection.settings_dict, rlwrap=False),"
  - "tests/dbshell/test_postgresql.py:25:30          someuser            U       \"USER\": \"someuser\","
  - "tests/dbshell/test_postgresql.py:26:34          somepassword        U       \"PASSWORD\": \"somepassword\","
  - "tests/dbshell/test_postgresql.py:32:33          someuser            U       [\"psql\", \"-U\", \"someuser\", \"-h\", \"somehost\","
  - "tests/dbshell/test_postgresql.py:33:33          somepassword        U       {\"PGPASSWORD\": \"somepassword\"},"
  - "tests/dbshell/test_postgresql.py:37:14          nopass              U       def test_nopass(self):"
  - "tests/dbshell/test_postgresql.py:42:30          someuser            U       \"USER\": \"someuser\","
  - "tests/dbshell/test_postgresql.py:48:33          someuser            U       [\"psql\", \"-U\", \"someuser\", \"-h\", \"somehost\","
  - "tests/dbshell/test_postgresql.py:58:30          someuser            U       \"USER\": \"someuser\","
  - "tests/dbshell/test_postgresql.py:72:22          PGSSLCERT           U       \"PGSSLCERT\": \"client.crt\","
  - "tests/dbshell/test_postgresql.py:73:22          PGSSLKEY            U       \"PGSSLKEY\": \"client.key\","
  - "tests/dbshell/test_postgresql.py:74:22          PGSSLMODE           U       \"PGSSLMODE\": \"verify-ca\","
  - "tests/dbshell/test_postgresql.py:75:22          PGSSLROOTCERT       U       \"PGSSLROOTCERT\": \"root.crt\","
  - "tests/dbshell/test_postgresql.py:83:26          PGSERVICE           U       ([\"psql\"], {\"PGSERVICE\": \"django_test\"}),"
  - "tests/dbshell/test_postgresql.py:95:41          custompgpass        U       \"passfile\": \"~/.custompgpass\","
  - "tests/dbshell/test_postgresql.py:101:19         PGPASSFILE          U       {\"PGPASSFILE\": \"~/.custompgpass\""
  - "tests/dbshell/test_postgresql.py:101:36         custompgpass        U       {\"PGPASSFILE\": \"~/.custompgpass\"},"
  - "tests/dbshell/test_postgresql.py:109:41         custompgpass        U       \"passfile\": \"~/.custompgpass\","
  - "tests/dbshell/test_postgresql.py:115:19         PGSERVICE           U       {\"PGSERVICE\": \"django_test\", \"PGPASSFILE"
  - "tests/dbshell/test_postgresql.py:115:47         PGPASSFILE          U       PGSERVICE\": \"django_test\", \"PGPASSFILE\": \"~/.custompgpass\""
  - "tests/dbshell/test_postgresql.py:115:64         custompgpass        U       , \"PGPASSFILE\": \"~/.custompgpass\"},"
  - "tests/dbshell/test_postgresql.py:137:21         rôle                U       username = \"rôle\""
  - "tests/dbshell/test_postgresql.py:138:21         sésame              U       password = \"sésame\""
  - "tests/dbshell/test_postgresql.py:180:65         somepassword        U       args_env({\"PASSWORD\": \"somepassword\"}, [])"
  - "tests/dbshell/test_postgresql.py:187:27         somepassword        U       self.assertNotIn(\"somepassword\", str(ctx.exception"
  - "tests/decorators/test_clickjacking.py:7:5           xframe      U       xframe_options_deny,"
  - "tests/decorators/test_clickjacking.py:8:5           xframe      U       xframe_options_exempt,"
  - "tests/decorators/test_clickjacking.py:9:5           xframe      U       xframe_options_sameorigin,"
  - "tests/decorators/test_clickjacking.py:18:24         xframe      U       wrapped_view = xframe_options_deny(sync_view"
  - "tests/decorators/test_clickjacking.py:25:24         xframe      U       wrapped_view = xframe_options_deny(async_view"
  - "tests/decorators/test_csrf.py:13:16         bcdefghij       U       CSRF_TOKEN = \"1bcdefghij2bcdefghij3bcdefghij"
  - "tests/decorators/test_csrf.py:13:26         bcdefghij       U       TOKEN = \"1bcdefghij2bcdefghij3bcdefghij4bcdefghij"
  - "tests/decorators/test_csrf.py:13:36         bcdefghij       U       bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij"
  - "tests/decorators/test_csrf.py:13:46         bcdefghij       U       bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD"
  - "tests/decorators/test_csrf.py:13:56         bcdefghij       U       bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD\""
  - "tests/decorators/tests.py:282:16        argumented                  U       # Test for argumented decorator"
  - "tests/decorators/tests.py:283:14        argumented                  U       def test_argumented(self):"
  - "tests/decorators/tests.py:570:20        argumented                  U       async def test_argumented(self):"
  - "tests/decorators/tests.py:690:20        markcoroutinefunction       U       async def test_markcoroutinefunction_applied(self):"
  - "tests/defer_regress/tests.py:148:22         ofield      U       # side has o2ofield or unique FK) - the"
  - "tests/defer_regress/tests.py:360:21         defered     U       def test_delete_defered_model(self):"
  - "tests/defer_regress/tests.py:365:21         defered     U       def test_delete_defered_proxy_model(self):"
  - "tests/delete_regress/tests.py:317:30        extraf          U       ).extra(select={\"extraf\": \"1\"}).filter(pk=self"
  - "tests/delete_regress/tests.py:404:18        querycount      U       def test_set_querycount(self):"
  - "tests/delete/models.py:178:69       rels    U       NOTHING, related_name=\"rels\")"
  - "tests/delete/tests.py:151:25        qscount     U       def test_do_nothing_qscount(self):"
  - "tests/delete/tests.py:405:9         rchild      U       rchild = RChild.objects.create"
  - "tests/delete/tests.py:413:26        rchild      U       (RChild, rchild.pk),"
  - "tests/delete/tests.py:424:26        rchild      U       (RChild, rchild.pk),"
  - "tests/delete/tests.py:565:32        rchild      U       parent_id = childchild.rchild_ptr.r_ptr_id"
  - "tests/delete/tests.py:566:31        rchild      U       child_id = childchild.rchild_ptr_id"
  - "tests/delete/tests.py:703:26        revm        U       def test_fast_delete_revm2m(self):"
  - "tests/delete/tests.py:778:9         referer     U       referer = Referrer.objects.create"
  - "tests/delete/tests.py:780:13        referer     U       referer.delete()"
  - "tests/delete/tests.py:789:21        rels        U       rels_count=models.Count("
  - "tests/delete/tests.py:789:46        rels        U       count=models.Count(\"rels\"),"
  - "tests/delete/tests.py:791:25        rels        U       .filter(rels_count=0)"
  - "tests/deprecation/tests.py:177:14       removedafternextversionwarning      U       def test_removedafternextversionwarning_pending(self):"
  - "tests/dispatch/tests.py:87:21       garbaged    U       def test_cached_garbaged_collected(self):"
  - "tests/dispatch/tests.py:96:9        wref        U       wref = weakref.ref(sender"
  - "tests/dispatch/tests.py:102:31      wref        U       self.assertIsNone(wref())"
  - "tests/distinct_on_fields/models.py:41:5         organisation    U       organisation = models.CharField(max"
  - "tests/distinct_on_fields/tests.py:21:59         organisation    U       create(id=1, name=\"p1\", organisation=\"o1\")"
  - "tests/distinct_on_fields/tests.py:22:59         organisation    U       create(id=2, name=\"p2\", organisation=\"o1\")"
  - "tests/distinct_on_fields/tests.py:23:59         organisation    U       create(id=3, name=\"p3\", organisation=\"o1\")"
  - "tests/distinct_on_fields/tests.py:24:59         organisation    U       create(id=4, name=\"p1\", organisation=\"o2\")"
  - "tests/distinct_on_fields/tests.py:38:12         qset            U       # (qset, expected) tuples"
  - "tests/distinct_on_fields/tests.py:39:9          qsets           U       qsets = ("
  - "tests/distinct_on_fields/tests.py:49:41         organisation    U       Staff.objects.distinct(\"organisation\").order_by(\"organisation"
  - "tests/distinct_on_fields/tests.py:101:13        qset            U       for qset, expected in qsets:"
  - "tests/distinct_on_fields/tests.py:101:31        qsets           U       for qset, expected in qsets:"
  - "tests/distinct_on_fields/tests.py:102:38        qset            U       assertSequenceEqual(qset, expected)"
  - "tests/distinct_on_fields/tests.py:103:30        qset            U       self.assertEqual(qset.count(), len(expected"
  - "tests/distinct_on_fields/tests.py:115:21        unreffing       U       # Test join unreffing"
  - "tests/expressions_case/tests.py:162:12      rels        U       fk_rels = FKCaseTestModel.objects"
  - "tests/expressions_case/tests.py:168:44      rels        U       When(fk_rel__in=fk_rels, then=F(\"fk_rel__integer"
  - "tests/expressions_case/tests.py:473:44      somecase    U       aseTestModel.objects.annotate(somecase=SOME_CASE).order_by"
  - "tests/expressions_case/tests.py:474:44      somecase    U       aseTestModel.objects.annotate(somecase=SOME_CASE)"
  - "tests/expressions_case/tests.py:476:33      somecase    U       .values_list(\"pk\", \"somecase\"),"
  - "tests/expressions_case/tests.py:477:32      somecase    U       lambda x: (x.pk, x.somecase),"
  - "tests/expressions_window/tests.py:76:23         Jenson      U       (\"Jenson\", 45000, \"Accounting"
  - "tests/expressions_window/tests.py:115:27        Jenson      U       (\"Jenson\", 45000, \"Accounting"
  - "tests/expressions_window/tests.py:146:19        Jenson      U       (\"Jenson\", \"Accounting\", 450"
  - "tests/expressions_window/tests.py:185:19        Jenson      U       (\"Jenson\", 45000, \"Accounting"
  - "tests/expressions_window/tests.py:222:19        Jenson      U       (\"Jenson\", \"Accounting\", 3),"
  - "tests/expressions_window/tests.py:615:14        cume        U       def test_cume_dist(self):"
  - "tests/expressions_window/tests.py:621:13        cume        U       cume_dist=Window("
  - "tests/expressions_window/tests.py:626:27        cume        U       # Round result of cume_dist because Oracle"
  - "tests/expressions_window/tests.py:647:27        cume        U       round(row.cume_dist, 10),"
  - "tests/expressions_window/tests.py:1758:60       Nowak       U       department\": \"IT\", \"name\": \"Nowak\", \"salary\": 32000})"
  - "tests/expressions_window/tests.py:1787:27       Nowak       U       (\"Nowak\", \"IT\", 32000, 3200"
  - "tests/expressions/models.py:107:7       UUIDPK      U       class UUIDPK(models.Model):"
  - "tests/expressions/models.py:113:33      UUIDPK      U       = models.ForeignKey(UUIDPK, models.CASCADE, null"
  - "tests/expressions/test_queryset_values.py:27:44         Mustermann      U       firstname=\"Max\", lastname=\"Mustermann\", salary=30"
  - "tests/expressions/tests.py:79:5         UUIDPK          U       UUIDPK,"
  - "tests/expressions/tests.py:110:40       Mustermann      U       firstname=\"Max\", lastname=\"Mustermann\", salary=30"
  - "tests/expressions/tests.py:214:34       Examp           U       F(\"name\")[:6][:5], \"Examp\"), # Nested slicing"
  - "tests/expressions/tests.py:254:31       mple            U       (\"after_three\", [\"mple Inc.\", \"bar Ltd.\","
  - "tests/expressions/tests.py:354:47       Mustermann      U       \"Frank Meyer\", \"Max Mustermann\"],"
  - "tests/expressions/tests.py:372:46       Rossum          U       Guido\", lastname=\"van Rossum\""
  - "tests/expressions/tests.py:407:36       Funcs           U       should be able to use Funcs when inserting new data"
  - "tests/expressions/tests.py:505:19       multijoin       U       # Reverse multijoin F() references and the"
  - "tests/expressions/tests.py:545:41       Mustermann      U       firstname=\"Mary\", lastname=\"Mustermann\", salary=20"
  - "tests/expressions/tests.py:547:9        mustermanns     U       mustermanns_by_seniority = Employee"
  - "tests/expressions/tests.py:548:23       Mustermann      U       lastname=\"Mustermann\""
  - "tests/expressions/tests.py:553:34       mustermanns     U       assertSequenceEqual(mustermanns_by_seniority, [self"
  - "tests/expressions/tests.py:733:13       UUIDPK          U       u = UUIDPK.objects.create()"
  - "tests/expressions/tests.py:735:14       UUIDPK          U       qs = UUIDPK.objects.filter(id__in"
  - "tests/expressions/tests.py:1182:61      LOUTER          U       join_type, constants.LOUTER)"
  - "tests/expressions/tests.py:1586:40      modsalary       U       Employee.objects.annotate(modsalary=F(\"salary\") % 20)"
  - "tests/expressions/tests.py:1615:60      Mustermann      U       firstname=\"Max\", lastname=\"Mustermann\")"
  - "tests/expressions/tests.py:1706:14      righthand       U       def test_righthand_power(self):"
  - "tests/expressions/tests.py:1720:13      sday            U       cls.sday = sday = datetime.date"
  - "tests/expressions/tests.py:1720:20      sday            U       cls.sday = sday = datetime.date(201"
  - "tests/expressions/tests.py:1741:22      sday            U       assigned=sday,"
  - "tests/expressions/tests.py:1760:22      sday            U       assigned=sday,"
  - "tests/expressions/tests.py:1774:22      sday            U       assigned=sday - datetime.timedelta"
  - "tests/expressions/tests.py:2499:46      anothercol      U       ExpressionList(F(\"col\"), F(\"anothercol\"))),"
  - "tests/expressions/tests.py:2500:39      anothercol      U       ExpressionList(F(col), F(anothercol))\","
  - "tests/extra_regress/models.py:8:7           Revisionable    U       class RevisionableModel(models.Model):"
  - "tests/extra_regress/tests.py:6:28           Revisionable    U       models import Order, RevisionableModel, TestObject"
  - "tests/extra_regress/tests.py:20:14          Revisionable    U       rm = RevisionableModel.objects.create"
  - "tests/extra_regress/tests.py:37:14          Revisionable    U       qs = RevisionableModel.objects.extra("
  - "tests/extra_regress/tests.py:42:30          Revisionable    U       \"table\": RevisionableModel._meta.db_table"
  - "tests/extra_regress/tests.py:54:15          Revisionable    U       qs2 = RevisionableModel.objects.filter"
  - "tests/field_deconstruction/tests.py:458:28      barness     U       upload_to=\"foo/barness\", width_field=\"width"
  - "tests/field_deconstruction/tests.py:466:35      barness     U       \"upload_to\": \"foo/barness\","
  - "tests/field_defaults/tests.py:220:37        nocase      U       Collate(Value(\"John\"), \"nocase\"),"
  - "tests/file_storage/test_base.py:62:52       monkeypatching      U       this is achieved by monkeypatching _save)."
  - "tests/file_storage/test_generate_filename.py:10:7           AWSS    U       class AWSS3Storage(Storage):"
  - "tests/file_storage/test_generate_filename.py:216:24         awss    U       def test_filefield_awss3_storage(self):"
  - "tests/file_storage/test_generate_filename.py:222:19         AWSS    U       storage = AWSS3Storage()"
  - "tests/file_storage/test_generate_filename.py:228:24         AWSS    U       expected_key = AWSS3Storage.prefix + folder"
  - "tests/file_storage/tests.py:304:19      doesnt (doesn't)    U       def test_save_doesnt_close(self):"
  - "tests/file_storage/tests.py:589:73      Trac                U       than underscores, like Trac."
  - "tests/file_storage/tests.py:742:27      longext             U       name = \"file_name.longext\""
  - "tests/file_storage/tests.py:766:34      stringio            U       storage.save(\"tests/stringio\", output)"
  - "tests/file_storage/tests.py:767:52      stringio            U       storage.exists(\"tests/stringio\"))"
  - "tests/file_storage/tests.py:769:39      stringio            U       storage.open(\"tests/stringio\") as f:"
  - "tests/file_storage/tests.py:780:60      AUFS                U       filename length (e.g. AUFS has 242)."
  - "tests/file_storage/tests.py:786:23      pathconf            U       return os.pathconf(dir_to_test, \"PC_NAME"
  - "tests/file_storage/tests.py:908:31      longext             U       filename = \"short.longext\""
  - "tests/file_storage/tests.py:1017:14     stringio            U       def test_stringio(self):"
  - "tests/file_storage/tests.py:1024:34     stringio            U       storage.save(\"tests/stringio\", output)"
  - "tests/file_storage/tests.py:1143:63     umasks              U       only partially supports umasks and chmod.\""
  - "tests/file_uploads/tests.py:377:49      monkeybusiness      U       uploader We have to do some monkeybusiness here to construct"
  - "tests/file_uploads/tests.py:660:14      fileupload          U       def test_fileupload_getlist(self):"
  - "tests/file_uploads/tests.py:688:14      fileuploads         U       def test_fileuploads_closed_at_request_end"
  - "tests/file_uploads/views.py:57:5        largefile       U       largefile = request.FILES[\"file"
  - "tests/file_uploads/views.py:59:23       largefile       U       obj.testfile.save(largefile.name, largefile)"
  - "tests/file_uploads/views.py:59:39       largefile       U       save(largefile.name, largefile)"
  - "tests/files/tests.py:36:34          Cómo            U       UploadedFile(name=\"¿Cómo?\", content_type=\"text"
  - "tests/files/tests.py:40:25          djángö          U       f = File(None, \"djángö\")"
  - "tests/files/tests.py:230:14         noname          U       def test_noname_file_default_name(self"
  - "tests/files/tests.py:233:14         noname          U       def test_noname_file_get_size(self)"
  - "tests/files/tests.py:390:9          brokenimg       U       brokenimg.png is not a valid image"
  - "tests/files/tests.py:391:24         brokenimg       U       $ echo \"123\" > brokenimg.png"
  - "tests/files/tests.py:393:61         brokenimg       U       dirname(__file__), \"brokenimg.png\")"
  - "tests/files/tests.py:448:23         CIFS            U       filesystem is CIFS, or when relabel is"
  - "tests/files/tests.py:503:38         quux            U       write(b\"foo bar baz quux\\n\")"
  - "tests/files/tests.py:509:38         quux            U       write(b\"foo bar baz quux\\n\")"
  - "tests/filtered_relation/tests.py:303:23         multijoin       U       def test_with_m2m_multijoin(self):"
  - "tests/fixtures_regress/tests.py:1:3         Unittests           U       # Unittests for fixtures."
  - "tests/fixtures_regress/tests.py:94:41       anatinus            U       name=\"Ornithorhynchus anatinus\","
  - "tests/fixtures_regress/tests.py:259:50      ture                U       installing fixture 'bad_fix.ture1': unkn is not a known"
  - "tests/fixtures_regress/tests.py:265:26      ture                U       \"bad_fix.ture1.unkn\","
  - "tests/fixtures_regress/tests.py:270:14      unimportable        U       def test_unimportable_serializer(self):"
  - "tests/fixtures_regress/tests.py:277:26      ture                U       \"bad_fix.ture1.unkn\","
  - "tests/fixtures_regress/tests.py:412:41      anatinus            U       name=\"Ornithorhynchus anatinus\","
  - "tests/fixtures_regress/tests.py:442:40      Panthera            U       \"latin_name\": \"Panthera leo\","
  - "tests/fixtures_regress/tests.py:452:40      Dromaius            U       \"latin_name\": \"Dromaius novaehollandiae\","
  - "tests/fixtures_regress/tests.py:452:49      novaehollandiae     U       latin_name\": \"Dromaius novaehollandiae\","
  - "tests/fixtures_regress/tests.py:462:56      anatinus            U       name\": \"Ornithorhynchus anatinus\","
  - "tests/fixtures_regress/tests.py:484:31      widgetproxy         U       \"fixtures_regress.widgetproxy\","
  - "tests/fixtures_regress/tests.py:583:16      mtoself             U       \"m2mtoself.json\","
  - "tests/fixtures_regress/tests.py:725:22      Cryptonomicon       U       \"name\": \"Cryptonomicon\", \"author\": [\"Neal Stephenson"
  - "tests/fixtures_regress/tests.py:843:25      Cryptonomicon       U       \"<Book: Cryptonomicon by Neal Stephenson"
  - "tests/fixtures_regress/tests.py:847:50      Egan                U       Permutation City by Greg Egan (available at Angus"
  - "tests/fixtures/models.py:4:63           Fixure      U       the database in bulk. Fixure data"
  - "tests/fixtures/tests.py:308:25      Stephane            U       \"<Visa: Stephane Grappelli Can add user"
  - "tests/fixtures/tests.py:308:34      Grappelli           U       \"<Visa: Stephane Grappelli Can add user>\","
  - "tests/fixtures/tests.py:322:25      Stephane            U       \"<Visa: Stephane Grappelli Can add user"
  - "tests/fixtures/tests.py:322:34      Grappelli           U       \"<Visa: Stephane Grappelli Can add user, Can delete"
  - "tests/fixtures/tests.py:361:35      Stephane            U       \"fields\": {\"name\": \"Stephane Grappelli\"}, \"model"
  - "tests/fixtures/tests.py:361:44      Grappelli           U       {\"name\": \"Stephane Grappelli\"}, \"model\": \"fixtures"
  - "tests/fixtures/tests.py:399:34      Stephane            U       \"fields\": {\"name\": \"Stephane Grappelli\"}}, '"
  - "tests/fixtures/tests.py:399:43      Grappelli           U       {\"name\": \"Stephane Grappelli\"}}, '"
  - "tests/fixtures/tests.py:407:27      Stephane            U       '{\"person\": [\"Stephane Grappelli\"], \"permissions"
  - "tests/fixtures/tests.py:407:36      Grappelli           U       person\": [\"Stephane Grappelli\"], \"permissions\": '"
  - "tests/fixtures/tests.py:947:69      someotherapp        U       verbosity=0, app_label=\"someotherapp\""
  - "tests/fixtures/tests.py:1160:59     doesnt (doesn't)    U       named 'this_fixture_doesnt_exist' found.\""
  - "tests/fixtures/tests.py:1163:43     doesnt (doesn't)    U       loaddata\", \"this_fixture_doesnt_exist\", stdout=stdout"
  - "tests/fixtures/tests.py:1176:59     doesnt (doesn't)    U       named 'this_fixture_doesnt_exist' found.\""
  - "tests/fixtures/tests.py:1179:43     doesnt (doesn't)    U       loaddata\", \"this_fixture_doesnt_exist\", verbosity=0"
  - "tests/fixtures/tests.py:1323:35     circulara           U       {\"model\": \"fixtures.circulara\", \"pk\": 1, '"
  - "tests/fixtures/tests.py:1325:34     circularb           U       {\"model\": \"fixtures.circularb\", \"pk\": 1, '"
  - "tests/fixtures/tests.py:1341:35     circulara           U       {\"model\": \"fixtures.circulara\", '"
  - "tests/fixtures/tests.py:1343:34     circularb           U       {\"model\": \"fixtures.circularb\", '"
  - "tests/flatpages_tests/test_csrf.py:49:19        sekrit      U       url=\"/sekrit/\","
  - "tests/flatpages_tests/test_csrf.py:50:20        Sekrit      U       title=\"Sekrit Flatpage\","
  - "tests/flatpages_tests/test_csrf.py:51:31        sekrit      U       content=\"Isn't it sekrit!\","
  - "tests/flatpages_tests/test_csrf.py:57:28        sekrit      U       url=\"/location/sekrit/\","
  - "tests/flatpages_tests/test_csrf.py:58:20        Sekrit      U       title=\"Sekrit Nested Flatpage\","
  - "tests/flatpages_tests/test_csrf.py:59:31        sekrit      U       content=\"Isn't it sekrit and deep!\","
  - "tests/flatpages_tests/test_csrf.py:87:52        sekrit      U       get(\"/flatpage_root/sekrit/\")"
  - "tests/flatpages_tests/test_csrf.py:89:76        krit        U       test@example.com\", \"s3krit\")"
  - "tests/flatpages_tests/test_forms.py:84:23       doesnt (doesn't)    U       def test_flatpage_doesnt_requires_trailing_slash"
  - "tests/flatpages_tests/test_forms.py:137:23      nosites             U       def test_flatpage_nosites(self):"
  - "tests/flatpages_tests/test_middleware.py:34:19          sekrit      U       url=\"/sekrit/\","
  - "tests/flatpages_tests/test_middleware.py:35:20          Sekrit      U       title=\"Sekrit Flatpage\","
  - "tests/flatpages_tests/test_middleware.py:36:31          sekrit      U       content=\"Isn't it sekrit!\","
  - "tests/flatpages_tests/test_middleware.py:42:28          sekrit      U       url=\"/location/sekrit/\","
  - "tests/flatpages_tests/test_middleware.py:43:20          Sekrit      U       title=\"Sekrit Nested Flatpage\","
  - "tests/flatpages_tests/test_middleware.py:44:31          sekrit      U       content=\"Isn't it sekrit and deep!\","
  - "tests/flatpages_tests/test_middleware.py:86:52          sekrit      U       get(\"/flatpage_root/sekrit/\")"
  - "tests/flatpages_tests/test_middleware.py:88:76          krit        U       test@example.com\", \"s3krit\")"
  - "tests/flatpages_tests/test_middleware.py:110:76         krit        U       test@example.com\", \"s3krit\")"
  - "tests/flatpages_tests/test_models.py:10:31          urlencodes      U       test_get_absolute_url_urlencodes(self):"
  - "tests/flatpages_tests/test_models.py:26:58          flatpagecaf     U       get_absolute_url(), \"/flatpagecaf%C3%A9/\")"
  - "tests/flatpages_tests/test_templatetags.py:32:19        sekrit      U       url=\"/sekrit/\","
  - "tests/flatpages_tests/test_templatetags.py:33:20        Sekrit      U       title=\"Sekrit Flatpage\","
  - "tests/flatpages_tests/test_templatetags.py:34:31        sekrit      U       content=\"Isn't it sekrit!\","
  - "tests/flatpages_tests/test_templatetags.py:40:28        sekrit      U       url=\"/location/sekrit/\","
  - "tests/flatpages_tests/test_templatetags.py:41:20        Sekrit      U       title=\"Sekrit Nested Flatpage\","
  - "tests/flatpages_tests/test_templatetags.py:42:31        sekrit      U       content=\"Isn't it sekrit and deep!\","
  - "tests/flatpages_tests/test_templatetags.py:70:35        anonuser    U       % get_flatpages for anonuser as flatpages %}\""
  - "tests/flatpages_tests/test_templatetags.py:74:28        anonuser    U       ).render(Context({\"anonuser\": AnonymousUser()})"
  - "tests/flatpages_tests/test_templatetags.py:79:74        krit        U       test@example.com\", \"s3krit\")"
  - "tests/flatpages_tests/test_templatetags.py:88:48        Sekrit      U       Flatpage,A Nested Flatpage,Sekrit Nested Flatpage,Sekrit"
  - "tests/flatpages_tests/test_templatetags.py:88:71        Sekrit      U       Sekrit Nested Flatpage,Sekrit Flatpage,\""
  - "tests/flatpages_tests/test_templatetags.py:109:48       anonuser    U       flatpages '/location/' for anonuser as location_flatpages"
  - "tests/flatpages_tests/test_templatetags.py:113:28       anonuser    U       ).render(Context({\"anonuser\": AnonymousUser()})"
  - "tests/flatpages_tests/test_templatetags.py:121:74       krit        U       test@example.com\", \"s3krit\")"
  - "tests/flatpages_tests/test_templatetags.py:129:50       Sekrit      U       \"A Nested Flatpage,Sekrit Nested Flatpage,\")"
  - "tests/flatpages_tests/test_views.py:34:19       sekrit      U       url=\"/sekrit/\","
  - "tests/flatpages_tests/test_views.py:35:20       Sekrit      U       title=\"Sekrit Flatpage\","
  - "tests/flatpages_tests/test_views.py:36:31       sekrit      U       content=\"Isn't it sekrit!\","
  - "tests/flatpages_tests/test_views.py:42:28       sekrit      U       url=\"/location/sekrit/\","
  - "tests/flatpages_tests/test_views.py:43:20       Sekrit      U       title=\"Sekrit Nested Flatpage\","
  - "tests/flatpages_tests/test_views.py:44:31       sekrit      U       content=\"Isn't it sekrit and deep!\","
  - "tests/flatpages_tests/test_views.py:83:52       sekrit      U       get(\"/flatpage_root/sekrit/\")"
  - "tests/flatpages_tests/test_views.py:85:76       krit        U       test@example.com\", \"s3krit\")"
  - "tests/foreign_object/test_forms.py:11:33        foreignobject       U       manually deal with the foreignobject relation."
  - "tests/foreign_object/test_tuple_lookups.py:75:9         cust    U       cust_1, cust_2, cust_3, cust"
  - "tests/foreign_object/test_tuple_lookups.py:75:17        cust    U       cust_1, cust_2, cust_3, cust_4, cust"
  - "tests/foreign_object/test_tuple_lookups.py:75:25        cust    U       cust_1, cust_2, cust_3, cust_4, cust_5 ="
  - "tests/foreign_object/test_tuple_lookups.py:75:33        cust    U       cust_1, cust_2, cust_3, cust_4, cust_5 = ("
  - "tests/foreign_object/test_tuple_lookups.py:75:41        cust    U       cust_2, cust_3, cust_4, cust_5 = ("
  - "tests/foreign_object/tests.py:412:43        Otsikko             U       , lang=\"fi\", title=\"Otsikko\", body=\"Diipadaapa\""
  - "tests/foreign_object/tests.py:412:59        Diipadaapa          U       title=\"Otsikko\", body=\"Diipadaapa\""
  - "tests/foreign_object/tests.py:416:57        Lalalalala          U       title=\"Title\", body=\"Lalalalala\""
  - "tests/foreign_object/tests.py:424:44        Otsikko             U       translation__title=\"Otsikko\""
  - "tests/foreign_object/tests.py:426:65        Otsikko             U       translation.title, \"Otsikko\")"
  - "tests/foreign_object/tests.py:429:43        Atsikko             U       , lang=\"fi\", title=\"Atsikko\", body=\"Diipadaapa\""
  - "tests/foreign_object/tests.py:429:59        Diipadaapa          U       title=\"Atsikko\", body=\"Diipadaapa\", abstract=\"dipad\""
  - "tests/foreign_object/tests.py:429:82        dipad               U       Diipadaapa\", abstract=\"dipad\""
  - "tests/foreign_object/tests.py:434:59        lalalalala          U       title=\"A title\", body=\"lalalalala\", abstract=\"lala\""
  - "tests/foreign_object/tests.py:474:31        newsarticle         U       \"id, idea_things, newsarticle, pub_date, tag\""
  - "tests/foreign_object/tests.py:488:31        newsarticle         U       \"id, idea_things, newsarticle, pub_date, tag\""
  - "tests/foreign_object/tests.py:683:23        foreignobjectrel    U       def test_pickling_foreignobjectrel(self):"
  - "tests/foreign_object/tests.py:689:47        behaviour           U       doesn't share the same behaviour."
  - "tests/foreign_object/tests.py:698:23        foreignobject       U       def test_pickling_foreignobject(self):"
  - "tests/forms_tests/field_tests/test_base.py:23:20        deepcopies      U       def test_field_deepcopies_widget_instance(self"
  - "tests/forms_tests/field_tests/test_datefield.py:131:12      Geef        U       # 'Geef een geldige datum op"
  - "tests/forms_tests/field_tests/test_datefield.py:131:21      geldige     U       # 'Geef een geldige datum op.' = 'Enter"
  - "tests/forms_tests/field_tests/test_datefield.py:132:49      Voer        U       errors, {\"mydate\": [\"Voer een geldige datum in"
  - "tests/forms_tests/field_tests/test_datefield.py:132:58      geldige     U       mydate\": [\"Voer een geldige datum in.\"]})"
  - "tests/forms_tests/field_tests/test_decimalfield.py:78:14        łąść    U       \"łąść\","
  - "tests/forms_tests/field_tests/test_durationfield.py:55:19       nombre      U       msg = \"Le nombre de jours doit être entre"
  - "tests/forms_tests/field_tests/test_durationfield.py:55:29       jours       U       msg = \"Le nombre de jours doit être entre {min"
  - "tests/forms_tests/field_tests/test_durationfield.py:55:40       être        U       nombre de jours doit être entre {min_days} et"
  - "tests/forms_tests/field_tests/test_emailfield.py:25:52          xdfabc      U       idn.xyz\\xe4\\xf6\\xfc\\xdfabc.part.com\","
  - "tests/forms_tests/field_tests/test_emailfield.py:26:47          äöüßabc     U       local@domain.with.idn.xyzäöüßabc.part.com\"),"
  - "tests/forms_tests/field_tests/test_filefield.py:57:22       मेरी        U       \"मेरी मँडराने वाली नाव सर"
  - "tests/forms_tests/field_tests/test_filefield.py:57:27       मँडराने     U       \"मेरी मँडराने वाली नाव सर्पमीनों"
  - "tests/forms_tests/field_tests/test_filefield.py:57:35       वाली        U       \"मेरी मँडराने वाली नाव सर्पमीनों से भर"
  - "tests/forms_tests/field_tests/test_filefield.py:57:44       सर्पमीनो    U       री मँडराने वाली नाव सर्पमीनों से भरी ह\".encode()"
  - "tests/forms_tests/field_tests/test_jsonfield.py:40:44       jaźń            U       prepare_value([\"你好，世界\", \"jaźń\"]),"
  - "tests/forms_tests/field_tests/test_jsonfield.py:41:25       jaźń            U       '[\"你好，世界\", \"jaźń\"]',"
  - "tests/forms_tests/field_tests/test_jsonfield.py:124:20      overquote       U       should not overquote JSONField inputs."
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:25:20        nullbool    U       hidden_nullbool1 = NullBooleanField"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:26:20        nullbool    U       hidden_nullbool2 = NullBooleanField"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:31:48        nullbool    U       hidden\" name=\"hidden_nullbool1\" value=\"True\" '"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:32:28        nullbool    U       'id=\"id_hidden_nullbool1\">'"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:33:48        nullbool    U       hidden\" name=\"hidden_nullbool2\" value=\"False\" '"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:52:9         NULLBOOL    U       NULLBOOL_CHOICES = ((\"1\", \"Yes"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:55:69        NULLBOOL    U       RadioSelect(choices=NULLBOOL_CHOICES))"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:56:69        NULLBOOL    U       RadioSelect(choices=NULLBOOL_CHOICES))"
  - "tests/forms_tests/field_tests/test_nullbooleanfield.py:57:69        NULLBOOL    U       RadioSelect(choices=NULLBOOL_CHOICES))"
  - "tests/forms_tests/field_tests/test_regexfield.py:65:27          éèøç    U       self.assertEqual(\"éèøçÎÎ你好\", f.clean(\"éèøç"
  - "tests/forms_tests/field_tests/test_regexfield.py:65:47          éèøç    U       éèøçÎÎ你好\", f.clean(\"éèøçÎÎ你好\"))"
  - "tests/forms_tests/field_tests/test_slugfield.py:17:35       ıçğüş       U       assertEqual(f.clean(\"ıçğüş\"), \"ıçğüş\")"
  - "tests/forms_tests/field_tests/test_slugfield.py:17:45       ıçğüş       U       ssertEqual(f.clean(\"ıçğüş\"), \"ıçğüş\")"
  - "tests/forms_tests/tests/test_error_messages.py:178:14       djangoproject       U       \"djangoproject.com\","
  - "tests/forms_tests/tests/test_forms.py:119:19        nonexistentfield        U       \"Key 'nonexistentfield' not found in 'Person"
  - "tests/forms_tests/tests/test_forms.py:123:16        nonexistentfield        U       p[\"nonexistentfield\"]"
  - "tests/forms_tests/tests/test_forms.py:897:15        Beatle                  U       class BeatleForm(Form):"
  - "tests/forms_tests/tests/test_forms.py:908:13        Beatle                  U       f = BeatleForm(auto_id=False)"
  - "tests/forms_tests/tests/test_forms.py:934:15        Beatle                  U       class BeatleForm(Form):"
  - "tests/forms_tests/tests/test_forms.py:945:23        Beatle                  U       fields = list(BeatleForm()[\"name\"])"
  - "tests/forms_tests/tests/test_forms.py:973:15        Beatle                  U       class BeatleForm(Form):"
  - "tests/forms_tests/tests/test_forms.py:1336:31       ducktyping              U       SelectMultiple uses ducktyping so that MultiValueDictLike"
  - "tests/forms_tests/tests/test_forms.py:1382:36       ducktyping              U       MultipleHiddenInput uses ducktyping so that"
  - "tests/forms_tests/tests/test_forms.py:1892:25       reuired                 U       ({\"class\": \"reuired\"}, {\"class\": \"required"
  - "tests/forms_tests/tests/test_forms.py:1937:38       unspec                  U       _init__(self, allow_unspec_gender=False, *args"
  - "tests/forms_tests/tests/test_forms.py:1940:26       unspec                  U       if allow_unspec_gender:"
  - "tests/forms_tests/tests/test_forms.py:1945:26       unspec                  U       f = Person(allow_unspec_gender=True)"
  - "tests/forms_tests/tests/test_forms.py:2139:47       describedby             U       widget_does_not_have_aria_describedby(self):"
  - "tests/forms_tests/tests/test_forms.py:2229:13       realname                U       realname = CharField("
  - "tests/forms_tests/tests/test_forms.py:2242:17       Realname                U       <li>Realname: <input type=\"text\""
  - "tests/forms_tests/tests/test_forms.py:2242:52       realname                U       input type=\"text\" name=\"realname\" maxlength=\"10\" required"
  - "tests/forms_tests/tests/test_forms.py:2273:64       Contraseña              U       PasswordInput, label=\"Contraseña (de nuevo)\")"
  - "tests/forms_tests/tests/test_forms.py:2273:79       nuevo                   U       label=\"Contraseña (de nuevo)\")"
  - "tests/forms_tests/tests/test_forms.py:2282:17       Contraseña              U       <li>Contraseña (de nuevo):"
  - "tests/forms_tests/tests/test_forms.py:2282:32       nuevo                   U       <li>Contraseña (de nuevo):"
  - "tests/forms_tests/tests/test_forms.py:2489:52       stephane                U       initial={\"username\": \"stephane\"}, auto_id=False)"
  - "tests/forms_tests/tests/test_forms.py:2493:69       stephane                U       name=\"username\" value=\"stephane\""
  - "tests/forms_tests/tests/test_forms.py:2546:52       babik                   U       initial={\"username\": \"babik\"}, auto_id=False)"
  - "tests/forms_tests/tests/test_forms.py:2550:69       babik                   U       name=\"username\" value=\"babik\""
  - "tests/forms_tests/tests/test_forms.py:2570:21       stephane                U       def initial_stephane():"
  - "tests/forms_tests/tests/test_forms.py:2571:21       stephane                U       return \"stephane\""
  - "tests/forms_tests/tests/test_forms.py:2689:42       stephane                U       \"username\": initial_stephane, \"options\": initial"
  - "tests/forms_tests/tests/test_forms.py:2738:44       Greatel                 U       CharField(initial=\"Greatel\")"
  - "tests/forms_tests/tests/test_forms.py:2742:55       Scrmbl                  U       Hans\", \"last_name\": \"Scrmbl\", \"birthday\": \"1974"
  - "tests/forms_tests/tests/test_forms.py:2760:31       Scrmbl                  U       \"last_name\": \"Scrmbl\","
  - "tests/forms_tests/tests/test_forms.py:2773:58       djangonaut              U       length=10, initial=\"djangonaut\")"
  - "tests/forms_tests/tests/test_forms.py:2779:56       djangonaut              U       username\"].value(), \"djangonaut\")"
  - "tests/forms_tests/tests/test_forms.py:2941:50       Wählen                  U       PasswordInput, help_text=\"Wählen Sie mit Bedacht.\""
  - "tests/forms_tests/tests/test_forms.py:2941:65       Bedacht                 U       text=\"Wählen Sie mit Bedacht.\""
  - "tests/forms_tests/tests/test_forms.py:2950:24       Wählen                  U       span class=\"helptext\">Wählen Sie mit Bedacht.</span"
  - "tests/forms_tests/tests/test_forms.py:2950:39       Bedacht                 U       helptext\">Wählen Sie mit Bedacht.</span></li>\"\"\","
  - "tests/forms_tests/tests/test_forms.py:2957:24       Wählen                  U       span class=\"helptext\">Wählen Sie mit Bedacht.</span"
  - "tests/forms_tests/tests/test_forms.py:2957:39       Bedacht                 U       helptext\">Wählen Sie mit Bedacht.</span></p>\"\"\","
  - "tests/forms_tests/tests/test_forms.py:2967:36       Wählen                  U       span class=\"helptext\">Wählen Sie mit Bedacht.</span"
  - "tests/forms_tests/tests/test_forms.py:2967:51       Bedacht                 U       helptext\">Wählen Sie mit Bedacht.</span></td></tr>\"\""
  - "tests/forms_tests/tests/test_forms.py:2973:51       Wählen                  U       div class=\"helptext\">Wählen Sie mit Bedacht.</div"
  - "tests/forms_tests/tests/test_forms.py:2973:66       Bedacht                 U       helptext\">Wählen Sie mit Bedacht.</div>'"
  - "tests/forms_tests/tests/test_forms.py:3043:39       describedby             U       widget_attrs_custom_aria_describedby(self):"
  - "tests/forms_tests/tests/test_forms.py:3044:16       describedby             U       # aria-describedby provided to the widget"
  - "tests/forms_tests/tests/test_forms.py:3050:47       describedby             U       TextInput(attrs={\"aria-describedby\": \"custom-description"
  - "tests/forms_tests/tests/test_forms.py:3062:19       describedby             U       'aria-describedby=\"custom-description"
  - "tests/forms_tests/tests/test_forms.py:3207:40       Rendang                 U       FoodForm({\"intl_name\": \"Rendang\"})"
  - "tests/forms_tests/tests/test_forms.py:3210:57       Rendang                 U       name=\"intl_name\" value=\"Rendang\"'"
  - "tests/forms_tests/tests/test_forms.py:3563:31       मेरी                    U       \"我隻氣墊船裝滿晒鱔.txt\", \"मेरी मँडराने वाली नाव सर"
  - "tests/forms_tests/tests/test_forms.py:3563:36       मँडराने                 U       氣墊船裝滿晒鱔.txt\", \"मेरी मँडराने वाली नाव सर्पमीनों"
  - "tests/forms_tests/tests/test_forms.py:3563:44       वाली                    U       txt\", \"मेरी मँडराने वाली नाव सर्पमीनों से भर"
  - "tests/forms_tests/tests/test_forms.py:3563:53       सर्पमीनो                U       री मँडराने वाली नाव सर्पमीनों से भरी ह\".encode()"
  - "tests/forms_tests/tests/test_forms.py:4205:54       splithiddendatetime     U       birthday\"].widget_type, \"splithiddendatetime\")"
  - "tests/forms_tests/tests/test_forms.py:4471:14       baseform                U       def test_baseform_repr(self):"
  - "tests/forms_tests/tests/test_forms.py:4496:72       fakedate                U       Lennon\", \"birthday\": \"fakedate\"}"
  - "tests/forms_tests/tests/test_forms.py:4504:14       baseform                U       def test_baseform_repr_dont_trigger_validation"
  - "tests/forms_tests/tests/test_forms.py:4509:72       fakedate                U       Lennon\", \"birthday\": \"fakedate\"}"
  - "tests/forms_tests/tests/test_forms.py:4532:55       sirrobin                U       cleaned_data[\"username\"], \"sirrobin\")"
  - "tests/forms_tests/tests/test_forms.py:4545:55       sirrobin                U       cleaned_data[\"username\"], \"sirrobin\")"
  - "tests/forms_tests/tests/test_forms.py:4563:55       sirrobin                U       cleaned_data[\"username\"], \"sirrobin\")"
  - "tests/forms_tests/tests/test_forms.py:4852:26       myradio                 U       '<div class=\"myradio\">{{ radio }}</div>'"
  - "tests/forms_tests/tests/test_forms.py:4857:26       myradio                 U       '<div class=\"myradio\"><label for=\"id_language"
  - "tests/forms_tests/tests/test_forms.py:4860:26       myradio                 U       '<div class=\"myradio\"><label for=\"id_language"
  - "tests/forms_tests/tests/test_forms.py:4869:26       mycheckbox              U       '<div class=\"mycheckbox\">{{ checkbox }}</div"
  - "tests/forms_tests/tests/test_forms.py:4874:26       mycheckbox              U       '<div class=\"mycheckbox\"><label>'"
  - "tests/forms_tests/tests/test_forms.py:4877:26       mycheckbox              U       '<div class=\"mycheckbox\"><label>'"
  - "tests/forms_tests/tests/test_forms.py:5068:48       doesn                   U       picking a username that doesn&#x27;t already exist"
  - "tests/forms_tests/tests/test_formsets.py:281:41         Decemberists    U       Calexico\", \"100\"), (\"The Decemberists\", \"\")], initial_forms"
  - "tests/forms_tests/tests/test_formsets.py:555:38         Decemberists    U       choices-1-choice\": \"The Decemberists\","
  - "tests/forms_tests/tests/test_formsets.py:604:25         Fergie          U       {\"choice\": \"Fergie\", \"votes\": 900},"
  - "tests/forms_tests/tests/test_formsets.py:613:76         Fergie          U       choices-1-choice\" value=\"Fergie\">'"
  - "tests/forms_tests/tests/test_formsets.py:622:37         Fergie          U       go ahead and delete Fergie."
  - "tests/forms_tests/tests/test_formsets.py:631:34         Fergie          U       choices-1-choice\": \"Fergie\","
  - "tests/forms_tests/tests/test_formsets.py:644:59         Fergie          U       DELETE\": True, \"choice\": \"Fergie\"},"
  - "tests/forms_tests/tests/test_formsets.py:777:38         Decemberists    U       choices-2-choice\": \"The Decemberists\","
  - "tests/forms_tests/tests/test_formsets.py:786:59         Decemberists    U       : 0, \"choice\": \"The Decemberists\"},"
  - "tests/forms_tests/tests/test_formsets.py:838:38         Decemberists    U       choices-2-choice\": \"The Decemberists\","
  - "tests/forms_tests/tests/test_formsets.py:841:34         Basia           U       choices-3-choice\": \"Basia Bulat\","
  - "tests/forms_tests/tests/test_formsets.py:841:40         Bulat           U       choices-3-choice\": \"Basia Bulat\","
  - "tests/forms_tests/tests/test_formsets.py:854:57         Basia           U       ORDER\": None, \"choice\": \"Basia Bulat\"},"
  - "tests/forms_tests/tests/test_formsets.py:854:63         Bulat           U       None, \"choice\": \"Basia Bulat\"},"
  - "tests/forms_tests/tests/test_formsets.py:1043:66        Fernet          U       inkFormSet(initial=[{\"name\": \"Fernet and Coke\"}])"
  - "tests/forms_tests/tests/test_formsets.py:1048:58        Fernet          U       form-0-name\" value=\"Fernet and Coke\""
  - "tests/forms_tests/tests/test_formsets.py:1069:23        Fernet          U       {\"name\": \"Fernet and Coke\"},"
  - "tests/forms_tests/tests/test_formsets.py:1081:24        Fernet          U       value=\"Fernet and Coke\"></div>"
  - "tests/forms_tests/tests/test_formsets.py:1338:40        mgmt            U       someone fiddles with the mgmt form data..."
  - "tests/forms_tests/tests/test_i18n.py:35:46          Benutzername    U       label for=\"id_username\">Benutzername:</label>'"
  - "tests/forms_tests/tests/test_i18n.py:42:46          nazwa           U       label for=\"id_username\">nazwa u\\u017cytkownika:</label"
  - "tests/forms_tests/tests/test_i18n.py:42:58          cytkownika      U       username\">nazwa u\\u017cytkownika:</label>'"
  - "tests/forms_tests/tests/test_i18n.py:74:13          somechoice      U       somechoice = ChoiceField("
  - "tests/forms_tests/tests/test_i18n.py:75:61          Mies            U       tied\\xe4\"), (\"\\xf8\", \"Mies\"), (\"\\xdf\", \"Nainen"
  - "tests/forms_tests/tests/test_i18n.py:75:79          Nainen          U       \"Mies\"), (\"\\xdf\", \"Nainen\")),"
  - "tests/forms_tests/tests/test_i18n.py:84:26          somechoice      U       '<div id=\"id_somechoice\">\\n'"
  - "tests/forms_tests/tests/test_i18n.py:85:34          somechoice      U       <div><label for=\"id_somechoice_0\">'"
  - "tests/forms_tests/tests/test_i18n.py:86:41          somechoice      U       type=\"radio\" id=\"id_somechoice_0\" value=\"\\xc5\" name"
  - "tests/forms_tests/tests/test_i18n.py:86:74          somechoice      U       value=\"\\xc5\" name=\"somechoice\" '"
  - "tests/forms_tests/tests/test_i18n.py:90:24          Mies            U       'required> Mies</label></div>\\n<div"
  - "tests/forms_tests/tests/test_i18n.py:92:24          Nainen          U       \"required> Nainen</label></div>\\n</div"
  - "tests/forms_tests/tests/test_i18n.py:111:18         Mies            U       \"Mies</label></div>\\n<div"
  - "tests/forms_tests/tests/test_i18n.py:115:18         Nainen          U       \"Nainen</label></div>\\n</div"
  - "tests/forms_tests/tests/test_media.py:468:9         mymulti     U       mymulti = MyMultiWidget()"
  - "tests/forms_tests/tests/test_media.py:470:17        mymulti     U       str(mymulti.media),"
  - "tests/forms_tests/tests/test_utils.py:8:5           Renderable      U       RenderableFieldMixin,"
  - "tests/forms_tests/tests/test_utils.py:9:5           Renderable      U       RenderableMixin,"
  - "tests/forms_tests/tests/test_utils.py:10:5          flatatt         U       flatatt,"
  - "tests/forms_tests/tests/test_utils.py:21:14         flatatt         U       def test_flatatt(self):"
  - "tests/forms_tests/tests/test_utils.py:23:11         flatatt         U       # flatatt #"
  - "tests/forms_tests/tests/test_utils.py:26:26         flatatt         U       self.assertEqual(flatatt({\"id\": \"header\"}),"
  - "tests/forms_tests/tests/test_utils.py:28:13         flatatt         U       flatatt({\"class\": \"news\", \"title"
  - "tests/forms_tests/tests/test_utils.py:257:17        Renderable      U       mixin = RenderableMixin()"
  - "tests/forms_tests/tests/test_utils.py:258:30        Renderable      U       msg = \"Subclasses of RenderableMixin must provide a"
  - "tests/forms_tests/tests/test_utils.py:263:17        Renderable      U       mixin = RenderableFieldMixin()"
  - "tests/forms_tests/tests/tests.py:252:31         मेरी        U       \"我隻氣墊船裝滿晒鱔.txt\", \"मेरी मँडराने वाली नाव सर"
  - "tests/forms_tests/tests/tests.py:252:36         मँडराने     U       氣墊船裝滿晒鱔.txt\", \"मेरी मँडराने वाली नाव सर्पमीनों"
  - "tests/forms_tests/tests/tests.py:252:44         वाली        U       txt\", \"मेरी मँडराने वाली नाव सर्पमीनों से भर"
  - "tests/forms_tests/tests/tests.py:252:53         सर्पमीनो    U       री मँडराने वाली नाव सर्पमीनों से भरी ह\".encode()"
  - "tests/forms_tests/widget_tests/test_checkboxselectmultiple.py:198:14        doesnt (doesn't)    U       def test_doesnt_localize_input_value"
  - "tests/forms_tests/widget_tests/test_fileinput.py:88:25          myclass     U       ({\"class\": \"myclass\"}, True),"
  - "tests/forms_tests/widget_tests/test_nullbooleanselect.py:150:45         Unbekannt       U       option value=\"unknown\">Unbekannt</option>"
  - "tests/forms_tests/widget_tests/test_nullbooleanselect.py:152:43         Nein            U       option value=\"false\">Nein</option>"
  - "tests/forms_tests/widget_tests/test_radioselect.py:7:12         choicewidget        U       from .test_choicewidget import ChoiceWidgetTest"
  - "tests/forms_tests/widget_tests/test_radioselect.py:19:46        beatle              U       input type=\"radio\" name=\"beatle\" value=\"\">------</label"
  - "tests/forms_tests/widget_tests/test_radioselect.py:22:54        beatle              U       checked type=\"radio\" name=\"beatle\" value=\"J\">John</label"
  - "tests/forms_tests/widget_tests/test_radioselect.py:25:46        beatle              U       input type=\"radio\" name=\"beatle\" value=\"P\">Paul</label"
  - "tests/forms_tests/widget_tests/test_radioselect.py:28:46        beatle              U       input type=\"radio\" name=\"beatle\" value=\"G\">George</label"
  - "tests/forms_tests/widget_tests/test_radioselect.py:31:46        beatle              U       input type=\"radio\" name=\"beatle\" value=\"R\">Ringo</label"
  - "tests/forms_tests/widget_tests/test_radioselect.py:289:39       Žćžšđ               U       widget(choices=[(\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), ("
  - "tests/forms_tests/widget_tests/test_radioselect.py:289:49       Đabc                U       choices=[(\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abc"
  - "tests/forms_tests/widget_tests/test_radioselect.py:289:54       Žćžšđ               U       (\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžš"
  - "tests/forms_tests/widget_tests/test_radioselect.py:289:65       ćžšđ                U       , \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžšđ\")]),"
  - "tests/forms_tests/widget_tests/test_radioselect.py:289:73       abcćžšđ             U       abcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžšđ\")]),"
  - "tests/forms_tests/widget_tests/test_radioselect.py:291:17       Žćžšđ               U       \"ŠĐĆŽćžšđ\","
  - "tests/forms_tests/widget_tests/test_radioselect.py:429:14       doesnt (doesn't)    U       def test_doesnt_localize_input_value"
  - "tests/forms_tests/widget_tests/test_select.py:7:12          choicewidget        U       from .test_choicewidget import ChoiceWidgetTest"
  - "tests/forms_tests/widget_tests/test_select.py:15:23         beatle              U       <select name=\"beatle\">"
  - "tests/forms_tests/widget_tests/test_select.py:24:64         beatle              U       widget(choices=choices), \"beatle\", \"J\", html=html)"
  - "tests/forms_tests/widget_tests/test_select.py:32:14         beatle              U       \"beatle\","
  - "tests/forms_tests/widget_tests/test_select.py:35:34         beatle              U       \"\"\"<select name=\"beatle\">"
  - "tests/forms_tests/widget_tests/test_select.py:51:14         beatle              U       \"beatle\","
  - "tests/forms_tests/widget_tests/test_select.py:217:39        Žćžšđ               U       widget(choices=[(\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), ("
  - "tests/forms_tests/widget_tests/test_select.py:217:49        Đabc                U       choices=[(\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abc"
  - "tests/forms_tests/widget_tests/test_select.py:217:54        Žćžšđ               U       (\"ŠĐĆŽćžšđ\", \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžš"
  - "tests/forms_tests/widget_tests/test_select.py:217:65        ćžšđ                U       , \"ŠĐabcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžšđ\")]),"
  - "tests/forms_tests/widget_tests/test_select.py:217:73        abcćžšđ             U       abcĆŽćžšđ\"), (\"ćžšđ\", \"abcćžšđ\")]),"
  - "tests/forms_tests/widget_tests/test_select.py:219:17        Žćžšđ               U       \"ŠĐĆŽćžšđ\","
  - "tests/forms_tests/widget_tests/test_select.py:280:14        doesnt (doesn't)    U       def test_doesnt_localize_option_value"
  - "tests/forms_tests/widget_tests/test_select.py:417:14        doesnt (doesn't)    U       def test_doesnt_render_required_when"
  - "tests/forms_tests/widget_tests/test_select.py:421:14        doesnt (doesn't)    U       def test_doesnt_render_required_when"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:340:14      selectdate      U       def test_selectdate_required(self):"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:350:14      selectdate      U       def test_selectdate_empty_label(self):"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:494:35      januari         U       <option value=\"1\">januari</option>"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:495:35      februari        U       <option value=\"2\">februari</option>"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:496:35      maart           U       <option value=\"3\">maart</option>"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:499:35      juni            U       <option value=\"6\">juni</option>"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:500:35      juli            U       <option value=\"7\">juli</option>"
  - "tests/forms_tests/widget_tests/test_selectdatewidget.py:503:36      oktober         U       <option value=\"10\">oktober</option>"
  - "tests/forms_tests/widget_tests/test_textarea.py:48:30       ampersanded     U       'some \"quoted\" & ampersanded value',"
  - "tests/forms_tests/widget_tests/test_textarea.py:51:48       ampersanded     U       quot;quoted&quot; &amp; ampersanded value</textarea>\""
  - "tests/forms_tests/widget_tests/test_textinput.py:50:30          ampersanded     U       'some \"quoted\" & ampersanded value',"
  - "tests/forms_tests/widget_tests/test_textinput.py:53:55          ampersanded     U       quot;quoted&quot; &amp; ampersanded value\">'"
  - "tests/forms_tests/widget_tests/test_textinput.py:72:17          Žćžšđ           U       \"ŠĐĆŽćžšđ\","
  - "tests/generic_inline_admin/tests.py:273:40      phonenumber     U       generic_inline_admin-phonenumber-content_type-object"
  - "tests/generic_relations_regress/models.py:84:5          tlinks      U       tlinks = GenericRelation(TextLink"
  - "tests/generic_relations_regress/tests.py:67:9           oddrel      U       oddrel = OddRelation1.objects"
  - "tests/generic_relations_regress/tests.py:68:48          oddrel      U       create(content_object=oddrel)"
  - "tests/generic_relations_regress/tests.py:69:9           oddrel      U       oddrel.delete()"
  - "tests/generic_relations_regress/tests.py:71:14          textlink    U       def test_textlink_delete(self):"
  - "tests/generic_relations_regress/tests.py:72:9           oddrel      U       oddrel = OddRelation2.objects"
  - "tests/generic_relations_regress/tests.py:72:52          tlink       U       objects.create(name=\"tlink\")"
  - "tests/generic_relations_regress/tests.py:73:48          oddrel      U       create(content_object=oddrel)"
  - "tests/generic_relations_regress/tests.py:83:14          textlink    U       def test_textlink_filter(self):"
  - "tests/generic_relations_regress/tests.py:87:41          tlinks      U       OddRelation2.objects.filter(tlinks__value=\"value\"), [oddrel"
  - "tests/generic_relations_regress/tests.py:185:61         autopk      U       HasLinkThing so that the autopk value"
  - "tests/generic_relations/models.py:123:60        manualpk    U       related_query_name=\"manualpk\")"
  - "tests/generic_relations/test_forms.py:78:41         anatinus    U       name=\"Ornithorhynchus anatinus\","
  - "tests/generic_relations/test_forms.py:123:70        Panthera    U       \"Lion\", latin_name=\"Panthera leo\")"
  - "tests/generic_relations/test_forms.py:144:65        anatinus    U       name=\"Ornithorhynchus anatinus\""
  - "tests/generic_relations/test_forms.py:290:70        Panthera    U       \"Lion\", latin_name=\"Panthera leo\")"
  - "tests/generic_relations/tests.py:30:74          Panthera                U       \"Lion\", latin_name=\"Panthera leo\")"
  - "tests/generic_relations/tests.py:33:41          anatinus                U       name=\"Ornithorhynchus anatinus\","
  - "tests/generic_relations/tests.py:192:41         manualpk                U       animal__isnull=False) | Q(manualpk__id=1)"
  - "tests/generic_relations/tests.py:205:9          clearish                U       clearish = TaggedItem.objects"
  - "tests/generic_relations/tests.py:205:79         clearish                U       object=self.quartz, tag=\"clearish\")"
  - "tests/generic_relations/tests.py:211:38         clearish                U       assertSequenceEqual(q, [clearish, shiny])"
  - "tests/generic_relations/tests.py:297:68         clearish                U       object=self.quartz, tag=\"clearish\")"
  - "tests/generic_relations/tests.py:303:19         clearish                U       (\"clearish\", Mineral, quartz_pk"
  - "tests/generic_relations/tests.py:476:14         manualpk                U       \"manualpk, object_id, tag, valuabletagg"
  - "tests/generic_relations/tests.py:476:40         valuabletaggeditem      U       manualpk, object_id, tag, valuabletaggeditem\""
  - "tests/generic_relations/tests.py:522:9          valuedtag               U       valuedtag = ValuableTaggedItem"
  - "tests/generic_relations/tests.py:525:26         valuedtag               U       self.assertEqual(valuedtag.content_object, quartz"
  - "tests/generic_relations/tests.py:848:9          newrel                  U       newrel = ConcreteRelatedModel"
  - "tests/generic_relations/tests.py:850:9          newrel                  U       newrel.bases.set([base])"
  - "tests/generic_relations/tests.py:851:9          newrel                  U       newrel = ConcreteRelatedModel"
  - "tests/generic_relations/tests.py:851:54         newrel                  U       teRelatedModel.objects.get(pk=newrel.pk)"
  - "tests/generic_relations/tests.py:852:32         newrel                  U       self.assertEqual(base, newrel.bases.get())"
  - "tests/generic_views/test_dates.py:26:27         Bolaño                      U       name=\"Roberto Bolaño\", slug=\"roberto-bolano"
  - "tests/generic_views/test_dates.py:26:50         bolano                      U       Bolaño\", slug=\"roberto-bolano\""
  - "tests/generic_views/test_dates.py:195:45        sortedbynamedec             U       client.get(\"/dates/books/sortedbynamedec/\")"
  - "tests/generic_views/test_dates.py:255:31        Testement                   U       name=\"The New New Testement\", pages=600, pubdate"
  - "tests/generic_views/test_dates.py:310:50        sortedbypageandnamedec      U       get(\"/dates/books/2006/sortedbypageandnamedec/\")"
  - "tests/generic_views/test_dates.py:429:51        Testement                   U       create(name=\"The New New Testement\", pages=600, pubdate"
  - "tests/generic_views/test_dates.py:594:51        Testement                   U       create(name=\"The New New Testement\", pages=600, pubdate"
  - "tests/generic_views/test_dates.py:726:51        Testement                   U       create(name=\"The New New Testement\", pages=600, pubdate"
  - "tests/generic_views/test_dates.py:842:57        byslug                      U       dates/books/2006/may/01/byslug/dreaming-in-code/\")"
  - "tests/generic_views/test_dates.py:855:31        Testement                   U       name=\"The New New Testement\", slug=\"new-new\", pages"
  - "tests/generic_views/test_dates.py:884:55        nopk                        U       dates/books/2008/oct/01/nopk/\")"
  - "tests/generic_views/test_dates.py:904:41        numqueries                  U       object_custom_queryset_numqueries(self):"
  - "tests/generic_views/test_detail.py:19:27        Bolaño              U       name=\"Roberto Bolaño\", slug=\"roberto-bolano"
  - "tests/generic_views/test_detail.py:19:50        bolano              U       Bolaño\", slug=\"roberto-bolano\""
  - "tests/generic_views/test_detail.py:62:47        bycustompk          U       get(\"/detail/author/bycustompk/%s/\" % self.author1"
  - "tests/generic_views/test_detail.py:69:47        byslug              U       get(\"/detail/author/byslug/scott-rosenberg/\")"
  - "tests/generic_views/test_detail.py:80:47        bycustomslug        U       get(\"/detail/author/bycustomslug/scott-rosenberg/\")"
  - "tests/generic_views/test_detail.py:92:29        bypkignoreslug      U       \"/detail/author/bypkignoreslug/%s-roberto-bolano/\""
  - "tests/generic_views/test_detail.py:92:55        bolano              U       bypkignoreslug/%s-roberto-bolano/\" % self.author1.pk"
  - "tests/generic_views/test_detail.py:101:29       bypkignoreslug      U       \"/detail/author/bypkignoreslug/%s-scott-rosenberg/"
  - "tests/generic_views/test_detail.py:110:29       bypkandslug         U       \"/detail/author/bypkandslug/%s-roberto-bolano/\""
  - "tests/generic_views/test_detail.py:110:52       bolano              U       bypkandslug/%s-roberto-bolano/\" % self.author1.pk"
  - "tests/generic_views/test_detail.py:119:29       bypkandslug         U       \"/detail/author/bypkandslug/%s-scott-rosenberg/"
  - "tests/generic_views/test_detail.py:219:40       nonmodel            U       client.get(\"/detail/nonmodel/1/\")"
  - "tests/generic_views/test_edit.py:106:31         Munroe      U       {\"name\": \"Randall Munroe\", \"slug\": \"randall-munroe"
  - "tests/generic_views/test_edit.py:106:57         munroe      U       Munroe\", \"slug\": \"randall-munroe\"},"
  - "tests/generic_views/test_edit.py:111:70         Munroe      U       flat=True), [\"Randall Munroe\"]"
  - "tests/generic_views/test_edit.py:116:75         munroe      U       1, \"slug\": \"randall-munroe\"}"
  - "tests/generic_views/test_edit.py:133:31         Munroe      U       {\"name\": \"Randall Munroe\", \"slug\": \"randall-munroe"
  - "tests/generic_views/test_edit.py:133:57         munroe      U       Munroe\", \"slug\": \"randall-munroe\"},"
  - "tests/generic_views/test_edit.py:138:70         Munroe      U       flat=True), [\"Randall Munroe\"]"
  - "tests/generic_views/test_edit.py:144:31         Munroe      U       {\"name\": \"Randall Munroe\", \"slug\": \"randall-munroe"
  - "tests/generic_views/test_edit.py:144:57         munroe      U       Munroe\", \"slug\": \"randall-munroe\"},"
  - "tests/generic_views/test_edit.py:171:57         munroe      U       Munroe\", \"slug\": \"randall-munroe\"},"
  - "tests/generic_views/test_edit.py:259:39         xkcd        U       name\": \"Randall Munroe (xkcd)\", \"slug\": \"randall"
  - "tests/generic_views/test_edit.py:264:78         xkcd        U       , [\"Randall Munroe (xkcd)\"]"
  - "tests/generic_views/test_edit.py:290:49         xkcd        U       Randall Munroe (author of xkcd)\", \"slug\": \"randall"
  - "tests/generic_views/test_edit.py:296:41         xkcd        U       Randall Munroe (author of xkcd)\"],"
  - "tests/generic_views/test_edit.py:302:49         xkcd        U       Randall Munroe (author of xkcd)\", \"slug\": \"randall"
  - "tests/generic_views/test_list.py:16:27          Bolaño                      U       name=\"Roberto Bolaño\", slug=\"roberto-bolano"
  - "tests/generic_views/test_list.py:16:50          bolano                      U       Bolaño\", slug=\"roberto-bolano\""
  - "tests/generic_views/test_list.py:66:33          shortdata                   U       test_paginated_queryset_shortdata(self):"
  - "tests/generic_views/test_list.py:96:36          urlvar                      U       paginated_get_page_by_urlvar(self):"
  - "tests/generic_views/test_list.py:127:61         pagina                      U       custom_page_kwarg/\", {\"pagina\": \"2\"}"
  - "tests/generic_views/test_list.py:246:44         sortedbypagesandnamedec     U       client.get(\"/list/books/sortedbypagesandnamedec/\")"
  - "tests/generic_views/urls.py:43:24       bycustompk                  U       \"detail/author/bycustompk/<foo>/\","
  - "tests/generic_views/urls.py:46:25       byslug                      U       path(\"detail/author/byslug/<slug>/\", views.AuthorDetail"
  - "tests/generic_views/urls.py:48:24       bycustomslug                U       \"detail/author/bycustomslug/<foo>/\","
  - "tests/generic_views/urls.py:51:25       bypkignoreslug              U       path(\"detail/author/bypkignoreslug/<int:pk>-<slug>/\", views"
  - "tests/generic_views/urls.py:53:24       bypkandslug                 U       \"detail/author/bypkandslug/<int:pk>-<slug>/\","
  - "tests/generic_views/urls.py:76:18       nonmodel                    U       path(\"detail/nonmodel/1/\", views.NonModelDetail"
  - "tests/generic_views/urls.py:164:23      sortedbynamedec             U       path(\"dates/books/sortedbynamedec/\", views.BookArchive"
  - "tests/generic_views/urls.py:213:62      pagina                      U       paginate_by=30, page_kwarg=\"pagina\"),"
  - "tests/generic_views/urls.py:221:21      sortedbypagesandnamedec     U       \"list/books/sortedbypagesandnamedec/\","
  - "tests/generic_views/urls.py:249:33      sortedbypageandnamedec      U       dates/books/<int:year>/sortedbypageandnamedec/\","
  - "tests/generic_views/urls.py:363:52      nopk                        U       year>/<month>/<int:day>/nopk/\", views.BookDetail"
  - "tests/generic_views/urls.py:365:51      byslug                      U       year>/<month>/<int:day>/byslug/<slug:slug>/\","
  - "tests/get_object_or_404/tests.py:89:29          klass       U       # Given an argument klass that is not a Model"
  - "tests/get_or_create/tests.py:592:24         sqls    U       update_sqls = ["
  - "tests/get_or_create/tests.py:595:45         sqls    U       assertEqual(len(update_sqls), 1)"
  - "tests/get_or_create/tests.py:596:37         sqls    U       update_sql = update_sqls[0]"
  - "tests/gis_tests/distapp/tests.py:80:43          Southside               U       Downtown Houston\", \"Southside Place\"]"
  - "tests/gis_tests/distapp/tests.py:81:23          Mittagong               U       au_cities = [\"Mittagong\", \"Shellharbour\", \"Thirroul"
  - "tests/gis_tests/distapp/tests.py:81:36          Shellharbour            U       cities = [\"Mittagong\", \"Shellharbour\", \"Thirroul\", \"Wollongong"
  - "tests/gis_tests/distapp/tests.py:81:52          Thirroul                U       Mittagong\", \"Shellharbour\", \"Thirroul\", \"Wollongong\"]"
  - "tests/gis_tests/distapp/tests.py:106:64         spatialite              U       oracle or connection.ops.spatialite:"
  - "tests/gis_tests/distapp/tests.py:132:30         Southside               U       (thus, Houston and Southside place will be excluded"
  - "tests/gis_tests/distapp/tests.py:142:40         Bellaire                U       assertEqual(cities, [\"Bellaire\", \"Pearland\", \"West"
  - "tests/gis_tests/distapp/tests.py:142:52         Pearland                U       cities, [\"Bellaire\", \"Pearland\", \"West University Place"
  - "tests/gis_tests/distapp/tests.py:166:14         Batemans                U       \"Batemans Bay\","
  - "tests/gis_tests/distapp/tests.py:168:14         Hillsdale               U       \"Hillsdale\","
  - "tests/gis_tests/distapp/tests.py:170:14         Mittagong               U       \"Mittagong\","
  - "tests/gis_tests/distapp/tests.py:171:14         Shellharbour            U       \"Shellharbour\","
  - "tests/gis_tests/distapp/tests.py:173:14         Thirroul                U       \"Thirroul\","
  - "tests/gis_tests/distapp/tests.py:176:27         spatialite              U       if connection.ops.spatialite:"
  - "tests/gis_tests/distapp/tests.py:177:15         Spatia                  U       # SpatiaLite is less accurate"
  - "tests/gis_tests/distapp/tests.py:177:67         Batemans                U       returns 102.8km for Batemans Bay."
  - "tests/gis_tests/distapp/tests.py:212:36         Batemans                U       assertEqual(cities, [\"Batemans Bay\", \"Canberra\", \"Melbourne"
  - "tests/gis_tests/distapp/tests.py:236:62         Shellharbour            U       Adelaide\", \"Hobart\", \"Shellharbour\", \"Thirroul\"])"
  - "tests/gis_tests/distapp/tests.py:236:78         Thirroul                U       Hobart\", \"Shellharbour\", \"Thirroul\"])"
  - "tests/gis_tests/distapp/tests.py:249:18         Bellaire                U       \"Bellaire\","
  - "tests/gis_tests/distapp/tests.py:251:18         Southside               U       \"Southside Place\","
  - "tests/gis_tests/distapp/tests.py:261:24         Pearland                U       self.assertIn(\"Pearland\", self.get_names(qs"
  - "tests/gis_tests/distapp/tests.py:346:27         Mittagong               U       [\"Adelaide\", \"Mittagong\", \"Shellharbour\", \"Thirroul"
  - "tests/gis_tests/distapp/tests.py:346:40         Shellharbour            U       Adelaide\", \"Mittagong\", \"Shellharbour\", \"Thirroul\", \"Wollongong"
  - "tests/gis_tests/distapp/tests.py:346:56         Thirroul                U       Mittagong\", \"Shellharbour\", \"Thirroul\", \"Wollongong\"],"
  - "tests/gis_tests/distapp/tests.py:383:23         Spatia                  U       Distance functions on SpatiaLite"
  - "tests/gis_tests/distapp/tests.py:405:45         southtexaszipcode       U       Area(poly) FROM distapp_southtexaszipcode;"
  - "tests/gis_tests/distapp/tests.py:447:25         southtexascity          U       # FROM distapp_southtexascity;"
  - "tests/gis_tests/distapp/tests.py:463:25         southtexascityft        U       # FROM distapp_southtexascityft;"
  - "tests/gis_tests/distapp/tests.py:499:43         Shellharbour            U       LineString of Wollongong and Shellharbour coords)."
  - "tests/gis_tests/distapp/tests.py:507:25         australiacity           U       # FROM distapp_australiacity ORDER BY name;"
  - "tests/gis_tests/distapp/tests.py:526:71         Spatia                  U       meter (kilometer on SpatiaLite)."
  - "tests/gis_tests/distapp/tests.py:527:44         spatialite              U       3 if connection.ops.spatialite else 0"
  - "tests/gis_tests/distapp/tests.py:540:25         australiacity           U       # FROM distapp_australiacity WHERE (NOT (id = 11"
  - "tests/gis_tests/distapp/tests.py:545:25         australiacity           U       # FROM distapp_australiacity WHERE (NOT (id = 11"
  - "tests/gis_tests/distapp/tests.py:571:9          hillsdale               U       hillsdale = AustraliaCity.objects"
  - "tests/gis_tests/distapp/tests.py:571:53         Hillsdale               U       straliaCity.objects.get(name=\"Hillsdale\")"
  - "tests/gis_tests/distapp/tests.py:573:46         hillsdale               U       traliaCity.objects.exclude(id=hillsdale.id)"
  - "tests/gis_tests/distapp/tests.py:574:50         hillsdale               U       distance=Distance(\"point\", hillsdale.point, spheroid=True"
  - "tests/gis_tests/distapp/tests.py:580:53         spatialite              U       postgis or connection.ops.spatialite:"
  - "tests/gis_tests/distapp/tests.py:583:50         hillsdale               U       traliaCity.objects.exclude(id=hillsdale.id)"
  - "tests/gis_tests/distapp/tests.py:584:54         hillsdale               U       distance=Distance(\"point\", hillsdale.point))"
  - "tests/gis_tests/distapp/tests.py:665:52         censuszipcode           U       ST_Transform(\"distapp_censuszipcode\".\"poly\", 32140),"
  - "tests/gis_tests/distapp/tests.py:667:25         censuszipcode           U       # FROM \"distapp_censuszipcode\";"
  - "tests/gis_tests/distapp/tests.py:697:47         Pearland                U       in=(\"San Antonio\", \"Pearland\"))"
  - "tests/gis_tests/distapp/tests.py:699:55         Pearland                U       qs, [\"San Antonio\", \"Pearland\"])"
  - "tests/gis_tests/distapp/tests.py:744:40         southtexaszipcode       U       ST_Perimeter(distapp_southtexaszipcode.poly)"
  - "tests/gis_tests/distapp/tests.py:745:25         southtexaszipcode       U       # FROM distapp_southtexaszipcode;"
  - "tests/gis_tests/distapp/tests.py:746:9          perim                   U       perim_m = ["
  - "tests/gis_tests/distapp/tests.py:757:36         perim                   U       self.assertAlmostEqual(perim_m[i], z.perimeter.m"
  - "tests/gis_tests/distapp/tests.py:760:46         perim                   U       uthTexasCity.objects.annotate(perim=Perimeter(\"point\"))"
  - "tests/gis_tests/distapp/tests.py:762:38         perim                   U       assertEqual(0, city.perim.m)"
  - "tests/gis_tests/distapp/tests.py:768:46         perim                   U       ensusZipcode.objects.annotate(perim=Perimeter(\"poly\"))"
  - "tests/gis_tests/distapp/tests.py:791:9          htown                   U       htown = SouthTexasCity.objects"
  - "tests/gis_tests/distapp/tests.py:793:39         htown                   U       distance=Distance(\"poly\", htown.point), area=Area(\"poly"
  - "tests/gis_tests/gdal_tests/test_driver.py:24:32         clucka      U       drivers = (\"Foo baz\", \"clucka\", \"ESRI Shp\", \"ESRI"
  - "tests/gis_tests/gdal_tests/test_driver.py:24:59         rast        U       , \"ESRI Shp\", \"ESRI rast\")"
  - "tests/gis_tests/gdal_tests/test_driver.py:57:49         capi        U       contrib.gis.gdal.driver.capi.get_driver_count\")"
  - "tests/gis_tests/gdal_tests/test_driver.py:58:49         capi        U       contrib.gis.gdal.driver.capi.register_all\")"
  - "tests/gis_tests/gdal_tests/test_ds.py:14:6          GEOGCS      U       'GEOGCS[\"GCS_WGS_1984\",DATUM"
  - "tests/gis_tests/gdal_tests/test_ds.py:15:30         PRIMEM      U       137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT"
  - "tests/gis_tests/gdal_tests/test_ds.py:19:23         GEOGCS      U       wgs_84_wkt_regex = r'^GEOGCS\\[\"(GCS_)?WGS[ _](19"
  - "tests/gis_tests/gdal_tests/test_ds.py:27:9          nfeat       U       nfeat=5,"
  - "tests/gis_tests/gdal_tests/test_ds.py:33:78         QGIS        U       # Got extent from QGIS"
  - "tests/gis_tests/gdal_tests/test_ds.py:45:9          nfeat       U       nfeat=3,"
  - "tests/gis_tests/gdal_tests/test_ds.py:65:9          nfeat       U       nfeat=3,"
  - "tests/gis_tests/gdal_tests/test_ds.py:71:78         QGIS        U       # Got extent from QGIS"
  - "tests/gis_tests/gdal_tests/test_ds.py:76:9          nfeat       U       nfeat=3,"
  - "tests/gis_tests/gdal_tests/test_ds.py:90:83         QGIS        U       # Got extent from QGIS"
  - "tests/gis_tests/gdal_tests/test_ds.py:162:53        nfeat       U       ssertEqual(len(layer), source.nfeat)"
  - "tests/gis_tests/gdal_tests/test_ds.py:176:17        flds        U       flds = layer.fields"
  - "tests/gis_tests/gdal_tests/test_ds.py:177:26        flds        U       for f in flds:"
  - "tests/gis_tests/gdal_tests/test_ds.py:343:33        ALAND       U       which has land area ('ALAND10') stored in a Real"
  - "tests/gis_tests/gdal_tests/test_ds.py:347:43        ogrinfo     U       value obtained using `ogrinfo`."
  - "tests/gis_tests/gdal_tests/test_ds.py:348:50        ALAND       U       86997978, feat.get(\"ALAND10\"))"
  - "tests/gis_tests/gdal_tests/test_geom.py:122:27      jsons               U       # Loading jsons to prevent decimal difference"
  - "tests/gis_tests/gdal_tests/test_geom.py:148:13      mgeom               U       mgeom1 = OGRGeometry(mp.wkt"
  - "tests/gis_tests/gdal_tests/test_geom.py:149:33      mgeom               U       self.assertEqual(4, mgeom1.geom_type)"
  - "tests/gis_tests/gdal_tests/test_geom.py:150:44      mgeom               U       assertEqual(\"MULTIPOINT\", mgeom1.geom_name)"
  - "tests/gis_tests/gdal_tests/test_geom.py:151:13      mgeom               U       mgeom2 = OGRGeometry(\"MULTIPOINT"
  - "tests/gis_tests/gdal_tests/test_geom.py:152:13      mgeom               U       mgeom3 = OGRGeometry(\"MULTIPOINT"
  - "tests/gis_tests/gdal_tests/test_geom.py:164:35      linestrings         U       ls in self.geometries.linestrings:"
  - "tests/gis_tests/gdal_tests/test_geom.py:178:18      tmpx                U       x = [tmpx for tmpx, tmpy in ls"
  - "tests/gis_tests/gdal_tests/test_geom.py:178:27      tmpx                U       x = [tmpx for tmpx, tmpy in ls.coords]"
  - "tests/gis_tests/gdal_tests/test_geom.py:178:33      tmpy                U       x = [tmpx for tmpx, tmpy in ls.coords]"
  - "tests/gis_tests/gdal_tests/test_geom.py:179:18      tmpy                U       y = [tmpy for tmpx, tmpy in ls"
  - "tests/gis_tests/gdal_tests/test_geom.py:179:27      tmpx                U       y = [tmpy for tmpx, tmpy in ls.coords]"
  - "tests/gis_tests/gdal_tests/test_geom.py:179:33      tmpy                U       y = [tmpy for tmpx, tmpy in ls.coords]"
  - "tests/gis_tests/gdal_tests/test_geom.py:205:35      linearrings         U       rr in self.geometries.linearrings:"
  - "tests/gis_tests/gdal_tests/test_geom.py:260:14      closepolygons       U       def test_closepolygons(self):"
  - "tests/gis_tests/gdal_tests/test_geom.py:301:13      klone               U       klone = mpoly.clone()"
  - "tests/gis_tests/gdal_tests/test_geom.py:302:38      klone               U       assertEqual(sr.wkt, klone.srs.wkt)"
  - "tests/gis_tests/gdal_tests/test_geom.py:369:9       prec                U       prec = -1"
  - "tests/gis_tests/gdal_tests/test_geom.py:371:50      prec                U       sertAlmostEqual(trans.x, p.x, prec)"
  - "tests/gis_tests/gdal_tests/test_geom.py:372:50      prec                U       sertAlmostEqual(trans.y, p.y, prec)"
  - "tests/gis_tests/gdal_tests/test_geom.py:381:9       prec                U       prec = -1"
  - "tests/gis_tests/gdal_tests/test_geom.py:385:61      prec                U       x[0], ls_orig.x[0], prec)"
  - "tests/gis_tests/gdal_tests/test_geom.py:422:46      sdiff               U       OGRGeometry(self.geometries.sdiff_geoms[i].wkt)"
  - "tests/gis_tests/gdal_tests/test_raster.py:16:21         textrasters         U       from ..data.rasters.textrasters import JSON_RASTER"
  - "tests/gis_tests/gdal_tests/test_raster.py:51:9          rast                U       rast = GDALRaster("
  - "tests/gis_tests/gdal_tests/test_raster.py:58:26         rast                U       self.assertEqual(rast.srid, 4326)"
  - "tests/gis_tests/gdal_tests/test_raster.py:59:9          rast                U       rast.srid = 3086"
  - "tests/gis_tests/gdal_tests/test_raster.py:60:26         rast                U       self.assertEqual(rast.srid, 3086)"
  - "tests/gis_tests/gdal_tests/test_raster.py:77:47         gtvalues            U       memory rasters and change gtvalues"
  - "tests/gis_tests/gdal_tests/test_raster.py:78:9          rsmem               U       rsmem = GDALRaster(JSON_RASTER"
  - "tests/gis_tests/gdal_tests/test_raster.py:80:9          rsmem               U       rsmem.geotransform = [0.0"
  - "tests/gis_tests/gdal_tests/test_raster.py:81:26         rsmem               U       self.assertEqual(rsmem.geotransform, [0.0,"
  - "tests/gis_tests/gdal_tests/test_raster.py:82:9          rsmem               U       rsmem.geotransform = range"
  - "tests/gis_tests/gdal_tests/test_raster.py:83:26         rsmem               U       self.assertEqual(rsmem.geotransform, [float"
  - "tests/gis_tests/gdal_tests/test_raster.py:98:15         geotransforms       U       error_geotransforms = ["
  - "tests/gis_tests/gdal_tests/test_raster.py:104:35        geotransforms       U       geotransform in error_geotransforms:"
  - "tests/gis_tests/gdal_tests/test_raster.py:128:9         rast                U       rast = GDALRaster("
  - "tests/gis_tests/gdal_tests/test_raster.py:179:23        TOWGS               U       # Presence of TOWGS84 depend on GDAL/Proj"
  - "tests/gis_tests/gdal_tests/test_raster.py:181:46        TOWGS               U       raster.srs.wkt.replace(\"TOWGS84[0,0,0,0,0,0,0],\","
  - "tests/gis_tests/gdal_tests/test_raster.py:182:38        TOWGS               U       rs.srs.wkt.replace(\"TOWGS84[0,0,0,0,0,0,0],\","
  - "tests/gis_tests/gdal_tests/test_raster.py:201:13        vsimem              U       vsimem = GDALRaster(dat.read"
  - "tests/gis_tests/gdal_tests/test_raster.py:203:18        vsimem              U       result = vsimem.bands[0].data()"
  - "tests/gis_tests/gdal_tests/test_raster.py:211:18        vsimem              U       path = \"/vsimem/raster.tif\""
  - "tests/gis_tests/gdal_tests/test_raster.py:213:9         vsimem              U       vsimem = GDALRaster("
  - "tests/gis_tests/gdal_tests/test_raster.py:231:13        vsimem              U       del vsimem"
  - "tests/gis_tests/gdal_tests/test_raster.py:268:18        vsizip              U       def test_vsi_vsizip_filesystem(self):"
  - "tests/gis_tests/gdal_tests/test_raster.py:272:22        vsizip              U       rst_path = \"/vsizip/\" + os.path.join(rst"
  - "tests/gis_tests/gdal_tests/test_raster.py:390:50        Interp              U       x50 Type=Byte, ColorInterp=Gray\","
  - "tests/gis_tests/gdal_tests/test_raster.py:408:44        Albers              U       NAD83 / Florida GDL Albers\", infos)"
  - "tests/gis_tests/gdal_tests/test_raster.py:414:15        papsz               U       {\"papsz_options\": {\"compress"
  - "tests/gis_tests/gdal_tests/test_raster.py:414:45        packbits            U       options\": {\"compress\": \"packbits\"}, \"name\": rstfile.name"
  - "tests/gis_tests/gdal_tests/test_raster.py:419:9         papsz               U       papsz_options = {"
  - "tests/gis_tests/gdal_tests/test_raster.py:420:26        packbits            U       \"compress\": \"packbits\","
  - "tests/gis_tests/gdal_tests/test_raster.py:421:14        blockxsize          U       \"blockxsize\": 23,"
  - "tests/gis_tests/gdal_tests/test_raster.py:422:14        blockysize          U       \"blockysize\": 23,"
  - "tests/gis_tests/gdal_tests/test_raster.py:426:13        papsz               U       papsz_options[\"pixeltype\""
  - "tests/gis_tests/gdal_tests/test_raster.py:426:43        signedbyte          U       options[\"pixeltype\"] = \"signedbyte\""
  - "tests/gis_tests/gdal_tests/test_raster.py:446:18        papsz               U       \"papsz_options\": papsz_options"
  - "tests/gis_tests/gdal_tests/test_raster.py:446:34        papsz               U       \"papsz_options\": papsz_options,"
  - "tests/gis_tests/gdal_tests/test_raster.py:455:14        PACKBITS            U       \"PACKBITS\","
  - "tests/gis_tests/gdal_tests/test_raster.py:461:18        SIGNEDBYTE          U       \"SIGNEDBYTE\","
  - "tests/gis_tests/gdal_tests/test_raster.py:471:26        sourceraster        U       \"name\": \"sourceraster\","
  - "tests/gis_tests/gdal_tests/test_raster.py:499:40        sourceraster        U       assertEqual(target.name, \"sourceraster_copy.MEM\")"
  - "tests/gis_tests/gdal_tests/test_raster.py:507:31        targetraster        U       \"name\": \"/path/to/targetraster.tif\","
  - "tests/gis_tests/gdal_tests/test_raster.py:512:49        targetraster        U       target.name, \"/path/to/targetraster.tif\")"
  - "tests/gis_tests/gdal_tests/test_raster.py:654:23        reprojection        U       # The reprojection of a raster that spans"
  - "tests/gis_tests/gdal_tests/test_raster.py:784:34        loadtxt             U       assert_array = numpy.loadtxt("
  - "tests/gis_tests/gdal_tests/test_raster.py:799:13        smin                U       smin, smax, smean, sstd"
  - "tests/gis_tests/gdal_tests/test_raster.py:799:19        smax                U       smin, smax, smean, sstd = band"
  - "tests/gis_tests/gdal_tests/test_raster.py:799:25        smean               U       smin, smax, smean, sstd = band.statistics"
  - "tests/gis_tests/gdal_tests/test_raster.py:800:30        smin                U       self.assertEqual(smin, 0)"
  - "tests/gis_tests/gdal_tests/test_raster.py:801:30        smax                U       self.assertEqual(smax, 9)"
  - "tests/gis_tests/gdal_tests/test_raster.py:802:36        smean               U       self.assertAlmostEqual(smean, 2.842331288343558)"
  - "tests/gis_tests/gdal_tests/test_raster.py:805:13        smin                U       smin, smax, smean, sstd"
  - "tests/gis_tests/gdal_tests/test_raster.py:805:19        smax                U       smin, smax, smean, sstd = band"
  - "tests/gis_tests/gdal_tests/test_raster.py:805:25        smean               U       smin, smax, smean, sstd = band.statistics"
  - "tests/gis_tests/gdal_tests/test_raster.py:806:30        smin                U       self.assertEqual(smin, 0)"
  - "tests/gis_tests/gdal_tests/test_raster.py:807:30        smax                U       self.assertEqual(smax, 9)"
  - "tests/gis_tests/gdal_tests/test_raster.py:808:36        smean               U       self.assertAlmostEqual(smean, 2.828326634228898)"
  - "tests/gis_tests/gdal_tests/test_raster.py:916:9         rsmemjson           U       rsmemjson = GDALRaster(JSON_RASTER"
  - "tests/gis_tests/gdal_tests/test_raster.py:917:9         bandmemjson         U       bandmemjson = rsmemjson.bands[0"
  - "tests/gis_tests/gdal_tests/test_raster.py:917:23        rsmemjson           U       bandmemjson = rsmemjson.bands[0]"
  - "tests/gis_tests/gdal_tests/test_raster.py:920:17        bandmemjson         U       bandmemjson.data(), numpy.array"
  - "tests/gis_tests/gdal_tests/test_raster.py:923:30        bandmemjson         U       self.assertEqual(bandmemjson.data(), list(range("
  - "tests/gis_tests/gdal_tests/test_srs.py:20:1         srlist                  U       srlist = ("
  - "tests/gis_tests/gdal_tests/test_srs.py:22:10        GEOGCS                  U       'GEOGCS[\"WGS 84\",DATUM[\"WGS"
  - "tests/gis_tests/gdal_tests/test_srs.py:23:36        TOWGS                   U       AUTHORITY[\"EPSG\",\"7030\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:24:10        PRIMEM                  U       'PRIMEM[\"Greenwich\",0,AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:37:14        GEOGCS                  U       \"GEOGCS\": (\"EPSG\", \"4326\"),"
  - "tests/gis_tests/gdal_tests/test_srs.py:43:15        primem                  U       (\"primem|authority\", \"EPSG\")"
  - "tests/gis_tests/gdal_tests/test_srs.py:47:10        PROJCS                  U       'PROJCS[\"NAD83 / Texas South"
  - "tests/gis_tests/gdal_tests/test_srs.py:48:10        GEOGCS                  U       'GEOGCS[\"NAD83\",DATUM[\"North"
  - "tests/gis_tests/gdal_tests/test_srs.py:50:36        PRIMEM                  U       AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:69:14        PROJCS                  U       \"PROJCS\": (\"EPSG\", \"32140\")"
  - "tests/gis_tests/gdal_tests/test_srs.py:80:10        PROJCS                  U       'PROJCS[\"NAD83 / Texas South"
  - "tests/gis_tests/gdal_tests/test_srs.py:81:10        GEOGCS                  U       'GEOGCS[\"NAD83\",DATUM[\"North"
  - "tests/gis_tests/gdal_tests/test_srs.py:84:10        PRIMEM                  U       'PRIMEM[\"Greenwich\",0],'"
  - "tests/gis_tests/gdal_tests/test_srs.py:104:14       PROJCS                  U       \"PROJCS\": (None, None),"
  - "tests/gis_tests/gdal_tests/test_srs.py:107:15       PROJCS                  U       (\"PROJCS|GeOgCs|spheroid\", \"GRS"
  - "tests/gis_tests/gdal_tests/test_srs.py:108:16       projcs                  U       ((\"projcs\", 9), \"UNIT\"),"
  - "tests/gis_tests/gdal_tests/test_srs.py:109:16       projcs                  U       ((\"projcs\", 11), \"AXIS\"),"
  - "tests/gis_tests/gdal_tests/test_srs.py:132:10       GEOGCS                  U       'GEOGCS[\"WGS 84\",DATUM[\"WGS"
  - "tests/gis_tests/gdal_tests/test_srs.py:133:36       TOWGS                   U       AUTHORITY[\"EPSG\",\"7030\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:134:10       PRIMEM                  U       'PRIMEM[\"Greenwich\",0,AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:144:10       PRIMEM                  U       'PRIMEM[\"Greenwich\",0,AUTHORITY"
  - "tests/gis_tests/gdal_tests/test_srs.py:174:18       NZGD                    U       'PROJCS[\"NZGD49 / Karamea Circuit"
  - "tests/gis_tests/gdal_tests/test_srs.py:174:27       Karamea                 U       'PROJCS[\"NZGD49 / Karamea Circuit\",GEOGCS[\"NZGD"
  - "tests/gis_tests/gdal_tests/test_srs.py:174:52       NZGD                    U       Karamea Circuit\",GEOGCS[\"NZGD49\",'"
  - "tests/gis_tests/gdal_tests/test_srs.py:178:10       TOWGS                   U       \"TOWGS84[59.47,-5.04,187.4"
  - "tests/gis_tests/gdal_tests/test_srs.py:189:15       NZGD                    U       name=\"NZGD49 / Karamea Circuit"
  - "tests/gis_tests/gdal_tests/test_srs.py:189:24       Karamea                 U       name=\"NZGD49 / Karamea Circuit\","
  - "tests/gis_tests/gdal_tests/test_srs.py:197:5        srlist                  U       bad_srlist = ("
  - "tests/gis_tests/gdal_tests/test_srs.py:199:6        OOJCS                   U       'OOJCS[\"NAD83 / Texas South"
  - "tests/gis_tests/gdal_tests/test_srs.py:217:18       srlist                  U       for s in srlist:"
  - "tests/gis_tests/gdal_tests/test_srs.py:222:24       srlist                  U       for bad in bad_srlist:"
  - "tests/gis_tests/gdal_tests/test_srs.py:233:18       srlist                  U       for s in srlist:"
  - "tests/gis_tests/gdal_tests/test_srs.py:245:15       ellps                   U       \"+ellps=WGS84\","
  - "tests/gis_tests/gdal_tests/test_srs.py:246:15       towgs                   U       \"+towgs84=0,0,0,0,0,0,0\","
  - "tests/gis_tests/gdal_tests/test_srs.py:335:22       DHDN                    U       'PROJCS[\"DHDN / Soldner 39 Langscho"
  - "tests/gis_tests/gdal_tests/test_srs.py:335:29       Soldner                 U       'PROJCS[\"DHDN / Soldner 39 Langschoß\",'"
  - "tests/gis_tests/gdal_tests/test_srs.py:335:40       Langschoß               U       PROJCS[\"DHDN / Soldner 39 Langschoß\",'"
  - "tests/gis_tests/gdal_tests/test_srs.py:336:22       DHDN                    U       'GEOGCS[\"DHDN\",DATUM[\"Deutsches_Hauptdreiec"
  - "tests/gis_tests/gdal_tests/test_srs.py:336:35       Deutsches               U       GEOGCS[\"DHDN\",DATUM[\"Deutsches_Hauptdreiecksnetz\","
  - "tests/gis_tests/gdal_tests/test_srs.py:336:45       Hauptdreiecksnetz       U       DHDN\",DATUM[\"Deutsches_Hauptdreiecksnetz\",'"
  - "tests/gis_tests/gdal_tests/test_srs.py:341:52       Cassini                 U       4314\"]],PROJECTION[\"Cassini_Soldner\"],'"
  - "tests/gis_tests/gdal_tests/test_srs.py:341:60       Soldner                 U       PROJECTION[\"Cassini_Soldner\"],'"
  - "tests/gis_tests/gdal_tests/test_srs.py:353:41       DHDN                    U       assertEqual(srs.name, \"DHDN / Soldner 39 Langscho"
  - "tests/gis_tests/gdal_tests/test_srs.py:353:48       Soldner                 U       assertEqual(srs.name, \"DHDN / Soldner 39 Langschoß\")"
  - "tests/gis_tests/gdal_tests/test_srs.py:353:59       Langschoß               U       \"DHDN / Soldner 39 Langschoß\")"
  - "tests/gis_tests/gdal_tests/test_srs.py:355:28       Langschoß               U       self.assertIn(\"Langschoß\", srs.pretty_wkt)"
  - "tests/gis_tests/gdal_tests/test_srs.py:356:28       Langschoß               U       self.assertIn(\"Langschoß\", srs.xml)"
  - "tests/gis_tests/geo3d/models.py:16:5        pointg      U       pointg = models.PointField"
  - "tests/gis_tests/geo3d/tests.py:122:17       pointg              U       pointg=Point(*pnt_data, srid"
  - "tests/gis_tests/geo3d/tests.py:164:34       pointg              U       self.assertTrue(city.pointg.hasz)"
  - "tests/gis_tests/geo3d/tests.py:166:35       pointg              U       self.assertEqual(city.pointg.z, pnt_data[2])"
  - "tests/gis_tests/geo3d/tests.py:295:13       perim               U       ref_perim_3d = 76859.2620451"
  - "tests/gis_tests/geo3d/tests.py:296:13       perim               U       ref_perim_2d = 76859.2577803"
  - "tests/gis_tests/geo3d/tests.py:301:36       perim               U       assertAlmostEqual(ref_perim_2d, poly2d.perimeter"
  - "tests/gis_tests/geo3d/tests.py:305:36       perim               U       assertAlmostEqual(ref_perim_3d, poly3d.perimeter"
  - "tests/gis_tests/geo3d/tests.py:326:46       interstateproj      U       Length(line) FROM geo3d_interstateproj2d;`"
  - "tests/gis_tests/geo3d/tests.py:328:48       interstateproj      U       Length3D(line) FROM geo3d_interstateproj3d;`"
  - "tests/gis_tests/geo3d/tests.py:345:9        zscales             U       zscales = (-3, 4, 23)"
  - "tests/gis_tests/geo3d/tests.py:346:13       zscale              U       for zscale in zscales:"
  - "tests/gis_tests/geo3d/tests.py:346:23       zscales             U       for zscale in zscales:"
  - "tests/gis_tests/geo3d/tests.py:347:80       zscale              U       Scale(\"point\", 1.0, 1.0, zscale)):"
  - "tests/gis_tests/geo3d/tests.py:348:60       zscale              U       dict[city.name][2] * zscale, city.scale.z)"
  - "tests/gis_tests/geo3d/tests.py:355:9        ztranslations       U       ztranslations = (5.23, 23, -17)"
  - "tests/gis_tests/geo3d/tests.py:356:13       ztrans              U       for ztrans in ztranslations:"
  - "tests/gis_tests/geo3d/tests.py:356:23       ztranslations       U       for ztrans in ztranslations:"
  - "tests/gis_tests/geo3d/tests.py:358:52       ztrans              U       Translate(\"point\", 0, 0, ztrans)"
  - "tests/gis_tests/geo3d/tests.py:360:60       ztrans              U       dict[city.name][2] + ztrans, city.translate.z)"
  - "tests/gis_tests/geoapp/feeds.py:22:33       georss      U       This should attach a <georss:box> element for the"
  - "tests/gis_tests/geoapp/feeds.py:69:8        cgeo        U       \"w3cgeo1\": TestW3CGeo1,"
  - "tests/gis_tests/geoapp/feeds.py:70:8        cgeo        U       \"w3cgeo2\": TestW3CGeo2,"
  - "tests/gis_tests/geoapp/feeds.py:71:8        cgeo        U       \"w3cgeo3\": TestW3CGeo3,"
  - "tests/gis_tests/geoapp/test_feeds.py:25:14          geofeed     U       def test_geofeed_rss(self):"
  - "tests/gis_tests/geoapp/test_feeds.py:43:18          georss      U       \"georss:box\","
  - "tests/gis_tests/geoapp/test_feeds.py:50:28          georss      U       # Ensuring the georss namespace was added"
  - "tests/gis_tests/geoapp/test_feeds.py:52:42          georss      U       getAttribute(\"xmlns:georss\"), \"http://www.georss"
  - "tests/gis_tests/geoapp/test_feeds.py:58:28          georss      U       # Ensuring the georss element was added to"
  - "tests/gis_tests/geoapp/test_feeds.py:61:69          georss      U       description\", \"guid\", \"georss:point\"]"
  - "tests/gis_tests/geoapp/test_feeds.py:64:14          geofeed     U       def test_geofeed_atom(self):"
  - "tests/gis_tests/geoapp/test_feeds.py:76:28          georsss     U       # Ensuring the georsss namespace was added"
  - "tests/gis_tests/geoapp/test_feeds.py:89:14          geofeed     U       def test_geofeed_w3c(self):"
  - "tests/gis_tests/geoapp/test_feeds.py:91:61          cgeo        U       client.get(\"/feeds/w3cgeo1/\").content)"
  - "tests/gis_tests/geoapp/test_feeds.py:109:39         cgeo        U       client.get(\"/feeds/w3cgeo2/\")"
  - "tests/gis_tests/geoapp/test_feeds.py:111:39         cgeo        U       client.get(\"/feeds/w3cgeo3/\")"
  - "tests/gis_tests/geoapp/test_functions.py:148:9          ptown               U       ptown = City.objects.annotate"
  - "tests/gis_tests/geoapp/test_functions.py:166:41         ptown               U       assertTrue(gml_regex.match(ptown.gml))"
  - "tests/gis_tests/geoapp/test_functions.py:182:9          ptown               U       ptown = City.objects.annotate"
  - "tests/gis_tests/geoapp/test_functions.py:186:80         ptown               U       coordinates></Point>\", ptown.kml"
  - "tests/gis_tests/geoapp/test_functions.py:263:29         spatialite          U       elif connection.ops.spatialite:"
  - "tests/gis_tests/geoapp/test_functions.py:352:43         tobytes             U       FromWKB(Value(g.wkb.tobytes())),"
  - "tests/gis_tests/geoapp/test_functions.py:353:43         tobytes             U       FromWKB(Value(g.wkb.tobytes()), srid=4326),"
  - "tests/gis_tests/geoapp/test_functions.py:556:9          ptown               U       ptown = City.objects.annotate"
  - "tests/gis_tests/geoapp/test_functions.py:617:9          xfac                U       xfac, yfac = 2, 3"
  - "tests/gis_tests/geoapp/test_functions.py:617:15         yfac                U       xfac, yfac = 2, 3"
  - "tests/gis_tests/geoapp/test_functions.py:618:55         Spatia              U       precision tolerance is for SpatiaLite"
  - "tests/gis_tests/geoapp/test_functions.py:619:71         xfac                U       functions.Scale(\"mpoly\", xfac, yfac))"
  - "tests/gis_tests/geoapp/test_functions.py:619:77         yfac                U       Scale(\"mpoly\", xfac, yfac))"
  - "tests/gis_tests/geoapp/test_functions.py:624:56         xfac                U       assertAlmostEqual(c1[0] * xfac, c2[0], tol)"
  - "tests/gis_tests/geoapp/test_functions.py:625:56         yfac                U       assertAlmostEqual(c1[1] * yfac, c2[1], tol)"
  - "tests/gis_tests/geoapp/test_functions.py:642:28         Marino              U       # Boundary for San Marino, courtesy of Bjorn Sandvik"
  - "tests/gis_tests/geoapp/test_functions.py:642:48         Bjorn               U       Marino, courtesy of Bjorn Sandvik of thematicmapping"
  - "tests/gis_tests/geoapp/test_functions.py:642:54         Sandvik             U       Marino, courtesy of Bjorn Sandvik of thematicmapping.org"
  - "tests/gis_tests/geoapp/test_functions.py:642:65         thematicmapping     U       of Bjorn Sandvik of thematicmapping.org"
  - "tests/gis_tests/geoapp/test_functions.py:654:42         Marino              U       objects.create(name=\"San Marino\", mpoly=fromstr(wkt"
  - "tests/gis_tests/geoapp/test_functions.py:662:48         Marino              U       country\".\"name\" = 'San Marino';"
  - "tests/gis_tests/geoapp/test_functions.py:667:32         Marino              U       .get(name=\"San Marino\")"
  - "tests/gis_tests/geoapp/test_functions.py:675:48         Marino              U       country\".\"name\" = 'San Marino';"
  - "tests/gis_tests/geoapp/test_functions.py:737:9          xfac                U       xfac, yfac = 5, -23"
  - "tests/gis_tests/geoapp/test_functions.py:737:15         yfac                U       xfac, yfac = 5, -23"
  - "tests/gis_tests/geoapp/test_functions.py:739:53         xfac                U       functions.Translate(\"mpoly\", xfac, yfac)"
  - "tests/gis_tests/geoapp/test_functions.py:739:59         yfac                U       Translate(\"mpoly\", xfac, yfac)"
  - "tests/gis_tests/geoapp/test_functions.py:745:52         Spatia              U       low precision is for SpatiaLite"
  - "tests/gis_tests/geoapp/test_functions.py:768:15         Spatia              U       # SpatiaLite)."
  - "tests/gis_tests/geoapp/test_regress.py:32:17        Åland       U       name = \"Åland Islands\""
  - "tests/gis_tests/geoapp/test_regress.py:42:43        aggr        U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/geoapp/test_regress.py:54:56        Spatia      U       converted properly, even on SpatiaLite. See #16408.\""
  - "tests/gis_tests/geoapp/test_regress.py:58:21        Tioga       U       county=\"Tioga\","
  - "tests/gis_tests/geoapp/test_serializers.py:82:39        Tioga       U       Mansfield\", county=\"Tioga\", point=\"POINT(-77."
  - "tests/gis_tests/geoapp/test_sitemaps.py:27:14       geositemap      U       def test_geositemap_kml(self):"
  - "tests/gis_tests/geoapp/test_sitemaps.py:70:55       Placemark       U       getElementsByTagName(\"Placemark\")),"
  - "tests/gis_tests/geoapp/tests.py:53:9        nullcity        U       nullcity = City(name=\"NullCity"
  - "tests/gis_tests/geoapp/tests.py:54:9        nullcity        U       nullcity.save()"
  - "tests/gis_tests/geoapp/tests.py:60:17       nullcity        U       nullcity.point = bad"
  - "tests/gis_tests/geoapp/tests.py:65:9        nullcity        U       nullcity.point = new"
  - "tests/gis_tests/geoapp/tests.py:69:32       nullcity        U       self.assertEqual(4326, nullcity.point.srid)"
  - "tests/gis_tests/geoapp/tests.py:94:9        nullstate       U       nullstate = State(name=\"NullState"
  - "tests/gis_tests/geoapp/tests.py:95:32       nullstate       U       self.assertEqual(4326, nullstate.poly.srid) # SRID auto"
  - "tests/gis_tests/geoapp/tests.py:96:9        nullstate       U       nullstate.save()"
  - "tests/gis_tests/geoapp/tests.py:150:14      createnull      U       def test_createnull(self):"
  - "tests/gis_tests/geoapp/tests.py:186:24      geofields       U       def test_inherited_geofields(self):"
  - "tests/gis_tests/geoapp/tests.py:190:39      Tioga           U       Mansfield\", county=\"Tioga\", point=\"POINT(-77."
  - "tests/gis_tests/geoapp/tests.py:254:13      klass           U       for klass in geometry_classes"
  - "tests/gis_tests/geoapp/tests.py:255:17      klass           U       g = klass(srid=4326)"
  - "tests/gis_tests/geoapp/tests.py:262:64      klass           U       create(name=f\"Empty {klass.__name__}\", geom=g)"
  - "tests/gis_tests/geoapp/tests.py:264:16      klass           U       if klass is LinearRing:"
  - "tests/gis_tests/geoapp/tests.py:265:65      Geomtry         U       representable in WKB, so GEOSGeomtry.wkb"
  - "tests/gis_tests/geoapp/tests.py:277:9       ptown           U       ptown = City.objects.get(name"
  - "tests/gis_tests/geoapp/tests.py:278:51      ptown           U       filter(point__disjoint=ptown.point)"
  - "tests/gis_tests/geoapp/tests.py:280:51      ptown           U       filter(poly__disjoint=ptown.point)"
  - "tests/gis_tests/geoapp/tests.py:303:9       okcity          U       okcity = City.objects.get(name"
  - "tests/gis_tests/geoapp/tests.py:311:22      EWKBHEX         U       ) # Query w/EWKBHEX"
  - "tests/gis_tests/geoapp/tests.py:325:56      okcity          U       filter(mpoly__contains=okcity.point.wkt)), 0"
  - "tests/gis_tests/geoapp/tests.py:330:59      okcity          U       filter(mpoly__bbcontains=okcity.point)"
  - "tests/gis_tests/geoapp/tests.py:370:50      lwgeom          U       and BOX2D_right() in lwgeom_box2dfloat4.c in PostGIS"
  - "tests/gis_tests/geoapp/tests.py:370:61      dfloat          U       right() in lwgeom_box2dfloat4.c in PostGIS source"
  - "tests/gis_tests/geoapp/tests.py:441:9       nullqs          U       nullqs = State.objects.filter"
  - "tests/gis_tests/geoapp/tests.py:442:9       validqs         U       validqs = State.objects.filter"
  - "tests/gis_tests/geoapp/tests.py:445:33      nullqs          U       self.assertEqual(1, len(nullqs))"
  - "tests/gis_tests/geoapp/tests.py:446:41      nullqs          U       assertEqual(\"Puerto Rico\", nullqs[0].name)"
  - "tests/gis_tests/geoapp/tests.py:448:64      nullqs          U       objects.filter(poly=None), nullqs)"
  - "tests/gis_tests/geoapp/tests.py:449:65      validqs         U       exclude(poly=None), validqs)"
  - "tests/gis_tests/geoapp/tests.py:452:33      validqs         U       self.assertEqual(2, len(validqs))"
  - "tests/gis_tests/geoapp/tests.py:453:40      validqs         U       names = [s.name for s in validqs]"
  - "tests/gis_tests/geoapp/tests.py:564:17      anyinteract     U       mask = \"anyinteract\" if connection.ops.oracle"
  - "tests/gis_tests/geoapp/tests.py:606:43      aggr            U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/geoapp/tests.py:628:40      Smalltown       U       objects.filter(name=(\"Smalltown\")).aggregate(Extent"
  - "tests/gis_tests/geoapp/tests.py:633:43      aggr            U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/geoapp/tests.py:646:55      aggr            U       features.supports_make_line_aggr:"
  - "tests/gis_tests/geoapp/tests.py:666:42      aggr            U       lessDBFeature(\"supports_union_aggr\")"
  - "tests/gis_tests/geoapp/tests.py:667:14      unionagg        U       def test_unionagg(self):"
  - "tests/gis_tests/geoapp/tests.py:687:42      aggr            U       lessDBFeature(\"supports_union_aggr\")"
  - "tests/gis_tests/geoapp/tests.py:688:14      geoagg          U       def test_geoagg_subquery(self):"
  - "tests/gis_tests/geoapp/tests.py:706:14      unionagg        U       def test_unionagg_tolerance(self):"
  - "tests/gis_tests/geoapp/tests.py:709:19      Forney          U       name=\"Forney\","
  - "tests/gis_tests/geoapp/tests.py:712:54      Forney          U       than distance between Forney and Dallas, that's"
  - "tests/gis_tests/geoapp/tests.py:714:9       forney          U       forney_houston = GEOSGeometry"
  - "tests/gis_tests/geoapp/tests.py:719:13      forney          U       forney_houston.equals_exact"
  - "tests/gis_tests/geoapp/tests.py:729:14      unionagg        U       def test_unionagg_tolerance_escaping(self"
  - "tests/gis_tests/geogapp/models.py:18:22         geogapp     U       app_label = \"geogapp\""
  - "tests/gis_tests/geogapp/models.py:41:22         geogapp     U       app_label = \"geogapp\""
  - "tests/gis_tests/geogapp/tests.py:50:9           htown           U       htown = City.objects.get(name"
  - "tests/gis_tests/geogapp/tests.py:51:41          htown           U       objects.create(point=htown.point)"
  - "tests/gis_tests/geogapp/tests.py:52:38          htown           U       duplicate = CityUnique(point=htown.point)"
  - "tests/gis_tests/geogapp/tests.py:79:9           htown           U       htown = City.objects.get(name"
  - "tests/gis_tests/geogapp/tests.py:80:47          htown           U       filter(point__exact=htown.point)"
  - "tests/gis_tests/geogapp/tests.py:102:19         Bexar           U       names = [\"Bexar\", \"Galveston\", \"Harris"
  - "tests/gis_tests/geogapp/tests.py:121:43         aggr            U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/geogapp/tests.py:148:29         spatialite      U       elif connection.ops.spatialite:"
  - "tests/gis_tests/geogapp/tests.py:150:19         Spatia          U       # SpatiaLite < 5 returns non"
  - "tests/gis_tests/geogapp/tests.py:171:31         spatialite      U       if not connection.ops.spatialite:"
  - "tests/gis_tests/geogapp/tests.py:173:13         hzip            U       hzip = Zipcode.objects.get"
  - "tests/gis_tests/geogapp/tests.py:174:55         hzip            U       get(distance__lte=0), hzip)"
  - "tests/gis_tests/geogapp/tests.py:181:37         geogapp         U       SELECT ST_Area(poly) FROM geogapp_zipcode WHERE code="
  - "tests/gis_tests/geogapp/tests.py:184:28         geolib          U       # the database and geolib) include 5439084, 5"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:1:27           Aryeh       U       Copyright (c) 2008-2009 Aryeh Leib Taurog, all rights"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:1:33           Leib        U       (c) 2008-2009 Aryeh Leib Taurog, all rights reserved"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:1:38           Taurog      U       008-2009 Aryeh Leib Taurog, all rights reserved"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:2:42           Aryeh       U       original contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:2:48           Leib        U       contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_geos_mutation.py:2:53           Taurog      U       contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_geos.py:26:30       libgeos         U       django.contrib.gis.geos.libgeos import geos_version"
  - "tests/gis_tests/geos_tests/test_geos.py:144:9       srids           U       srids = (-1, 32140)"
  - "tests/gis_tests/geos_tests/test_geos.py:145:21      srids           U       for srid in srids:"
  - "tests/gis_tests/geos_tests/test_geos.py:158:27      jsons           U       # Loading jsons to prevent decimal difference"
  - "tests/gis_tests/geos_tests/test_geos.py:225:49      srids           U       equivalence with different srids.\""
  - "tests/gis_tests/geos_tests/test_geos.py:306:42      libgeos         U       django.contrib.gis.geos.libgeos.geos_version\", lambda"
  - "tests/gis_tests/geos_tests/test_geos.py:400:37      linestrings     U       line in self.geometries.linestrings:"
  - "tests/gis_tests/geos_tests/test_geos.py:513:35      linearrings     U       rr in self.geometries.linearrings:"
  - "tests/gis_tests/geos_tests/test_geos.py:722:25      tset            U       tset = (5, 23)"
  - "tests/gis_tests/geos_tests/test_geos.py:724:25      tset            U       tset = (5, 23, 8)"
  - "tests/gis_tests/geos_tests/test_geos.py:725:29      tset            U       cs[i] = tset"
  - "tests/gis_tests/geos_tests/test_geos.py:728:40      tset            U       for j in range(len(tset)):"
  - "tests/gis_tests/geos_tests/test_geos.py:729:33      tset            U       cs[i] = tset"
  - "tests/gis_tests/geos_tests/test_geos.py:794:42      sdiff           U       fromstr(self.geometries.sdiff_geoms[i].wkt)"
  - "tests/gis_tests/geos_tests/test_geos.py:807:56      quadsegs        U       point for the number of quadsegs."
  - "tests/gis_tests/geos_tests/test_geos.py:809:32      quadsegs        U       g.buffer(bg.width, quadsegs=1.1)"
  - "tests/gis_tests/geos_tests/test_geos.py:817:56      quadsegs        U       point for the number of quadsegs."
  - "tests/gis_tests/geos_tests/test_geos.py:819:43      quadsegs        U       with_style(bg.width, quadsegs=1.1)"
  - "tests/gis_tests/geos_tests/test_geos.py:854:22      quadsegs        U       \"quadsegs\","
  - "tests/gis_tests/geos_tests/test_geos.py:1098:14     threed          U       def test_threed(self):"
  - "tests/gis_tests/geos_tests/test_geos.py:1293:9      prec            U       prec = -1"
  - "tests/gis_tests/geos_tests/test_geos.py:1295:50     prec            U       sertAlmostEqual(trans.x, p.x, prec)"
  - "tests/gis_tests/geos_tests/test_geos.py:1296:50     prec            U       sertAlmostEqual(trans.y, p.y, prec)"
  - "tests/gis_tests/geos_tests/test_geos.py:1319:24     nosrid          U       def test_transform_nosrid(self):"
  - "tests/gis_tests/geos_tests/test_geos.py:1362:9      tgeoms          U       tgeoms = get_geoms(self.geometries"
  - "tests/gis_tests/geos_tests/test_geos.py:1363:9      tgeoms          U       tgeoms.extend(get_geoms(self"
  - "tests/gis_tests/geos_tests/test_geos.py:1364:9      tgeoms          U       tgeoms.extend(get_geoms(self"
  - "tests/gis_tests/geos_tests/test_geos.py:1365:9      tgeoms          U       tgeoms.extend(get_geoms(self"
  - "tests/gis_tests/geos_tests/test_geos.py:1366:9      tgeoms          U       tgeoms.append(Point(srid=4"
  - "tests/gis_tests/geos_tests/test_geos.py:1383:9      pnts            U       pnts = [Point(5, 5), Point"
  - "tests/gis_tests/geos_tests/test_geos.py:1384:20     pnts            U       for pnt in pnts:"
  - "tests/gis_tests/geos_tests/test_geos.py:1432:14     linearref       U       def test_linearref(self):"
  - "tests/gis_tests/geos_tests/test_geos.py:1546:25     CAPI            U       (b\"3.0.0rc4-CAPI-1.3.3\", (3, 0, 0)),"
  - "tests/gis_tests/geos_tests/test_geos.py:1547:22     CAPI            U       (b\"3.0.0-CAPI-1.4.1\", (3, 0, 0)),"
  - "tests/gis_tests/geos_tests/test_geos.py:1548:25     CAPI            U       (b\"3.4.0dev-CAPI-1.8.0\", (3, 4, 0)),"
  - "tests/gis_tests/geos_tests/test_geos.py:1549:25     CAPI            U       (b\"3.4.0dev-CAPI-1.8.0 r0\", (3, 4, 0"
  - "tests/gis_tests/geos_tests/test_geos.py:1550:22     CAPI            U       (b\"3.6.2-CAPI-1.10.2 4d2925d6\", ("
  - "tests/gis_tests/geos_tests/test_geos.py:1555:46     libgeos         U       django.contrib.gis.geos.libgeos.geos_version\","
  - "tests/gis_tests/geos_tests/test_geos.py:1587:37     SRUD            U       GEOSGeometry.from_ewkt(\"SRUD=1;POINT(1 1)\")"
  - "tests/gis_tests/geos_tests/test_io.py:12:30         libgeos         U       django.contrib.gis.geos.libgeos import geos_version"
  - "tests/gis_tests/geos_tests/test_io.py:16:7          GEOSIO          U       class GEOSIOTest(SimpleTestCase)"
  - "tests/gis_tests/geos_tests/test_io.py:91:24         byteorders      U       # Ensuring bad byteorders are not accepted."
  - "tests/gis_tests/geos_tests/test_mutable_list.py:1:27        Aryeh           U       Copyright (c) 2008-2009 Aryeh Leib Taurog, http:/"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:1:33        Leib            U       (c) 2008-2009 Aryeh Leib Taurog, http://www.aryehleib"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:1:38        Taurog          U       008-2009 Aryeh Leib Taurog, http://www.aryehleib"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:4:42        Aryeh           U       original contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:4:48        Leib            U       contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:4:53        Taurog          U       contribution by Aryeh Leib Taurog, which was"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:78:16       getslice        U       def test01_getslice(self):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:99:16       setslice        U       def test02_setslice(self):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:102:13      setfcn          U       def setfcn(x, i, j, k, L):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:137:29      setfcn          U       setfcn(ul, i, j, k, sliceLen"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:140:33      setfcn          U       setfcn(ul, i, j, k, sliceLen"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:159:16      delslice        U       def test03_delslice(self):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:226:13      setfcn          U       def setfcn(x, i):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:229:13      getfcn          U       def getfcn(x, i):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:232:13      delfcn          U       def delfcn(x, i):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:238:17      setfcn          U       setfcn(ul, i)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:240:17      getfcn          U       getfcn(ul, i)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:242:17      delfcn          U       delfcn(ul, i)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:276:13      popfcn          U       def popfcn(x, i):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:280:13      popfcn          U       popfcn(ul, self.limit)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:282:13      popfcn          U       popfcn(ul, -1 - self.limit"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:297:13      indexfcn        U       def indexfcn(x, v):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:300:13      removefcn       U       def removefcn(x, v):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:304:13      indexfcn        U       indexfcn(ul, 40)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:306:13      removefcn       U       removefcn(ul, 40)"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:328:13      delfcn          U       def delfcn(x, i):"
  - "tests/gis_tests/geos_tests/test_mutable_list.py:336:17      delfcn          U       delfcn(ul, i)"
  - "tests/gis_tests/gis_migrations/migrations/0002_create_models.py:93:19       rast    U       (\"rast\", models.fields.RasterField"
  - "tests/gis_tests/gis_migrations/test_commands.py:8:42        Geodjango       U       the migrate command in Geodjango."
  - "tests/gis_tests/gis_migrations/test_commands.py:27:68       Geodjango       U       command when a model uses Geodjango"
  - "tests/gis_tests/gis_migrations/test_commands.py:30:65       spatialite      U       in migrations where spatialite is"
  - "tests/gis_tests/gis_migrations/test_commands.py:62:23       unmigration     U       # Revert the \"unmigration\""
  - "tests/gis_tests/gis_migrations/test_operations.py:22:46         indclass        U       i on oc.oid = ANY(i.indclass)"
  - "tests/gis_tests/gis_migrations/test_operations.py:67:31         rast            U       test_fields += [(\"rast\", fields.RasterField"
  - "tests/gis_tests/gis_migrations/test_operations.py:87:25         convexhull      U       \"st_convexhull(%s)\" % column in c["
  - "tests/gis_tests/gis_migrations/test_operations.py:101:25        convexhull      U       \"st_convexhull(%s)\" % column in c["
  - "tests/gis_tests/gis_migrations/test_operations.py:244:71        rast            U       RemoveField, \"Neighborhood\", \"rast\")"
  - "tests/gis_tests/gis_migrations/test_operations.py:245:57        rast            U       gis_neighborhood\", \"rast\")"
  - "tests/gis_tests/gis_migrations/test_operations.py:254:64        rast            U       gis_neighborhood\", \"rast\", raster=True)"
  - "tests/gis_tests/inspectapp/models.py:18:5           pointg      U       pointg = models.PointField"
  - "tests/gis_tests/inspectapp/tests.py:24:49       inspectapp      U       filter=lambda tn: tn == \"inspectapp_allogrfields\","
  - "tests/gis_tests/inspectapp/tests.py:24:60       allogrfields    U       tn: tn == \"inspectapp_allogrfields\","
  - "tests/gis_tests/inspectapp/tests.py:40:49       inspectapp      U       filter=lambda tn: tn == \"inspectapp_fields3d\","
  - "tests/gis_tests/inspectapp/tests.py:48:22       pointg          U       \"pointg = models.PointField"
  - "tests/gis_tests/inspectapp/tests.py:51:32       pointg          U       self.assertIn(\"pointg = models.PointField"
  - "tests/gis_tests/inspectapp/tests.py:56:28       pointg          U       self.assertIn(\"pointg = models.GeometryField"
  - "tests/gis_tests/inspectapp/tests.py:90:62       leitung         U       DATA, \"gas_lines\", \"gas_leitung.shp\")"
  - "tests/gis_tests/inspectapp/tests.py:121:23      shapefiles      U       # Writing shapefiles via GDAL currently does"
  - "tests/gis_tests/inspectapp/tests.py:146:15      Spatia          U       # SpatiaLite introspection is"
  - "tests/gis_tests/inspectapp/tests.py:219:41      spatialite      U       contrib.gis.db.backends.spatialite\": (\"SQLite\", \"%(db_name"
  - "tests/gis_tests/inspectapp/tests.py:234:14      Spatia          U       # SQLite/SpatiaLite in-memory databases"
  - "tests/gis_tests/layermap/models.py:101:1        cofeat      U       cofeat_mapping = {"
  - "tests/gis_tests/layermap/tests.py:32:5          cofeat          U       cofeat_mapping,"
  - "tests/gis_tests/layermap/tests.py:41:39         emptypoints     U       path / \"invalid\" / \"emptypoints.shp\""
  - "tests/gis_tests/layermap/tests.py:45:11         Bexar           U       NAMES = [\"Bexar\", \"Galveston\", \"Harris"
  - "tests/gis_tests/layermap/tests.py:60:25         Nombre          U       bad2[\"name\"] = \"Nombre\""
  - "tests/gis_tests/layermap/tests.py:177:36        mpolygon        U       ValueError, (\"name\", \"mpolygon\")),"
  - "tests/gis_tests/layermap/tests.py:192:34        nombre          U       fk_map2[\"state\"] = {\"nombre\": \"State\"}"
  - "tests/gis_tests/layermap/tests.py:228:47        cofeat          U       CountyFeat, co_shp, cofeat_mapping, transform=False"
  - "tests/gis_tests/layermap/tests.py:294:9         icity           U       icity_mapping = {"
  - "tests/gis_tests/layermap/tests.py:302:46        icity           U       ayerMapping(ICity1, city_shp, icity_mapping)"
  - "tests/gis_tests/layermap/tests.py:306:46        icity           U       ayerMapping(ICity2, city_shp, icity_mapping)"
  - "tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:8:11          rasterapp           U       (\"rasterapp\", \"0001_setup_extensions"
  - "tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:25:22         rast                U       \"rast\","
  - "tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:34:22         rastprojected       U       \"rastprojected\","
  - "tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:63:29         rasterapp           U       to=\"rasterapp.rastermodel\","
  - "tests/gis_tests/rasterapp/models.py:5:5         rast                U       rast = models.RasterField"
  - "tests/gis_tests/rasterapp/models.py:8:5         rastprojected       U       rastprojected = models.RasterField"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:15:21         textrasters         U       from ..data.rasters.textrasters import JSON_RASTER"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:21:34         rasterapp           U       available_apps = [\"gis_tests.rasterapp\"]"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:24:9          rast                U       rast = GDALRaster("
  - "tests/gis_tests/rasterapp/test_rasterfield.py:37:13         rast                U       rast=rast,"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:37:18         rast                U       rast=rast,"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:38:13         rastprojected       U       rastprojected=rast,"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:38:27         rast                U       rastprojected=rast,"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:47:40         rast                U       RasterModel.objects.create(rast=None)"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:170:9         unprojected         U       unprojected coordinate systems."
  - "tests/gis_tests/rasterapp/test_rasterfield.py:194:22        rastprojected       U       \"rastprojected__0__\","
  - "tests/gis_tests/rasterapp/test_rasterfield.py:196:22        rastprojected       U       \"rastprojected__\","
  - "tests/gis_tests/rasterapp/test_rasterfield.py:239:34        rastprojected       U       combo_keys[2] = \"rastprojected__\" + name"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:287:41        rastprojected       U       RasterModel.objects.filter(rastprojected__dwithin=(rast, D(km"
  - "tests/gis_tests/rasterapp/test_rasterfield.py:298:24        unprojected         U       # Filter in an unprojected coordinate system."
  - "tests/gis_tests/rasterapp/test_rasterfield.py:400:26        polygonized         U       def test_lookup_with_polygonized_raster(self):"
  - "tests/gis_tests/relatedapp/models.py:38:18          curveball       U       # Throwing a curveball w/`db_column` here."
  - "tests/gis_tests/relatedapp/models.py:39:55          mycenter        U       srid=2276, db_column=\"mycenter\")"
  - "tests/gis_tests/relatedapp/tests.py:25:15       Kecksburg       U       (\"Kecksburg\", \"PA\", -79.460734,"
  - "tests/gis_tests/relatedapp/tests.py:36:43       aggr            U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/relatedapp/tests.py:40:9        aggs            U       aggs = City.objects.aggregate"
  - "tests/gis_tests/relatedapp/tests.py:44:9        txpa            U       txpa_extent = (-97.51611"
  - "tests/gis_tests/relatedapp/tests.py:51:14       aggs            U       e3 = aggs[\"location__point__extent"
  - "tests/gis_tests/relatedapp/tests.py:56:43       txpa            U       [(all_extent, e1), (txpa_extent, e2), (all_extent"
  - "tests/gis_tests/relatedapp/tests.py:60:43       aggr            U       essDBFeature(\"supports_extent_aggr\")"
  - "tests/gis_tests/relatedapp/tests.py:73:42       aggr            U       lessDBFeature(\"supports_union_aggr\")"
  - "tests/gis_tests/relatedapp/tests.py:77:9        aggs            U       aggs = City.objects.aggregate"
  - "tests/gis_tests/relatedapp/tests.py:97:14       aggs            U       u3 = aggs[\"location__point__union"
  - "tests/gis_tests/relatedapp/tests.py:123:9       pcity           U       pcity = City.objects.get(name"
  - "tests/gis_tests/relatedapp/tests.py:128:14      pcity           U       c1 = pcity.location.point"
  - "tests/gis_tests/relatedapp/tests.py:132:29      pcity           U       name=\"P1\", city=pcity, center1=c1, center"
  - "tests/gis_tests/relatedapp/tests.py:147:29      pcity           U       name=\"P2\", city=pcity, center1=c1, center"
  - "tests/gis_tests/relatedapp/tests.py:184:9       gvqs            U       gvqs = Location.objects.values"
  - "tests/gis_tests/relatedapp/tests.py:185:9       gvlqs           U       gvlqs = Location.objects.values"
  - "tests/gis_tests/relatedapp/tests.py:189:33      gvqs            U       m, d, t in zip(gqs, gvqs, gvlqs):"
  - "tests/gis_tests/relatedapp/tests.py:189:39      gvlqs           U       t in zip(gqs, gvqs, gvlqs):"
  - "tests/gis_tests/relatedapp/tests.py:226:39      Kecksburg       U       City.objects.get(name=\"Kecksburg\").location.point.buffer"
  - "tests/gis_tests/relatedapp/tests.py:233:24      Kecksburg       U       self.assertIn(\"Kecksburg\", names)"
  - "tests/gis_tests/relatedapp/tests.py:249:45      Paglen          U       be one author (Trevor Paglen) returned by this query"
  - "tests/gis_tests/relatedapp/tests.py:282:44      aggr            U       ssDBFeature(\"supports_collect_aggr\")"
  - "tests/gis_tests/relatedapp/tests.py:308:44      aggr            U       ssDBFeature(\"supports_collect_aggr\")"
  - "tests/gis_tests/relatedapp/tests.py:334:59      Spatia          U       .7128 -2.006)\"), # SpatiaLite collapse to POINT"
  - "tests/gis_tests/test_data.py:15:5           tuplize         U       def tuplize(seq):"
  - "tests/gis_tests/test_data.py:18:22          tuplize         U       return tuple(tuplize(i) for i in seq)"
  - "tests/gis_tests/test_data.py:22:5           strconvert      U       def strconvert(d):"
  - "tests/gis_tests/test_data.py:64:27          tuplize         U       self.coords = tuplize(coords)"
  - "tests/gis_tests/test_data.py:67:44          tuplize         U       cs = ext_ring_cs and tuplize(ext_ring_cs)"
  - "tests/gis_tests/test_data.py:78:44          strconvert      U       self, key, [TestGeom(**strconvert(kw)) for kw in value"
  - "tests/gis_tests/test_data.py:92:30          strconvert      U       return TestGeomSet(**strconvert(geometries))"
  - "tests/gis_tests/test_geoforms.py:33:9           xform       U       xform_geom = GEOSGeometry"
  - "tests/gis_tests/test_geoforms.py:41:25          xform       U       self.assertTrue(xform_geom.equals_exact(cleaned"
  - "tests/gis_tests/test_geoip2.py:24:36        mmdb        U       \"GeoLite2-City-Test.mmdb\","
  - "tests/gis_tests/test_geoip2.py:25:42        mmdb        U       GeoLite2-Country-Test.mmdb\","
  - "tests/gis_tests/test_geoip2.py:143:34       Boxford     U       \"city\": \"Boxford\","
  - "tests/gis_tests/test_geoip2.py:226:34       mmdb        U       CITY=\"GeoIP2-City-Test.mmdb\","
  - "tests/gis_tests/test_geoip2.py:227:40       mmdb        U       GeoIP2-Country-Test.mmdb\","
  - "tests/gis_tests/test_geoip2.py:243:75       mmdb        U       path(\"GeoLite2-ASN-Test.mmdb\")):"
  - "tests/gis_tests/test_ptr.py:42:20       ptrs    U       # (in `bad_ptrs`) aren't allowed."
  - "tests/gis_tests/test_ptr.py:43:13       ptrs    U       bad_ptrs = (5, ctypes.c_char"
  - "tests/gis_tests/test_ptr.py:44:28       ptrs    U       for bad_ptr in bad_ptrs:"
  - "tests/gis_tests/test_spatialrefsys.py:13:10         srtext              U       \"srtext\": 'GEOGCS[\"WGS 84\",DATUM"
  - "tests/gis_tests/test_spatialrefsys.py:13:20         GEOGCS              U       \"srtext\": 'GEOGCS[\"WGS 84\",DATUM[\"WGS"
  - "tests/gis_tests/test_spatialrefsys.py:15:48         towgs               U       longlat (\\+datum=WGS84 |\\+towgs84=0,0,0,0,0,0,0 )\\+no"
  - "tests/gis_tests/test_spatialrefsys.py:21:10         spatialite          U       \"spatialite\": True,"
  - "tests/gis_tests/test_spatialrefsys.py:24:10         eprec               U       \"eprec\": (1, 1, 9),"
  - "tests/gis_tests/test_spatialrefsys.py:29:9          GEOGCS              U       GEOGCS[\"WGS 84\","
  - "tests/gis_tests/test_spatialrefsys.py:34:5          PRIMEM              U       PRIMEM[\"Greenwich\",0,"
  - "tests/gis_tests/test_spatialrefsys.py:46:10         srtext              U       \"srtext\": ("
  - "tests/gis_tests/test_spatialrefsys.py:47:14         PROJCS              U       'PROJCS[\"NAD83 / Texas South"
  - "tests/gis_tests/test_spatialrefsys.py:47:51         GEOGCS              U       Texas South Central\",GEOGCS[\"NAD83\",'"
  - "tests/gis_tests/test_spatialrefsys.py:53:61         ellps               U       00 \\+y_0=4000000 (\\+ellps=GRS80 )?\""
  - "tests/gis_tests/test_spatialrefsys.py:54:33         towgs               U       r\"(\\+datum=NAD83 |\\+towgs84=0,0,0,0,0,0,0 )?\\"
  - "tests/gis_tests/test_spatialrefsys.py:60:10         spatialite          U       \"spatialite\": False,"
  - "tests/gis_tests/test_spatialrefsys.py:63:10         eprec               U       \"eprec\": (1, 5, 10),"
  - "tests/gis_tests/test_spatialrefsys.py:68:27         spatialrefsys       U       skipUnlessDBFeature(\"has_spatialrefsys_table\")"
  - "tests/gis_tests/test_spatialrefsys.py:93:27         Spatialite          U       # (\"epsg\") on Spatialite."
  - "tests/gis_tests/test_spatialrefsys.py:99:37         srtext              U       No PROJ and different srtext on Oracle."
  - "tests/gis_tests/test_spatialrefsys.py:101:56        srtext              U       srs.wkt.startswith(sd[\"srtext\"]))"
  - "tests/gis_tests/test_spatialrefsys.py:118:56        srtext              U       srs.wkt.startswith(sd[\"srtext\"]))"
  - "tests/gis_tests/test_spatialrefsys.py:126:13        ellps               U       ellps1 = sd[\"ellipsoid\"]"
  - "tests/gis_tests/test_spatialrefsys.py:127:13        prec                U       prec = sd[\"eprec\"]"
  - "tests/gis_tests/test_spatialrefsys.py:127:24        eprec               U       prec = sd[\"eprec\"]"
  - "tests/gis_tests/test_spatialrefsys.py:131:13        ellps               U       ellps2 = srs.ellipsoid"
  - "tests/gis_tests/test_spatialrefsys.py:134:40        ellps               U       self.assertAlmostEqual(ellps1[i], ellps2[i], prec"
  - "tests/gis_tests/test_spatialrefsys.py:134:51        ellps               U       assertAlmostEqual(ellps1[i], ellps2[i], prec[i])"
  - "tests/gis_tests/test_spatialrefsys.py:134:62        prec                U       ellps1[i], ellps2[i], prec[i])"
  - "tests/handlers/tests.py:47:15       MSIE            U       # MSIE)."
  - "tests/handlers/tests.py:58:53       ufffd           U       café\", \"café\", \"caf\\ufffd\", \"café\"])"
  - "tests/handlers/tests.py:188:14      suspiciousop    U       def test_suspiciousop_in_view_returns_400"
  - "tests/handlers/tests.py:304:20      suspiciousop    U       async def test_suspiciousop_in_view_returns_400"
  - "tests/handlers/tests.py:333:31      somepath        U       **{\"path\": \"/root/somepath/\", \"root_path\": \"/root"
  - "tests/handlers/tests.py:335:47      somepath        U       request.path, \"/root/somepath/\")"
  - "tests/handlers/tests.py:337:47      somepath        U       request.path_info, \"/somepath/\")"
  - "tests/handlers/tests.py:342:76      somepath        U       path\": \"/FORCED_PREFIX/somepath/\"})"
  - "tests/handlers/tests.py:343:56      somepath        U       path, \"/FORCED_PREFIX/somepath/\")"
  - "tests/httpwrappers/tests.py:120:25      xebst               U       q[\"next\"] = \"/t\\xebst&key/\""
  - "tests/httpwrappers/tests.py:291:28      ǝnlɐʌ               U       expected[\"ʎǝʞ\"] = \"ǝnlɐʌ\""
  - "tests/httpwrappers/tests.py:356:36      Edel                U       attachment; filename=\"EdelRot_Blu\\u0308te (3)-"
  - "tests/httpwrappers/tests.py:415:23      idan                U       r.content = [\"idan\", \"alex\", \"jacob\"]"
  - "tests/httpwrappers/tests.py:416:39      idanalexjacob       U       assertEqual(r.content, b\"idanalexjacob\")"
  - "tests/httpwrappers/tests.py:425:25      unichr              U       # '\\xde\\x9e' == unichr(1950).encode()"
  - "tests/httpwrappers/tests.py:449:23      isnt (isn't)        U       def test_iterator_isnt_rewound(self):"
  - "tests/httpwrappers/tests.py:464:18      привет              U       r.write(\"привет\")"
  - "tests/httpwrappers/tests.py:486:48      nbaz                U       content, b\"foo\\nbar\\nbaz\\n\")"
  - "tests/httpwrappers/tests.py:615:25      łóżko               U       data = {\"key\": \"łóżko\"}"
  - "tests/httpwrappers/tests.py:675:25      unichr              U       # '\\xc3\\xa9' == unichr(233).encode()"
  - "tests/httpwrappers/tests.py:849:27      keebler             U       parse_cookie('keebler=\"E=mc2; L=\\\\\"Loves\\"
  - "tests/httpwrappers/tests.py:850:15      keebler             U       {\"keebler\": '\"E=mc2', \"L\": '\\"
  - "tests/httpwrappers/tests.py:853:40      keebler             U       assertEqual(parse_cookie(\"keebler=E=mc2\"), {\"keebler\""
  - "tests/httpwrappers/tests.py:853:59      keebler             U       \"keebler=E=mc2\"), {\"keebler\": \"E=mc2\"})"
  - "tests/httpwrappers/tests.py:863:21      edgecases           U       def test_cookie_edgecases(self):"
  - "tests/httpwrappers/tests.py:895:33      André               U       parse_cookie(\"saint=André Bessette\"), {\"saint"
  - "tests/httpwrappers/tests.py:895:39      Bessette            U       cookie(\"saint=André Bessette\"), {\"saint\": \"André"
  - "tests/httpwrappers/tests.py:895:62      André               U       Bessette\"), {\"saint\": \"André Bessette\"}"
  - "tests/httpwrappers/tests.py:895:68      Bessette            U       ), {\"saint\": \"André Bessette\"}"
  - "tests/httpwrappers/tests.py:921:9       rawdata             U       rawdata = 'Customer=\"WILE_E"
  - "tests/httpwrappers/tests.py:922:46      rawdata             U       \"Set-Cookie: %s\" % rawdata"
  - "tests/httpwrappers/tests.py:925:16      rawdata             U       C.load(rawdata)"
  - "tests/humanize_tests/tests.py:371:18        Millionen       U       \"1,2 Millionen\","
  - "tests/humanize_tests/tests.py:372:18        Millionen       U       \"1,3 Millionen\","
  - "tests/humanize_tests/tests.py:373:18        Milliarde       U       \"1,0 Milliarde\","
  - "tests/humanize_tests/tests.py:374:18        Milliarden      U       \"2,0 Milliarden\","
  - "tests/humanize_tests/tests.py:375:18        Billionen       U       \"6,0 Billionen\","
  - "tests/humanize_tests/tests.py:412:9         notdate         U       notdate = \"I'm not a date value"
  - "tests/humanize_tests/tests.py:414:59        notdate         U       tomorrow, someday, notdate, None)"
  - "tests/humanize_tests/tests.py:597:14        před            U       \"před 1\\xa0dnem\","
  - "tests/humanize_tests/tests.py:597:24        dnem            U       \"před 1\\xa0dnem\","
  - "tests/humanize_tests/tests.py:598:14        před            U       \"před 2\\xa0dny\","
  - "tests/humanize_tests/tests.py:599:14        před            U       \"před 1\\xa0měsícem\","
  - "tests/humanize_tests/tests.py:599:24        měsícem         U       \"před 1\\xa0měsícem\","
  - "tests/humanize_tests/tests.py:600:14        před            U       \"před 2\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:600:24        měsíci          U       \"před 2\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:601:14        před            U       \"před 1\\xa0rokem, 4\\xa0měs"
  - "tests/humanize_tests/tests.py:601:24        rokem           U       \"před 1\\xa0rokem, 4\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:601:36        měsíci          U       ed 1\\xa0rokem, 4\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:602:24        lety            U       \"před 2\\xa0lety, 4\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:602:35        měsíci          U       před 2\\xa0lety, 4\\xa0měsíci\","
  - "tests/humanize_tests/tests.py:605:22        měsíc           U       \"za 1\\xa0měsíc\","
  - "tests/humanize_tests/tests.py:606:22        měsíce          U       \"za 2\\xa0měsíce\","
  - "tests/humanize_tests/tests.py:607:32        měsíce          U       \"za 1\\xa0rok, 4\\xa0měsíce\","
  - "tests/humanize_tests/tests.py:608:22        roky            U       \"za 2\\xa0roky, 4\\xa0měsíce\","
  - "tests/humanize_tests/tests.py:608:33        měsíce          U       \"za 2\\xa0roky, 4\\xa0měsíce\","
  - "tests/i18n/commands/__init__.py:13:49       Foos    U       s Foo\", \"%(number)s Foos\", number) % {\"number"
  - "tests/i18n/contenttypes/tests.py:25:57          Société     U       company_type), \"I18N | Société\")"
  - "tests/i18n/patterns/tests.py:146:65         vertaald        U       prefix-translated\"), \"/vertaald/\")"
  - "tests/i18n/patterns/tests.py:147:71         vertaald        U       translated-regex\"), \"/vertaald-regex/\")"
  - "tests/i18n/patterns/tests.py:150:19         vertaald        U       \"/vertaald/yeah/\","
  - "tests/i18n/patterns/tests.py:154:65         traduzidos      U       prefix-translated\"), \"/traduzidos/\")"
  - "tests/i18n/patterns/tests.py:156:58         traduzidos      U       translated-regex\"), \"/traduzidos-regex/\""
  - "tests/i18n/patterns/tests.py:160:19         traduzidos      U       \"/traduzidos/yeah/\","
  - "tests/i18n/patterns/tests.py:168:53         gebruikers      U       reverse(\"users\"), \"/nl/gebruikers/\")"
  - "tests/i18n/patterns/tests.py:172:56         usuarios        U       reverse(\"users\"), \"/pt-br/usuarios/\")"
  - "tests/i18n/patterns/tests.py:179:70         gebruikers      U       users/\", \"nl\"), \"/nl/gebruikers/\")"
  - "tests/i18n/patterns/tests.py:182:68         profiel         U       register/\", \"nl\"), \"/nl/profiel/registreren/\""
  - "tests/i18n/patterns/tests.py:187:22         profiel         U       \"/nl/profiel/registreren-als-pad"
  - "tests/i18n/patterns/tests.py:208:49         gebruikers      U       ssertEqual(translate_url(\"/nl/gebruikers/\", \"en\"), \"/en/users"
  - "tests/i18n/patterns/tests.py:216:22         vertaald        U       (\"nl\", \"/vertaald/apo/\"),"
  - "tests/i18n/patterns/tests.py:217:25         traduzidos      U       (\"pt-br\", \"/traduzidos/apo/\"),"
  - "tests/i18n/patterns/tests.py:228:25         interepreted    U       def test_locale_not_interepreted_as_regex(self):"
  - "tests/i18n/patterns/tests.py:231:49         subpattern      U       missing ), unterminated subpattern at position 1"
  - "tests/i18n/patterns/tests.py:248:64         profiel         U       account:register\"), \"/nl/profiel/registreren/\")"
  - "tests/i18n/patterns/tests.py:250:59         profiel         U       register-as-path\"), \"/nl/profiel/registreren-als-pad"
  - "tests/i18n/patterns/tests.py:275:15         profiel         U       \"/profiel/registreren/\", headers"
  - "tests/i18n/patterns/tests.py:296:15         conta           U       \"/conta/registre-se/\", headers"
  - "tests/i18n/patterns/tests.py:296:21         registre        U       \"/conta/registre-se/\", headers={\"accept"
  - "tests/i18n/patterns/tests.py:298:48         conta           U       rtRedirects(response, \"/pt-br/conta/registre-se/\")"
  - "tests/i18n/patterns/tests.py:298:54         registre        U       response, \"/pt-br/conta/registre-se/\")"
  - "tests/i18n/patterns/tests.py:426:44         conta           U       self.client.get(\"/pt-br/conta/registre-se/\")"
  - "tests/i18n/patterns/tests.py:426:50         registre        U       client.get(\"/pt-br/conta/registre-se/\")"
  - "tests/i18n/patterns/tests.py:447:38         gebruikers      U       = self.client.get(\"/gebruikers/\", headers={\"accept"
  - "tests/i18n/patterns/tests.py:452:38         gebruikers      U       = self.client.get(\"/gebruikers/\")"
  - "tests/i18n/patterns/tests.py:493:55         vertaald        U       strip().split(), [\"/vertaald/\", \"/traduzidos/\"]"
  - "tests/i18n/patterns/tests.py:493:69         traduzidos      U       ), [\"/vertaald/\", \"/traduzidos/\"]"
  - "tests/i18n/sampleproject/update_catalogs.py:48:5        pofile      U       pofile = os.path.join(proj"
  - "tests/i18n/sampleproject/update_catalogs.py:50:15       pofile      U       with open(pofile) as f:"
  - "tests/i18n/sampleproject/update_catalogs.py:53:15       pofile      U       with open(pofile, \"w\") as f:"
  - "tests/i18n/test_compilation.py:205:16       somedir     U       [(\"somedir\", [\"ignore\", \"locale"
  - "tests/i18n/test_compilation.py:207:44       somedir     U       locale\", \"locale\", \"somedir/locale\"]"
  - "tests/i18n/test_compilation.py:217:24       somedir     U       [(\"exclude/somedir/locale/LC_MESSAGES\""
  - "tests/i18n/test_compilation.py:218:24       somedir     U       [(\"exclude/somedir/locale/LC_MESSAGES\""
  - "tests/i18n/test_compilation.py:219:24       somedir     U       [(\"exclude/somedir/locale/LC_MESSAGES\""
  - "tests/i18n/test_compilation.py:292:14       nofuzzy     U       def test_nofuzzy_compiling(self):"
  - "tests/i18n/test_compilation.py:296:53       Ленин       U       ssertEqual(gettext(\"Lenin\"), \"Ленин\")"
  - "tests/i18n/test_compilation.py:305:53       Ленин       U       ssertEqual(gettext(\"Lenin\"), \"Ленин\")"
  - "tests/i18n/test_compilation.py:306:53       Водка       U       ssertEqual(gettext(\"Vodka\"), \"Водка\")"
  - "tests/i18n/test_extraction.py:27:5          xgettext        U       has_xgettext = find_command(\"xgettext"
  - "tests/i18n/test_extraction.py:27:30         xgettext        U       xgettext = find_command(\"xgettext\")"
  - "tests/i18n/test_extraction.py:30:17         xgettext        U       @skipUnless(has_xgettext, \"xgettext is mandatory"
  - "tests/i18n/test_extraction.py:30:28         xgettext        U       skipUnless(has_xgettext, \"xgettext is mandatory for extraction"
  - "tests/i18n/test_extraction.py:154:28        msgctxt         U       self.assertIn('msgctxt \"Special trans context"
  - "tests/i18n/test_extraction.py:182:27        tachelhit       U       def test_valid_locale_tachelhit_latin_morocco(self)"
  - "tests/i18n/test_extraction.py:191:35        subtag          U       valid_locale_private_subtag(self):"
  - "tests/i18n/test_extraction.py:227:37        subtag          U       invalid_locale_private_subtag(self):"
  - "tests/i18n/test_extraction.py:302:40        áéíóúö          U       non ASCII characters: áéíóúö\","
  - "tests/i18n/test_extraction.py:307:40        áéíóúö          U       non ASCII characters: áéíóúö\\n#. continued here."
  - "tests/i18n/test_extraction.py:358:43        vidéo           U       join(self.test_dir, \"vidéo.txt\"), \"a\").close()"
  - "tests/i18n/test_extraction.py:362:17        xgettext        U       \"\"\"test xgettext warning about multiple"
  - "tests/i18n/test_extraction.py:378:28        msgctxt         U       self.assertIn('msgctxt \"Special trans context"
  - "tests/i18n/test_extraction.py:380:28        msgctxt         U       self.assertIn('msgctxt \"Special trans context"
  - "tests/i18n/test_extraction.py:382:28        msgctxt         U       self.assertIn('msgctxt \"Special trans context"
  - "tests/i18n/test_extraction.py:390:22        msgctxt         U       'msgctxt \"context #7.1{}\"'.format"
  - "tests/i18n/test_extraction.py:438:63        thtml           U       LOCALE], extensions=[\"thtml\"], verbosity=0"
  - "tests/i18n/test_extraction.py:446:61        thtml           U       templates[/\\\\]comments.thtml, line 4\\) \""
  - "tests/i18n/test_extraction.py:452:61        thtml           U       templates[/\\\\]comments.thtml, line 6\\) \""
  - "tests/i18n/test_extraction.py:458:61        thtml           U       templates[/\\\\]comments.thtml, line 8\\) \""
  - "tests/i18n/test_extraction.py:512:40        tfile           U       = {os.path.splitext(tfile.file)[1] for tfile in"
  - "tests/i18n/test_extraction.py:512:59        tfile           U       splitext(tfile.file)[1] for tfile in found_files}"
  - "tests/i18n/test_extraction.py:516:23        djangojs        U       cmd.domain = \"djangojs\""
  - "tests/i18n/test_extraction.py:519:40        tfile           U       = {os.path.splitext(tfile.file)[1] for tfile in"
  - "tests/i18n/test_extraction.py:519:59        tfile           U       splitext(tfile.file)[1] for tfile in found_files}"
  - "tests/i18n/test_extraction.py:532:25        Ulrich          U       \"Written by Ulrich Drepper.\\n\","
  - "tests/i18n/test_extraction.py:532:32        Drepper         U       \"Written by Ulrich Drepper.\\n\","
  - "tests/i18n/test_extraction.py:567:32        Größe           U       self.assertMsgStr(\"Größe\", po_contents)"
  - "tests/i18n/test_extraction.py:591:38        djangojs        U       locale/%s/LC_MESSAGES/djangojs.po\" % LOCALE"
  - "tests/i18n/test_extraction.py:594:57        djangojs        U       makemessages(domain=\"djangojs\")"
  - "tests/i18n/test_extraction.py:599:27        okkkk           U       self.assertMsgId(\"okkkk\", po_contents)"
  - "tests/i18n/test_extraction.py:621:61        djangojs        U       makemessages(domain=\"djangojs\")"
  - "tests/i18n/test_extraction.py:634:57        djangojs        U       makemessages(domain=\"djangojs\")"
  - "tests/i18n/test_extraction.py:737:57        djtpl           U       \"es\"], extensions=[\"djtpl\"], verbosity=0"
  - "tests/i18n/test_extraction.py:756:67        djtpl           U       extensions=[\"html\", \"djtpl\"], verbosity=0"
  - "tests/i18n/test_extraction.py:822:36        templatized     U       location_comments_for_templatized_files(self):"
  - "tests/i18n/test_percents.py:87:21       Littérale       U       expected = \"Littérale avec un symbole de pour"
  - "tests/i18n/test_percents.py:87:31       avec            U       expected = \"Littérale avec un symbole de pour cent"
  - "tests/i18n/test_percents.py:87:39       symbole         U       \"Littérale avec un symbole de pour cent à la fin"
  - "tests/i18n/test_percents.py:102:31      littérale       U       expected = \"Pour cent littérale % avec un symbole au"
  - "tests/i18n/test_percents.py:102:43      avec            U       Pour cent littérale % avec un symbole au milieu"
  - "tests/i18n/test_percents.py:102:51      symbole         U       littérale % avec un symbole au milieu\""
  - "tests/i18n/test_percents.py:122:58      Elle            U       render(Context({})), \"Elle est de 100%\")"
  - "tests/i18n/test_percents.py:132:58      Elle            U       render(Context({})), \"Elle est de 100%\")"
  - "tests/i18n/test_percents.py:137:17      dirait          U       \"On dirait un spec str fmt %s mais"
  - "tests/i18n/test_percents.py:137:43      mais            U       dirait un spec str fmt %s mais ne devrait pas être"
  - "tests/i18n/test_percents.py:137:51      devrait         U       spec str fmt %s mais ne devrait pas être interprété"
  - "tests/i18n/test_percents.py:137:63      être            U       mais ne devrait pas être interprété comme \""
  - "tests/i18n/test_percents.py:137:68      interprété      U       ne devrait pas être interprété comme \""
  - "tests/i18n/test_percents.py:138:19      disponible      U       \"plus disponible\""
  - "tests/i18n/test_percents.py:153:17      dirait          U       \"On dirait un spec str fmt % o"
  - "tests/i18n/test_percents.py:153:44      mais            U       un spec str fmt % o mais ne devrait pas être"
  - "tests/i18n/test_percents.py:153:52      devrait         U       str fmt % o mais ne devrait pas être interprété"
  - "tests/i18n/test_percents.py:153:64      être            U       mais ne devrait pas être interprété comme \""
  - "tests/i18n/test_percents.py:153:69      interprété      U       ne devrait pas être interprété comme \""
  - "tests/i18n/test_percents.py:154:19      disponible      U       \"plus disponible\""
  - "tests/i18n/test_percents.py:171:18      signe           U       \"1 % signe pour cent, signes %"
  - "tests/i18n/test_percents.py:171:35      signes          U       % signe pour cent, signes %% 2 pour cent, trois"
  - "tests/i18n/test_percents.py:171:64      signes          U       2 pour cent, trois signes de pourcentage \""
  - "tests/i18n/test_percents.py:171:74      pourcentage     U       cent, trois signes de pourcentage \""
  - "tests/i18n/test_percents.py:191:38      signe           U       Django dit: 1 pour cent signe %, deux signes de pourcentage"
  - "tests/i18n/test_percents.py:191:52      signes          U       pour cent signe %, deux signes de pourcentage %%\","
  - "tests/i18n/test_percents.py:191:62      pourcentage     U       signe %, deux signes de pourcentage %%\","
  - "tests/i18n/tests.py:99:16       année                   U       \"0 année\","
  - "tests/i18n/tests.py:126:74      pluriel                 U       plural\", 0) % 0, \"0 pluriel1\")"
  - "tests/i18n/tests.py:127:74      singulier               U       plural\", 1) % 1, \"1 singulier\")"
  - "tests/i18n/tests.py:128:74      pluriel                 U       plural\", 2) % 2, \"2 pluriel2\")"
  - "tests/i18n/tests.py:130:39      subcatalogs             U       Internal _catalog can query subcatalogs (from different po files"
  - "tests/i18n/tests.py:131:67      singulier               U       singular\", 0)], \"%d singulier\")"
  - "tests/i18n/tests.py:132:73      heure                   U       hour\", 0)], \"%(num)d heure\")"
  - "tests/i18n/tests.py:161:25      perds                   U       'msgstr \"Je perds\"\\n'"
  - "tests/i18n/tests.py:171:25      gagne                   U       'msgstr \"Je gagne\"\\n'"
  - "tests/i18n/tests.py:175:55      gagne                   U       gettext(\"I win\"), \"Je gagne\")"
  - "tests/i18n/tests.py:238:37      hinzuf                  U       self.assertEqual(\"Ringo hinzuf\\xfcgen\", s % d)"
  - "tests/i18n/tests.py:238:44      xfcgen                  U       assertEqual(\"Ringo hinzuf\\xfcgen\", s % d)"
  - "tests/i18n/tests.py:240:35      Dodaj                   U       self.assertEqual(\"Dodaj Ringo\", s % d)"
  - "tests/i18n/tests.py:266:57      gutes                   U       with_format % 1, \"1 gutes Resultat\")"
  - "tests/i18n/tests.py:266:63      Resultat                U       format % 1, \"1 gutes Resultat\")"
  - "tests/i18n/tests.py:267:57      guten                   U       with_format % 4, \"4 guten Resultate\")"
  - "tests/i18n/tests.py:267:63      Resultate               U       format % 4, \"4 guten Resultate\")"
  - "tests/i18n/tests.py:268:65      gutes                   U       with_format % 1, \"1 gutes Resultat!\")"
  - "tests/i18n/tests.py:268:71      Resultat                U       format % 1, \"1 gutes Resultat!\")"
  - "tests/i18n/tests.py:269:65      guten                   U       with_format % 4, \"4 guten Resultate!\")"
  - "tests/i18n/tests.py:269:71      Resultate               U       format % 4, \"4 guten Resultate!\")"
  - "tests/i18n/tests.py:270:58      gutes                   U       without_format % 1, \"gutes Resultat\")"
  - "tests/i18n/tests.py:270:64      Resultat                U       without_format % 1, \"gutes Resultat\")"
  - "tests/i18n/tests.py:271:58      guten                   U       without_format % 4, \"guten Resultate\")"
  - "tests/i18n/tests.py:271:64      Resultate               U       without_format % 4, \"guten Resultate\")"
  - "tests/i18n/tests.py:296:31      guten                   U       \"Hallo Jim, 4 guten Resultate\","
  - "tests/i18n/tests.py:296:37      Resultate               U       \"Hallo Jim, 4 guten Resultate\","
  - "tests/i18n/tests.py:300:31      gutes                   U       \"Hallo Jim, 1 gutes Resultat\","
  - "tests/i18n/tests.py:300:37      Resultat                U       \"Hallo Jim, 1 gutes Resultat\","
  - "tests/i18n/tests.py:304:31      guten                   U       \"Hallo Jim, 5 guten Resultate\","
  - "tests/i18n/tests.py:304:37      Resultate               U       \"Hallo Jim, 5 guten Resultate\","
  - "tests/i18n/tests.py:310:18      Willkommen              U       \"Willkommen Jim, 4 guten Resultate"
  - "tests/i18n/tests.py:314:18      Willkommen              U       \"Willkommen Jim, 1 gutes Resultat"
  - "tests/i18n/tests.py:314:36      gutes                   U       \"Willkommen Jim, 1 gutes Resultat\","
  - "tests/i18n/tests.py:314:42      Resultat                U       Willkommen Jim, 1 gutes Resultat\","
  - "tests/i18n/tests.py:318:18      Willkommen              U       \"Willkommen Jim, 5 guten Resultate"
  - "tests/i18n/tests.py:371:18      Willkommen              U       \"Willkommen Jim, 4 guten Resultate"
  - "tests/i18n/tests.py:375:18      Willkommen              U       \"Willkommen Jim, 1 gutes Resultat"
  - "tests/i18n/tests.py:401:40      unexisting              U       assertEqual(pgettext(\"unexisting\", \"May\"), \"May\")"
  - "tests/i18n/tests.py:403:56      Kann                    U       pgettext(\"verb\", \"May\"), \"Kann\")"
  - "tests/i18n/tests.py:429:27      Passworda               U       self.assertEqual(\"Passworda\", s1 + SafeString(\"a"
  - "tests/i18n/tests.py:430:27      Passworda               U       self.assertEqual(\"Passworda\", s1 + mark_safe(\"a"
  - "tests/i18n/tests.py:434:14      maclines                U       def test_maclines(self):"
  - "tests/i18n/tests.py:462:32      subtag                  U       # With private use subtag (x-informal)."
  - "tests/i18n/tests.py:568:14      ctxt                    U       self.ctxt = Context("
  - "tests/i18n/tests.py:691:69      ctxt                    U       i\" }}').render(self.ctxt),"
  - "tests/i18n/tests.py:694:73      ctxt                    U       i\" }}').render(self.ctxt)"
  - "tests/i18n/tests.py:722:34      desembre                U       self.assertEqual(\"31 desembre de 2009\", date_format"
  - "tests/i18n/tests.py:723:33      abril                   U       self.assertEqual(\"1 abril de 2009\", date_format"
  - "tests/i18n/tests.py:725:18      desembre                U       \"desembre del 2009\", date_format"
  - "tests/i18n/tests.py:742:38      desembre                U       self.assertEqual(\"31 desembre de 2009\", localize(self"
  - "tests/i18n/tests.py:743:38      desembre                U       self.assertEqual(\"31 desembre de 2009 a les 20:50"
  - "tests/i18n/tests.py:746:80      ctxt                    U       n }}\").render(self.ctxt))"
  - "tests/i18n/tests.py:747:80      ctxt                    U       f }}\").render(self.ctxt))"
  - "tests/i18n/tests.py:782:25      desembre                U       \"31 desembre de 2009\", Template("
  - "tests/i18n/tests.py:894:36      gener                   U       '<option value=\"1\">gener</option>'"
  - "tests/i18n/tests.py:895:36      febrer                  U       '<option value=\"2\">febrer</option>'"
  - "tests/i18n/tests.py:897:36      abril                   U       '<option value=\"4\">abril</option>'"
  - "tests/i18n/tests.py:898:36      maig                    U       '<option value=\"5\">maig</option>'"
  - "tests/i18n/tests.py:899:36      juny                    U       '<option value=\"6\">juny</option>'"
  - "tests/i18n/tests.py:900:36      juliol                  U       '<option value=\"7\">juliol</option>'"
  - "tests/i18n/tests.py:901:36      agost                   U       '<option value=\"8\">agost</option>'"
  - "tests/i18n/tests.py:902:36      setembre                U       '<option value=\"9\">setembre</option>'"
  - "tests/i18n/tests.py:903:37      octubre                 U       '<option value=\"10\">octubre</option>'"
  - "tests/i18n/tests.py:904:37      novembre                U       '<option value=\"11\">novembre</option>'"
  - "tests/i18n/tests.py:1162:18     sublocales              U       Check if sublocales fall back to the main"
  - "tests/i18n/tests.py:1168:41     diciembre               U       self.assertEqual(\"31 de diciembre de 2009\", date_format"
  - "tests/i18n/tests.py:1386:46     Dezember                U       localized = \"1.455/3,14/31. Dezember 2016\""
  - "tests/i18n/tests.py:1509:45     Bild                    U       ssertEqual(gettext(\"Image\"), \"Bild\")"
  - "tests/i18n/tests.py:1754:17     mingo                   U       (\"i-mingo\", \"Mingo\"),"
  - "tests/i18n/tests.py:1754:26     Mingo                   U       (\"i-mingo\", \"Mingo\"),"
  - "tests/i18n/tests.py:1755:18     tunumiit                U       (\"kl-tunumiit\", \"Tunumiisiut\"),"
  - "tests/i18n/tests.py:1755:30     Tunumiisiut             U       (\"kl-tunumiit\", \"Tunumiisiut\"),"
  - "tests/i18n/tests.py:1756:19     hani                    U       (\"nan-hani-tw\", \"Hanji\"),"
  - "tests/i18n/tests.py:1756:30     Hanji                   U       (\"nan-hani-tw\", \"Hanji\"),"
  - "tests/i18n/tests.py:1777:18     mingo                   U       (\"/i-mingo/\", \"i-mingo\"),"
  - "tests/i18n/tests.py:1777:30     mingo                   U       (\"/i-mingo/\", \"i-mingo\"),"
  - "tests/i18n/tests.py:1778:19     tunumiit                U       (\"/kl-tunumiit/\", \"kl-tunumiit\"),"
  - "tests/i18n/tests.py:1778:35     tunumiit                U       /kl-tunumiit/\", \"kl-tunumiit\"),"
  - "tests/i18n/tests.py:1779:20     hani                    U       (\"/nan-hani-tw/\", \"nan-hani-tw\""
  - "tests/i18n/tests.py:1779:36     hani                    U       nan-hani-tw/\", \"nan-hani-tw\"),"
  - "tests/i18n/tests.py:1883:14     safestr                 U       def test_safestr(self):"
  - "tests/i18n/tests.py:1885:30     Iñtërnâtiônàlizætiøn    U       c.name = SafeString(\"Iñtërnâtiônàlizætiøn1\")"
  - "tests/i18n/tests.py:1893:45     Deutsch                 U       ssertEqual(li[\"name_local\"], \"Deutsch\")"
  - "tests/i18n/tests.py:1908:45     Deutsch                 U       ssertEqual(li[\"name_local\"], \"Deutsch\")"
  - "tests/i18n/tests.py:2096:57     unparseable             U       default language is unparseable.\"\"\""
  - "tests/i18n/tests.py:2113:22     Somelanguage            U       (\"xxx\", \"Somelanguage\"),"
  - "tests/i18n/tests.py:2120:44     reay                    U       assertEqual(gettext(\"year\"), \"reay\")"
  - "tests/i18n/utils.py:54:31       rmrf    U       self.addCleanup(self._rmrf, self.test_dir)"
  - "tests/i18n/utils.py:58:10       rmrf    U       def _rmrf(self, dname):"
  - "tests/indexes/tests.py:52:45        looooooooooooooooooo    U       indexes_article_c1_c2_looooooooooooooooooo_255179b2ix\","
  - "tests/indexes/tests.py:54:50        loooooooooooooooooo     U       indexes_article_c1_c2_loooooooooooooooooo_255179b2ix\","
  - "tests/indexes/tests.py:150:46       indclass                U       i on oc.oid = ANY(i.indclass)"
  - "tests/inline_formsets/tests.py:91:19        inlineformsets      U       Make sure inlineformsets respect commit=False"
  - "tests/inspectdb/models.py:49:48         tamaño      U       IntegerField(db_column=\"tamaño\")"
  - "tests/inspectdb/tests.py:57:36          Peopledata              U       assertNotIn(\"InspectdbPeopledata\", output)"
  - "tests/inspectdb/tests.py:65:46          columntypes             U       inspectdb\", \"inspectdb_columntypes\", stdout=out)"
  - "tests/inspectdb/tests.py:124:46         jsonfieldcolumntype     U       inspectdb\", \"inspectdb_jsonfieldcolumntype\", stdout=out)"
  - "tests/inspectdb/tests.py:135:46         dbcomment               U       inspectdb\", \"inspectdb_dbcomment\", stdout=out)"
  - "tests/inspectdb/tests.py:154:46         charfielddbcollation    U       inspectdb\", \"inspectdb_charfielddbcollation\", stdout=out)"
  - "tests/inspectdb/tests.py:173:46         textfielddbcollation    U       inspectdb\", \"inspectdb_textfielddbcollation\", stdout=out)"
  - "tests/inspectdb/tests.py:190:46         charfieldunlimited      U       inspectdb\", \"inspectdb_charfieldunlimited\", stdout=out)"
  - "tests/inspectdb/tests.py:284:46         foreignkeytofield       U       inspectdb\", \"inspectdb_foreignkeytofield\", stdout=out)"
  - "tests/inspectdb/tests.py:286:56         Peoplemoredata          U       ForeignKey('InspectdbPeoplemoredata', \""
  - "tests/inspectdb/tests.py:295:46         digitsincolumnname      U       inspectdb\", \"inspectdb_digitsincolumnname\", stdout=out)"
  - "tests/inspectdb/tests.py:346:24         tamaño                  U       self.assertIn(\"tamaño = models.%s()\" % integer"
  - "tests/inspectdb/tests.py:372:36         pascalcase              U       expected_model_name = \"pascalcase\""
  - "tests/inspectdb/tests.py:380:46         funcuniqueconstraint    U       inspectdb\", \"inspectdb_funcuniqueconstraint\", stdout=out)"
  - "tests/inspectdb/tests.py:382:39         Funcuniqueconstraint    U       assertIn(\"class InspectdbFuncuniqueconstraint(models.Model):\", output"
  - "tests/inspectdb/tests.py:389:46         columntypes             U       inspectdb\", \"inspectdb_columntypes\", stdout=out)"
  - "tests/inspectdb/tests.py:400:46         uniquetogether          U       inspectdb\", \"inspectdb_uniquetogether\", stdout=out)"
  - "tests/inspectdb/tests.py:420:38         Findex                  U       CREATE UNIQUE INDEX Findex ON %s \""
  - "tests/inspectdb/tests.py:440:39         Findex                  U       execute(\"DROP INDEX Findex\")"
  - "tests/inspectdb/tests.py:455:26         myfields                U       \"text\": \"myfields.TextField\","
  - "tests/inspectdb/tests.py:459:50         columntypes             U       inspectdb\", \"inspectdb_columntypes\", stdout=out)"
  - "tests/inspectdb/tests.py:461:41         myfields                U       assertIn(\"text_field = myfields.TextField()\", output"
  - "tests/inspectdb/tests.py:485:28         inspectdbmessage        U       \"related_name='inspectdbmessage_author_set')\","
  - "tests/introspection/tests.py:198:49         dbcommentmodel      U       name == \"introspection_dbcommentmodel\""
  - "tests/invalid_models_tests/test_models.py:240:39        sindex                                                                      U       \"The index name '%sindex_name' cannot start with"
  - "tests/invalid_models_tests/test_models.py:623:28        Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz                  U       class VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz("
  - "tests/invalid_models_tests/test_models.py:631:30        Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz                  U       VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,"
  - "tests/invalid_models_tests/test_models.py:635:30        Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz                  U       VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,"
  - "tests/invalid_models_tests/test_models.py:637:28        msimple                                                                     U       through=\"m2msimple\","
  - "tests/invalid_models_tests/test_models.py:640:30        Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz                  U       VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,"
  - "tests/invalid_models_tests/test_models.py:642:28        mcomplex                                                                    U       through=\"m2mcomplex\","
  - "tests/invalid_models_tests/test_models.py:645:30        Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz                  U       VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,"
  - "tests/invalid_models_tests/test_models.py:651:17        msimple                                                                     U       class m2msimple(models.Model):"
  - "tests/invalid_models_tests/test_models.py:654:17        mcomplex                                                                    U       class m2mcomplex(models.Model):"
  - "tests/invalid_models_tests/test_models.py:661:33        msimple                                                                     U       contribute_to_class(m2msimple, long_field_name)"
  - "tests/invalid_models_tests/test_models.py:667:33        mcomplex                                                                    U       contribute_to_class(m2mcomplex, long_field_name)"
  - "tests/invalid_models_tests/test_models.py:673:14        verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz     U       \"verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz_id\""
  - "tests/invalid_models_tests/test_models.py:696:14        msimple                                                                     U       # `m2msimple` has auto-generated"
  - "tests/invalid_models_tests/test_models.py:739:52        vlmn                                                                        U       length=11, db_column=\"vlmn\").contribute_to_class"
  - "tests/invalid_models_tests/test_models.py:863:14        multiinheritance                                                            U       def test_multiinheritance_clash(self):"
  - "tests/invalid_models_tests/test_models.py:919:14        multigeneration                                                             U       def test_multigeneration_inheritance(self):"
  - "tests/invalid_models_tests/test_models.py:1346:24       overriden (overridden)                                                      U       def test_inherited_overriden_property_no_clash(self"
  - "tests/invalid_models_tests/test_models.py:1460:14       onetoone                                                                    U       def test_onetoone_with_parent_model(self"
  - "tests/invalid_models_tests/test_models.py:1471:14       onetoone                                                                    U       def test_onetoone_with_explicit_parent"
  - "tests/invalid_models_tests/test_models.py:1544:13       foos                                                                        U       foos = models.ManyToManyField"
  - "tests/invalid_models_tests/test_models.py:1547:13       foos                                                                        U       foos = models.ManyToManyField"
  - "tests/invalid_models_tests/test_models.py:1554:62       foos                                                                        U       invalid_models_tests.Baz.foos'.\","
  - "tests/invalid_models_tests/test_models.py:1555:46       foos                                                                        U       Bar._meta.get_field(\"foos\"),"
  - "tests/invalid_models_tests/test_models.py:1560:62       foos                                                                        U       invalid_models_tests.Bar.foos'.\","
  - "tests/invalid_models_tests/test_models.py:1698:16       aproxy                                                                      U       mm_aproxy = models.ManyToManyField"
  - "tests/invalid_models_tests/test_models.py:1815:23       autofields                                                                  U       def test_multiple_autofields(self):"
  - "tests/invalid_models_tests/test_ordinary_fields.py:830:13       biginteger              U       biginteger = models.BigIntegerField"
  - "tests/invalid_models_tests/test_ordinary_fields.py:831:13       smallinteger            U       smallinteger = models.SmallIntegerField"
  - "tests/invalid_models_tests/test_ordinary_fields.py:832:13       positiveinteger         U       positiveinteger = models.PositiveIntegerField"
  - "tests/invalid_models_tests/test_ordinary_fields.py:833:13       positivebiginteger      U       positivebiginteger = models.PositiveBigIntegerFi"
  - "tests/invalid_models_tests/test_ordinary_fields.py:834:13       positivesmallinteger    U       positivesmallinteger = models.PositiveSmallInteger"
  - "tests/invalid_models_tests/test_relative_fields.py:499:31       tfktpuf             U       name=\"tfktpuf_partial_unique\","
  - "tests/invalid_models_tests/test_relative_fields.py:532:31       tfktufwmc           U       name=\"tfktufwmc_unique\","
  - "tests/invalid_models_tests/test_relative_fields.py:587:31       tfotpuf             U       name=\"tfotpuf_partial_unique\","
  - "tests/invalid_models_tests/test_relative_fields.py:630:31       tfotpuf             U       name=\"tfotpuf_unique\","
  - "tests/invalid_models_tests/test_relative_fields.py:917:53       doesnt (doesn't)    U       checked_if_related_model_doesnt_exist(self):"
  - "tests/known_related_objects/models.py:14:7          Organiser       U       class Organiser(models.Model):"
  - "tests/known_related_objects/models.py:21:5          organiser       U       organiser = models.ForeignKey"
  - "tests/known_related_objects/models.py:21:35         Organiser       U       = models.ForeignKey(Organiser, models.CASCADE)"
  - "tests/known_related_objects/tests.py:4:21           Organiser       U       from .models import Organiser, Pool, PoolStyle, Tournament"
  - "tests/known_related_objects/tests.py:12:18          Organiser       U       cls.o1 = Organiser.objects.create(name"
  - "tests/known_related_objects/tests.py:12:49          Organiser       U       objects.create(name=\"Organiser 1\")"
  - "tests/known_related_objects/tests.py:14:50          organiser       U       tournament=cls.t1, organiser=cls.o1"
  - "tests/known_related_objects/tests.py:17:50          organiser       U       tournament=cls.t1, organiser=cls.o1"
  - "tests/known_related_objects/tests.py:20:50          organiser       U       tournament=cls.t2, organiser=cls.o1"
  - "tests/known_related_objects/tests.py:23:50          organiser       U       tournament=cls.t2, organiser=cls.o1"
  - "tests/known_related_objects/tests.py:65:9           organiser       U       organiser = self.o1"
  - "tests/known_related_objects/tests.py:72:40          precache        U       queryset_or_only_one_with_precache(self):"
  - "tests/logging_tests/tests.py:360:11         Monkeypatches       U       # Monkeypatches"
  - "tests/logging_tests/tests.py:370:22         Monkeypatches       U       # Revert Monkeypatches"
  - "tests/logging_tests/tests.py:416:30         doesnt (doesn't)    U       test_disallowed_host_doesnt_crash(self):"
  - "tests/logging_tests/tests.py:512:44         sdict               U       settings(\"settings.py\", sdict={\"LOGGING\": log_config"
  - "tests/logging_tests/tests.py:559:40         sublogger           U       suspicious_operation_uses_sublogger(self):"
  - "tests/logging_tests/tests.py:609:13         sdict               U       sdict={"
  - "tests/lookup/tests.py:301:38        constaint       U       bulk_non_unique_meta_constaint(self):"
  - "tests/lookup/tests.py:854:34        lengtp          U       Unsupported lookup 'lengtp' for SlugField or join"
  - "tests/lookup/tests.py:859:46        lengtp          U       objects.filter(slug__lengtp=20)"
  - "tests/lookup/tests.py:886:34        abspl           U       Unsupported lookup 'abspl' for ManyToOneRel or"
  - "tests/lookup/tests.py:887:43        abspk           U       permitted, perhaps you meant abspk?\""
  - "tests/lookup/tests.py:891:62        abspk           U       field, Abs, lookup_name=\"abspk\"):"
  - "tests/lookup/tests.py:892:48        abspl           U       objects.filter(article__abspl=2)"
  - "tests/lookup/tests.py:911:49        fooo            U       date=now, headline=\"fooo\"),"
  - "tests/lookup/tests.py:922:69        fooo            U       [\"f\", \"fo\", \"foo\", \"fooo\"]),"
  - "tests/lookup/tests.py:926:69        fooo            U       [\"f\", \"fo\", \"foo\", \"fooo\", \"hey-Foo\"]),"
  - "tests/lookup/tests.py:931:64        fooo            U       headline__in=[\"fo\", \"foo\", \"fooo\"]),"
  - "tests/lookup/tests.py:935:54        fooo            U       filter(headline__regex=r\"fooo?\"),"
  - "tests/lookup/tests.py:974:49        foobaz          U       date=now, headline=\"foobaz\"),"
  - "tests/lookup/tests.py:976:49        foobarbaz       U       date=now, headline=\"foobarbaz\"),"
  - "tests/lookup/tests.py:977:49        zoocarfaz       U       date=now, headline=\"zoocarfaz\"),"
  - "tests/lookup/tests.py:978:49        barfoobaz       U       date=now, headline=\"barfoobaz\"),"
  - "tests/lookup/tests.py:979:49        bazba           U       date=now, headline=\"bazbaRFOO\"),"
  - "tests/lookup/tests.py:979:54        RFOO            U       now, headline=\"bazbaRFOO\"),"
  - "tests/lookup/tests.py:988:22        barfoobaz       U       \"barfoobaz\","
  - "tests/lookup/tests.py:990:22        foobarbaz       U       \"foobarbaz\","
  - "tests/lookup/tests.py:991:22        foobaz          U       \"foobaz\","
  - "tests/lookup/tests.py:999:22        barfoobaz       U       \"barfoobaz\","
  - "tests/lookup/tests.py:1001:22       foobarbaz       U       \"foobarbaz\","
  - "tests/lookup/tests.py:1002:22       foobaz          U       \"foobaz\","
  - "tests/lookup/tests.py:1009:61       foobarbaz       U       headline__in=[\"foobar\", \"foobarbaz\", \"foobaz\"]),"
  - "tests/lookup/tests.py:1009:74       foobaz          U       foobar\", \"foobarbaz\", \"foobaz\"]),"
  - "tests/lookup/tests.py:1017:22       barfoobaz       U       \"barfoobaz\","
  - "tests/lookup/tests.py:1019:22       bazba           U       \"bazbaRFOO\","
  - "tests/lookup/tests.py:1019:27       RFOO            U       \"bazbaRFOO\","
  - "tests/lookup/tests.py:1020:22       foobarbaz       U       \"foobarbaz\","
  - "tests/lookup/tests.py:1021:22       foobaz          U       \"foobaz\","
  - "tests/lookup/tests.py:1030:22       barfoobaz       U       \"barfoobaz\","
  - "tests/lookup/tests.py:1031:22       bazba           U       \"bazbaRFOO\","
  - "tests/lookup/tests.py:1031:27       RFOO            U       \"bazbaRFOO\","
  - "tests/lookup/tests.py:1048:49       zoocarfaz       U       date=now, headline=\"zoocarfaz\"),"
  - "tests/lookup/tests.py:1050:49       bazba           U       date=now, headline=\"bazbaRFOO\"),"
  - "tests/lookup/tests.py:1050:54       RFOO            U       now, headline=\"bazbaRFOO\"),"
  - "tests/lookup/tests.py:1057:28       bazba           U       [\"barfoobaz\", \"bazbaRFOO\", \"foobarbaz\"],"
  - "tests/lookup/tests.py:1057:33       RFOO            U       [\"barfoobaz\", \"bazbaRFOO\", \"foobarbaz\"],"
  - "tests/lookup/tests.py:1118:48       Astros          U       create(home=\"Houston Astros\", away=\"St. Louis Cardinals"
  - "tests/lookup/tests.py:1120:48       Astros          U       create(home=\"Houston Astros\", away=\"Chicago Cubs"
  - "tests/lookup/tests.py:1121:48       Astros          U       create(home=\"Houston Astros\", away=\"Milwaukee Brewers"
  - "tests/lookup/tests.py:1122:48       Astros          U       create(home=\"Houston Astros\", away=\"St. Louis Cardinals"
  - "tests/lookup/tests.py:1124:48       Astros          U       create(home=\"Houston Astros\", away=\"St. Louis Cardinals"
  - "tests/lookup/tests.py:1128:9        pudge           U       pudge = Player.objects.create"
  - "tests/lookup/tests.py:1129:9        pudge           U       pudge.games.set(Game.objects"
  - "tests/lookup/tests.py:1130:15       feliz           U       pedro_feliz = Player.objects.create"
  - "tests/lookup/tests.py:1130:57       Feliz           U       objects.create(name=\"Pedro Feliz\")"
  - "tests/lookup/tests.py:1131:15       feliz           U       pedro_feliz.games.set(Game.objects"
  - "tests/lookup/tests.py:1300:61       Johx            U       John Smith\", alias=\"Johx\")"
  - "tests/lookup/tests.py:1301:65       sonx            U       Rhonda Simpson\", alias=\"sonx\")"
  - "tests/m2m_regress/tests.py:46:58        selfreferchild              U       references, related, selfreferchild, \""
  - "tests/m2m_regress/tests.py:47:14        selfreferchildsibling       U       \"selfreferchildsibling\""
  - "tests/m2m_regress/tests.py:63:70        selfrefer                   U       related.all(), [sr_sibling.selfrefer_ptr])"
  - "tests/m2m_regress/tests.py:64:70        selfrefer                   U       related.all(), [sr_child.selfrefer_ptr])"
  - "tests/m2m_regress/tests.py:122:44       doesnt (doesn't)            U       invalid_data_to_m2m_doesnt_clear_existing_relations"
  - "tests/m2m_through_regress/models.py:14:38       usermembership      U       AutoField(db_column=\"usermembership_id\", primary_key=True"
  - "tests/m2m_through_regress/tests.py:125:55       Briscoe             U       objects.create(name=\"Ryan Briscoe\")"
  - "tests/m2m_through_regress/tests.py:130:64       autonumbering       U       driver to mix up the autonumbering"
  - "tests/m2m_through_regress/tests.py:131:64       Gumble              U       create(name=\"Barney Gumble\")"
  - "tests/m2m_through_regress/tests.py:133:52       Trabant             U       objects.create(make=\"Trabant\")"
  - "tests/m2m_through_regress/tests.py:165:9        nullcar             U       nullcar = Car(make=None)"
  - "tests/m2m_through_regress/tests.py:171:13       nullcar             U       nullcar.drivers.all()"
  - "tests/m2m_through_regress/tests.py:194:9        nullcar             U       nullcar = Car.objects.create"
  - "tests/m2m_through_regress/tests.py:197:61       nullcar             U       items(\"driver\", \"car\", nullcar)"
  - "tests/m2m_through_regress/tests.py:233:55       usermembership      U       m2m_through_regress.usermembership\", '"
  - "tests/m2m_through/models.py:27:23       testnodefaultsnonulls       U       related_name=\"testnodefaultsnonulls\","
  - "tests/m2m_through/models.py:144:5       rname                       U       rname = models.CharField(max"
  - "tests/m2m_through/models.py:152:22      rname                       U       ordering = (\"rname\",)"
  - "tests/m2m_through/models.py:157:66      rname                       U       models.CASCADE, to_field=\"rname\")"
  - "tests/m2m_through/tests.py:110:36       testnodefaultsornulls       U       assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull"
  - "tests/m2m_through/tests.py:140:36       testnodefaultsornulls       U       assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull"
  - "tests/m2m_through/tests.py:150:36       testnodefaultsornulls       U       assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull"
  - "tests/m2m_through/tests.py:160:36       testnodefaultsornulls       U       assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull"
  - "tests/m2m_through/tests.py:187:36       testnodefaultsornulls       U       assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull"
  - "tests/m2m_through/tests.py:360:34       doesnt (doesn't)            U       custom_related_name_doesnt_conflict_with_fky_related"
  - "tests/m2m_through/tests.py:369:45       Rockwhale                   U       objects.create(title=\"Rockwhale 2014\")"
  - "tests/m2m_through/tests.py:466:27       symmetricalfriendship       U       friendship = tony.symmetricalfriendship_set.get()"
  - "tests/m2m_through/tests.py:489:18       symmetricalfriendship       U       kate.symmetricalfriendship_set.get().date_friended"
  - "tests/m2m_through/tests.py:494:18       symmetricalfriendship       U       anne.symmetricalfriendship_set.get().date_friended"
  - "tests/m2m_through/tests.py:506:18       symmetricalfriendship       U       anne.symmetricalfriendship_set.get().date_friended"
  - "tests/m2m_through/tests.py:517:43       rname                       U       Recipe.objects.create(rname=\"curry\")"
  - "tests/mail/tests.py:36:10       aiosmtpd            U       from aiosmtpd.controller import Controller"
  - "tests/mail/tests.py:38:9        AIOSMTPD            U       HAS_AIOSMTPD = True"
  - "tests/mail/tests.py:40:9        AIOSMTPD            U       HAS_AIOSMTPD = False"
  - "tests/mail/tests.py:98:68       surrogateescape     U       payload supporting `surrogateescape`."
  - "tests/mail/tests.py:102:59      surrogateescape     U       provided charset and `surrogateescape` is"
  - "tests/mail/tests.py:121:45      surrogateescape     U       decode(\"ascii\", errors=\"surrogateescape\")"
  - "tests/mail/tests.py:481:26      Sürname             U       ['\"Firstname Sürname\" <to@example.com>',"
  - "tests/mail/tests.py:485:40      Crname              U       8?q?Firstname_S=C3=BCrname?= <to@example.com>,"
  - "tests/mail/tests.py:491:16      Sürname             U       ['\"Sürname, Firstname\" <to@example"
  - "tests/mail/tests.py:495:30      Crname              U       \"=?utf-8?q?S=C3=BCrname=2C_Firstname?= <to@example"
  - "tests/mail/tests.py:500:14      Gżegżółka           U       \"Gżegżółka\","
  - "tests/mail/tests.py:505:39      Sürname             U       Sender\": '\"Firstname Sürname\" <sender@example.com"
  - "tests/mail/tests.py:506:33      Sürname             U       \"Comments\": \"My Sürname is non-ASCII\","
  - "tests/mail/tests.py:512:59      Crname              U       8?q?Firstname_S=C3=BCrname?= <sender@example.com"
  - "tests/mail/tests.py:515:54      Crname              U       \"=?utf-8?q?My_S=C3=BCrname_is_non-ASCII?=\""
  - "tests/mail/tests.py:524:48      Sürname             U       from@example.com\", '\"Sürname, Firstname\" <to@example"
  - "tests/mail/tests.py:538:32      Crname              U       \"=?iso-8859-1?q?S=FCrname=2C_Firstname?= <to@example"
  - "tests/mail/tests.py:782:25      pièce               U       msg.attach(\"une pièce jointe.pdf\", b\"%PDF"
  - "tests/mail/tests.py:782:31      jointe              U       msg.attach(\"une pièce jointe.pdf\", b\"%PDF-1.4.%."
  - "tests/mail/tests.py:786:58      pièce               U       get_filename(), \"une pièce jointe.pdf\")"
  - "tests/mail/tests.py:786:64      jointe              U       filename(), \"une pièce jointe.pdf\")"
  - "tests/mail/tests.py:1142:15     localpartonly       U       (\"localpartonly\", \"ascii\", \"localpartonly"
  - "tests/mail/tests.py:1142:41     localpartonly       U       localpartonly\", \"ascii\", \"localpartonly\"),"
  - "tests/mail/tests.py:1150:18     éxample             U       (\"to@éxample.com\", \"utf-8\", \"to@xn"
  - "tests/mail/tests.py:1150:49     xample              U       com\", \"utf-8\", \"to@xn--xample-9ua.com\"),"
  - "tests/mail/tests.py:1163:33     éxample             U       \"To Example <to@éxample.com>\","
  - "tests/mail/tests.py:1165:37     xample              U       \"To Example <to@xn--xample-9ua.com>\","
  - "tests/mail/tests.py:1168:33     éxample             U       \"To Example <to@éxample.com>\","
  - "tests/mail/tests.py:1170:37     xample              U       \"To Example <to@xn--xample-9ua.com>\","
  - "tests/mail/tests.py:1203:50     exampl              U       very long\" * 4, \"to@exampl€.com\"),"
  - "tests/mail/tests.py:1207:32     exampl              U       \" long <to@xn--exampl-nc1c.com>\","
  - "tests/mail/tests.py:1380:14     Chère               U       \"Chère maman\", \"Je t'aime tr"
  - "tests/mail/tests.py:1380:20     maman               U       \"Chère maman\", \"Je t'aime très fort"
  - "tests/mail/tests.py:1380:32     t'aime              U       \"Chère maman\", \"Je t'aime très fort\", \"from@example"
  - "tests/mail/tests.py:1385:68     maman               U       ?utf-8?q?Ch=C3=A8re_maman?=\")"
  - "tests/mail/tests.py:1387:60     t'aime              U       True).decode(), \"Je t'aime très fort\""
  - "tests/mail/tests.py:1399:27     южных               U       \"Subject\", \"В южных морях \" * 60, \"from"
  - "tests/mail/tests.py:1399:33     морях               U       \"Subject\", \"В южных морях \" * 60, \"from@example"
  - "tests/mail/tests.py:1690:28     locmen              U       Make sure that the locmen backend populates the"
  - "tests/mail/tests.py:1873:17     AIOSMTPD            U       @skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library"
  - "tests/mail/tests.py:1873:31     aiosmtpd            U       skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library detected.\")"
  - "tests/mail/tests.py:1902:17     AIOSMTPD            U       @skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library"
  - "tests/mail/tests.py:1902:31     aiosmtpd            U       skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library detected.\")"
  - "tests/mail/tests.py:2144:17     AIOSMTPD            U       @skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library"
  - "tests/mail/tests.py:2144:31     aiosmtpd            U       skipUnless(HAS_AIOSMTPD, \"No aiosmtpd library detected.\")"
  - "tests/many_to_one_null/tests.py:44:19       reget       U       # Need to reget a3 to refresh the cache"
  - "tests/many_to_one/tests.py:439:43       Royko           U       name=\"Mike\", last_name=\"Royko\", email=\"royko@suntimes"
  - "tests/many_to_one/tests.py:442:43       Kass            U       name=\"John\", last_name=\"Kass\", email=\"jkass@tribune"
  - "tests/many_to_one/tests.py:568:38       notafield       U       Cannot resolve keyword 'notafield' into field. Choices"
  - "tests/many_to_one/tests.py:572:52       notafield       U       values_list(\"reporter__notafield\")"
  - "tests/many_to_one/tests.py:578:18       notafield       U       \"notafield\""
  - "tests/many_to_one/tests.py:805:44       Ladida          U       objects.create(name=\"Ladida\", city=c)"
  - "tests/many_to_one/tests.py:813:43       Ladida          U       objects.create(name=\"Ladida\", city=c)"
  - "tests/many_to_one/tests.py:821:43       Ladida          U       objects.create(name=\"Ladida\", city=c)"
  - "tests/many_to_one/tests.py:829:39       Ladida          U       objects.create(name=\"Ladida\", city=c)"
  - "tests/many_to_one/tests.py:830:44       Ladidu          U       objects.create(name=\"Ladidu\")"
  - "tests/many_to_one/tests.py:838:39       Ladida          U       objects.create(name=\"Ladida\", city=c)"
  - "tests/many_to_one/tests.py:839:44       Ladidu          U       objects.create(name=\"Ladidu\")"
  - "tests/many_to_one/tests.py:848:44       Ladidu          U       objects.create(name=\"Ladidu\")"
  - "tests/max_lengths/models.py:6:5         vcard       U       vcard = models.FileField("
  - "tests/max_lengths/models.py:13:5        vcard       U       vcard = models.FileField(max"
  - "tests/max_lengths/tests.py:14:62        vcard       U       PersonWithDefaultMaxLengths, \"vcard\", 100)"
  - "tests/max_lengths/tests.py:20:61        vcard       U       PersonWithCustomMaxLengths, \"vcard\", 250)"
  - "tests/max_lengths/tests.py:29:14        vcard       U       \"vcard\": \"vcard\","
  - "tests/max_lengths/tests.py:29:23        vcard       U       \"vcard\": \"vcard\","
  - "tests/max_lengths/tests.py:34:33        vcard       U       field in (\"email\", \"vcard\", \"homepage\", \"avatar"
  - "tests/messages_tests/test_api.py:57:30          ducktyping      U       message() should use ducktyping to allow request wrappers"
  - "tests/messages_tests/test_cookie.py:157:55      NOTRECEIVED     U       m\"e', \"\\u2019\", '123\"NOTRECEIVED\"']"
  - "tests/messages_tests/tests.py:160:21        levelname       U       def test_custom_levelname(self):"
  - "tests/middleware_exceptions/middleware.py:1:47          markcoroutinefunction       U       iscoroutinefunction, markcoroutinefunction"
  - "tests/middleware_exceptions/middleware.py:19:13         markcoroutinefunction       U       markcoroutinefunction(self)"
  - "tests/middleware/extra_urls.py:6:11         customurlconf       U       path(\"customurlconf/noslash\", views.empty"
  - "tests/middleware/extra_urls.py:7:11         customurlconf       U       path(\"customurlconf/slash/\", views.empty"
  - "tests/middleware/extra_urls.py:8:11         customurlconf       U       path(\"customurlconf/needsquoting#/\", views"
  - "tests/middleware/tests.py:92:38         querystrings        U       SLASH should preserve querystrings when redirecting."
  - "tests/middleware/tests.py:178:37        Fevil               U       assertEqual(r.url, \"/%2Fevil.com/security/\")"
  - "tests/middleware/tests.py:181:37        Fevil               U       assertEqual(r.url, \"/%2Fevil.com/security/\")"
  - "tests/middleware/tests.py:212:33        customurlconf       U       request = self.rf.get(\"/customurlconf/slash/\")"
  - "tests/middleware/tests.py:226:33        customurlconf       U       request = self.rf.get(\"/customurlconf/noslash\")"
  - "tests/middleware/tests.py:238:33        customurlconf       U       request = self.rf.get(\"/customurlconf/unknown\")"
  - "tests/middleware/tests.py:248:33        customurlconf       U       request = self.rf.get(\"/customurlconf/slash\")"
  - "tests/middleware/tests.py:257:35        customurlconf       U       assertEqual(r.url, \"/customurlconf/slash/\")"
  - "tests/middleware/tests.py:404:29        REFERER             U       self.req.META[\"HTTP_REFERER\"] = \"/another/url/\""
  - "tests/middleware/tests.py:409:37        referer             U       _error_reporting_no_referer(self):"
  - "tests/middleware/tests.py:425:66        referer             U       request, uri, domain, referer):"
  - "tests/middleware/tests.py:427:71        referer             U       request, uri, domain, referer):"
  - "tests/middleware/tests.py:435:29        REFERER             U       self.req.META[\"HTTP_REFERER\"] = \"/another/url/\""
  - "tests/middleware/tests.py:443:14        referer             U       def test_referer_equal_to_requested_url"
  - "tests/middleware/tests.py:445:27        referer             U       Some bots set the referer to the current URL to"
  - "tests/middleware/tests.py:448:29        REFERER             U       self.req.META[\"HTTP_REFERER\"] = self.req.path"
  - "tests/middleware/tests.py:453:29        REFERER             U       self.req.META[\"HTTP_REFERER\"] = \"http://testserver"
  - "tests/middleware/tests.py:458:34        referers            U       tend to use http:// in referers even when browsing HTTPS"
  - "tests/middleware/tests.py:466:29        REFERER             U       self.req.META[\"HTTP_REFERER\"] = \"http://anotherserver"
  - "tests/middleware/tests.py:784:32        xframe              U       the response has an xframe_options_exempt attribute"
  - "tests/middleware/tests.py:788:13        xframe              U       def xframe_exempt_response(request"
  - "tests/middleware/tests.py:790:22        xframe              U       response.xframe_options_exempt = True"
  - "tests/middleware/tests.py:793:13        xframe              U       def xframe_not_exempt_response"
  - "tests/middleware/tests.py:795:22        xframe              U       response.xframe_options_exempt = False"
  - "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py:17:14        Tribble     U       \"Tribble\","
  - "tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py:11:33         Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py:17:14         Tribble     U       \"Tribble\","
  - "tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py:7:46          repointed       U       directory has not been repointed)"
  - "tests/migrations/migrations_test_apps/unmigrated_app/models.py:6:11         tribble     U       silly_tribble = models.ForeignKey"
  - "tests/migrations/migrations_test_apps/unmigrated_app/models.py:6:51         Tribble     U       ForeignKey(\"migrations.Tribble\", models.CASCADE)"
  - "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py:17:14        Tribble     U       \"Tribble\","
  - "tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py:8:33          Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/models.py:14:66        Ðjáñgó          U       length=20, default=\"“Ðjáñgó”\")"
  - "tests/migrations/models.py:19:33        µóðéø           U       verbose_name = \"úñí©óðé µóðéø\""
  - "tests/migrations/models.py:20:40        µóðéøß          U       name_plural = \"úñí©óðé µóðéøß\""
  - "tests/migrations/models.py:45:46        repointed       U       directory has not been repointed)"
  - "tests/migrations/routers.py:9:13        Tribble     U       The Tribble model should be the"
  - "tests/migrations/routers.py:11:27       tribble     U       if model_name == \"tribble\":"
  - "tests/migrations/test_autodetector.py:435:64        otheritem           U       DeconstructibleObject(), \"otheritem\": 123},"
  - "tests/migrations/test_autodetector.py:449:64        otheritem           U       DeconstructibleObject(), \"otheritem\": 123},"
  - "tests/migrations/test_autodetector.py:463:64        otheritem           U       DeconstructibleObject(), \"otheritem\": 999},"
  - "tests/migrations/test_autodetector.py:684:41        thirdapp            U       models.ForeignKey(\"thirdapp.CustomUser\", models"
  - "tests/migrations/test_autodetector.py:704:10        thirdapp            U       \"thirdapp\", \"AuthorProxy\", []"
  - "tests/migrations/test_autodetector.py:707:10        thirdapp            U       \"thirdapp\", \"AuthorProxy\", []"
  - "tests/migrations/test_autodetector.py:782:30        Authi               U       \"verbose_name\": \"Authi\","
  - "tests/migrations/test_autodetector.py:901:10        thirdapp            U       \"thirdapp\", \"Thing\", [(\"id\", models"
  - "tests/migrations/test_autodetector.py:917:43        thirdapp            U       models.ForeignKey(\"thirdapp.AuthorProxy\", models"
  - "tests/migrations/test_autodetector.py:1622:38       oneoff              U       alter_field_to_not_null_oneoff_default(self, mocked"
  - "tests/migrations/test_autodetector.py:2504:45       newauthor           U       testapp\", 0, 1, name=\"newauthor\", table=\"author_three"
  - "tests/migrations/test_autodetector.py:2559:30       doesnt (doesn't)    U       test_identical_regex_doesnt_alter(self):"
  - "tests/migrations/test_autodetector.py:3552:45       authorunmanaged     U       testapp\", 0, 0, name=\"authorunmanaged\", options={}"
  - "tests/migrations/test_autodetector.py:3565:45       authorunmanaged     U       testapp\", 0, 0, name=\"authorunmanaged\", options={\"managed"
  - "tests/migrations/test_autodetector.py:3790:19       Uninstantiated      U       #22951 -- Uninstantiated classes with deconstruct"
  - "tests/migrations/test_autodetector.py:3993:28       multistep           U       def test_m2m_w_through_multistep_remove(self):"
  - "tests/migrations/test_autodetector.py:4096:34       Authi               U       \"verbose_name\": \"Authi\","
  - "tests/migrations/test_autodetector.py:4653:40       addcreate           U       circular_dependency_mixed_addcreate(self):"
  - "tests/migrations/test_autodetector.py:4673:9        apackage            U       apackage = ModelState("
  - "tests/migrations/test_autodetector.py:4688:58       apackage            U       , [address, person, apackage, country])"
  - "tests/migrations/test_base.py:266:9         multicol    U       multicol_index=False,"
  - "tests/migrations/test_base.py:312:12        multicol    U       if multicol_index:"
  - "tests/migrations/test_commands.py:50:47         tribble                 U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_commands.py:68:44         tribble                 U       assertTableExists(\"migrations_tribble\")"
  - "tests/migrations/test_commands.py:74:47         tribble                 U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_commands.py:90:47         tribble                 U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_commands.py:144:47        tribble                 U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_commands.py:424:20        mmigrations             U       \"\\x1b[1mmigrations\\n\\x1b[0m [ ] 0001_initial"
  - "tests/migrations/test_commands.py:598:70        salamand                U       SELECT * FROM migrations_salamand…\\n\","
  - "tests/migrations/test_commands.py:677:27        Tribble                 U       # 'migrations.Tribble', but that model is"
  - "tests/migrations/test_commands.py:845:27        Tribble                 U       # 'migrations.Tribble', but that model is"
  - "tests/migrations/test_commands.py:883:34        Tribble                 U       \"-- Create model Tribble\","
  - "tests/migrations/test_commands.py:950:38        Tribble                 U       \"-- Create model Tribble\","
  - "tests/migrations/test_commands.py:1079:25       unrepresentable         U       def test_sqlmigrate_unrepresentable(self):"
  - "tests/migrations/test_commands.py:1117:70       Tribble                 U       foreign key to 'migrations.Tribble',"
  - "tests/migrations/test_commands.py:1126:56       schemaeditor            U       deferred_sql_executed_with_schemaeditor(self):"
  - "tests/migrations/test_commands.py:1517:40       µóðéø                   U       self.assertIn(\"úñí©óðé µóðéø\", content) # Meta.verbose"
  - "tests/migrations/test_commands.py:1518:40       µóðéøß                  U       self.assertIn(\"úñí©óðé µóðéøß\", content) # Meta.verbose"
  - "tests/migrations/test_commands.py:1520:33       Ðjáñgó                  U       self.assertIn(\"“Ðjáñgó”\", content) # title"
  - "tests/migrations/test_commands.py:1883:42       sillymodel              U       silly_int' on model 'sillymodel' not migrated: it is"
  - "tests/migrations/test_commands.py:2046:54       sillymodel              U       field silly_field from sillymodel\", out.getvalue())"
  - "tests/migrations/test_commands.py:2047:50       sillymodel              U       field silly_rename to sillymodel\", out.getvalue())"
  - "tests/migrations/test_commands.py:2078:42       sillymodel              U       field silly_field on sillymodel to silly_rename\","
  - "tests/migrations/test_commands.py:2106:14       makemigration           U       def test_makemigration_merge_dry_run(self)"
  - "tests/migrations/test_commands.py:2132:14       makemigration           U       def test_makemigration_merge_dry_run_verbosity"
  - "tests/migrations/test_commands.py:2187:48       sillymodel              U       field silly_date to sillymodel\", out.getvalue())"
  - "tests/migrations/test_commands.py:2277:61       doesnt (doesn't)        U       test_migrations_path_doesnt_exist.foo.bar\""
  - "tests/migrations/test_commands.py:2551:37       getdefaultencoding      U       MagicMock(encoding=sys.getdefaultencoding()),"
  - "tests/migrations/test_commands.py:2715:52       modelwithcustombase     U       tribble_author_rating_modelwithcustombase_and_more.py\","
  - "tests/migrations/test_commands.py:3286:14       ambigious               U       def test_ambigious_prefix(self):"
  - "tests/migrations/test_executor.py:198:26        unmigrations    U       perform spurious unmigrations and remigrations."
  - "tests/migrations/test_executor.py:325:18        storer          U       def fake_storer(phase, migration=None"
  - "tests/migrations/test_executor.py:328:73        storer          U       progress_callback=fake_storer)"
  - "tests/migrations/test_executor.py:331:47        tribble         U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_executor.py:342:44        tribble         U       assertTableExists(\"migrations_tribble\")"
  - "tests/migrations/test_executor.py:351:44        tribble         U       assertTableExists(\"migrations_tribble\")"
  - "tests/migrations/test_executor.py:375:47        tribble         U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_executor.py:392:51        tribble         U       ertTableNotExists(\"migrations_tribble\")"
  - "tests/migrations/test_graph.py:467:14       dummynode       U       def test_dummynode_repr(self):"
  - "tests/migrations/test_loader.py:136:70      unmigdep        U       migrations.test_migrations_unmigdep\"}"
  - "tests/migrations/test_loader.py:194:33      thefirst        U       (\"migrations\", \"thefirst\"),"
  - "tests/migrations/test_loader.py:212:72      blarg           U       migrations' with the prefix 'blarg'\""
  - "tests/migrations/test_loader.py:214:69      blarg           U       prefix(\"migrations\", \"blarg\")"
  - "tests/migrations/test_loader.py:572:39      unsquashes      U       apply a few from app1: unsquashes migration in app1."
  - "tests/migrations/test_loader.py:585:37      unsquashes      U       apply one from app2: unsquashes migration in app2 too"
  - "tests/migrations/test_loader.py:669:25      reraises        U       MigrationLoader reraises ImportErrors caused"
  - "tests/migrations/test_migrations_conflict/0001_initial.py:17:14         Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_conflict/0002_second.py:8:33           Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations_custom_user/0001_initial.py:19:14          Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_fake_split_initial/0001_initial.py:19:14       Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_first/second.py:6:25           thefirst    U       (\"migrations\", \"thefirst\"),"
  - "tests/migrations/test_migrations_first/second.py:11:33          Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations_first/thefirst.py:17:14        Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_initial_false/0001_not_initial.py:19:14        Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_manual_porting/0003_third.py:15:19         somemodel       U       name=\"somemodel\","
  - "tests/migrations/test_migrations_manual_porting/0003_third.py:19:19         somemodel       U       name=\"somemodel\","
  - "tests/migrations/test_migrations_manual_porting/0004_fourth.py:19:19        somemodel       U       name=\"somemodel\","
  - "tests/migrations/test_migrations_manual_porting/0004_fourth.py:23:19        somemodel       U       name=\"somemodel\","
  - "tests/migrations/test_migrations_no_ancestor/0001_initial.py:17:14          Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py:8:33        Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations_no_ancestor/0002_second.py:10:33       Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations_no_changes/0001_initial.py:17:14       Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_no_changes/0002_second.py:10:33        Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations_squashed/0001_initial.py:17:14         Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations_squashed/0002_second.py:8:33           Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_migrations/0001_initial.py:19:14          Tribble     U       \"Tribble\","
  - "tests/migrations/test_migrations/0001_initial.py:26:25          tribble     U       model_name=\"tribble\","
  - "tests/migrations/test_migrations/0002_second.py:10:33       Tribble     U       migrations.DeleteModel(\"Tribble\"),"
  - "tests/migrations/test_multidb.py:77:39          mltdb       U       test_create_model(\"test_mltdb_crmo\", should_run=True"
  - "tests/migrations/test_multidb.py:77:45          crmo        U       create_model(\"test_mltdb_crmo\", should_run=True)"
  - "tests/migrations/test_multidb.py:84:39          mltdb       U       test_create_model(\"test_mltdb_crmo2\", should_run=False"
  - "tests/migrations/test_multidb.py:84:45          crmo        U       create_model(\"test_mltdb_crmo2\", should_run=False"
  - "tests/migrations/test_multidb.py:91:39          mltdb       U       test_create_model(\"test_mltdb_crmo3\", should_run=True"
  - "tests/migrations/test_multidb.py:91:45          crmo        U       create_model(\"test_mltdb_crmo3\", should_run=True)"
  - "tests/migrations/test_multidb.py:98:43          mltdb       U       test_create_model(\"test_mltdb_crmo4\", should_run=True"
  - "tests/migrations/test_multidb.py:98:49          crmo        U       create_model(\"test_mltdb_crmo4\", should_run=True)"
  - "tests/migrations/test_multidb.py:102:43         mltdb       U       test_create_model(\"test_mltdb_crmo4\", should_run=False"
  - "tests/migrations/test_multidb.py:102:49         crmo        U       create_model(\"test_mltdb_crmo4\", should_run=False"
  - "tests/migrations/test_operations.py:56:40       crmo                            U       state_forwards(\"test_crmo\", new_state)"
  - "tests/migrations/test_operations.py:57:49       crmo                            U       new_state.models[\"test_crmo\", \"pony\"].name, \"Pony"
  - "tests/migrations/test_operations.py:58:53       crmo                            U       new_state.models[\"test_crmo\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:60:41       crmo                            U       assertTableNotExists(\"test_crmo_pony\")"
  - "tests/migrations/test_operations.py:62:47       crmo                            U       database_forwards(\"test_crmo\", editor, project_state"
  - "tests/migrations/test_operations.py:202:50      crmoua                          U       models.ForeignKey(\"test_crmoua.Pony\", models.CASCADE"
  - "tests/migrations/test_operations.py:213:41      crmoua                          U       assertTableNotExists(\"test_crmoua_pony\")"
  - "tests/migrations/test_operations.py:214:41      crmoua                          U       assertTableNotExists(\"test_crmoua_rider\")"
  - "tests/migrations/test_operations.py:217:45      crmoua                          U       state_forwards(\"test_crmoua\", new_state)"
  - "tests/migrations/test_operations.py:219:23      crmoua                          U       \"test_crmoua\", editor, project_state"
  - "tests/migrations/test_operations.py:239:54      crmomm                          U       up_test_model(\"test_crmomm\")"
  - "tests/migrations/test_operations.py:249:40      crmomm                          U       state_forwards(\"test_crmomm\", new_state)"
  - "tests/migrations/test_operations.py:251:41      crmomm                          U       assertTableNotExists(\"test_crmomm_stable_ponies\")"
  - "tests/migrations/test_operations.py:253:47      crmomm                          U       database_forwards(\"test_crmomm\", editor, project_state"
  - "tests/migrations/test_operations.py:254:38      crmomm                          U       assertTableExists(\"test_crmomm_stable\")"
  - "tests/migrations/test_operations.py:282:27      cfkmtopkfdbc                    U       app_label = \"test_cfkmtopkfdbc\""
  - "tests/migrations/test_operations.py:330:50      shetlandpony                    U       ColumnCollation(f\"{app_label}_shetlandpony\", \"pony_id\", collation"
  - "tests/migrations/test_operations.py:339:54      crmoih                          U       up_test_model(\"test_crmoih\")"
  - "tests/migrations/test_operations.py:347:31      crmoih                          U       \"test_crmoih.Pony\","
  - "tests/migrations/test_operations.py:359:40      crmoih                          U       state_forwards(\"test_crmoih\", new_state)"
  - "tests/migrations/test_operations.py:360:30      crmoih                          U       self.assertIn((\"test_crmoih\", \"shetlandpony\"), new"
  - "tests/migrations/test_operations.py:360:40      shetlandpony                    U       assertIn((\"test_crmoih\", \"shetlandpony\"), new_state.models"
  - "tests/migrations/test_operations.py:362:41      crmoih                          U       assertTableNotExists(\"test_crmoih_shetlandpony\")"
  - "tests/migrations/test_operations.py:362:48      shetlandpony                    U       rtTableNotExists(\"test_crmoih_shetlandpony\")"
  - "tests/migrations/test_operations.py:365:45      shetlandpony                    U       ssertTableExists(\"test_crmoih_shetlandpony\")"
  - "tests/migrations/test_operations.py:371:48      shetlandpony                    U       rtTableNotExists(\"test_crmoih_shetlandpony\")"
  - "tests/migrations/test_operations.py:377:54      crprmo                          U       up_test_model(\"test_crprmo\")"
  - "tests/migrations/test_operations.py:383:26      crprmo                          U       bases=(\"test_crprmo.Pony\",),"
  - "tests/migrations/test_operations.py:387:40      crprmo                          U       state_forwards(\"test_crprmo\", new_state)"
  - "tests/migrations/test_operations.py:388:30      crprmo                          U       self.assertIn((\"test_crprmo\", \"proxypony\"), new"
  - "tests/migrations/test_operations.py:388:40      proxypony                       U       assertIn((\"test_crprmo\", \"proxypony\"), new_state.models"
  - "tests/migrations/test_operations.py:390:41      crprmo                          U       assertTableNotExists(\"test_crprmo_proxypony\")"
  - "tests/migrations/test_operations.py:390:48      proxypony                       U       rtTableNotExists(\"test_crprmo_proxypony\")"
  - "tests/migrations/test_operations.py:394:48      proxypony                       U       rtTableNotExists(\"test_crprmo_proxypony\")"
  - "tests/migrations/test_operations.py:401:48      proxypony                       U       rtTableNotExists(\"test_crprmo_proxypony\")"
  - "tests/migrations/test_operations.py:413:54      crummo                          U       up_test_model(\"test_crummo\")"
  - "tests/migrations/test_operations.py:419:26      crummo                          U       bases=(\"test_crummo.Pony\",),"
  - "tests/migrations/test_operations.py:423:40      crummo                          U       state_forwards(\"test_crummo\", new_state)"
  - "tests/migrations/test_operations.py:424:30      crummo                          U       self.assertIn((\"test_crummo\", \"unmanagedpony\"),"
  - "tests/migrations/test_operations.py:426:41      crummo                          U       assertTableNotExists(\"test_crummo_unmanagedpony\")"
  - "tests/migrations/test_operations.py:485:27      crmobechc                       U       app_label = \"test_crmobechc\""
  - "tests/migrations/test_operations.py:680:54      cmoma                           U       up_test_model(\"test_cmoma\")"
  - "tests/migrations/test_operations.py:695:40      cmoma                           U       state_forwards(\"test_cmoma\", new_state)"
  - "tests/migrations/test_operations.py:696:30      cmoma                           U       self.assertIn((\"test_cmoma\", \"food\"), new_state"
  - "tests/migrations/test_operations.py:697:43      cmoma                           U       new_state.models[\"test_cmoma\", \"food\"].managers"
  - "tests/migrations/test_operations.py:711:54      dlmo                            U       up_test_model(\"test_dlmo\")"
  - "tests/migrations/test_operations.py:718:40      dlmo                            U       state_forwards(\"test_dlmo\", new_state)"
  - "tests/migrations/test_operations.py:719:33      dlmo                            U       self.assertNotIn((\"test_dlmo\", \"pony\"), new_state"
  - "tests/migrations/test_operations.py:721:38      dlmo                            U       assertTableExists(\"test_dlmo_pony\")"
  - "tests/migrations/test_operations.py:723:47      dlmo                            U       database_forwards(\"test_dlmo\", editor, project_state"
  - "tests/migrations/test_operations.py:739:54      dlprmo                          U       up_test_model(\"test_dlprmo\", proxy_model=True)"
  - "tests/migrations/test_operations.py:743:40      dlprmo                          U       state_forwards(\"test_dlprmo\", new_state)"
  - "tests/migrations/test_operations.py:744:30      dlprmo                          U       self.assertIn((\"test_dlprmo\", \"proxypony\"), project"
  - "tests/migrations/test_operations.py:744:40      proxypony                       U       assertIn((\"test_dlprmo\", \"proxypony\"), project_state.models"
  - "tests/migrations/test_operations.py:745:33      dlprmo                          U       self.assertNotIn((\"test_dlprmo\", \"proxypony\"), new"
  - "tests/migrations/test_operations.py:747:38      dlprmo                          U       assertTableExists(\"test_dlprmo_pony\")"
  - "tests/migrations/test_operations.py:762:54      dlmtimo                         U       up_test_model(\"test_dlmtimo\", mti_model=True)"
  - "tests/migrations/test_operations.py:766:40      dlmtimo                         U       state_forwards(\"test_dlmtimo\", new_state)"
  - "tests/migrations/test_operations.py:767:30      dlmtimo                         U       self.assertIn((\"test_dlmtimo\", \"shetlandpony\"), project"
  - "tests/migrations/test_operations.py:768:33      dlmtimo                         U       self.assertNotIn((\"test_dlmtimo\", \"shetlandpony\"), new"
  - "tests/migrations/test_operations.py:770:38      dlmtimo                         U       assertTableExists(\"test_dlmtimo_pony\")"
  - "tests/migrations/test_operations.py:792:54      rnmo                            U       up_test_model(\"test_rnmo\", related_model=True"
  - "tests/migrations/test_operations.py:801:30      rnmo                            U       self.assertIn((\"test_rnmo\", \"pony\"), project_state"
  - "tests/migrations/test_operations.py:802:33      rnmo                            U       self.assertNotIn((\"test_rnmo\", \"horse\"), project"
  - "tests/migrations/test_operations.py:803:38      rnmo                            U       assertTableExists(\"test_rnmo_pony\")"
  - "tests/migrations/test_operations.py:804:41      rnmo                            U       assertTableNotExists(\"test_rnmo_horse\")"
  - "tests/migrations/test_operations.py:818:28      repoints                        U       # RenameModel also repoints all incoming FKs and"
  - "tests/migrations/test_operations.py:884:54      rmwsrf                          U       up_test_model(\"test_rmwsrf\", related_model=True"
  - "tests/migrations/test_operations.py:889:40      rmwsrf                          U       state_forwards(\"test_rmwsrf\", new_state)"
  - "tests/migrations/test_operations.py:890:33      rmwsrf                          U       self.assertNotIn((\"test_rmwsrf\", \"rider\"), new_state"
  - "tests/migrations/test_operations.py:891:30      rmwsrf                          U       self.assertIn((\"test_rmwsrf\", \"horserider\"), new"
  - "tests/migrations/test_operations.py:891:40      horserider                      U       assertIn((\"test_rmwsrf\", \"horserider\"), new_state.models"
  - "tests/migrations/test_operations.py:892:38      repoints                        U       Remember, RenameModel also repoints all incoming FKs and"
  - "tests/migrations/test_operations.py:895:36      rmwsrf                          U       new_state.models[\"test_rmwsrf\", \"horserider\"]"
  - "tests/migrations/test_operations.py:895:46      horserider                      U       models[\"test_rmwsrf\", \"horserider\"]"
  - "tests/migrations/test_operations.py:899:63      horserider                      U       model(\"test_rmwsrf\", \"horserider\")"
  - "tests/migrations/test_operations.py:901:41      horserider                      U       HorseRider._meta.get_field(\"horserider\").remote_field.model"
  - "tests/migrations/test_operations.py:905:48      horserider                      U       rtTableNotExists(\"test_rmwsrf_horserider\")"
  - "tests/migrations/test_operations.py:947:19      rmwsc                           U       \"test_rmwsc\", related_model=True"
  - "tests/migrations/test_operations.py:955:40      rmwsc                           U       state_forwards(\"test_rmwsc\", new_state)"
  - "tests/migrations/test_operations.py:956:33      rmwsc                           U       self.assertNotIn((\"test_rmwsc\", \"shetlandpony\"), new"
  - "tests/migrations/test_operations.py:957:30      rmwsc                           U       self.assertIn((\"test_rmwsc\", \"littlehorse\"), new"
  - "tests/migrations/test_operations.py:957:39      littlehorse                     U       assertIn((\"test_rmwsc\", \"littlehorse\"), new_state.models"
  - "tests/migrations/test_operations.py:960:40      rmwsc                           U       project_state.models[\"test_rmwsc\", \"rider\"]"
  - "tests/migrations/test_operations.py:968:47      littlehorse                     U       ertTableNotExists(\"test_rmwsc_littlehorse\")"
  - "tests/migrations/test_operations.py:981:44      littlehorse                     U       assertTableExists(\"test_rmwsc_littlehorse\")"
  - "tests/migrations/test_operations.py:988:63      littlehorse                     U       pony_id\"], (\"test_rmwsc_littlehorse\", \"id\")"
  - "tests/migrations/test_operations.py:992:27      rmwdbtnoop                      U       app_label = \"test_rmwdbtnoop\""
  - "tests/migrations/test_operations.py:1002:27     rmwdbtfk                        U       app_label = \"test_rmwdbtfk\""
  - "tests/migrations/test_operations.py:1152:27     rmwdbrm                         U       app_label = \"test_rmwdbrm2m\""
  - "tests/migrations/test_operations.py:1345:9      ponyrider                       U       ponyrider = PonyRider.objects"
  - "tests/migrations/test_operations.py:1346:9      ponyrider                       U       ponyrider.riders.add(jockey)"
  - "tests/migrations/test_operations.py:1446:63     adfl                            U       make_test_state(\"test_adfl\", operation)"
  - "tests/migrations/test_operations.py:1447:53     adfl                            U       new_state.models[\"test_adfl\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:1448:40     adfl                            U       new_state.models[\"test_adfl\", \"pony\"].fields[\"height"
  - "tests/migrations/test_operations.py:1451:42     adfl                            U       assertColumnNotExists(\"test_adfl_pony\", \"height\")"
  - "tests/migrations/test_operations.py:1453:47     adfl                            U       database_forwards(\"test_adfl\", editor, project_state"
  - "tests/migrations/test_operations.py:1517:54     adchfl                          U       up_test_model(\"test_adchfl\")"
  - "tests/migrations/test_operations.py:1519:51     adchfl                          U       apps.get_model(\"test_adchfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1523:19     adchfl                          U       \"test_adchfl\","
  - "tests/migrations/test_operations.py:1551:47     adchfl                          U       apps.get_model(\"test_adchfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1562:54     adtxtfl                         U       up_test_model(\"test_adtxtfl\")"
  - "tests/migrations/test_operations.py:1564:51     adtxtfl                         U       apps.get_model(\"test_adtxtfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1568:19     adtxtfl                         U       \"test_adtxtfl\","
  - "tests/migrations/test_operations.py:1596:47     adtxtfl                         U       apps.get_model(\"test_adtxtfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1607:54     adbinfl                         U       up_test_model(\"test_adbinfl\")"
  - "tests/migrations/test_operations.py:1609:51     adbinfl                         U       apps.get_model(\"test_adbinfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1613:19     adbinfl                         U       \"test_adbinfl\","
  - "tests/migrations/test_operations.py:1641:47     adbinfl                         U       apps.get_model(\"test_adbinfl\", \"Pony\")"
  - "tests/migrations/test_operations.py:1673:54     adflpd                          U       up_test_model(\"test_adflpd\")"
  - "tests/migrations/test_operations.py:1682:40     adflpd                          U       state_forwards(\"test_adflpd\", new_state)"
  - "tests/migrations/test_operations.py:1683:53     adflpd                          U       new_state.models[\"test_adflpd\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:1684:40     adflpd                          U       new_state.models[\"test_adflpd\", \"pony\"].fields[\"height"
  - "tests/migrations/test_operations.py:1687:44     adflpd                          U       apps.get_model(\"test_adflpd\", \"pony\").objects.create"
  - "tests/migrations/test_operations.py:1704:27     adfldd                          U       app_label = \"test_adfldd\""
  - "tests/migrations/test_operations.py:1747:27     adflddsce                       U       app_label = \"test_adflddsce\""
  - "tests/migrations/test_operations.py:1795:27     adflddf                         U       app_label = \"test_adflddf\""
  - "tests/migrations/test_operations.py:1823:27     adflbddd                        U       app_label = \"test_adflbddd\""
  - "tests/migrations/test_operations.py:1876:54     adflmm                          U       up_test_model(\"test_adflmm\", second_model=True"
  - "tests/migrations/test_operations.py:1882:40     adflmm                          U       state_forwards(\"test_adflmm\", new_state)"
  - "tests/migrations/test_operations.py:1883:53     adflmm                          U       new_state.models[\"test_adflmm\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:1885:41     adflmm                          U       assertTableNotExists(\"test_adflmm_pony_stables\")"
  - "tests/migrations/test_operations.py:1887:47     adflmm                          U       database_forwards(\"test_adflmm\", editor, project_state"
  - "tests/migrations/test_operations.py:1905:54     alflmm                          U       up_test_model(\"test_alflmm\", second_model=True"
  - "tests/migrations/test_operations.py:1908:19     alflmm                          U       \"test_alflmm\","
  - "tests/migrations/test_operations.py:1918:51     alflmm                          U       apps.get_model(\"test_alflmm\", \"Pony\")"
  - "tests/migrations/test_operations.py:1922:19     alflmm                          U       \"test_alflmm\","
  - "tests/migrations/test_operations.py:1934:51     alflmm                          U       apps.get_model(\"test_alflmm\", \"Pony\")"
  - "tests/migrations/test_operations.py:1975:54     rmflmm                          U       up_test_model(\"test_rmflmm\", second_model=True"
  - "tests/migrations/test_operations.py:1978:19     rmflmm                          U       \"test_rmflmm\","
  - "tests/migrations/test_operations.py:1988:38     rmflmm                          U       assertTableExists(\"test_rmflmm_pony_stables\")"
  - "tests/migrations/test_operations.py:1993:19     rmflmm                          U       \"test_rmflmm\", project_state, operations"
  - "tests/migrations/test_operations.py:1995:41     rmflmm                          U       assertTableNotExists(\"test_rmflmm_pony_stables\")"
  - "tests/migrations/test_operations.py:2002:54     rmflmmwt                        U       up_test_model(\"test_rmflmmwt\", second_model=True"
  - "tests/migrations/test_operations.py:2004:41     rmflmmwt                        U       assertTableNotExists(\"test_rmflmmwt_ponystables\")"
  - "tests/migrations/test_operations.py:2004:50     ponystables                     U       TableNotExists(\"test_rmflmmwt_ponystables\")"
  - "tests/migrations/test_operations.py:2006:19     rmflmmwt                        U       \"test_rmflmmwt\","
  - "tests/migrations/test_operations.py:2014:53     rmflmmwt                        U       models.ForeignKey(\"test_rmflmmwt.Pony\", models.CASCADE"
  - "tests/migrations/test_operations.py:2018:53     rmflmmwt                        U       models.ForeignKey(\"test_rmflmmwt.Stable\", models.CASCADE"
  - "tests/migrations/test_operations.py:2033:47     ponystables                     U       ertTableExists(\"test_rmflmmwt_ponystables\")"
  - "tests/migrations/test_operations.py:2045:54     rmfl                            U       up_test_model(\"test_rmfl\")"
  - "tests/migrations/test_operations.py:2054:40     rmfl                            U       state_forwards(\"test_rmfl\", new_state)"
  - "tests/migrations/test_operations.py:2055:53     rmfl                            U       new_state.models[\"test_rmfl\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:2057:39     rmfl                            U       assertColumnExists(\"test_rmfl_pony\", \"pink\")"
  - "tests/migrations/test_operations.py:2059:47     rmfl                            U       database_forwards(\"test_rmfl\", editor, project_state"
  - "tests/migrations/test_operations.py:2092:54     almota                          U       up_test_model(\"test_almota\")"
  - "tests/migrations/test_operations.py:2094:62     almota                          U       AlterModelTable(\"Pony\", \"test_almota_pony_2\")"
  - "tests/migrations/test_operations.py:2096:66     almota                          U       table for Pony to test_almota_pony_2\""
  - "tests/migrations/test_operations.py:2100:46     almota                          U       table for Pony to test_almota_pony_2\","
  - "tests/migrations/test_operations.py:2104:40     almota                          U       state_forwards(\"test_almota\", new_state)"
  - "tests/migrations/test_operations.py:2165:27     talflmltlm                      U       app_label = \"test_talflmltlm2m\""
  - "tests/migrations/test_operations.py:2197:27     talm                            U       app_label = \"test_talm2mfl\""
  - "tests/migrations/test_operations.py:2237:54     alfl                            U       up_test_model(\"test_alfl\")"
  - "tests/migrations/test_operations.py:2248:40     alfl                            U       state_forwards(\"test_alfl\", new_state)"
  - "tests/migrations/test_operations.py:2250:40     alfl                            U       project_state.models[\"test_alfl\", \"pony\"].fields[\"pink"
  - "tests/migrations/test_operations.py:2252:46     alfl                            U       new_state.models[\"test_alfl\", \"pony\"].fields[\"pink"
  - "tests/migrations/test_operations.py:2254:40     alfl                            U       assertColumnNotNull(\"test_alfl_pony\", \"pink\")"
  - "tests/migrations/test_operations.py:2269:27     alfladd                         U       app_label = \"test_alfladd\""
  - "tests/migrations/test_operations.py:2309:27     alflcdtdd                       U       app_label = \"test_alflcdtdd\""
  - "tests/migrations/test_operations.py:2341:27     alflcntddnn                     U       app_label = \"test_alflcntddnn\""
  - "tests/migrations/test_operations.py:2372:27     alflcntdddn                     U       app_label = \"test_alflcntdddn\""
  - "tests/migrations/test_operations.py:2410:27     alflcbnddnn                     U       app_label = \"test_alflcbnddnn\""
  - "tests/migrations/test_operations.py:2450:27     afadbn                          U       app_label = \"test_afadbn\""
  - "tests/migrations/test_operations.py:2502:26     foreignobject                   U       def test_alter_field_foreignobject_noop(self):"
  - "tests/migrations/test_operations.py:2503:27     alflfo                          U       app_label = \"test_alflfo_noop\""
  - "tests/migrations/test_operations.py:2550:27     almotaco                        U       app_label = \"test_almotaco\""
  - "tests/migrations/test_operations.py:2587:54     alflpk                          U       up_test_model(\"test_alflpk\")"
  - "tests/migrations/test_operations.py:2593:40     alflpk                          U       state_forwards(\"test_alflpk\", new_state)"
  - "tests/migrations/test_operations.py:2595:40     alflpk                          U       project_state.models[\"test_alflpk\", \"pony\"].fields[\"id"
  - "tests/migrations/test_operations.py:2599:36     alflpk                          U       new_state.models[\"test_alflpk\", \"pony\"].fields[\"id"
  - "tests/migrations/test_operations.py:2604:47     alflpk                          U       database_forwards(\"test_alflpk\", editor, project_state"
  - "tests/migrations/test_operations.py:2616:54     alflpkfk                        U       up_test_model(\"test_alflpkfk\", related_model=True"
  - "tests/migrations/test_operations.py:2618:19     alflpkfk                        U       \"test_alflpkfk\","
  - "tests/migrations/test_operations.py:2639:40     alflpkfk                        U       state_forwards(\"test_alflpkfk\", new_state)"
  - "tests/migrations/test_operations.py:2641:40     alflpkfk                        U       project_state.models[\"test_alflpkfk\", \"pony\"].fields[\"id"
  - "tests/migrations/test_operations.py:2645:36     alflpkfk                        U       new_state.models[\"test_alflpkfk\", \"pony\"].fields[\"id"
  - "tests/migrations/test_operations.py:2734:27     alflpkfkdbc                     U       app_label = \"test_alflpkfkdbc\""
  - "tests/migrations/test_operations.py:2782:27     alflpkmtifk                     U       app_label = \"test_alflpkmtifk\""
  - "tests/migrations/test_operations.py:2829:60     shetlandrider                   U       column_id_type(cursor, \"shetlandrider\", \"pony_id\")"
  - "tests/migrations/test_operations.py:2845:31     shetlandrider                   U       f\"{app_label}_shetlandrider\","
  - "tests/migrations/test_operations.py:2860:31     shetlandrider                   U       f\"{app_label}_shetlandrider\","
  - "tests/migrations/test_operations.py:2866:27     alflpkmtiftb                    U       app_label = \"test_alflpkmtiftb\""
  - "tests/migrations/test_operations.py:2937:27     alidpktuuidpk                   U       app_label = \"test_alidpktuuidpk\""
  - "tests/migrations/test_operations.py:2974:27     alflrsfkwtflttc                 U       app_label = \"test_alflrsfkwtflttc\""
  - "tests/migrations/test_operations.py:3023:27     alflrsfkwtflrnttc               U       app_label = \"test_alflrsfkwtflrnttc\""
  - "tests/migrations/test_operations.py:3262:54     rnfl                            U       up_test_model(\"test_rnfl\")"
  - "tests/migrations/test_operations.py:3270:40     rnfl                            U       state_forwards(\"test_rnfl\", new_state)"
  - "tests/migrations/test_operations.py:3271:54     rnfl                            U       new_state.models[\"test_rnfl\", \"pony\"].fields)"
  - "tests/migrations/test_operations.py:3272:57     rnfl                            U       new_state.models[\"test_rnfl\", \"pony\"].fields)"
  - "tests/migrations/test_operations.py:3274:39     rnfl                            U       assertColumnExists(\"test_rnfl_pony\", \"pink\")"
  - "tests/migrations/test_operations.py:3295:54     rnflut                          U       up_test_model(\"test_rnflut\", unique_together=True"
  - "tests/migrations/test_operations.py:3298:40     rnflut                          U       state_forwards(\"test_rnflut\", new_state)"
  - "tests/migrations/test_operations.py:3302:36     rnflut                          U       new_state.models[\"test_rnflut\", \"pony\"].options[\"unique"
  - "tests/migrations/test_operations.py:3306:36     rnflut                          U       new_state.models[\"test_rnflut\", \"pony\"].options[\"unique"
  - "tests/migrations/test_operations.py:3309:39     rnflut                          U       assertColumnExists(\"test_rnflut_pony\", \"pink\")"
  - "tests/migrations/test_operations.py:3334:19     rfwdbc                          U       \"test_rfwdbc\","
  - "tests/migrations/test_operations.py:3356:40     rfwdbc                          U       state_forwards(\"test_rfwdbc\", new_state)"
  - "tests/migrations/test_operations.py:3357:63     rfwdbc                          U       new_state.models[\"test_rfwdbc\", \"pony\"].fields)"
  - "tests/migrations/test_operations.py:3358:58     rfwdbc                          U       new_state.models[\"test_rfwdbc\", \"pony\"].fields)"
  - "tests/migrations/test_operations.py:3359:39     rfwdbc                          U       assertColumnExists(\"test_rfwdbc_pony\", \"db_field\")"
  - "tests/migrations/test_operations.py:3396:19     rfmx                            U       \"test_rfmx\","
  - "tests/migrations/test_operations.py:3410:40     rfmx                            U       state_forwards(\"test_rfmx\", new_state)"
  - "tests/migrations/test_operations.py:3411:55     rfmx                            U       new_state.models[\"test_rfmx\", \"pony\"].fields)"
  - "tests/migrations/test_operations.py:3412:39     rfmx                            U       assertColumnExists(\"test_rfmx_pony\", \"field\")"
  - "tests/migrations/test_operations.py:3414:47     rfmx                            U       database_forwards(\"test_rfmx\", editor, project_state"
  - "tests/migrations/test_operations.py:3515:54     alunto                          U       up_test_model(\"test_alunto\")"
  - "tests/migrations/test_operations.py:3530:40     alunto                          U       state_forwards(\"test_alunto\", new_state)"
  - "tests/migrations/test_operations.py:3533:44     alunto                          U       project_state.models[\"test_alunto\", \"pony\"].options.get"
  - "tests/migrations/test_operations.py:3541:40     alunto                          U       new_state.models[\"test_alunto\", \"pony\"].options.get"
  - "tests/migrations/test_operations.py:3549:46     alunto                          U       execute(\"INSERT INTO test_alunto_pony (pink, weight)"
  - "tests/migrations/test_operations.py:3599:27     rutopkf                         U       app_label = \"test_rutopkf\""
  - "tests/migrations/test_operations.py:3612:45     pkey                            U       name = f\"{table_name}_pkey\""
  - "tests/migrations/test_operations.py:3629:27     rutouf                          U       app_label = \"test_rutouf\""
  - "tests/migrations/test_operations.py:3664:54     adin                            U       up_test_model(\"test_adin\")"
  - "tests/migrations/test_operations.py:3671:58     adin                            U       \"pink\"], name=\"test_adin_pony_pink_idx\")"
  - "tests/migrations/test_operations.py:3675:32     adin                            U       \"Create index test_adin_pony_pink_idx on field"
  - "tests/migrations/test_operations.py:3679:34     adin                            U       + Create index test_adin_pony_pink_idx on field"
  - "tests/migrations/test_operations.py:3683:24     adin                            U       \"pony_test_adin_pony_pink_idx\","
  - "tests/migrations/test_operations.py:3709:61     multicol                        U       test_model(\"test_rmin\", multicol_index=True)"
  - "tests/migrations/test_operations.py:3759:27     rnin                            U       app_label = \"test_rnin\""
  - "tests/migrations/test_operations.py:3826:27     rninuui                         U       app_label = \"test_rninuui\""
  - "tests/migrations/test_operations.py:3833:59     rninuui                         U       of indexes for test_rninuui_pony(weight, pink)."
  - "tests/migrations/test_operations.py:3840:27     rninuniwui                      U       app_label = \"test_rninuniwui\""
  - "tests/migrations/test_operations.py:3843:13     multicol                        U       multicol_index=True,"
  - "tests/migrations/test_operations.py:3859:54     adinsf                          U       up_test_model(\"test_adinsf\")"
  - "tests/migrations/test_operations.py:3860:58     adinsf                          U       \"pink\"], name=\"test_adinsf_pony_pink_idx\")"
  - "tests/migrations/test_operations.py:3861:56     adinsf                          U       apps.get_model(\"test_adinsf\", \"Pony\")"
  - "tests/migrations/test_operations.py:3865:40     adinsf                          U       state_forwards(\"test_adinsf\", new_state)"
  - "tests/migrations/test_operations.py:3866:52     adinsf                          U       apps.get_model(\"test_adinsf\", \"Pony\")"
  - "tests/migrations/test_operations.py:3870:54     rminsf                          U       up_test_model(\"test_rminsf\")"
  - "tests/migrations/test_operations.py:3871:58     rminsf                          U       \"pink\"], name=\"test_rminsf_pony_pink_idx\")"
  - "tests/migrations/test_operations.py:3872:65     rminsf                          U       state_forwards(\"test_rminsf\", project_state)"
  - "tests/migrations/test_operations.py:3873:56     rminsf                          U       apps.get_model(\"test_rminsf\", \"Pony\")"
  - "tests/migrations/test_operations.py:3876:58     rminsf                          U       RemoveIndex(\"Pony\", \"test_rminsf_pony_pink_idx\")"
  - "tests/migrations/test_operations.py:3882:27     rnidsf                          U       app_label = \"test_rnidsf\""
  - "tests/migrations/test_operations.py:3897:27     addfuncin                       U       app_label = \"test_addfuncin\""
  - "tests/migrations/test_operations.py:3905:32     addfuncin                       U       \"Create index test_addfuncin_pony_abs_idx on Abs"
  - "tests/migrations/test_operations.py:3909:24     addfuncin                       U       \"pony_test_addfuncin_pony_abs_idx\","
  - "tests/migrations/test_operations.py:3931:27     rmfuncin                        U       app_label = \"test_rmfuncin\""
  - "tests/migrations/test_operations.py:3945:32     rmfuncin                        U       \"Remove index test_rmfuncin_pony_abs_idx from Pony"
  - "tests/migrations/test_operations.py:3949:31     rmfuncin                        U       \"remove_pony_test_rmfuncin_pony_abs_idx\","
  - "tests/migrations/test_operations.py:3970:27     alfuncin                        U       app_label = \"test_alfuncin\""
  - "tests/migrations/test_operations.py:3994:54     alflin                          U       up_test_model(\"test_alflin\", index=True)"
  - "tests/migrations/test_operations.py:3999:40     alflin                          U       state_forwards(\"test_alflin\", new_state)"
  - "tests/migrations/test_operations.py:4001:40     alflin                          U       assertColumnNotNull(\"test_alflin_pony\", \"pink\")"
  - "tests/migrations/test_operations.py:4003:47     alflin                          U       database_forwards(\"test_alflin\", editor, project_state"
  - "tests/migrations/test_operations.py:4005:38     alflin                          U       assertIndexExists(\"test_alflin_pony\", [\"pink\"])"
  - "tests/migrations/test_operations.py:4120:27     Artur                           U       {\"name\": \"Artur\"},"
  - "tests/migrations/test_operations.py:4189:27     Artur                           U       {\"name\": \"Artur\"},"
  - "tests/migrations/test_operations.py:4230:27     addorconstraint                 U       app_label = \"test_addorconstraint\""
  - "tests/migrations/test_operations.py:4491:27     adddeferred                     U       app_label = \"test_adddeferred_uc\""
  - "tests/migrations/test_operations.py:4551:27     removedeferred                  U       app_label = \"test_removedeferred_uc\""
  - "tests/migrations/test_operations.py:4617:27     addcovering                     U       app_label = \"test_addcovering_uc\""
  - "tests/migrations/test_operations.py:4664:27     removecovering                  U       app_label = \"test_removecovering_uc\""
  - "tests/migrations/test_operations.py:4717:27     alfuncuc                        U       app_label = \"test_alfuncuc\""
  - "tests/migrations/test_operations.py:4741:27     adfuncuc                        U       app_label = \"test_adfuncuc\""
  - "tests/migrations/test_operations.py:4749:37     adfuncuc                        U       Create constraint test_adfuncuc_pony_abs_uq on model"
  - "tests/migrations/test_operations.py:4753:24     adfuncuc                        U       \"pony_test_adfuncuc_pony_abs_uq\","
  - "tests/migrations/test_operations.py:4789:27     rmfuncuc                        U       app_label = \"test_rmfuncuc\""
  - "tests/migrations/test_operations.py:4804:37     rmfuncuc                        U       Remove constraint test_rmfuncuc_pony_abs_uq from model"
  - "tests/migrations/test_operations.py:4808:31     rmfuncuc                        U       \"remove_pony_test_rmfuncuc_pony_abs_uq\","
  - "tests/migrations/test_operations.py:4844:54     almoop                          U       up_test_model(\"test_almoop\")"
  - "tests/migrations/test_operations.py:4855:40     almoop                          U       state_forwards(\"test_almoop\", new_state)"
  - "tests/migrations/test_operations.py:4858:44     almoop                          U       project_state.models[\"test_almoop\", \"pony\"].options.get"
  - "tests/migrations/test_operations.py:4865:40     almoop                          U       new_state.models[\"test_almoop\", \"pony\"].options.get"
  - "tests/migrations/test_operations.py:4869:36     almoop                          U       new_state.models[\"test_almoop\", \"pony\"].options[\"permission"
  - "tests/migrations/test_operations.py:4913:54     alorwrtto                       U       up_test_model(\"test_alorwrtto\", related_model=True"
  - "tests/migrations/test_operations.py:4928:40     alorwrtto                       U       state_forwards(\"test_alorwrtto\", new_state)"
  - "tests/migrations/test_operations.py:4930:40     alorwrtto                       U       project_state.models[\"test_alorwrtto\", \"rider\"].options.get"
  - "tests/migrations/test_operations.py:4935:36     alorwrtto                       U       new_state.models[\"test_alorwrtto\", \"rider\"].options.get"
  - "tests/migrations/test_operations.py:4941:42     alorwrtto                       U       assertColumnNotExists(\"test_alorwrtto_rider\", \"_order\")"
  - "tests/migrations/test_operations.py:4987:54     almoma                          U       up_test_model(\"test_almoma\")"
  - "tests/migrations/test_operations.py:5000:47     almoma                          U       project_state.models[\"test_almoma\", \"pony\"].managers"
  - "tests/migrations/test_operations.py:5004:40     almoma                          U       state_forwards(\"test_almoma\", new_state)"
  - "tests/migrations/test_operations.py:5005:30     almoma                          U       self.assertIn((\"test_almoma\", \"pony\"), new_state"
  - "tests/migrations/test_operations.py:5006:43     almoma                          U       new_state.models[\"test_almoma\", \"pony\"].managers"
  - "tests/migrations/test_operations.py:5025:54     almomae                         U       up_test_model(\"test_almomae\", manager_model=True"
  - "tests/migrations/test_operations.py:5029:30     almomae                         U       self.assertIn((\"test_almomae\", \"food\"), project_state"
  - "tests/migrations/test_operations.py:5030:47     almomae                         U       project_state.models[\"test_almomae\", \"food\"].managers"
  - "tests/migrations/test_operations.py:5041:40     almomae                         U       state_forwards(\"test_almomae\", new_state)"
  - "tests/migrations/test_operations.py:5042:43     almomae                         U       new_state.models[\"test_almomae\", \"food\"].managers"
  - "tests/migrations/test_operations.py:5050:54     alfk                            U       up_test_model(\"test_alfk\")"
  - "tests/migrations/test_operations.py:5060:47     alfk                            U       state_forwards(\"test_alfk\", create_state)"
  - "tests/migrations/test_operations.py:5067:46     alfk                            U       state_forwards(\"test_alfk\", alter_state)"
  - "tests/migrations/test_operations.py:5070:23     alfk                            U       \"test_alfk\", editor, project_state"
  - "tests/migrations/test_operations.py:5073:23     alfk                            U       \"test_alfk\", editor, create_state"
  - "tests/migrations/test_operations.py:5087:19     afknfk                          U       \"test_afknfk\", operation, related"
  - "tests/migrations/test_operations.py:5090:39     afknfk                          U       assertColumnExists(\"test_afknfk_rider\", \"pony_id\")"
  - "tests/migrations/test_operations.py:5091:42     afknfk                          U       assertColumnNotExists(\"test_afknfk_rider\", \"pony\")"
  - "tests/migrations/test_operations.py:5093:47     afknfk                          U       database_forwards(\"test_afknfk\", editor, project_state"
  - "tests/migrations/test_operations.py:5094:39     afknfk                          U       assertColumnExists(\"test_afknfk_rider\", \"pony\")"
  - "tests/migrations/test_operations.py:5139:50     somethingelse                   U       models[\"test_runsql\", \"somethingelse\"].fields), 1"
  - "tests/migrations/test_operations.py:5181:15     elidable                        U       # And elidable reduction"
  - "tests/migrations/test_operations.py:5183:9      elidable                        U       elidable_operation = migrations"
  - "tests/migrations/test_operations.py:5183:71     elidable                        U       SELECT 1 FROM void;\", elidable=True)"
  - "tests/migrations/test_operations.py:5184:26     elidable                        U       self.assertEqual(elidable_operation.reduce(operation"
  - "tests/migrations/test_operations.py:5367:42     ahahaha                         U       migrations.RunPython(\"print 'ahahaha'\")"
  - "tests/migrations/test_operations.py:5412:20     shetlandponies                  U       def create_shetlandponies(models, schema_editor"
  - "tests/migrations/test_operations.py:5420:49     shetlandponies                  U       migrations.RunPython(create_shetlandponies)"
  - "tests/migrations/test_operations.py:5434:15     elidable                        U       # And elidable reduction"
  - "tests/migrations/test_operations.py:5657:47     Triomphe                        U       create(title=\"Arc de Triomphe\", author=author2)"
  - "tests/migrations/test_operations.py:5823:14     smallfield                      U       def test_smallfield_autofield_foreignfield"
  - "tests/migrations/test_operations.py:5831:14     smallfield                      U       def test_smallfield_bigautofield_foreignfield"
  - "tests/migrations/test_operations.py:5885:55     somethingelse                   U       separatedatabaseandstate\", \"somethingelse\""
  - "tests/migrations/test_operations.py:5926:39     iloveponies                     U       options={\"db_table\": \"iloveponies\"},"
  - "tests/migrations/test_operations.py:5934:39     ilovemoreponies                 U       options={\"db_table\": \"ilovemoreponies\"},"
  - "tests/migrations/test_operations.py:5940:39     iloveevenmoreponies             U       options={\"db_table\": \"iloveevenmoreponies\"},"
  - "tests/migrations/test_operations.py:5947:39     somethingelse                   U       options={\"db_table\": \"somethingelse\"},"
  - "tests/migrations/test_operations.py:5953:39     somethingcompletelydifferent    U       options={\"db_table\": \"somethingcompletelydifferent\"},"
  - "tests/migrations/test_operations.py:5966:43     somethingelse                   U       assertNotIn((app_label, \"somethingelse\"), new_state.models"
  - "tests/migrations/test_operations.py:5968:50     somethingcompletelydifferent    U       state.models[app_label, \"somethingcompletelydifferent\"].fields),"
  - "tests/migrations/test_operations.py:5971:43     iloveponiesonies                U       assertNotIn((app_label, \"iloveponiesonies\"), new_state.models"
  - "tests/migrations/test_operations.py:5972:43     ilovemoreponies                 U       assertNotIn((app_label, \"ilovemoreponies\"), new_state.models"
  - "tests/migrations/test_operations.py:5973:43     iloveevenmoreponies             U       assertNotIn((app_label, \"iloveevenmoreponies\"), new_state.models"
  - "tests/migrations/test_operations.py:5974:40     somethingelse                   U       assertTableNotExists(\"somethingelse\")"
  - "tests/migrations/test_operations.py:5975:40     somethingcompletelydifferent    U       assertTableNotExists(\"somethingcompletelydifferent\")"
  - "tests/migrations/test_operations.py:5976:40     ilovemoreponies                 U       assertTableNotExists(\"ilovemoreponies\")"
  - "tests/migrations/test_operations.py:5978:41     iloveponies                     U       self.assertTableExists(\"iloveponies\")"
  - "tests/migrations/test_operations.py:5979:41     iloveevenmoreponies             U       self.assertTableExists(\"iloveevenmoreponies\")"
  - "tests/migrations/test_operations.py:5981:44     iloveponies                     U       assertTableNotExists(\"iloveponies\")"
  - "tests/migrations/test_operations.py:5982:44     iloveevenmoreponies             U       assertTableNotExists(\"iloveevenmoreponies\")"
  - "tests/migrations/test_operations.py:6008:20     igfc                            U       (\"test_igfc_1\", regular, generated"
  - "tests/migrations/test_operations.py:6009:20     igfc                            U       (\"test_igfc_2\", generated_1, regular"
  - "tests/migrations/test_operations.py:6010:20     igfc                            U       (\"test_igfc_3\", generated_1, generated"
  - "tests/migrations/test_operations.py:6035:27     igfcor                          U       app_label = \"test_igfcor\""
  - "tests/migrations/test_operations.py:6083:27     igfpc                           U       app_label = \"test_igfpc\""
  - "tests/migrations/test_operations.py:6181:27     adfagf                          U       app_label = \"test_adfagf\""
  - "tests/migrations/test_operations.py:6243:40     crigsw                          U       state_forwards(\"test_crigsw\", new_state)"
  - "tests/migrations/test_operations.py:6244:49     crigsw                          U       new_state.models[\"test_crigsw\", \"pony\"].name, \"Pony"
  - "tests/migrations/test_operations.py:6245:53     crigsw                          U       new_state.models[\"test_crigsw\", \"pony\"].fields),"
  - "tests/migrations/test_operations.py:6247:41     crigsw                          U       assertTableNotExists(\"test_crigsw_pony\")"
  - "tests/migrations/test_operations.py:6249:47     crigsw                          U       database_forwards(\"test_crigsw\", editor, project_state"
  - "tests/migrations/test_operations.py:6264:63     dligsw                          U       make_test_state(\"test_dligsw\", operation)"
  - "tests/migrations/test_operations.py:6266:41     dligsw                          U       assertTableNotExists(\"test_dligsw_pony\")"
  - "tests/migrations/test_operations.py:6268:47     dligsw                          U       database_forwards(\"test_dligsw\", editor, project_state"
  - "tests/migrations/test_operations.py:6269:41     dligsw                          U       assertTableNotExists(\"test_dligsw_pony\")"
  - "tests/migrations/test_operations.py:6273:23     dligsw                          U       \"test_dligsw\", editor, new_state"
  - "tests/migrations/test_operations.py:6288:63     adfligsw                        U       make_test_state(\"test_adfligsw\", operation)"
  - "tests/migrations/test_operations.py:6290:41     adfligsw                        U       assertTableNotExists(\"test_adfligsw_pony\")"
  - "tests/migrations/test_operations.py:6293:23     adfligsw                        U       \"test_adfligsw\", editor, project_state"
  - "tests/migrations/test_operations.py:6295:41     adfligsw                        U       assertTableNotExists(\"test_adfligsw_pony\")"
  - "tests/migrations/test_operations.py:6299:23     adfligsw                        U       \"test_adfligsw\", editor, new_state"
  - "tests/migrations/test_operations.py:6311:63     adinigsw                        U       make_test_state(\"test_adinigsw\", operation)"
  - "tests/migrations/test_operations.py:6315:23     adinigsw                        U       \"test_adinigsw\", editor, project_state"
  - "tests/migrations/test_operations.py:6318:23     adinigsw                        U       \"test_adinigsw\", editor, new_state"
  - "tests/migrations/test_operations.py:6324:63     rminigsw                        U       make_test_state(\"test_rminigsw\", operation)"
  - "tests/migrations/test_operations.py:6327:23     rminigsw                        U       \"test_rminigsw\", editor, project_state"
  - "tests/migrations/test_operations.py:6330:23     rminigsw                        U       \"test_rminigsw\", editor, new_state"
  - "tests/migrations/test_optimizer.py:91:66        Foozes          U       verbose_name_plural\": \"Foozes\"}"
  - "tests/migrations/test_optimizer.py:96:72        Foozes          U       verbose_name_plural\": \"Foozes\"}"
  - "tests/migrations/test_optimizer.py:211:52       woohoo          U       AlterModelTable(\"Foo\", \"woohoo\"),"
  - "tests/migrations/test_optimizer.py:228:27       owrt            U       def test_create_alter_owrt_delete_model(self):"
  - "tests/migrations/test_optimizer.py:266:26       owrt            U       def test_alter_alter_owrt_model(self):"
  - "tests/migrations/test_optimizer.py:597:40       parentmodel     U       bases=(\"migrations.parentmodel\",),"
  - "tests/migrations/test_optimizer.py:612:40       parentmodel     U       bases=(\"migrations.parentmodel\",),"
  - "tests/migrations/test_optimizer.py:1078:27      owrt            U       def test_create_alter_owrt_field(self):"
  - "tests/migrations/test_optimizer.py:1100:48      Phou            U       RenameModel(\"Foo\", \"Phou\"),"
  - "tests/migrations/test_optimizer.py:1102:41      Phou            U       migrations.RenameModel(\"Phou\", \"Fou\"),"
  - "tests/migrations/test_optimizer.py:1110:23      elidable        U       def test_optimize_elidable_operation(self):"
  - "tests/migrations/test_optimizer.py:1111:9       elidable        U       elidable_operation = operations"
  - "tests/migrations/test_optimizer.py:1112:9       elidable        U       elidable_operation.elidable"
  - "tests/migrations/test_optimizer.py:1112:28      elidable        U       elidable_operation.elidable = True"
  - "tests/migrations/test_optimizer.py:1115:17      elidable        U       elidable_operation,"
  - "tests/migrations/test_optimizer.py:1122:48      Phou            U       RenameModel(\"Foo\", \"Phou\"),"
  - "tests/migrations/test_optimizer.py:1128:22      Phou            U       \"Phou\", [(\"name\", models.CharField"
  - "tests/migrations/test_state.py:117:64       subauthor               U       models[\"migrations\", \"subauthor\"]"
  - "tests/migrations/test_state.py:120:70       foodnomanagers          U       models[\"migrations\", \"foodnomanagers\"]"
  - "tests/migrations/test_state.py:122:28       foodnodefaultmanager    U       \"migrations\", \"foodnodefaultmanager\""
  - "tests/migrations/test_state.py:125:28       foodorderedmanagers     U       \"migrations\", \"foodorderedmanagers\""
  - "tests/migrations/test_state.py:1096:14      modelstate              U       def test_modelstate_get_field_order_wrt"
  - "tests/migrations/test_state.py:1119:14      modelstate              U       def test_modelstate_get_field_no_order_wrt"
  - "tests/migrations/test_state.py:1640:17      rels                    U       comment_rels = project_state.relations"
  - "tests/migrations/test_state.py:1642:38      rels                    U       assertEqual(len(comment_rels), 2)"
  - "tests/migrations/test_state.py:1643:34      rels                    U       assertEqual(comment_rels[\"reviewer\"], new_field"
  - "tests/migrations/test_state.py:1646:38      rels                    U       assertEqual(len(comment_rels), 2)"
  - "tests/migrations/test_state.py:1647:34      rels                    U       assertEqual(comment_rels[\"supervisor\"], new_field"
  - "tests/migrations/test_state.py:1807:15      searchablelocation      U       [\"searchablelocation_ptr\", \"name\", \"bus_routes"
  - "tests/migrations/test_state.py:1820:60      searchablelocation      U       bases, (\"migrations.searchablelocation\",))"
  - "tests/migrations/test_writer.py:323:37      föobár          U       assertSerializedEqual(\"föobár\")"
  - "tests/migrations/test_writer.py:331:41      nbár            U       assertSerializedEqual(\"föo\\nbár\")"
  - "tests/migrations/test_writer.py:339:38      lalalala        U       assertSerializedEqual({\"lalalala\": [\"yeah\", \"no\", \"maybe"
  - "tests/migrations/test_writer.py:683:32      someapp         U       SettingsReference(\"someapp.model\", \"AUTH_USER_MODEL"
  - "tests/migrations/test_writer.py:850:24      frozensets      U       def test_serialize_frozensets(self):"
  - "tests/migrations/test_writer.py:1087:47     keepends        U       output.splitlines(keepends=True)[0], r\"^[^#\\s]"
  - "tests/migrations/test_writer.py:1116:14     enumfield       U       # an enumfield that takes the enum"
  - "tests/model_fields/models.py:79:7           Choiceful       U       class Choiceful(models.Model):"
  - "tests/model_fields/models.py:162:5          nbfield         U       nbfield = models.BooleanField"
  - "tests/model_fields/models.py:444:5          floatf          U       floatf = models.FloatField"
  - "tests/model_fields/test_booleanfield.py:66:46       nbfield             U       llBooleanModel.objects.create(nbfield=True)"
  - "tests/model_fields/test_booleanfield.py:68:26       nbfield             U       self.assertIs(b3.nbfield, True)"
  - "tests/model_fields/test_booleanfield.py:70:46       nbfield             U       llBooleanModel.objects.create(nbfield=False)"
  - "tests/model_fields/test_booleanfield.py:72:26       nbfield             U       self.assertIs(b4.nbfield, False)"
  - "tests/model_fields/test_booleanfield.py:80:9        nbmt                U       nbmt = NullBooleanModel.objects"
  - "tests/model_fields/test_booleanfield.py:80:48       nbfield             U       llBooleanModel.objects.create(nbfield=True)"
  - "tests/model_fields/test_booleanfield.py:81:9        nbmf                U       nbmf = NullBooleanModel.objects"
  - "tests/model_fields/test_booleanfield.py:82:55       nbmt                U       objects.create(bf=bmt, nbf=nbmt)"
  - "tests/model_fields/test_booleanfield.py:83:55       nbmf                U       objects.create(bf=bmf, nbf=nbmf)"
  - "tests/model_fields/test_booleanfield.py:116:28      doesnt (doesn't)    U       def test_boolean_field_doesnt_accept_empty_input(self"
  - "tests/model_fields/test_booleanfield.py:126:9       nullboolean         U       nullboolean = NullBooleanModel(nbfield"
  - "tests/model_fields/test_booleanfield.py:127:9       nullboolean         U       nullboolean.full_clean()"
  - "tests/model_fields/test_datetimefield.py:32:9           datetim     U       datetim = datetime.datetime"
  - "tests/model_fields/test_datetimefield.py:34:48          datetim     U       objects.create(d=dat, dt=datetim, t=tim)"
  - "tests/model_fields/test_datetimefield.py:38:34          datetim     U       assertEqual(obj.dt, datetim)"
  - "tests/model_fields/test_durationfield.py:55:70          durationmodel       U       model\": \"model_fields.durationmodel\", '"
  - "tests/model_fields/test_integerfield.py:273:51      intput      U       raises_error_on_invalid_intput(self):"
  - "tests/model_fields/test_jsonfield.py:170:60         jsonmodel               U       model\": \"model_fields.jsonmodel\", \"pk\": null}]'"
  - "tests/model_fields/test_jsonfield.py:197:42         nullablejsonmodel       U       model=\"model_fields.nullablejsonmodel\">'"
  - "tests/model_fields/test_uuid.py:239:33      uuidmodel               U       model\": \"model_fields.uuidmodel\", \"pk\": null}]'"
  - "tests/model_fields/test_uuid.py:243:33      nullableuuidmodel       U       model\": \"model_fields.nullableuuidmodel\", \"pk\": null}]'"
  - "tests/model_fields/test_uuid.py:330:34      uuidchild               U       assertIsInstance(gc.uuidchild_ptr_id, uuid.UUID)"
  - "tests/model_fields/test_uuid.py:332:34      uuidchild               U       assertIsInstance(gc.uuidchild_ptr_id, uuid.UUID)"
  - "tests/model_fields/tests.py:12:5        Choiceful       U       Choiceful,"
  - "tests/model_fields/tests.py:77:9        klass           U       klass = forms.TypedMultipleChoiceFi"
  - "tests/model_fields/tests.py:78:66       klass           U       formfield(choices_form_class=klass), klass)"
  - "tests/model_fields/tests.py:78:74       klass           U       choices_form_class=klass), klass)"
  - "tests/model_fields/tests.py:155:26      Choiceful       U       cls.no_choices = Choiceful._meta.get_field(\"no"
  - "tests/model_fields/tests.py:156:29      Choiceful       U       cls.empty_choices = Choiceful._meta.get_field(\"empty"
  - "tests/model_fields/tests.py:157:34      Choiceful       U       empty_choices_bool = Choiceful._meta.get_field(\"empty"
  - "tests/model_fields/tests.py:158:34      Choiceful       U       empty_choices_text = Choiceful._meta.get_field(\"empty"
  - "tests/model_forms/models.py:387:7       Colourful       U       class ColourfulItem(models.Model):"
  - "tests/model_forms/models.py:389:5       colours         U       colours = models.ManyToManyField"
  - "tests/model_forms/models.py:470:7       UUIDPK          U       class UUIDPK(models.Model):"
  - "tests/model_forms/test_modelchoicefield.py:196:14       deepcopies                  U       def test_deepcopies_widget(self):"
  - "tests/model_forms/test_modelchoicefield.py:277:23       multiplemodelchoicefield    U       def test_disabled_multiplemodelchoicefield(self):"
  - "tests/model_forms/test_uuid.py:5:21         UUIDPK      U       from .models import UUIDPK"
  - "tests/model_forms/test_uuid.py:8:7          UUIDPK      U       class UUIDPKForm(forms.ModelForm"
  - "tests/model_forms/test_uuid.py:10:17        UUIDPK      U       model = UUIDPK"
  - "tests/model_forms/test_uuid.py:16:16        UUIDPK      U       form = UUIDPKForm({})"
  - "tests/model_forms/test_uuid.py:18:20        UUIDPK      U       msg = \"The UUIDPK could not be created"
  - "tests/model_forms/tests.py:43:5         Colourful           U       ColourfulItem,"
  - "tests/model_forms/tests.py:164:7        Royko               U       class RoykoForm(forms.ModelForm"
  - "tests/model_forms/tests.py:504:43       Lockridge           U       WriterForm({\"name\": \"Richard Lockridge\"})"
  - "tests/model_forms/tests.py:601:14       mixmodel            U       def test_mixmodel_form(self):"
  - "tests/model_forms/tests.py:687:14       subclassmeta        U       def test_subclassmeta_form(self):"
  - "tests/model_forms/tests.py:713:14       orderfields         U       def test_orderfields_form(self):"
  - "tests/model_forms/tests.py:728:14       orderfields         U       def test_orderfields2_form(self):"
  - "tests/model_forms/tests.py:853:22       splitdatetime       U       def test_default_splitdatetime_field(self):"
  - "tests/model_forms/tests.py:966:19       describedby         U       'aria-describedby=\"id_slug_helptext\" required"
  - "tests/model_forms/tests.py:1064:36      notblank            U       notrequired_overrides_notblank(self):"
  - "tests/model_forms/tests.py:1076:55      Royko               U       objects.create(name=\"Mike Royko\")"
  - "tests/model_forms/tests.py:1241:14      explicitpk          U       def test_explicitpk_unspecified(self):"
  - "tests/model_forms/tests.py:1246:14      explicitpk          U       def test_explicitpk_unique(self):"
  - "tests/model_forms/tests.py:1478:16      royko               U       self.w_royko = Writer.objects.create"
  - "tests/model_forms/tests.py:1478:57      Royko               U       objects.create(name=\"Mike Royko\")"
  - "tests/model_forms/tests.py:1539:37      Royko               U       option value=\"%s\">Mike Royko</option>"
  - "tests/model_forms/tests.py:1555:43      royko               U       woodward.pk, self.w_royko.pk, self.c1.pk, self"
  - "tests/model_forms/tests.py:1560:13      Royko               U       f = RoykoForm(auto_id=False, instance"
  - "tests/model_forms/tests.py:1560:54      royko               U       False, instance=self.w_royko)"
  - "tests/model_forms/tests.py:1572:27      royko               U       writer=self.w_royko,"
  - "tests/model_forms/tests.py:1609:43      royko               U       woodward.pk, self.w_royko.pk, self.c1.pk, self"
  - "tests/model_forms/tests.py:3041:27      Colourful           U       multicolor_item = ColourfulItem.objects.create("
  - "tests/model_forms/tests.py:3042:25      colours             U       multicolor_item.colours.add(blue, red)"
  - "tests/model_forms/tests.py:3043:20      Colourful           U       red_item = ColourfulItem.objects.create("
  - "tests/model_forms/tests.py:3044:18      colours             U       red_item.colours.add(red)"
  - "tests/model_forms/tests.py:3048:54      colours             U       c.name for c in obj.colours.all())"
  - "tests/model_forms/tests.py:3050:39      Colourful           U       ColorModelChoiceField(ColourfulItem.objects.prefetch"
  - "tests/model_forms/tests.py:3050:79      colours             U       objects.prefetch_related(\"colours\"))"
  - "tests/model_forms/tests.py:3131:15      Colourful           U       class ColourfulItemForm(forms.ModelForm"
  - "tests/model_forms/tests.py:3145:31      colours             U       <p><label for=\"id_colours\">Colours:</label>"
  - "tests/model_forms/tests.py:3145:40      Colours             U       label for=\"id_colours\">Colours:</label>"
  - "tests/model_forms/tests.py:3376:13      threepwood          U       cls.threepwood = Character.objects"
  - "tests/model_forms/tests.py:3377:23      threepwood          U       username=\"threepwood\","
  - "tests/model_forms/tests.py:3389:9       stumpjokeform       U       stumpjokeform = StumpJokeForm()"
  - "tests/model_forms/tests.py:3391:13      stumpjokeform       U       stumpjokeform.fields[\"most_recently"
  - "tests/model_forms/tests.py:3391:74      threepwood          U       fooled\"].queryset, [self.threepwood]"
  - "tests/model_forms/tests.py:3398:9       stumpjokeform       U       stumpjokeform = StumpJokeForm()"
  - "tests/model_forms/tests.py:3400:13      stumpjokeform       U       stumpjokeform.fields[\"most_recently"
  - "tests/model_forms/tests.py:3400:74      threepwood          U       fooled\"].queryset, [self.threepwood]"
  - "tests/model_forms/tests.py:3413:77      threepwood          U       today\"].queryset, [self.threepwood])"
  - "tests/model_forms/tests.py:3506:14      baseform            U       def test_baseform_with_widgets_in_meta"
  - "tests/model_formsets_regress/tests.py:122:46        Rossum      U       0-name\": \"Guido Van Rossum\","
  - "tests/model_formsets_regress/tests.py:135:61        Rossum      U       \"name\"], \"Guido Van Rossum\")"
  - "tests/model_formsets_regress/tests.py:162:41        Cleese      U       manager_set-1-name\": \"John Cleese\","
  - "tests/model_formsets_regress/tests.py:168:56        Cleese      U       manager[0][\"name\"], \"John Cleese\")"
  - "tests/model_formsets_regress/tests.py:241:9         efnet       U       efnet = Network.objects.create"
  - "tests/model_formsets_regress/tests.py:242:68        efnet       U       irc.he.net\", network=efnet)"
  - "tests/model_formsets_regress/tests.py:257:9         dalnet      U       dalnet = Network.objects.create"
  - "tests/model_formsets_regress/tests.py:258:46        dalnet      U       HostFormSet(data, instance=dalnet, save_as_new=True)"
  - "tests/model_formsets_regress/tests.py:263:13        dalnet      U       dalnet.host_set.order_by(\"hostname"
  - "tests/model_formsets_regress/tests.py:273:46        bibi        U       objects.create(username=\"bibi\", serial=1)"
  - "tests/model_formsets_regress/tests.py:310:39        bibi        U       objects.create(username=\"bibi\", serial=1)"
  - "tests/model_formsets_regress/tests.py:313:65        bibi        U       initial[\"username\"], \"bibi\")"
  - "tests/model_formsets_regress/tests.py:540:7         Redelete    U       class RedeleteTests(TestCase):"
  - "tests/model_formsets/models.py:225:7        UUIDPK      U       class UUIDPKParent(models.Model)"
  - "tests/model_formsets/models.py:230:7        UUIDPK      U       class UUIDPKChild(models.Model):"
  - "tests/model_formsets/models.py:233:32       UUIDPK      U       = models.ForeignKey(UUIDPKParent, models.CASCADE"
  - "tests/model_formsets/models.py:238:32       UUIDPK      U       = models.ForeignKey(UUIDPKParent, models.CASCADE"
  - "tests/model_formsets/models.py:241:20       UUIDPK      U       class AutoPKChildOfUUIDPKParent(models.Model)"
  - "tests/model_formsets/test_uuid.py:5:18          UUIDPK                  U       AutoPKChildOfUUIDPKParent,"
  - "tests/model_formsets/test_uuid.py:10:5          UUIDPK                  U       UUIDPKChild,"
  - "tests/model_formsets/test_uuid.py:11:5          UUIDPK                  U       UUIDPKChildOfAutoPKParent,"
  - "tests/model_formsets/test_uuid.py:12:5          UUIDPK                  U       UUIDPKParent,"
  - "tests/model_formsets/test_uuid.py:25:41         UUIDPK                  U       inlineformset_factory(UUIDPKParent, UUIDPKChild,"
  - "tests/model_formsets/test_uuid.py:37:18         uuidpkchild             U       \"uuidpkchild_set-TOTAL_FORMS\": 3"
  - "tests/model_formsets/test_uuid.py:38:18         uuidpkchild             U       \"uuidpkchild_set-INITIAL_FORMS\":"
  - "tests/model_formsets/test_uuid.py:39:18         uuidpkchild             U       \"uuidpkchild_set-MAX_NUM_FORMS\":"
  - "tests/model_formsets/test_uuid.py:40:18         uuidpkchild             U       \"uuidpkchild_set-0-name\": \"Foo\","
  - "tests/model_formsets/test_uuid.py:41:18         uuidpkchild             U       \"uuidpkchild_set-1-name\": \"\","
  - "tests/model_formsets/test_uuid.py:107:18        childrelatedviaak       U       \"childrelatedviaak_set-TOTAL_FORMS\": 3"
  - "tests/model_formsets/test_uuid.py:108:18        childrelatedviaak       U       \"childrelatedviaak_set-INITIAL_FORMS\":"
  - "tests/model_formsets/test_uuid.py:109:18        childrelatedviaak       U       \"childrelatedviaak_set-MAX_NUM_FORMS\":"
  - "tests/model_formsets/test_uuid.py:110:18        childrelatedviaak       U       \"childrelatedviaak_set-0-name\": \"Test\""
  - "tests/model_formsets/test_uuid.py:111:18        childrelatedviaak       U       \"childrelatedviaak_set-1-name\": \"\","
  - "tests/model_formsets/tests.py:78:46         unvalid             U       untouched and two new unvalid forms"
  - "tests/model_formsets/tests.py:496:48        Mayakovsky          U       the name to \"Vladimir Mayakovsky\" just to be a jerk."
  - "tests/model_formsets/tests.py:498:41        Mayakovsky          U       author.name = \"Vladimir Mayakovsky\""
  - "tests/model_formsets/tests.py:521:48        Mayakovsky          U       poet1.name, \"Vladimir Mayakovsky\")"
  - "tests/model_formsets/tests.py:522:48        Mayakovsky          U       poet2.name, \"Vladimir Mayakovsky\")"
  - "tests/model_formsets/tests.py:682:38        Fleurs              U       book_set-0-title\": \"Les Fleurs du Mal\","
  - "tests/model_formsets/tests.py:693:61        Fleurs              U       objects.get(title=\"Les Fleurs du Mal\"))"
  - "tests/model_formsets/tests.py:711:25        Fleurs              U       'value=\"Les Fleurs du Mal\" maxlength=\""
  - "tests/model_formsets/tests.py:747:38        Fleurs              U       book_set-0-title\": \"Les Fleurs du Mal\","
  - "tests/model_formsets/tests.py:748:38        Paradis             U       book_set-1-title\": \"Les Paradis Artificiels\","
  - "tests/model_formsets/tests.py:748:46        Artificiels         U       title\": \"Les Paradis Artificiels\","
  - "tests/model_formsets/tests.py:758:61        Paradis             U       objects.get(title=\"Les Paradis Artificiels\"))"
  - "tests/model_formsets/tests.py:758:69        Artificiels         U       get(title=\"Les Paradis Artificiels\"))"
  - "tests/model_formsets/tests.py:760:32        Paradis             U       As you can see, 'Les Paradis Artificiels' is now"
  - "tests/model_formsets/tests.py:760:40        Artificiels         U       can see, 'Les Paradis Artificiels' is now a book belonging"
  - "tests/model_formsets/tests.py:780:42        Fleurs              U       book_set-0-title\": \"Les Fleurs du Mal\","
  - "tests/model_formsets/tests.py:782:42        Paradis             U       book_set-1-title\": \"Les Paradis Artificiels\","
  - "tests/model_formsets/tests.py:782:50        Artificiels         U       title\": \"Les Paradis Artificiels\","
  - "tests/model_formsets/tests.py:798:44        Paradis             U       assertEqual(book2.title, \"Les Paradis Artificiels\")"
  - "tests/model_formsets/tests.py:798:52        Artificiels         U       title, \"Les Paradis Artificiels\")"
  - "tests/model_formsets/tests.py:836:32        bookwithcustompk    U       '<p><label for=\"id_bookwithcustompk_set-0-my_pk\">My pk:"
  - "tests/model_formsets/tests.py:837:28        bookwithcustompk    U       '<input id=\"id_bookwithcustompk_set-0-my_pk\" type=\"number"
  - "tests/model_formsets/tests.py:838:20        bookwithcustompk    U       'name=\"bookwithcustompk_set-0-my_pk\" step=\""
  - "tests/model_formsets/tests.py:839:32        bookwithcustompk    U       '<p><label for=\"id_bookwithcustompk_set-0-title\">Title:"
  - "tests/model_formsets/tests.py:840:28        bookwithcustompk    U       '<input id=\"id_bookwithcustompk_set-0-title\" type=\"text"
  - "tests/model_formsets/tests.py:981:51        Mayakovsky          U       create(name=\"Vladimir Mayakovsky\")"
  - "tests/model_formsets/tests.py:1055:49       mondes              U       title\": \"Revue des deux mondes\","
  - "tests/model_formsets/tests.py:1098:49       mondes              U       title\": \"Revue des deux mondes\","
  - "tests/model_formsets/tests.py:1165:50       Giordanos           U       objects.create(pk=1, name=\"Giordanos\", city=\"Chicago\")"
  - "tests/model_formsets/tests.py:1208:46       Giordanos           U       owner1.place.name, \"Giordanos\")"
  - "tests/model_formsets/tests.py:1260:46       Giordanos           U       owner2.place.name, \"Giordanos\")"
  - "tests/model_formsets/tests.py:1271:46       Giordanos           U       value=\"%d\">Joe Perry at Giordanos</option>'"
  - "tests/model_formsets/tests.py:1272:47       Giordanos           U       value=\"%d\">Jack Berry at Giordanos</option>'"
  - "tests/model_formsets/tests.py:1860:33       rawr                U       \"form-1-subtitle\": \"rawr\","
  - "tests/model_formsets/tests.py:1887:33       rawr                U       \"form-1-subtitle\": \"rawr\","
  - "tests/model_formsets/tests.py:1906:33       rawr                U       \"form-0-subtitle\": \"rawr\","
  - "tests/model_formsets/tests.py:1910:33       rawr                U       \"form-1-subtitle\": \"rawr\","
  - "tests/model_formsets/tests.py:2088:29       Parth               U       \"form-0-name\": \"Parth Patil\","
  - "tests/model_formsets/tests.py:2088:35       Patil               U       form-0-name\": \"Parth Patil\","
  - "tests/model_indexes/tests.py:192:36         suff            U       field_index.suffix = \"suff\""
  - "tests/model_indexes/tests.py:299:60         childmodel      U       idx\", \"model_indexes_childmodel1_idx\"],"
  - "tests/model_indexes/tests.py:304:60         childmodel      U       idx\", \"model_indexes_childmodel2_idx\"],"
  - "tests/model_inheritance_regress/tests.py:50:63          CORBA                   U       erialization, but any sort of CORBA style"
  - "tests/model_inheritance_regress/tests.py:305:11         mchildren               U       m2mchildren = list(M2MChild.objects"
  - "tests/model_inheritance_regress/tests.py:306:28         mchildren               U       self.assertEqual(m2mchildren, [])"
  - "tests/model_inheritance_regress/tests.py:339:9          derivedm                U       derivedm1 = DerivedM.objects"
  - "tests/model_inheritance_regress/tests.py:344:26         derivedm                U       self.assertEqual(derivedm1.customPK, 44)"
  - "tests/model_inheritance_regress/tests.py:345:26         derivedm                U       self.assertEqual(derivedm1.base_name, \"b1\")"
  - "tests/model_inheritance_regress/tests.py:346:26         derivedm                U       self.assertEqual(derivedm1.derived_name, \"d1\""
  - "tests/model_inheritance_regress/tests.py:347:9          derivedms               U       derivedms = list(DerivedM.objects"
  - "tests/model_inheritance_regress/tests.py:348:26         derivedms               U       self.assertEqual(derivedms, [derivedm1])"
  - "tests/model_inheritance_regress/tests.py:348:38         derivedm                U       assertEqual(derivedms, [derivedm1])"
  - "tests/model_inheritance_regress/tests.py:399:27         birthdayparty           U       parties = list(p1.birthdayparty_set.all())"
  - "tests/model_inheritance_regress/tests.py:410:39         messybachelorparty      U       assertFalse(hasattr(p2, \"messybachelorparty_set\"))"
  - "tests/model_inheritance_regress/tests.py:520:19         Nobu                    U       name=\"Nobu\", serves_hot_dogs=True"
  - "tests/model_inheritance_regress/tests.py:580:41         italianrestaurant       U       assertEqual(restaurant.italianrestaurant, italian_restaurant"
  - "tests/model_inheritance_regress/tests.py:590:41         italianrestaurant       U       assertEqual(restaurant.italianrestaurant, italian_restaurant"
  - "tests/model_inheritance_regress/tests.py:600:41         italianrestaurant       U       assertEqual(restaurant.italianrestaurant, italian_restaurant"
  - "tests/model_inheritance/test_abstract_inheritance.py:149:52         concreteparent      U       model 'model_inheritance.concreteparent'.\","
  - "tests/model_inheritance/test_abstract_inheritance.py:352:47         concretebase        U       model 'model_inheritance.concretebase'.\","
  - "tests/model_inheritance/test_abstract_inheritance.py:370:36         concreteparent      U       Auto-generated field 'concreteparent_ptr' in class 'Descendant"
  - "tests/model_inheritance/test_abstract_inheritance.py:377:17         concreteparent      U       concreteparent_ptr = models.CharField"
  - "tests/model_inheritance/test_abstract_inheritance.py:444:19         concretemodel       U       (\"concretemodel_ptr\", models.OneToOneField"
  - "tests/model_inheritance/test_abstract_inheritance.py:446:19         concretemodel       U       (\"concretemodel2_ptr\", models.OneToOneField"
  - "tests/model_inheritance/tests.py:77:42          italianrestaurant       U       chef, chef_id, id, italianrestaurant, lot, name, \""
  - "tests/model_inheritance/tests.py:142:14         custompk                U       def test_custompk_m2m(self):"
  - "tests/model_inheritance/tests.py:144:50         foof                    U       objects.create(title=\"foof\"))"
  - "tests/model_inheritance/tests.py:150:61         foof                    U       query values (title foof not"
  - "tests/model_inheritance/tests.py:165:23         Ristorante              U       name=\"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:165:34         Miron                   U       name=\"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:170:38         italianrestaurant       U       italian_restaurant_child.italianrestaurant_ptr.place_ptr,"
  - "tests/model_inheritance/tests.py:174:38         italianrestaurant       U       italian_restaurant_child.italianrestaurant_ptr.restaurant_ptr,"
  - "tests/model_inheritance/tests.py:181:58         Ristorante              U       restaurant_child.name, \"Ristorante Miron\")"
  - "tests/model_inheritance/tests.py:181:69         Miron                   U       child.name, \"Ristorante Miron\")"
  - "tests/model_inheritance/tests.py:246:40         multitable              U       doesn't transfer in multitable inheritance."
  - "tests/model_inheritance/tests.py:360:19         Ristorante              U       name=\"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:360:30         Miron                   U       name=\"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:373:18         Ristorante              U       \"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:373:29         Miron                   U       \"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:384:18         Ristorante              U       \"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:384:29         Miron                   U       \"Ristorante Miron\","
  - "tests/model_inheritance/tests.py:420:67         italianrestaurant       U       Ristorante Miron\").restaurant.italianrestaurant,"
  - "tests/model_inheritance/tests.py:424:61         italianrestaurant       U       \"Ristorante Miron\").italianrestaurant,"
  - "tests/model_inheritance/tests.py:428:46         nonrelated              U       child_one_to_one_link_on_nonrelated_objects(self):"
  - "tests/model_meta/results.py:332:15      personthroughproxysubclass      U       (\"personthroughproxysubclass\", None),"
  - "tests/model_meta/results.py:350:15      personthroughproxysubclass      U       (\"personthroughproxysubclass\", Person),"
  - "tests/model_meta/results.py:436:15      personthroughproxysubclass      U       (\"personthroughproxysubclass\", None),"
  - "tests/model_meta/results.py:474:15      personthroughproxysubclass      U       (\"personthroughproxysubclass\", Person),"
  - "tests/model_meta/results.py:534:15      personthroughproxysubclass      U       (\"personthroughproxysubclass\", None),"
  - "tests/model_meta/results.py:890:37      abstractperson                  U       AbstractPerson: \"model_meta.abstractperson\","
  - "tests/model_meta/tests.py:286:24        abstractperson      U       all_models_but_abstractperson = ("
  - "tests/model_meta/tests.py:289:33        abstractperson      U       m in all_models_but_abstractperson:"
  - "tests/model_options/models/tablespaces.py:28:35         scientistref    U       table = \"model_options_scientistref\""
  - "tests/model_options/models/tablespaces.py:42:35         articleref      U       table = \"model_options_articleref\""
  - "tests/model_options/models/tablespaces.py:50:41         articleref      U       table = \"model_options_articleref_authors\""
  - "tests/model_options/models/tablespaces.py:53:43         articleref      U       table = \"model_options_articleref_reviewers\""
  - "tests/model_package/models/__init__.py:1:30         subpackages     U       all the models from subpackages"
  - "tests/model_package/tests.py:17:50          subpackages     U       : models split into subpackages still get M2M"
  - "tests/model_regress/models.py:18:33         ngstr       U       verbose_name = \"\\xc3\\x85ngstr\\xc3\\xb6m's Articles"
  - "tests/model_regress/models.py:54:5          pkey        U       pkey = models.IntegerField"
  - "tests/model_regress/models.py:58:79         pkey        U       unique=True, to_field=\"pkey\")"
  - "tests/model_regress/tests.py:223:36         pkey            U       Model1.objects.create(pkey=1000)"
  - "tests/model_regress/tests.py:234:15         metaclasses     U       Model metaclasses have access to the class"
  - "tests/modeladmin/test_checks.py:1755:30     onetoone    U       test_autocomplete_is_onetoone(self):"
  - "tests/modeladmin/tests.py:131:29        onetoone        U       test_lookup_allowed_onetoone(self):"
  - "tests/modeladmin/tests.py:147:28        employeeinfo    U       \"employee__employeeinfo__description\","
  - "tests/modeladmin/tests.py:155:28        employeeinfo    U       \"employee__employeeinfo__description\", \"test"
  - "tests/modeladmin/tests.py:740:9         cmafa           U       cmafa = cma.get_form(request"
  - "tests/modeladmin/tests.py:742:31        cmafa           U       self.assertEqual(type(cmafa.base_fields[\"main_band"
  - "tests/modeladmin/tests.py:744:18        cmafa           U       list(cmafa.base_fields[\"main_band"
  - "tests/modeladmin/tests.py:748:31        cmafa           U       self.assertEqual(type(cmafa.base_fields[\"opening"
  - "tests/modeladmin/tests.py:750:18        cmafa           U       list(cmafa.base_fields[\"opening"
  - "tests/modeladmin/tests.py:883:59        akash           U       objects.create(username=\"akash\")"
  - "tests/modeladmin/tests.py:891:19        Mohiner         U       name=\"Mohiner Ghoraguli\","
  - "tests/modeladmin/tests.py:891:27        Ghoraguli       U       name=\"Mohiner Ghoraguli\","
  - "tests/modeladmin/tests.py:951:59        akash           U       objects.create(username=\"akash\")"
  - "tests/modeladmin/tests.py:959:19        Mohiner         U       name=\"Mohiner Ghoraguli\","
  - "tests/modeladmin/tests.py:959:27        Ghoraguli       U       name=\"Mohiner Ghoraguli\","
  - "tests/modeladmin/tests.py:1199:30       anotherapp      U       ma.opts.app_label = \"anotherapp\""
  - "tests/multiple_database/tests.py:162:51         Alchin      U       objects.create(name=\"Marty Alchin\")"
  - "tests/multiple_database/tests.py:184:46         Alchin      U       authors__name=\"Marty Alchin\")"
  - "tests/multiple_database/tests.py:192:46         Alchin      U       authors__name=\"Marty Alchin\")"
  - "tests/multiple_database/tests.py:215:11         Reget       U       # Reget the objects to clear"
  - "tests/multiple_database/tests.py:428:51         Alchin      U       objects.create(name=\"Marty Alchin\")"
  - "tests/multiple_database/tests.py:438:44         Alchin      U       assign \"<Person: Marty Alchin>\": the current database"
  - "tests/multiple_database/tests.py:541:53         Vilches     U       create(name=\"George Vilches\")"
  - "tests/multiple_database/tests.py:557:51         Vilches     U       editor.name, \"George Vilches\")"
  - "tests/multiple_database/tests.py:569:22         Vilches     U       [\"George Vilches\"],"
  - "tests/multiple_database/tests.py:597:11         Reget       U       # Reget the objects to clear"
  - "tests/multiple_database/tests.py:847:11         Reget       U       # Reget the objects to clear"
  - "tests/multiple_database/tests.py:982:11         Reget       U       # Reget the objects to clear"
  - "tests/nested_foreign_keys/tests.py:75:60        screeningnullfk     U       objects.select_related(\"screeningnullfk\")), 3)"
  - "tests/nested_foreign_keys/tests.py:76:60        screeningnullfk     U       objects.select_related(\"screeningnullfk__movie\")), 3)"
  - "tests/nested_foreign_keys/tests.py:79:52        screeningnullfk     U       Event.objects.values(\"screeningnullfk__pk\")), 3)"
  - "tests/nested_foreign_keys/tests.py:80:52        screeningnullfk     U       Event.objects.values(\"screeningnullfk__movie__pk\")), 3)"
  - "tests/nested_foreign_keys/tests.py:81:52        screeningnullfk     U       Event.objects.values(\"screeningnullfk__movie__title\")), 3"
  - "tests/null_queries/tests.py:72:9        outerb      U       outerb = OuterB.objects.create"
  - "tests/null_queries/tests.py:75:80       outerb      U       inner__isnull=False), [outerb])"
  - "tests/one_to_one/models.py:68:17        Multimodel      U       return \"Multimodel %s\" % self.name"
  - "tests/one_to_one/tests.py:146:34        multimodel      U       assertEqual(repr(o1.multimodel), \"<MultiModel: Multimodel"
  - "tests/one_to_one/tests.py:146:61        Multimodel      U       multimodel), \"<MultiModel: Multimodel x1>\")"
  - "tests/order_with_respect_to/base_tests.py:20:25         Beatle      U       text=\"Which Beatle starts with the letter"
  - "tests/pagination/tests.py:289:43        fghijk      U       assertEqual(\"\".join(page2), \"fghijk\")"
  - "tests/pagination/tests.py:290:53        kjihgf      U       join(reversed(page2)), \"kjihgf\")"
  - "tests/postgres_tests/array_default_migrations/0002_integerarraymodel_field_2.py:12:25       integerarraydefaultmodel    U       model_name=\"integerarraydefaultmodel\","
  - "tests/postgres_tests/migrations/0001_setup_extensions.py:35:31          ossp    U       CreateExtension(\"uuid-ossp\"),"
  - "tests/postgres_tests/migrations/0002_create_test_models.py:438:19       bigints     U       (\"bigints\", BigIntegerRangeField"
  - "tests/postgres_tests/models.py:134:5        bigints     U       bigints = BigIntegerRangeField"
  - "tests/postgres_tests/test_aggregates.py:53:13       aggs                U       cls.aggs = AggregateTestModel"
  - "tests/postgres_tests/test_aggregates.py:255:9       aggr                U       aggr1 = AggregateTestModel"
  - "tests/postgres_tests/test_aggregates.py:256:9       aggr                U       aggr2 = AggregateTestModel"
  - "tests/postgres_tests/test_aggregates.py:257:52      aggr                U       create(related_field=aggr1, int1=1, int2=0)"
  - "tests/postgres_tests/test_aggregates.py:258:52      aggr                U       create(related_field=aggr1, int1=2, int2=0)"
  - "tests/postgres_tests/test_aggregates.py:259:52      aggr                U       create(related_field=aggr2, int1=3, int2=0)"
  - "tests/postgres_tests/test_aggregates.py:283:33      stattestmodel       U       array=ArrayAgg(\"stattestmodel__int1\", filter=Q(stattestmode"
  - "tests/postgres_tests/test_aggregates.py:283:64      stattestmodel       U       tattestmodel__int1\", filter=Q(stattestmodel__int2=0))"
  - "tests/postgres_tests/test_aggregates.py:305:33      stattestmodel       U       array=ArrayAgg(\"stattestmodel__int1\", filter=Q(stattestmode"
  - "tests/postgres_tests/test_aggregates.py:305:64      stattestmodel       U       tattestmodel__int1\", filter=Q(stattestmodel__int2=0))"
  - "tests/postgres_tests/test_aggregates.py:535:22      hotelreservation    U       \"hotelreservation__requirements\","
  - "tests/postgres_tests/test_aggregates.py:536:32      hotelreservation    U       ordering=\"-hotelreservation__start\","
  - "tests/postgres_tests/test_aggregates.py:564:27      stattestmodel       U       ArrayAgg(\"stattestmodel__int1\", ordering=\"-stattestmo"
  - "tests/postgres_tests/test_aggregates.py:601:50      aggs                U       tTestModel(related_field=self.aggs[0], int1=0, int2=5)"
  - "tests/postgres_tests/test_aggregates.py:602:50      aggs                U       tTestModel(related_field=self.aggs[0], int1=1, int2=4)"
  - "tests/postgres_tests/test_aggregates.py:603:50      aggs                U       tTestModel(related_field=self.aggs[0], int1=2, int2=3)"
  - "tests/postgres_tests/test_aggregates.py:654:19      aggs                U       [self.aggs[0]],"
  - "tests/postgres_tests/test_aggregates.py:657:23      isnt (isn't)        U       def test_ordering_isnt_cleared_for_array_subquery"
  - "tests/postgres_tests/test_aggregates.py:858:19      avgx                U       def test_regr_avgx_general(self):"
  - "tests/postgres_tests/test_aggregates.py:862:19      avgy                U       def test_regr_avgy_general(self):"
  - "tests/postgres_tests/test_aggregates.py:905:19      avgx                U       def test_regr_avgx_with_related_obj_and"
  - "tests/postgres_tests/test_apps.py:17:60         oids    U       signals import get_hstore_oids"
  - "tests/postgres_tests/test_apps.py:34:20         oids    U       get_hstore_oids.cache_clear()"
  - "tests/postgres_tests/test_array.py:320:19       mogrify                     U       # psycopg mogrify method that generates"
  - "tests/postgres_tests/test_array.py:627:13       subarray                    U       subarray=F(\"field\")[:1]"
  - "tests/postgres_tests/test_array.py:628:32       subarray                    U       filter(field__len=F(\"subarray__len\"))"
  - "tests/postgres_tests/test_array.py:947:38       integerarraydefaultmodel    U       name = \"postgres_tests_integerarraydefaultmodel\""
  - "tests/postgres_tests/test_array.py:966:38       chartextarrayindexmodel     U       name = \"postgres_tests_chartextarrayindexmodel\""
  - "tests/postgres_tests/test_array.py:998:35       integerarraymodel           U       model\": \"postgres_tests.integerarraymodel\", \"pk\": null}]'"
  - "tests/postgres_tests/test_array.py:1118:32      defg                        U       field.clean(\"abc,c,defg\")"
  - "tests/postgres_tests/test_array.py:1141:34      defg                        U       \"nth\": 3, \"value\": \"defg\", \"limit_value\": 2,"
  - "tests/postgres_tests/test_array.py:1331:39      defg                        U       clean([\"abc\", \"c\", \"defg\"])"
  - "tests/postgres_tests/test_array.py:1342:14      splitarraywidget            U       def test_splitarraywidget_value_omitted_from_data"
  - "tests/postgres_tests/test_constraints.py:48:46          indclass        U       i on oc.oid = ANY(i.indclass)"
  - "tests/postgres_tests/test_constraints.py:94:31          daterange       U       test_check_constraint_daterange_contains(self):"
  - "tests/postgres_tests/test_constraints.py:216:48         Bedemir's       U       setting__contains=\"Sir Bedemir's Castle\"),"
  - "tests/postgres_tests/test_constraints.py:263:65         Bedemir's       U       ScEnE 10\", setting=\"Sir Bedemir's Castle\")"
  - "tests/postgres_tests/test_constraints.py:264:60         Bedemir's       U       Scene 5\", setting=\"Sir Bedemir's Castle\")"
  - "tests/postgres_tests/test_constraints.py:269:61         Bedemir's       U       ScEnE 10\", setting=\"Sir Bedemir's Castle\")"
  - "tests/postgres_tests/test_constraints.py:610:25         SPGIST          U       index_type=\"SPGIST\","
  - "tests/postgres_tests/test_constraints.py:625:32         SPGIST          U       \"index_type\": \"SPGIST\","
  - "tests/postgres_tests/test_constraints.py:803:25         TSTZRANGE       U       function = \"TSTZRANGE\""
  - "tests/postgres_tests/test_constraints.py:1034:29        spgist          U       test_range_adjacent_spgist_include(self):"
  - "tests/postgres_tests/test_constraints.py:1035:42        spgist          U       name = \"ints_adjacent_spgist_include\""
  - "tests/postgres_tests/test_constraints.py:1042:25        spgist          U       index_type=\"spgist\","
  - "tests/postgres_tests/test_constraints.py:1070:29        spgist          U       test_range_adjacent_spgist_include_condition(self"
  - "tests/postgres_tests/test_constraints.py:1071:42        spgist          U       name = \"ints_adjacent_spgist_include_condition\""
  - "tests/postgres_tests/test_hstore.py:81:44       Tigr            U       HStoreModel(field={\"cat\": \"TigrOu\", \"breed\": \"birman"
  - "tests/postgres_tests/test_hstore.py:81:63       birman          U       \"TigrOu\", \"breed\": \"birman\"}),"
  - "tests/postgres_tests/test_hstore.py:82:44       minou           U       HStoreModel(field={\"cat\": \"minou\", \"breed\": \"ragdoll"
  - "tests/postgres_tests/test_hstore.py:82:62       ragdoll         U       \"minou\", \"breed\": \"ragdoll\"}),"
  - "tests/postgres_tests/test_hstore.py:303:42      hstoremodel     U       model\": \"postgres_tests.hstoremodel\","
  - "tests/postgres_tests/test_hstore.py:416:35      aira            U       field.prepare_value({\"aira_maplayer\": \"Αρδευτι"
  - "tests/postgres_tests/test_hstore.py:416:40      maplayer        U       prepare_value({\"aira_maplayer\": \"Αρδευτικό δίκτυο"
  - "tests/postgres_tests/test_hstore.py:416:52      Αρδευτικό       U       value({\"aira_maplayer\": \"Αρδευτικό δίκτυο\"}),"
  - "tests/postgres_tests/test_hstore.py:416:62      δίκτυο          U       maplayer\": \"Αρδευτικό δίκτυο\"}),"
  - "tests/postgres_tests/test_hstore.py:417:16      aira            U       '{\"aira_maplayer\": \"Αρδευτι"
  - "tests/postgres_tests/test_hstore.py:417:21      maplayer        U       '{\"aira_maplayer\": \"Αρδευτικό δίκτυο"
  - "tests/postgres_tests/test_hstore.py:417:33      Αρδευτικό       U       '{\"aira_maplayer\": \"Αρδευτικό δίκτυο\"}',"
  - "tests/postgres_tests/test_hstore.py:417:43      δίκτυο          U       maplayer\": \"Αρδευτικό δίκτυο\"}',"
  - "tests/postgres_tests/test_indexes.py:240:47         spgist      U       SpGistIndex.suffix, \"spgist\")"
  - "tests/postgres_tests/test_indexes.py:243:64         spgist      U       ], name=\"test_title_spgist\", fillfactor=80)"
  - "tests/postgres_tests/test_indexes.py:248:63         spgist      U       \"name\": \"test_title_spgist\", \"fillfactor\": 80}"
  - "tests/postgres_tests/test_indexes.py:255:46         indclass    U       i on oc.oid = ANY(i.indclass)"
  - "tests/postgres_tests/test_indexes.py:369:56         trgm        U       \"scene\"), name=\"gin_trgm_ops\"), name=index_name"
  - "tests/postgres_tests/test_indexes.py:374:61         trgm        U       cursor.fetchall(), [(\"gin_trgm_ops\", index_name)])"
  - "tests/postgres_tests/test_indexes.py:393:26         tsvector    U       self.assertIn(\"::tsvector\", str(sql))"
  - "tests/postgres_tests/test_indexes.py:539:14         tsvector    U       def test_tsvector_op_class_gist_index"
  - "tests/postgres_tests/test_indexes.py:540:23         tsvector    U       index_name = \"tsvector_op_class_gist\""
  - "tests/postgres_tests/test_indexes.py:544:23         tsvector    U       name=\"tsvector_ops\","
  - "tests/postgres_tests/test_indexes.py:608:14         spgist      U       def test_spgist_index(self):"
  - "tests/postgres_tests/test_indexes.py:612:46         spgist      U       text_field_model_field_spgist\""
  - "tests/postgres_tests/test_introspection.py:22:29        rangesmodel     U       \"postgres_tests_rangesmodel\","
  - "tests/postgres_tests/test_introspection.py:26:18        bigints         U       \"bigints = django.contrib.postgres"
  - "tests/postgres_tests/test_operations.py:243:36      extention (extension)       U       \"test_allow_create_extention\""
  - "tests/postgres_tests/test_operations.py:420:21      phonebook                   U       \"german_phonebook_test\","
  - "tests/postgres_tests/test_operations.py:422:29      phonebk                     U       locale=\"de-u-co-phonebk\","
  - "tests/postgres_tests/test_ranges.py:102:13      bigints         U       bigints=NumericRange(10, 20"
  - "tests/postgres_tests/test_ranges.py:110:35      bigints         U       assertEqual(instance.bigints, loaded.bigints)"
  - "tests/postgres_tests/test_ranges.py:110:51      bigints         U       instance.bigints, loaded.bigints)"
  - "tests/postgres_tests/test_ranges.py:457:14      biginteger      U       def test_biginteger_range(self):"
  - "tests/postgres_tests/test_ranges.py:556:11      bigints         U       '\"bigints\": null, \"timestamps"
  - "tests/postgres_tests/test_ranges.py:564:35      rangesmodel     U       model\": \"postgres_tests.rangesmodel\", \"pk\": null}]'"
  - "tests/postgres_tests/test_ranges.py:598:36      bigints         U       assertIsNone(instance.bigints)"
  - "tests/postgres_tests/test_ranges.py:1023:36     biginteger      U       model_field_formfield_biginteger(self):"
  - "tests/postgres_tests/test_search.py:64:43       Bedemir's           U       Scene 5\", setting=\"Sir Bedemir's Castle\""
  - "tests/postgres_tests/test_search.py:66:9        bedemir             U       bedemir = Character.objects"
  - "tests/postgres_tests/test_search.py:66:50       Bedemir             U       objects.create(name=\"Bedemir\")"
  - "tests/postgres_tests/test_search.py:71:13       bedemir             U       cls.bedemir0 = Line.objects.create"
  - "tests/postgres_tests/test_search.py:73:23       bedemir             U       character=bedemir,"
  - "tests/postgres_tests/test_search.py:77:13       bedemir             U       cls.bedemir1 = Line.objects.create"
  - "tests/postgres_tests/test_search.py:79:23       bedemir             U       character=bedemir,"
  - "tests/postgres_tests/test_search.py:94:79       Ramper              U       Master Ruiz' de lu la Ramper\""
  - "tests/postgres_tests/test_search.py:100:35      cadeau              U       dialogue=\"Oh. Un beau cadeau. Oui oui.\","
  - "tests/postgres_tests/test_search.py:154:49      cadeaux             U       vector=SearchQuery(\"cadeaux\", config=\"french\")"
  - "tests/postgres_tests/test_search.py:160:21      cadeaux             U       search=\"cadeaux\""
  - "tests/postgres_tests/test_search.py:212:26      minstrelbravely     U       ).filter(search=\"minstrelbravely\")"
  - "tests/postgres_tests/test_search.py:245:33      cadeau              U       search=SearchQuery(\"cadeau beau un\", search_type"
  - "tests/postgres_tests/test_search.py:249:41      cadeau              U       SearchQuery(\"un beau cadeau\", search_type=\"phrase"
  - "tests/postgres_tests/test_search.py:268:19      cadeaux             U       \"'cadeaux' & 'beaux'\", search"
  - "tests/postgres_tests/test_search.py:303:18      cadeau              U       \"cadeau -beau\", search_type"
  - "tests/postgres_tests/test_search.py:308:38      cadeau              U       search=SearchQuery(\"beau cadeau\", search_type=\"websearch"
  - "tests/postgres_tests/test_search.py:321:38      cadeaux             U       search=SearchQuery(\"cadeaux\", config=\"french\"))"
  - "tests/postgres_tests/test_search.py:327:26      cadeaux             U       ).filter(search=\"cadeaux\")"
  - "tests/postgres_tests/test_signals.py:7:20           oids    U       get_citext_oids,"
  - "tests/postgres_tests/test_signals.py:8:20           oids    U       get_hstore_oids,"
  - "tests/postgres_tests/test_signals.py:16:26          oids    U       def assertOIDs(self, oids):"
  - "tests/postgres_tests/test_signals.py:17:31          oids    U       self.assertIsInstance(oids, tuple)"
  - "tests/postgres_tests/test_signals.py:18:32          oids    U       self.assertGreater(len(oids), 0)"
  - "tests/postgres_tests/test_trigram.py:42:20          Gumby               U       field=\"Gumby rides on the path of"
  - "tests/postgres_tests/test_trigram.py:45:68          Middlesborough      U       trigram_word_similar=\"Middlesborough\"),"
  - "tests/postgres_tests/test_trigram.py:55:20          Gumby               U       field=\"Gumby rides on the path of"
  - "tests/postgres_tests/test_trigram.py:59:53          Middlesborough      U       strict_word_similar=\"Middlesborough\""
  - "tests/prefetch_related/test_prefetch_related_objects.py:17:48       Wuthering       U       objects.create(title=\"Wuthering Heights\")"
  - "tests/prefetch_related/test_prefetch_related_objects.py:156:54      Wuthering       U       , # Emily - Poems, Wuthering Heights"
  - "tests/prefetch_related/test_uuid.py:8:34        Fifi        U       objects.create(name=\"Fifi\").people.add("
  - "tests/prefetch_related/test_uuid.py:14:68       Fifi        U       \"people\").get(name=\"Fifi\")"
  - "tests/prefetch_related/test_uuid.py:31:34       Fifi        U       objects.create(name=\"Fifi\").fleas_hosted.add("
  - "tests/prefetch_related/test_uuid.py:32:34       Bobo        U       objects.create(name=\"Bobo\").fleas_hosted.add("
  - "tests/prefetch_related/test_uuid.py:35:74       Fifi        U       fleas_hosted\").get(name=\"Fifi\")"
  - "tests/prefetch_related/test_uuid.py:45:40       Fifi        U       objects.create(name=\"Fifi\")"
  - "tests/prefetch_related/test_uuid.py:59:63       Arcata      U       \"Redwood\", address=\"Arcata\")"
  - "tests/prefetch_related/tests.py:53:48       Wuthering           U       objects.create(title=\"Wuthering Heights\")"
  - "tests/prefetch_related/tests.py:119:14      onetoone            U       def test_onetoone_reverse_no_match(self"
  - "tests/prefetch_related/tests.py:127:14      onetoone            U       def test_onetoone_reverse_with_to_field"
  - "tests/prefetch_related/tests.py:130:64      prefetchable        U       related model (Author) is prefetchable."
  - "tests/prefetch_related/tests.py:205:54      Wuthering           U       , # Emily - Poems, Wuthering Heights"
  - "tests/prefetch_related/tests.py:221:54      Wuthering           U       , # Emily - Poems, Wuthering Heights"
  - "tests/prefetch_related/tests.py:235:54      Wuthering           U       , # Emily - Poems, Wuthering Heights"
  - "tests/prefetch_related/tests.py:350:58      authorwithage       U       prefetch_related(\"authors__authorwithage\"))"
  - "tests/prefetch_related/tests.py:439:21      travelled           U       recursively travelled and the found objects"
  - "tests/prefetch_related/tests.py:1026:22     doesnt (doesn't)    U       def test_to_attr_doesnt_cache_through_attr_as"
  - "tests/prefetch_related/tests.py:1070:56     Cleese              U       objects.create(name=\"Mr Cleese\")"
  - "tests/prefetch_related/tests.py:1088:13     depts               U       depts = \"\".join("
  - "tests/prefetch_related/tests.py:1095:17     depts               U       depts,"
  - "tests/prefetch_related/tests.py:1096:41     Cleese              U       English department: Mr Cleese (BA, BSci, MA, PhD)"
  - "tests/prefetch_related/tests.py:1097:41     Cleese              U       Physics department: Mr Cleese (BA, BSci, MA, PhD)"
  - "tests/prefetch_related/tests.py:1131:27     nonint              U       def test_prefetch_GFK_nonint_pk(self):"
  - "tests/prefetch_related/tests.py:1321:19     authorwithage       U       a.authorwithage"
  - "tests/prefetch_related/tests.py:1322:59     authorwithage       U       objects.prefetch_related(\"authorwithage\")"
  - "tests/prefetch_related/tests.py:1328:24     authorwithage       U       self.assertIn(\"authorwithage\", connection.queries"
  - "tests/prefetch_related/tests.py:1331:38     authorwithage       U       assertEqual(authors, [a.authorwithage for a in Author.objects"
  - "tests/prefetch_related/tests.py:1491:33     Wuthering           U       book3 = B.create(title=\"Wuthering Heights\")"
  - "tests/prefetch_related/tests.py:1644:22     einfach             U       (1, \"einfach\", \"simple\"),"
  - "tests/prefetch_related/tests.py:1645:22     schwierig           U       (2, \"schwierig\", \"difficult\"),"
  - "tests/prefetch_related/tests.py:1651:25     einfach             U       (1, 1, \"einfach\"),"
  - "tests/prefetch_related/tests.py:1653:25     schwierig           U       (3, 2, \"schwierig\"),"
  - "tests/prefetch_related/tests.py:1661:48     wordentry           U       entry\", \"lesson_entry__wordentry_set\""
  - "tests/proxy_models/tests.py:87:39       Bazza               U       objects.create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:87:49       Frob                U       create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:92:9        lsps                U       lsps = [lsp.name for lsp"
  - "tests/proxy_models/tests.py:93:26       lsps                U       self.assertEqual(lsps, [\"homer\"])"
  - "tests/proxy_models/tests.py:100:39      Bazza               U       objects.create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:100:49      Frob                U       create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:103:32      Bazza               U       self.assertEqual(pp, [\"Bazza del Frob\", \"Foo McBar"
  - "tests/proxy_models/tests.py:103:42      Frob                U       assertEqual(pp, [\"Bazza del Frob\", \"Foo McBar\", \"homer"
  - "tests/proxy_models/tests.py:111:39      Bazza               U       objects.create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:111:49      Frob                U       create(name=\"Bazza del Frob\")"
  - "tests/proxy_models/tests.py:116:45      Zathras             U       PersonProxy.objects.get(name=\"Zathras\")"
  - "tests/proxy_models/tests.py:120:44      Zathras             U       tatusPerson.objects.get(name=\"Zathras\")"
  - "tests/proxy_models/tests.py:122:43      Bazza               U       objects.create(name=\"Bazza Jr.\")"
  - "tests/proxy_models/tests.py:193:14      myperson            U       def test_myperson_manager(self):"
  - "tests/proxy_models/tests.py:204:14      otherperson         U       def test_otherperson_manager(self):"
  - "tests/proxy_models/tests.py:354:9       pcontributor        U       pcontributor = ProxyTrackerUser.objects"
  - "tests/proxy_models/tests.py:361:22      pcontributor        U       reporter=pcontributor,"
  - "tests/proxy_models/tests.py:379:40      butor               U       reporter__name__icontains=\"butor\""
  - "tests/proxy_models/tests.py:394:46      mypeople            U       command(\"loaddata\", \"mypeople.json\", verbosity=0)"
  - "tests/proxy_models/tests.py:440:47      trackeruser         U       admin_proxy:proxy_models_trackeruser_change\", args=(user"
  - "tests/proxy_models/tests.py:445:43      proxytrackeruser    U       admin_proxy:proxy_models_proxytrackeruser_change\", args=(proxy"
  - "tests/proxy_models/tests.py:452:47      trackeruser         U       admin_proxy:proxy_models_trackeruser_delete\", args=(user"
  - "tests/proxy_models/tests.py:458:43      proxytrackeruser    U       admin_proxy:proxy_models_proxytrackeruser_delete\", args=(proxy"
  - "tests/queries/models.py:429:5       objecta         U       objecta = models.ForeignKey"
  - "tests/queries/models.py:443:5       objecta         U       objecta = models.ForeignKey"
  - "tests/queries/models.py:444:5       objectb         U       objectb = models.ForeignKey"
  - "tests/queries/models.py:445:5       childobjecta    U       childobjecta = models.ForeignKey"
  - "tests/queries/models.py:680:5       parentid        U       parentid = models.AutoField(primary"
  - "tests/queries/models.py:686:5       childid         U       childid = models.AutoField(primary"
  - "tests/queries/models.py:739:5       modela          U       modela_fk = models.ForeignKey"
  - "tests/queries/models.py:740:5       modelc          U       modelc_fk = models.ForeignKey"
  - "tests/queries/test_bulk_update.py:200:14        falsey      U       def test_falsey_pk_value(self):"
  - "tests/queries/test_explain.py:123:14        o'ption     U       \"o'ption\","
  - "tests/queries/test_explain.py:124:17        tion        U       \"op`tion\","
  - "tests/queries/test_explain.py:125:14        opti        U       \"opti on\","
  - "tests/queries/test_explain.py:127:14        optio       U       \"optio\\tn\","
  - "tests/queries/test_explain.py:128:16        nption      U       \"o\\nption\","
  - "tests/queries/test_qs_combinators.py:626:21         realiased       U       # 'num' got realiased to num2"
  - "tests/queries/test_qs_combinators.py:637:22         subcompound     U       def test_qs_with_subcompound_qs(self):"
  - "tests/queries/test_query.py:116:37      objecta     U       query.build_where(Q(objecta=None) | Q(objectb=None"
  - "tests/queries/test_query.py:116:55      objectb     U       Q(objecta=None) | Q(objectb=None))"
  - "tests/queries/test_query.py:121:72      objecta     U       ObjectC._meta.get_field(\"objecta\"))"
  - "tests/queries/test_query.py:126:72      objectb     U       ObjectC._meta.get_field(\"objectb\"))"
  - "tests/queries/tests.py:12:44        LOUTER              U       sql.constants import LOUTER"
  - "tests/queries/tests.py:115:7        Unpickleable        U       class UnpickleableError(Exception):"
  - "tests/queries/tests.py:226:26       LOUTER              U       self.assertNotIn(LOUTER, [x.join_type for x"
  - "tests/queries/tests.py:496:26       LOUTER              U       self.assertNotIn(LOUTER, [x.join_type for x"
  - "tests/queries/tests.py:510:39       LOUTER              U       if x.join_type == LOUTER and qs.query.alias_refcount"
  - "tests/queries/tests.py:1060:39      LOUTER              U       if x.join_type == LOUTER and q.alias_refcount"
  - "tests/queries/tests.py:1166:19      dumbcategory        U       # join to dumbcategory ptr_id"
  - "tests/queries/tests.py:1300:14      managedmodel        U       \"managedmodel, name, note, parent"
  - "tests/queries/tests.py:1541:9       anth                U       anth100 = tag.note_set.create"
  - "tests/queries/tests.py:1541:45      ANTH                U       note_set.create(note=\"ANTH\", misc=\"100\")"
  - "tests/queries/tests.py:1545:32      anth                U       notes.set([math101, anth100])"
  - "tests/queries/tests.py:1548:24      anth                U       notes__in=[anth100]"
  - "tests/queries/tests.py:1626:9       otherteachers       U       otherteachers = Teacher.objects.exclude"
  - "tests/queries/tests.py:1627:15      otherteachers       U       qs1 = otherteachers.filter(schools=s1).filter"
  - "tests/queries/tests.py:1628:15      otherteachers       U       qs2 = otherteachers.filter(schools=s1).filter"
  - "tests/queries/tests.py:1687:46      categoryitem        U       pleCategory.objects.order_by(\"categoryitem\", \"pk\"), [c1, c2, c"
  - "tests/queries/tests.py:1718:52      specialcategory     U       objects.filter(category__specialcategory__isnull=False)"
  - "tests/queries/tests.py:1735:53      specialcategory     U       objects.exclude(category__specialcategory__isnull=False)"
  - "tests/queries/tests.py:1752:52      specialcategory     U       objects.filter(category__specialcategory__isnull=True)"
  - "tests/queries/tests.py:1769:53      specialcategory     U       objects.exclude(category__specialcategory__isnull=True)"
  - "tests/queries/tests.py:1786:23      onetoonecategory    U       category__onetoonecategory__isnull=False"
  - "tests/queries/tests.py:1803:53      onetoonecategory    U       objects.exclude(category__onetoonecategory__isnull=False)"
  - "tests/queries/tests.py:1819:52      onetoonecategory    U       objects.filter(category__onetoonecategory__isnull=True)"
  - "tests/queries/tests.py:1836:23      onetoonecategory    U       category__onetoonecategory__isnull=True"
  - "tests/queries/tests.py:2136:49      pointerb            U       objects.filter(connection__pointerb__id=1), []"
  - "tests/queries/tests.py:2139:50      pointerb            U       exclude(connection__pointerb__id=1), []"
  - "tests/queries/tests.py:2251:42      rvalue              U       empty iterator as the rvalue for an \"__in\""
  - "tests/queries/tests.py:2295:9       qstr                U       qstr = captured_queries["
  - "tests/queries/tests.py:2297:30      qstr                U       self.assertNotIn(id, qstr)"
  - "tests/queries/tests.py:2298:32      qstr                U       self.assertNotIn(name, qstr)"
  - "tests/queries/tests.py:2382:10      Subselects          U       \"Subselects honor any manual ordering"
  - "tests/queries/tests.py:2582:33      baseuser            U       = self.annotation_1.baseuser_set.all()"
  - "tests/queries/tests.py:2606:38      unpickable          U       one of cached results unpickable."
  - "tests/queries/tests.py:2607:41      Unpickleable        U       result_cache[0].error = UnpickleableError()"
  - "tests/queries/tests.py:2608:32      Unpickleable        U       with self.assertRaises(UnpickleableError):"
  - "tests/queries/tests.py:2654:14      emptyqueryset       U       def test_emptyqueryset_values(self):"
  - "tests/queries/tests.py:2962:20      resultset           U       def test_empty_resultset_sql(self):"
  - "tests/queries/tests.py:3169:9       objectas            U       objectas = []"
  - "tests/queries/tests.py:3170:9       objectbs            U       objectbs = []"
  - "tests/queries/tests.py:3171:9       objectcs            U       objectcs = []"
  - "tests/queries/tests.py:3176:13      objectas            U       objectas.append(o)"
  - "tests/queries/tests.py:3178:23      objectas            U       (\"un\", 1, objectas[0]),"
  - "tests/queries/tests.py:3179:25      objectas            U       (\"deux\", 2, objectas[0]),"
  - "tests/queries/tests.py:3180:26      objectas            U       (\"trois\", 3, objectas[2]),"
  - "tests/queries/tests.py:3182:27      objecta             U       for name, number, objecta in b_info:"
  - "tests/queries/tests.py:3183:48      objecta             U       name=name, num=number, objecta=objecta)"
  - "tests/queries/tests.py:3183:56      objecta             U       num=number, objecta=objecta)"
  - "tests/queries/tests.py:3185:13      objectbs            U       objectbs.append(o)"
  - "tests/queries/tests.py:3186:40      objectbs            U       \"ein\", objectas[2], objectbs[2]), (\"zwei\", objectas"
  - "tests/queries/tests.py:3186:56      zwei                U       2], objectbs[2]), (\"zwei\", objectas[1], objectbs"
  - "tests/queries/tests.py:3186:76      objectbs            U       zwei\", objectas[1], objectbs[1])]"
  - "tests/queries/tests.py:3187:19      objecta             U       for name, objecta, objectb in c_info:"
  - "tests/queries/tests.py:3187:28      objectb             U       for name, objecta, objectb in c_info:"
  - "tests/queries/tests.py:3188:36      objecta             U       ObjectC(name=name, objecta=objecta, objectb=objectb"
  - "tests/queries/tests.py:3188:53      objectb             U       name, objecta=objecta, objectb=objectb)"
  - "tests/queries/tests.py:3188:61      objectb             U       objecta=objecta, objectb=objectb)"
  - "tests/queries/tests.py:3190:13      objectcs            U       objectcs.append(o)"
  - "tests/queries/tests.py:3199:16      objectb             U       Q2 = Q(objectb__name=\"deux\")"
  - "tests/queries/tests.py:3204:16      objectb             U       Q2 = Q(objectb__name=\"deux\", objectb"
  - "tests/queries/tests.py:3209:16      objectc             U       Q2 = Q(objectc__objectb__name=\"deux"
  - "tests/queries/tests.py:3214:25      objectc             U       Q2 = Q(objecta__objectc__name=\"ein\")"
  - "tests/queries/tests.py:3217:18      BACB                U       def test_BAB_BACB(self):"
  - "tests/queries/tests.py:3219:25      objectc             U       Q2 = Q(objecta__objectc__objectb__name=\"trois"
  - "tests/queries/tests.py:3223:37      objectc             U       objecta__name=\"one\", objectc__objecta__name=\"two"
  - "tests/queries/tests.py:3225:22      objectc             U       objecta__objectc__name=\"ein\","
  - "tests/queries/tests.py:3298:14      nontech             U       alex_nontech_employers = ("
  - "tests/queries/tests.py:3304:43      nontech             U       assertSequenceEqual(alex_nontech_employers, [google,"
  - "tests/queries/tests.py:3381:10      regressiontests     U       Some regressiontests for ticket #17600. Some"
  - "tests/queries/tests.py:3490:24      onetoonecategory    U       first__onetoonecategory=F(\"second__onetoonecategory"
  - "tests/queries/tests.py:3570:42      namedcategory       U       DumbCategory.objects.exclude(namedcategory__name__in=[\"nonexistent"
  - "tests/queries/tests.py:3704:9       qset                U       qset = ModelA.objects.filter"
  - "tests/queries/tests.py:3705:31      qset                U       self.assertEqual(list(qset), [self.a1])"
  - "tests/queries/tests.py:3709:30      qset                U       self.assertEqual(str(qset.query).count(\"INNER"
  - "tests/queries/tests.py:3891:14      revfk               U       def test_revfk_noreuse(self):"
  - "tests/queries/tests.py:3891:20      noreuse             U       def test_revfk_noreuse(self):"
  - "tests/queries/tests.py:3897:16      trimmable           U       When a trimmable join is specified in"
  - "tests/queries/tests.py:3904:9       hogward             U       hogward = School.objects.create"
  - "tests/queries/tests.py:3906:44      hogward             U       objects.create(school=hogward)"
  - "tests/queries/tests.py:3907:41      hogward             U       objects.create(school=hogward, name=\"Potion\")"
  - "tests/queries/tests.py:3921:9       basea               U       basea = BaseA.objects.create"
  - "tests/queries/tests.py:3928:43      basea               U       assertSequenceEqual(qs, [basea])"
  - "tests/queries/tests.py:4039:36      fexpression         U       disjunction_promotion_fexpression(self):"
  - "tests/queries/tests.py:4222:40      childobjecta        U       ObjectC.objects.create(childobjecta=cls.coa)"
  - "tests/queries/tests.py:4259:37      childobjecta        U       ObjectC.objects.exclude(childobjecta__in=[self.coa, self"
  - "tests/queries/tests.py:4312:58      childobjecta        U       ObjectC.objects.exclude(childobjecta=self.oa), out_c)"
  - "tests/queries/tests.py:4348:49      pointera            U       Connection.objects.order_by(\"-pointera__connection\", \"pk\")"
  - "tests/queries/tests.py:4355:43      jackstaff           U       objects.create(name=\"jackstaff\")"
  - "tests/queries/tests.py:4356:9       jackstaff           U       jackstaff = StaffUser.objects"
  - "tests/queries/tests.py:4357:43      jillstaff           U       objects.create(name=\"jillstaff\")"
  - "tests/queries/tests.py:4358:9       jillstaff           U       jillstaff = StaffUser.objects"
  - "tests/queries/tests.py:4359:44      jackstaff           U       objects.create(creator=jackstaff, owner=jillstaff, title"
  - "tests/queries/tests.py:4359:61      jillstaff           U       creator=jackstaff, owner=jillstaff, title=\"task\")"
  - "tests/queries/tests.py:4414:9       tblname             U       tblname = connection.ops.quote"
  - "tests/queries/tests.py:4415:47      tblname             U       LEFT OUTER JOIN %s\" % tblname, str(qs.query))"
  - "tests/queries/tests.py:4426:45      categoryitem        U       ecialCategory.objects.exclude(categoryitem__id=c1.pk).order_by"
  - "tests/queries/tests.py:4430:44      categoryitem        U       pecialCategory.objects.filter(categoryitem__id=c1.pk), [sc1]"
  - "tests/queries/tests.py:4438:13      custompktag         U       cp1.custompktag_set.add(cpt1)"
  - "tests/queries/tests.py:4439:58      custompktag         U       CustomPk.objects.filter(custompktag=cpt1), [cp1])"
  - "tests/queries/tests.py:4469:46      modelc              U       0.0, field_b1=True, modelc_fk=c1, modela_fk=a1"
  - "tests/queries/tests.py:4469:60      modela              U       True, modelc_fk=c1, modela_fk=a1"
  - "tests/queries/tests.py:4477:40      modelc              U       / F(\"ticket23605b__modelc_fk__field_c0\")"
  - "tests/queries/tests.py:4489:60      modelc              U       b0__gte=1000000 / F(\"modelc_fk__field_c0\"))"
  - "tests/queries/tests.py:4554:13      modela              U       modela_fk=a1,"
  - "tests/queries/tests.py:4557:13      modelc              U       modelc_fk=c1,"
  - "tests/queries/tests.py:4560:13      modela              U       modela_fk=a1,"
  - "tests/queries/tests.py:4563:13      modelc              U       modelc_fk=c1,"
  - "tests/queries/tests.py:4566:13      modela              U       modela_fk=a1,"
  - "tests/queries/tests.py:4572:13      modela              U       modela_fk=a1,"
  - "tests/queryset_pickle/models.py:60:9        somefield       U       somefield = models.IntegerField"
  - "tests/queryset_pickle/tests.py:19:7         Pickleability                   U       class PickleabilityTestCase(TestCase):"
  - "tests/queryset_pickle/tests.py:34:55        Maybachs                        U       name=\"Ponies Who Own Maybachs\")"
  - "tests/queryset_pickle/tests.py:66:9         klass                           U       klass = Event.DoesNotExist"
  - "tests/queryset_pickle/tests.py:67:49        klass                           U       pickle.loads(pickle.dumps(klass)), klass)"
  - "tests/queryset_pickle/tests.py:67:58        klass                           U       pickle.dumps(klass)), klass)"
  - "tests/queryset_pickle/tests.py:70:9         klass                           U       klass = Event.MultipleObjectsReturn"
  - "tests/queryset_pickle/tests.py:71:49        klass                           U       pickle.loads(pickle.dumps(klass)), klass)"
  - "tests/queryset_pickle/tests.py:73:22        relatedobjectdoesnotexist       U       def test_forward_relatedobjectdoesnotexist_class(self):"
  - "tests/queryset_pickle/tests.py:81:33        relatedobjectdoesnotexist       U       test_reverse_one_to_one_relatedobjectdoesnotexist_class(self):"
  - "tests/queryset_pickle/tests.py:97:44        somefield                       U       SomeModel.objects.create(somefield=1)"
  - "tests/queryset_pickle/tests.py:98:55        somefield                       U       SomeModel.objects.defer(\"somefield\")[0]"
  - "tests/queryset_pickle/tests.py:102:35       somefield                       U       assertEqual(original.somefield, reloaded.somefield"
  - "tests/queryset_pickle/tests.py:102:55       somefield                       U       somefield, reloaded.somefield)"
  - "tests/queryset_pickle/tests.py:109:41       foof                            U       objects.create(name=\"foof\")"
  - "tests/queryset_pickle/tests.py:121:9        dynclass                        U       dynclass = type("
  - "tests/queryset_pickle/tests.py:126:20       dynclass                        U       original = dynclass(pk=1)"
  - "tests/queryset_pickle/tests.py:130:43       dynclass                        U       reloaded.__class__, dynclass)"
  - "tests/queryset_pickle/tests.py:279:11       mmodel                          U       m2mmodel = M2MModel.objects.create"
  - "tests/queryset_pickle/tests.py:280:11       mmodel                          U       m2mmodel.groups.add(group)"
  - "tests/queryset_pickle/tests.py:282:21       mmodels                         U       first_m2mmodels=models.FilteredRelation"
  - "tests/queryset_pickle/tests.py:283:20       mmodel                          U       \"m2mmodel\","
  - "tests/queryset_pickle/tests.py:284:38       mmodel                          U       condition=models.Q(m2mmodel__added__year=2020),"
  - "tests/queryset_pickle/tests.py:286:55       mmodels                         U       models.Count(\"first_m2mmodels__groups\"))"
  - "tests/raw_query/tests.py:49:44          Shaston                 U       walking homeward from Shaston to the village of Marlott"
  - "tests/raw_query/tests.py:49:70          Marlott                 U       Shaston to the village of Marlott, \""
  - "tests/raw_query/tests.py:50:43          Blakemore               U       the adjoining Vale of Blakemore, or Blackmoor.\""
  - "tests/raw_query/tests.py:50:57          Blackmoor               U       Vale of Blakemore, or Blackmoor.\""
  - "tests/raw_query/tests.py:65:47          dunkin                  U       objects.create(brand=\"dunkin doughnuts\")"
  - "tests/raw_query/tests.py:126:14         rawqueryset             U       def test_rawqueryset_repr(self):"
  - "tests/raw_query/tests.py:174:42         mixedcaseidcolumn       U       SELECT * FROM raw_query_mixedcaseidcolumn\""
  - "tests/raw_query/tests.py:211:9          qset                    U       qset = Author.objects.raw"
  - "tests/raw_query/tests.py:212:24         qset                    U       results = list(qset)"
  - "tests/raw_query/tests.py:216:36         qset                    U       assertIsInstance(repr(qset), str)"
  - "tests/raw_query/tests.py:220:9          qset                    U       qset = Author.objects.raw"
  - "tests/raw_query/tests.py:221:30         qset                    U       self.assertEqual(len(qset), 2)"
  - "tests/raw_query/tests.py:351:45         Chun                    U       Wesley\", last_name=\"Chun\", dob=date(1962, 10"
  - "tests/raw_query/tests.py:353:42         friendlyauthor          U       SELECT * FROM raw_query_friendlyauthor\""
  - "tests/raw_query/tests.py:381:60         bookfkaspk              U       default FROM raw_query_bookfkaspk\""
  - "tests/redirects_tests/tests.py:65:23        shortcircuits       U       def test_redirect_shortcircuits_non_404_response(self"
  - "tests/requests_tests/tests.py:59:24         Bsome                   U       expected = \"/%3Bsome/%3Fawful/%3Dpath/foo"
  - "tests/requests_tests/tests.py:59:32         Fawful                  U       expected = \"/%3Bsome/%3Fawful/%3Dpath/foo:bar/?;some"
  - "tests/requests_tests/tests.py:67:45         quux                    U       QUERY_STRING\"] = \"baz#quux\""
  - "tests/requests_tests/tests.py:68:67         quux                    U       path(), \"/foo%23bar?baz#quux\")"
  - "tests/requests_tests/tests.py:69:79         quux                    U       prefix/foo%23bar?baz#quux\")"
  - "tests/requests_tests/tests.py:73:26         somepath                U       request.path = \"/somepath/\""
  - "tests/requests_tests/tests.py:79:62         somepath                U       <HttpRequest: GET '/somepath/'>\")"
  - "tests/requests_tests/tests.py:91:14         wsgirequest             U       def test_wsgirequest(self):"
  - "tests/requests_tests/tests.py:119:14        wsgirequest             U       def test_wsgirequest_with_script_name(self"
  - "tests/requests_tests/tests.py:127:32        somepath                U       \"PATH_INFO\": \"/somepath/\","
  - "tests/requests_tests/tests.py:133:49        somepath                U       request.path, \"/PREFIX/somepath/\")"
  - "tests/requests_tests/tests.py:137:32        somepath                U       \"PATH_INFO\": \"/somepath/\","
  - "tests/requests_tests/tests.py:145:14        wsgirequest             U       def test_wsgirequest_script_url_double_slashes"
  - "tests/requests_tests/tests.py:162:14        wsgirequest             U       def test_wsgirequest_with_force_script_name"
  - "tests/requests_tests/tests.py:178:14        wsgirequest             U       def test_wsgirequest_path_with_force_script"
  - "tests/requests_tests/tests.py:233:41        سلام                    U       PATH_INFO\": wsgi_str(\"/سلام/\"),"
  - "tests/requests_tests/tests.py:238:42        سلام                    U       assertEqual(request.path, \"/سلام/\")"
  - "tests/requests_tests/tests.py:278:59        nefgh                   U       BytesIO(b\"1234\\n5678\\nabcd\\nefgh\\nijkl\"), 24)"
  - "tests/requests_tests/tests.py:278:65        nijkl                   U       4\\n5678\\nabcd\\nefgh\\nijkl\"), 24)"
  - "tests/requests_tests/tests.py:288:48        efgh                    U       stream.readline(4), b\"efgh\")"
  - "tests/requests_tests/tests.py:292:47        ijkl                    U       stream.readline(), b\"ijkl\")"
  - "tests/requests_tests/tests.py:377:50        España                  U       akePayload(urlencode({\"key\": \"España\"}))"
  - "tests/requests_tests/tests.py:386:50        España                  U       request.POST, {\"key\": [\"España\"]})"
  - "tests/requests_tests/tests.py:389:50        España                  U       akePayload(urlencode({\"key\": \"España\".encode(\"latin-1\")}"
  - "tests/requests_tests/tests.py:410:58        España                  U       akePayload(urlencode({\"key\": \"España\"}))"
  - "tests/requests_tests/tests.py:421:58        España                  U       request.POST, {\"key\": [\"España\"]})"
  - "tests/requests_tests/tests.py:581:22        rmless                  U       'rmless\", \"author\": [\"Douglas"
  - "tests/requests_tests/tests.py:1019:28       Günter                  U       \"Hello Günter\","
  - "tests/requests_tests/tests.py:1033:57       Günter                  U       POST, {\"name\": [\"Hello Günter\"]})"
  - "tests/requests_tests/tests.py:1037:61       Œnter                   U       {\"name\": [\"Hello GĂŒnter\"]})"
  - "tests/requests_tests/tests.py:1045:53       Cnter                   U       \"name=Hello%20G%C3%BCnter\","
  - "tests/requests_tests/tests.py:1048:56       Günter                  U       GET, {\"name\": [\"Hello Günter\"]})"
  - "tests/requests_tests/tests.py:1050:69       nter                    U       \"Hello G\\u0102\\u0152nter\"]})"
  - "tests/requests_tests/tests.py:1092:25       badpath                 U       \"example.com:80/badpath\","
  - "tests/requests_tests/tests.py:1093:23       recovermypassword       U       \"example.com: recovermypassword.com\","
  - "tests/requests_tests/tests.py:1103:25       feee                    U       \"[2001:19f0:feee::dead:beef:cafe]\","
  - "tests/requests_tests/tests.py:1105:15       multitenant             U       \".multitenant.com\","
  - "tests/requests_tests/tests.py:1152:25       feee                    U       \"[2001:19f0:feee::dead:beef:cafe]\","
  - "tests/requests_tests/tests.py:1153:25       feee                    U       \"[2001:19f0:feee::dead:beef:cafe]:80"
  - "tests/requests_tests/tests.py:1155:23       multitenant             U       \"anything.multitenant.com\","
  - "tests/requests_tests/tests.py:1156:14       multitenant             U       \"multitenant.com\","
  - "tests/requests_tests/tests.py:1223:25       feee                    U       \"[2001:19f0:feee::dead:beef:cafe]\","
  - "tests/requests_tests/tests.py:1224:25       feee                    U       \"[2001:19f0:feee::dead:beef:cafe]:80"
  - "tests/requests_tests/tests.py:1287:17       hostnames               U       # Other hostnames raise a DisallowedHost"
  - "tests/responses/test_cookie.py:62:58        usegmt      U       22(future_datetime, usegmt=True),"
  - "tests/responses/test_cookie.py:63:76        usegmt      U       datetime.replace(second=7), usegmt=True),"
  - "tests/responses/test_fileresponse.py:112:26         nosuchfile      U       (__file__ + \"nosuchfile\", [\"application/octet"
  - "tests/responses/test_fileresponse.py:114:33         pynosuchfile    U       (\"test_fileresponse.pynosuchfile\", [\"application/octet"
  - "tests/responses/test_fileresponse.py:237:16         mkfifo          U       os.mkfifo(pipe_file)"
  - "tests/responses/test_fileresponse.py:238:53         RDONLY          U       open(pipe_file, os.O_RDONLY | os.O_NONBLOCK)"
  - "tests/responses/test_fileresponse.py:238:67         NONBLOCK        U       os.O_RDONLY | os.O_NONBLOCK)"
  - "tests/responses/test_fileresponse.py:272:49         opendocument    U       application/vnd.oasis.opendocument.text\","
  - "tests/responses/test_fileresponse.py:276:36         opendocument    U       application/vnd.oasis.opendocument.text\","
  - "tests/responses/tests.py:32:38          qwer                U       writelines([\"asdf\\n\", \"qwer\\n\"])"
  - "tests/responses/tests.py:94:34          J'attendrai         U       HttpResponse(status=\"J'attendrai\")"
  - "tests/responses/tests.py:164:19         textiowrapper       U       def test_wrap_textiowrapper(self):"
  - "tests/runtests.py:77:69         coveragerc      U       join(RUNTESTS_DIR, \".coveragerc\")"
  - "tests/runtests.py:320:25        DJANGOS         U       os.environ[\"RUNNING_DJANGOS_TEST_SUITE\"] = \"true"
  - "tests/runtests.py:328:40        finalizer       U       multiprocessing.util finalizer that tries to remove"
  - "tests/runtests.py:332:39        finalizer       U       multiprocessing.util import _finalizer_registry"
  - "tests/runtests.py:334:6         finalizer       U       _finalizer_registry.pop((-100,"
  - "tests/runtests.py:335:29        DJANGOS         U       os.environ[\"RUNNING_DJANGOS_TEST_SUITE\"]"
  - "tests/runtests.py:363:5         keepdb          U       keepdb,"
  - "tests/runtests.py:412:9         keepdb          U       keepdb=keepdb,"
  - "tests/runtests.py:412:16        keepdb          U       keepdb=keepdb,"
  - "tests/runtests.py:563:12        keepdb          U       \"--keepdb\","
  - "tests/runtests.py:621:24        gethostname     U       default=socket.gethostname(),"
  - "tests/runtests.py:791:25        keepdb          U       options.keepdb,"
  - "tests/schema/fields.py:106:17       MEDIUMBLOB      U       return \"MEDIUMBLOB\""
  - "tests/schema/models.py:147:21       INTEGERPK       U       db_table = \"INTEGERPK\" # uppercase to ensure"
  - "tests/schema/test_logging.py:12:51          clientside      U       features.schema_editor_uses_clientside_param_binding:"
  - "tests/schema/tests.py:241:54        indclass            U       i on oc.oid = ANY(i.indclass)"
  - "tests/schema/tests.py:365:48        repointing          U       out of FK order, then repointing, works\""
  - "tests/schema/tests.py:737:38        TINYINT             U       BooleanField are stored as TINYINT(1) on MySQL."
  - "tests/schema/tests.py:822:30        mediumblob          U       test_add_binaryfield_mediumblob(self):"
  - "tests/schema/tests.py:1545:31       charmodel           U       self.assertIn(\"schema_charmodel_field_8b338dea_like"
  - "tests/schema/tests.py:1548:51       charmodel           U       constraint_opclasses(\"schema_charmodel_field_8b338dea_like"
  - "tests/schema/tests.py:1622:31       charmodel           U       self.assertIn(\"schema_charmodel_field_8b338dea_like"
  - "tests/schema/tests.py:1625:51       charmodel           U       constraint_opclasses(\"schema_charmodel_field_8b338dea_like"
  - "tests/schema/tests.py:1630:31       relationmodel       U       self.assertIn(\"schema_relationmodel_field_id_395fbb08_like"
  - "tests/schema/tests.py:1634:25       relationmodel       U       \"schema_relationmodel_field_id_395fbb08_like"
  - "tests/schema/tests.py:2054:28       sqls                U       sequence_reset_sqls = connection.ops.sequence"
  - "tests/schema/tests.py:2057:31       sqls                U       if sequence_reset_sqls:"
  - "tests/schema/tests.py:2058:47       sqls                U       execute(sequence_reset_sqls[0])"
  - "tests/schema/tests.py:2073:28       sqls                U       sequence_reset_sqls = connection.ops.sequence"
  - "tests/schema/tests.py:2076:31       sqls                U       if sequence_reset_sqls:"
  - "tests/schema/tests.py:2190:31       smallserial         U       f'(\"{column}\" smallserial NOT NULL PRIMARY KEY"
  - "tests/schema/tests.py:2202:63       sequencename        U       FROM pg_sequences WHERE sequencename = %s\","
  - "tests/schema/tests.py:2217:63       sequencename        U       FROM pg_sequences WHERE sequencename = %s\","
  - "tests/schema/tests.py:2256:29       INTEGERPK           U       db_table = \"INTEGERPK\""
  - "tests/schema/tests.py:2275:29       INTEGERPK           U       db_table = \"INTEGERPK\""
  - "tests/schema/tests.py:2451:29       looooooong          U       field_with_very_looooooong_name = PositiveIntegerField"
  - "tests/schema/tests.py:2460:30       looooooong          U       \"field_with_very_looooooong_name\""
  - "tests/schema/tests.py:2504:22       tagm                U       columns[\"tagm2mtest_id\"][0],"
  - "tests/schema/tests.py:2649:22       tagm                U       columns[\"tagm2mtest_id\"][0],"
  - "tests/schema/tests.py:2738:15       repointing          U       Tests repointing M2M fields"
  - "tests/schema/tests.py:2762:18       tagm                U       \"tagm2mtest_id\","
  - "tests/schema/tests.py:2763:25       tagm                U       \"schema_tagm2mtest\","
  - "tests/schema/tests.py:2783:50       uniquetest          U       remote_field.through, \"uniquetest_id\", \"schema_uniquetest"
  - "tests/schema/tests.py:2783:74       uniquetest          U       uniquetest_id\", \"schema_uniquetest\""
  - "tests/schema/tests.py:3746:37       Celine              U       objects.create(name=\"Celine\", height=None, weight"
  - "tests/schema/tests.py:3877:30       doesnt (doesn't)    U       test_remove_db_index_doesnt_remove_custom_indexes"
  - "tests/schema/tests.py:4748:34       doesnt (doesn't)    U       alter_field_default_doesnt_perform_queries(self"
  - "tests/schema/tests.py:5284:27       dtob                U       self.assertNotIn(\"dtob_auto_now\", columns)"
  - "tests/schema/tests.py:5285:27       dtob                U       self.assertNotIn(\"dtob_auto_now_add\", columns"
  - "tests/schema/tests.py:5311:9        dtob                U       dtob_auto_now = DateTimeField"
  - "tests/schema/tests.py:5312:9        dtob                U       dtob_auto_now.set_attributes"
  - "tests/schema/tests.py:5312:49       dtob                U       attributes_from_name(\"dtob_auto_now\")"
  - "tests/select_for_update/tests.py:43:48          Liberchies      U       objects.create(name=\"Liberchies\", country=self.country"
  - "tests/select_for_update/tests.py:44:48          Samois          U       objects.create(name=\"Samois-sur-Seine\", country"
  - "tests/select_for_update/tests.py:157:44         eucountry       U       ['select_for_update_eucountry\".\"country_ptr_id']"
  - "tests/select_for_update/tests.py:159:44         eucountry       U       [\"select_for_update_eucountry\"]"
  - "tests/select_for_update/tests.py:176:36         eucountry       U       'select_for_update_eucountry\".\"country_ptr_id',"
  - "tests/select_for_update/tests.py:180:44         eucountry       U       [\"select_for_update_eucountry\", \"select_for_update"
  - "tests/select_for_update/tests.py:194:36         eucity          U       'select_for_update_eucity\".\"id',"
  - "tests/select_for_update/tests.py:195:36         eucountry       U       'select_for_update_eucountry\".\"country_ptr_id',"
  - "tests/select_for_update/tests.py:198:44         eucity          U       [\"select_for_update_eucity\", \"select_for_update"
  - "tests/select_for_update/tests.py:215:36         eucity          U       'select_for_update_eucity\".\"id',"
  - "tests/select_for_update/tests.py:219:44         eucity          U       [\"select_for_update_eucity\", \"select_for_update"
  - "tests/select_for_update/tests.py:373:14         unsuported      U       def test_unsuported_no_key_raises_error"
  - "tests/select_for_update/tests.py:517:45         Grappeli        U       objects.create(name=\"Grappeli\", born=self.city1, died"
  - "tests/select_related_onetoone/tests.py:34:59        moar                U       objects.create(results=\"moar results\")"
  - "tests/select_related_onetoone/tests.py:35:9         advstat             U       advstat = AdvancedUserStat.objects"
  - "tests/select_related_onetoone/tests.py:38:47        advstat             U       objects.create(base_stats=advstat, comments=250)"
  - "tests/select_related_onetoone/tests.py:103:61       advanceduserstat    U       select_related(\"user\", \"advanceduserstat\").get("
  - "tests/select_related_onetoone/tests.py:106:35       advanceduserstat    U       self.assertEqual(stat.advanceduserstat.posts, 200)"
  - "tests/select_related_onetoone/tests.py:109:35       advanceduserstat    U       self.assertEqual(stat.advanceduserstat.user.username, \"bob"
  - "tests/select_related_onetoone/tests.py:113:50       Plushie             U       create(name=\"Django Plushie\", image=im)"
  - "tests/select_related_onetoone/tests.py:114:58       Plushie             U       name=\"Talking Django Plushie\")"
  - "tests/select_related_onetoone/tests.py:121:52       Plushie             U       in result], [\"Django Plushie\", \"Talking Django Plushie"
  - "tests/select_related_onetoone/tests.py:121:78       Plushie             U       Plushie\", \"Talking Django Plushie\"]"
  - "tests/select_related_onetoone/tests.py:162:14       onetoone            U       def test_onetoone_with_subclass(self)"
  - "tests/select_related_onetoone/tests.py:167:14       onetoone            U       def test_onetoone_with_two_subclasses"
  - "tests/select_related_onetoone/tests.py:188:14       multiinheritance    U       def test_multiinheritance_two_subclasses(self"
  - "tests/select_related_onetoone/tests.py:268:5        Rverse              U       Rverse related fields should"
  - "tests/select_related_regress/tests.py:161:24        Buswell     U       name=\"Troy Buswell\", state=wa, status=active"
  - "tests/select_related_regress/tests.py:166:29        Buswell     U       .get(name=\"Troy Buswell\")"
  - "tests/select_related_regress/tests.py:169:43        Buswell     U       assertEqual(troy.name, \"Troy Buswell\")"
  - "tests/select_related_regress/tests.py:177:29        Buswell     U       .get(name=\"Troy Buswell\")"
  - "tests/select_related_regress/tests.py:180:43        Buswell     U       assertEqual(troy.name, \"Troy Buswell\")"
  - "tests/select_related/models.py:31:7         Klass       U       class Klass(models.Model):"
  - "tests/select_related/models.py:38:5         klass       U       klass = models.ForeignKey"
  - "tests/select_related/models.py:38:31        Klass       U       = models.ForeignKey(Klass, models.CASCADE)"
  - "tests/select_related/tests.py:11:5          Klass                   U       Klass,"
  - "tests/select_related/tests.py:22:26         stringtree              U       def create_tree(cls, stringtree):"
  - "tests/select_related/tests.py:26:17         stringtree              U       names = stringtree.split()"
  - "tests/select_related/tests.py:27:44         Klass                   U       Domain, Kingdom, Phylum, Klass, Order, Family, Genus"
  - "tests/select_related/tests.py:44:14         Eukaryota               U       \"Eukaryota Animalia Anthropoda"
  - "tests/select_related/tests.py:44:24         Animalia                U       \"Eukaryota Animalia Anthropoda Insecta Diptera"
  - "tests/select_related/tests.py:44:33         Anthropoda              U       \"Eukaryota Animalia Anthropoda Insecta Diptera Drosophilidae"
  - "tests/select_related/tests.py:44:44         Insecta                 U       Animalia Anthropoda Insecta Diptera Drosophilidae"
  - "tests/select_related/tests.py:44:60         Drosophilidae           U       Anthropoda Insecta Diptera Drosophilidae Drosophila \""
  - "tests/select_related/tests.py:45:14         melanogaster            U       \"melanogaster\""
  - "tests/select_related/tests.py:48:14         Eukaryota               U       \"Eukaryota Animalia Chordata Mammalia"
  - "tests/select_related/tests.py:48:24         Animalia                U       \"Eukaryota Animalia Chordata Mammalia Primates"
  - "tests/select_related/tests.py:48:33         Chordata                U       \"Eukaryota Animalia Chordata Mammalia Primates Hominidae"
  - "tests/select_related/tests.py:51:14         Eukaryota               U       \"Eukaryota Plantae Magnoliophyta"
  - "tests/select_related/tests.py:51:24         Plantae                 U       \"Eukaryota Plantae Magnoliophyta Magnoliopsida"
  - "tests/select_related/tests.py:51:32         Magnoliophyta           U       \"Eukaryota Plantae Magnoliophyta Magnoliopsida Fabales"
  - "tests/select_related/tests.py:51:46         Magnoliopsida           U       Plantae Magnoliophyta Magnoliopsida Fabales Fabaceae Pisum"
  - "tests/select_related/tests.py:51:60         Fabales                 U       Magnoliophyta Magnoliopsida Fabales Fabaceae Pisum \""
  - "tests/select_related/tests.py:51:68         Fabaceae                U       Magnoliopsida Fabales Fabaceae Pisum \""
  - "tests/select_related/tests.py:51:77         Pisum                   U       agnoliopsida Fabales Fabaceae Pisum \""
  - "tests/select_related/tests.py:52:14         sativum                 U       \"sativum\""
  - "tests/select_related/tests.py:55:14         Eukaryota               U       \"Eukaryota Fungi Basidiomycota"
  - "tests/select_related/tests.py:55:30         Basidiomycota           U       \"Eukaryota Fungi Basidiomycota Homobasidiomycatae Agaricales"
  - "tests/select_related/tests.py:55:44         Homobasidiomycatae      U       Fungi Basidiomycota Homobasidiomycatae Agaricales Amanitacae"
  - "tests/select_related/tests.py:55:63         Agaricales              U       idiomycota Homobasidiomycatae Agaricales Amanitacae \""
  - "tests/select_related/tests.py:55:74         Amanitacae              U       Homobasidiomycatae Agaricales Amanitacae \""
  - "tests/select_related/tests.py:56:22         muscaria                U       \"Amanita muscaria\""
  - "tests/select_related/tests.py:64:45         melanogaster            U       Species.objects.get(name=\"melanogaster\")"
  - "tests/select_related/tests.py:65:45         klass                   U       fly.genus.family.order.klass.phylum.kingdom.domain"
  - "tests/select_related/tests.py:66:44         Eukaryota               U       assertEqual(domain.name, \"Eukaryota\")"
  - "tests/select_related/tests.py:75:40         klass                   U       genus__family__order__klass__phylum__kingdom__domain"
  - "tests/select_related/tests.py:77:48         klass                   U       person.genus.family.order.klass.phylum.kingdom.domain"
  - "tests/select_related/tests.py:87:22         Amanitacae              U       \"Amanitacae\","
  - "tests/select_related/tests.py:88:22         Drosophilidae           U       \"Drosophilidae\","
  - "tests/select_related/tests.py:89:22         Fabaceae                U       \"Fabaceae\","
  - "tests/select_related/tests.py:102:22        Amanitacae              U       \"Amanitacae\","
  - "tests/select_related/tests.py:103:22        Drosophilidae           U       \"Drosophilidae\","
  - "tests/select_related/tests.py:104:22        Fabaceae                U       \"Fabaceae\","
  - "tests/select_related/tests.py:119:35        Agaricales              U       sorted(orders), [\"Agaricales\", \"Diptera\", \"Fabales"
  - "tests/select_related/tests.py:119:60        Fabales                 U       Agaricales\", \"Diptera\", \"Fabales\", \"Primates\"]"
  - "tests/select_related/tests.py:143:19        Amanitacae              U       [\"Amanitacae\", \"Drosophilidae\","
  - "tests/select_related/tests.py:143:33        Drosophilidae           U       [\"Amanitacae\", \"Drosophilidae\", \"Fabaceae\", \"Hominidae"
  - "tests/select_related/tests.py:143:50        Fabaceae                U       , \"Drosophilidae\", \"Fabaceae\", \"Hominidae\"],"
  - "tests/select_related/tests.py:156:40        Agaricales              U       assertEqual(orders, [\"Agaricales\"])"
  - "tests/select_related/tests.py:188:66        melanogaster            U       genus\").filter(name=\"melanogaster\").first()"
  - "tests/select_related/tests.py:195:71        melanogaster            U       species_set.first().name, \"melanogaster\")"
  - "tests/serializers/test_data.py:85:21        klass       U       def data_create(pk, klass, data):"
  - "tests/serializers/test_data.py:86:16        klass       U       instance = klass(id=pk)"
  - "tests/serializers/test_data.py:92:24        klass       U       def generic_create(pk, klass, data):"
  - "tests/serializers/test_data.py:93:16        klass       U       instance = klass(id=pk)"
  - "tests/serializers/test_data.py:101:19       klass       U       def fk_create(pk, klass, data):"
  - "tests/serializers/test_deserialization.py:31:9          deserial    U       deserial_obj = DeserializedObject"
  - "tests/serializers/test_deserialization.py:33:18         deserial    U       repr(deserial_obj), \"<DeserializedObject"
  - "tests/serializers/test_json.py:106:20       badpk           U       \"pk\": \"badpk\","
  - "tests/serializers/test_json.py:115:59       badpk           U       serializers.player:pk=badpk)\""
  - "tests/serializers/test_json.py:129:26       invalidint      U       \"rank\": \"invalidint\","
  - "tests/serializers/test_json.py:133:64       invalidint      U       1) field_value was 'invalidint'\""
  - "tests/serializers/test_jsonl.py:94:22       badpk           U       '{\"pk\": \"badpk\",\"model\": \"serializers"
  - "tests/serializers/test_jsonl.py:98:59       badpk           U       serializers.player:pk=badpk)\""
  - "tests/serializers/test_jsonl.py:109:48      invalidint      U       name\": \"Bob\",\"rank\": \"invalidint\",\"team\": \"Team\"}}'"
  - "tests/serializers/test_jsonl.py:111:64      invalidint      U       1) field_value was 'invalidint'\""
  - "tests/serializers/test_natural.py:24:72         Anghor      U       , data=\"Natural Key Anghor\"),"
  - "tests/serializers/tests.py:244:25       יוניקוד     U       unicode_name = \"יוניקוד\""
  - "tests/serializers/tests.py:310:9        deserial    U       deserial_objs = list(serializers"
  - "tests/serializers/tests.py:311:26       deserial    U       self.assertEqual(deserial_objs[0].object.score"
  - "tests/serializers/tests.py:317:9        deserial    U       deserial_objs = list(serializers"
  - "tests/serializers/tests.py:318:31       deserial    U       self.assertIsInstance(deserial_objs[0].object, Author"
  - "tests/serializers/tests.py:322:21       Spartak     U       team_str = \"Spartak Moskva\""
  - "tests/serializers/tests.py:324:24       Soslan      U       player.name = \"Soslan Djanaev\""
  - "tests/serializers/tests.py:324:31       Djanaev     U       player.name = \"Soslan Djanaev\""
  - "tests/serializers/tests.py:333:9        deserial    U       deserial_objs = list(serializers"
  - "tests/servers/test_basehttp.py:19:7         Unclosable      U       class UnclosableBytesIO(BytesIO):"
  - "tests/servers/test_basehttp.py:50:43        levelname       U       cm.records[0].levelname, wrong_level.upper("
  - "tests/servers/test_basehttp.py:90:17        Unclosable      U       wfile = UnclosableBytesIO()"
  - "tests/servers/test_basehttp.py:123:17       Unclosable      U       wfile = UnclosableBytesIO()"
  - "tests/servers/test_basehttp.py:149:17       Unclosable      U       wfile = UnclosableBytesIO()"
  - "tests/servers/test_basehttp.py:178:17       Unclosable      U       wfile = UnclosableBytesIO()"
  - "tests/servers/tests.py:219:49       Iamastream      U       ssertEqual(response.read(), b\"Iamastream\")"
  - "tests/servers/tests.py:228:49       Iamastream      U       ssertEqual(response.read(), b\"Iamastream\")"
  - "tests/servers/tests.py:313:66       тест            U       % urlencode({\"q\": \"тест\"})) as f:"
  - "tests/servers/tests.py:374:33       EADDRINUSE      U       if e.errno == errno.EADDRINUSE:"
  - "tests/sessions_tests/tests.py:54:26         buildbots           U       # of runs (think buildbots)"
  - "tests/sessions_tests/tests.py:143:45        asetdefault         U       ssertEqual(await self.session.asetdefault(\"foo\", \"bar\"), \"bar"
  - "tests/sessions_tests/tests.py:144:45        asetdefault         U       ssertEqual(await self.session.asetdefault(\"foo\", \"baz\"), \"bar"
  - "tests/sessions_tests/tests.py:172:42        ahas                U       assertIs(await self.session.ahas_key(\"some key\"), True"
  - "tests/sessions_tests/tests.py:187:50        avalues             U       list(await self.session.avalues()), [])"
  - "tests/sessions_tests/tests.py:192:50        avalues             U       list(await self.session.avalues()), [1])"
  - "tests/sessions_tests/tests.py:208:50        akeys               U       list(await self.session.akeys()), [\"x\"])"
  - "tests/sessions_tests/tests.py:224:50        aitems              U       list(await self.session.aitems()), [(\"x\", 1)])"
  - "tests/sessions_tests/tests.py:271:28        aflush              U       await self.session.aflush()"
  - "tests/sessions_tests/tests.py:293:45        aitems              U       list(await self.session.aitems())"
  - "tests/sessions_tests/tests.py:294:28        acycle              U       await self.session.acycle_key()"
  - "tests/sessions_tests/tests.py:297:50        aitems              U       list(await self.session.aitems()), prev_data)"
  - "tests/sessions_tests/tests.py:312:40        aitems              U       await self.session.aitems()"
  - "tests/sessions_tests/tests.py:315:28        acycle              U       await self.session.acycle_key()"
  - "tests/sessions_tests/tests.py:316:50        aitems              U       CountEqual(await self.session.aitems(), prev_data)"
  - "tests/sessions_tests/tests.py:318:19        doesnt (doesn't)    U       def test_save_doesnt_clear_data(self):"
  - "tests/sessions_tests/tests.py:323:25        doesnt (doesn't)    U       async def test_save_doesnt_clear_data_async(self"
  - "tests/sessions_tests/tests.py:357:12        Falsey              U       \"\"\"Falsey values (Such as an empty"
  - "tests/sessions_tests/tests.py:546:32        flaskdj             U       base64.b64encode(b\"flaskdj:alkdjf\").decode(\"ascii"
  - "tests/sessions_tests/tests.py:546:40        alkdjf              U       b64encode(b\"flaskdj:alkdjf\").decode(\"ascii\"),"
  - "tests/sessions_tests/tests.py:590:45        ahas                U       assertIs(await new_session.ahas_key(\"foo\"), False)"
  - "tests/sessions_tests/tests.py:601:33        someunknownkey      U       session = self.backend(\"someunknownkey\")"
  - "tests/sessions_tests/tests.py:607:51        someunknownkey      U       session.session_key, \"someunknownkey\")"
  - "tests/sessions_tests/tests.py:610:33        someunknownkey      U       session = self.backend(\"someunknownkey\")"
  - "tests/sessions_tests/tests.py:611:23        aload               U       await session.aload()"
  - "tests/sessions_tests/tests.py:616:51        someunknownkey      U       session.session_key, \"someunknownkey\")"
  - "tests/sessions_tests/tests.py:660:35        aload               U       assertEqual(await s1.aload(), {})"
  - "tests/sessions_tests/tests.py:693:14        sessionmanager      U       def test_sessionmanager_save(self):"
  - "tests/sessions_tests/tests.py:904:26        forwardslash        U       def test_invalid_key_forwardslash(self):"
  - "tests/sessions_tests/tests.py:1005:71       acache              U       get(await self.session.acache_key()))"
  - "tests/sessions_tests/tests.py:1165:49       doesnt (doesn't)    U       without_session_cookie_doesnt_set_cookie(self):"
  - "tests/sessions_tests/tests.py:1343:20       aload               U       async def test_aload(self):"
  - "tests/sessions_tests/tests.py:1346:32       aload               U       await self.session.aload()"
  - "tests/sessions_tests/tests.py:1365:20       atest               U       async def test_atest_cookie(self):"
  - "tests/sessions_tests/tests.py:1366:42       ahas                U       assertIs(await self.session.ahas_key(self.session.TEST"
  - "tests/sessions_tests/tests.py:1368:42       atest               U       assertIs(await self.session.atest_cookie_worked(), True"
  - "tests/sessions_tests/tests.py:1370:42       ahas                U       assertIs(await self.session.ahas_key(self.session.TEST"
  - "tests/settings_tests/tests.py:182:23        doesnt (doesn't)        U       def test_override_doesnt_leak(self):"
  - "tests/settings_tests/tests.py:324:14        nonupper                U       def test_nonupper_settings_prohibited"
  - "tests/settings_tests/tests.py:329:14        nonupper                U       def test_nonupper_settings_ignored_in"
  - "tests/settings_tests/tests.py:374:47        wrongvalue              U       FORWARDED_PROTO\"] = \"wrongvalue\""
  - "tests/settings_tests/tests.py:400:53        wrongvalue              U       FORWARDED_PROTO\"] = \"http ,wrongvalue,http,http\""
  - "tests/settings_tests/tests.py:441:26        lazysettings            U       def test_unevaluated_lazysettings_repr(self):"
  - "tests/settings_tests/tests.py:446:24        lazysettings            U       def test_evaluated_lazysettings_repr(self):"
  - "tests/settings_tests/tests.py:454:14        usersettingsholder      U       def test_usersettingsholder_repr(self):"
  - "tests/settings_tests/tests.py:621:43        somesubpath             U       for script_name in [\"/somesubpath\", \"/somesubpath/\","
  - "tests/settings_tests/tests.py:621:59        somesubpath             U       in [\"/somesubpath\", \"/somesubpath/\", \"/\", \"\", None]:"
  - "tests/settings_tests/tests.py:632:16        somesubpath             U       (\"/somesubpath\", \"path/\", \"/somesubpath"
  - "tests/settings_tests/tests.py:632:41        somesubpath             U       somesubpath\", \"path/\", \"/somesubpath/path/\"),"
  - "tests/settings_tests/tests.py:633:16        somesubpath             U       (\"/somesubpath/\", \"path/\", \"/somesubpath"
  - "tests/settings_tests/tests.py:638:24        myhost                  U       \"htp://myhost.com/path/\","
  - "tests/settings_tests/tests.py:639:37        myhost                  U       \"/somesubpath/htp://myhost.com/path/\","
  - "tests/shell/tests.py:92:14          bpython     U       def test_bpython(self):"
  - "tests/shell/tests.py:94:14          bpython     U       mock_bpython = mock.Mock(embed=mock"
  - "tests/shell/tests.py:96:45          bpython     U       dict(sys.modules, {\"bpython\": mock_bpython}):"
  - "tests/shell/tests.py:96:60          bpython     U       modules, {\"bpython\": mock_bpython}):"
  - "tests/shell/tests.py:97:17          bpython     U       cmd.bpython({})"
  - "tests/shortcuts/tests.py:23:75          rendertest      U       Type\"], \"application/x-rendertest\")"
  - "tests/shortcuts/views.py:37:37          rendertest      U       type=\"application/x-rendertest\","
  - "tests/signals/tests.py:3:26         markcoroutinefunction       U       asgiref.sync import markcoroutinefunction"
  - "tests/signals/tests.py:205:42       Rayuela                     U       objects.create(name=\"Rayuela\")"
  - "tests/signals/tests.py:243:42       Rayuela                     U       objects.create(name=\"Rayuela\")"
  - "tests/signals/tests.py:285:63       Passat                      U       Volkswagen\", model=\"Passat\")"
  - "tests/signals/tests.py:550:9        markcoroutinefunction       U       markcoroutinefunction(self)"
  - "tests/signals/tests.py:558:20       asend                       U       async def test_asend(self):"
  - "tests/signals/tests.py:564:31       asend                       U       result = await signal.asend(self.__class__)"
  - "tests/signals/tests.py:603:20       asend                       U       async def test_asend_robust(self):"
  - "tests/signals/tests.py:618:31       asend                       U       result = await signal.asend_robust(self.__class"
  - "tests/signals/tests.py:630:20       asend                       U       async def test_asend_only_async_receivers"
  - "tests/signing/tests.py:50:19        VQOZ            U       \"Usf3uVQOZ9m6uPfVonKR-EBXjPe7bjMbp"
  - "tests/signing/tests.py:50:52        Mfsptgkk        U       uPfVonKR-EBXjPe7bjMbp3_Fq8MfsptgkkM1ojidN0BxYaT5HAEN1\""
  - "tests/signing/tests.py:50:62        ojid            U       bjMbp3_Fq8MfsptgkkM1ojidN0BxYaT5HAEN1\""
  - "tests/signing/tests.py:50:74        HAEN            U       MfsptgkkM1ojidN0BxYaT5HAEN1\""
  - "tests/signing/tests.py:51:25        Vkqkn           U       \"VzO9_jVu7R-VkqknHYNvw\","
  - "tests/signing/tests.py:64:16        wjmbk           U       \"q;wjmbk;wkmb\","
  - "tests/signing/tests.py:64:22        wkmb            U       \"q;wjmbk;wkmb\","
  - "tests/signing/tests.py:67:18        osanteuh        U       \"jkw osanteuh ,rcuh nthu aou oauh"
  - "tests/signing/tests.py:67:28        rcuh            U       \"jkw osanteuh ,rcuh nthu aou oauh ,ud du"
  - "tests/signing/tests.py:67:33        nthu            U       \"jkw osanteuh ,rcuh nthu aou oauh ,ud du\","
  - "tests/signing/tests.py:67:42        oauh            U       osanteuh ,rcuh nthu aou oauh ,ud du\","
  - "tests/signing/tests.py:185:18       newsecret       U       key=\"newsecret\", fallback_keys=[\"othersecret"
  - "tests/signing/tests.py:185:46       othersecret     U       newsecret\", fallback_keys=[\"othersecret\", \"secret\"]"
  - "tests/sitemaps_tests/test_http.py:71:16         customised      U       <!-- This is a customised template -->"
  - "tests/sitemaps_tests/test_http.py:143:16        customised      U       <!-- This is a customised template -->"
  - "tests/sitemaps_tests/test_http.py:243:17        datestamp       U       lastmod datestamp shows timezones if Sitemap"
  - "tests/sitemaps_tests/test_http.py:323:70        noodp           U       Robots-Tag\"], \"noindex, noodp, noarchive\")"
  - "tests/sitemaps_tests/test_http.py:326:70        noodp           U       Robots-Tag\"], \"noindex, noodp, noarchive\")"
  - "tests/sitemaps_tests/test_http.py:515:23        sitemod         U       def test_callable_sitemod_partial(self):"
  - "tests/sitemaps_tests/test_http.py:541:23        sitemod         U       def test_callable_sitemod_full(self):"
  - "tests/sitemaps_tests/test_http.py:572:23        sitemod         U       def test_callable_sitemod_no_items(self):"
  - "tests/sitemaps_tests/urls/http.py:163:5         testmodelview       U       def testmodelview(request, id):"
  - "tests/sitemaps_tests/urls/http.py:479:38        testmodelview       U       testmodel/<int:id>/\", testmodelview, name=\"i18n_testmodel"
  - "tests/sphinx/test_github_links.py:171:50        existant (existent)     U       bar.baz.hopefully_non_existant_module\","
  - "tests/staticfiles_tests/cases.py:34:45          asvar       U       snippet(self, path, asvar=False):"
  - "tests/staticfiles_tests/cases.py:35:12          asvar       U       if asvar:"
  - "tests/staticfiles_tests/cases.py:42:49          asvar       U       self, path, result, asvar=False, **kwargs):"
  - "tests/staticfiles_tests/cases.py:43:55          asvar       U       template_snippet(path, asvar)"
  - "tests/staticfiles_tests/cases.py:46:53          asvar       U       exc, path, result, asvar=False, **kwargs):"
  - "tests/staticfiles_tests/test_finders.py:154:37      currsize    U       assertEqual(cache_info.currsize, 1)"
  - "tests/staticfiles_tests/test_handlers.py:1:49           ASGI    U       staticfiles.handlers import ASGIStaticFilesHandler"
  - "tests/staticfiles_tests/test_handlers.py:2:27           asgi    U       django.core.handlers.asgi import ASGIHandler"
  - "tests/staticfiles_tests/test_handlers.py:2:39           ASGI    U       handlers.asgi import ASGIHandler"
  - "tests/staticfiles_tests/test_handlers.py:9:8            ASGI    U       \"\"\"ASGI application that returns"
  - "tests/staticfiles_tests/test_handlers.py:15:11          ASGI    U       class TestASGIStaticFilesHandler(StaticFiles"
  - "tests/staticfiles_tests/test_handlers.py:20:19          ASGI    U       handler = ASGIStaticFilesHandler(ASGIHandler"
  - "tests/staticfiles_tests/test_management.py:186:14       collectstatis       U       def test_collectstatis_check(self):"
  - "tests/staticfiles_tests/test_storage.py:48:68       asvar               U       file.dad0999e4f8f.txt\", asvar=True"
  - "tests/staticfiles_tests/test_storage.py:107:58      iefix               U       font.b9b105392eb8.eot?#iefix\", content)"
  - "tests/staticfiles_tests/test_storage.py:108:67      Zbse                U       e42714.svg#webfontIyfZbseF\", content)"
  - "tests/staticfiles_tests/test_storage.py:267:45      GURL                U       assertIn(b\"/*# sOuRcEMaPpInGURL=source_map.css.map"
  - "tests/staticfiles_tests/test_storage.py:317:45      GURL                U       assertIn(b\"//# sOuRcEMaPpInGURL=source_map.js.map\","
  - "tests/staticfiles_tests/test_storage.py:352:63      nonutf              U       TEST_ROOT, \"project\", \"nonutf8\")],"
  - "tests/staticfiles_tests/test_storage.py:355:30      nonutf              U       test_post_processing_nonutf8(self):"
  - "tests/staticfiles_tests/test_storage.py:360:44      nonutf              U       assertEqual(\"Post-processing 'nonutf8.css' failed!\\n\\n\","
  - "tests/staticfiles_tests/test_storage.py:618:14      collectstatistic    U       def test_collectstatistic_no_post_process_replaced"
  - "tests/staticfiles_tests/test_templatetags.py:12:60          Fchars      U       , \"/static/special%3Fchars%26quoted.html\""
  - "tests/string_lookup/tests.py:49:24          Bjorn           U       fx = Foo(name=\"Bjorn\", friend=\"François\""
  - "tests/string_lookup/tests.py:53:25          textfields      U       def test_queries_on_textfields(self):"
  - "tests/swappable_models/tests.py:34:45       alternatearticle    U       swappable_models\", \"alternatearticle\"), apps_models)"
  - "tests/swappable_models/tests.py:38:45       alternatearticle    U       swappable_models\", \"alternatearticle\"), apps_models)"
  - "tests/syndication_tests/feeds.py:52:18          scomments       U       return \"%scomments\" % item.get_absolute"
  - "tests/syndication_tests/feeds.py:227:18         sarticle        U       return \"%sarticle/%s/\" % (item.entry.get"
  - "tests/syndication_tests/feeds.py:230:18         scomments       U       return \"%scomments\" % self.item_link(item"
  - "tests/syndication_tests/tests.py:714:50         feedurl     U       client.get(\"/syndication/feedurl/\")"
  - "tests/syndication_tests/urls.py:35:23       feedurl     U       path(\"syndication/feedurl/\", feeds.TestFeedUrlFeed"
  - "tests/template_backends/test_django.py:110:48       reraised    U       tag modules should be reraised with a helpful message"
  - "tests/template_tests/broken_tag.py:1:20         Xtemplate       U       from django import Xtemplate # NOQA"
  - "tests/template_tests/filter_tests/test_add.py:20:33         napis           U       \"add02\": '{{ i|add:\"napis\" }}'})"
  - "tests/template_tests/filter_tests/test_add.py:58:35         stringlazy      U       assertEqual(output, \"stringlazy\")"
  - "tests/template_tests/filter_tests/test_add.py:66:35         stringlazy      U       assertEqual(output, \"stringlazy\")"
  - "tests/template_tests/filter_tests/test_cut.py:40:38         xamp        U       assertEqual(output, \"xy xamp;y\")"
  - "tests/template_tests/filter_tests/test_cut.py:47:38         xamp        U       assertEqual(output, \"xy xamp;y\")"
  - "tests/template_tests/filter_tests/test_cut.py:62:41         ampy        U       assertEqual(output, \"x&y x&ampy\")"
  - "tests/template_tests/filter_tests/test_cut.py:69:49         ampy        U       output, \"x&amp;y x&amp;ampy\")"
  - "tests/template_tests/filter_tests/test_cut.py:74:77         mngled      U       a\"), \" string to be mngled\")"
  - "tests/template_tests/filter_tests/test_cut.py:77:66         stri        U       mangled\", \"ng\"), \"a stri to be maled\")"
  - "tests/template_tests/filter_tests/test_cut.py:77:77         maled       U       ng\"), \"a stri to be maled\")"
  - "tests/template_tests/filter_tests/test_date.py:29:37        janvier     U       assertEqual(output, \"1 janvier 2008\")"
  - "tests/template_tests/filter_tests/test_date.py:75:14        datelazy    U       @setup({\"datelazy\": '{{ t|date:_(\"H:i"
  - "tests/template_tests/filter_tests/test_date.py:77:48        datelazy    U       engine.render_to_string(\"datelazy\", {\"t\": time(0, 0)}"
  - "tests/template_tests/filter_tests/test_dictsort.py:62:27        Jonny       U       {\"name\": \"Jonny B Goode\", \"age\": 18"
  - "tests/template_tests/filter_tests/test_dictsort.py:70:41        Jonny       U       age\", 18), (\"name\", \"Jonny B Goode\")],"
  - "tests/template_tests/filter_tests/test_dictsortreversed.py:11:27        Jonny       U       {\"name\": \"Jonny B Goode\", \"age\": 18"
  - "tests/template_tests/filter_tests/test_dictsortreversed.py:21:41        Jonny       U       age\", 18), (\"name\", \"Jonny B Goode\")],"
  - "tests/template_tests/filter_tests/test_escapejs.py:16:34        Ajavascript     U       testing\\\\u000D\\\\u000Ajavascript \""
  - "tests/template_tests/filter_tests/test_escapejs.py:28:34        Ajavascript     U       testing\\\\u000D\\\\u000Ajavascript \""
  - "tests/template_tests/filter_tests/test_escapejs.py:55:20        Cscript         U       \"\\\\u003Cscript\\\\u003Eand this\\\\u00"
  - "tests/template_tests/filter_tests/test_escapejs.py:55:33        Eand            U       \"\\\\u003Cscript\\\\u003Eand this\\\\u003C/script\\"
  - "tests/template_tests/filter_tests/test_escapejs.py:68:20        Cscript         U       \"\\\\u003Cscript\\\\u003Ethis\\\\u003C/script"
  - "tests/template_tests/filter_tests/test_escapejs.py:68:33        Ethis           U       \"\\\\u003Cscript\\\\u003Ethis\\\\u003C/script\\\\u003E"
  - "tests/template_tests/filter_tests/test_escapeseq.py:7:7         Escapeseq       U       class EscapeseqTests(SimpleTestCase"
  - "tests/template_tests/filter_tests/test_escapeseq.py:9:10        escapeseq       U       The \"escapeseq\" filter works the same"
  - "tests/template_tests/filter_tests/test_escapeseq.py:15:14       escapeseq       U       \"escapeseq_basic\": ("
  - "tests/template_tests/filter_tests/test_escapeseq.py:16:23       escapeseq       U       '{{ a|escapeseq|join:\", \" }} -- {{ b"
  - "tests/template_tests/filter_tests/test_escapeseq.py:16:54       escapeseq       U       join:\", \" }} -- {{ b|escapeseq|join:\", \" }}'"
  - "tests/template_tests/filter_tests/test_escapeseq.py:22:14       escapeseq       U       \"escapeseq_basic\","
  - "tests/template_tests/filter_tests/test_floatformat.py:1:30          localcontext    U       decimal import Decimal, localcontext"
  - "tests/template_tests/filter_tests/test_floatformat.py:90:15         Cómo            U       \"¿Cómo esta usted?\","
  - "tests/template_tests/filter_tests/test_floatformat.py:90:20         esta            U       \"¿Cómo esta usted?\","
  - "tests/template_tests/filter_tests/test_floatformat.py:90:25         usted           U       \"¿Cómo esta usted?\","
  - "tests/template_tests/filter_tests/test_floatformat.py:200:20        dunder          U       def test_float_dunder_method(self):"
  - "tests/template_tests/filter_tests/test_floatformat.py:214:14        localcontext    U       with localcontext() as ctx:"
  - "tests/template_tests/filter_tests/test_floatformat.py:215:17        prec            U       ctx.prec = 2"
  - "tests/template_tests/filter_tests/test_iriencode.py:44:50       ndelag      U       iriencode(\"S\\xf8r-Tr\\xf8ndelag\"), \"S%C3%B8r-Tr%C3%B"
  - "tests/template_tests/filter_tests/test_iriencode.py:44:78       ndelag      U       , \"S%C3%B8r-Tr%C3%B8ndelag\")"
  - "tests/template_tests/filter_tests/test_json_script.py:16:28         Eescaping       U       '\\\\u003Cb\\\\u003Eescaping\\\\u003C/b\\\\u003E\"}'"
  - "tests/template_tests/filter_tests/test_linebreaks.py:57:48          nbuz    U       filter(\"foo\\n<a>bar</a>\\nbuz\"),"
  - "tests/template_tests/filter_tests/test_linebreaks.py:63:48          nbuz    U       filter(\"foo\\n<a>bar</a>\\nbuz\", autoescape=False)"
  - "tests/template_tests/filter_tests/test_linebreaksbr.py:51:43        nbuz    U       linebreaksbr(\"foo\\n<a>bar</a>\\nbuz\"),"
  - "tests/template_tests/filter_tests/test_linebreaksbr.py:57:43        nbuz    U       linebreaksbr(\"foo\\n<a>bar</a>\\nbuz\", autoescape=False)"
  - "tests/template_tests/filter_tests/test_linenumbers.py:57:42         nbuz    U       linenumbers(\"foo\\n<a>bar</a>\\nbuz\"),"
  - "tests/template_tests/filter_tests/test_linenumbers.py:63:42         nbuz    U       linenumbers(\"foo\\n<a>bar</a>\\nbuz\", autoescape=False)"
  - "tests/template_tests/filter_tests/test_pluralize.py:24:19       cand    U       @setup({\"t\": 'cand{{ value|pluralize:\"y"
  - "tests/template_tests/filter_tests/test_slice.py:51:60       aceg    U       abcdefg\", \"0::2\"), \"aceg\")"
  - "tests/template_tests/filter_tests/test_slugify.py:47:34         phant       U       slugify(\"Un \\xe9l\\xe9phant \\xe0 l'or\\xe9e du bois"
  - "tests/template_tests/filter_tests/test_slugify.py:47:58         bois        U       phant \\xe0 l'or\\xe9e du bois\"),"
  - "tests/template_tests/filter_tests/test_slugify.py:48:28         loree       U       \"un-elephant-a-loree-du-bois\","
  - "tests/template_tests/filter_tests/test_slugify.py:48:37         bois        U       elephant-a-loree-du-bois\","
  - "tests/template_tests/filter_tests/test_title.py:24:33       discoth     U       self.assertEqual(title(\"discoth\\xe8que\"), \"Discoth\\xe"
  - "tests/template_tests/filter_tests/test_title.py:24:52       Discoth     U       \"discoth\\xe8que\"), \"Discoth\\xe8que\")"
  - "tests/template_tests/filter_tests/test_truncatechars_html.py:40:40          ngstr       U       truncatechars_html(\"<b>\\xc5ngstr\\xf6m</b> was here\","
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:48:37          ngstr       U       truncatewords_html(\"\\xc5ngstr\\xf6m was here\", 1),"
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:48:68          ngstr       U       was here\", 1), \"\\xc5ngstr\\xf6m …\""
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:54:30          iacute      U       \"<i>Buenos d&iacute;as! &#x00bf;C&oacute"
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:54:65          aacute      U       0bf;C&oacute;mo est&aacute;?</i>\", 3"
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:56:24          días        U       \"<i>Buenos días! ¿Cómo …</i>\","
  - "tests/template_tests/filter_tests/test_truncatewords_html.py:56:31          Cómo        U       \"<i>Buenos días! ¿Cómo …</i>\","
  - "tests/template_tests/filter_tests/test_truncatewords.py:43:14       overtruncate    U       def test_overtruncate(self):"
  - "tests/template_tests/filter_tests/test_unordered_list.py:122:14         ulitem      U       def test_ulitem(self):"
  - "tests/template_tests/filter_tests/test_unordered_list.py:128:25         ulitem      U       return \"ulitem-%s\" % str(self.title"
  - "tests/template_tests/filter_tests/test_unordered_list.py:135:20         ulitem      U       \"\\t<li>ulitem-a</li>\\n\\t<li>ulitem"
  - "tests/template_tests/filter_tests/test_unordered_list.py:135:41         ulitem      U       ulitem-a</li>\\n\\t<li>ulitem-b</li>\\n\\t\""
  - "tests/template_tests/filter_tests/test_unordered_list.py:136:18         ulitem      U       \"<li>ulitem-&lt;a&gt;c&lt;/a&gt"
  - "tests/template_tests/filter_tests/test_urlencode.py:16:49       Fslash      U       output, \"/test/escape%2Fslash/\")"
  - "tests/template_tests/filter_tests/test_urlize.py:124:21         djangoproject       U       urlize(\"djangoproject.org\"),"
  - "tests/template_tests/filter_tests/test_urlize.py:125:64         djangoproject       U       org\" rel=\"nofollow\">djangoproject.org</a>',"
  - "tests/template_tests/filter_tests/test_urlize.py:128:21         djangoproject       U       urlize(\"djangoproject.org/\"),"
  - "tests/template_tests/filter_tests/test_urlize.py:129:65         djangoproject       U       org/\" rel=\"nofollow\">djangoproject.org/</a>',"
  - "tests/template_tests/filter_tests/test_urlize.py:171:38         overquote           U       Check urlize doesn't overquote already quoted urls"
  - "tests/template_tests/filter_tests/test_urlize.py:172:9          teststring          U       teststring is the urlquoted version"
  - "tests/template_tests/filter_tests/test_urlize.py:172:27         urlquoted           U       teststring is the urlquoted version of 'http://hi"
  - "tests/template_tests/filter_tests/test_urlize.py:183:25         mystore             U       urlize(\"www.mystore.com/30%OffCoupons!\""
  - "tests/template_tests/filter_tests/test_urlize.py:185:18         mystore             U       \"www.mystore.com/30%OffCoupons</a"
  - "tests/template_tests/filter_tests/test_urlize.py:252:14         tlds                U       def test_tlds(self):"
  - "tests/template_tests/filter_tests/test_urlize.py:269:39         uppercased          U       Check urlize accepts uppercased URL schemes"
  - "tests/template_tests/filter_tests/test_urlize.py:427:27         djangoproject       U       urlize(\"Go to djangoproject.com! and enjoy.\"),"
  - "tests/template_tests/filter_tests/test_urlize.py:464:14         lazystring          U       def test_lazystring(self):"
  - "tests/template_tests/filter_tests/test_urlizetrunc.py:73:14         overtruncate    U       def test_overtruncate(self):"
  - "tests/template_tests/filter_tests/test_wordcount.py:36:37       oneword     U       assertEqual(wordcount(\"oneword\"), 1)"
  - "tests/template_tests/syntax_tests/i18n/base.py:8:1          pdir    U       pdir = os.path.split(os.path"
  - "tests/template_tests/syntax_tests/i18n/base.py:10:18        pdir    U       os.path.join(pdir, \"i18n\", \"other\", \"locale"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:80:14         legacyi         U       \"legacyi18n04\": ("
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:87:14         legacyi         U       def test_legacyi18n04(self):"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:89:48         legacyi         U       engine.render_to_string(\"legacyi18n04\", {\"anton\": \"Å"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:103:35        xxxyyyxxx       U       assertEqual(output, \"xxxyyyxxx\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:119:14        legacyi         U       \"legacyi18n07\": \"{% load i18n"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:124:14        legacyi         U       def test_legacyi18n07(self):"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:42        Seite           U       assertEqual(output, \"Error: Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:48        nicht           U       output, \"Error: Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:54        gefunden        U       \"Error: Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:376:31        asvar           U       blocktranslate tag with asvar"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:381:36        asvar           U       \"{% blocktranslate asvar page_not_found %}Page"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:36        Seite           U       assertEqual(output, \">Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:42        nicht           U       assertEqual(output, \">Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:48        gefunden        U       output, \">Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:395:59        asvar           U       page_not_found=pg_404 asvar output %}\""
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:408:59        asvar           U       page_not_found=pg_404 asvar output %}\""
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:43        Seite           U       assertEqual(output, \">Error: Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:49        nicht           U       output, \">Error: Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:55        gefunden        U       >Error: Seite nicht gefunden<\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:421:19        asvar           U       \"i18n_asvar_safestring\": ("
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:590:41        Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:604:41        Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:620:41        Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:630:49        Ergebnis        U       ssertEqual(rendered, \"1 Super-Ergebnis\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:638:49        Ergebnisse      U       ssertEqual(rendered, \"2 Super-Ergebnisse\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:646:43        anderen         U       assertEqual(rendered, \"1 anderen Super-Ergebnis\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:646:57        Ergebnis        U       rendered, \"1 anderen Super-Ergebnis\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:654:43        andere          U       assertEqual(rendered, \"2 andere Super-Ergebnisse\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:654:56        Ergebnisse      U       rendered, \"2 andere Super-Ergebnisse\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:663:44        gibt            U       assertEqual(rendered, \"Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:663:51        Kommentare      U       rendered, \"Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:41        Andere          U       assertEqual(rendered, \"Andere: Es gibt 5 Kommentare"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:52        gibt            U       rendered, \"Andere: Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:59        Kommentare      U       \"Andere: Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:687:44        gibt            U       assertEqual(rendered, \"Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:687:51        Kommentare      U       rendered, \"Es gibt 5 Kommentare\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:695:43        andere          U       assertEqual(rendered, \"2 andere Super-Ergebnisse\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:695:56        Ergebnisse      U       rendered, \"2 andere Super-Ergebnisse\")"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:722:40        personne        U       s is translated as %(personne)s in fr.po)."
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:748:23        Transn          U       class TranslationBlockTransnTagTests(TranslationBlockTrans"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:777:30        btrans          U       test_multiple_locale_btrans(self):"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:785:41        btrans          U       multiple_locale_deactivate_btrans(self):"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:793:44        btrans          U       locale_direct_switch_btrans(self):"
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:833:63        Ergebnis        U       percent\": 42})), \"Das Ergebnis war 42%\""
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:837:22        stellt          U       \"42% stellt 1 Objekt dar\","
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:837:31        Objekt          U       \"42% stellt 1 Objekt dar\","
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:841:22        stellt          U       \"42% stellt 4 Objekte dar\","
  - "tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:841:31        Objekte         U       \"42% stellt 4 Objekte dar\","
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:26:62        maďarsky        U       Hungarian Magyar False maďarsky\")"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:31:17        langcode        U       \"{{ langcode|language_name }} {{"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:31:46        langcode        U       language_name }} {{ langcode|language_name_local"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:32:17        langcode        U       \"{{ langcode|language_bidi }} {{"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:32:46        langcode        U       language_bidi }} {{ langcode|language_name_translated"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:36:59        langcode        U       to_string(\"i18n33\", {\"langcode\": \"nl\"})"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:37:41        Nederlands      U       assertEqual(output, \"Dutch Nederlands False Dutch\")"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:41:45        Nederlands      U       assertEqual(output, \"Dutch Nederlands False nizozemsky\")"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:41:62        nizozemsky      U       Dutch Nederlands False nizozemsky\")"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:59:26        italiano        U       \"it: Italian/italiano/italsky bidi=False;"
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:59:35        italsky         U       it: Italian/italiano/italsky bidi=False; \""
  - "tests/template_tests/syntax_tests/i18n/test_filters.py:60:34        francouzsky     U       fr: French/français/francouzsky bidi=False; \","
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:25:34         italiano        U       output, \"it: Italian/italiano bidi=False; no: Norwegian"
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:25:69         norsk           U       False; no: Norwegian/norsk bidi=False; \""
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:62:26         italiano        U       \"it: Italian/italiano/italsky bidi=False;"
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:62:35         italsky         U       it: Italian/italiano/italsky bidi=False; \""
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:63:34         francouzsky     U       fr: French/français/francouzsky bidi=False; \","
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:24:46          Deutsch     U       output, \"de: German/Deutsch bidi=False\")"
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:49:46          Deutsch     U       output, \"de: German/Deutsch/německy bidi=False\""
  - "tests/template_tests/syntax_tests/i18n/test_get_language_info.py:49:54          německy     U       \"de: German/Deutsch/německy bidi=False\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:49:53          xxxyyyxxx       U       i18n %}{% translate 'xxxyyyxxx' %}\"})"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:53:35          xxxyyyxxx       U       assertEqual(output, \"xxxyyyxxx\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:55:53          xxxyyyxxx       U       i18n %}{% translate \"xxxyyyxxx\" %}'})"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:59:35          xxxyyyxxx       U       assertEqual(output, \"xxxyyyxxx\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:66:35          Seite           U       assertEqual(output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:66:41          nicht           U       assertEqual(output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:66:47          gefunden        U       output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:96:35          nicht           U       assertEqual(output, \"nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:96:41          gefunden        U       assertEqual(output, \"nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:102:35         SEITE           U       assertEqual(output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:102:41         NICHT           U       assertEqual(output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:102:47         GEFUNDEN        U       output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:104:52         somevar         U       i18n %}{% translate somevar|upper %}\"})"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:108:29         somevar         U       \"i18n25\", {\"somevar\": \"Page not found\"}"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:110:35         SEITE           U       assertEqual(output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:110:41         NICHT           U       assertEqual(output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:110:47         GEFUNDEN        U       output, \"SEITE NICHT GEFUNDEN\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:124:35         Seite           U       assertEqual(output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:124:41         nicht           U       assertEqual(output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:124:47         gefunden        U       output, \"Seite nicht gefunden\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:145:60         badoption       U       }{% translate \"Yes\" badoption %}'})"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:147:48         badoption       U       argument for '{}' tag: 'badoption'\".format(tag_name)"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:224:41         Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:236:41         Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:248:41         Kann            U       assertEqual(rendered, \"Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_translate.py:262:48         Kann            U       assertEqual(rendered, \"Value: Kann\")"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:60:30          loadi       U       test_multiple_locale_loadi18n(self):"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:66:30          loadi       U       test_multiple_locale_loadi18n_deactivate(self)"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:72:30          loadi       U       test_multiple_locale_loadi18n_direct_switch(self"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:88:35          Passwort    U       assertEqual(output, \"Passwort\")"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:101:39         Passwort    U       assertEqual(output, \"foo Passwort Passwort\")"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:101:48         Passwort    U       output, \"foo Passwort Passwort\")"
  - "tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:107:35         Passwort    U       assertEqual(output, \"Passwort\")"
  - "tests/template_tests/syntax_tests/test_autoescape.py:95:25          filtertag           U       \"autoescape-filtertag01\": ("
  - "tests/template_tests/syntax_tests/test_autoescape.py:100:25         filtertag           U       def test_autoescape_filtertag01(self):"
  - "tests/template_tests/syntax_tests/test_autoescape.py:107:54         filtertag           U       to_string(\"autoescape-filtertag01\", {\"first\": \"<a>\""
  - "tests/template_tests/syntax_tests/test_autoescape.py:132:25         stringiterations    U       @setup({\"autoescape-stringiterations01\": \"{% for l in var"
  - "tests/template_tests/syntax_tests/test_autoescape.py:133:25         stringiterations    U       def test_autoescape_stringiterations01(self):"
  - "tests/template_tests/syntax_tests/test_autoescape.py:138:25         stringiterations    U       \"autoescape-stringiterations01\", {\"var\": \"K&R\"}"
  - "tests/template_tests/syntax_tests/test_basic.py:50:41       INVALI          U       assertEqual(output, \"asINVALIDdf\")"
  - "tests/template_tests/syntax_tests/test_basic.py:90:39       otherclass      U       basic-syntax10\": \"{{ var.otherclass.method }}\"})"
  - "tests/template_tests/syntax_tests/test_basic.py:98:39       blech           U       basic-syntax11\": \"{{ var.blech }}\"})"
  - "tests/template_tests/syntax_tests/test_cache.py:122:25      freddled            U       \"Oh freddled gruntbuggly/Thy micturations"
  - "tests/template_tests/syntax_tests/test_cache.py:122:34      gruntbuggly         U       \"Oh freddled gruntbuggly/Thy micturations are"
  - "tests/template_tests/syntax_tests/test_cache.py:122:50      micturations        U       freddled gruntbuggly/Thy micturations are to me/\""
  - "tests/template_tests/syntax_tests/test_cache.py:123:25      plurdled            U       \"As plurdled gabbleblotchits/On a"
  - "tests/template_tests/syntax_tests/test_cache.py:123:34      gabbleblotchits     U       \"As plurdled gabbleblotchits/On a lurgid bee/\""
  - "tests/template_tests/syntax_tests/test_cache.py:123:55      lurgid              U       gabbleblotchits/On a lurgid bee/\""
  - "tests/template_tests/syntax_tests/test_cache.py:124:27      mordiously          U       \"That mordiously hath bitled out/Its"
  - "tests/template_tests/syntax_tests/test_cache.py:124:43      bitled              U       That mordiously hath bitled out/Its earted jurtles"
  - "tests/template_tests/syntax_tests/test_cache.py:124:58      earted              U       hath bitled out/Its earted jurtles/\""
  - "tests/template_tests/syntax_tests/test_cache.py:124:65      jurtles             U       bitled out/Its earted jurtles/\""
  - "tests/template_tests/syntax_tests/test_cache.py:126:22      gobberwarts         U       \"gobberwarts with my blurglecruncheon"
  - "tests/template_tests/syntax_tests/test_cache.py:126:42      blurglecruncheon    U       gobberwarts with my blurglecruncheon/See if I don't.\""
  - "tests/template_tests/syntax_tests/test_cache.py:173:9       cachenode           U       cachenode = t.nodelist[1]"
  - "tests/template_tests/syntax_tests/test_cache.py:174:26      cachenode           U       self.assertEqual(cachenode.fragment_name, \"regression"
  - "tests/template_tests/syntax_tests/test_comment.py:27:44         somerandomtag       U       syntax05\": \"foo{# {% somerandomtag %} #}\"})"
  - "tests/template_tests/syntax_tests/test_comment.py:92:51         somerandomtag       U       foo{% comment %} {% somerandomtag %} {% endcomment %}"
  - "tests/template_tests/syntax_tests/test_cycle.py:46:35       abca            U       assertEqual(output, \"abca\")"
  - "tests/template_tests/syntax_tests/test_cycle.py:144:35      abca            U       assertEqual(output, \"abca\")"
  - "tests/template_tests/syntax_tests/test_cycle.py:193:35      bcabcabcccaa    U       assertEqual(output, \"bcabcabcccaa\")"
  - "tests/template_tests/syntax_tests/test_cycle.py:199:22      doesnothing     U       \"{% with doesnothing=irrelevant %}\""
  - "tests/template_tests/syntax_tests/test_cycle.py:216:35      bcabcabcccaa    U       assertEqual(output, \"bcabcabcccaa\")"
  - "tests/template_tests/syntax_tests/test_extends.py:28:48         newblock    U       inheritance01' %}{% block newblock %}NO DISPLAY{% endblock"
  - "tests/template_tests/syntax_tests/test_filter_syntax.py:242:9       reraised    U       reraised."
  - "tests/template_tests/syntax_tests/test_filter_tag.py:23:49          djangospam      U       filter cut:remove %}djangospam{% endfilter %}\"})"
  - "tests/template_tests/syntax_tests/test_firstof.py:86:34         asvar       U       all_false_arguments_asvar(self):"
  - "tests/template_tests/syntax_tests/test_for.py:198:18        loopvar     U       A single loopvar doesn't truncate the"
  - "tests/template_tests/syntax_tests/test_if_changed.py:86:26          numy        U       \"{% for y in numy %}{% ifchanged %}{{"
  - "tests/template_tests/syntax_tests/test_if_changed.py:92:67          numy        U       \"numx\": (2, 2, 2), \"numy\": (3, 3, 3)}"
  - "tests/template_tests/syntax_tests/test_if_changed.py:98:44          datalist    U       8\": \"{% for data in datalist %}{% for c,d in data"
  - "tests/template_tests/syntax_tests/test_if_changed.py:107:18         datalist    U       \"datalist\": ["
  - "tests/template_tests/syntax_tests/test_if_changed.py:113:35         accd        U       assertEqual(output, \"accd\")"
  - "tests/template_tests/syntax_tests/test_if.py:622:28         shortcircuited      U       If evaluations are shortcircuited where possible"
  - "tests/template_tests/syntax_tests/test_include.py:243:38        baseloader      U       extends_include_missing_baseloader(self):"
  - "tests/template_tests/syntax_tests/test_include.py:254:38        cachedloader    U       extends_include_missing_cachedloader(self):"
  - "tests/template_tests/syntax_tests/test_include.py:283:18        tmpl            U       \"tmpl\": engine.from_string"
  - "tests/template_tests/syntax_tests/test_include.py:286:15        tmpl            U       outer_tmpl = engine.from_string"
  - "tests/template_tests/syntax_tests/test_include.py:286:53        tmpl            U       from_string(\"{% include tmpl %}\")"
  - "tests/template_tests/syntax_tests/test_include.py:287:24        tmpl            U       output = outer_tmpl.render(ctx)"
  - "tests/template_tests/syntax_tests/test_include.py:311:9         tmpl            U       tmpl = loader.get_template"
  - "tests/template_tests/syntax_tests/test_invalid_string.py:9:14           invalidstr      U       @setup({\"invalidstr01\": '{{ var|default"
  - "tests/template_tests/syntax_tests/test_invalid_string.py:10:14          invalidstr      U       def test_invalidstr01(self):"
  - "tests/template_tests/syntax_tests/test_invalid_string.py:11:48          invalidstr      U       engine.render_to_string(\"invalidstr01\")"
  - "tests/template_tests/syntax_tests/test_invalid_string.py:17:14          invalidstr      U       @setup({\"invalidstr02\": '{{ var|default"
  - "tests/template_tests/syntax_tests/test_invalid_string.py:18:14          invalidstr      U       def test_invalidstr02(self):"
  - "tests/template_tests/syntax_tests/test_regroup.py:119:50        thisaintright       U       regroup data by bar thisaintright grouped %}\"})"
  - "tests/template_tests/syntax_tests/test_regroup.py:124:43        thisaintright       U       \": \"{% regroup data thisaintright bar as grouped %}\"}"
  - "tests/template_tests/syntax_tests/test_regroup.py:129:61        toomanyargs         U       data by bar as grouped toomanyargs %}\"})"
  - "tests/template_tests/syntax_tests/test_resetcycle.py:87:35          abaaba      U       assertEqual(output, \"abaaba\")"
  - "tests/template_tests/syntax_tests/test_simple_tag.py:10:57          minusone    U       {% load custom %}{% minusone 7 %}\"})"
  - "tests/template_tests/syntax_tests/test_static.py:101:60         Fchars      U       URL, \"/static/special%3Fchars%26quoted.html\"),"
  - "tests/template_tests/syntax_tests/test_url.py:49:31         метка                   U       setup({\"url05\": '{% url \"метка_оператора\" v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:49:37         оператора               U       url05\": '{% url \"метка_оператора\" v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:54:31         метка                   U       setup({\"url06\": '{% url \"метка_оператора_2\" tag=v"
  - "tests/template_tests/syntax_tests/test_url.py:54:37         оператора               U       url06\": '{% url \"метка_оператора_2\" tag=v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:59:31         метка                   U       setup({\"url08\": '{% url \"метка_оператора\" v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:59:37         оператора               U       url08\": '{% url \"метка_оператора\" v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:64:31         метка                   U       setup({\"url09\": '{% url \"метка_оператора_2\" tag=v"
  - "tests/template_tests/syntax_tests/test_url.py:64:37         оператора               U       url09\": '{% url \"метка_оператора_2\" tag=v %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:171:46        unterminatedstring      U       '{% url \"view\" id=\"unterminatedstring %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:218:49        unterminatedstring      U       % url named_url id=\"unterminatedstring %}'})"
  - "tests/template_tests/syntax_tests/test_url.py:229:18        asvar                   U       @setup({\"url-asvar01\": '{% url \"index\""
  - "tests/template_tests/syntax_tests/test_url.py:230:18        asvar                   U       def test_url_asvar01(self):"
  - "tests/template_tests/syntax_tests/test_url.py:231:52        asvar                   U       render_to_string(\"url-asvar01\")"
  - "tests/template_tests/syntax_tests/test_url.py:234:18        asvar                   U       @setup({\"url-asvar02\": '{% url \"index\""
  - "tests/template_tests/syntax_tests/test_url.py:235:18        asvar                   U       def test_url_asvar02(self):"
  - "tests/template_tests/syntax_tests/test_with.py:16:14        legacywith      U       @setup({\"legacywith01\": \"{% with dict.key"
  - "tests/template_tests/syntax_tests/test_with.py:17:14        legacywith      U       def test_legacywith01(self):"
  - "tests/template_tests/syntax_tests/test_with.py:18:48        legacywith      U       engine.render_to_string(\"legacywith01\", {\"dict\": {\"key\""
  - "tests/template_tests/syntax_tests/test_with.py:37:14        legacywith      U       \"legacywith02\": \"{{ key }}{% with"
  - "tests/template_tests/syntax_tests/test_with.py:42:14        legacywith      U       def test_legacywith02(self):"
  - "tests/template_tests/templatetags/bad_tag.py:12:5           badsimpletag    U       def badsimpletag():"
  - "tests/template_tests/templatetags/custom.py:204:44      minusone    U       lambda x: x - 1, name=\"minusone\")"
  - "tests/template_tests/templatetags/tag_27584.py:8:20         endbadtag       U       parser.parse((\"endbadtag\",))"
  - "tests/template_tests/test_base.py:79:14         nonliterals     U       def test_nonliterals(self):"
  - "tests/template_tests/test_custom.py:540:15      Xtemplate       U       \"'Xtemplate'\""
  - "tests/template_tests/test_custom.py:546:24      tagsegg         U       egg_name = \"%s/tagsegg.egg\" % self.egg_dir"
  - "tests/template_tests/test_custom.py:549:30      tagsegg         U       \"trying to load 'tagsegg.templatetags.broken"
  - "tests/template_tests/test_custom.py:550:27      Xtemplate       U       \"import name 'Xtemplate'\""
  - "tests/template_tests/test_custom.py:554:50      tagsegg         U       libraries={\"broken_egg\": \"tagsegg.templatetags.broken"
  - "tests/template_tests/test_custom.py:557:9       ttext           U       ttext = \"{% load working_egg"
  - "tests/template_tests/test_custom.py:558:24      tagsegg         U       egg_name = \"%s/tagsegg.egg\" % self.egg_dir"
  - "tests/template_tests/test_custom.py:562:37      tagsegg         U       \"working_egg\": \"tagsegg.templatetags.working"
  - "tests/template_tests/test_custom.py:565:32      ttext           U       engine.from_string(ttext)"
  - "tests/template_tests/test_extends_relative.py:21:44         tmpl    U       template.render(Context({\"tmpl\": \"./two.html\"}))"
  - "tests/template_tests/test_extends_relative.py:74:44         tmpl    U       template.render(Context({\"tmpl\": \"./include_content"
  - "tests/template_tests/test_loaders.py:52:9           docstrings      U       docstrings in the cached loader"
  - "tests/template_tests/test_loaders.py:197:56         ngstr           U       template_sources(b\"\\xc3\\x85ngstr\\xc3\\xb6m\"))"
  - "tests/template_tests/test_loaders.py:200:37         Straße          U       self.source_checker([\"/Straße\"]) as check_sources"
  - "tests/template_tests/test_loaders.py:201:42         Straße          U       sources(\"Ångström\", [\"/Straße/Ångström\"])"
  - "tests/template_tests/test_loaders.py:223:13         tmppath         U       tmppath = os.path.join(tmpdir"
  - "tests/template_tests/test_loaders.py:224:22         tmppath         U       os.chmod(tmppath, 0o0222)"
  - "tests/template_tests/test_loaders.py:229:14         notafile        U       def test_notafile_error(self):"
  - "tests/template_tests/test_nodelist.py:29:14         textnode        U       def test_textnode_repr(self):"
  - "tests/template_tests/test_nodelist.py:31:13         temptext        U       for temptext, reprtext in ["
  - "tests/template_tests/test_nodelist.py:31:23         reprtext        U       for temptext, reprtext in ["
  - "tests/template_tests/test_nodelist.py:35:43         temptext        U       engine.from_string(temptext)"
  - "tests/template_tests/test_nodelist.py:37:46         reprtext        U       assertEqual(repr(texts[0]), reprtext)"
  - "tests/template_tests/test_nodelist.py:49:59         badsimpletag    U       for i in range %}{% badsimpletag %}{% endfor %}\","
  - "tests/template_tests/test_nodelist.py:54:21         badsimpletag    U       \"{% badsimpletag %}{% endfor %}{% endfor"
  - "tests/template_tests/test_nodelist.py:58:59         badsimpletag    U       for i in range %}{% badsimpletag %}\""
  - "tests/template_tests/test_nodelist.py:64:21         badsimpletag    U       \"{% badsimpletag %}{% endfor %}{% endfor"
  - "tests/template_tests/test_nodelist.py:68:58         badsimpletag    U       for j in five %}{% badsimpletag %}{% endfor %}\","
  - "tests/template_tests/test_parser.py:25:31       sometag     U       TokenType.BLOCK, 'sometag _(\"Page not found\")"
  - "tests/template_tests/test_parser.py:29:22       sometag     U       split, [\"sometag\", '_(\"Page not found"
  - "tests/template_tests/test_response.py:69:11         rebaking        U       # rebaking doesn't change the rendered"
  - "tests/template_tests/test_response.py:207:14        repickling      U       def test_repickling(self):"
  - "tests/template_tests/test_response.py:350:14        repickling      U       def test_repickling(self):"
  - "tests/template_tests/test_smartif.py:3:22           smartif     U       from django.template.smartif import IfParser"
  - "tests/template_tests/tests.py:34:65         reraising       U       original stack trace when reraising"
  - "tests/template_tests/tests.py:48:64         reraising       U       context was lost when reraising the traceback.\""
  - "tests/template_tests/urls.py:25:16          Юникод          U       re_path(r\"^Юникод/(\\w+)/$\", views.client"
  - "tests/template_tests/urls.py:25:54          метка           U       views.client2, name=\"метка_оператора\"),"
  - "tests/template_tests/urls.py:25:60          оператора       U       client2, name=\"метка_оператора\"),"
  - "tests/template_tests/urls.py:26:16          Юникод          U       re_path(r\"^Юникод/(?P<tag>\\S+)/$\", views"
  - "tests/template_tests/urls.py:26:61          метка           U       views.client2, name=\"метка_оператора_2\"),"
  - "tests/template_tests/urls.py:26:67          оператора       U       client2, name=\"метка_оператора_2\"),"
  - "tests/template_tests/utils.py:101:14        otherclass      U       self.otherclass = OtherClass()"
  - "tests/template_tests/utils.py:174:20        Žćžšđ           U       return \"ŠĐĆŽćžšđ\""
  - "tests/test_client_regress/tests.py:201:15       exceedes            U       b\"exceedes the max limit of truncation"
  - "tests/test_client_regress/tests.py:493:10       Redirections        U       \"Redirections to self are caught and"
  - "tests/test_client_regress/tests.py:504:10       Redirections        U       \"Redirections don't loop forever even"
  - "tests/test_client_regress/tests.py:728:63       Slartibartfast      U       reverse(\"arg_view\", args=[\"Slartibartfast\"]))"
  - "tests/test_client_regress/tests.py:730:53       Slartibartfast      U       response.content, b\"Howdy, Slartibartfast\")"
  - "tests/test_client_regress/tests.py:740:64       Slartibartfast      U       reverse(\"arg_view\", args=[\"Slartibartfast\"]))"
  - "tests/test_client_regress/tests.py:742:53       Slartibartfast      U       response.content, b\"Howdy, Slartibartfast\")"
  - "tests/test_client_regress/tests.py:792:42       somename            U       reverse(\"arg_view\", args=[\"somename\"])"
  - "tests/test_client_regress/tests.py:793:42       somename            U       assertEqual(url, \"/arg_view/somename/\")"
  - "tests/test_client_regress/tests.py:805:40       somename            U       reverse(\"arg_view\", args=[\"somename\"])"
  - "tests/test_client_regress/tests.py:833:14       contextlist         U       def test_contextlist_keys(self):"
  - "tests/test_client_regress/tests.py:848:14       contextlist         U       def test_contextlist_get(self):"
  - "tests/test_client_regress/tests.py:1231:22      собака              U       text = \"dog: собака\""
  - "tests/test_client_regress/tests.py:1239:22      собака              U       text = \"dog: собака\""
  - "tests/test_client_regress/tests.py:1247:22      собака              U       text = \"dog: собака\""
  - "tests/test_client_regress/tests.py:1343:19      numbytes            U       def test_read_numbytes_from_empty_request(self"
  - "tests/test_client_regress/tests.py:1359:19      numbytes            U       def test_read_numbytes_from_nonempty_request"
  - "tests/test_client/tests.py:102:37       asgi                U       assertIs(response_copy.asgi_request, response.asgi"
  - "tests/test_client/tests.py:102:60       asgi                U       asgi_request, response.asgi_request)"
  - "tests/test_client/tests.py:106:54       ufffd               U       get(\"/get_view/?var=1\\ufffd\")"
  - "tests/test_client/tests.py:107:54       ufffd               U       response.context[\"var\"], \"1\\ufffd\")"
  - "tests/test_client/tests.py:208:62       Slartibartfast      U       headers[\"X-DJANGO-TEST\"], \"Slartibartfast\")"
  - "tests/test_client/tests.py:262:60       Gladwell            U       title><author>Malcolm Gladwell</author></book>"
  - "tests/test_client/tests.py:270:62       Gladwell            U       content, b\"Blink - Malcolm Gladwell\")"
  - "tests/test_client/tests.py:660:45       otheruser           U       client.login(username=\"otheruser\", password=\"nopassword"
  - "tests/test_client/tests.py:660:67       nopassword          U       otheruser\", password=\"nopassword\")"
  - "tests/test_client/tests.py:877:49       descript            U       ValueError rather than a non-descript AssertionError."
  - "tests/test_client/tests.py:883:23       djangoproject       U       \"add 'www.djangoproject.com' to ALLOWED_HOSTS"
  - "tests/test_client/tests.py:1114:42      faketoken           U       authorization\": \"Bearer faketoken\","
  - "tests/test_client/tests.py:1118:68      faketoken           U       authorization\"], \"Bearer faketoken\")"
  - "tests/test_client/tests.py:1125:42      faketoken           U       Authorization\": \"Bearer faketoken\","
  - "tests/test_client/tests.py:1129:68      faketoken           U       authorization\"], \"Bearer faketoken\")"
  - "tests/test_client/tests.py:1140:46      faketoken           U       authorization\": \"Bearer faketoken\","
  - "tests/test_client/tests.py:1251:43      asgi                U       assertEqual(response.asgi_request.GET[\"example"
  - "tests/test_client/views.py:131:42       Slartibartfast      U       \"X-DJANGO-TEST\"] = \"Slartibartfast\""
  - "tests/test_runner_apps/sample/tests_sample.py:7:15          doctests    U       from . import doctests"
  - "tests/test_runner_apps/sample/tests_sample.py:20:11         Zimple      U       class TestZimpleTestCase(SimpleTestCase"
  - "tests/test_runner_apps/sample/tests_sample.py:32:41         doctests    U       doctest.DocTestSuite(doctests))"
  - "tests/test_runner/test_discover_runner.py:357:22        Zimple          U       \"TestZimpleTestCase\","
  - "tests/test_runner/test_discover_runner.py:358:26        Zimple          U       msg=\"TestZimpleTestCase should be the"
  - "tests/test_runner/test_discover_runner.py:360:69        doctests        U       unspecified order, including doctests"
  - "tests/test_runner/test_discover_runner.py:374:13        dups            U       dups = runner.build_suite"
  - "tests/test_runner/test_discover_runner.py:375:34        dups            U       assertEqual(single, dups)"
  - "tests/test_runner/test_discover_runner.py:551:53        subsuites       U       processes, len(suite.subsuites))"
  - "tests/test_runner/test_discover_runner.py:560:53        subsuites       U       processes, len(suite.subsuites))"
  - "tests/test_runner/tests.py:61:13        subsuite    U       subsuite = suite_class()"
  - "tests/test_runner/tests.py:64:17        subsuite    U       subsuite.addTest(test)"
  - "tests/test_runner/tests.py:65:27        subsuite    U       suite.addTest(subsuite)"
  - "tests/test_runner/tests.py:317:9        subsuite    U       subsuite = list(suite)[0]"
  - "tests/test_runner/tests.py:318:23       subsuite    U       suite.addTest(subsuite)"
  - "tests/test_runner/tests.py:591:44       sdict       U       settings(\"settings.py\", sdict=settings)"
  - "tests/test_runner/tests.py:751:9        initargs    U       initargs = mocked_pool.call_args"
  - "tests/test_runner/tests.py:751:50       initargs    U       pool.call_args.kwargs[\"initargs\"]"
  - "tests/test_runner/tests.py:752:30       initargs    U       self.assertEqual(len(initargs), 7)"
  - "tests/test_runner/tests.py:753:26       initargs    U       self.assertEqual(initargs[5], True) # debug_mode"
  - "tests/test_runner/tests.py:754:26       initargs    U       self.assertEqual(initargs[6], {db.DEFAULT_DB_ALIAS"
  - "tests/test_runner/tests.py:922:40       keepdb      U       old_name, verbosity=0, keepdb=True"
  - "tests/test_runner/tests.py:942:61       keepdb      U       False, serialize=True, keepdb=False"
  - "tests/test_utils/test_simpletestcase.py:72:30       teardwn     U       pre-setup and post-teardwn are called."
  - "tests/test_utils/test_simpletestcase.py:133:30      teardwn     U       pre-setup and post-teardwn are called."
  - "tests/test_utils/test_testcase.py:10:8          pickable        U       is_pickable,"
  - "tests/test_utils/test_testcase.py:29:29         pickable        U       self.assertEqual(is_pickable(unpicklable_obj), False"
  - "tests/test_utils/test_testcase.py:97:13         herbie          U       cls.herbie = cls.jim_douglas.possessed"
  - "tests/test_utils/test_testcase.py:142:28        herbie          U       self.assertIs(self.herbie.car, self.car)"
  - "tests/test_utils/test_testcase.py:143:28        herbie          U       self.assertIs(self.herbie.belongs_to, self.jim"
  - "tests/test_utils/test_testcase.py:162:24        deutsh          U       def test_book_name_deutsh(self):"
  - "tests/test_utils/test_testcase.py:164:30        Käfer           U       self.car.name = \"VW sKäfer\""
  - "tests/test_utils/test_testcase.py:169:37        Coccinelle      U       car.name = \"Volkswagen Coccinelle\""
  - "tests/test_utils/tests.py:764:26        attibutes           U       def test_non_boolean_attibutes(self):"
  - "tests/test_utils/tests.py:986:76        Žćžšđ               U       title (with Unicode ŠĐĆŽćžšđ)</p>'"
  - "tests/test_utils/tests.py:990:76        Žćžšđ               U       title (with Unicode ŠĐĆŽćžšđ)</p>',"
  - "tests/test_utils/tests.py:1049:14       exceedes            U       \"exceedes the max limit of truncation"
  - "tests/test_utils/tests.py:1175:13       unvalid             U       xml_unvalid = \"<elem attr1='a attr"
  - "tests/test_utils/tests.py:1178:40       unvalid             U       assertXMLNotEqual(xml_unvalid, xml2)"
  - "tests/test_utils/tests.py:2002:11       visualisation       U       A visualisation of the callback tree"
  - "tests/test_utils/tests.py:2207:38       defualt             U       class__.databases = {\"defualt\"}"
  - "tests/test_utils/tests.py:2209:71       defualt             U       databases refers to 'defualt' which \""
  - "tests/test_utils/tests.py:2284:39       reraised            U       exception is setUp() is reraised after disable() is called"
  - "tests/test_utils/tests.py:2288:44       reraised            U       NotImplementedError(\"reraised\")"
  - "tests/test_utils/tests.py:2293:61       reraised            U       NotImplementedError, \"reraised\"):"
  - "tests/transaction_hooks/tests.py:222:28         doesnt (doesn't)    U       def test_error_in_hook_doesnt_prevent_clearing_hooks"
  - "tests/transactions/tests.py:42:56       Tintin      U       objects.create(first_name=\"Tintin\")"
  - "tests/transactions/tests.py:60:56       Tintin      U       objects.create(first_name=\"Tintin\")"
  - "tests/transactions/tests.py:77:60       Tintin      U       objects.create(first_name=\"Tintin\")"
  - "tests/transactions/tests.py:89:61       Tintin      U       objects.create(first_name=\"Tintin\")"
  - "tests/transactions/tests.py:98:60       Tintin      U       objects.create(first_name=\"Tintin\")"
  - "tests/update/tests.py:202:62        relatedpoint    U       related_count=Count(\"relatedpoint\"))"
  - "tests/update/tests.py:205:62        relatedpoint    U       related_count=Count(\"relatedpoint\"))"
  - "tests/urlpatterns_reverse/included_namespace_urls.py:6:1            testobj     U       testobj3 = URLObject(\"testapp"
  - "tests/urlpatterns_reverse/included_namespace_urls.py:7:1            testobj     U       testobj4 = URLObject(\"testapp"
  - "tests/urlpatterns_reverse/included_namespace_urls.py:27:29          testobj     U       path(\"test3/\", include(*testobj3.urls)),"
  - "tests/urlpatterns_reverse/included_namespace_urls.py:28:29          testobj     U       path(\"test4/\", include(*testobj4.urls)),"
  - "tests/urlpatterns_reverse/namespace_urls.py:6:1         testobj         U       testobj1 = URLObject(\"testapp"
  - "tests/urlpatterns_reverse/namespace_urls.py:7:1         testobj         U       testobj2 = URLObject(\"testapp"
  - "tests/urlpatterns_reverse/namespace_urls.py:8:9         testobj         U       default_testobj = URLObject(\"testapp"
  - "tests/urlpatterns_reverse/namespace_urls.py:13:1        newappobj       U       newappobj1 = URLObject(\"newapp"
  - "tests/urlpatterns_reverse/namespace_urls.py:42:29       testobj         U       path(\"test1/\", include(*testobj1.urls)),"
  - "tests/urlpatterns_reverse/namespace_urls.py:43:29       testobj         U       path(\"test2/\", include(*testobj2.urls)),"
  - "tests/urlpatterns_reverse/namespace_urls.py:47:30       newappobj       U       \"newapp1/\", include(newappobj1.app_urls, \"new-ns1"
  - "tests/urlpatterns_reverse/namespace_urls.py:48:34       newappobj       U       new-default/\", include(newappobj1.app_urls)),"
  - "tests/urlpatterns_reverse/test_localeregexdescriptor.py:37:14       nontranslated       U       def test_nontranslated_regex_compiled_once"
  - "tests/urlpatterns_reverse/tests.py:324:14       backref         U       (\"people_backref\", \"/people/nate-nate"
  - "tests/urlpatterns_reverse/tests.py:325:14       backref         U       (\"people_backref\", \"/people/nate-nate"
  - "tests/urlpatterns_reverse/tests.py:358:58       Cspam           U       CDocuments%20and%20Settings%5Cspam/\","
  - "tests/urlpatterns_reverse/tests.py:396:14       mixedcapture    U       (\"nested-mixedcapture\", \"/nested/capture/mixed"
  - "tests/urlpatterns_reverse/tests.py:397:14       mixedcapture    U       (\"nested-mixedcapture\", NoReverseMatch, ["
  - "tests/urlpatterns_reverse/tests.py:408:22       Fexample        U       (\"security\", \"/%2Fexample.com/security/\", [\"/example"
  - "tests/urlpatterns_reverse/tests.py:455:20       Binvalid        U       \"/%7B%7Binvalid%7D%7D/includes/non_path"
  - "tests/urlpatterns_reverse/tests.py:649:81       blub            U       reverse.nested_urls.blub\"))"
  - "tests/urlpatterns_reverse/tests.py:686:55       testpw          U       example.com\", password=\"testpw\""
  - "tests/urlpatterns_reverse/tests.py:1606:14      noncallable     U       def test_noncallable_view(self):"
  - "tests/urlpatterns_reverse/tests.py:1609:19      uncallable      U       path(\"uncallable-object/\", views.uncallable"
  - "tests/urlpatterns_reverse/tests.py:1609:46      uncallable      U       uncallable-object/\", views.uncallable)"
  - "tests/urlpatterns_reverse/tests.py:1776:14      rereverse       U       def test_rereverse(self):"
  - "tests/urlpatterns_reverse/urls.py:31:76         backref         U       empty_view, name=\"people_backref\"),"
  - "tests/urlpatterns_reverse/urls.py:48:74         mixedcapture    U       empty_view, name=\"nested-mixedcapture\""
  - "tests/urlpatterns_reverse/views.py:35:1         uncallable      U       uncallable = None # neither a"
  - "tests/urlpatterns/path_base64_urls.py:7:1           subsubpatterns      U       subsubpatterns = ["
  - "tests/urlpatterns/path_base64_urls.py:8:58          subsubpattern       U       views.empty_view, name=\"subsubpattern-base64\"),"
  - "tests/urlpatterns/path_base64_urls.py:12:53         subpattern          U       views.empty_view, name=\"subpattern-base64\"),"
  - "tests/urlpatterns/path_base64_urls.py:16:14         subsubpatterns      U       (subsubpatterns, \"second-layer-namespaced"
  - "tests/urlpatterns/tests.py:30:11        subpattern          U       (\"subpattern-base64\", \"\", included"
  - "tests/urlpatterns/tests.py:34:11        subpattern          U       (\"subpattern-base64\", \"namespaced"
  - "tests/urlpatterns/tests.py:182:43       subsubpattern       U       \"instance-ns-base64:subsubpattern-base64\", kwargs=kwargs"
  - "tests/urlpatterns/tests.py:254:54       stest               U       int:num>/extra/<str:%stest>\" % whitespace"
  - "tests/urlpatterns/tests.py:284:23       abcxyz              U       (\"str\", {\"abcxyz\"}, no_converter),"
  - "tests/urlpatterns/tests.py:286:24       abcxyz              U       (\"slug\", {\"abcxyz-ABCXYZ_01234567890\""
  - "tests/urlpatterns/tests.py:286:31       ABCXYZ              U       (\"slug\", {\"abcxyz-ABCXYZ_01234567890\"}, no_converter"
  - "tests/urlpatterns/tests.py:310:14       nonmatching         U       def test_nonmatching_urls(self):"
  - "tests/urlpatterns/tests.py:315:34       notallowed          U       \"slug\", {\"\", \"stars*notallowed\"}),"
  - "tests/user_commands/management/commands/required_option.py:7:73         needme      U       required=True, dest=\"needme2\")"
  - "tests/user_commands/tests.py:108:49         commandegg          U       settings(INSTALLED_APPS=[\"commandegg\"]):"
  - "tests/user_commands/tests.py:110:55         commandegg          U       apps.get_app_config(\"commandegg\").path, \"management"
  - "tests/user_commands/tests.py:112:34         eggcommand          U       assertEqual(cmds, [\"eggcommand\"])"
  - "tests/user_commands/tests.py:248:47         needme              U       option\", need_me=\"foo\", needme2=\"bar\", stdout=out"
  - "tests/user_commands/tests.py:251:24         needme              U       self.assertIn(\"needme2\", out.getvalue())"
  - "tests/user_commands/tests.py:256:49         needme              U       option\", \"--need-me=foo\", needme2=\"bar\", stdout=out"
  - "tests/user_commands/tests.py:259:24         needme              U       self.assertIn(\"needme2\", out.getvalue())"
  - "tests/user_commands/tests.py:422:14         outputwrapper       U       def test_outputwrapper_flush(self):"
  - "tests/user_commands/tests.py:425:38         outputwrapper       U       management.call_command(\"outputwrapper\", stdout=out)"
  - "tests/user_commands/tests.py:439:13         sdict               U       sdict={"
  - "tests/user_commands/tests.py:462:13         sdict               U       sdict={"
  - "tests/user_commands/tests.py:499:50         doesnt (doesn't)    U       executing a_42_command_that_doesnt_exist_42\""
  - "tests/user_commands/tests.py:501:47         doesnt (doesn't)    U       [\"a_42_command_that_doesnt_exist_42\"])"
  - "tests/user_commands/tests.py:530:77         blub                U       bar/bat\", \"bar\", \"flub/blub\"]"
  - "tests/utils_tests/test_archive.py:64:44         leadpath    U       entry.name.startswith(\"leadpath_\")"
  - "tests/utils_tests/test_autoreload.py:94:30          Ceci        U       filename.write_text(\"Ceci n'est pas du Python"
  - "tests/utils_tests/test_autoreload.py:125:75         zipf        U       zipfile.ZIP_DEFLATED) as zipf:"
  - "tests/utils_tests/test_autoreload.py:126:13         zipf        U       zipf.writestr(\"test_zipped"
  - "tests/utils_tests/test_autoreload.py:218:32         Werror      U       [sys.executable, \"-Werror\", __file__, \"runserver"
  - "tests/utils_tests/test_autoreload.py:227:32         Xutf        U       [sys.executable, \"-Xutf8\", \"-Xa=b\", __file_"
  - "tests/utils_tests/test_choices.py:368:11        randomised      U       # randomised order in form fields"
  - "tests/utils_tests/test_crypto.py:69:18          dklen       U       \"dklen\": 20,"
  - "tests/utils_tests/test_crypto.py:79:18          dklen       U       \"dklen\": 20,"
  - "tests/utils_tests/test_crypto.py:89:18          dklen       U       \"dklen\": 20,"
  - "tests/utils_tests/test_crypto.py:100:20         dklen       U       # \"dklen\": 20,"
  - "tests/utils_tests/test_crypto.py:110:18         dklen       U       \"dklen\": 25,"
  - "tests/utils_tests/test_datastructures.py:102:33         Holovaty            U       setlist(\"lastname\", [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:102:45         Willison            U       lastname\", [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:103:51         Holovaty            U       getlist(\"lastname\"), [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:103:63         Willison            U       lastname\"), [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:104:72         Willison            U       , \"Developer\", [], \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:107:51         Holovaty            U       getlist(\"lastname\"), [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:107:63         Willison            U       lastname\"), [\"Holovaty\", \"Willison\"])"
  - "tests/utils_tests/test_datastructures.py:108:27         newkey              U       d.setlistdefault(\"newkey\", [\"Doe\"])"
  - "tests/utils_tests/test_datastructures.py:109:37         newkey              U       assertEqual(d.getlist(\"newkey\"), [\"Doe\"])"
  - "tests/utils_tests/test_datastructures.py:159:22         doesnt (doesn't)    U       def test_getlist_doesnt_mutate(self):"
  - "tests/utils_tests/test_datastructures.py:244:24         unpackable          U       # Iterables of unpackable objects with incorrect"
  - "tests/utils_tests/test_datastructures.py:274:14         dictwrapper         U       def test_dictwrapper(self):"
  - "tests/utils_tests/test_dateformat.py:147:14         futuredates     U       def test_futuredates(self):"
  - "tests/utils_tests/test_dateparse.py:101:9       timedeltas      U       timedeltas = ["
  - "tests/utils_tests/test_dateparse.py:112:22      timedeltas      U       for delta in timedeltas:"
  - "tests/utils_tests/test_encoding.py:18:5         repercent       U       repercent_broken_unicode,"
  - "tests/utils_tests/test_encoding.py:65:37        voil            U       This is an exception, voil\","
  - "tests/utils_tests/test_encoding.py:75:58        voil            U       This is an exception, voil\")"
  - "tests/utils_tests/test_encoding.py:87:28        Žćžšđ           U       return \"ŠĐĆŽćžšđ\""
  - "tests/utils_tests/test_encoding.py:101:28       Žćžšđ           U       return \"ŠĐĆŽćžšđ\""
  - "tests/utils_tests/test_encoding.py:115:14       repercent       U       def test_repercent_broken_unicode_recursion"
  - "tests/utils_tests/test_encoding.py:121:17       repercent       U       repercent_broken_unicode(data"
  - "tests/utils_tests/test_encoding.py:126:14       repercent       U       def test_repercent_broken_unicode_small"
  - "tests/utils_tests/test_encoding.py:127:23       xfctest         U       data = b\"test\\xfctest\\xfctest\\xfc\""
  - "tests/utils_tests/test_encoding.py:127:31       xfctest         U       data = b\"test\\xfctest\\xfctest\\xfc\""
  - "tests/utils_tests/test_encoding.py:131:47       repercent       U       frame is the call to repercent_broken_unicode()."
  - "tests/utils_tests/test_encoding.py:136:70       Ctest           U       unicode(data), b\"test%FCtest%FCtest%FC\")"
  - "tests/utils_tests/test_encoding.py:136:77       Ctest           U       data), b\"test%FCtest%FCtest%FC\")"
  - "tests/utils_tests/test_encoding.py:141:21       xfctest         U       [b\"test\\xfctest\\xfctest\\xfc\", b\"test"
  - "tests/utils_tests/test_encoding.py:141:29       xfctest         U       [b\"test\\xfctest\\xfctest\\xfc\", b\"test\\xfctest"
  - "tests/utils_tests/test_encoding.py:141:50       xfctest         U       xfctest\\xfc\", b\"test\\xfctest\\xfc\", b\"test\\xfc\"],"
  - "tests/utils_tests/test_encoding.py:149:38       чубака          U       filepath_to_uri(\"upload\\\\чубака.mp4\"),"
  - "tests/utils_tests/test_encoding.py:158:21       rosé            U       (\"red%09rosé#red\", \"red%09ros%C3"
  - "tests/utils_tests/test_encoding.py:159:25       Jürgen          U       (\"/blog/for/Jürgen Münster/\", \"/blog/for"
  - "tests/utils_tests/test_encoding.py:159:32       Münster         U       (\"/blog/for/Jürgen Münster/\", \"/blog/for/J%C3%BCrgen"
  - "tests/utils_tests/test_encoding.py:159:60       Crgen           U       \", \"/blog/for/J%C3%BCrgen%20M%C3%BCnster/\"),"
  - "tests/utils_tests/test_encoding.py:159:74       Cnster          U       J%C3%BCrgen%20M%C3%BCnster/\"),"
  - "tests/utils_tests/test_encoding.py:207:34       Crgen           U       \"/blog/for/J%C3%BCrgen%20M%C3%BCnster/\","
  - "tests/utils_tests/test_encoding.py:207:48       Cnster          U       J%C3%BCrgen%20M%C3%BCnster/\","
  - "tests/utils_tests/test_encoding.py:208:30       xfcrgen         U       \"/blog/for/J\\xfcrgen%20M\\xfcnster/\","
  - "tests/utils_tests/test_encoding.py:208:42       xfcnster        U       blog/for/J\\xfcrgen%20M\\xfcnster/\","
  - "tests/utils_tests/test_encoding.py:234:21       Bsome           U       \"/%3Bsome/%3Dawful/%3Fpath/:with"
  - "tests/utils_tests/test_encoding.py:234:29       Dawful          U       \"/%3Bsome/%3Dawful/%3Fpath/:with/@lots"
  - "tests/utils_tests/test_encoding.py:237:33       Fbar            U       (\"/foo?bar\", \"/foo%3Fbar\"),"
  - "tests/utils_tests/test_feedgenerator.py:117:65      descr       U       \"title\", \"/link/\", \"descr\")"
  - "tests/utils_tests/test_feedgenerator.py:126:33      descr       U       \"title\", \"/link/\", \"descr\", feed_url=\"/feed/\""
  - "tests/utils_tests/test_feedgenerator.py:136:60      descr       U       \"title\", \"/link/\", \"descr\")"
  - "tests/utils_tests/test_functional.py:19:15          Klazz       U       class Klazz(Base):"
  - "tests/utils_tests/test_functional.py:22:26          Klazz       U       t = lazy(lambda: Klazz(), Klazz)()"
  - "tests/utils_tests/test_functional.py:22:35          Klazz       U       lazy(lambda: Klazz(), Klazz)()"
  - "tests/utils_tests/test_functional.py:32:15          Klazz       U       class Klazz(Base):"
  - "tests/utils_tests/test_functional.py:34:25          Klazz       U       return \"Klazz\""
  - "tests/utils_tests/test_functional.py:42:32          Ǩlâzz       U       return \"Î am ā Ǩlâzz.\""
  - "tests/utils_tests/test_functional.py:48:42          Ǩlâzz       U       assertEqual(str(t), \"Î am ā Ǩlâzz.\")"
  - "tests/utils_tests/test_functional.py:282:35         xbcst       U       original_object = b\"J\\xc3\\xbcst a str\\xc3\\xadng\""
  - "tests/utils_tests/test_functional.py:282:51         xadng       U       xc3\\xbcst a str\\xc3\\xadng\""
  - "tests/utils_tests/test_html.py:17:11        urlquote            U       smart_urlquote,"
  - "tests/utils_tests/test_html.py:44:33        sfdsa               U       patterns = (\"%s\", \"asdf%sfdsa\", \"%s1\", \"1%sb\")"
  - "tests/utils_tests/test_html.py:144:26       ript                U       (\"<sc<!-- -->ript>test<<!-- -->/script"
  - "tests/utils_tests/test_html.py:144:56       ript                U       <!-- -->/script>\", \"ript>test\"),"
  - "tests/utils_tests/test_html.py:200:24       Cscript             U       \"\\\\u003Cscript\\\\u003Eand this\\\\u00"
  - "tests/utils_tests/test_html.py:200:37       Eand                U       \"\\\\u003Cscript\\\\u003Eand this\\\\u003C/script\\"
  - "tests/utils_tests/test_html.py:227:31       Cscript             U       '{\"a\": \"\\\\u003Cscript\\\\u003Etest\\\\u0026ing"
  - "tests/utils_tests/test_html.py:227:44       Etest               U       \"\\\\u003Cscript\\\\u003Etest\\\\u0026ing\\\\u003C/script"
  - "tests/utils_tests/test_html.py:239:31       Cscript             U       '{\"a\": \"\\\\u003Cscript\\\\u003Etest\\\\u0026ing"
  - "tests/utils_tests/test_html.py:239:44       Etest               U       \"\\\\u003Cscript\\\\u003Etest\\\\u0026ing\\\\u003C/script"
  - "tests/utils_tests/test_html.py:263:20       urlquote            U       def test_smart_urlquote(self):"
  - "tests/utils_tests/test_html.py:292:40       urlquote            U       self.assertEqual(smart_urlquote(value), output)"
  - "tests/utils_tests/test_html.py:338:24       doesnt (doesn't)    U       def test_html_safe_doesnt_define_str(self):"
  - "tests/utils_tests/test_http.py:39:43        doseq           U       containing_sequence_not_doseq(self):"
  - "tests/utils_tests/test_http.py:40:51        doseq           U       urlencode({\"a\": [1, 2]}, doseq=False), \"a=%5B1%2C+"
  - "tests/utils_tests/test_http.py:42:40        doseq           U       containing_tuple_not_doseq(self):"
  - "tests/utils_tests/test_http.py:43:51        doseq           U       urlencode({\"a\": (1, 2)}, doseq=False), \"a=%281%2C+"
  - "tests/utils_tests/test_http.py:45:34        doseq           U       custom_iterable_not_doseq(self):"
  - "tests/utils_tests/test_http.py:416:35       Fexample        U       //example.com\", \"/%2Fexample.com\"),"
  - "tests/utils_tests/test_http.py:463:60       Afun            U       This%20is%20%2A%2A%2Afun%2A%2A%2A\","
  - "tests/utils_tests/test_http.py:487:46       Afun            U       This%20is%20%2A%2A%2Afun%2A%2A%2A\","
  - "tests/utils_tests/test_http.py:488:39       Afun            U       This%20is%20%2A%2A%2Afun%2A%2A%2A\","
  - "tests/utils_tests/test_http.py:509:22       espécimen       U       ((True, \"espécimen\"), \"attachment; filename"
  - "tests/utils_tests/test_http.py:509:74       cimen           U       filename*=utf-8''esp%C3%A9cimen\"),"
  - "tests/utils_tests/test_http.py:511:26       espécimen       U       (True, '\"espécimen\" filename'),"
  - "tests/utils_tests/test_http.py:512:59       cimen           U       =utf-8''%22esp%C3%A9cimen%22%20filename\","
  - "tests/utils_tests/test_itercompat.py:5:19           itercompat      U       from django.utils.itercompat import is_iterable"
  - "tests/utils_tests/test_itercompat.py:11:27          itercompat      U       \"django.utils.itercompat.is_iterable() is deprecated"
  - "tests/utils_tests/test_lazyobject.py:62:22          falsey          U       def test_getattr_falsey(self):"
  - "tests/utils_tests/test_lazyobject.py:430:37         quux            U       attr in [\"bar\", \"baz\", \"quux\"]:"
  - "tests/utils_tests/test_lazyobject.py:448:14         quux            U       self.quux = \"quux\""
  - "tests/utils_tests/test_lazyobject.py:448:22         quux            U       self.quux = \"quux\""
  - "tests/utils_tests/test_lazyobject.py:499:27         categoryinfo    U       lazy_category.categoryinfo"
  - "tests/utils_tests/test_lorem_ipsum.py:12:36         amet                U       lorem ipsum dolor sit amet consectetur adipisicing"
  - "tests/utils_tests/test_lorem_ipsum.py:12:41         consectetur         U       ipsum dolor sit amet consectetur adipisicing elit sed"
  - "tests/utils_tests/test_lorem_ipsum.py:12:53         adipisicing         U       sit amet consectetur adipisicing elit sed do \""
  - "tests/utils_tests/test_lorem_ipsum.py:12:65         elit                U       consectetur adipisicing elit sed do \""
  - "tests/utils_tests/test_lorem_ipsum.py:13:14         eiusmod             U       \"eiusmod tempor incididunt ut"
  - "tests/utils_tests/test_lorem_ipsum.py:13:22         tempor              U       \"eiusmod tempor incididunt ut\","
  - "tests/utils_tests/test_lorem_ipsum.py:13:29         incididunt          U       \"eiusmod tempor incididunt ut\","
  - "tests/utils_tests/test_lorem_ipsum.py:18:59         amet                U       lorem ipsum dolor sit amet consectetur adipisicing"
  - "tests/utils_tests/test_lorem_ipsum.py:18:64         consectetur         U       ipsum dolor sit amet consectetur adipisicing\")"
  - "tests/utils_tests/test_lorem_ipsum.py:18:76         adipisicing         U       sit amet consectetur adipisicing\")"
  - "tests/utils_tests/test_lorem_ipsum.py:24:40         amet                U       lorem ipsum dolor sit amet consectetur adipisicing"
  - "tests/utils_tests/test_lorem_ipsum.py:24:45         consectetur         U       ipsum dolor sit amet consectetur adipisicing elit sed"
  - "tests/utils_tests/test_lorem_ipsum.py:24:57         adipisicing         U       sit amet consectetur adipisicing elit sed \""
  - "tests/utils_tests/test_lorem_ipsum.py:24:69         elit                U       consectetur adipisicing elit sed \""
  - "tests/utils_tests/test_lorem_ipsum.py:25:21         eiusmod             U       \"do eiusmod tempor incididunt ut"
  - "tests/utils_tests/test_lorem_ipsum.py:25:29         tempor              U       \"do eiusmod tempor incididunt ut labore"
  - "tests/utils_tests/test_lorem_ipsum.py:25:36         incididunt          U       \"do eiusmod tempor incididunt ut labore et dolore"
  - "tests/utils_tests/test_lorem_ipsum.py:25:50         labore              U       tempor incididunt ut labore et dolore magna aliqua"
  - "tests/utils_tests/test_lorem_ipsum.py:25:60         dolore              U       incididunt ut labore et dolore magna aliqua\""
  - "tests/utils_tests/test_lorem_ipsum.py:25:73         aliqua              U       labore et dolore magna aliqua\""
  - "tests/utils_tests/test_lorem_ipsum.py:40:38         exercitationem      U       sample.return_value = [\"exercitationem\", \"perferendis\"]"
  - "tests/utils_tests/test_lorem_ipsum.py:40:56         perferendis         U       [\"exercitationem\", \"perferendis\"]"
  - "tests/utils_tests/test_lorem_ipsum.py:41:51         exercitationem      U       words(2, common=False), \"exercitationem perferendis\")"
  - "tests/utils_tests/test_lorem_ipsum.py:41:66         perferendis         U       False), \"exercitationem perferendis\")"
  - "tests/utils_tests/test_lorem_ipsum.py:55:38         exercitationem      U       sample.return_value = [\"exercitationem\", \"perferendis\"]"
  - "tests/utils_tests/test_lorem_ipsum.py:55:56         perferendis         U       [\"exercitationem\", \"perferendis\"]"
  - "tests/utils_tests/test_lorem_ipsum.py:62:21         Exercitationem      U       value, \"Exercitationem perferendis, exercitationem"
  - "tests/utils_tests/test_lorem_ipsum.py:62:36         perferendis         U       value, \"Exercitationem perferendis, exercitationem perferendis"
  - "tests/utils_tests/test_lorem_ipsum.py:62:49         exercitationem      U       Exercitationem perferendis, exercitationem perferendis?\""
  - "tests/utils_tests/test_lorem_ipsum.py:62:64         perferendis         U       perferendis, exercitationem perferendis?\""
  - "tests/utils_tests/test_lorem_ipsum.py:80:38         exercitationem      U       sample.return_value = [\"exercitationem\", \"perferendis\"]"
  - "tests/utils_tests/test_lorem_ipsum.py:87:18         Exercitationem      U       \"Exercitationem perferendis, exercitationem"
  - "tests/utils_tests/test_lorem_ipsum.py:88:18         Exercitationem      U       \"Exercitationem perferendis, exercitationem"
  - "tests/utils_tests/test_lorem_ipsum.py:107:18        Exercitationem      U       \"Exercitationem perferendis, exercitationem"
  - "tests/utils_tests/test_lorem_ipsum.py:108:18        Exercitationem      U       \"Exercitationem perferendis, exercitationem"
  - "tests/utils_tests/test_lorem_ipsum.py:118:40        amet                U       Lorem ipsum dolor sit amet, consectetur adipisicing"
  - "tests/utils_tests/test_lorem_ipsum.py:118:46        consectetur         U       ipsum dolor sit amet, consectetur adipisicing elit, \""
  - "tests/utils_tests/test_lorem_ipsum.py:118:58        adipisicing         U       sit amet, consectetur adipisicing elit, \""
  - "tests/utils_tests/test_lorem_ipsum.py:118:70        elit                U       consectetur adipisicing elit, \""
  - "tests/utils_tests/test_lorem_ipsum.py:119:25        eiusmod             U       \"sed do eiusmod tempor incididunt ut"
  - "tests/utils_tests/test_lorem_ipsum.py:119:33        tempor              U       \"sed do eiusmod tempor incididunt ut labore"
  - "tests/utils_tests/test_lorem_ipsum.py:119:40        incididunt          U       sed do eiusmod tempor incididunt ut labore et dolore"
  - "tests/utils_tests/test_lorem_ipsum.py:119:54        labore              U       tempor incididunt ut labore et dolore magna \""
  - "tests/utils_tests/test_lorem_ipsum.py:119:64        dolore              U       incididunt ut labore et dolore magna \""
  - "tests/utils_tests/test_lorem_ipsum.py:120:18        aliqua              U       \"aliqua. Ut enim ad minim veniam"
  - "tests/utils_tests/test_lorem_ipsum.py:120:29        enim                U       \"aliqua. Ut enim ad minim veniam, quis"
  - "tests/utils_tests/test_lorem_ipsum.py:120:43        veniam              U       aliqua. Ut enim ad minim veniam, quis nostrud exercitation"
  - "tests/utils_tests/test_lorem_ipsum.py:120:51        quis                U       enim ad minim veniam, quis nostrud exercitation"
  - "tests/utils_tests/test_lorem_ipsum.py:120:56        nostrud             U       ad minim veniam, quis nostrud exercitation \""
  - "tests/utils_tests/test_lorem_ipsum.py:121:18        ullamco             U       \"ullamco laboris nisi ut aliquip"
  - "tests/utils_tests/test_lorem_ipsum.py:121:26        laboris             U       \"ullamco laboris nisi ut aliquip ex ea"
  - "tests/utils_tests/test_lorem_ipsum.py:121:42        aliquip             U       ullamco laboris nisi ut aliquip ex ea commodo consequat"
  - "tests/utils_tests/test_lorem_ipsum.py:121:56        commodo             U       nisi ut aliquip ex ea commodo consequat. \""
  - "tests/utils_tests/test_lorem_ipsum.py:121:64        consequat           U       aliquip ex ea commodo consequat. \""
  - "tests/utils_tests/test_lorem_ipsum.py:122:18        Duis                U       \"Duis aute irure dolor in"
  - "tests/utils_tests/test_lorem_ipsum.py:122:23        aute                U       \"Duis aute irure dolor in reprehenderit"
  - "tests/utils_tests/test_lorem_ipsum.py:122:28        irure               U       \"Duis aute irure dolor in reprehenderit"
  - "tests/utils_tests/test_lorem_ipsum.py:122:43        reprehenderit       U       aute irure dolor in reprehenderit in voluptate velit"
  - "tests/utils_tests/test_lorem_ipsum.py:122:60        voluptate           U       in reprehenderit in voluptate velit \""
  - "tests/utils_tests/test_lorem_ipsum.py:122:70        velit               U       reprehenderit in voluptate velit \""
  - "tests/utils_tests/test_lorem_ipsum.py:123:23        cillum              U       \"esse cillum dolore eu fugiat nulla"
  - "tests/utils_tests/test_lorem_ipsum.py:123:30        dolore              U       \"esse cillum dolore eu fugiat nulla pariatur"
  - "tests/utils_tests/test_lorem_ipsum.py:123:40        fugiat              U       esse cillum dolore eu fugiat nulla pariatur. Excepteur"
  - "tests/utils_tests/test_lorem_ipsum.py:123:47        nulla               U       cillum dolore eu fugiat nulla pariatur. Excepteur"
  - "tests/utils_tests/test_lorem_ipsum.py:123:53        pariatur            U       dolore eu fugiat nulla pariatur. Excepteur sint \""
  - "tests/utils_tests/test_lorem_ipsum.py:123:63        Excepteur           U       fugiat nulla pariatur. Excepteur sint \""
  - "tests/utils_tests/test_lorem_ipsum.py:124:18        occaecat            U       \"occaecat cupidatat non proident"
  - "tests/utils_tests/test_lorem_ipsum.py:124:27        cupidatat           U       \"occaecat cupidatat non proident, sunt in"
  - "tests/utils_tests/test_lorem_ipsum.py:124:41        proident            U       occaecat cupidatat non proident, sunt in culpa qui officia"
  - "tests/utils_tests/test_lorem_ipsum.py:124:51        sunt                U       cupidatat non proident, sunt in culpa qui officia"
  - "tests/utils_tests/test_lorem_ipsum.py:124:69        officia             U       proident, sunt in culpa qui officia \""
  - "tests/utils_tests/test_lorem_ipsum.py:125:18        deserunt            U       \"deserunt mollit anim id est laborum"
  - "tests/utils_tests/test_lorem_ipsum.py:125:27        mollit              U       \"deserunt mollit anim id est laborum"
  - "tests/utils_tests/test_lorem_ipsum.py:125:46        laborum             U       deserunt mollit anim id est laborum.\""
  - "tests/utils_tests/test_module_loading.py:52:18          sumbodule       U       def test_has_sumbodule_with_dotted_path(self"
  - "tests/utils_tests/test_regex_helper.py:27:20        noncapturing    U       def test_group_noncapturing(self):"
  - "tests/utils_tests/test_safestring.py:9:7            customescape    U       class customescape(str):"
  - "tests/utils_tests/test_safestring.py:35:44          dunder          U       object_implementing_dunder_html(self):"
  - "tests/utils_tests/test_safestring.py:36:13          customescape    U       e = customescape(\"<a&b>\")"
  - "tests/utils_tests/test_safestring.py:56:44          dunder          U       object_implementing_dunder_str(self):"
  - "tests/utils_tests/test_safestring.py:65:42          dunder          U       safe_result_implements_dunder_html(self):"
  - "tests/utils_tests/test_safestring.py:68:47          dunder          U       lazy_result_implements_dunder_html(self):"
  - "tests/utils_tests/test_safestring.py:91:50          dunder          U       decorator_does_not_affect_dunder_html(self):"
  - "tests/utils_tests/test_safestring.py:128:29         btest           U       (\"test\", \"a&amp;btest\"),"
  - "tests/utils_tests/test_simplelazyobject.py:10:42        johndoe     U       objects.create_user(\"johndoe\", \"john@example.com"
  - "tests/utils_tests/test_termcolors.py:3:19           termcolors      U       from django.utils.termcolors import ("
  - "tests/utils_tests/test_text.py:61:9         truncator       U       truncator = text.Truncator(\"The"
  - "tests/utils_tests/test_text.py:61:26        Truncator       U       truncator = text.Truncator(\"The quick brown fox"
  - "tests/utils_tests/test_text.py:63:62        truncator       U       over the lazy dog.\", truncator.chars(100)"
  - "tests/utils_tests/test_text.py:65:51        truncator       U       quick brown fox …\", truncator.chars(21))"
  - "tests/utils_tests/test_text.py:66:53        truncator       U       quick brown fo.....\", truncator.chars(23, \".....\"))"
  - "tests/utils_tests/test_text.py:67:35        truncator       U       assertEqual(\".....\", truncator.chars(4, \".....\"))"
  - "tests/utils_tests/test_text.py:69:20        Truncator       U       nfc = text.Truncator(\"o\\xfco\\xfco\\xfco\\xfc"
  - "tests/utils_tests/test_text.py:69:33        xfco            U       = text.Truncator(\"o\\xfco\\xfco\\xfco\\xfc\")"
  - "tests/utils_tests/test_text.py:69:38        xfco            U       text.Truncator(\"o\\xfco\\xfco\\xfco\\xfc\")"
  - "tests/utils_tests/test_text.py:69:43        xfco            U       Truncator(\"o\\xfco\\xfco\\xfco\\xfc\")"
  - "tests/utils_tests/test_text.py:70:20        Truncator       U       nfd = text.Truncator(\"ou\\u0308ou\\u0308ou"
  - "tests/utils_tests/test_text.py:71:27        oüoüoüoü        U       self.assertEqual(\"oüoüoüoü\", nfc.chars(8))"
  - "tests/utils_tests/test_text.py:72:27        oüoüoüoü        U       self.assertEqual(\"oüoüoüoü\", nfd.chars(8))"
  - "tests/utils_tests/test_text.py:77:40        precomposed     U       combining characters with no precomposed form, and that combining"
  - "tests/utils_tests/test_text.py:79:26        Truncator       U       truncator = text.Truncator(\"-B\\u030AB\\u030A---"
  - "tests/utils_tests/test_text.py:85:49        precomposed     U       combining characters with no precomposed form."
  - "tests/utils_tests/test_text.py:86:26        Truncator       U       truncator = text.Truncator(\"-----\")"
  - "tests/utils_tests/test_text.py:158:52       mylink          U       href=\"xyz.html\"\\n id=\"mylink\">brown fox</a> jumped"
  - "tests/utils_tests/test_text.py:162:52       mylink          U       href=\"xyz.html\"\\n id=\"mylink\">brow…</a></p>',"
  - "tests/utils_tests/test_text.py:188:26       iacute          U       \"<i>Buenos d&iacute;as! &#x00bf;C&oacute"
  - "tests/utils_tests/test_text.py:188:61       aacute          U       0bf;C&oacute;mo est&aacute;?</i>\""
  - "tests/utils_tests/test_text.py:191:24       días            U       \"<i>Buenos días! ¿Cómo está?</i>\","
  - "tests/utils_tests/test_text.py:191:31       Cómo            U       \"<i>Buenos días! ¿Cómo está?</i>\","
  - "tests/utils_tests/test_text.py:191:36       está            U       i>Buenos días! ¿Cómo está?</i>\","
  - "tests/utils_tests/test_text.py:195:24       días            U       \"<i>Buenos días…</i>\","
  - "tests/utils_tests/test_text.py:199:24       días            U       \"<i>Buenos días! ¿Cómo está…</i>\","
  - "tests/utils_tests/test_text.py:199:31       Cómo            U       \"<i>Buenos días! ¿Cómo está…</i>\","
  - "tests/utils_tests/test_text.py:199:36       está            U       i>Buenos días! ¿Cómo está…</i>\","
  - "tests/utils_tests/test_text.py:257:52       mylink          U       href=\"xyz.html\"\\n id=\"mylink\">brown fox</a> jumped"
  - "tests/utils_tests/test_text.py:261:52       mylink          U       href=\"xyz.html\"\\n id=\"mylink\">brown…</a></p>',"
  - "tests/utils_tests/test_text.py:283:26       iacute          U       \"<i>Buenos d&iacute;as! &#x00bf;C&oacute"
  - "tests/utils_tests/test_text.py:283:61       aacute          U       0bf;C&oacute;mo est&aacute;?</i>\""
  - "tests/utils_tests/test_text.py:286:24       días            U       \"<i>Buenos días! ¿Cómo…</i>\","
  - "tests/utils_tests/test_text.py:286:31       Cómo            U       \"<i>Buenos días! ¿Cómo…</i>\","
  - "tests/utils_tests/test_text.py:361:47       rghi            U       normalize_newlines(\"abc\\ndef\\rghi\\r\\n\"), \"abc\\ndef\\nghi"
  - "tests/utils_tests/test_text.py:361:69       nghi            U       rghi\\r\\n\"), \"abc\\ndef\\nghi\\n\""
  - "tests/utils_tests/test_text.py:367:55       rghi            U       newlines(lazystr(\"abc\\ndef\\rghi\\r\\n\")), \"abc\\ndef\\nghi"
  - "tests/utils_tests/test_text.py:367:78       nghi            U       rghi\\r\\n\")), \"abc\\ndef\\nghi\\n\""
  - "tests/utils_tests/test_text.py:388:22       ıçüş            U       (\"spam & ıçüş\", \"spam-ıçüş\", True"
  - "tests/utils_tests/test_text.py:388:35       ıçüş            U       spam & ıçüş\", \"spam-ıçüş\", True),"
  - "tests/utils_tests/test_text.py:392:15       İstanbul        U       (\"İstanbul\", \"istanbul\", True)"
  - "tests/utils_tests/test_text.py:465:31       Ajout           U       self.assertEqual(\"Ajout de article «\\xa0My first"
  - "tests/utils_tests/test_timesince.py:15:14       onesecond       U       self.onesecond = datetime.timedelta"
  - "tests/utils_tests/test_timesince.py:33:58       onesecond       U       self.t, self.t + self.onesecond), \"0\\xa0minutes\")"
  - "tests/utils_tests/test_timesince.py:80:58       onesecond       U       self.t, self.t - self.onesecond), \"0\\xa0minutes\")"
  - "tests/utils_tests/test_timesince.py:121:31      minut           U       \"0\\xa0minut\","
  - "tests/utils_tests/test_timesince.py:253:39      onesecond       U       with_zoneinfo - self.onesecond, \"0\\xa0minutes\"),"
  - "tests/utils_tests/test_timesince.py:271:39      onesecond       U       with_zoneinfo - self.onesecond, \"0\\xa0minutes\"),"
  - "tests/utils_tests/test_timezone.py:249:14       fixedoffset     U       def test_fixedoffset_timedelta(self):"
  - "tests/utils_tests/test_timezone.py:253:14       fixedoffset     U       def test_fixedoffset_negative_timedelta(self"
  - "tests/validation/models.py:60:5         cfield      U       cfield = models.CharField(max"
  - "tests/validation/models.py:62:5         efield      U       efield = models.EmailField"
  - "tests/validation/models.py:68:18        cfield      U       \"cfield\","
  - "tests/validation/models.py:70:25        efield      U       [\"ifield\", \"efield\"],"
  - "tests/validation/models.py:88:51        AAARGH      U       : \"NULL\", \"not42\": \"AAARGH\", \"not_equal\": \"%s"
  - "tests/validation/test_custom_messages.py:10:80          AAARGH      U       full_clean, \"number\", [\"AAARGH\"])"
  - "tests/validation/test_picklable.py:7:7          Pickable    U       class PickableValidationErrorTestCase"
  - "tests/validation/test_unique.py:42:55       cfield      U       queTogetherModel, (\"ifield\", \"cfield\")),"
  - "tests/validation/test_unique.py:43:55       efield      U       queTogetherModel, (\"ifield\", \"efield\")),"
  - "tests/validation/tests.py:82:32         charfields      U       test_text_greater_that_charfields_max_length_raises_errors"
  - "tests/validation/tests.py:107:57        Kocherhans      U       create(name=\"Joseph Kocherhans\")"
  - "tests/validation/tests.py:148:9         giptm           U       giptm = GenericIPAddressTestModel"
  - "tests/validation/tests.py:149:27        giptm           U       self.assertIsNone(giptm.full_clean())"
  - "tests/validation/tests.py:150:9         giptm           U       giptm = GenericIPAddressTestModel"
  - "tests/validation/tests.py:151:27        giptm           U       self.assertIsNone(giptm.full_clean())"
  - "tests/validation/tests.py:152:9         giptm           U       giptm = GenericIPAddressTestModel"
  - "tests/validation/tests.py:215:70        fsad            U       10.10\", generic_ip=\"fsad\""
  - "tests/validators/tests.py:202:6         rdar                    U       \"rdar://1234\","
  - "tests/validators/tests.py:204:14        shouldfail              U       \"http:// shouldfail.com\","
  - "tests/validators/tests.py:206:33        quux                    U       foo.bar/foo(bar)baz quux\","
  - "tests/validators/tests.py:237:6         xample                  U       \"xample.com\","
  - "tests/validators/tests.py:289:48        उदाहरण                  U       domain.with.idn.tld.उदाहरण.परीक्षा\", None),"
  - "tests/validators/tests.py:289:55        परीक्षा                 U       with.idn.tld.उदाहरण.परीक्षा\", None),"
  - "tests/validators/tests.py:291:33        localdomain             U       EmailValidator(allowlist=[\"localdomain\"]), \"email@localdomain"
  - "tests/validators/tests.py:291:56        localdomain             U       localdomain\"]), \"email@localdomain\", None),"
  - "tests/validators/tests.py:298:32        scom                    U       validate_email, \"example@%scom\" % ((\"a\" * 63 + \".\""
  - "tests/validators/tests.py:318:36        alid                    U       email, \"example@inv-.alid-.com\", ValidationError"
  - "tests/validators/tests.py:319:37        alid                    U       email, \"example@inv-.-alid.com\", ValidationError"
  - "tests/validators/tests.py:336:22        nohyphensoranything     U       (validate_slug, \"nohyphensoranything\", None),"
  - "tests/validators/tests.py:351:30        nohyphensoranything     U       validate_unicode_slug, \"nohyphensoranything\", None),"
  - "tests/validators/tests.py:627:49        उदाहरण                  U       domain.with.idn.tld.उदाहरण.परीक्ष\", None),"
  - "tests/validators/tests.py:627:56        परीक्ष                  U       with.idn.tld.उदाहरण.परीक्ष\", None),"
  - "tests/validators/tests.py:628:29        ıçğü                    U       validate_domain_name, \"ıçğü.com\", None),"
  - "tests/validators/tests.py:629:37        byfyc                   U       domain_name, \"xn--7ca6byfyc.com\", None),"
  - "tests/validators/tests.py:632:29        djangoproject           U       validate_domain_name, \"djangoproject.com\", None),"
  - "tests/validators/tests.py:633:29        DJANGOPROJECT           U       validate_domain_name, \"DJANGOPROJECT.COM\", None),"
  - "tests/validators/tests.py:650:30        उदाहरण                  U       domain.with.idn.tld.उदाहरण.परीक्ष\","
  - "tests/validators/tests.py:650:37        परीक्ष                  U       with.idn.tld.उदाहरण.परीक्ष\","
  - "tests/validators/tests.py:653:47        ıçğü                    U       accept_idna=False), \"ıçğü.com\", ValidationError"
  - "tests/validators/tests.py:715:32        djangoproject           U       ValidationError, '\"djangoproject.com\" has more than"
  - "tests/validators/tests.py:717:16        djangoproject           U       v(\"djangoproject.com\")"
  - "tests/view_tests/models.py:41:18        urlarticles     U       return \"/urlarticles/%s/\" % self.slug"
  - "tests/view_tests/tests/test_csrf.py:33:44       Verboden        U       assertContains(response, \"Verboden\", status_code=403)"
  - "tests/view_tests/tests/test_csrf.py:36:23       verificatie     U       \"CSRF-verificatie mislukt. Verzoek afgebroken"
  - "tests/view_tests/tests/test_csrf.py:36:35       mislukt         U       \"CSRF-verificatie mislukt. Verzoek afgebroken"
  - "tests/view_tests/tests/test_csrf.py:36:44       Verzoek         U       verificatie mislukt. Verzoek afgebroken.\","
  - "tests/view_tests/tests/test_csrf.py:36:52       afgebroken      U       verificatie mislukt. Verzoek afgebroken.\","
  - "tests/view_tests/tests/test_csrf.py:41:17       referer         U       def test_no_referer(self):"
  - "tests/view_tests/tests/test_csrf.py:43:9        Referer         U       Referer header is strictly checked"
  - "tests/view_tests/tests/test_csrf.py:44:43       referer         U       sending an incorrect referer."
  - "tests/view_tests/tests/test_csrf.py:50:15       Referer         U       \"“Referer header” to be sent by"
  - "tests/view_tests/tests/test_csrf.py:56:62       Referer         U       browser to disable “Referer” \""
  - "tests/view_tests/tests/test_debug.py:70:8           Unittests               U       \"\"\"Unittests for CallableSettingWrapper"
  - "tests/view_tests/tests/test_debug.py:92:68          haha                    U       loadedFile(\"file_data.txt\", b\"haha\"),"
  - "tests/view_tests/tests/test_debug.py:97:43          haha                    U       assertNotContains(response, \"haha\", status_code=500)"
  - "tests/view_tests/tests/test_debug.py:596:55         pasteform               U       /dpaste.com/\" name=\"pasteform\" '"
  - "tests/view_tests/tests/test_debug.py:597:18         pasteform               U       'id=\"pasteform\" method=\"post\">',"
  - "tests/view_tests/tests/test_debug.py:790:34         pastebin                U       one as plain text (for pastebin)"
  - "tests/view_tests/tests/test_debug.py:806:28         PYTHONNODEBUGRANGES     U       or os.environ.get(\"PYTHONNODEBUGRANGES\", False),"
  - "tests/view_tests/tests/test_debug.py:842:11         Pastebin                U       # Pastebin."
  - "tests/view_tests/tests/test_debug.py:1037:13        somevar                 U       somevar = b\"VAL\\xe9VAL\" # NOQA"
  - "tests/view_tests/tests/test_debug.py:1068:13        oomvalue                U       oomvalue = OomOutput() # NOQA"
  - "tests/view_tests/tests/test_debug.py:1086:13        largevalue              U       largevalue = LargeOutput() # NOQA"
  - "tests/view_tests/tests/test_debug.py:1103:39        mnὀp                    U       safe(\"abcdefghijkl<p>mnὀp</p>qrstuwxyz\").encode"
  - "tests/view_tests/tests/test_debug.py:1103:47        qrstuwxyz               U       abcdefghijkl<p>mnὀp</p>qrstuwxyz\").encode(\"ascii\")"
  - "tests/view_tests/tests/test_debug.py:1110:41        mnὀp                    U       assertIn(\"<strong>&lt;p&gt;mnὀp&lt;/p&gt;</strong>\""
  - "tests/view_tests/tests/test_debug.py:1176:24        filecontent             U       fp = StringIO(\"filecontent\")"
  - "tests/view_tests/tests/test_debug.py:1315:9         templ                   U       templ_path = Path("
  - "tests/view_tests/tests/test_debug.py:1324:34        templ                   U       3 : \" % {\"path\": templ_path},"
  - "tests/view_tests/tests/test_debug.py:1344:24        filecontent             U       fp = StringIO(\"filecontent\")"
  - "tests/view_tests/tests/test_debug.py:1457:53        fattie                  U       ADMINS=[(\"Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1457:60        breakie                 U       Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1493:53        fattie                  U       ADMINS=[(\"Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1493:60        breakie                 U       Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1536:53        fattie                  U       ADMINS=[(\"Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1536:60        breakie                 U       Admin\", \"admin@fattie-breakie.com\")]):"
  - "tests/view_tests/tests/test_debug.py:1925:45        djangosession           U       SESSION_COOKIE_NAME=\"djangosession\")"
  - "tests/view_tests/tests/test_debug.py:1927:36        djangosession           U       client.cookies.load({\"djangosession\": \"should not be displayed"
  - "tests/view_tests/tests/test_defaults.py:49:13       urlarticle      U       cls.urlarticle = UrlArticle.objects"
  - "tests/view_tests/tests/test_defaults.py:170:50      urlarticle      U       objects.get(pk=self.urlarticle.pk)"
  - "tests/view_tests/tests/test_i18n.py:42:52       referer             U       post_data, headers={\"referer\": \"/i_should_not_be"
  - "tests/view_tests/tests/test_i18n.py:82:32       referer             U       Insecure URL in HTTP referer."
  - "tests/view_tests/tests/test_i18n.py:84:54       referer             U       secure=True, headers={\"referer\": non_https_next_url"
  - "tests/view_tests/tests/test_i18n.py:91:34       referer             U       setlang_redirect_to_referer(self):"
  - "tests/view_tests/tests/test_i18n.py:93:59       referer             U       redirects to the URL in the referer header when"
  - "tests/view_tests/tests/test_i18n.py:134:22      doesnt (doesn't)    U       def test_setlang_doesnt_perform_a_redirect_to"
  - "tests/view_tests/tests/test_i18n.py:141:26      REFERER             U       headers = {\"HTTP_REFERER\": \"/\", \"HTTP_ACCEPT"
  - "tests/view_tests/tests/test_i18n.py:148:22      doesnt (doesn't)    U       def test_setlang_doesnt_perform_a_default_redirect"
  - "tests/view_tests/tests/test_i18n.py:186:38      mylanguage          U       LANGUAGE_COOKIE_NAME\": \"mylanguage\","
  - "tests/view_tests/tests/test_i18n.py:197:53      mylanguage          U       response.cookies.get(\"mylanguage\")"
  - "tests/view_tests/tests/test_i18n.py:208:48      REFERER             U       view decodes the HTTP_REFERER URL and preserves an"
  - "tests/view_tests/tests/test_i18n.py:239:45      vertaald            U       ssertRedirects(response, \"/nl/vertaald/\")"
  - "tests/view_tests/tests/test_i18n.py:245:38      vertaald            U       headers={\"referer\": \"/nl/vertaald/\"},"
  - "tests/view_tests/tests/test_i18n.py:268:48      djangojs            U       gettext.translation(\"djangojs\", locale_dir, [lang"
  - "tests/view_tests/tests/test_i18n.py:279:45      msgctxt             U       Message with context (msgctxt)"
  - "tests/view_tests/tests/test_i18n.py:292:14      jsoni               U       def test_jsoni18n(self):"
  - "tests/view_tests/tests/test_i18n.py:297:42      jsoni               U       = self.client.get(\"/jsoni18n/\")"
  - "tests/view_tests/tests/test_i18n.py:323:47      esto                U       assertNotContains(response, \"esto tiene que ser traducido"
  - "tests/view_tests/tests/test_i18n.py:323:52      tiene               U       rtNotContains(response, \"esto tiene que ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:323:66      traducido           U       \"esto tiene que ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:325:14      jsoni               U       def test_jsoni18n_with_missing_en_files"
  - "tests/view_tests/tests/test_i18n.py:331:42      jsoni               U       = self.client.get(\"/jsoni18n/\")"
  - "tests/view_tests/tests/test_i18n.py:347:55      traduire            U       response, \"il faut le traduire\")"
  - "tests/view_tests/tests/test_i18n.py:364:48      esto                U       custom_locale_path: esto tiene que ser traducido"
  - "tests/view_tests/tests/test_i18n.py:364:53      tiene               U       custom_locale_path: esto tiene que ser traducido\""
  - "tests/view_tests/tests/test_i18n.py:364:67      traducido           U       esto tiene que ser traducido\""
  - "tests/view_tests/tests/test_i18n.py:368:48      esto                U       custom_locale_path: esto tiene que ser traducido"
  - "tests/view_tests/tests/test_i18n.py:368:53      tiene               U       custom_locale_path: esto tiene que ser traducido\""
  - "tests/view_tests/tests/test_i18n.py:368:67      traducido           U       esto tiene que ser traducido\""
  - "tests/view_tests/tests/test_i18n.py:414:47      Choisir             U       assertNotContains(response, \"Choisir une heure\")"
  - "tests/view_tests/tests/test_i18n.py:414:59      heure               U       response, \"Choisir une heure\")"
  - "tests/view_tests/tests/test_i18n.py:417:42      userpref            U       english_default_english_userpref(self):"
  - "tests/view_tests/tests/test_i18n.py:434:44      Choisir             U       assertContains(response, \"Choisir une heure\")"
  - "tests/view_tests/tests/test_i18n.py:434:56      heure               U       response, \"Choisir une heure\")"
  - "tests/view_tests/tests/test_i18n.py:449:53      udca                U       response, \"\\\\ud83d\\\\udca9\")"
  - "tests/view_tests/tests/test_i18n.py:456:57      djangojs            U       catalog composed by djangojs domain"
  - "tests/view_tests/tests/test_i18n.py:461:22      traduire            U       \"il faut traduire cette cha\\\\u00eene de"
  - "tests/view_tests/tests/test_i18n.py:461:31      cette               U       \"il faut traduire cette cha\\\\u00eene de caract"
  - "tests/view_tests/tests/test_i18n.py:461:45      eene                U       traduire cette cha\\\\u00eene de caract\\\\u00e8res"
  - "tests/view_tests/tests/test_i18n.py:461:53      caract              U       cette cha\\\\u00eene de caract\\\\u00e8res de \""
  - "tests/view_tests/tests/test_i18n.py:486:49      texto               U       ssertContains(response, \"este texto de app3 debe ser traducido"
  - "tests/view_tests/tests/test_i18n.py:486:63      debe                U       \"este texto de app3 debe ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:486:72      traducido           U       texto de app3 debe ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:499:53      texto               U       ssertContains(response, \"este texto de app3 debe ser traducido"
  - "tests/view_tests/tests/test_i18n.py:499:67      debe                U       \"este texto de app3 debe ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:499:76      traducido           U       texto de app3 debe ser traducido\")"
  - "tests/view_tests/tests/test_i18n.py:542:38      Entfernen           U       assertEqual(elem.text, \"Entfernen\")"
  - "tests/view_tests/tests/test_i18n.py:546:42      Elemente            U       assertEqual(elem.text, \"455 Elemente\")"
  - "tests/view_tests/tests/test_i18n.py:547:60      onnonplural         U       element(By.ID, \"ngettext_onnonplural\")"
  - "tests/view_tests/tests/test_i18n.py:548:38      Bild                U       assertEqual(elem.text, \"Bild\")"
  - "tests/view_tests/tests/test_i18n.py:550:38      Kann                U       assertEqual(elem.text, \"Kann\")"
  - "tests/view_tests/tests/test_i18n.py:552:40      Resultat            U       assertEqual(elem.text, \"1 Resultat\")"
  - "tests/view_tests/tests/test_i18n.py:554:42      Resultate           U       assertEqual(elem.text, \"455 Resultate\")"
  - "tests/view_tests/tests/test_i18n.py:570:33      traduire            U       elem.text, \"il faut traduire cette chaîne de caract"
  - "tests/view_tests/tests/test_i18n.py:570:42      cette               U       text, \"il faut traduire cette chaîne de caractères"
  - "tests/view_tests/tests/test_i18n.py:570:48      chaîne              U       faut traduire cette chaîne de caractères de app"
  - "tests/view_tests/tests/test_i18n.py:570:58      caractères          U       traduire cette chaîne de caractères de app1\""
  - "tests/view_tests/tests/test_i18n.py:574:33      traduire            U       elem.text, \"il faut traduire cette chaîne de caract"
  - "tests/view_tests/tests/test_i18n.py:574:42      cette               U       text, \"il faut traduire cette chaîne de caractères"
  - "tests/view_tests/tests/test_i18n.py:574:48      chaîne              U       faut traduire cette chaîne de caractères de app"
  - "tests/view_tests/tests/test_i18n.py:574:58      caractères          U       traduire cette chaîne de caractères de app2\""
  - "tests/view_tests/urls.py:56:11          jsoni       U       path(\"jsoni18n/\", i18n.JSONCatalog"
  - "tests/view_tests/views.py:335:7         Klass       U       class Klass:"
  - "tests/view_tests/views.py:389:12        Klass       U       return Klass().method(request)"
  - "tests/view_tests/views.py:393:18        Klass       U       return await Klass().async_method(request"
  - "tests/view_tests/views.py:397:18        Klass       U       return await Klass().async_method_nested"

issuesSummary:
  - "text: AAARGH, count: 2, files: 2,"
  - "text: aacute, count: 3, files: 2,"
  - "text: aauthenticate, count: 10, files: 4,"
  - "text: abaaba, count: 1, files: 1,"
  - "text: abca, count: 2, files: 1,"
  - "text: abcćžšđ, count: 2, files: 2,"
  - "text: abcxyz, count: 2, files: 1,"
  - "text: ABCXYZ, count: 1, files: 1,"
  - "text: abril, count: 2, files: 1,"
  - "text: abspk, count: 2, files: 1,"
  - "text: abspl, count: 2, files: 1,"
  - "text: abstractperson, count: 3, files: 2,"
  - "text: Ãbűla, count: 4, files: 1,"
  - "text: acache, count: 9, files: 3,"
  - "text: acached, count: 3, files: 1,"
  - "text: acall, count: 2, files: 1,"
  - "text: accd, count: 1, files: 1,"
  - "text: accusamus, count: 1, files: 1,"
  - "text: accusantium, count: 1, files: 1,"
  - "text: aceg, count: 1, files: 1,"
  - "text: ACEGIMLONPSRUTYZ, count: 1, files: 1,"
  - "text: acheck, count: 12, files: 4,"
  - "text: acycle, count: 5, files: 4,"
  - "text: adbin, count: 1, files: 1,"
  - "text: adbinfl, count: 4, files: 1,"
  - "text: adchfl, count: 4, files: 1,"
  - "text: addcovering, count: 1, files: 1,"
  - "text: addcreate, count: 1, files: 1,"
  - "text: adddeferred, count: 1, files: 1,"
  - "text: addfuncin, count: 3, files: 1,"
  - "text: addheaders, count: 1, files: 1,"
  - "text: addlink, count: 2, files: 2,"
  - "text: addorconstraint, count: 1, files: 1,"
  - "text: adecr, count: 7, files: 2,"
  - "text: adfagf, count: 1, files: 1,"
  - "text: adfl, count: 5, files: 1,"
  - "text: adflbddd, count: 1, files: 1,"
  - "text: adfldd, count: 1, files: 1,"
  - "text: adflddf, count: 1, files: 1,"
  - "text: adflddsce, count: 1, files: 1,"
  - "text: adfligsw, count: 5, files: 1,"
  - "text: adflmm, count: 5, files: 1,"
  - "text: adflpd, count: 5, files: 1,"
  - "text: adfuncuc, count: 3, files: 1,"
  - "text: adin, count: 5, files: 1,"
  - "text: adinigsw, count: 3, files: 1,"
  - "text: adinsf, count: 5, files: 1,"
  - "text: adipisci, count: 1, files: 1,"
  - "text: adipiscing, count: 3, files: 3,"
  - "text: adipisicing, count: 6, files: 2,"
  - "text: adminorderedadminmethod, count: 1, files: 1,"
  - "text: adminorderedcallable, count: 1, files: 1,"
  - "text: adminorderedfield, count: 1, files: 1,"
  - "text: adminorderedmodelmethod, count: 1, files: 1,"
  - "text: adnoh, count: 3, files: 1,"
  - "text: adnum, count: 1, files: 1,"
  - "text: adrelid, count: 2, files: 1,"
  - "text: adtxtfl, count: 4, files: 1,"
  - "text: advanceduserstat, count: 3, files: 1,"
  - "text: advstat, count: 2, files: 1,"
  - "text: áéíóúö, count: 2, files: 1,"
  - "text: Aerosmith, count: 5, files: 1,"
  - "text: afadbn, count: 1, files: 1,"
  - "text: afgebroken, count: 1, files: 1,"
  - "text: afknfk, count: 5, files: 1,"
  - "text: aflush, count: 3, files: 3,"
  - "text: aforce, count: 5, files: 2,"
  - "text: Afun, count: 3, files: 1,"
  - "text: Agaricales, count: 3, files: 1,"
  - "text: aggr, count: 22, files: 7,"
  - "text: AGGR, count: 2, files: 1,"
  - "text: aggs, count: 15, files: 4,"
  - "text: Agnelline, count: 2, files: 1,"
  - "text: agost, count: 1, files: 1,"
  - "text: ahahaha, count: 1, files: 1,"
  - "text: ahandle, count: 5, files: 1,"
  - "text: ahas, count: 12, files: 5,"
  - "text: aincr, count: 9, files: 2,"
  - "text: aiosmtpd, count: 4, files: 1,"
  - "text: AIOSMTPD, count: 5, files: 1,"
  - "text: aira, count: 2, files: 1,"
  - "text: aitems, count: 6, files: 2,"
  - "text: Ajavascript, count: 2, files: 1,"
  - "text: Ajout, count: 3, files: 2,"
  - "text: akash, count: 2, files: 1,"
  - "text: akeys, count: 3, files: 3,"
  - "text: ALAND, count: 2, files: 1,"
  - "text: Åland, count: 1, files: 1,"
  - "text: Albers, count: 1, files: 1,"
  - "text: Alchin, count: 5, files: 1,"
  - "text: alen, count: 4, files: 1,"
  - "text: alfk, count: 5, files: 1,"
  - "text: alfl, count: 5, files: 1,"
  - "text: alfladd, count: 1, files: 1,"
  - "text: alflcbnddnn, count: 1, files: 1,"
  - "text: alflcdtdd, count: 1, files: 1,"
  - "text: alflcntdddn, count: 1, files: 1,"
  - "text: alflcntddnn, count: 1, files: 1,"
  - "text: alflfo, count: 1, files: 1,"
  - "text: alflin, count: 5, files: 1,"
  - "text: alflmm, count: 5, files: 1,"
  - "text: alflpk, count: 5, files: 1,"
  - "text: alflpkfk, count: 5, files: 1,"
  - "text: alflpkfkdbc, count: 1, files: 1,"
  - "text: alflpkmtifk, count: 1, files: 1,"
  - "text: alflpkmtiftb, count: 1, files: 1,"
  - "text: alflrsfkwtflrnttc, count: 1, files: 1,"
  - "text: alflrsfkwtflttc, count: 1, files: 1,"
  - "text: alfuncin, count: 1, files: 1,"
  - "text: alfuncuc, count: 1, files: 1,"
  - "text: algostr, count: 3, files: 1,"
  - "text: alia, count: 1, files: 1,"
  - "text: alid, count: 2, files: 1,"
  - "text: alidpktuuidpk, count: 1, files: 1,"
  - "text: aliqua, count: 7, files: 5,"
  - "text: aliquam, count: 1, files: 1,"
  - "text: aliquid, count: 1, files: 1,"
  - "text: aliquip, count: 2, files: 2,"
  - "text: alkdjf, count: 1, files: 1,"
  - "text: allogrfields, count: 1, files: 1,"
  - "text: allvaluesfieldlistfilter, count: 2, files: 1,"
  - "text: almoma, count: 5, files: 1,"
  - "text: almomae, count: 5, files: 1,"
  - "text: almoop, count: 5, files: 1,"
  - "text: almota, count: 5, files: 1,"
  - "text: almotaco, count: 1, files: 1,"
  - "text: aload, count: 11, files: 7,"
  - "text: alogin, count: 12, files: 4,"
  - "text: alogout, count: 9, files: 3,"
  - "text: alorwrtto, count: 5, files: 1,"
  - "text: alphanum, count: 1, files: 1,"
  - "text: alternatearticle, count: 2, files: 1,"
  - "text: altert, count: 1, files: 1,"
  - "text: altlocation, count: 2, files: 1,"
  - "text: alunto, count: 5, files: 1,"
  - "text: Amanitacae, count: 4, files: 1,"
  - "text: ambigious, count: 1, files: 1,"
  - "text: amet, count: 11, files: 6,"
  - "text: amname, count: 4, files: 1,"
  - "text: ampersanded, count: 4, files: 2,"
  - "text: ampy, count: 2, files: 1,"
  - "text: anatinus, count: 6, files: 3,"
  - "text: Anatoly, count: 1, files: 1,"
  - "text: andere, count: 2, files: 1,"
  - "text: Andere, count: 1, files: 1,"
  - "text: anderen, count: 1, files: 1,"
  - "text: André, count: 2, files: 1,"
  - "text: anel, count: 1, files: 1,"
  - "text: anewpassword, count: 5, files: 1,"
  - "text: Anghor, count: 1, files: 1,"
  - "text: Animalia, count: 2, files: 1,"
  - "text: animi, count: 1, files: 1,"
  - "text: année, count: 1, files: 1,"
  - "text: anonuser, count: 4, files: 1,"
  - "text: Anonynous, count: 1, files: 1,"
  - "text: anöther, count: 3, files: 1,"
  - "text: anotherapp, count: 1, files: 1,"
  - "text: anothercol, count: 2, files: 1,"
  - "text: anothertag, count: 2, files: 1,"
  - "text: ANSICON, count: 1, files: 1,"
  - "text: anth, count: 3, files: 1,"
  - "text: ANTH, count: 1, files: 1,"
  - "text: Anthropoda, count: 1, files: 1,"
  - "text: anyinteract, count: 1, files: 1,"
  - "text: ANYINTERACT, count: 1, files: 1,"
  - "text: Aother, count: 1, files: 1,"
  - "text: äöüßabc, count: 1, files: 1,"
  - "text: apackage, count: 2, files: 1,"
  - "text: aperiam, count: 1, files: 1,"
  - "text: appendleft, count: 1, files: 1,"
  - "text: appindex, count: 1, files: 1,"
  - "text: APPL, count: 4, files: 1,"
  - "text: applabel, count: 1, files: 1,"
  - "text: aprefetch, count: 5, files: 2,"
  - "text: Apress, count: 16, files: 4,"
  - "text: aproxy, count: 1, files: 1,"
  - "text: Arcata, count: 1, files: 1,"
  - "text: architecto, count: 1, files: 1,"
  - "text: argcount, count: 3, files: 1,"
  - "text: argumented, count: 3, files: 1,"
  - "text: arraysize, count: 4, files: 1,"
  - "text: arrayvar, count: 2, files: 1,"
  - "text: arridx, count: 5, files: 1,"
  - "text: ARRRR, count: 1, files: 1,"
  - "text: articleref, count: 3, files: 1,"
  - "text: Artificiels, count: 5, files: 1,"
  - "text: Artur, count: 2, files: 1,"
  - "text: Aryeh, count: 6, files: 3,"
  - "text: asend, count: 13, files: 4,"
  - "text: asession, count: 10, files: 3,"
  - "text: asetdefault, count: 3, files: 2,"
  - "text: asgi, count: 20, files: 7,"
  - "text: ASGI, count: 34, files: 8,"
  - "text: asname, count: 1, files: 1,"
  - "text: asos, count: 5, files: 1,"
  - "text: asperiores, count: 1, files: 1,"
  - "text: aspernatur, count: 1, files: 1,"
  - "text: assumenda, count: 1, files: 1,"
  - "text: Astelehena, count: 1, files: 1,"
  - "text: Astros, count: 5, files: 1,"
  - "text: Asturian, count: 2, files: 2,"
  - "text: asturianu, count: 1, files: 1,"
  - "text: Asụsụ, count: 1, files: 1,"
  - "text: asvar, count: 27, files: 7,"
  - "text: atest, count: 3, files: 2,"
  - "text: atouch, count: 3, files: 2,"
  - "text: atque, count: 1, files: 1,"
  - "text: Atsikko, count: 1, files: 1,"
  - "text: attcollation, count: 1, files: 1,"
  - "text: attibutes, count: 1, files: 1,"
  - "text: attidentity, count: 1, files: 1,"
  - "text: attnames, count: 6, files: 3,"
  - "text: attnotnull, count: 1, files: 1,"
  - "text: attnum, count: 5, files: 1,"
  - "text: attoptions, count: 3, files: 1,"
  - "text: attrdef, count: 1, files: 1,"
  - "text: attrelid, count: 5, files: 1,"
  - "text: atttypid, count: 1, files: 1,"
  - "text: AUFS, count: 1, files: 1,"
  - "text: auser, count: 17, files: 4,"
  - "text: australiacity, count: 3, files: 1,"
  - "text: aute, count: 2, files: 2,"
  - "text: autem, count: 1, files: 1,"
  - "text: Authi, count: 2, files: 1,"
  - "text: authorsbooks, count: 1, files: 1,"
  - "text: authorunmanaged, count: 2, files: 1,"
  - "text: authorwithage, count: 5, files: 1,"
  - "text: AUTHORWITHEVENLOB, count: 1, files: 1,"
  - "text: authorwithevenlongee, count: 1, files: 1,"
  - "text: AUTHUSER, count: 2, files: 1,"
  - "text: autofields, count: 2, files: 2,"
  - "text: autom, count: 3, files: 1,"
  - "text: autonumbering, count: 1, files: 1,"
  - "text: autopk, count: 4, files: 4,"
  - "text: autoplay, count: 1, files: 1,"
  - "text: autopopulate, count: 1, files: 1,"
  - "text: autoreloader, count: 3, files: 3,"
  - "text: Autosection, count: 1, files: 1,"
  - "text: autosectionlabel, count: 3, files: 1,"
  - "text: autoval, count: 2, files: 2,"
  - "text: autres, count: 1, files: 1,"
  - "text: avals, count: 1, files: 1,"
  - "text: avalues, count: 3, files: 2,"
  - "text: avec, count: 2, files: 1,"
  - "text: avgx, count: 2, files: 1,"
  - "text: AVGX, count: 1, files: 1,"
  - "text: avgy, count: 1, files: 1,"
  - "text: AVGY, count: 1, files: 1,"
  - "text: awef, count: 2, files: 1,"
  - "text: awesomeiiii, count: 4, files: 1,"
  - "text: awrapper, count: 4, files: 2,"
  - "text: awss, count: 1, files: 1,"
  - "text: AWSS, count: 3, files: 1,"
  - "text: awεšomeııı, count: 2, files: 1,"
  - "text: awεšomeıııi, count: 1, files: 1,"
  - "text: Azərbaycanca, count: 1, files: 1,"
  - "text: babik, count: 2, files: 1,"
  - "text: BACB, count: 1, files: 1,"
  - "text: backpointer, count: 1, files: 1,"
  - "text: backref, count: 3, files: 2,"
  - "text: badencoded, count: 1, files: 1,"
  - "text: badkey, count: 3, files: 1,"
  - "text: badoption, count: 2, files: 1,"
  - "text: badpath, count: 1, files: 1,"
  - "text: badpk, count: 4, files: 2,"
  - "text: badsetting, count: 1, files: 1,"
  - "text: badsimpletag, count: 6, files: 2,"
  - "text: badvalue, count: 1, files: 1,"
  - "text: Bahasa, count: 2, files: 1,"
  - "text: bandheader, count: 2, files: 1,"
  - "text: bandmemjson, count: 3, files: 1,"
  - "text: bandpk, count: 2, files: 1,"
  - "text: banduuid, count: 2, files: 1,"
  - "text: barfoobaz, count: 5, files: 1,"
  - "text: barness, count: 2, files: 1,"
  - "text: basea, count: 2, files: 1,"
  - "text: baseform, count: 3, files: 2,"
  - "text: baseloader, count: 1, files: 1,"
  - "text: baseqs, count: 5, files: 1,"
  - "text: baseuser, count: 1, files: 1,"
  - "text: Basia, count: 2, files: 1,"
  - "text: Basidiomycota, count: 1, files: 1,"
  - "text: Batemans, count: 3, files: 1,"
  - "text: bazba, count: 5, files: 1,"
  - "text: BAZZ, count: 1, files: 1,"
  - "text: Bazza, count: 5, files: 1,"
  - "text: bberthy, count: 1, files: 1,"
  - "text: bcabcabcccaa, count: 2, files: 1,"
  - "text: bcdefghij, count: 10, files: 2,"
  - "text: bchanged, count: 3, files: 1,"
  - "text: bcryptsha, count: 1, files: 1,"
  - "text: beatae, count: 1, files: 1,"
  - "text: beatle, count: 10, files: 2,"
  - "text: Beatle, count: 6, files: 2,"
  - "text: Bedacht, count: 5, files: 1,"
  - "text: bedemir, count: 5, files: 1,"
  - "text: Bedemir, count: 1, files: 1,"
  - "text: Bedemir's, count: 5, files: 2,"
  - "text: behaviour, count: 6, files: 3,"
  - "text: Bellaire, count: 2, files: 1,"
  - "text: benoit, count: 5, files: 1,"
  - "text: Benoit, count: 3, files: 1,"
  - "text: Benutzername, count: 1, files: 1,"
  - "text: Bergeron, count: 1, files: 1,"
  - "text: Berthy, count: 1, files: 1,"
  - "text: Bessette, count: 2, files: 1,"
  - "text: Bexar, count: 2, files: 2,"
  - "text: Bianchi, count: 2, files: 1,"
  - "text: bibi, count: 3, files: 1,"
  - "text: ᴮᴵᴳᴮᴵᴿᴰ, count: 1, files: 1,"
  - "text: Biggs, count: 1, files: 1,"
  - "text: biginteger, count: 3, files: 2,"
  - "text: bigints, count: 8, files: 4,"
  - "text: Bild, count: 2, files: 2,"
  - "text: Billionen, count: 1, files: 1,"
  - "text: Binvalid, count: 1, files: 1,"
  - "text: Birkeland, count: 1, files: 1,"
  - "text: birman, count: 1, files: 1,"
  - "text: birthdayparty, count: 1, files: 1,"
  - "text: Bissex, count: 10, files: 3,"
  - "text: bitled, count: 1, files: 1,"
  - "text: Bjorn, count: 2, files: 2,"
  - "text: Blackmoor, count: 1, files: 1,"
  - "text: Blakemore, count: 1, files: 1,"
  - "text: blanditiis, count: 1, files: 1,"
  - "text: blarg, count: 2, files: 1,"
  - "text: blech, count: 1, files: 1,"
  - "text: blockxsize, count: 1, files: 1,"
  - "text: blockysize, count: 1, files: 1,"
  - "text: blub, count: 2, files: 2,"
  - "text: blurglecruncheon, count: 1, files: 1,"
  - "text: bmatch, count: 4, files: 1,"
  - "text: Bobo, count: 1, files: 1,"
  - "text: bois, count: 2, files: 1,"
  - "text: Bokmal, count: 1, files: 1,"
  - "text: bokmål, count: 1, files: 1,"
  - "text: Bokmål, count: 1, files: 1,"
  - "text: bolano, count: 5, files: 3,"
  - "text: Bolaño, count: 3, files: 3,"
  - "text: bonafide, count: 1, files: 1,"
  - "text: bookfkaspk, count: 1, files: 1,"
  - "text: bookwithcustompk, count: 5, files: 1,"
  - "text: boolfield, count: 1, files: 1,"
  - "text: bosanski, count: 1, files: 1,"
  - "text: bostaver, count: 5, files: 1,"
  - "text: bothverbosenameprofile, count: 5, files: 1,"
  - "text: boundarystream, count: 2, files: 1,"
  - "text: Boxford, count: 1, files: 1,"
  - "text: bpython, count: 10, files: 2,"
  - "text: Brasileiro, count: 1, files: 1,"
  - "text: breakie, count: 3, files: 1,"
  - "text: brezhoneg, count: 1, files: 1,"
  - "text: Briscoe, count: 1, files: 1,"
  - "text: brokenapp, count: 1, files: 1,"
  - "text: brokenimg, count: 4, files: 2,"
  - "text: Bronn, count: 1, files: 1,"
  - "text: Bsome, count: 2, files: 2,"
  - "text: btest, count: 1, files: 1,"
  - "text: btrans, count: 3, files: 1,"
  - "text: bufferwithstyle, count: 2, files: 2,"
  - "text: buildbots, count: 1, files: 1,"
  - "text: Bulat, count: 2, files: 1,"
  - "text: Buswell, count: 5, files: 1,"
  - "text: butor, count: 1, files: 1,"
  - "text: bycustompk, count: 2, files: 2,"
  - "text: bycustomslug, count: 2, files: 2,"
  - "text: byfyc, count: 1, files: 1,"
  - "text: bypkandslug, count: 3, files: 2,"
  - "text: bypkignoreslug, count: 3, files: 2,"
  - "text: byslug, count: 4, files: 3,"
  - "text: bytea, count: 2, files: 2,"
  - "text: byteorders, count: 1, files: 1,"
  - "text: cachedloader, count: 1, files: 1,"
  - "text: cacheentry, count: 1, files: 1,"
  - "text: cachenode, count: 2, files: 1,"
  - "text: cacheprefix, count: 3, files: 1,"
  - "text: cadeau, count: 5, files: 1,"
  - "text: cadeaux, count: 5, files: 1,"
  - "text: calendarin, count: 4, files: 1,"
  - "text: camelcaserelatedmodel, count: 2, files: 1,"
  - "text: cand, count: 4, files: 2,"
  - "text: capi, count: 87, files: 18,"
  - "text: CAPI, count: 5, files: 1,"
  - "text: capofamiglia, count: 2, files: 1,"
  - "text: caract, count: 1, files: 1,"
  - "text: caractères, count: 3, files: 2,"
  - "text: cargs, count: 22, files: 5,"
  - "text: cartire, count: 1, files: 1,"
  - "text: Cassini, count: 1, files: 1,"
  - "text: català, count: 1, files: 1,"
  - "text: catched, count: 1, files: 1,"
  - "text: categoryinfo, count: 1, files: 1,"
  - "text: categoryitem, count: 3, files: 1,"
  - "text: Catelyn, count: 1, files: 1,"
  - "text: CAUX, count: 1, files: 1,"
  - "text: Ceci, count: 1, files: 1,"
  - "text: Celine, count: 1, files: 1,"
  - "text: censuszipcode, count: 2, files: 1,"
  - "text: Cescapeme, count: 1, files: 1,"
  - "text: česky, count: 1, files: 1,"
  - "text: cette, count: 3, files: 1,"
  - "text: CFGY, count: 1, files: 1,"
  - "text: cfield, count: 3, files: 2,"
  - "text: cfkmtopkfdbc, count: 1, files: 1,"
  - "text: cgeo, count: 6, files: 2,"
  - "text: chaîne, count: 2, files: 1,"
  - "text: changeemailuser, count: 1, files: 1,"
  - "text: chapterxtra, count: 1, files: 1,"
  - "text: charfielddbcollation, count: 1, files: 1,"
  - "text: charfields, count: 1, files: 1,"
  - "text: charfieldunlimited, count: 1, files: 1,"
  - "text: charliebrown, count: 2, files: 1,"
  - "text: charmodel, count: 4, files: 1,"
  - "text: charrefs, count: 6, files: 2,"
  - "text: chartextarrayindexmodel, count: 1, files: 1,"
  - "text: checkboxbox, count: 1, files: 1,"
  - "text: Chère, count: 1, files: 1,"
  - "text: childid, count: 1, files: 1,"
  - "text: childmodel, count: 3, files: 2,"
  - "text: childmost, count: 1, files: 1,"
  - "text: childobjecta, count: 4, files: 2,"
  - "text: childrelatedviaak, count: 5, files: 1,"
  - "text: childs, count: 6, files: 2,"
  - "text: Childs, count: 5, files: 1,"
  - "text: childss, count: 1, files: 1,"
  - "text: Choiceful, count: 6, files: 2,"
  - "text: choicesfieldlistfilter, count: 1, files: 1,"
  - "text: choicewidget, count: 2, files: 2,"
  - "text: Choisir, count: 4, files: 2,"
  - "text: Chordata, count: 1, files: 1,"
  - "text: chordsband, count: 1, files: 1,"
  - "text: Chun, count: 11, files: 4,"
  - "text: CIFS, count: 2, files: 2,"
  - "text: cillum, count: 2, files: 2,"
  - "text: cimen, count: 2, files: 1,"
  - "text: circulara, count: 2, files: 1,"
  - "text: circularb, count: 2, files: 1,"
  - "text: CIRCULARSTRING, count: 1, files: 1,"
  - "text: citats, count: 3, files: 1,"
  - "text: Çkeð, count: 5, files: 1,"
  - "text: classid, count: 1, files: 1,"
  - "text: classinfo, count: 2, files: 1,"
  - "text: classonlymethod, count: 3, files: 2,"
  - "text: clearish, count: 5, files: 1,"
  - "text: Cleese, count: 5, files: 2,"
  - "text: Clegg, count: 2, files: 1,"
  - "text: clientside, count: 3, files: 3,"
  - "text: clob, count: 7, files: 5,"
  - "text: CLOB, count: 9, files: 7,"
  - "text: clocklink, count: 1, files: 1,"
  - "text: closelink, count: 4, files: 2,"
  - "text: closepolygons, count: 1, files: 1,"
  - "text: clrk, count: 1, files: 1,"
  - "text: clucka, count: 1, files: 1,"
  - "text: cmafa, count: 5, files: 1,"
  - "text: cmatches, count: 3, files: 1,"
  - "text: Cmdoption, count: 2, files: 1,"
  - "text: CMLY, count: 1, files: 1,"
  - "text: cmoma, count: 4, files: 1,"
  - "text: Cnster, count: 2, files: 1,"
  - "text: Cnter, count: 1, files: 1,"
  - "text: Coccinelle, count: 1, files: 1,"
  - "text: codepoint, count: 1, files: 1,"
  - "text: cofeat, count: 3, files: 2,"
  - "text: colid, count: 2, files: 1,"
  - "text: collectstatis, count: 1, files: 1,"
  - "text: collectstatistic, count: 1, files: 1,"
  - "text: collisdeterministic, count: 1, files: 1,"
  - "text: collname, count: 3, files: 2,"
  - "text: colname, count: 3, files: 2,"
  - "text: COLNAMES, count: 1, files: 1,"
  - "text: Colourful, count: 6, files: 2,"
  - "text: colours, count: 6, files: 2,"
  - "text: Colours, count: 1, files: 1,"
  - "text: colseq, count: 1, files: 1,"
  - "text: columntypes, count: 3, files: 1,"
  - "text: combinated, count: 1, files: 1,"
  - "text: comebackkid, count: 2, files: 1,"
  - "text: commandegg, count: 2, files: 1,"
  - "text: commodi, count: 1, files: 1,"
  - "text: commodo, count: 2, files: 2,"
  - "text: Cómo, count: 6, files: 4,"
  - "text: compileoption, count: 1, files: 1,"
  - "text: complexpassword, count: 2, files: 1,"
  - "text: complexsortedperson, count: 3, files: 1,"
  - "text: COMPOUNDCURVE, count: 1, files: 1,"
  - "text: COMPREPLY, count: 2, files: 1,"
  - "text: compresslevel, count: 2, files: 1,"
  - "text: concretebase, count: 1, files: 1,"
  - "text: concretemodel, count: 2, files: 1,"
  - "text: concreteparent, count: 3, files: 1,"
  - "text: confkey, count: 2, files: 1,"
  - "text: confrelid, count: 2, files: 1,"
  - "text: conkey, count: 2, files: 1,"
  - "text: conname, count: 1, files: 1,"
  - "text: conrelid, count: 3, files: 1,"
  - "text: consectetuer, count: 1, files: 1,"
  - "text: consectetur, count: 10, files: 5,"
  - "text: consequat, count: 2, files: 2,"
  - "text: consequatur, count: 1, files: 1,"
  - "text: consequuntur, count: 1, files: 1,"
  - "text: Consigliere, count: 6, files: 2,"
  - "text: constaint, count: 1, files: 1,"
  - "text: consultor, count: 2, files: 1,"
  - "text: conta, count: 3, files: 1,"
  - "text: contenir, count: 1, files: 1,"
  - "text: contextlist, count: 2, files: 1,"
  - "text: Contraseña, count: 2, files: 1,"
  - "text: contributable, count: 3, files: 1,"
  - "text: contype, count: 2, files: 1,"
  - "text: convexhull, count: 4, files: 3,"
  - "text: convs, count: 2, files: 1,"
  - "text: cookiedict, count: 3, files: 1,"
  - "text: CORBA, count: 1, files: 1,"
  - "text: corporis, count: 1, files: 1,"
  - "text: corrupti, count: 1, files: 1,"
  - "text: courseproxy, count: 3, files: 1,"
  - "text: coveragerc, count: 1, files: 1,"
  - "text: CPLERR, count: 2, files: 1,"
  - "text: CREAT, count: 6, files: 3,"
  - "text: createdir, count: 3, files: 1,"
  - "text: createnull, count: 1, files: 1,"
  - "text: credentails, count: 1, files: 1,"
  - "text: Crgen, count: 2, files: 1,"
  - "text: crigsw, count: 5, files: 1,"
  - "text: CRLFCRLF, count: 1, files: 1,"
  - "text: crmo, count: 10, files: 2,"
  - "text: crmobechc, count: 1, files: 1,"
  - "text: crmoih, count: 5, files: 1,"
  - "text: crmomm, count: 5, files: 1,"
  - "text: crmoua, count: 5, files: 1,"
  - "text: Crname, count: 5, files: 1,"
  - "text: crprmo, count: 5, files: 1,"
  - "text: crummo, count: 5, files: 1,"
  - "text: Cryptonomicon, count: 2, files: 1,"
  - "text: Cscript, count: 5, files: 2,"
  - "text: Cspam, count: 1, files: 1,"
  - "text: Ctest, count: 2, files: 1,"
  - "text: ctex, count: 1, files: 1,"
  - "text: ctxt, count: 9, files: 2,"
  - "text: cume, count: 4, files: 1,"
  - "text: CUME, count: 1, files: 1,"
  - "text: cumque, count: 1, files: 1,"
  - "text: cupidatat, count: 2, files: 2,"
  - "text: cupiditate, count: 1, files: 1,"
  - "text: currsize, count: 3, files: 2,"
  - "text: currval, count: 1, files: 1,"
  - "text: curveball, count: 1, files: 1,"
  - "text: CURVEPOLYGON, count: 1, files: 1,"
  - "text: cust, count: 5, files: 1,"
  - "text: customemailfield, count: 1, files: 1,"
  - "text: customescape, count: 2, files: 1,"
  - "text: customform, count: 2, files: 2,"
  - "text: customised, count: 2, files: 1,"
  - "text: Customised, count: 1, files: 1,"
  - "text: custompgpass, count: 4, files: 1,"
  - "text: custompk, count: 1, files: 1,"
  - "text: custompktag, count: 2, files: 1,"
  - "text: customqs, count: 1, files: 1,"
  - "text: customurlconf, count: 8, files: 2,"
  - "text: cyclicone, count: 2, files: 1,"
  - "text: cyclictwo, count: 1, files: 1,"
  - "text: Cymraeg, count: 1, files: 1,"
  - "text: cytkownika, count: 1, files: 1,"
  - "text: ćžšđ, count: 2, files: 2,"
  - "text: Đabc, count: 2, files: 2,"
  - "text: dalnet, count: 3, files: 1,"
  - "text: dansk, count: 1, files: 1,"
  - "text: DATAFILES, count: 2, files: 1,"
  - "text: datalist, count: 2, files: 1,"
  - "text: datastructure, count: 1, files: 1,"
  - "text: datatuple, count: 3, files: 1,"
  - "text: datefieldlistfilter, count: 3, files: 1,"
  - "text: datelazy, count: 2, files: 1,"
  - "text: daterange, count: 3, files: 2,"
  - "text: datestamp, count: 1, files: 1,"
  - "text: datetim, count: 3, files: 1,"
  - "text: datetimefields, count: 1, files: 1,"
  - "text: datetimeobject, count: 2, files: 1,"
  - "text: datetimeshortcuts, count: 1, files: 1,"
  - "text: datname, count: 1, files: 1,"
  - "text: Dawful, count: 1, files: 1,"
  - "text: Dayley, count: 10, files: 3,"
  - "text: DAYOFWEEK, count: 2, files: 1,"
  - "text: dbcomment, count: 1, files: 1,"
  - "text: dbcommentmodel, count: 1, files: 1,"
  - "text: dbop, count: 3, files: 1,"
  - "text: debe, count: 2, files: 1,"
  - "text: debitis, count: 1, files: 1,"
  - "text: Decemberists, count: 5, files: 1,"
  - "text: DECLTYPES, count: 1, files: 1,"
  - "text: decompiler, count: 1, files: 1,"
  - "text: Deconstructable, count: 5, files: 1,"
  - "text: dedup, count: 1, files: 1,"
  - "text: deepcopied, count: 1, files: 1,"
  - "text: deepcopies, count: 2, files: 2,"
  - "text: defered, count: 2, files: 1,"
  - "text: deferreds, count: 1, files: 1,"
  - "text: defg, count: 3, files: 1,"
  - "text: deflaut, count: 2, files: 1,"
  - "text: defn, count: 10, files: 4,"
  - "text: Defn, count: 3, files: 1,"
  - "text: defualt, count: 2, files: 1,"
  - "text: delectus, count: 1, files: 1,"
  - "text: deleniti, count: 1, files: 1,"
  - "text: deleteconfirmation, count: 1, files: 1,"
  - "text: delfcn, count: 4, files: 1,"
  - "text: delslice, count: 2, files: 2,"
  - "text: depraction, count: 2, files: 1,"
  - "text: deprecatedoptiondbname, count: 1, files: 1,"
  - "text: deprecatedoptionpassword, count: 1, files: 1,"
  - "text: depts, count: 2, files: 1,"
  - "text: derivedm, count: 5, files: 1,"
  - "text: derivedms, count: 2, files: 1,"
  - "text: descr, count: 3, files: 1,"
  - "text: describedby, count: 15, files: 6,"
  - "text: descript, count: 1, files: 1,"
  - "text: desembre, count: 5, files: 1,"
  - "text: deserial, count: 7, files: 2,"
  - "text: deserunt, count: 3, files: 2,"
  - "text: Deutsch, count: 5, files: 3,"
  - "text: Deutsches, count: 1, files: 1,"
  - "text: deutsh, count: 1, files: 1,"
  - "text: devrait, count: 2, files: 1,"
  - "text: Dezember, count: 1, files: 1,"
  - "text: dfloat, count: 1, files: 1,"
  - "text: Dgxc, count: 1, files: 1,"
  - "text: DHDN, count: 3, files: 1,"
  - "text: días, count: 5, files: 2,"
  - "text: diciembre, count: 1, files: 1,"
  - "text: dictitem, count: 2, files: 1,"
  - "text: dictlist, count: 2, files: 1,"
  - "text: dictvalue, count: 3, files: 1,"
  - "text: dictwrapper, count: 1, files: 1,"
  - "text: digestmod, count: 1, files: 1,"
  - "text: digitsincolumnname, count: 1, files: 1,"
  - "text: dignissimos, count: 1, files: 1,"
  - "text: Diipadaapa, count: 2, files: 1,"
  - "text: Dimanche, count: 1, files: 1,"
  - "text: diminfo, count: 1, files: 1,"
  - "text: DIMINFO, count: 2, files: 2,"
  - "text: dipad, count: 1, files: 1,"
  - "text: dirait, count: 2, files: 1,"
  - "text: directoy, count: 1, files: 1,"
  - "text: dirn, count: 3, files: 1,"
  - "text: discoth, count: 1, files: 1,"
  - "text: Discoth, count: 1, files: 1,"
  - "text: disponible, count: 2, files: 1,"
  - "text: distinctio, count: 1, files: 1,"
  - "text: djadmin, count: 1, files: 1,"
  - "text: Djanaev, count: 1, files: 1,"
  - "text: djángö, count: 1, files: 1,"
  - "text: Ðjáñgó, count: 2, files: 2,"
  - "text: Djangodoc, count: 1, files: 1,"
  - "text: djangodocs, count: 3, files: 1,"
  - "text: djangoforms, count: 1, files: 1,"
  - "text: djangohtml, count: 5, files: 1,"
  - "text: djangojs, count: 16, files: 6,"
  - "text: Djangoland, count: 2, files: 1,"
  - "text: djangonaut, count: 7, files: 2,"
  - "text: Djangonaut, count: 3, files: 1,"
  - "text: djangoproject, count: 12, files: 6,"
  - "text: DJANGOPROJECT, count: 1, files: 1,"
  - "text: djangoprojects, count: 1, files: 1,"
  - "text: DJANGOS, count: 6, files: 4,"
  - "text: djangosession, count: 2, files: 1,"
  - "text: djangospam, count: 1, files: 1,"
  - "text: DJANGOTEST, count: 2, files: 1,"
  - "text: djcache, count: 1, files: 1,"
  - "text: djtpl, count: 2, files: 1,"
  - "text: dklen, count: 10, files: 3,"
  - "text: dlen, count: 3, files: 1,"
  - "text: dligsw, count: 5, files: 1,"
  - "text: dlmo, count: 5, files: 1,"
  - "text: dlmtimo, count: 5, files: 1,"
  - "text: dlprmo, count: 5, files: 1,"
  - "text: dnem, count: 1, files: 1,"
  - "text: docname, count: 1, files: 1,"
  - "text: docstrings, count: 2, files: 2,"
  - "text: doctests, count: 3, files: 2,"
  - "text: doctitle, count: 1, files: 1,"
  - "text: doctree, count: 3, files: 2,"
  - "text: Dodaj, count: 1, files: 1,"
  - "text: doesn, count: 1, files: 1,"
  - "text: doesnothing, count: 1, files: 1,"
  - "text: doesnt, count: 38, files: 27,"
  - "text: doesntexist, count: 4, files: 2,"
  - "text: dolnoserbski, count: 1, files: 1,"
  - "text: dolore, count: 10, files: 5,"
  - "text: dolorem, count: 1, files: 1,"
  - "text: doloremque, count: 1, files: 1,"
  - "text: doloribus, count: 1, files: 1,"
  - "text: dolorum, count: 1, files: 1,"
  - "text: domaindata, count: 1, files: 1,"
  - "text: domainless, count: 1, files: 1,"
  - "text: doscon, count: 2, files: 1,"
  - "text: doseq, count: 13, files: 4,"
  - "text: Drepper, count: 1, files: 1,"
  - "text: Dromaius, count: 1, files: 1,"
  - "text: Drosophilidae, count: 4, files: 1,"
  - "text: dtdelta, count: 7, files: 3,"
  - "text: dtob, count: 5, files: 1,"
  - "text: dtup, count: 3, files: 1,"
  - "text: ducimus, count: 1, files: 1,"
  - "text: ducktyping, count: 3, files: 2,"
  - "text: Duis, count: 2, files: 2,"
  - "text: dumbcategory, count: 1, files: 1,"
  - "text: dummynode, count: 1, files: 1,"
  - "text: dunder, count: 13, files: 5,"
  - "text: dunkin, count: 1, files: 1,"
  - "text: dups, count: 2, files: 1,"
  - "text: durationmodel, count: 1, files: 1,"
  - "text: Dydd, count: 1, files: 1,"
  - "text: dynclass, count: 3, files: 1,"
  - "text: EADDRINUSE, count: 2, files: 2,"
  - "text: EADDRNOTAVAIL, count: 1, files: 1,"
  - "text: Eand, count: 2, files: 2,"
  - "text: eaque, count: 1, files: 1,"
  - "text: earted, count: 1, files: 1,"
  - "text: earum, count: 1, files: 1,"
  - "text: Edel, count: 1, files: 1,"
  - "text: edgecases, count: 1, files: 1,"
  - "text: editablepkbook, count: 4, files: 1,"
  - "text: eene, count: 1, files: 1,"
  - "text: éèøç, count: 2, files: 1,"
  - "text: Eescaping, count: 1, files: 1,"
  - "text: eesti, count: 1, files: 1,"
  - "text: efgh, count: 1, files: 1,"
  - "text: efield, count: 3, files: 2,"
  - "text: efnet, count: 2, files: 1,"
  - "text: Egan, count: 1, files: 1,"
  - "text: eggcommand, count: 1, files: 1,"
  - "text: einfach, count: 2, files: 1,"
  - "text: EISDIR, count: 1, files: 1,"
  - "text: eius, count: 1, files: 1,"
  - "text: eiusmod, count: 8, files: 5,"
  - "text: eivatel, count: 1, files: 1,"
  - "text: Ekim, count: 1, files: 1,"
  - "text: Elemente, count: 1, files: 1,"
  - "text: Élena, count: 10, files: 9,"
  - "text: elidable, count: 18, files: 4,"
  - "text: eligendi, count: 1, files: 1,"
  - "text: elit, count: 8, files: 5,"
  - "text: Elle, count: 2, files: 1,"
  - "text: ellps, count: 9, files: 4,"
  - "text: employeeinfo, count: 2, files: 1,"
  - "text: emps, count: 2, files: 1,"
  - "text: EMPT, count: 1, files: 1,"
  - "text: emptymodel, count: 2, files: 1,"
  - "text: emptymodelhidden, count: 1, files: 1,"
  - "text: emptymodelmixin, count: 1, files: 1,"
  - "text: emptymodelvisible, count: 1, files: 1,"
  - "text: emptypoints, count: 1, files: 1,"
  - "text: emptyqs, count: 5, files: 1,"
  - "text: emptyqueryset, count: 1, files: 1,"
  - "text: enctype, count: 3, files: 1,"
  - "text: ENCTYPE, count: 3, files: 1,"
  - "text: endbadtag, count: 1, files: 1,"
  - "text: endbmatch, count: 2, files: 1,"
  - "text: endtag, count: 3, files: 1,"
  - "text: enim, count: 3, files: 2,"
  - "text: enoent, count: 1, files: 1,"
  - "text: ENOENT, count: 2, files: 1,"
  - "text: ENOTDIR, count: 3, files: 1,"
  - "text: ensuremath, count: 5, files: 1,"
  - "text: Entfernen, count: 1, files: 1,"
  - "text: enumfield, count: 1, files: 1,"
  - "text: eprec, count: 3, files: 1,"
  - "text: equalsexact, count: 3, files: 3,"
  - "text: equalsidentical, count: 3, files: 3,"
  - "text: ERACA, count: 1, files: 1,"
  - "text: Ergebnis, count: 3, files: 1,"
  - "text: Ergebnisse, count: 3, files: 1,"
  - "text: Erreur, count: 1, files: 1,"
  - "text: Erro, count: 1, files: 1,"
  - "text: ERRORFUNC, count: 2, files: 1,"
  - "text: escapeme, count: 1, files: 1,"
  - "text: escapeseq, count: 6, files: 2,"
  - "text: Escapeseq, count: 1, files: 1,"
  - "text: España, count: 5, files: 1,"
  - "text: espécimen, count: 2, files: 1,"
  - "text: esta, count: 1, files: 1,"
  - "text: está, count: 2, files: 1,"
  - "text: esto, count: 3, files: 1,"
  - "text: Etest, count: 2, files: 1,"
  - "text: Ethis, count: 1, files: 1,"
  - "text: être, count: 3, files: 2,"
  - "text: eucity, count: 4, files: 1,"
  - "text: eucountry, count: 5, files: 1,"
  - "text: Eukaryota, count: 5, files: 1,"
  - "text: eveniet, count: 1, files: 1,"
  - "text: EWKBHEX, count: 1, files: 1,"
  - "text: Examp, count: 1, files: 1,"
  - "text: exampl, count: 2, files: 1,"
  - "text: éxample, count: 3, files: 1,"
  - "text: examplemodela, count: 2, files: 1,"
  - "text: examplemodelb, count: 5, files: 1,"
  - "text: exceedes, count: 2, files: 2,"
  - "text: Excepteur, count: 2, files: 2,"
  - "text: exceptionsm, count: 1, files: 1,"
  - "text: excepturi, count: 1, files: 1,"
  - "text: executemany, count: 24, files: 8,"
  - "text: exercitationem, count: 6, files: 2,"
  - "text: Exercitationem, count: 5, files: 1,"
  - "text: existant, count: 1, files: 1,"
  - "text: expedita, count: 1, files: 1,"
  - "text: explicabo, count: 1, files: 1,"
  - "text: explicitlyprovidedpk, count: 2, files: 1,"
  - "text: explicitpk, count: 2, files: 1,"
  - "text: exprdef, count: 3, files: 1,"
  - "text: extention, count: 1, files: 1,"
  - "text: extlang, count: 1, files: 1,"
  - "text: extlinks, count: 2, files: 1,"
  - "text: extname, count: 2, files: 2,"
  - "text: extrabody, count: 2, files: 1,"
  - "text: extraf, count: 1, files: 1,"
  - "text: extring, count: 3, files: 3,"
  - "text: EXXX, count: 2, files: 2,"
  - "text: ǝnlɐʌ, count: 1, files: 1,"
  - "text: Fabaceae, count: 4, files: 1,"
  - "text: Fabales, count: 2, files: 1,"
  - "text: facere, count: 1, files: 1,"
  - "text: facilis, count: 1, files: 1,"
  - "text: fakedate, count: 2, files: 1,"
  - "text: faketoken, count: 5, files: 1,"
  - "text: fakeuser, count: 1, files: 1,"
  - "text: falsey, count: 2, files: 2,"
  - "text: Falsey, count: 1, files: 1,"
  - "text: famiglia, count: 7, files: 2,"
  - "text: Famiglia, count: 6, files: 2,"
  - "text: fancydoodad, count: 5, files: 1,"
  - "text: Fashonista, count: 2, files: 1,"
  - "text: fattie, count: 3, files: 1,"
  - "text: Fawful, count: 1, files: 1,"
  - "text: Fbar, count: 1, files: 1,"
  - "text: Fchars, count: 2, files: 2,"
  - "text: febrer, count: 1, files: 1,"
  - "text: februari, count: 1, files: 1,"
  - "text: feedgen, count: 4, files: 1,"
  - "text: feedurl, count: 2, files: 2,"
  - "text: feee, count: 5, files: 1,"
  - "text: Feignberg, count: 1, files: 1,"
  - "text: feliz, count: 2, files: 1,"
  - "text: Feliz, count: 1, files: 1,"
  - "text: Fergie, count: 5, files: 1,"
  - "text: Fernet, count: 4, files: 1,"
  - "text: Fevil, count: 2, files: 1,"
  - "text: Fexample, count: 2, files: 2,"
  - "text: fexpr, count: 3, files: 2,"
  - "text: fexpression, count: 1, files: 1,"
  - "text: fext, count: 3, files: 1,"
  - "text: fghijk, count: 1, files: 1,"
  - "text: Fhistory, count: 1, files: 1,"
  - "text: fieldlistfilter, count: 3, files: 1,"
  - "text: fieldlookup, count: 1, files: 1,"
  - "text: fieldoverridepost, count: 1, files: 1,"
  - "text: fieldpath, count: 2, files: 1,"
  - "text: Fifi, count: 5, files: 1,"
  - "text: filebasedcache, count: 1, files: 1,"
  - "text: filecontent, count: 2, files: 1,"
  - "text: filedescriptor, count: 1, files: 1,"
  - "text: filenotfound, count: 1, files: 1,"
  - "text: fileupload, count: 1, files: 1,"
  - "text: fileuploads, count: 1, files: 1,"
  - "text: Fillory, count: 2, files: 1,"
  - "text: fillvalue, count: 1, files: 1,"
  - "text: filteredmanager, count: 3, files: 1,"
  - "text: filtertag, count: 3, files: 1,"
  - "text: finalizer, count: 3, files: 1,"
  - "text: Findex, count: 2, files: 1,"
  - "text: Finlayson, count: 5, files: 1,"
  - "text: firstline, count: 2, files: 1,"
  - "text: firstlineno, count: 2, files: 2,"
  - "text: firstparams, count: 2, files: 1,"
  - "text: fixedoffset, count: 2, files: 1,"
  - "text: Fixure, count: 1, files: 1,"
  - "text: flaskdj, count: 1, files: 1,"
  - "text: flatatt, count: 8, files: 3,"
  - "text: flatpagecaf, count: 1, files: 1,"
  - "text: flds, count: 2, files: 1,"
  - "text: Fleurs, count: 5, files: 1,"
  - "text: floatf, count: 1, files: 1,"
  - "text: fmatch, count: 2, files: 1,"
  - "text: fobj, count: 1, files: 1,"
  - "text: followlinks, count: 1, files: 1,"
  - "text: fontpkg, count: 1, files: 1,"
  - "text: föobár, count: 1, files: 1,"
  - "text: foobarbaz, count: 5, files: 1,"
  - "text: foobaz, count: 5, files: 1,"
  - "text: fooddelivery, count: 3, files: 1,"
  - "text: foodnodefaultmanager, count: 1, files: 1,"
  - "text: foodnomanagers, count: 1, files: 1,"
  - "text: foodorderedmanagers, count: 1, files: 1,"
  - "text: foof, count: 3, files: 2,"
  - "text: foogroup, count: 2, files: 1,"
  - "text: fooo, count: 5, files: 1,"
  - "text: foos, count: 5, files: 1,"
  - "text: Foos, count: 1, files: 1,"
  - "text: Foozes, count: 2, files: 1,"
  - "text: Forcier, count: 10, files: 3,"
  - "text: fordømt, count: 2, files: 1,"
  - "text: foreignkeytofield, count: 1, files: 1,"
  - "text: foreignobject, count: 4, files: 4,"
  - "text: foreignobjectrel, count: 1, files: 1,"
  - "text: formatchars, count: 2, files: 1,"
  - "text: formatstr, count: 2, files: 1,"
  - "text: formnovalidate, count: 1, files: 1,"
  - "text: forney, count: 2, files: 1,"
  - "text: Forney, count: 2, files: 1,"
  - "text: foruser, count: 1, files: 1,"
  - "text: forwardslash, count: 1, files: 1,"
  - "text: FQVXI, count: 1, files: 1,"
  - "text: francouzsky, count: 2, files: 2,"
  - "text: freddled, count: 1, files: 1,"
  - "text: frida, count: 1, files: 1,"
  - "text: Frida, count: 1, files: 1,"
  - "text: friendlyauthor, count: 1, files: 1,"
  - "text: Frob, count: 4, files: 1,"
  - "text: frombuffer, count: 1, files: 1,"
  - "text: frozensets, count: 1, files: 1,"
  - "text: frustrerende, count: 2, files: 1,"
  - "text: frysk, count: 1, files: 1,"
  - "text: fsad, count: 1, files: 1,"
  - "text: Fslash, count: 1, files: 1,"
  - "text: fspath, count: 1, files: 1,"
  - "text: fuga, count: 1, files: 1,"
  - "text: fugiat, count: 3, files: 2,"
  - "text: fullstop, count: 2, files: 1,"
  - "text: Funcs, count: 1, files: 1,"
  - "text: funcuniqueconstraint, count: 1, files: 1,"
  - "text: Funcuniqueconstraint, count: 1, files: 1,"
  - "text: funkytag, count: 3, files: 1,"
  - "text: funperson, count: 3, files: 1,"
  - "text: futuredates, count: 1, files: 1,"
  - "text: gabbleblotchits, count: 1, files: 1,"
  - "text: Gaeilge, count: 1, files: 1,"
  - "text: gagne, count: 2, files: 1,"
  - "text: Gàidhlig, count: 1, files: 1,"
  - "text: galego, count: 1, files: 1,"
  - "text: garbaged, count: 1, files: 1,"
  - "text: gdalinfo, count: 1, files: 1,"
  - "text: gebruikers, count: 5, files: 1,"
  - "text: Geef, count: 1, files: 1,"
  - "text: gefunden, count: 6, files: 2,"
  - "text: GEFUNDEN, count: 2, files: 1,"
  - "text: geldige, count: 2, files: 1,"
  - "text: GENDELIMS, count: 3, files: 2,"
  - "text: gener, count: 1, files: 1,"
  - "text: gensalt, count: 1, files: 1,"
  - "text: geoagg, count: 1, files: 1,"
  - "text: geodjango, count: 1, files: 1,"
  - "text: Geodjango, count: 2, files: 1,"
  - "text: geofeed, count: 3, files: 1,"
  - "text: Geoff, count: 1, files: 1,"
  - "text: geofields, count: 1, files: 1,"
  - "text: geogapp, count: 4, files: 3,"
  - "text: GEOGCS, count: 15, files: 4,"
  - "text: geolib, count: 1, files: 1,"
  - "text: geomerrcheck, count: 2, files: 1,"
  - "text: geomgen, count: 5, files: 1,"
  - "text: geomn, count: 3, files: 3,"
  - "text: Geomtry, count: 1, files: 1,"
  - "text: georss, count: 11, files: 3,"
  - "text: georsss, count: 1, files: 1,"
  - "text: GEOSIO, count: 1, files: 1,"
  - "text: geositemap, count: 1, files: 1,"
  - "text: geospatial, count: 1, files: 1,"
  - "text: Geospatial, count: 1, files: 1,"
  - "text: GEOSWKB, count: 5, files: 1,"
  - "text: GEOSWKT, count: 5, files: 1,"
  - "text: geotransforms, count: 3, files: 2,"
  - "text: getbuffer, count: 2, files: 1,"
  - "text: getconn, count: 1, files: 1,"
  - "text: getcontext, count: 3, files: 2,"
  - "text: getdefaultencoding, count: 1, files: 1,"
  - "text: getdims, count: 3, files: 3,"
  - "text: getfcn, count: 2, files: 1,"
  - "text: gethostname, count: 2, files: 2,"
  - "text: getm, count: 3, files: 2,"
  - "text: GETNUMELEM, count: 1, files: 1,"
  - "text: GETNUMVERTICES, count: 1, files: 1,"
  - "text: getordinate, count: 3, files: 3,"
  - "text: getpid, count: 1, files: 1,"
  - "text: getpos, count: 3, files: 1,"
  - "text: getsizeof, count: 1, files: 1,"
  - "text: getslice, count: 1, files: 1,"
  - "text: gfks, count: 3, files: 1,"
  - "text: Ghoraguli, count: 2, files: 1,"
  - "text: gibbberish, count: 1, files: 1,"
  - "text: gibt, count: 3, files: 1,"
  - "text: Giordanos, count: 5, files: 1,"
  - "text: giptm, count: 5, files: 1,"
  - "text: Gladwell, count: 2, files: 1,"
  - "text: globalpath, count: 2, files: 1,"
  - "text: GMLGEOMETRY, count: 1, files: 1,"
  - "text: gnirts, count: 3, files: 1,"
  - "text: gobberwarts, count: 1, files: 1,"
  - "text: gptr, count: 2, files: 1,"
  - "text: Grappeli, count: 1, files: 1,"
  - "text: Grappelli, count: 5, files: 1,"
  - "text: Greatel, count: 1, files: 1,"
  - "text: greaterthan, count: 1, files: 1,"
  - "text: Größe, count: 1, files: 1,"
  - "text: gruntbuggly, count: 1, files: 1,"
  - "text: gtvalues, count: 1, files: 1,"
  - "text: Gumble, count: 1, files: 1,"
  - "text: Gumby, count: 2, files: 1,"
  - "text: Günter, count: 3, files: 1,"
  - "text: GURL, count: 2, files: 1,"
  - "text: guten, count: 5, files: 1,"
  - "text: gutes, count: 5, files: 1,"
  - "text: gvlqs, count: 2, files: 1,"
  - "text: gvqs, count: 2, files: 1,"
  - "text: Gżegżółka, count: 1, files: 1,"
  - "text: gzipping, count: 1, files: 1,"
  - "text: hablas, count: 2, files: 1,"
  - "text: HAEN, count: 1, files: 1,"
  - "text: haha, count: 2, files: 1,"
  - "text: Halen, count: 5, files: 1,"
  - "text: Halvorson, count: 1, files: 1,"
  - "text: hani, count: 3, files: 1,"
  - "text: Hanji, count: 1, files: 1,"
  - "text: Hara, count: 4, files: 1,"
  - "text: hardbackbook, count: 2, files: 1,"
  - "text: harum, count: 1, files: 1,"
  - "text: hashpw, count: 1, files: 1,"
  - "text: Hauptdreiecksnetz, count: 1, files: 1,"
  - "text: hcomb, count: 2, files: 1,"
  - "text: hcombpk, count: 2, files: 1,"
  - "text: heartsuit, count: 1, files: 1,"
  - "text: Heimes, count: 1, files: 1,"
  - "text: héllo, count: 3, files: 1,"
  - "text: Héllo, count: 3, files: 2,"
  - "text: Héllos, count: 1, files: 1,"
  - "text: herbie, count: 3, files: 1,"
  - "text: heure, count: 5, files: 3,"
  - "text: hexdig, count: 3, files: 1,"
  - "text: hexlified, count: 1, files: 1,"
  - "text: hexlify, count: 2, files: 1,"
  - "text: hextets, count: 1, files: 1,"
  - "text: hidelink, count: 1, files: 1,"
  - "text: hillsdale, count: 5, files: 1,"
  - "text: Hillsdale, count: 2, files: 1,"
  - "text: hinzuf, count: 1, files: 1,"
  - "text: Historique, count: 1, files: 1,"
  - "text: historylink, count: 2, files: 1,"
  - "text: hodor, count: 3, files: 1,"
  - "text: hogward, count: 3, files: 1,"
  - "text: Holovaty, count: 17, files: 5,"
  - "text: Homobasidiomycatae, count: 1, files: 1,"
  - "text: hornjoserbsce, count: 1, files: 1,"
  - "text: horserider, count: 5, files: 1,"
  - "text: hostnames, count: 1, files: 1,"
  - "text: hotelreservation, count: 2, files: 1,"
  - "text: hott, count: 3, files: 1,"
  - "text: howto, count: 1, files: 1,"
  - "text: Hrvatski, count: 1, files: 1,"
  - "text: hstoremodel, count: 1, files: 1,"
  - "text: htim, count: 1, files: 1,"
  - "text: htmlhelp, count: 1, files: 1,"
  - "text: htown, count: 7, files: 2,"
  - "text: Hydref, count: 4, files: 1,"
  - "text: hzip, count: 2, files: 1,"
  - "text: iacute, count: 3, files: 2,"
  - "text: Iamastream, count: 2, files: 1,"
  - "text: iamthe, count: 6, files: 3,"
  - "text: icity, count: 3, files: 1,"
  - "text: idan, count: 1, files: 1,"
  - "text: idanalexjacob, count: 1, files: 1,"
  - "text: iefix, count: 4, files: 2,"
  - "text: Ìgbò, count: 1, files: 1,"
  - "text: igfc, count: 3, files: 1,"
  - "text: igfcor, count: 1, files: 1,"
  - "text: igfpc, count: 1, files: 1,"
  - "text: iivanov, count: 3, files: 1,"
  - "text: ijkl, count: 1, files: 1,"
  - "text: ikke, count: 3, files: 1,"
  - "text: Ikke, count: 2, files: 1,"
  - "text: illo, count: 1, files: 1,"
  - "text: illum, count: 1, files: 1,"
  - "text: iloveevenmoreponies, count: 4, files: 1,"
  - "text: ilovemoreponies, count: 3, files: 1,"
  - "text: iloveponies, count: 3, files: 1,"
  - "text: iloveponiesonies, count: 1, files: 1,"
  - "text: Imhlb, count: 4, files: 1,"
  - "text: impedit, count: 1, files: 1,"
  - "text: implicitlygeneratedpk, count: 2, files: 1,"
  - "text: improvedbook, count: 3, files: 1,"
  - "text: incididunt, count: 8, files: 5,"
  - "text: incidunt, count: 1, files: 1,"
  - "text: includehidden, count: 1, files: 1,"
  - "text: incomment, count: 4, files: 1,"
  - "text: incrementation, count: 1, files: 1,"
  - "text: indclass, count: 5, files: 5,"
  - "text: indentity, count: 2, files: 1,"
  - "text: indexdef, count: 1, files: 1,"
  - "text: indexfcn, count: 2, files: 1,"
  - "text: indexprs, count: 1, files: 1,"
  - "text: INDEXTYPE, count: 1, files: 1,"
  - "text: indisprimary, count: 2, files: 1,"
  - "text: indisunique, count: 2, files: 1,"
  - "text: indkey, count: 1, files: 1,"
  - "text: indoption, count: 1, files: 1,"
  - "text: indrelid, count: 1, files: 1,"
  - "text: INETARRAY, count: 5, files: 1,"
  - "text: informations, count: 1, files: 1,"
  - "text: initargs, count: 6, files: 2,"
  - "text: initlist, count: 2, files: 1,"
  - "text: inlinechangelink, count: 1, files: 1,"
  - "text: inlineformsets, count: 1, files: 1,"
  - "text: inmonth, count: 5, files: 1,"
  - "text: innerq, count: 5, files: 1,"
  - "text: innhold, count: 1, files: 1,"
  - "text: inplural, count: 5, files: 1,"
  - "text: inpt, count: 5, files: 1,"
  - "text: Insecta, count: 1, files: 1,"
  - "text: inspectapp, count: 2, files: 1,"
  - "text: inspectdbmessage, count: 1, files: 1,"
  - "text: integerarraydefaultmodel, count: 2, files: 2,"
  - "text: integerarraymodel, count: 1, files: 1,"
  - "text: INTEGERPK, count: 3, files: 2,"
  - "text: interepreted, count: 1, files: 1,"
  - "text: Iñtërnâtiônàlizætiøn, count: 10, files: 4,"
  - "text: Interp, count: 1, files: 1,"
  - "text: interprété, count: 2, files: 1,"
  - "text: intersphinx, count: 3, files: 1,"
  - "text: interstateproj, count: 2, files: 1,"
  - "text: intput, count: 1, files: 1,"
  - "text: intring, count: 3, files: 3,"
  - "text: INVALD, count: 1, files: 1,"
  - "text: INVALI, count: 1, files: 1,"
  - "text: invalidint, count: 4, files: 2,"
  - "text: invalidstr, count: 5, files: 1,"
  - "text: inventore, count: 1, files: 1,"
  - "text: invflattening, count: 2, files: 2,"
  - "text: ipsa, count: 1, files: 1,"
  - "text: ipsam, count: 1, files: 1,"
  - "text: irure, count: 2, files: 2,"
  - "text: isactive, count: 1, files: 1,"
  - "text: isactually, count: 2, files: 1,"
  - "text: isgeographic, count: 2, files: 2,"
  - "text: Íslenska, count: 1, files: 1,"
  - "text: islocal, count: 2, files: 2,"
  - "text: isnt, count: 2, files: 2,"
  - "text: ISODOW, count: 1, files: 1,"
  - "text: isoyear, count: 3, files: 1,"
  - "text: ISOYEAR, count: 1, files: 1,"
  - "text: ispkg, count: 2, files: 1,"
  - "text: isprojected, count: 2, files: 2,"
  - "text: ISQL, count: 2, files: 1,"
  - "text: isring, count: 3, files: 3,"
  - "text: issimple, count: 3, files: 3,"
  - "text: İstanbul, count: 1, files: 1,"
  - "text: iste, count: 1, files: 1,"
  - "text: isvalidreason, count: 3, files: 2,"
  - "text: italiano, count: 4, files: 3,"
  - "text: italianrestaurant, count: 8, files: 2,"
  - "text: italsky, count: 2, files: 2,"
  - "text: itaque, count: 1, files: 1,"
  - "text: itemscope, count: 1, files: 1,"
  - "text: itercompat, count: 3, files: 2,"
  - "text: iure, count: 1, files: 1,"
  - "text: iusto, count: 1, files: 1,"
  - "text: ivanov, count: 1, files: 1,"
  - "text: Ivanov, count: 4, files: 1,"
  - "text: IYYY, count: 1, files: 1,"
  - "text: ıçğü, count: 2, files: 1,"
  - "text: ıçğüş, count: 2, files: 1,"
  - "text: ıçüş, count: 2, files: 1,"
  - "text: ıxample, count: 4, files: 1,"
  - "text: J'attendrai, count: 1, files: 1,"
  - "text: jackstaff, count: 3, files: 1,"
  - "text: januari, count: 6, files: 2,"
  - "text: janvier, count: 3, files: 2,"
  - "text: Jayden, count: 3, files: 1,"
  - "text: jaźń, count: 3, files: 2,"
  - "text: jcccccccss, count: 1, files: 1,"
  - "text: Jenson, count: 5, files: 1,"
  - "text: jillstaff, count: 3, files: 1,"
  - "text: johndoe, count: 1, files: 1,"
  - "text: Johnxx, count: 1, files: 1,"
  - "text: Johnxyx, count: 1, files: 1,"
  - "text: Johx, count: 1, files: 1,"
  - "text: jointe, count: 2, files: 1,"
  - "text: jondoe, count: 3, files: 2,"
  - "text: Jonno's, count: 12, files: 3,"
  - "text: Jonny, count: 4, files: 2,"
  - "text: jörg, count: 1, files: 1,"
  - "text: jours, count: 1, files: 1,"
  - "text: jsmith, count: 7, files: 2,"
  - "text: jsonfieldcolumntype, count: 1, files: 1,"
  - "text: jsoni, count: 5, files: 2,"
  - "text: JSONI, count: 2, files: 1,"
  - "text: jsonmodel, count: 1, files: 1,"
  - "text: jsons, count: 2, files: 2,"
  - "text: juli, count: 1, files: 1,"
  - "text: juliol, count: 1, files: 1,"
  - "text: juni, count: 1, files: 1,"
  - "text: juny, count: 1, files: 1,"
  - "text: Jürgen, count: 1, files: 1,"
  - "text: jurtles, count: 1, files: 1,"
  - "text: justtheyear, count: 2, files: 1,"
  - "text: Käfer, count: 1, files: 1,"
  - "text: Kahlo, count: 1, files: 1,"
  - "text: Kann, count: 9, files: 4,"
  - "text: Kaplan, count: 11, files: 3,"
  - "text: Karamea, count: 2, files: 1,"
  - "text: Karnataka, count: 1, files: 1,"
  - "text: Kass, count: 1, files: 1,"
  - "text: Kaufmann, count: 14, files: 3,"
  - "text: kccccccc, count: 1, files: 1,"
  - "text: Kecksburg, count: 3, files: 1,"
  - "text: keebler, count: 4, files: 1,"
  - "text: keepdb, count: 56, files: 12,"
  - "text: keepends, count: 1, files: 1,"
  - "text: Kilbraken, count: 4, files: 1,"
  - "text: kilometre, count: 1, files: 1,"
  - "text: Kiswahili, count: 1, files: 1,"
  - "text: Kjærlighet, count: 5, files: 1,"
  - "text: kjærligheten, count: 2, files: 1,"
  - "text: kjihgf, count: 1, files: 1,"
  - "text: klass, count: 91, files: 25,"
  - "text: Klass, count: 8, files: 3,"
  - "text: Klazz, count: 5, files: 1,"
  - "text: Ǩlâzz, count: 2, files: 1,"
  - "text: klone, count: 5, files: 2,"
  - "text: Kocherhans, count: 1, files: 1,"
  - "text: Kommentare, count: 3, files: 1,"
  - "text: krit, count: 6, files: 4,"
  - "text: kwonly, count: 9, files: 2,"
  - "text: labelable, count: 1, files: 1,"
  - "text: labelledby, count: 5, files: 2,"
  - "text: labore, count: 8, files: 5,"
  - "text: laboriosam, count: 1, files: 1,"
  - "text: laboris, count: 2, files: 2,"
  - "text: laborum, count: 3, files: 2,"
  - "text: Ladida, count: 5, files: 1,"
  - "text: Ladidu, count: 3, files: 1,"
  - "text: lærdommer, count: 1, files: 1,"
  - "text: Lærdommer, count: 2, files: 1,"
  - "text: lalalala, count: 1, files: 1,"
  - "text: lalalalala, count: 1, files: 1,"
  - "text: Lalalalala, count: 1, files: 1,"
  - "text: LALIAS, count: 5, files: 1,"
  - "text: Lanczos, count: 1, files: 1,"
  - "text: langcode, count: 5, files: 1,"
  - "text: Langschoß, count: 4, files: 1,"
  - "text: largefile, count: 3, files: 1,"
  - "text: largevalue, count: 1, files: 1,"
  - "text: łąść, count: 1, files: 1,"
  - "text: lastdigit, count: 2, files: 1,"
  - "text: lastframe, count: 1, files: 1,"
  - "text: lasti, count: 1, files: 1,"
  - "text: lastrowid, count: 1, files: 1,"
  - "text: latinica, count: 1, files: 1,"
  - "text: latviešu, count: 1, files: 1,"
  - "text: laudantium, count: 1, files: 1,"
  - "text: lazya, count: 2, files: 1,"
  - "text: lazyb, count: 4, files: 1,"
  - "text: lazyc, count: 2, files: 1,"
  - "text: lazyobject, count: 2, files: 1,"
  - "text: lazysettings, count: 2, files: 1,"
  - "text: lazystring, count: 1, files: 1,"
  - "text: lccccccc, count: 1, files: 1,"
  - "text: ldir, count: 2, files: 1,"
  - "text: leadpath, count: 1, files: 1,"
  - "text: legacyi, count: 5, files: 1,"
  - "text: legacywith, count: 5, files: 1,"
  - "text: Leib, count: 6, files: 3,"
  - "text: leitung, count: 1, files: 1,"
  - "text: lengtp, count: 2, files: 1,"
  - "text: lessthan, count: 1, files: 1,"
  - "text: letmein, count: 5, files: 1,"
  - "text: lètmein, count: 5, files: 1,"
  - "text: lètmeinz, count: 5, files: 1,"
  - "text: lety, count: 1, files: 1,"
  - "text: Lëtzebuergesch, count: 1, files: 1,"
  - "text: levelname, count: 4, files: 3,"
  - "text: lgdal, count: 19, files: 5,"
  - "text: lgeos, count: 9, files: 2,"
  - "text: libc, count: 3, files: 1,"
  - "text: Liberchies, count: 1, files: 1,"
  - "text: libgdal, count: 6, files: 6,"
  - "text: libgeos, count: 20, files: 17,"
  - "text: libmemcached, count: 2, files: 2,"
  - "text: libspatialite, count: 1, files: 1,"
  - "text: lidende, count: 2, files: 1,"
  - "text: Lietuviškai, count: 1, files: 1,"
  - "text: lighttpd, count: 1, files: 1,"
  - "text: likec, count: 4, files: 1,"
  - "text: LIKEC, count: 5, files: 1,"
  - "text: linearref, count: 1, files: 1,"
  - "text: linearrings, count: 2, files: 2,"
  - "text: linemerge, count: 2, files: 2,"
  - "text: linestrings, count: 2, files: 2,"
  - "text: linkcheck, count: 1, files: 1,"
  - "text: Linkcheck, count: 1, files: 1,"
  - "text: Linkin, count: 4, files: 1,"
  - "text: LISTAGG, count: 5, files: 2,"
  - "text: listfilter, count: 2, files: 1,"
  - "text: litblk, count: 2, files: 1,"
  - "text: littérale, count: 1, files: 1,"
  - "text: Littérale, count: 1, files: 1,"
  - "text: littlehorse, count: 4, files: 1,"
  - "text: liveserverthread, count: 1, files: 1,"
  - "text: Llun, count: 1, files: 1,"
  - "text: LMAO, count: 2, files: 2,"
  - "text: loadi, count: 3, files: 1,"
  - "text: loadtxt, count: 1, files: 1,"
  - "text: localcontext, count: 2, files: 1,"
  - "text: localdomain, count: 2, files: 1,"
  - "text: localpartonly, count: 2, files: 1,"
  - "text: LOCALTIMESTAMP, count: 1, files: 1,"
  - "text: Lockridge, count: 1, files: 1,"
  - "text: locmen, count: 1, files: 1,"
  - "text: longext, count: 2, files: 1,"
  - "text: longwinded, count: 1, files: 1,"
  - "text: loookup, count: 2, files: 2,"
  - "text: loooong, count: 1, files: 1,"
  - "text: looooooong, count: 2, files: 1,"
  - "text: loooooooooooooooooo, count: 2, files: 2,"
  - "text: looooooooooooooooooo, count: 1, files: 1,"
  - "text: loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooog, count: 1, files: 1,"
  - "text: loopvar, count: 1, files: 1,"
  - "text: loree, count: 1, files: 1,"
  - "text: lotr, count: 5, files: 1,"
  - "text: louter, count: 5, files: 1,"
  - "text: LOUTER, count: 17, files: 6,"
  - "text: Lovie, count: 1, files: 1,"
  - "text: łóżko, count: 1, files: 1,"
  - "text: LPOVERLAPPED, count: 3, files: 1,"
  - "text: Lsconfs, count: 1, files: 1,"
  - "text: lsps, count: 2, files: 1,"
  - "text: lundo, count: 1, files: 1,"
  - "text: Lunedì, count: 1, files: 1,"
  - "text: lurgid, count: 1, files: 1,"
  - "text: Luxembourgish, count: 2, files: 2,"
  - "text: lwgeom, count: 4, files: 2,"
  - "text: LWGEOM, count: 1, files: 1,"
  - "text: lwingdal, count: 2, files: 1,"
  - "text: maandag, count: 1, files: 1,"
  - "text: maart, count: 1, files: 1,"
  - "text: maclines, count: 1, files: 1,"
  - "text: maďarsky, count: 1, files: 1,"
  - "text: magnam, count: 1, files: 1,"
  - "text: magni, count: 1, files: 1,"
  - "text: Magnoliophyta, count: 1, files: 1,"
  - "text: Magnoliopsida, count: 1, files: 1,"
  - "text: maig, count: 1, files: 1,"
  - "text: mainprepopulated, count: 2, files: 1,"
  - "text: maiores, count: 1, files: 1,"
  - "text: mais, count: 2, files: 1,"
  - "text: MAKEDATE, count: 2, files: 1,"
  - "text: makedsn, count: 1, files: 1,"
  - "text: makemigration, count: 2, files: 1,"
  - "text: maled, count: 1, files: 1,"
  - "text: maman, count: 2, files: 1,"
  - "text: managedmodel, count: 1, files: 1,"
  - "text: manualpk, count: 3, files: 2,"
  - "text: maplayer, count: 2, files: 1,"
  - "text: Marino, count: 5, files: 1,"
  - "text: markcoroutinefunction, count: 11, files: 6,"
  - "text: Marlott, count: 1, files: 1,"
  - "text: matchobj, count: 2, files: 1,"
  - "text: Mauchly, count: 5, files: 1,"
  - "text: maxime, count: 1, files: 1,"
  - "text: maxmem, count: 3, files: 1,"
  - "text: maxsplit, count: 3, files: 1,"
  - "text: maxx, count: 3, files: 1,"
  - "text: maxy, count: 3, files: 1,"
  - "text: Mayakovsky, count: 5, files: 1,"
  - "text: Maybachs, count: 1, files: 1,"
  - "text: mchildren, count: 2, files: 1,"
  - "text: mcomplex, count: 3, files: 1,"
  - "text: MDEV, count: 1, files: 1,"
  - "text: MDSYS, count: 8, files: 4,"
  - "text: mediumblob, count: 2, files: 2,"
  - "text: MEDIUMBLOB, count: 1, files: 1,"
  - "text: mediumtext, count: 1, files: 1,"
  - "text: melanogaster, count: 4, files: 1,"
  - "text: Melayu, count: 1, files: 1,"
  - "text: melb, count: 5, files: 1,"
  - "text: memorydb, count: 3, files: 2,"
  - "text: Mercoledì, count: 1, files: 1,"
  - "text: měsíc, count: 1, files: 1,"
  - "text: měsíce, count: 3, files: 1,"
  - "text: měsícem, count: 1, files: 1,"
  - "text: měsíci, count: 3, files: 1,"
  - "text: messagesnotfinished, count: 2, files: 1,"
  - "text: messybachelorparty, count: 1, files: 1,"
  - "text: metaclasses, count: 1, files: 1,"
  - "text: metacls, count: 2, files: 1,"
  - "text: Mfsptgkk, count: 1, files: 1,"
  - "text: mgeom, count: 5, files: 1,"
  - "text: mgmt, count: 1, files: 1,"
  - "text: micrometre, count: 1, files: 1,"
  - "text: micturations, count: 1, files: 1,"
  - "text: middlename, count: 2, files: 1,"
  - "text: Middlesborough, count: 2, files: 1,"
  - "text: Mies, count: 3, files: 1,"
  - "text: Milliarde, count: 1, files: 1,"
  - "text: Milliarden, count: 1, files: 1,"
  - "text: millimetre, count: 1, files: 1,"
  - "text: Millionen, count: 2, files: 1,"
  - "text: mimetypedb, count: 3, files: 1,"
  - "text: mingo, count: 3, files: 1,"
  - "text: Mingo, count: 1, files: 1,"
  - "text: minou, count: 1, files: 1,"
  - "text: minstrelbravely, count: 1, files: 1,"
  - "text: minusone, count: 2, files: 2,"
  - "text: minut, count: 1, files: 1,"
  - "text: miny, count: 3, files: 1,"
  - "text: Miron, count: 5, files: 1,"
  - "text: misformatted, count: 1, files: 1,"
  - "text: mislukt, count: 1, files: 1,"
  - "text: missingtag, count: 2, files: 1,"
  - "text: mith, count: 1, files: 1,"
  - "text: Mittagong, count: 3, files: 1,"
  - "text: mixedcapture, count: 3, files: 2,"
  - "text: mixedcaseidcolumn, count: 1, files: 1,"
  - "text: mixmodel, count: 1, files: 1,"
  - "text: mkfifo, count: 1, files: 1,"
  - "text: mltdb, count: 5, files: 1,"
  - "text: mmdb, count: 10, files: 2,"
  - "text: mmigrations, count: 1, files: 1,"
  - "text: mmodel, count: 4, files: 1,"
  - "text: mmodels, count: 2, files: 1,"
  - "text: mngled, count: 1, files: 1,"
  - "text: mnὀp, count: 2, files: 1,"
  - "text: moar, count: 1, files: 1,"
  - "text: modela, count: 6, files: 2,"
  - "text: modeladmins, count: 3, files: 2,"
  - "text: modelapp, count: 1, files: 1,"
  - "text: modelc, count: 6, files: 2,"
  - "text: modelcreatedonthefly, count: 2, files: 1,"
  - "text: modelforms, count: 1, files: 1,"
  - "text: modellabel, count: 1, files: 1,"
  - "text: modelstate, count: 2, files: 1,"
  - "text: modelwithcustombase, count: 1, files: 1,"
  - "text: modelz, count: 2, files: 2,"
  - "text: modindex, count: 1, files: 1,"
  - "text: modline, count: 3, files: 1,"
  - "text: modsalary, count: 1, files: 1,"
  - "text: moduleauthor, count: 1, files: 1,"
  - "text: modwsgi, count: 3, files: 2,"
  - "text: mogrify, count: 7, files: 3,"
  - "text: Mohiner, count: 2, files: 1,"
  - "text: molestiae, count: 1, files: 1,"
  - "text: molestias, count: 1, files: 1,"
  - "text: mollit, count: 2, files: 2,"
  - "text: mollitia, count: 1, files: 1,"
  - "text: mondes, count: 2, files: 1,"
  - "text: monkeybusiness, count: 1, files: 1,"
  - "text: Monkeypatches, count: 2, files: 1,"
  - "text: monkeypatching, count: 1, files: 1,"
  - "text: mordiously, count: 1, files: 1,"
  - "text: mple, count: 1, files: 1,"
  - "text: mpolygon, count: 1, files: 1,"
  - "text: msgcat, count: 2, files: 1,"
  - "text: msgctxt, count: 6, files: 2,"
  - "text: MSIE, count: 1, files: 1,"
  - "text: msimple, count: 4, files: 1,"
  - "text: mtimes, count: 3, files: 1,"
  - "text: mtoself, count: 1, files: 1,"
  - "text: mult, count: 8, files: 2,"
  - "text: Mult, count: 3, files: 1,"
  - "text: multibyte, count: 1, files: 1,"
  - "text: multicol, count: 4, files: 2,"
  - "text: MULTICURVE, count: 1, files: 1,"
  - "text: multigeneration, count: 1, files: 1,"
  - "text: multiinheritance, count: 2, files: 2,"
  - "text: multijoin, count: 3, files: 3,"
  - "text: multijoins, count: 2, files: 2,"
  - "text: multimodel, count: 1, files: 1,"
  - "text: Multimodel, count: 2, files: 2,"
  - "text: multiplemodelchoicefield, count: 1, files: 1,"
  - "text: multistep, count: 1, files: 1,"
  - "text: MULTISURFACE, count: 1, files: 1,"
  - "text: multitable, count: 1, files: 1,"
  - "text: multitenant, count: 3, files: 1,"
  - "text: multiuser, count: 1, files: 1,"
  - "text: mundo, count: 1, files: 1,"
  - "text: munroe, count: 5, files: 1,"
  - "text: Munroe, count: 5, files: 1,"
  - "text: Münster, count: 1, files: 1,"
  - "text: muscaria, count: 1, files: 1,"
  - "text: Mustermann, count: 8, files: 3,"
  - "text: mustermanns, count: 2, files: 1,"
  - "text: mview, count: 8, files: 2,"
  - "text: MVIEW, count: 1, files: 1,"
  - "text: mviews, count: 5, files: 1,"
  - "text: myauth, count: 2, files: 2,"
  - "text: myblock, count: 2, files: 1,"
  - "text: mycenter, count: 1, files: 1,"
  - "text: mycheckbox, count: 3, files: 1,"
  - "text: myclass, count: 1, files: 1,"
  - "text: mydatetime, count: 1, files: 1,"
  - "text: myerrorcheck, count: 2, files: 1,"
  - "text: myfields, count: 2, files: 1,"
  - "text: myfont, count: 3, files: 1,"
  - "text: myform, count: 1, files: 1,"
  - "text: mygroup, count: 3, files: 1,"
  - "text: myhost, count: 2, files: 1,"
  - "text: MYISAM, count: 1, files: 1,"
  - "text: mylanguage, count: 2, files: 1,"
  - "text: mylink, count: 4, files: 1,"
  - "text: mymulti, count: 2, files: 1,"
  - "text: mypassword, count: 1, files: 1,"
  - "text: mypeople, count: 1, files: 1,"
  - "text: myperson, count: 1, files: 1,"
  - "text: myradio, count: 3, files: 1,"
  - "text: mysqldump, count: 2, files: 2,"
  - "text: mystore, count: 2, files: 1,"
  - "text: mytag, count: 2, files: 1,"
  - "text: myview, count: 2, files: 1,"
  - "text: mywarningcheck, count: 2, files: 1,"
  - "text: nadro, count: 1, files: 1,"
  - "text: Nainen, count: 3, files: 1,"
  - "text: naiveip, count: 2, files: 1,"
  - "text: nàmë, count: 1, files: 1,"
  - "text: NAMEDATALEN, count: 1, files: 1,"
  - "text: namedcategory, count: 1, files: 1,"
  - "text: Namedtuples, count: 1, files: 1,"
  - "text: namemap, count: 2, files: 1,"
  - "text: namess, count: 1, files: 1,"
  - "text: Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz, count: 5, files: 1,"
  - "text: napis, count: 1, files: 1,"
  - "text: natus, count: 1, files: 1,"
  - "text: nazwa, count: 1, files: 1,"
  - "text: nbár, count: 1, files: 1,"
  - "text: nbaz, count: 1, files: 1,"
  - "text: nbfield, count: 6, files: 2,"
  - "text: nbmf, count: 2, files: 1,"
  - "text: nbmt, count: 2, files: 1,"
  - "text: nbuz, count: 6, files: 3,"
  - "text: nbytes, count: 1, files: 1,"
  - "text: nclob, count: 1, files: 1,"
  - "text: NCLOB, count: 14, files: 5,"
  - "text: ncoords, count: 5, files: 1,"
  - "text: ndarray, count: 3, files: 3,"
  - "text: ndelag, count: 2, files: 1,"
  - "text: necessitatibus, count: 1, files: 1,"
  - "text: Nederlands, count: 3, files: 2,"
  - "text: needme, count: 5, files: 2,"
  - "text: nefgh, count: 1, files: 1,"
  - "text: Neighbour, count: 3, files: 2,"
  - "text: neighbouring, count: 1, files: 1,"
  - "text: Nein, count: 1, files: 1,"
  - "text: německy, count: 1, files: 1,"
  - "text: nemo, count: 1, files: 1,"
  - "text: neque, count: 1, files: 1,"
  - "text: nera, count: 5, files: 1,"
  - "text: Nera, count: 6, files: 2,"
  - "text: nesciunt, count: 1, files: 1,"
  - "text: Neue, count: 1, files: 1,"
  - "text: newappobj, count: 3, files: 1,"
  - "text: newauthor, count: 1, files: 1,"
  - "text: newblock, count: 1, files: 1,"
  - "text: newd, count: 2, files: 1,"
  - "text: newgroup, count: 1, files: 1,"
  - "text: newheader, count: 3, files: 1,"
  - "text: newkey, count: 2, files: 1,"
  - "text: newnewuser, count: 2, files: 1,"
  - "text: newrel, count: 5, files: 1,"
  - "text: newretval, count: 3, files: 1,"
  - "text: newsarticle, count: 2, files: 1,"
  - "text: newsecret, count: 4, files: 3,"
  - "text: nextset, count: 1, files: 1,"
  - "text: nfeat, count: 8, files: 2,"
  - "text: nghi, count: 2, files: 1,"
  - "text: Ngkxa, count: 1, files: 1,"
  - "text: ngstr, count: 5, files: 4,"
  - "text: Nhxi, count: 1, files: 1,"
  - "text: nicht, count: 6, files: 2,"
  - "text: NICHT, count: 2, files: 1,"
  - "text: nijkl, count: 1, files: 1,"
  - "text: nizozemsky, count: 1, files: 1,"
  - "text: Nklj, count: 1, files: 1,"
  - "text: NLOB, count: 1, files: 1,"
  - "text: nobis, count: 1, files: 1,"
  - "text: Nobu, count: 1, files: 1,"
  - "text: nocase, count: 4, files: 2,"
  - "text: NOCYCLE, count: 1, files: 1,"
  - "text: nodelay, count: 2, files: 1,"
  - "text: nodots, count: 1, files: 1,"
  - "text: nofuzzy, count: 1, files: 1,"
  - "text: nohyphensoranything, count: 2, files: 1,"
  - "text: nombre, count: 2, files: 2,"
  - "text: Nombre, count: 1, files: 1,"
  - "text: nomodelapp, count: 1, files: 1,"
  - "text: nonaggregate, count: 1, files: 1,"
  - "text: nonaggregated, count: 1, files: 1,"
  - "text: noname, count: 2, files: 1,"
  - "text: nonauto, count: 2, files: 1,"
  - "text: nonautopkbook, count: 5, files: 1,"
  - "text: nonautopkbookchild, count: 4, files: 1,"
  - "text: NONBLOCK, count: 1, files: 1,"
  - "text: nonbreaking, count: 1, files: 1,"
  - "text: noncallable, count: 1, files: 1,"
  - "text: noncapturing, count: 1, files: 1,"
  - "text: noneditable, count: 3, files: 1,"
  - "text: nonexistentfield, count: 2, files: 1,"
  - "text: nonfirst, count: 1, files: 1,"
  - "text: nonint, count: 2, files: 2,"
  - "text: noninteractive, count: 1, files: 1,"
  - "text: nonliterals, count: 1, files: 1,"
  - "text: nonmatching, count: 1, files: 1,"
  - "text: nonmodel, count: 2, files: 2,"
  - "text: nonrelated, count: 1, files: 1,"
  - "text: nontech, count: 2, files: 1,"
  - "text: nontranslated, count: 1, files: 1,"
  - "text: nonupper, count: 2, files: 1,"
  - "text: nonutf, count: 3, files: 1,"
  - "text: noodp, count: 3, files: 2,"
  - "text: nopass, count: 1, files: 1,"
  - "text: nopassword, count: 1, files: 1,"
  - "text: nopk, count: 2, files: 2,"
  - "text: noreferrer, count: 1, files: 1,"
  - "text: noreload, count: 2, files: 2,"
  - "text: noreuse, count: 1, files: 1,"
  - "text: norsk, count: 4, files: 2,"
  - "text: Norske, count: 5, files: 1,"
  - "text: nosites, count: 1, files: 1,"
  - "text: nosrid, count: 1, files: 1,"
  - "text: nostatic, count: 1, files: 1,"
  - "text: nostrud, count: 2, files: 2,"
  - "text: nosuchfile, count: 1, files: 1,"
  - "text: notafield, count: 3, files: 1,"
  - "text: notafile, count: 1, files: 1,"
  - "text: notallowed, count: 1, files: 1,"
  - "text: notarealfield, count: 2, files: 1,"
  - "text: notblank, count: 1, files: 1,"
  - "text: notdate, count: 2, files: 1,"
  - "text: nothreading, count: 1, files: 1,"
  - "text: NOTICEFUNC, count: 2, files: 1,"
  - "text: Noto, count: 1, files: 1,"
  - "text: NOTRECEIVED, count: 1, files: 1,"
  - "text: notreferenced, count: 1, files: 1,"
  - "text: notsecret, count: 1, files: 1,"
  - "text: novaehollandiae, count: 1, files: 1,"
  - "text: novelreadonlychapter, count: 1, files: 1,"
  - "text: novembre, count: 1, files: 1,"
  - "text: Nowak, count: 2, files: 1,"
  - "text: nption, count: 1, files: 1,"
  - "text: nrings, count: 3, files: 3,"
  - "text: nsapp, count: 6, files: 2,"
  - "text: nspname, count: 2, files: 1,"
  - "text: nter, count: 1, files: 1,"
  - "text: nthu, count: 1, files: 1,"
  - "text: ntranslate, count: 2, files: 1,"
  - "text: nuevo, count: 2, files: 1,"
  - "text: nulla, count: 3, files: 2,"
  - "text: nullabled, count: 1, files: 1,"
  - "text: nullablejsonmodel, count: 1, files: 1,"
  - "text: nullableuuidmodel, count: 1, files: 1,"
  - "text: nullbool, count: 5, files: 1,"
  - "text: NULLBOOL, count: 4, files: 1,"
  - "text: nullboolean, count: 2, files: 1,"
  - "text: nullcar, count: 4, files: 1,"
  - "text: nullcity, count: 5, files: 1,"
  - "text: nullqs, count: 4, files: 1,"
  - "text: nullstate, count: 3, files: 1,"
  - "text: numbytes, count: 2, files: 1,"
  - "text: numquam, count: 1, files: 1,"
  - "text: numqueries, count: 1, files: 1,"
  - "text: numrange, count: 3, files: 1,"
  - "text: NUMTODSINTERVAL, count: 2, files: 2,"
  - "text: numy, count: 2, files: 1,"
  - "text: NZGD, count: 3, files: 1,"
  - "text: o'ption, count: 1, files: 1,"
  - "text: oauh, count: 1, files: 1,"
  - "text: obcaecati, count: 1, files: 1,"
  - "text: objecta, count: 9, files: 3,"
  - "text: objectas, count: 5, files: 1,"
  - "text: objectb, count: 8, files: 3,"
  - "text: objectbs, count: 4, files: 1,"
  - "text: objectc, count: 5, files: 1,"
  - "text: objectcs, count: 2, files: 1,"
  - "text: objectreference, count: 1, files: 1,"
  - "text: OBJECTVAR, count: 1, files: 1,"
  - "text: Objekt, count: 1, files: 1,"
  - "text: Objekte, count: 1, files: 1,"
  - "text: occaecat, count: 2, files: 2,"
  - "text: octubre, count: 1, files: 1,"
  - "text: oddrel, count: 5, files: 1,"
  - "text: odio, count: 1, files: 1,"
  - "text: odit, count: 1, files: 1,"
  - "text: Œnter, count: 1, files: 1,"
  - "text: officia, count: 3, files: 2,"
  - "text: officiis, count: 1, files: 1,"
  - "text: ofield, count: 1, files: 1,"
  - "text: OGRERR, count: 3, files: 1,"
  - "text: ogrinfo, count: 6, files: 3,"
  - "text: oʻzbek, count: 1, files: 1,"
  - "text: oids, count: 17, files: 4,"
  - "text: ojid, count: 1, files: 1,"
  - "text: okcity, count: 3, files: 1,"
  - "text: okkkk, count: 1, files: 1,"
  - "text: Oktabr, count: 4, files: 1,"
  - "text: oktober, count: 5, files: 3,"
  - "text: oldpassword, count: 2, files: 1,"
  - "text: oldsubscriber, count: 2, files: 1,"
  - "text: omittable, count: 2, files: 1,"
  - "text: omnis, count: 1, files: 1,"
  - "text: ondisk, count: 3, files: 1,"
  - "text: oneoff, count: 1, files: 1,"
  - "text: onesecond, count: 5, files: 1,"
  - "text: onetoone, count: 9, files: 6,"
  - "text: onetoonecategory, count: 5, files: 1,"
  - "text: oneword, count: 1, files: 1,"
  - "text: onlys, count: 3, files: 1,"
  - "text: onnonplural, count: 1, files: 1,"
  - "text: OOJCS, count: 1, files: 1,"
  - "text: oomvalue, count: 1, files: 1,"
  - "text: opendocument, count: 2, files: 1,"
  - "text: opensearch, count: 1, files: 1,"
  - "text: opns, count: 1, files: 1,"
  - "text: opti, count: 1, files: 1,"
  - "text: optin, count: 3, files: 2,"
  - "text: optio, count: 2, files: 2,"
  - "text: optionhost, count: 2, files: 1,"
  - "text: optionuser, count: 2, files: 1,"
  - "text: orderbycol, count: 1, files: 1,"
  - "text: orderedobject, count: 1, files: 1,"
  - "text: orderfields, count: 2, files: 1,"
  - "text: ORDINALITY, count: 2, files: 1,"
  - "text: organisation, count: 6, files: 2,"
  - "text: organiser, count: 6, files: 2,"
  - "text: Organiser, count: 5, files: 2,"
  - "text: orignal, count: 2, files: 1,"
  - "text: osanteuh, count: 1, files: 1,"
  - "text: osfhandle, count: 2, files: 1,"
  - "text: OSRIs, count: 3, files: 1,"
  - "text: ossp, count: 1, files: 1,"
  - "text: otherage, count: 3, files: 1,"
  - "text: otherclass, count: 2, files: 2,"
  - "text: otherclient, count: 5, files: 1,"
  - "text: othercol, count: 2, files: 2,"
  - "text: otheritem, count: 3, files: 1,"
  - "text: otherperson, count: 1, files: 1,"
  - "text: othersecret, count: 1, files: 1,"
  - "text: otherstory, count: 3, files: 1,"
  - "text: othertable, count: 2, files: 1,"
  - "text: otherteachers, count: 3, files: 1,"
  - "text: othertestproject, count: 2, files: 1,"
  - "text: otheruser, count: 1, files: 1,"
  - "text: Otsikko, count: 3, files: 1,"
  - "text: Ottobre, count: 4, files: 1,"
  - "text: oüoüoüoü, count: 2, files: 1,"
  - "text: outconverter, count: 5, files: 1,"
  - "text: outdict, count: 3, files: 1,"
  - "text: outerb, count: 2, files: 1,"
  - "text: outeref, count: 1, files: 1,"
  - "text: outerq, count: 4, files: 2,"
  - "text: outfilename, count: 2, files: 1,"
  - "text: outfititem, count: 1, files: 1,"
  - "text: outputtypehandler, count: 1, files: 1,"
  - "text: outputwrapper, count: 2, files: 1,"
  - "text: Outubro, count: 4, files: 2,"
  - "text: overconsumption, count: 1, files: 1,"
  - "text: OVERLAPBDYDISJOINT, count: 1, files: 1,"
  - "text: overquote, count: 2, files: 2,"
  - "text: Overrideable, count: 1, files: 1,"
  - "text: overriden, count: 2, files: 2,"
  - "text: overtruncate, count: 2, files: 2,"
  - "text: owrt, count: 3, files: 1,"
  - "text: packbits, count: 2, files: 1,"
  - "text: PACKBITS, count: 1, files: 1,"
  - "text: pagename, count: 1, files: 1,"
  - "text: pagerefs, count: 1, files: 1,"
  - "text: pagina, count: 2, files: 2,"
  - "text: paginators, count: 1, files: 1,"
  - "text: Paglen, count: 1, files: 1,"
  - "text: Paletted, count: 1, files: 1,"
  - "text: Palin, count: 6, files: 2,"
  - "text: Panthera, count: 4, files: 3,"
  - "text: Pappa's, count: 4, files: 3,"
  - "text: papsz, count: 10, files: 2,"
  - "text: papszlist, count: 1, files: 1,"
  - "text: Paradis, count: 5, files: 1,"
  - "text: parameterlist, count: 2, files: 1,"
  - "text: paramless, count: 1, files: 1,"
  - "text: parentid, count: 1, files: 1,"
  - "text: parentless, count: 1, files: 1,"
  - "text: parentmod, count: 2, files: 1,"
  - "text: parentmodel, count: 2, files: 1,"
  - "text: parentmodelwithcustompk, count: 2, files: 1,"
  - "text: parentwithdependentchildren, count: 2, files: 1,"
  - "text: pariatur, count: 3, files: 2,"
  - "text: parsedate, count: 1, files: 1,"
  - "text: parseparam, count: 2, files: 1,"
  - "text: Parth, count: 1, files: 1,"
  - "text: pascalcase, count: 1, files: 1,"
  - "text: Passat, count: 3, files: 2,"
  - "text: Passworda, count: 2, files: 1,"
  - "text: passwordcustom, count: 3, files: 2,"
  - "text: Passwort, count: 4, files: 1,"
  - "text: pastebin, count: 1, files: 1,"
  - "text: Pastebin, count: 1, files: 1,"
  - "text: pasteform, count: 2, files: 1,"
  - "text: pathconf, count: 1, files: 1,"
  - "text: Patil, count: 1, files: 1,"
  - "text: Pazartesi, count: 1, files: 1,"
  - "text: października, count: 1, files: 1,"
  - "text: pcity, count: 4, files: 1,"
  - "text: pcontributor, count: 2, files: 1,"
  - "text: pdir, count: 2, files: 1,"
  - "text: Pearland, count: 4, files: 1,"
  - "text: peekable, count: 2, files: 1,"
  - "text: Peopledata, count: 1, files: 1,"
  - "text: Peoplemoredata, count: 1, files: 1,"
  - "text: perc, count: 3, files: 2,"
  - "text: perds, count: 1, files: 1,"
  - "text: perferendis, count: 6, files: 2,"
  - "text: perim, count: 9, files: 2,"
  - "text: permissioned, count: 6, files: 2,"
  - "text: permlookupdict, count: 1, files: 1,"
  - "text: permwrapper, count: 1, files: 1,"
  - "text: pers, count: 2, files: 1,"
  - "text: personnalisée, count: 1, files: 1,"
  - "text: personne, count: 1, files: 1,"
  - "text: personnelles, count: 1, files: 1,"
  - "text: personthroughproxysubclass, count: 5, files: 1,"
  - "text: perspiciatis, count: 1, files: 1,"
  - "text: Peucker, count: 1, files: 1,"
  - "text: peut, count: 1, files: 1,"
  - "text: pgcrypto, count: 1, files: 1,"
  - "text: pgerror, count: 1, files: 1,"
  - "text: PGPASSFILE, count: 3, files: 2,"
  - "text: PGSERVICE, count: 3, files: 2,"
  - "text: pgsql, count: 1, files: 1,"
  - "text: PGSSLCERT, count: 2, files: 2,"
  - "text: PGSSLKEY, count: 2, files: 2,"
  - "text: PGSSLMODE, count: 2, files: 2,"
  - "text: PGSSLROOTCERT, count: 2, files: 2,"
  - "text: phant, count: 1, files: 1,"
  - "text: phonebk, count: 1, files: 1,"
  - "text: phonebook, count: 1, files: 1,"
  - "text: phonenumber, count: 1, files: 1,"
  - "text: Phou, count: 4, files: 1,"
  - "text: phpmyadmin, count: 1, files: 1,"
  - "text: phraseto, count: 1, files: 1,"
  - "text: pickable, count: 7, files: 2,"
  - "text: Pickable, count: 1, files: 1,"
  - "text: picklability, count: 1, files: 1,"
  - "text: Pickleability, count: 1, files: 1,"
  - "text: pièce, count: 2, files: 1,"
  - "text: Pisum, count: 1, files: 1,"
  - "text: PIXTYPE, count: 3, files: 2,"
  - "text: PKCS, count: 2, files: 1,"
  - "text: pkey, count: 4, files: 3,"
  - "text: placeat, count: 1, files: 1,"
  - "text: Placemark, count: 1, files: 1,"
  - "text: plainto, count: 1, files: 1,"
  - "text: Plantae, count: 1, files: 1,"
  - "text: playsinline, count: 1, files: 1,"
  - "text: pldict, count: 2, files: 1,"
  - "text: plotproxy, count: 2, files: 1,"
  - "text: plpgsql, count: 2, files: 1,"
  - "text: pluggablesearchperson, count: 2, files: 1,"
  - "text: pluralmatch, count: 2, files: 1,"
  - "text: plurdled, count: 1, files: 1,"
  - "text: pluriel, count: 2, files: 1,"
  - "text: Plushie, count: 4, files: 1,"
  - "text: pnts, count: 2, files: 1,"
  - "text: pofile, count: 8, files: 2,"
  - "text: Pography, count: 1, files: 1,"
  - "text: pointera, count: 1, files: 1,"
  - "text: pointerb, count: 2, files: 1,"
  - "text: pointg, count: 8, files: 4,"
  - "text: polski, count: 1, files: 1,"
  - "text: polygonized, count: 1, files: 1,"
  - "text: POLYHEDRALSURFACE, count: 1, files: 1,"
  - "text: ponyrider, count: 2, files: 1,"
  - "text: ponystables, count: 2, files: 1,"
  - "text: poolers, count: 1, files: 1,"
  - "text: popfcn, count: 3, files: 1,"
  - "text: popleft, count: 1, files: 1,"
  - "text: porro, count: 1, files: 1,"
  - "text: Português, count: 2, files: 1,"
  - "text: positivebiginteger, count: 1, files: 1,"
  - "text: positiveinteger, count: 1, files: 1,"
  - "text: positivesmallinteger, count: 1, files: 1,"
  - "text: possimus, count: 1, files: 1,"
  - "text: postconf, count: 1, files: 1,"
  - "text: Postgre, count: 5, files: 1,"
  - "text: postupdate, count: 2, files: 1,"
  - "text: pourcentage, count: 2, files: 1,"
  - "text: Poynter, count: 1, files: 1,"
  - "text: praesentium, count: 1, files: 1,"
  - "text: prec, count: 27, files: 11,"
  - "text: precache, count: 1, files: 1,"
  - "text: precomposed, count: 2, files: 1,"
  - "text: před, count: 5, files: 1,"
  - "text: prefetchable, count: 1, files: 1,"
  - "text: prepareable, count: 1, files: 1,"
  - "text: PREPGEOM, count: 6, files: 3,"
  - "text: prepopulate, count: 3, files: 2,"
  - "text: prepopulatedpostlargeslug, count: 1, files: 1,"
  - "text: prepopulatedsubpost, count: 2, files: 1,"
  - "text: prepopulation, count: 1, files: 1,"
  - "text: preservesimplify, count: 2, files: 2,"
  - "text: Presta, count: 1, files: 1,"
  - "text: preupdate, count: 2, files: 1,"
  - "text: primem, count: 1, files: 1,"
  - "text: PRIMEM, count: 8, files: 4,"
  - "text: problemer, count: 5, files: 1,"
  - "text: Procfile, count: 2, files: 1,"
  - "text: profiel, count: 5, files: 1,"
  - "text: proident, count: 2, files: 2,"
  - "text: projcs, count: 2, files: 1,"
  - "text: PROJCS, count: 9, files: 3,"
  - "text: projectname, count: 1, files: 1,"
  - "text: proxypony, count: 5, files: 1,"
  - "text: proxys, count: 6, files: 2,"
  - "text: proxytrackeruser, count: 2, files: 1,"
  - "text: proxyuser, count: 1, files: 1,"
  - "text: ptown, count: 8, files: 2,"
  - "text: ptrs, count: 3, files: 1,"
  - "text: Pucb, count: 2, files: 1,"
  - "text: pudge, count: 2, files: 1,"
  - "text: pushdown, count: 3, files: 2,"
  - "text: putconn, count: 2, files: 1,"
  - "text: pwdc, count: 3, files: 1,"
  - "text: pydispatch, count: 1, files: 1,"
  - "text: pynosuchfile, count: 1, files: 1,"
  - "text: PYTHONNODEBUGRANGES, count: 1, files: 1,"
  - "text: PYXY, count: 1, files: 1,"
  - "text: QGIS, count: 3, files: 1,"
  - "text: qmark, count: 2, files: 1,"
  - "text: QMARK, count: 2, files: 1,"
  - "text: QOXS, count: 1, files: 1,"
  - "text: qparts, count: 5, files: 1,"
  - "text: qrstuwxyz, count: 1, files: 1,"
  - "text: qscount, count: 1, files: 1,"
  - "text: qset, count: 12, files: 3,"
  - "text: qsets, count: 2, files: 1,"
  - "text: qstr, count: 11, files: 3,"
  - "text: quadsegs, count: 9, files: 2,"
  - "text: quaerat, count: 1, files: 1,"
  - "text: quas, count: 1, files: 1,"
  - "text: querycount, count: 1, files: 1,"
  - "text: querystrings, count: 1, files: 1,"
  - "text: quibusdam, count: 1, files: 1,"
  - "text: quidem, count: 1, files: 1,"
  - "text: quis, count: 3, files: 2,"
  - "text: quisquam, count: 1, files: 1,"
  - "text: quux, count: 9, files: 4,"
  - "text: qwer, count: 1, files: 1,"
  - "text: Qwghlm, count: 3, files: 1,"
  - "text: Radiohead, count: 5, files: 1,"
  - "text: ragdoll, count: 1, files: 1,"
  - "text: Ramper, count: 1, files: 1,"
  - "text: randomised, count: 1, files: 1,"
  - "text: rangesmodel, count: 2, files: 2,"
  - "text: rast, count: 26, files: 10,"
  - "text: rasterapp, count: 3, files: 2,"
  - "text: rasterheader, count: 2, files: 1,"
  - "text: rastprojected, count: 7, files: 3,"
  - "text: ratione, count: 1, files: 1,"
  - "text: rawdata, count: 4, files: 2,"
  - "text: rawqueryset, count: 1, files: 1,"
  - "text: rawr, count: 4, files: 1,"
  - "text: rawsource, count: 1, files: 1,"
  - "text: RAWTOHEX, count: 1, files: 1,"
  - "text: Rayuela, count: 2, files: 1,"
  - "text: rchild, count: 5, files: 1,"
  - "text: rcons, count: 5, files: 1,"
  - "text: rcuh, count: 1, files: 1,"
  - "text: rdar, count: 1, files: 1,"
  - "text: RDBMS, count: 1, files: 1,"
  - "text: RDONLY, count: 1, files: 1,"
  - "text: readablepizza, count: 2, files: 1,"
  - "text: readonlypizza, count: 3, files: 1,"
  - "text: readonlyrelatedfield, count: 1, files: 1,"
  - "text: realiased, count: 2, files: 2,"
  - "text: realiasing, count: 1, files: 1,"
  - "text: realname, count: 2, files: 1,"
  - "text: Realname, count: 1, files: 1,"
  - "text: reay, count: 1, files: 1,"
  - "text: rebaking, count: 1, files: 1,"
  - "text: receiverkey, count: 2, files: 1,"
  - "text: recentactions, count: 3, files: 2,"
  - "text: recipeunmanaged, count: 1, files: 1,"
  - "text: recovermypassword, count: 1, files: 1,"
  - "text: recusandae, count: 1, files: 1,"
  - "text: Redelete, count: 1, files: 1,"
  - "text: Redirections, count: 2, files: 1,"
  - "text: reentrancy, count: 1, files: 1,"
  - "text: reexecute, count: 1, files: 1,"
  - "text: refclassid, count: 1, files: 1,"
  - "text: referencedbygenrel, count: 1, files: 1,"
  - "text: referencedbyinline, count: 1, files: 1,"
  - "text: referencedbyparent, count: 1, files: 1,"
  - "text: referer, count: 37, files: 10,"
  - "text: Referer, count: 26, files: 8,"
  - "text: REFERER, count: 22, files: 8,"
  - "text: referers, count: 1, files: 1,"
  - "text: refetched, count: 2, files: 1,"
  - "text: refobjid, count: 2, files: 1,"
  - "text: refobjsubid, count: 1, files: 1,"
  - "text: refuri, count: 2, files: 1,"
  - "text: regclass, count: 2, files: 1,"
  - "text: regconfig, count: 1, files: 1,"
  - "text: reget, count: 1, files: 1,"
  - "text: Reget, count: 4, files: 1,"
  - "text: registre, count: 3, files: 1,"
  - "text: Regressiontest, count: 1, files: 1,"
  - "text: regressiontests, count: 1, files: 1,"
  - "text: reiciendis, count: 1, files: 1,"
  - "text: reimports, count: 1, files: 1,"
  - "text: relam, count: 1, files: 1,"
  - "text: relatedmodel, count: 12, files: 4,"
  - "text: relatedobjectdoesnotexist, count: 2, files: 1,"
  - "text: relatedonlyfieldlistfilter, count: 5, files: 1,"
  - "text: relatedpoint, count: 2, files: 1,"
  - "text: relatedprepopulated, count: 5, files: 1,"
  - "text: relatedwithuuidpkmodel, count: 5, files: 1,"
  - "text: relatepattern, count: 3, files: 3,"
  - "text: relationmodel, count: 2, files: 1,"
  - "text: releaseevent, count: 4, files: 1,"
  - "text: relispartition, count: 1, files: 1,"
  - "text: reloptions, count: 2, files: 1,"
  - "text: rels, count: 22, files: 7,"
  - "text: Remler, count: 1, files: 1,"
  - "text: remoteuser, count: 1, files: 1,"
  - "text: removecovering, count: 1, files: 1,"
  - "text: removedafternextversionwarning, count: 1, files: 1,"
  - "text: removedeferred, count: 1, files: 1,"
  - "text: removefcn, count: 2, files: 1,"
  - "text: renamedfoo, count: 5, files: 1,"
  - "text: Rendang, count: 2, files: 1,"
  - "text: Renderable, count: 16, files: 5,"
  - "text: rendertest, count: 2, files: 2,"
  - "text: reparsing, count: 2, files: 2,"
  - "text: repellat, count: 1, files: 1,"
  - "text: repellendus, count: 1, files: 1,"
  - "text: repercent, count: 12, files: 3,"
  - "text: repickling, count: 2, files: 1,"
  - "text: repointed, count: 3, files: 3,"
  - "text: repointing, count: 3, files: 2,"
  - "text: repoints, count: 2, files: 1,"
  - "text: reprehenderit, count: 3, files: 2,"
  - "text: representer, count: 3, files: 1,"
  - "text: reproject, count: 2, files: 2,"
  - "text: Reproject, count: 2, files: 2,"
  - "text: reprojected, count: 1, files: 1,"
  - "text: reprojection, count: 1, files: 1,"
  - "text: Reprojection, count: 1, files: 1,"
  - "text: reprs, count: 2, files: 1,"
  - "text: reprtext, count: 2, files: 1,"
  - "text: repudiandae, count: 1, files: 1,"
  - "text: requestline, count: 3, files: 1,"
  - "text: reraised, count: 5, files: 3,"
  - "text: reraises, count: 3, files: 3,"
  - "text: reraising, count: 3, files: 2,"
  - "text: rereverse, count: 1, files: 1,"
  - "text: rerum, count: 1, files: 1,"
  - "text: reshows, count: 2, files: 1,"
  - "text: ressembler, count: 1, files: 1,"
  - "text: Resultat, count: 6, files: 2,"
  - "text: Resultate, count: 6, files: 2,"
  - "text: resultset, count: 2, files: 2,"
  - "text: retablespace, count: 2, files: 1,"
  - "text: reuired, count: 1, files: 1,"
  - "text: revfk, count: 1, files: 1,"
  - "text: Revisionable, count: 6, files: 2,"
  - "text: revm, count: 1, files: 1,"
  - "text: revrel, count: 2, files: 1,"
  - "text: rfmx, count: 5, files: 1,"
  - "text: RFOO, count: 5, files: 1,"
  - "text: rfwdbc, count: 5, files: 1,"
  - "text: rghi, count: 2, files: 1,"
  - "text: rhond, count: 1, files: 1,"
  - "text: Rhond, count: 1, files: 1,"
  - "text: Riccardo, count: 1, files: 1,"
  - "text: righthand, count: 1, files: 1,"
  - "text: ript, count: 2, files: 1,"
  - "text: Ristorante, count: 5, files: 1,"
  - "text: rlwrap, count: 6, files: 2,"
  - "text: rmfl, count: 5, files: 1,"
  - "text: rmflmm, count: 5, files: 1,"
  - "text: rmflmmwt, count: 5, files: 1,"
  - "text: rmfuncin, count: 3, files: 1,"
  - "text: rmfuncuc, count: 3, files: 1,"
  - "text: rminigsw, count: 3, files: 1,"
  - "text: rminsf, count: 5, files: 1,"
  - "text: rmless, count: 1, files: 1,"
  - "text: rmrf, count: 2, files: 1,"
  - "text: rmwdbrm, count: 1, files: 1,"
  - "text: rmwdbtfk, count: 1, files: 1,"
  - "text: rmwdbtnoop, count: 1, files: 1,"
  - "text: rmwsc, count: 5, files: 1,"
  - "text: rmwsrf, count: 5, files: 1,"
  - "text: rname, count: 7, files: 4,"
  - "text: rnfl, count: 5, files: 1,"
  - "text: rnflut, count: 5, files: 1,"
  - "text: rnidsf, count: 1, files: 1,"
  - "text: rnin, count: 1, files: 1,"
  - "text: rninuniwui, count: 1, files: 1,"
  - "text: rninuui, count: 2, files: 1,"
  - "text: rnmo, count: 5, files: 1,"
  - "text: rnserver, count: 2, files: 1,"
  - "text: Roboto, count: 1, files: 1,"
  - "text: Rockstar, count: 1, files: 1,"
  - "text: Rockwhale, count: 1, files: 1,"
  - "text: ROGR, count: 1, files: 1,"
  - "text: rokem, count: 1, files: 1,"
  - "text: roky, count: 1, files: 1,"
  - "text: rôle, count: 1, files: 1,"
  - "text: rolename, count: 8, files: 2,"
  - "text: rosé, count: 1, files: 1,"
  - "text: Rossi, count: 2, files: 1,"
  - "text: Rossum, count: 7, files: 3,"
  - "text: rowlevelchangepermissionmodel, count: 5, files: 1,"
  - "text: ROWNUM, count: 1, files: 1,"
  - "text: royko, count: 5, files: 1,"
  - "text: Royko, count: 6, files: 2,"
  - "text: rsaquo, count: 3, files: 2,"
  - "text: rsmem, count: 5, files: 1,"
  - "text: rsmemjson, count: 2, files: 1,"
  - "text: rstripped, count: 5, files: 1,"
  - "text: rttopo, count: 3, files: 1,"
  - "text: RTTOPO, count: 1, files: 1,"
  - "text: rutopkf, count: 1, files: 1,"
  - "text: rutouf, count: 1, files: 1,"
  - "text: rvalue, count: 1, files: 1,"
  - "text: Rverse, count: 1, files: 1,"
  - "text: saepe, count: 1, files: 1,"
  - "text: safestr, count: 1, files: 1,"
  - "text: salamand, count: 1, files: 1,"
  - "text: salbums, count: 4, files: 1,"
  - "text: Samois, count: 1, files: 1,"
  - "text: Samp, count: 4, files: 1,"
  - "text: SAMP, count: 7, files: 3,"
  - "text: Sams, count: 16, files: 4,"
  - "text: Sandvik, count: 1, files: 1,"
  - "text: sapiente, count: 1, files: 1,"
  - "text: sarticle, count: 1, files: 1,"
  - "text: sativum, count: 1, files: 1,"
  - "text: saveasnew, count: 9, files: 2,"
  - "text: scaleb, count: 5, files: 5,"
  - "text: SCFI, count: 1, files: 1,"
  - "text: schemaeditor, count: 1, files: 1,"
  - "text: schemeless, count: 1, files: 1,"
  - "text: schoolbus, count: 1, files: 1,"
  - "text: schoolclass, count: 2, files: 1,"
  - "text: schoolclasses, count: 4, files: 2,"
  - "text: schwierig, count: 2, files: 1,"
  - "text: scientistref, count: 1, files: 1,"
  - "text: sclass, count: 3, files: 1,"
  - "text: scom, count: 1, files: 1,"
  - "text: scomments, count: 2, files: 1,"
  - "text: screeningnullfk, count: 5, files: 1,"
  - "text: scriptz, count: 2, files: 1,"
  - "text: Scrmbl, count: 2, files: 1,"
  - "text: scrolleable, count: 4, files: 1,"
  - "text: sday, count: 5, files: 1,"
  - "text: sdict, count: 10, files: 4,"
  - "text: sdiff, count: 2, files: 2,"
  - "text: SDOAGGRTYPE, count: 2, files: 1,"
  - "text: SDOD, count: 2, files: 1,"
  - "text: Seán, count: 1, files: 1,"
  - "text: searchablelocation, count: 2, files: 1,"
  - "text: sectionauthor, count: 1, files: 1,"
  - "text: Segoe, count: 3, files: 1,"
  - "text: seire, count: 2, files: 1,"
  - "text: Seite, count: 5, files: 2,"
  - "text: SEITE, count: 2, files: 1,"
  - "text: sekrit, count: 19, files: 4,"
  - "text: Sekrit, count: 11, files: 4,"
  - "text: selectbox, count: 4, files: 1,"
  - "text: selectdate, count: 2, files: 1,"
  - "text: selectfilter, count: 2, files: 2,"
  - "text: selectfilterstacked, count: 1, files: 1,"
  - "text: selfrefer, count: 2, files: 1,"
  - "text: selfreferchild, count: 1, files: 1,"
  - "text: selfreferchildsibling, count: 1, files: 1,"
  - "text: semimajor, count: 2, files: 2,"
  - "text: semiminor, count: 2, files: 2,"
  - "text: sequencename, count: 2, files: 1,"
  - "text: sequi, count: 1, files: 1,"
  - "text: serde, count: 6, files: 2,"
  - "text: serialno, count: 1, files: 1,"
  - "text: sésame, count: 1, files: 1,"
  - "text: sessionmanager, count: 1, files: 1,"
  - "text: setembre, count: 1, files: 1,"
  - "text: setfcn, count: 5, files: 1,"
  - "text: setinputsizes, count: 2, files: 1,"
  - "text: setmainfont, count: 1, files: 1,"
  - "text: setordinate, count: 3, files: 3,"
  - "text: setrecursionlimit, count: 1, files: 1,"
  - "text: setslice, count: 2, files: 2,"
  - "text: settingdbname, count: 2, files: 1,"
  - "text: settinghost, count: 1, files: 1,"
  - "text: settingpassword, count: 2, files: 1,"
  - "text: settingsfile, count: 2, files: 1,"
  - "text: settinguser, count: 1, files: 1,"
  - "text: setval, count: 3, files: 1,"
  - "text: setweight, count: 1, files: 1,"
  - "text: setz, count: 4, files: 4,"
  - "text: sfdsa, count: 1, files: 1,"
  - "text: sfield, count: 1, files: 1,"
  - "text: SFSQL, count: 1, files: 1,"
  - "text: sgmk, count: 2, files: 1,"
  - "text: shapefiles, count: 3, files: 3,"
  - "text: Shaston, count: 1, files: 1,"
  - "text: sheld, count: 2, files: 2,"
  - "text: Shellharbour, count: 5, files: 1,"
  - "text: shetlandponies, count: 2, files: 1,"
  - "text: shetlandpony, count: 5, files: 1,"
  - "text: shetlandrider, count: 3, files: 1,"
  - "text: shortcircuited, count: 1, files: 1,"
  - "text: shortcircuits, count: 2, files: 2,"
  - "text: shortdata, count: 1, files: 1,"
  - "text: shouldfail, count: 1, files: 1,"
  - "text: shouldnotchange, count: 1, files: 1,"
  - "text: showinlineparent, count: 1, files: 1,"
  - "text: shqip, count: 1, files: 1,"
  - "text: signe, count: 2, files: 1,"
  - "text: signedbyte, count: 1, files: 1,"
  - "text: SIGNEDBYTE, count: 1, files: 1,"
  - "text: signes, count: 3, files: 1,"
  - "text: signode, count: 2, files: 1,"
  - "text: SIGPIPE, count: 1, files: 1,"
  - "text: SIGTTOU, count: 3, files: 1,"
  - "text: sillymodel, count: 5, files: 1,"
  - "text: similique, count: 1, files: 1,"
  - "text: simplemodel, count: 1, files: 1,"
  - "text: sindex, count: 1, files: 1,"
  - "text: singulier, count: 2, files: 1,"
  - "text: sirrobin, count: 3, files: 1,"
  - "text: sitemod, count: 3, files: 1,"
  - "text: skaper, count: 5, files: 1,"
  - "text: Slartibartfast, count: 6, files: 3,"
  - "text: Slovenščina, count: 1, files: 1,"
  - "text: slovensky, count: 1, files: 1,"
  - "text: smallfield, count: 2, files: 1,"
  - "text: smallinteger, count: 2, files: 2,"
  - "text: smallserial, count: 1, files: 1,"
  - "text: Smalltown, count: 1, files: 1,"
  - "text: smartif, count: 3, files: 3,"
  - "text: smax, count: 7, files: 2,"
  - "text: smean, count: 7, files: 2,"
  - "text: smigration, count: 5, files: 1,"
  - "text: smin, count: 7, files: 2,"
  - "text: smithj, count: 34, files: 13,"
  - "text: SMITHJ, count: 1, files: 1,"
  - "text: smodel, count: 1, files: 1,"
  - "text: Société, count: 1, files: 1,"
  - "text: sohu, count: 1, files: 1,"
  - "text: Soldner, count: 3, files: 1,"
  - "text: soluta, count: 1, files: 1,"
  - "text: someapp, count: 4, files: 2,"
  - "text: somecase, count: 4, files: 1,"
  - "text: somechildmodel, count: 5, files: 1,"
  - "text: somechoice, count: 5, files: 1,"
  - "text: somecol, count: 8, files: 4,"
  - "text: somecond, count: 1, files: 1,"
  - "text: somedbname, count: 5, files: 1,"
  - "text: somedir, count: 5, files: 1,"
  - "text: somefield, count: 5, files: 2,"
  - "text: someflag, count: 1, files: 1,"
  - "text: somefunc, count: 2, files: 1,"
  - "text: somekey, count: 5, files: 1,"
  - "text: Somelanguage, count: 1, files: 1,"
  - "text: somemodel, count: 4, files: 2,"
  - "text: somename, count: 8, files: 2,"
  - "text: someotherapp, count: 1, files: 1,"
  - "text: someparentmodel, count: 5, files: 1,"
  - "text: somepassword, count: 9, files: 2,"
  - "text: somepath, count: 11, files: 3,"
  - "text: someperm, count: 3, files: 2,"
  - "text: somerandomtag, count: 2, files: 1,"
  - "text: somesubpath, count: 5, files: 1,"
  - "text: sometable, count: 5, files: 1,"
  - "text: sometag, count: 2, files: 1,"
  - "text: somethingcompletelydifferent, count: 3, files: 1,"
  - "text: somethingelse, count: 6, files: 2,"
  - "text: someunknownkey, count: 4, files: 1,"
  - "text: someuser, count: 12, files: 3,"
  - "text: someval, count: 5, files: 1,"
  - "text: somevar, count: 3, files: 2,"
  - "text: sonx, count: 1, files: 1,"
  - "text: Sorani, count: 2, files: 2,"
  - "text: sortedbynamedec, count: 2, files: 2,"
  - "text: sortedbypageandnamedec, count: 2, files: 2,"
  - "text: sortedbypagesandnamedec, count: 2, files: 2,"
  - "text: Soslan, count: 1, files: 1,"
  - "text: Sotto, count: 5, files: 2,"
  - "text: sourcelink, count: 1, files: 1,"
  - "text: sourceraster, count: 2, files: 1,"
  - "text: southponies, count: 2, files: 1,"
  - "text: Southside, count: 3, files: 1,"
  - "text: southtexascity, count: 1, files: 1,"
  - "text: southtexascityft, count: 1, files: 1,"
  - "text: southtexaszipcode, count: 3, files: 1,"
  - "text: Soyland, count: 1, files: 1,"
  - "text: Spartak, count: 1, files: 1,"
  - "text: Spatia, count: 35, files: 16,"
  - "text: spatialite, count: 25, files: 11,"
  - "text: Spatialite, count: 11, files: 5,"
  - "text: SPATIALITE, count: 4, files: 1,"
  - "text: spatialrefsys, count: 4, files: 4,"
  - "text: specialcategory, count: 4, files: 1,"
  - "text: spgist, count: 12, files: 4,"
  - "text: SPGIST, count: 2, files: 1,"
  - "text: sphinxcontrib, count: 1, files: 1,"
  - "text: splitarraywidget, count: 1, files: 1,"
  - "text: splitdatetime, count: 2, files: 2,"
  - "text: splithiddendatetime, count: 2, files: 2,"
  - "text: SQLGIS, count: 3, files: 2,"
  - "text: SQLPK, count: 1, files: 1,"
  - "text: sqls, count: 34, files: 8,"
  - "text: sqlstate, count: 1, files: 1,"
  - "text: srids, count: 3, files: 1,"
  - "text: srlist, count: 5, files: 1,"
  - "text: srpski, count: 1, files: 1,"
  - "text: srtext, count: 11, files: 4,"
  - "text: SRUD, count: 1, files: 1,"
  - "text: sslca, count: 2, files: 1,"
  - "text: ssword, count: 2, files: 1,"
  - "text: stackeds, count: 3, files: 1,"
  - "text: stackoverflow, count: 1, files: 1,"
  - "text: startdocname, count: 1, files: 1,"
  - "text: starttag, count: 2, files: 1,"
  - "text: statemachine, count: 1, files: 1,"
  - "text: statobj, count: 3, files: 1,"
  - "text: stattestmodel, count: 5, files: 1,"
  - "text: stellt, count: 2, files: 1,"
  - "text: stephane, count: 5, files: 1,"
  - "text: Stephane, count: 5, files: 1,"
  - "text: stest, count: 1, files: 1,"
  - "text: stmtcachesize, count: 1, files: 1,"
  - "text: storer, count: 2, files: 1,"
  - "text: strarg, count: 3, files: 2,"
  - "text: Straße, count: 2, files: 1,"
  - "text: strconvert, count: 3, files: 1,"
  - "text: strdq, count: 3, files: 1,"
  - "text: strerror, count: 3, files: 1,"
  - "text: stri, count: 1, files: 1,"
  - "text: stringio, count: 5, files: 1,"
  - "text: stringiterations, count: 3, files: 1,"
  - "text: stringlazy, count: 2, files: 1,"
  - "text: stringtree, count: 2, files: 1,"
  - "text: STRPOS, count: 1, files: 1,"
  - "text: strsq, count: 3, files: 1,"
  - "text: stumpjoke, count: 1, files: 1,"
  - "text: stumpjokeform, count: 4, files: 1,"
  - "text: subarray, count: 2, files: 1,"
  - "text: subauthor, count: 1, files: 1,"
  - "text: subcatalogs, count: 1, files: 1,"
  - "text: subclasscheck, count: 2, files: 1,"
  - "text: subclassmeta, count: 1, files: 1,"
  - "text: subcompound, count: 1, files: 1,"
  - "text: subcontexts, count: 1, files: 1,"
  - "text: SUBDELIMS, count: 5, files: 3,"
  - "text: subelements, count: 4, files: 1,"
  - "text: subexpression, count: 2, files: 2,"
  - "text: sublabel, count: 2, files: 1,"
  - "text: sublanguage, count: 1, files: 1,"
  - "text: sublists, count: 2, files: 1,"
  - "text: sublocales, count: 1, files: 1,"
  - "text: sublogger, count: 1, files: 1,"
  - "text: submatch, count: 1, files: 1,"
  - "text: submod, count: 3, files: 1,"
  - "text: Suboptimally, count: 1, files: 1,"
  - "text: subpackages, count: 2, files: 2,"
  - "text: subparams, count: 2, files: 1,"
  - "text: subpattern, count: 4, files: 3,"
  - "text: Subselects, count: 1, files: 1,"
  - "text: subslug, count: 5, files: 3,"
  - "text: subsubpattern, count: 2, files: 2,"
  - "text: subsubpatterns, count: 2, files: 1,"
  - "text: subsuite, count: 10, files: 2,"
  - "text: subsuites, count: 7, files: 2,"
  - "text: subtag, count: 4, files: 3,"
  - "text: subtemplate, count: 1, files: 1,"
  - "text: subthread, count: 2, files: 1,"
  - "text: subvalue, count: 3, files: 1,"
  - "text: suff, count: 1, files: 1,"
  - "text: sumbodule, count: 1, files: 1,"
  - "text: sunt, count: 3, files: 2,"
  - "text: superduperunguessablepassword, count: 5, files: 1,"
  - "text: superpassword, count: 1, files: 1,"
  - "text: supervillain, count: 5, files: 2,"
  - "text: supremelycomplex, count: 1, files: 1,"
  - "text: Sürname, count: 5, files: 1,"
  - "text: surrogateescape, count: 4, files: 2,"
  - "text: suscipit, count: 1, files: 1,"
  - "text: suspiciousop, count: 2, files: 1,"
  - "text: Svært, count: 2, files: 1,"
  - "text: svenska, count: 1, files: 1,"
  - "text: swallowonetoone, count: 3, files: 2,"
  - "text: Symbola, count: 1, files: 1,"
  - "text: symbole, count: 3, files: 2,"
  - "text: symmetricalfriendship, count: 4, files: 1,"
  - "text: SYSDATE, count: 1, files: 1,"
  - "text: systemwide, count: 1, files: 1,"
  - "text: t'aime, count: 2, files: 1,"
  - "text: tabindex, count: 1, files: 1,"
  - "text: tablenames, count: 3, files: 1,"
  - "text: tabulars, count: 1, files: 1,"
  - "text: tachelhit, count: 1, files: 1,"
  - "text: tagm, count: 4, files: 1,"
  - "text: tagsegg, count: 5, files: 1,"
  - "text: talflmltlm, count: 1, files: 1,"
  - "text: talm, count: 1, files: 1,"
  - "text: tamaño, count: 2, files: 2,"
  - "text: taqbaylit, count: 1, files: 1,"
  - "text: tarballtestproject, count: 3, files: 1,"
  - "text: targetname, count: 1, files: 1,"
  - "text: targetraster, count: 2, files: 1,"
  - "text: Taurog, count: 6, files: 3,"
  - "text: tblname, count: 2, files: 1,"
  - "text: tcgetattr, count: 1, files: 1,"
  - "text: TCSANOW, count: 1, files: 1,"
  - "text: tcsetattr, count: 1, files: 1,"
  - "text: teardwn, count: 2, files: 1,"
  - "text: Techtonik, count: 1, files: 1,"
  - "text: templ, count: 2, files: 1,"
  - "text: templatename, count: 1, files: 1,"
  - "text: templatized, count: 6, files: 2,"
  - "text: tempor, count: 8, files: 5,"
  - "text: tempora, count: 1, files: 1,"
  - "text: temporibus, count: 1, files: 1,"
  - "text: temptext, count: 2, files: 1,"
  - "text: tenetur, count: 1, files: 1,"
  - "text: Tennant, count: 3, files: 1,"
  - "text: termcolors, count: 7, files: 3,"
  - "text: testb, count: 1, files: 1,"
  - "text: testc, count: 1, files: 1,"
  - "text: testcookie, count: 1, files: 1,"
  - "text: Testement, count: 5, files: 1,"
  - "text: testmodelview, count: 2, files: 1,"
  - "text: testnodefaultsnonulls, count: 1, files: 1,"
  - "text: testnodefaultsornulls, count: 5, files: 1,"
  - "text: testobj, count: 9, files: 2,"
  - "text: testpw, count: 16, files: 4,"
  - "text: testser, count: 1, files: 1,"
  - "text: teststring, count: 1, files: 1,"
  - "text: testusername, count: 2, files: 1,"
  - "text: textfielddbcollation, count: 1, files: 1,"
  - "text: textfields, count: 2, files: 2,"
  - "text: textiowrapper, count: 1, files: 1,"
  - "text: textlink, count: 3, files: 2,"
  - "text: textnode, count: 1, files: 1,"
  - "text: texto, count: 2, files: 1,"
  - "text: textrasters, count: 2, files: 2,"
  - "text: tfile, count: 4, files: 1,"
  - "text: tfilter, count: 1, files: 1,"
  - "text: tfilters, count: 1, files: 1,"
  - "text: tfktpuf, count: 1, files: 1,"
  - "text: tfktufwmc, count: 1, files: 1,"
  - "text: tfotpuf, count: 2, files: 1,"
  - "text: tgeoms, count: 5, files: 1,"
  - "text: thedate, count: 2, files: 1,"
  - "text: thefirst, count: 2, files: 2,"
  - "text: thematicmapping, count: 1, files: 1,"
  - "text: thevalue, count: 1, files: 1,"
  - "text: thirdapp, count: 5, files: 1,"
  - "text: Thirroul, count: 4, files: 1,"
  - "text: thisaintright, count: 2, files: 1,"
  - "text: thismodel, count: 4, files: 2,"
  - "text: threadid, count: 1, files: 1,"
  - "text: threadsafe, count: 3, files: 2,"
  - "text: threed, count: 1, files: 1,"
  - "text: threepwood, count: 8, files: 2,"
  - "text: thtml, count: 4, files: 1,"
  - "text: tiene, count: 3, files: 1,"
  - "text: Tiếng, count: 1, files: 1,"
  - "text: Tigr, count: 1, files: 1,"
  - "text: tili, count: 1, files: 1,"
  - "text: timedeltas, count: 4, files: 3,"
  - "text: timelist, count: 1, files: 1,"
  - "text: timespec, count: 1, files: 1,"
  - "text: TIMESTAMPDIFF, count: 1, files: 1,"
  - "text: timestamptz, count: 4, files: 2,"
  - "text: Timestamptz, count: 2, files: 1,"
  - "text: TIMESTAMPTZ, count: 2, files: 1,"
  - "text: timezonewarning, count: 1, files: 1,"
  - "text: TINM, count: 1, files: 1,"
  - "text: Tintin, count: 5, files: 1,"
  - "text: tinyblob, count: 1, files: 1,"
  - "text: TINYINT, count: 1, files: 1,"
  - "text: tinytext, count: 1, files: 1,"
  - "text: TINZ, count: 1, files: 1,"
  - "text: TINZM, count: 1, files: 1,"
  - "text: Tioga, count: 3, files: 3,"
  - "text: tion, count: 1, files: 1,"
  - "text: titlecase, count: 1, files: 1,"
  - "text: titlecollection, count: 2, files: 1,"
  - "text: titletranslation, count: 2, files: 1,"
  - "text: tlds, count: 1, files: 1,"
  - "text: tlink, count: 1, files: 1,"
  - "text: tlinks, count: 2, files: 2,"
  - "text: tmpl, count: 7, files: 2,"
  - "text: tmppath, count: 2, files: 1,"
  - "text: tmpx, count: 3, files: 1,"
  - "text: tmpy, count: 3, files: 1,"
  - "text: tmsg, count: 5, files: 1,"
  - "text: tobytes, count: 2, files: 1,"
  - "text: tocdepth, count: 1, files: 1,"
  - "text: tocdup, count: 1, files: 1,"
  - "text: tocscope, count: 1, files: 1,"
  - "text: toctree, count: 2, files: 1,"
  - "text: tokentestuser, count: 5, files: 1,"
  - "text: toomanyargs, count: 1, files: 1,"
  - "text: topdown, count: 2, files: 2,"
  - "text: Tortall, count: 3, files: 1,"
  - "text: totam, count: 1, files: 1,"
  - "text: towgs, count: 3, files: 2,"
  - "text: TOWGS, count: 8, files: 3,"
  - "text: Trabant, count: 1, files: 1,"
  - "text: trac, count: 1, files: 1,"
  - "text: Trac, count: 1, files: 1,"
  - "text: trackback, count: 2, files: 1,"
  - "text: trackeruser, count: 2, files: 1,"
  - "text: traducido, count: 5, files: 1,"
  - "text: traduire, count: 4, files: 1,"
  - "text: traduzidos, count: 5, files: 1,"
  - "text: trailingnewline, count: 2, files: 1,"
  - "text: transformfunc, count: 5, files: 1,"
  - "text: transifex, count: 1, files: 1,"
  - "text: Transifex, count: 5, files: 1,"
  - "text: TRANSIFEX, count: 2, files: 1,"
  - "text: transifexrc, count: 2, files: 1,"
  - "text: Transn, count: 1, files: 1,"
  - "text: travelled, count: 2, files: 2,"
  - "text: trgm, count: 3, files: 2,"
  - "text: tribble, count: 13, files: 5,"
  - "text: Tribble, count: 28, files: 24,"
  - "text: trimmable, count: 1, files: 1,"
  - "text: Triomphe, count: 1, files: 1,"
  - "text: truespeed, count: 1, files: 1,"
  - "text: truncator, count: 5, files: 1,"
  - "text: Truncator, count: 15, files: 5,"
  - "text: tset, count: 5, files: 1,"
  - "text: tsquery, count: 5, files: 1,"
  - "text: tsrange, count: 1, files: 1,"
  - "text: TSRANGE, count: 2, files: 1,"
  - "text: tstzrange, count: 4, files: 2,"
  - "text: TSTZRANGE, count: 3, files: 2,"
  - "text: tsvector, count: 6, files: 2,"
  - "text: ttag, count: 1, files: 1,"
  - "text: ttags, count: 1, files: 1,"
  - "text: ttext, count: 2, files: 1,"
  - "text: Tunumiisiut, count: 1, files: 1,"
  - "text: tunumiit, count: 3, files: 1,"
  - "text: tupl, count: 4, files: 1,"
  - "text: tuplize, count: 4, files: 1,"
  - "text: ture, count: 3, files: 1,"
  - "text: Türkçe, count: 1, files: 1,"
  - "text: Türkmençe, count: 1, files: 1,"
  - "text: txpa, count: 2, files: 1,"
  - "text: typarray, count: 1, files: 1,"
  - "text: typname, count: 3, files: 2,"
  - "text: typnotnull, count: 1, files: 1,"
  - "text: typtype, count: 1, files: 1,"
  - "text: tzloader, count: 6, files: 2,"
  - "text: tznames, count: 5, files: 1,"
  - "text: tzset, count: 7, files: 4,"
  - "text: uclass, count: 2, files: 1,"
  - "text: udca, count: 1, files: 1,"
  - "text: Udmurt, count: 2, files: 2,"
  - "text: ufffd, count: 4, files: 3,"
  - "text: uffff, count: 2, files: 1,"
  - "text: uidb, count: 21, files: 5,"
  - "text: uido, count: 1, files: 1,"
  - "text: ulitem, count: 5, files: 1,"
  - "text: ullam, count: 1, files: 1,"
  - "text: ullamco, count: 2, files: 2,"
  - "text: Ulrich, count: 1, files: 1,"
  - "text: umasks, count: 3, files: 3,"
  - "text: unarchived, count: 1, files: 1,"
  - "text: Unbekannt, count: 1, files: 1,"
  - "text: uncallable, count: 3, files: 2,"
  - "text: unchangeableobject, count: 2, files: 2,"
  - "text: Unclosable, count: 5, files: 1,"
  - "text: unconfigured, count: 1, files: 1,"
  - "text: undashedvalue, count: 2, files: 1,"
  - "text: unde, count: 1, files: 1,"
  - "text: undeletableobject, count: 1, files: 1,"
  - "text: underscorelookup, count: 2, files: 1,"
  - "text: unexisting, count: 1, files: 1,"
  - "text: ungetting, count: 1, files: 1,"
  - "text: unichr, count: 2, files: 1,"
  - "text: unicity, count: 1, files: 1,"
  - "text: unimportable, count: 1, files: 1,"
  - "text: Uninstantiated, count: 1, files: 1,"
  - "text: unionagg, count: 8, files: 4,"
  - "text: uniquetest, count: 2, files: 1,"
  - "text: uniquetogether, count: 1, files: 1,"
  - "text: Unittests, count: 2, files: 2,"
  - "text: unixtime, count: 1, files: 1,"
  - "text: unkown, count: 1, files: 1,"
  - "text: unmigdep, count: 1, files: 1,"
  - "text: unmigration, count: 1, files: 1,"
  - "text: unmigrations, count: 1, files: 1,"
  - "text: unorderedobject, count: 3, files: 2,"
  - "text: unpackable, count: 1, files: 1,"
  - "text: unparseable, count: 1, files: 1,"
  - "text: unpickable, count: 1, files: 1,"
  - "text: Unpickleable, count: 3, files: 1,"
  - "text: unpickler, count: 2, files: 1,"
  - "text: unpickler's, count: 1, files: 1,"
  - "text: unprojected, count: 2, files: 1,"
  - "text: unpromoted, count: 1, files: 1,"
  - "text: unpythonic, count: 1, files: 1,"
  - "text: unreffing, count: 2, files: 2,"
  - "text: Unregistration, count: 1, files: 1,"
  - "text: unrepresentable, count: 1, files: 1,"
  - "text: unserializer, count: 1, files: 1,"
  - "text: unspec, count: 3, files: 1,"
  - "text: unsquashes, count: 2, files: 1,"
  - "text: unsuported, count: 1, files: 1,"
  - "text: unterminatedstring, count: 2, files: 1,"
  - "text: unvalid, count: 3, files: 2,"
  - "text: uppercased, count: 2, files: 2,"
  - "text: uppercasing, count: 1, files: 1,"
  - "text: urlarticle, count: 2, files: 1,"
  - "text: urlarticles, count: 1, files: 1,"
  - "text: urlencodes, count: 1, files: 1,"
  - "text: urlify, count: 1, files: 1,"
  - "text: urlname, count: 1, files: 1,"
  - "text: urlquote, count: 12, files: 5,"
  - "text: urlquoted, count: 1, files: 1,"
  - "text: urlresolvers, count: 1, files: 1,"
  - "text: urlvar, count: 1, files: 1,"
  - "text: usegmt, count: 3, files: 2,"
  - "text: usepackage, count: 2, files: 1,"
  - "text: usermembership, count: 2, files: 2,"
  - "text: usermessenger, count: 2, files: 1,"
  - "text: usermodel, count: 2, files: 1,"
  - "text: userpref, count: 1, files: 1,"
  - "text: usersettingsholder, count: 1, files: 1,"
  - "text: usted, count: 1, files: 1,"
  - "text: usuario, count: 1, files: 1,"
  - "text: usuarios, count: 2, files: 2,"
  - "text: uuidchild, count: 4, files: 2,"
  - "text: UUIDI, count: 4, files: 1,"
  - "text: uuidmodel, count: 1, files: 1,"
  - "text: uuidparent, count: 1, files: 1,"
  - "text: UUIDPK, count: 34, files: 9,"
  - "text: uuidpkchild, count: 5, files: 1,"
  - "text: uuiduser, count: 2, files: 1,"
  - "text: Uyghur, count: 2, files: 2,"
  - "text: Uživatel, count: 1, files: 1,"
  - "text: validqs, count: 4, files: 1,"
  - "text: valuabletaggeditem, count: 1, files: 1,"
  - "text: valuedtag, count: 2, files: 1,"
  - "text: varkw, count: 7, files: 2,"
  - "text: Vaynberg, count: 2, files: 2,"
  - "text: vcard, count: 7, files: 2,"
  - "text: vcgiso, count: 1, files: 1,"
  - "text: velit, count: 3, files: 2,"
  - "text: veniam, count: 3, files: 2,"
  - "text: Verboden, count: 1, files: 1,"
  - "text: verbosenamepluralprofile, count: 5, files: 1,"
  - "text: verbosenameprofile, count: 5, files: 1,"
  - "text: verificatie, count: 1, files: 1,"
  - "text: veritatis, count: 1, files: 1,"
  - "text: vero, count: 1, files: 1,"
  - "text: versionmodified, count: 3, files: 1,"
  - "text: vertaald, count: 7, files: 2,"
  - "text: VERYLONGMODELN, count: 1, files: 1,"
  - "text: VERYLONGMODELNAME, count: 5, files: 1,"
  - "text: verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz, count: 2, files: 1,"
  - "text: verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz, count: 1, files: 1,"
  - "text: verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz, count: 1, files: 1,"
  - "text: verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz, count: 1, files: 1,"
  - "text: Verzoek, count: 1, files: 1,"
  - "text: vidéo, count: 1, files: 1,"
  - "text: Việt, count: 1, files: 1,"
  - "text: viewfunc, count: 5, files: 1,"
  - "text: viewlink, count: 1, files: 1,"
  - "text: viewsitelink, count: 1, files: 1,"
  - "text: Vilches, count: 3, files: 1,"
  - "text: Virgilio, count: 1, files: 1,"
  - "text: visualisation, count: 1, files: 1,"
  - "text: Vkqkn, count: 1, files: 1,"
  - "text: vlmn, count: 1, files: 1,"
  - "text: vodcast, count: 2, files: 1,"
  - "text: Vodcast, count: 8, files: 3,"
  - "text: Voer, count: 1, files: 1,"
  - "text: voidptr, count: 11, files: 3,"
  - "text: voil, count: 2, files: 1,"
  - "text: voluptas, count: 1, files: 1,"
  - "text: voluptate, count: 3, files: 2,"
  - "text: voluptatem, count: 1, files: 1,"
  - "text: voluptates, count: 1, files: 1,"
  - "text: voluptatibus, count: 1, files: 1,"
  - "text: voluptatum, count: 1, files: 1,"
  - "text: Votre, count: 2, files: 1,"
  - "text: VQOZ, count: 1, files: 1,"
  - "text: vsimem, count: 10, files: 3,"
  - "text: vsizip, count: 2, files: 1,"
  - "text: vtup, count: 2, files: 1,"
  - "text: Wählen, count: 5, files: 1,"
  - "text: weakreferences, count: 1, files: 1,"
  - "text: weakrefs, count: 1, files: 1,"
  - "text: Werror, count: 1, files: 1,"
  - "text: Westfield, count: 5, files: 1,"
  - "text: widgetadmin, count: 3, files: 2,"
  - "text: widgetclass, count: 2, files: 1,"
  - "text: widgetproxy, count: 1, files: 1,"
  - "text: wihout, count: 1, files: 1,"
  - "text: Willison, count: 5, files: 2,"
  - "text: Willkommen, count: 5, files: 1,"
  - "text: winerror, count: 1, files: 1,"
  - "text: wjmbk, count: 1, files: 1,"
  - "text: WKBGEOMETRY, count: 3, files: 1,"
  - "text: wkbsize, count: 3, files: 2,"
  - "text: wkmb, count: 1, files: 1,"
  - "text: wktext, count: 2, files: 1,"
  - "text: WKTGEOMETRY, count: 2, files: 1,"
  - "text: wmpk, count: 3, files: 1,"
  - "text: woohoo, count: 1, files: 1,"
  - "text: wordentry, count: 1, files: 1,"
  - "text: wordlist, count: 1, files: 1,"
  - "text: workhour, count: 3, files: 1,"
  - "text: wref, count: 2, files: 1,"
  - "text: writability, count: 1, files: 1,"
  - "text: wrongvalue, count: 2, files: 1,"
  - "text: WRONLY, count: 5, files: 3,"
  - "text: wsgirequest, count: 5, files: 1,"
  - "text: Wuthering, count: 7, files: 2,"
  - "text: WXXX, count: 2, files: 2,"
  - "text: xadng, count: 1, files: 1,"
  - "text: xamp, count: 2, files: 1,"
  - "text: xample, count: 4, files: 2,"
  - "text: xbcst, count: 1, files: 1,"
  - "text: xdfabc, count: 1, files: 1,"
  - "text: xebst, count: 1, files: 1,"
  - "text: xelatex, count: 1, files: 1,"
  - "text: xfac, count: 5, files: 1,"
  - "text: xfalia, count: 3, files: 1,"
  - "text: xfcgen, count: 1, files: 1,"
  - "text: xfcnster, count: 1, files: 1,"
  - "text: xfco, count: 3, files: 1,"
  - "text: xfcrgen, count: 1, files: 1,"
  - "text: xfctest, count: 5, files: 1,"
  - "text: xform, count: 3, files: 2,"
  - "text: xframe, count: 30, files: 6,"
  - "text: xgettext, count: 11, files: 3,"
  - "text: xindy, count: 1, files: 1,"
  - "text: xinfo, count: 1, files: 1,"
  - "text: xkcd, count: 5, files: 1,"
  - "text: xmlutils, count: 2, files: 2,"
  - "text: xprice, count: 3, files: 1,"
  - "text: xregexp, count: 2, files: 1,"
  - "text: Xtemplate, count: 3, files: 2,"
  - "text: Xutf, count: 1, files: 1,"
  - "text: xxxyyyxxx, count: 5, files: 2,"
  - "text: yadda, count: 2, files: 1,"
  - "text: yday, count: 1, files: 1,"
  - "text: YEARWEEK, count: 2, files: 1,"
  - "text: yfac, count: 5, files: 1,"
  - "text: Zathras, count: 2, files: 1,"
  - "text: Zbse, count: 1, files: 1,"
  - "text: Žćžšđ, count: 19, files: 8,"
  - "text: zerowidth, count: 1, files: 1,"
  - "text: zfile, count: 2, files: 1,"
  - "text: Zimple, count: 3, files: 2,"
  - "text: zipf, count: 2, files: 1,"
  - "text: zoocarfaz, count: 2, files: 1,"
  - "text: zscale, count: 3, files: 1,"
  - "text: zscales, count: 2, files: 1,"
  - "text: ztrans, count: 3, files: 1,"
  - "text: ztranslations, count: 2, files: 1,"
  - "text: ZVJs, count: 1, files: 1,"
  - "text: zwei, count: 1, files: 1,"
  - "text: Αρδευτικό, count: 2, files: 1,"
  - "text: δίκτυο, count: 2, files: 1,"
  - "text: Ελληνικά, count: 1, files: 1,"
  - "text: µóðéø, count: 2, files: 2,"
  - "text: µóðéøß, count: 2, files: 2,"
  - "text: Σαρα, count: 2, files: 1,"
  - "text: беларуская, count: 1, files: 1,"
  - "text: български, count: 1, files: 1,"
  - "text: Водка, count: 1, files: 1,"
  - "text: Григорий, count: 1, files: 1,"
  - "text: Дүйшөмбү, count: 1, files: 1,"
  - "text: Ирон, count: 1, files: 1,"
  - "text: Кыргызча, count: 1, files: 1,"
  - "text: Қазақ, count: 1, files: 1,"
  - "text: Ленин, count: 2, files: 1,"
  - "text: Македонски, count: 1, files: 1,"
  - "text: метка, count: 6, files: 2,"
  - "text: морях, count: 1, files: 1,"
  - "text: оператора, count: 6, files: 2,"
  - "text: привет, count: 1, files: 1,"
  - "text: Русский, count: 1, files: 1,"
  - "text: собака, count: 3, files: 1,"
  - "text: српски, count: 1, files: 1,"
  - "text: Татарча, count: 1, files: 1,"
  - "text: тест, count: 1, files: 1,"
  - "text: тоҷикӣ, count: 1, files: 1,"
  - "text: Удмурт, count: 1, files: 1,"
  - "text: Українська, count: 1, files: 1,"
  - "text: чубака, count: 1, files: 1,"
  - "text: южных, count: 1, files: 1,"
  - "text: Юникод, count: 2, files: 1,"
  - "text: ქართული, count: 1, files: 1,"
  - "text: հայերեն, count: 1, files: 1,"
  - "text: יוניקוד, count: 1, files: 1,"
  - "text: עברית, count: 1, files: 1,"
  - "text: أحمد, count: 2, files: 1,"
  - "text: ئۇيغۇرچە, count: 1, files: 1,"
  - "text: اردو, count: 1, files: 1,"
  - "text: الجزائرية, count: 1, files: 1,"
  - "text: العربية, count: 1, files: 1,"
  - "text: العربيّة, count: 1, files: 1,"
  - "text: ساعت, count: 1, files: 1,"
  - "text: سلام, count: 2, files: 1,"
  - "text: فارسی, count: 1, files: 1,"
  - "text: کاتژمێر, count: 1, files: 1,"
  - "text: کوردی, count: 1, files: 1,"
  - "text: उदाहरण, count: 3, files: 1,"
  - "text: नेपाली, count: 1, files: 1,"
  - "text: परीक्ष, count: 2, files: 1,"
  - "text: परीक्षा, count: 1, files: 1,"
  - "text: मँडराने, count: 3, files: 3,"
  - "text: मराठी, count: 1, files: 1,"
  - "text: मेरी, count: 3, files: 3,"
  - "text: वाली, count: 3, files: 3,"
  - "text: सर्पमीनो, count: 3, files: 3,"
  - "text: தமிழ், count: 1, files: 1,"
  - "text: తెలుగు, count: 1, files: 1,"
  - "text: മലയാളം, count: 1, files: 1,"
  - "text: ตุลาคม, count: 1, files: 1,"
  - "text: ภาษาไทย, count: 1, files: 1,"
  - "text: မြန်မာဘာသာ, count: 1, files: 1,"
  - "text: ឆ្នា, count: 2, files: 1,"
