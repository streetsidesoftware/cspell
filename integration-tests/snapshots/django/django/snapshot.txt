
Repository: django/django
Url: "https://github.com/django/django.git"
Args: ["--issues-summary-report","**/*.{md,py}"]
Lines:
 CSpell: Files checked: 2792, Issues found: 7985 in 899 files.
 exit code: 1
django/__init__.py:12:26     - Unknown word (urlresolvers) -- Set the thread-local urlresolvers script prefix if `set
django/apps/registry.py:134:40    - Unknown word (unconfigured) -- not ready" is due to unconfigured settings, accessing
django/apps/registry.py:32:49     - Unknown word (reexecute)  -- module safely (it could reexecute initialization code
django/apps/registry.py:45:19     - Unknown word (autoreloader) -- # For the autoreloader.
django/conf/__init__.py:195:27    - Unknown word (tzset)      -- if hasattr(time, "tzset") and self.TIME_ZONE
django/conf/__init__.py:205:18    - Unknown word (tzset)      -- time.tzset()
django/conf/global_settings.py:111:26    - Unknown word (Luxembourgish) -- "lb", gettext_noop("Luxembourgish")),
django/conf/global_settings.py:120:36    - Unknown word (Bokmål)        -- gettext_noop("Norwegian Bokmål")),
django/conf/global_settings.py:145:27    - Unknown word (Udmurt)        -- udm", gettext_noop("Udmurt")),
django/conf/global_settings.py:146:26    - Unknown word (Uyghur)        -- "ug", gettext_noop("Uyghur")),
django/conf/global_settings.py:244:43    - Unknown word (systemwide)    -- allowed to visit any page, systemwide. Use this for bad
django/conf/global_settings.py:251:25    - Unknown word (sohu)          -- re.compile(r'^sohu-search'),
django/conf/global_settings.py:264:25    - Unknown word (phpmyadmin)    -- re.compile(r'^/phpmyadmin/'),
django/conf/global_settings.py:57:27     - Unknown word (Asturian)   -- ast", gettext_noop("Asturian")),
django/conf/global_settings.py:65:44     - Unknown word (Sorani)     -- noop("Central Kurdish (Sorani)")),
django/conf/locale/__init__.py:105:24    - Unknown word (Deutsch)      -- "name_local": "Deutsch",
django/conf/locale/__init__.py:111:24    - Unknown word (dolnoserbski) -- "name_local": "dolnoserbski",
django/conf/locale/__init__.py:117:24    - Unknown word (Ελληνικά)     -- "name_local": "Ελληνικά",
django/conf/locale/__init__.py:183:24    - Unknown word (eesti)        -- "name_local": "eesti",
django/conf/locale/__init__.py:195:24    - Unknown word (فارسی)        -- "name_local": "فارسی",
django/conf/locale/__init__.py:213:24    - Unknown word (frysk)        -- "name_local": "frysk",
django/conf/locale/__init__.py:219:24    - Unknown word (Gaeilge)      -- "name_local": "Gaeilge",
django/conf/locale/__init__.py:21:24     - Unknown word (العربيّة)   -- "name_local": "العربيّة",
django/conf/locale/__init__.py:225:24    - Unknown word (Gàidhlig)     -- "name_local": "Gàidhlig",
django/conf/locale/__init__.py:231:24    - Unknown word (galego)       -- "name_local": "galego",
django/conf/locale/__init__.py:237:24    - Unknown word (עברית)        -- "name_local": "עברית",
django/conf/locale/__init__.py:249:24    - Unknown word (Hrvatski)     -- "name_local": "Hrvatski",
django/conf/locale/__init__.py:255:24    - Unknown word (hornjoserbsce) -- "name_local": "hornjoserbsce",
django/conf/locale/__init__.py:267:24    - Unknown word (հայերեն)       -- "name_local": "հայերեն",
django/conf/locale/__init__.py:27:24     - Unknown word (العربية)    -- "name_local": "العربية الجزائرية",
django/conf/locale/__init__.py:27:32     - Unknown word (الجزائرية)  -- name_local": "العربية الجزائرية",
django/conf/locale/__init__.py:285:24    - Unknown word (Bahasa)        -- "name_local": "Bahasa Indonesia",
django/conf/locale/__init__.py:291:24    - Unknown word (Asụsụ)         -- "name_local": "Asụsụ Ìgbò",
django/conf/locale/__init__.py:291:30    - Unknown word (Ìgbò)          -- name_local": "Asụsụ Ìgbò",
django/conf/locale/__init__.py:297:24    - Unknown word (Íslenska)      -- "name_local": "Íslenska",
django/conf/locale/__init__.py:303:24    - Unknown word (italiano)      -- "name_local": "italiano",
django/conf/locale/__init__.py:315:24    - Unknown word (ქართული)       -- "name_local": "ქართული",
django/conf/locale/__init__.py:321:24    - Unknown word (taqbaylit)     -- "name_local": "taqbaylit",
django/conf/locale/__init__.py:327:24    - Unknown word (Қазақ)         -- "name_local": "Қазақ",
django/conf/locale/__init__.py:32:18     - Unknown word (Asturian)   -- "name": "Asturian",
django/conf/locale/__init__.py:33:24     - Unknown word (asturianu)  -- "name_local": "asturianu",
django/conf/locale/__init__.py:351:24    - Unknown word (Кыргызча)      -- "name_local": "Кыргызча",
django/conf/locale/__init__.py:356:18    - Unknown word (Luxembourgish) -- "name": "Luxembourgish",
django/conf/locale/__init__.py:357:24    - Unknown word (Lëtzebuergesch) -- "name_local": "Lëtzebuergesch",
django/conf/locale/__init__.py:363:24    - Unknown word (Lietuviškai)    -- "name_local": "Lietuviškai",
django/conf/locale/__init__.py:369:24    - Unknown word (latviešu)       -- "name_local": "latviešu",
django/conf/locale/__init__.py:375:24    - Unknown word (Македонски)     -- "name_local": "Македонски",
django/conf/locale/__init__.py:381:24    - Unknown word (മലയാളം)         -- "name_local": "മലയാളം",
django/conf/locale/__init__.py:393:24    - Unknown word (मराठी)          -- "name_local": "मराठी",
django/conf/locale/__init__.py:399:24    - Unknown word (Bahasa)         -- "name_local": "Bahasa Melayu",
django/conf/locale/__init__.py:399:31    - Unknown word (Melayu)         -- name_local": "Bahasa Melayu",
django/conf/locale/__init__.py:39:24     - Unknown word (Azərbaycanca) -- "name_local": "Azərbaycanca",
django/conf/locale/__init__.py:405:24    - Unknown word (မြန်မာဘာသာ)     -- "name_local": "မြန်မာဘာသာ",
django/conf/locale/__init__.py:410:28    - Unknown word (Bokmal)         -- "name": "Norwegian Bokmal",
django/conf/locale/__init__.py:411:24    - Unknown word (norsk)          -- "name_local": "norsk (bokmål)",
django/conf/locale/__init__.py:411:31    - Unknown word (bokmål)         -- name_local": "norsk (bokmål)",
django/conf/locale/__init__.py:417:24    - Unknown word (नेपाली)         -- "name_local": "नेपाली",
django/conf/locale/__init__.py:423:24    - Unknown word (Nederlands)     -- "name_local": "Nederlands",
django/conf/locale/__init__.py:429:24    - Unknown word (norsk)          -- "name_local": "norsk (nynorsk)",
django/conf/locale/__init__.py:435:24    - Unknown word (norsk)          -- "name_local": "norsk",
django/conf/locale/__init__.py:441:24    - Unknown word (Ирон)           -- "name_local": "Ирон",
django/conf/locale/__init__.py:453:24    - Unknown word (polski)         -- "name_local": "polski",
django/conf/locale/__init__.py:459:24    - Unknown word (Português)      -- "name_local": "Português",
django/conf/locale/__init__.py:45:24     - Unknown word (беларуская)   -- "name_local": "беларуская",
django/conf/locale/__init__.py:465:24    - Unknown word (Português)      -- "name_local": "Português Brasileiro",
django/conf/locale/__init__.py:465:34    - Unknown word (Brasileiro)     -- name_local": "Português Brasileiro",
django/conf/locale/__init__.py:477:24    - Unknown word (Русский)        -- "name_local": "Русский",
django/conf/locale/__init__.py:483:24    - Unknown word (slovensky)      -- "name_local": "slovensky",
django/conf/locale/__init__.py:489:24    - Unknown word (Slovenščina)    -- "name_local": "Slovenščina",
django/conf/locale/__init__.py:495:24    - Unknown word (shqip)          -- "name_local": "shqip",
django/conf/locale/__init__.py:501:24    - Unknown word (српски)         -- "name_local": "српски",
django/conf/locale/__init__.py:507:24    - Unknown word (srpski)         -- "name_local": "srpski (latinica)",
django/conf/locale/__init__.py:507:32    - Unknown word (latinica)       -- name_local": "srpski (latinica)",
django/conf/locale/__init__.py:513:24    - Unknown word (svenska)        -- "name_local": "svenska",
django/conf/locale/__init__.py:519:24    - Unknown word (Kiswahili)      -- "name_local": "Kiswahili",
django/conf/locale/__init__.py:51:24     - Unknown word (български)    -- "name_local": "български",
django/conf/locale/__init__.py:525:24    - Unknown word (தமிழ்)          -- "name_local": "தமிழ்",
django/conf/locale/__init__.py:531:24    - Unknown word (తెలుగు)         -- "name_local": "తెలుగు",
django/conf/locale/__init__.py:537:24    - Unknown word (тоҷикӣ)         -- "name_local": "тоҷикӣ",
django/conf/locale/__init__.py:543:24    - Unknown word (ภาษาไทย)        -- "name_local": "ภาษาไทย",
django/conf/locale/__init__.py:549:24    - Unknown word (Türkmençe)      -- "name_local": "Türkmençe",
django/conf/locale/__init__.py:555:24    - Unknown word (Türkçe)         -- "name_local": "Türkçe",
django/conf/locale/__init__.py:561:24    - Unknown word (Татарча)        -- "name_local": "Татарча",
django/conf/locale/__init__.py:566:18    - Unknown word (Udmurt)         -- "name": "Udmurt",
django/conf/locale/__init__.py:567:24    - Unknown word (Удмурт)         -- "name_local": "Удмурт",
django/conf/locale/__init__.py:572:18    - Unknown word (Uyghur)         -- "name": "Uyghur",
django/conf/locale/__init__.py:573:24    - Unknown word (ئۇيغۇرچە)       -- "name_local": "ئۇيغۇرچە",
django/conf/locale/__init__.py:579:24    - Unknown word (Українська)     -- "name_local": "Українська",
django/conf/locale/__init__.py:585:24    - Unknown word (اردو)           -- "name_local": "اردو",
django/conf/locale/__init__.py:591:24    - Unknown word (oʻzbek)         -- "name_local": "oʻzbek tili",
django/conf/locale/__init__.py:591:31    - Unknown word (tili)           -- name_local": "oʻzbek tili",
django/conf/locale/__init__.py:597:24    - Unknown word (Tiếng)         -- "name_local": "Tiếng Việt",
django/conf/locale/__init__.py:597:31    - Unknown word (Việt)          -- name_local": "Tiếng Việt",
django/conf/locale/__init__.py:63:24     - Unknown word (brezhoneg)    -- "name_local": "brezhoneg",
django/conf/locale/__init__.py:69:24     - Unknown word (bosanski)     -- "name_local": "bosanski",
django/conf/locale/__init__.py:75:24     - Unknown word (català)       -- "name_local": "català",
django/conf/locale/__init__.py:80:35     - Unknown word (Sorani)       -- : "Central Kurdish (Sorani)",
django/conf/locale/__init__.py:81:24     - Unknown word (کوردی)        -- "name_local": "کوردی",
django/conf/locale/__init__.py:87:24     - Unknown word (česky)        -- "name_local": "česky",
django/conf/locale/__init__.py:93:24     - Unknown word (Cymraeg)      -- "name_local": "Cymraeg",
django/conf/locale/__init__.py:99:24     - Unknown word (dansk)        -- "name_local": "dansk",
django/conf/locale/ckb/formats.py:7:27      - Unknown word (کاتژمێر)    -- DATETIME_FORMAT = "j F Y، کاتژمێر G:i"
django/conf/locale/cy/formats.py:12:27     - Unknown word (Dydd)       -- DAY_OF_WEEK = 1  # 'Dydd Llun'
django/conf/locale/cy/formats.py:12:32     - Unknown word (Llun)       -- OF_WEEK = 1  # 'Dydd Llun'
django/conf/locale/cy/formats.py:5:30      - Unknown word (Hydref)     -- FORMAT = "j F Y"  # '25 Hydref 2006'
django/conf/locale/cy/formats.py:7:37      - Unknown word (Hydref)     -- = "j F Y, P"  # '25 Hydref 2006, 2:30 y.b.'
django/conf/locale/cy/formats.py:8:31      - Unknown word (Hydref)     -- MONTH_FORMAT = "F Y"  # 'Hydref 2006'
django/conf/locale/cy/formats.py:9:33      - Unknown word (Hydref)     -- FORMAT = "j F"  # '25 Hydref'
django/conf/locale/eo/formats.py:12:34     - Unknown word (lundo)      -- WEEK = 1  # Monday (lundo)
django/conf/locale/es_MX/formats.py:24:72     - Unknown word (SCFI)       -- less common): NOM-008-SCFI-2002
django/conf/locale/eu/formats.py:12:26     - Unknown word (Astelehena) -- FIRST_DAY_OF_WEEK = 1  # Astelehena
django/conf/locale/fa/formats.py:7:27      - Unknown word (ساعت)       -- DATETIME_FORMAT = "j F Y، ساعت G:i"
django/conf/locale/fr_CA/formats.py:12:26     - Unknown word (Dimanche)   -- FIRST_DAY_OF_WEEK = 0  # Dimanche
django/conf/locale/fr_CA/formats.py:5:29      - Unknown word (janvier)    -- FORMAT = "j F Y"  # 31 janvier 2024
django/conf/locale/fr_CA/formats.py:7:46      - Unknown word (janvier)    -- H\xa0h\xa0i" # 31 janvier 2024, 13 h 40
django/conf/locale/it/formats.py:12:26     - Unknown word (Lunedì)     -- FIRST_DAY_OF_WEEK = 1  # Lunedì
django/conf/locale/it/formats.py:5:29      - Unknown word (Ottobre)    -- FORMAT = "d F Y"  # 25 Ottobre 2006
django/conf/locale/it/formats.py:7:36      - Unknown word (Mercoledì)  -- FORMAT = "l d F Y H:i"  # Mercoledì 25 Ottobre 2006 14:
django/conf/locale/it/formats.py:7:49      - Unknown word (Ottobre)    -- H:i" # Mercoledì 25 Ottobre 2006 14:30
django/conf/locale/it/formats.py:8:30      - Unknown word (Ottobre)    -- MONTH_FORMAT = "F Y"  # Ottobre 2006
django/conf/locale/it/formats.py:9:32      - Unknown word (Ottobre)    -- FORMAT = "j F"  # 25 Ottobre
django/conf/locale/km/formats.py:5:23      - Unknown word (ឆ្នា)       -- DATE_FORMAT = "j ខែ F ឆ្នាំ Y"
django/conf/locale/km/formats.py:7:27      - Unknown word (ឆ្នា)       -- DATETIME_FORMAT = "j ខែ F ឆ្នាំ Y, G:i"
django/conf/locale/ky/formats.py:12:26     - Unknown word (Дүйшөмбү)   -- FIRST_DAY_OF_WEEK = 1  # Дүйшөмбү, Monday
django/conf/locale/nb/formats.py:25:28     - Unknown word (oktober)    -- %d. %B %Y",  # '25. oktober 2006'
django/conf/locale/nb/formats.py:26:26     - Unknown word (oktober)    -- "%d %B %Y",  # '25 oktober 2006'
django/conf/locale/nl/formats.py:12:44     - Unknown word (maandag)    -- # Monday (in Dutch 'maandag')
django/conf/locale/nl/formats.py:24:26     - Unknown word (januari)    -- "%d %B %Y",  # '20 januari 2009'
django/conf/locale/nl/formats.py:5:30      - Unknown word (januari)    -- FORMAT = "j F Y"  # '20 januari 2009'
django/conf/locale/nl/formats.py:7:38      - Unknown word (januari)    -- "j F Y H:i"  # '20 januari 2009 15:23'
django/conf/locale/nl/formats.py:8:31      - Unknown word (januari)    -- MONTH_FORMAT = "F Y"  # 'januari 2009'
django/conf/locale/nl/formats.py:9:33      - Unknown word (januari)    -- FORMAT = "j F"  # '20 januari'
django/conf/locale/nn/formats.py:25:28     - Unknown word (oktober)    -- %d. %B %Y",  # '25. oktober 2006'
django/conf/locale/nn/formats.py:26:26     - Unknown word (oktober)    -- "%d %B %Y",  # '25 oktober 2006'
django/conf/locale/pl/formats.py:20:28     - Unknown word (października) -- %d. %B %Y",  # '25. października 2006'
django/conf/locale/pt/formats.py:23:35     - Unknown word (Outubro)    -- B de %Y",  # '25 de Outubro de 2006'
django/conf/locale/pt/formats.py:24:33     - Unknown word (Outubro)    -- de %B, %Y",  # '25 de Outubro, 2006'
django/conf/locale/pt_BR/formats.py:21:35     - Unknown word (Outubro)    -- B de %Y",  # '25 de Outubro de 2006'
django/conf/locale/pt_BR/formats.py:22:33     - Unknown word (Outubro)    -- de %B, %Y",  # '25 de Outubro, 2006'
django/conf/locale/th/formats.py:19:23     - Unknown word (ตุลาคม)     -- "%d %B %Y",  # 25 ตุลาคม 2006
django/conf/locale/tr/formats.py:12:26     - Unknown word (Pazartesi)  -- FIRST_DAY_OF_WEEK = 1  # Pazartesi
django/conf/locale/tr/formats.py:20:26     - Unknown word (Ekim)       -- "%d %B %Y",  # '25 Ekim 2006'
django/conf/locale/uz/formats.py:18:29     - Unknown word (Oktabr)     -- %B, %Y-yil",  # '25-Oktabr, 2006-yil'
django/conf/locale/uz/formats.py:24:38     - Unknown word (Oktabr)     -- yil %H:%M:%S",  # '25-Oktabr, 2006-yil 14:30:59'
django/conf/locale/uz/formats.py:25:41     - Unknown word (Oktabr)     -- H:%M:%S.%f", # '25-Oktabr, 2006-yil 14:30:59.
django/conf/locale/uz/formats.py:26:35     - Unknown word (Oktabr)     -- Y-yil %H:%M",  # '25-Oktabr, 2006-yil 14:30'
django/contrib/admin/actions.py:25:5      - Unknown word (childs)     -- childs (foreignkeys), a "permission
django/contrib/admin/checks.py:19:22     - Unknown word (classinfo)  -- def _issubclass(cls, classinfo):
django/contrib/admin/checks.py:25:32     - Unknown word (classinfo)  -- return issubclass(cls, classinfo)
django/contrib/admin/helpers.py:18:32     - Unknown word (flatatt)    -- django.forms.utils import flatatt
django/contrib/admin/helpers.py:246:13    - Unknown word (flatatt)    -- flatatt(attrs),
django/contrib/admin/options.py:1406:59   - Unknown word (urlquote)    -- a href="{}">{}</a>', urlquote(obj_url), obj)
django/contrib/admin/options.py:1445:15   - Unknown word (saveasnew)   -- "_saveasnew" in request.POST
django/contrib/admin/options.py:1531:55   - Unknown word (urlquote)    -- a href="{}">{}</a>', urlquote(request.path), obj)
django/contrib/admin/options.py:1832:43   - Unknown word (saveasnew)   -- method == "POST" and "_saveasnew" in request.POST:
django/contrib/admin/options.py:1950:19   - Unknown word (saveasnew)   -- and "_saveasnew" in request.POST
django/contrib/admin/options.py:224:13    - Unknown word (klass)      -- for klass in db_field.__class
django/contrib/admin/options.py:225:16    - Unknown word (klass)      -- if klass in self.formfield_overrides
django/contrib/admin/options.py:226:68    - Unknown word (klass)      -- formfield_overrides[klass]), **kwargs}
django/contrib/admin/options.py:2325:38   - Unknown word (saveasnew)   -- "save_as_new": "_saveasnew" in request.POST,
django/contrib/admin/options.py:768:14    - Unknown word (urlify)     -- "urlify.js",
django/contrib/admin/options.py:769:14    - Unknown word (prepopulate) -- "prepopulate.js",
django/contrib/admin/options.py:770:21    - Unknown word (xregexp)     -- "vendor/xregexp/xregexp%s.js" % extra
django/contrib/admin/options.py:770:29    - Unknown word (xregexp)     -- "vendor/xregexp/xregexp%s.js" % extra,
django/contrib/admin/options.py:8:35      - Unknown word (urlquote)   -- parse import quote as urlquote
django/contrib/admin/sites.py:85:9      - Unknown word (modeladmins) -- modeladmins = (
django/contrib/admin/sites.py:88:27     - Unknown word (modeladmins) -- for modeladmin in modeladmins:
django/contrib/admin/static/admin/css/vendor/select2/LICENSE-SELECT2.md:3:43      - Unknown word (Vaynberg)   -- 7 Kevin Brown, Igor Vaynberg, and Select2 contributors
django/contrib/admin/static/admin/js/vendor/select2/LICENSE.md:3:43      - Unknown word (Vaynberg)   -- 7 Kevin Brown, Igor Vaynberg, and Select2 contributors
django/contrib/admin/templatetags/admin_urls.py:12:11     - Unknown word (urlname)    -- def admin_urlname(value, arg):
django/contrib/admin/templatetags/admin_urls.py:17:11     - Unknown word (urlquote)   -- def admin_urlquote(value):
django/contrib/admin/templatetags/base.py:14:26     - Unknown word (varkw)      -- params, varargs, varkw, defaults, kwonly, kwonly
django/contrib/admin/templatetags/base.py:14:43     - Unknown word (kwonly)     -- varargs, varkw, defaults, kwonly, kwonly_defaults, _
django/contrib/admin/templatetags/base.py:14:51     - Unknown word (kwonly)     -- varkw, defaults, kwonly, kwonly_defaults, _ = getfullargspec
django/contrib/admin/templatetags/base.py:23:13     - Unknown word (varkw)      -- varkw,
django/contrib/admin/templatetags/base.py:25:13     - Unknown word (kwonly)     -- kwonly,
django/contrib/admin/templatetags/base.py:26:13     - Unknown word (kwonly)     -- kwonly_defaults,
django/contrib/admin/tests.py:221:39    - Unknown word (klass)      -- class(self, selector, klass):
django/contrib/admin/tests.py:224:10    - Unknown word (klass)      -- `klass`.
django/contrib/admin/tests.py:234:19    - Unknown word (klass)      -- .find(klass)
django/contrib/admin/views/main.py:306:53    - Unknown word (doseq)      -- urlencode(sorted(p.items()), doseq=True)
django/contrib/admin/widgets.py:15:37     - Unknown word (urlquote)   -- utils.html import smart_urlquote
django/contrib/admin/widgets.py:17:31     - Unknown word (Truncator)  -- django.utils.text import Truncator
django/contrib/admin/widgets.py:213:16    - Unknown word (Truncator)    -- return Truncator(obj).words(14), url
django/contrib/admin/widgets.py:396:19    - Unknown word (urlquote)     -- smart_urlquote(context["widget"]["value
django/contrib/admin/widgets.py:44:48     - Unknown word (selectfilter) -- attrs"]["class"] = "selectfilter"
django/contrib/admindocs/utils.py:103:27    - Unknown word (rolename)   -- create_reference_role(rolename, urlbase):
django/contrib/admindocs/utils.py:105:25    - Unknown word (rolename)   -- is_case_sensitive = rolename in ["template", "view
django/contrib/admindocs/utils.py:113:13    - Unknown word (refuri)     -- refuri=(
django/contrib/admindocs/utils.py:124:56    - Unknown word (rolename)   -- register_canonical_role(rolename, _role)
django/contrib/admindocs/utils.py:136:9     - Unknown word (refuri)     -- refuri=(
django/contrib/admindocs/utils.py:24:9      - Unknown word (klass)      -- klass = view_func.view_class
django/contrib/admindocs/utils.py:25:19     - Unknown word (klass)      -- return f"{klass.__module__}.{klass.
django/contrib/admindocs/utils.py:25:38     - Unknown word (klass)      -- {klass.__module__}.{klass.__qualname__}"
django/contrib/admindocs/utils.py:64:10     - Unknown word (doctitle)   -- "doctitle_xform": True,
django/contrib/admindocs/utils.py:64:19     - Unknown word (xform)      -- "doctitle_xform": True,
django/contrib/admindocs/views.py:174:35    - Unknown word (myview)     -- # 'mymodule.views.myview' -> 'mymodule.views
django/contrib/admindocs/views.py:174:65    - Unknown word (myview)     -- 'mymodule.views', 'myview').
django/contrib/admindocs/views.py:181:22    - Unknown word (klass)      -- mod, klass = get_mod_func(mod)
django/contrib/admindocs/views.py:182:60    - Unknown word (klass)      -- import_module(mod), klass), func)
django/contrib/auth/__init__.py:130:11    - Unknown word (aauthenticate) -- async def aauthenticate(request=None, **credentials
django/contrib/auth/__init__.py:134:34    - Unknown word (aauthenticate) -- user = await backend.aauthenticate(request, **credentials
django/contrib/auth/__init__.py:146:29    - Unknown word (asend)         -- await user_login_failed.asend(
django/contrib/auth/__init__.py:188:11    - Unknown word (alogin)        -- async def alogin(request, user, backend
django/contrib/auth/__init__.py:192:30    - Unknown word (auser)         -- user = await request.auser()
django/contrib/auth/__init__.py:196:30    - Unknown word (ahas)          -- await request.session.ahas_key(SESSION_KEY):
django/contrib/auth/__init__.py:207:35    - Unknown word (aflush)        -- await request.session.aflush()
django/contrib/auth/__init__.py:209:31    - Unknown word (acycle)        -- await request.session.acycle_key()
django/contrib/auth/__init__.py:219:26    - Unknown word (asend)         -- await user_logged_in.asend(sender=user.__class
django/contrib/auth/__init__.py:240:11    - Unknown word (alogout)       -- async def alogout(request):
django/contrib/auth/__init__.py:244:30    - Unknown word (auser)         -- = getattr(request, "auser", None)
django/contrib/auth/__init__.py:249:27    - Unknown word (asend)         -- await user_logged_out.asend(sender=user.__class
django/contrib/auth/__init__.py:250:27    - Unknown word (aflush)        -- await request.session.aflush()
django/contrib/auth/__init__.py:350:47    - Unknown word (acycle)        -- await request.session.acycle_key()
django/contrib/auth/__init__.py:353:47    - Unknown word (aflush)        -- await request.session.aflush()
django/contrib/auth/__init__.py:382:27    - Unknown word (acycle)        -- await request.session.acycle_key()
django/contrib/auth/backends.py:14:15     - Unknown word (aauthenticate) -- async def aauthenticate(self, request, **kwargs
django/contrib/auth/backends.py:176:15    - Unknown word (ahas)          -- async def ahas_perm(self, user_obj
django/contrib/auth/backends.py:177:53    - Unknown word (ahas)          -- active and await super().ahas_perm(user_obj, perm
django/contrib/auth/backends.py:188:15    - Unknown word (ahas)          -- async def ahas_module_perms(self, user
django/contrib/auth/backends.py:295:15    - Unknown word (aauthenticate) -- async def aauthenticate(self, request, remote
django/contrib/auth/backends.py:315:27    - Unknown word (aconfigure)    -- user = await self.aconfigure_user(request, user,
django/contrib/auth/backends.py:335:15    - Unknown word (aconfigure)    -- async def aconfigure_user(self, request,
django/contrib/auth/backends.py:50:15     - Unknown word (ahas)          -- async def ahas_perm(self, user_obj
django/contrib/auth/backends.py:74:15     - Unknown word (aauthenticate) -- async def aauthenticate(self, request, username
django/contrib/auth/backends.py:86:27     - Unknown word (acheck)        -- if await user.acheck_password(password) and
django/contrib/auth/base_user.py:114:15    - Unknown word (acheck)     -- async def acheck_password(self, raw_password
django/contrib/auth/base_user.py:11:5      - Unknown word (acheck)     -- acheck_password,
django/contrib/auth/base_user.py:123:22    - Unknown word (acheck)     -- return await acheck_password(raw_password
django/contrib/auth/context_processors.py:16:33     - Unknown word (someapp)    -- To fix 'item in perms.someapp' and __getitem__ interaction
django/contrib/auth/context_processors.py:40:20     - Unknown word (someapp)    -- Lookup by "someapp" or "someapp.someperm
django/contrib/auth/context_processors.py:40:33     - Unknown word (someapp)    -- Lookup by "someapp" or "someapp.someperm" in perms.
django/contrib/auth/context_processors.py:40:41     - Unknown word (someperm)   -- someapp" or "someapp.someperm" in perms.
django/contrib/auth/decorators.py:114:31    - Unknown word (ahas)       -- if await user.ahas_perms(perms):
django/contrib/auth/decorators.py:41:17     - Unknown word (auser)      -- auser = await request.auser
django/contrib/auth/decorators.py:41:39     - Unknown word (auser)      -- auser = await request.auser()
django/contrib/auth/decorators.py:43:49     - Unknown word (auser)      -- pass = await test_func(auser)
django/contrib/auth/decorators.py:45:64     - Unknown word (auser)      -- to_async(test_func)(auser)
django/contrib/auth/hashers.py:370:20    - Unknown word (PKCS)       -- recommended by PKCS #5. This is compatible
django/contrib/auth/hashers.py:372:5     - Unknown word (PKCS)       -- PKCS5_PBKDF2_HMAC_SHA1()
django/contrib/auth/hashers.py:498:23    - Unknown word (gensalt)    -- return bcrypt.gensalt(self.rounds)
django/contrib/auth/hashers.py:506:28    - Unknown word (hexlify)    -- # Use binascii.hexlify() because a hex encoded
django/contrib/auth/hashers.py:507:33    - Unknown word (hexlify)    -- password = binascii.hexlify(self.digest(password
django/contrib/auth/hashers.py:509:23    - Unknown word (hashpw)     -- data = bcrypt.hashpw(password, salt)
django/contrib/auth/hashers.py:513:27    - Unknown word (algostr)    -- algorithm, empty, algostr, work_factor, data
django/contrib/auth/hashers.py:517:14    - Unknown word (algostr)    -- "algostr": algostr,
django/contrib/auth/hashers.py:517:24    - Unknown word (algostr)    -- "algostr": algostr,
django/contrib/auth/hashers.py:578:5     - Unknown word (maxmem)     -- maxmem = 0
django/contrib/auth/hashers.py:593:13    - Unknown word (maxmem)     -- maxmem=self.maxmem,
django/contrib/auth/hashers.py:593:25    - Unknown word (maxmem)     -- maxmem=self.maxmem,
django/contrib/auth/hashers.py:594:13    - Unknown word (dklen)      -- dklen=64,
django/contrib/auth/hashers.py:86:11     - Unknown word (acheck)     -- async def acheck_password(password, encoded
django/contrib/auth/middleware.py:116:13    - Unknown word (markcoroutinefunction) -- markcoroutinefunction(self)
django/contrib/auth/middleware.py:127:27    - Unknown word (acall)                 -- return self.__acall__(request)
django/contrib/auth/middleware.py:167:17    - Unknown word (acall)                 -- async def __acall__(self, request):
django/contrib/auth/middleware.py:184:38    - Unknown word (auser)                 -- user = await request.auser()
django/contrib/auth/middleware.py:188:30    - Unknown word (auser)                 -- user = await request.auser()
django/contrib/auth/middleware.py:202:27    - Unknown word (aauthenticate)         -- user = await auth.aauthenticate(request, remote_user
django/contrib/auth/middleware.py:207:24    - Unknown word (alogin)                -- await auth.alogin(request, user)
django/contrib/auth/middleware.py:23:11     - Unknown word (auser)                 -- async def auser(request):
django/contrib/auth/middleware.py:24:31     - Unknown word (acached)               -- not hasattr(request, "_acached_user"):
django/contrib/auth/middleware.py:251:24    - Unknown word (alogout)               -- await auth.alogout(request)
django/contrib/auth/middleware.py:254:28    - Unknown word (alogout)               -- await auth.alogout(request)
django/contrib/auth/middleware.py:25:18     - Unknown word (acached)               -- request._acached_user = await auth.aget
django/contrib/auth/middleware.py:26:21     - Unknown word (acached)               -- return request._acached_user
django/contrib/auth/middleware.py:40:17     - Unknown word (auser)                 -- request.auser = partial(auser, request
django/contrib/auth/middleware.py:40:33     - Unknown word (auser)                 -- request.auser = partial(auser, request)
django/contrib/auth/middleware.py:4:47      - Unknown word (markcoroutinefunction) -- iscoroutinefunction, markcoroutinefunction
django/contrib/auth/models.py:244:12    - Unknown word (auser)      -- async def _auser_get_permissions(user
django/contrib/auth/models.py:268:12    - Unknown word (auser)      -- async def _auser_has_perm(user, perm
django/contrib/auth/models.py:271:34    - Unknown word (ahas)       -- not hasattr(backend, "ahas_perm"):
django/contrib/auth/models.py:274:30    - Unknown word (ahas)       -- if await backend.ahas_perm(user, perm, obj
django/contrib/auth/models.py:296:12    - Unknown word (auser)      -- async def _auser_has_module_perms(user
django/contrib/auth/models.py:299:34    - Unknown word (ahas)       -- not hasattr(backend, "ahas_module_perms"):
django/contrib/auth/models.py:302:30    - Unknown word (ahas)       -- if await backend.ahas_module_perms(user, app
django/contrib/auth/models.py:356:23    - Unknown word (auser)      -- return await _auser_get_permissions(self
django/contrib/auth/models.py:368:23    - Unknown word (auser)      -- return await _auser_get_permissions(self
django/contrib/auth/models.py:391:15    - Unknown word (ahas)       -- async def ahas_perm(self, perm, obj
django/contrib/auth/password_validation.py:29:13     - Unknown word (klass)      -- klass = import_string(validator
django/contrib/auth/password_validation.py:36:27     - Unknown word (klass)      -- validators.append(klass(**validator.get("OPTIONS
django/contrib/auth/urls.py:27:17     - Unknown word (uidb)       -- "reset/<uidb64>/<token>/",
django/contrib/auth/views.py:269:13    - Unknown word (uidb)       -- if "uidb64" not in kwargs or
django/contrib/auth/views.py:271:45    - Unknown word (uidb)       -- URL path must contain 'uidb64' and 'token' parameters
django/contrib/auth/views.py:275:43    - Unknown word (uidb)       -- self.get_user(kwargs["uidb64"])
django/contrib/auth/views.py:290:28    - Unknown word (Referer)    -- # HTTP Referer header.
django/contrib/auth/views.py:300:24    - Unknown word (uidb)       -- def get_user(self, uidb64):
django/contrib/auth/views.py:303:41    - Unknown word (uidb)       -- urlsafe_base64_decode(uidb64).decode()
django/contrib/contenttypes/admin.py:25:9      - Unknown word (gfks)       -- gfks = [
django/contrib/contenttypes/admin.py:30:16     - Unknown word (gfks)       -- if not gfks:
django/contrib/contenttypes/admin.py:72:24     - Unknown word (gfks)       -- for gfk in gfks:
django/contrib/flatpages/templatetags/flatpages.py:68:30     - Unknown word (someuser)   -- % get_flatpages for someuser as flatpages %}
django/contrib/flatpages/templatetags/flatpages.py:71:40     - Unknown word (someuser)   -- flatpages '/about/' for someuser as about_pages %}
django/contrib/gis/db/backends/base/features.py:103:24    - Unknown word (aggr)          -- def supports_union_aggr(self):
django/contrib/gis/db/backends/base/features.py:10:9      - Unknown word (spatialrefsys) -- has_spatialrefsys_table = True
django/contrib/gis/db/backends/base/features.py:91:26     - Unknown word (aggr)          -- def supports_collect_aggr(self):
django/contrib/gis/db/backends/base/features.py:95:25     - Unknown word (aggr)          -- def supports_extent_aggr(self):
django/contrib/gis/db/backends/base/features.py:99:28     - Unknown word (aggr)          -- def supports_make_line_aggr(self):
django/contrib/gis/db/backends/base/models.py:44:10     - Unknown word (semimajor)  -- (semimajor axis, semiminor axis
django/contrib/gis/db/backends/base/models.py:44:26     - Unknown word (semiminor)  -- (semimajor axis, semiminor axis, and inverse flattening
django/contrib/gis/db/backends/base/operations.py:136:43    - Unknown word (spatialrefsys) -- connection.features.has_spatialrefsys_table:
django/contrib/gis/db/backends/base/operations.py:13:5      - Unknown word (spatialite) -- spatialite = False
django/contrib/gis/db/backends/mysql/base.py:10:27     - Unknown word (SQLGIS)     -- SchemaEditorClass = MySQLGISSchemaEditor
django/contrib/gis/db/backends/mysql/base.py:6:23      - Unknown word (SQLGIS)     -- from .schema import MySQLGISSchemaEditor
django/contrib/gis/db/backends/mysql/features.py:8:9       - Unknown word (spatialrefsys) -- has_spatialrefsys_table = False
django/contrib/gis/db/backends/mysql/operations.py:36:54     - Unknown word (aggr)       -- features.supports_collect_aggr:
django/contrib/gis/db/backends/mysql/schema.py:10:9      - Unknown word (SQLGIS)     -- class MySQLGISSchemaEditor(DatabaseSchemaEdi
django/contrib/gis/db/backends/oracle/adapter.py:7:27      - Unknown word (CLOB)       -- input_size = oracledb.CLOB
django/contrib/gis/db/backends/oracle/introspection.py:22:30     - Unknown word (DIMINFO)    -- 'SELECT "DIMINFO", "SRID" FROM "USER
django/contrib/gis/db/backends/oracle/introspection.py:7:23      - Unknown word (OBJECTVAR)  -- # Associating any OBJECTVAR instances with GeometryField
django/contrib/gis/db/backends/oracle/introspection.py:8:43      - Unknown word (MDSYS)      -- objects that aren't MDSYS.SDO_GEOMETRY, but it
django/contrib/gis/db/backends/oracle/models.py:20:30     - Unknown word (diminfo)    -- TODO: Add support for `diminfo` column (type MDSYS
django/contrib/gis/db/backends/oracle/models.py:20:52     - Unknown word (MDSYS)      -- diminfo` column (type MDSYS.SDO_DIM_ARRAY).
django/contrib/gis/db/backends/oracle/models.py:48:25     - Unknown word (MDSYS)      -- "Maps to the Oracle MDSYS.CS_SRS table."
django/contrib/gis/db/backends/oracle/models.py:53:5      - Unknown word (wktext)     -- wktext = models.CharField(max
django/contrib/gis/db/backends/oracle/models.py:65:21     - Unknown word (wktext)     -- return self.wktext
django/contrib/gis/db/backends/oracle/operations.py:117:20    - Unknown word (SDOD)               -- "dwithin": SDODWithin(),
django/contrib/gis/db/backends/oracle/operations.py:140:30    - Unknown word (clob)               -- convert_extent(self, clob):
django/contrib/gis/db/backends/oracle/operations.py:141:12    - Unknown word (clob)               -- if clob:
django/contrib/gis/db/backends/oracle/operations.py:145:48    - Unknown word (clob)               -- GEOSGeometry(memoryview(clob.read()))
django/contrib/gis/db/backends/oracle/operations.py:170:17    - Unknown word (MDSYS)              -- return "MDSYS.SDO_GEOMETRY"
django/contrib/gis/db/backends/oracle/operations.py:208:21    - Unknown word (unionagg)           -- agg_name = "unionagg" if agg_name.lower(
django/contrib/gis/db/backends/oracle/operations.py:29:7      - Unknown word (SDOD)       -- class SDODWithin(SpatialOperator
django/contrib/gis/db/backends/oracle/operations.py:45:20     - Unknown word (OVERLAPBDYDISJOINT) -- "TOUCH|OVERLAPBDYDISJOINT|OVERLAPBDYINTERSECT
django/contrib/gis/db/backends/oracle/operations.py:46:30     - Unknown word (ANYINTERACT)        -- "CONTAINS|COVERS|ANYINTERACT|ON"
django/contrib/gis/db/backends/oracle/operations.py:64:19     - Unknown word (AGGR)               -- extent = "SDO_AGGR_MBR"
django/contrib/gis/db/backends/oracle/operations.py:65:21     - Unknown word (AGGR)               -- unionagg = "SDO_AGGR_UNION"
django/contrib/gis/db/backends/oracle/operations.py:65:5      - Unknown word (unionagg)           -- unionagg = "SDO_AGGR_UNION"
django/contrib/gis/db/backends/oracle/operations.py:72:31     - Unknown word (WKBGEOMETRY)        -- AsWKB": "SDO_UTIL.TO_WKBGEOMETRY",
django/contrib/gis/db/backends/oracle/operations.py:73:31     - Unknown word (WKTGEOMETRY)        -- AsWKT": "SDO_UTIL.TO_WKTGEOMETRY",
django/contrib/gis/db/backends/oracle/operations.py:79:35     - Unknown word (WKBGEOMETRY)        -- FromWKB": "SDO_UTIL.FROM_WKBGEOMETRY",
django/contrib/gis/db/backends/oracle/operations.py:80:35     - Unknown word (WKTGEOMETRY)        -- FromWKT": "SDO_UTIL.FROM_WKTGEOMETRY",
django/contrib/gis/db/backends/oracle/operations.py:84:36     - Unknown word (GETNUMELEM)         -- NumGeometries": "SDO_UTIL.GETNUMELEM",
django/contrib/gis/db/backends/oracle/operations.py:85:32     - Unknown word (GETNUMVERTICES)     -- NumPoints": "SDO_UTIL.GETNUMVERTICES",
django/contrib/gis/db/backends/oracle/operations.py:99:27     - Unknown word (WKBGEOMETRY)        -- select = "SDO_UTIL.TO_WKBGEOMETRY(%s)"
django/contrib/gis/db/backends/oracle/schema.py:13:13     - Unknown word (MDSYS)      -- MDSYS.SDO_DIM_ARRAY(
django/contrib/gis/db/backends/oracle/schema.py:14:17     - Unknown word (MDSYS)      -- MDSYS.SDO_DIM_ELEMENT('LONG
django/contrib/gis/db/backends/oracle/schema.py:15:17     - Unknown word (MDSYS)      -- MDSYS.SDO_DIM_ELEMENT('LAT
django/contrib/gis/db/backends/oracle/schema.py:21:10     - Unknown word (INDEXTYPE)  -- "INDEXTYPE IS MDSYS.SPATIAL_INDEX
django/contrib/gis/db/backends/oracle/schema.py:21:23     - Unknown word (MDSYS)      -- "INDEXTYPE IS MDSYS.SPATIAL_INDEX"
django/contrib/gis/db/backends/oracle/schema.py:9:44      - Unknown word (DIMINFO)    -- NAME", "COLUMN_NAME", "DIMINFO", "SRID")
django/contrib/gis/db/backends/postgis/adapter.py:29:41     - Unknown word (ISQL)       -- psycopg2.extensions import ISQLQuote
django/contrib/gis/db/backends/postgis/adapter.py:31:21     - Unknown word (ISQL)       -- if proto == ISQLQuote:
django/contrib/gis/db/backends/postgis/base.py:116:62    - Unknown word (extname)    -- FROM pg_extension WHERE extname = %s", ["postgis"])
django/contrib/gis/db/backends/postgis/const.py:62:10     - Unknown word (PIXTYPE)    -- BANDTYPE_PIXTYPE_MASK = 0x0F
django/contrib/gis/db/backends/postgis/introspection.py:25:34     - Unknown word (typname)    -- "SELECT oid, typname "
django/contrib/gis/db/backends/postgis/introspection.py:27:28     - Unknown word (typname)    -- "WHERE typname IN ('geometry', 'geography
django/contrib/gis/db/backends/postgis/models.py:63:5      - Unknown word (srtext)     -- srtext = models.CharField(max
django/contrib/gis/db/backends/postgis/models.py:73:21     - Unknown word (srtext)     -- return self.srtext
django/contrib/gis/db/backends/postgis/operations.py:128:5     - Unknown word (unionagg)   -- unionagg = geom_func_prefix
django/contrib/gis/db/backends/postgis/operations.py:167:44    - Unknown word (bytea)      -- is_psycopg3 else "%s::bytea"
django/contrib/gis/db/backends/postgis/operations.py:201:17    - Unknown word (vtup)       -- vtup = self.postgis_version
django/contrib/gis/db/backends/postgis/operations.py:210:23    - Unknown word (vtup)       -- version = vtup[1:]
django/contrib/gis/db/backends/postgis/operations.py:83:70     - Unknown word (rast)       -- don't support mixed (rast-geom)
django/contrib/gis/db/backends/postgis/pgraster.py:100:17    - Unknown word (rast)       -- def to_pgraster(rast):
django/contrib/gis/db/backends/postgis/pgraster.py:107:5     - Unknown word (rasterheader) -- rasterheader = (
django/contrib/gis/db/backends/postgis/pgraster.py:110:13    - Unknown word (rast)         -- len(rast.bands),
django/contrib/gis/db/backends/postgis/pgraster.py:111:9     - Unknown word (rast)         -- rast.scale.x,
django/contrib/gis/db/backends/postgis/pgraster.py:112:9     - Unknown word (rast)         -- rast.scale.y,
django/contrib/gis/db/backends/postgis/pgraster.py:113:9     - Unknown word (rast)         -- rast.origin.x,
django/contrib/gis/db/backends/postgis/pgraster.py:123:45    - Unknown word (rasterheader) -- POSTGIS_HEADER_STRUCTURE, rasterheader)
django/contrib/gis/db/backends/postgis/pgraster.py:147:9     - Unknown word (bandheader)   -- bandheader = pack(structure, (pixeltype
django/contrib/gis/db/backends/postgis/pgraster.py:150:19    - Unknown word (bandheader)   -- result += bandheader + band.data(as_memoryview
django/contrib/gis/db/backends/postgis/pgraster.py:25:26     - Unknown word (hexlified)  -- Unpack little endian hexlified binary string into a
django/contrib/gis/db/backends/postgis/pgraster.py:55:53     - Unknown word (PIXTYPE)    -- with_flags & BANDTYPE_PIXTYPE_MASK
django/contrib/gis/db/backends/postgis/pgraster.py:7:14      - Unknown word (PIXTYPE)    -- BANDTYPE_PIXTYPE_MASK,
django/contrib/gis/db/backends/postgis/schema.py:105:64    - Unknown word (rast)       -- field), template=self.rast_index_template)
django/contrib/gis/db/backends/postgis/schema.py:9:5       - Unknown word (rast)       -- rast_index_template = "ST
django/contrib/gis/db/backends/spatialite/adapter.py:5:7       - Unknown word (Spatia)     -- class SpatiaLiteAdapter(WKTAdapter
django/contrib/gis/db/backends/spatialite/base.py:10:25     - Unknown word (Spatia)     -- from .operations import SpatiaLiteOperations
django/contrib/gis/db/backends/spatialite/base.py:11:21     - Unknown word (Spatialite) -- from .schema import SpatialiteSchemaEditor
django/contrib/gis/db/backends/spatialite/base.py:15:25     - Unknown word (Spatialite) -- SchemaEditorClass = SpatialiteSchemaEditor
django/contrib/gis/db/backends/spatialite/base.py:17:20     - Unknown word (Spatia)     -- client_class = SpatiaLiteClient
django/contrib/gis/db/backends/spatialite/base.py:19:27     - Unknown word (Spatia)     -- introspection_class = SpatiaLiteIntrospection
django/contrib/gis/db/backends/spatialite/base.py:25:13     - Unknown word (libspatialite) -- # (`libspatialite`). If it's not in the
django/contrib/gis/db/backends/spatialite/base.py:27:45     - Unknown word (SPATIALITE)    -- the settings via the `SPATIALITE_LIBRARY_PATH` setting
django/contrib/gis/db/backends/spatialite/base.py:28:18     - Unknown word (spatialite)    -- self.lib_spatialite_paths = [
django/contrib/gis/db/backends/spatialite/base.py:31:36     - Unknown word (SPATIALITE)    -- getattr(settings, "SPATIALITE_LIBRARY_PATH", None
django/contrib/gis/db/backends/spatialite/base.py:32:22     - Unknown word (spatialite)    -- "mod_spatialite.so",
django/contrib/gis/db/backends/spatialite/base.py:33:22     - Unknown word (spatialite)    -- "mod_spatialite",
django/contrib/gis/db/backends/spatialite/base.py:34:31     - Unknown word (spatialite)    -- find_library("spatialite"),
django/contrib/gis/db/backends/spatialite/base.py:51:30     - Unknown word (spatialite)    -- for path in self.lib_spatialite_paths:
django/contrib/gis/db/backends/spatialite/base.py:55:39     - Unknown word (SPATIALITE)    -- if getattr(settings, "SPATIALITE_LIBRARY_PATH", None
django/contrib/gis/db/backends/spatialite/base.py:58:47     - Unknown word (SPATIALITE)    -- as specified in your SPATIALITE_LIBRARY_PATH setting
django/contrib/gis/db/backends/spatialite/base.py:7:21      - Unknown word (Spatia)     -- from .client import SpatiaLiteClient
django/contrib/gis/db/backends/spatialite/base.py:9:28      - Unknown word (Spatia)     -- introspection import SpatiaLiteIntrospection
django/contrib/gis/db/backends/spatialite/client.py:4:7       - Unknown word (Spatia)     -- class SpatiaLiteClient(DatabaseClient
django/contrib/gis/db/backends/spatialite/client.py:5:24      - Unknown word (spatialite) -- executable_name = "spatialite"
django/contrib/gis/db/backends/spatialite/features.py:21:18     - Unknown word (Spatia)     -- "SpatiaLite doesn't support
django/contrib/gis/db/backends/spatialite/features.py:22:32     - Unknown word (geogapp)    -- "gis_tests.geogapp.tests.GeographyTest
django/contrib/gis/db/backends/spatialite/introspection.py:26:7      - Unknown word (Spatia)     -- class SpatiaLiteIntrospection(DatabaseIntr
django/contrib/gis/db/backends/spatialite/introspection.py:49:19     - Unknown word (Spatia)     -- # SpatiaLite uses SFSQL 1.2 offsets
django/contrib/gis/db/backends/spatialite/introspection.py:49:35     - Unknown word (SFSQL)      -- # SpatiaLite uses SFSQL 1.2 offsets 1000 (Z
django/contrib/gis/db/backends/spatialite/models.py:11:39     - Unknown word (Spatia)     -- columns' table from SpatiaLite.
django/contrib/gis/db/backends/spatialite/models.py:2:55      - Unknown word (Spatia)     -- SpatialRefSys models for the SpatiaLite backend.
django/contrib/gis/db/backends/spatialite/models.py:52:7      - Unknown word (Spatialite) -- class SpatialiteSpatialRefSys(models
django/contrib/gis/db/backends/spatialite/models.py:54:38     - Unknown word (Spatia)     -- ref_sys' table from SpatiaLite.
django/contrib/gis/db/backends/spatialite/models.py:62:5      - Unknown word (srtext)     -- srtext = models.CharField(max
django/contrib/gis/db/backends/spatialite/models.py:71:21     - Unknown word (srtext)     -- return self.srtext
django/contrib/gis/db/backends/spatialite/models.py:9:7       - Unknown word (Spatialite) -- class SpatialiteGeometryColumns(models
django/contrib/gis/db/backends/spatialite/operations.py:149:14    - Unknown word (spatialite) -- def _get_spatialite_func(self, func):
django/contrib/gis/db/backends/spatialite/operations.py:171:9     - Unknown word (lwgeom)     -- def lwgeom_version(self):
django/contrib/gis/db/backends/spatialite/operations.py:172:34    - Unknown word (LWGEOM)     -- Return the version of LWGEOM library used by SpatiaLite
django/contrib/gis/db/backends/spatialite/operations.py:173:43    - Unknown word (lwgeom)     -- get_spatialite_func("lwgeom_version()")
django/contrib/gis/db/backends/spatialite/operations.py:175:9     - Unknown word (rttopo)     -- def rttopo_version(self):
django/contrib/gis/db/backends/spatialite/operations.py:176:34    - Unknown word (RTTOPO)     -- Return the version of RTTOPO library used by SpatiaLite
django/contrib/gis/db/backends/spatialite/operations.py:177:43    - Unknown word (rttopo)     -- get_spatialite_func("rttopo_version()")
django/contrib/gis/db/backends/spatialite/operations.py:185:25    - Unknown word (rttopo)     -- return self.rttopo_version()
django/contrib/gis/db/backends/spatialite/operations.py:187:25    - Unknown word (lwgeom)     -- return self.lwgeom_version()
django/contrib/gis/db/backends/spatialite/operations.py:19:7      - Unknown word (Spatialite) -- class SpatialiteNullCheckOperator(SpatialOpera
django/contrib/gis/db/backends/spatialite/operations.py:206:21    - Unknown word (unionagg)   -- agg_name = "unionagg" if agg_name.lower(
django/contrib/gis/db/backends/spatialite/operations.py:25:7      - Unknown word (Spatia)     -- class SpatiaLiteOperations(BaseSpatialOper
django/contrib/gis/db/backends/spatialite/operations.py:26:13     - Unknown word (spatialite) -- name = "spatialite"
django/contrib/gis/db/backends/spatialite/operations.py:27:5      - Unknown word (spatialite) -- spatialite = True
django/contrib/gis/db/backends/spatialite/operations.py:29:15     - Unknown word (Spatia)     -- Adapter = SpatiaLiteAdapter
django/contrib/gis/db/backends/spatialite/operations.py:34:5      - Unknown word (unionagg)   -- unionagg = "GUnion"
django/contrib/gis/db/backends/spatialite/operations.py:40:19     - Unknown word (Spatialite) -- "equals": SpatialiteNullCheckOperator(func
django/contrib/gis/db/backends/spatialite/operations.py:41:21     - Unknown word (Spatialite) -- "disjoint": SpatialiteNullCheckOperator(func
django/contrib/gis/db/backends/spatialite/operations.py:42:20     - Unknown word (Spatialite) -- "touches": SpatialiteNullCheckOperator(func
django/contrib/gis/db/backends/spatialite/operations.py:43:20     - Unknown word (Spatialite) -- "crosses": SpatialiteNullCheckOperator(func
django/contrib/gis/db/backends/spatialite/operations.py:8:37      - Unknown word (spatialite) -- contrib.gis.db.backends.spatialite.adapter import SpatiaLiteAdap
django/contrib/gis/db/backends/spatialite/operations.py:8:63      - Unknown word (Spatia)     -- spatialite.adapter import SpatiaLiteAdapter
django/contrib/gis/db/backends/spatialite/operations.py:94:41     - Unknown word (Spatia)     -- Determine the version of the SpatiaLite library."""
django/contrib/gis/db/backends/spatialite/operations.py:96:28     - Unknown word (spatialite) -- version = self.spatialite_version_tuple()[1:]
django/contrib/gis/db/backends/spatialite/operations.py:99:39     - Unknown word (Spatia)     -- Cannot determine the SpatiaLite version for the
django/contrib/gis/db/backends/spatialite/schema.py:5:7       - Unknown word (Spatialite) -- class SpatialiteSchemaEditor(DatabaseSchemaEdi
django/contrib/gis/db/models/aggregates.py:37:65     - Unknown word (SDOAGGRTYPE) -- t wrap filters with SDOAGGRTYPE().
django/contrib/gis/db/models/aggregates.py:41:27     - Unknown word (SDOAGGRTYPE) -- function="SDOAGGRTYPE",
django/contrib/gis/db/models/aggregates.py:56:22     - Unknown word (Geospatial)  -- "Geospatial aggregates only allowed
django/contrib/gis/db/models/functions.py:228:31    - Unknown word (GMLGEOMETRY) -- else "SDO_UTIL.TO_GMLGEOMETRY"
django/contrib/gis/db/models/functions.py:353:15    - Unknown word (Spatia)      -- # SpatiaLite returns NULL instead
django/contrib/gis/db/models/proxy.py:13:24     - Unknown word (klass)      -- def __init__(self, klass, field, load_func=None
django/contrib/gis/db/models/proxy.py:18:15     - Unknown word (klass)      -- self._klass = klass
django/contrib/gis/db/models/proxy.py:18:23     - Unknown word (klass)      -- self._klass = klass
django/contrib/gis/db/models/proxy.py:19:40     - Unknown word (klass)      -- func = load_func or klass
django/contrib/gis/db/models/proxy.py:39:40     - Unknown word (klass)      -- isinstance(geo_value, self._klass):
django/contrib/gis/db/models/sql/conversion.py:2:45      - Unknown word (geospatial) -- simple classes to convert geospatial values from the
django/contrib/gis/feeds.py:11:9      - Unknown word (georss)     -- def georss_coords(self, coords
django/contrib/gis/feeds.py:19:13     - Unknown word (georss)     -- def add_georss_point(self, handler
django/contrib/gis/feeds.py:30:38     - Unknown word (georss)     -- handler.addQuickElement("georss:point", self.georss
django/contrib/gis/feeds.py:30:58     - Unknown word (georss)     -- georss:point", self.georss_coords((coords,)))
django/contrib/gis/feeds.py:32:13     - Unknown word (georss)     -- def add_georss_element(self, handler
django/contrib/gis/forms/widgets.py:71:32     - Unknown word (geodjango)  -- "module": "geodjango_%s" % name.replace(
django/contrib/gis/gdal/__init__.py:35:30     - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import (
django/contrib/gis/gdal/datasource.py:43:54     - Unknown word (capi)       -- prototypes import ds as capi
django/contrib/gis/gdal/datasource.py:4:26      - Unknown word (shapefiles) -- formats (including ESRI shapefiles).
django/contrib/gis/gdal/datasource.py:53:18     - Unknown word (capi)       -- destructor = capi.destroy_ds
django/contrib/gis/gdal/datasource.py:57:23     - Unknown word (capi)       -- self._write = capi.GDAL_OF_UPDATE if write
django/contrib/gis/gdal/datasource.py:57:57     - Unknown word (capi)       -- UPDATE if write else capi.GDAL_OF_READONLY
django/contrib/gis/gdal/datasource.py:66:22     - Unknown word (capi)       -- ds = capi.open_ds(
django/contrib/gis/gdal/driver.py:51:31     - Unknown word (capi)       -- driver = c_void_p(capi.get_driver_by_name(force
django/contrib/gis/gdal/driver.py:54:22     - Unknown word (capi)       -- driver = capi.get_driver(dr_input
django/contrib/gis/gdal/driver.py:5:54      - Unknown word (capi)       -- prototypes import ds as capi
django/contrib/gis/gdal/driver.py:79:16     - Unknown word (capi)       -- if not capi.get_driver_count():
django/contrib/gis/gdal/driver.py:80:13     - Unknown word (capi)       -- capi.register_all()
django/contrib/gis/gdal/envelope.py:130:28    - Unknown word (miny)       -- (minx, miny, maxx, maxy) = args
django/contrib/gis/gdal/envelope.py:130:34    - Unknown word (maxx)       -- (minx, miny, maxx, maxy) = args[0]
django/contrib/gis/gdal/envelope.py:130:40    - Unknown word (maxy)       -- (minx, miny, maxx, maxy) = args[0]
django/contrib/gis/gdal/envelope.py:133:24    - Unknown word (miny)       -- if miny < self._envelope.MinY
django/contrib/gis/gdal/envelope.py:134:47    - Unknown word (miny)       -- self._envelope.MinY = miny
django/contrib/gis/gdal/envelope.py:135:24    - Unknown word (maxx)       -- if maxx > self._envelope.MaxX
django/contrib/gis/gdal/envelope.py:136:47    - Unknown word (maxx)       -- self._envelope.MaxX = maxx
django/contrib/gis/gdal/envelope.py:137:24    - Unknown word (maxy)       -- if maxy > self._envelope.MaxY
django/contrib/gis/gdal/envelope.py:138:47    - Unknown word (maxy)       -- self._envelope.MaxY = maxy
django/contrib/gis/gdal/error.py:20:1      - Unknown word (OGRERR)     -- OGRERR_DICT = {
django/contrib/gis/gdal/error.py:33:1      - Unknown word (CPLERR)     -- CPLERR_DICT = {
django/contrib/gis/gdal/error.py:51:25     - Unknown word (OGRERR)     -- Check the given CPL/OGRERR and raise an exception
django/contrib/gis/gdal/error.py:53:16     - Unknown word (CPLERR)     -- err_dict = CPLERR_DICT if cpl else OGRERR
django/contrib/gis/gdal/error.py:53:40     - Unknown word (OGRERR)     -- CPLERR_DICT if cpl else OGRERR_DICT
django/contrib/gis/gdal/feature.py:20:18     - Unknown word (capi)       -- destructor = capi.destroy_feature
django/contrib/gis/gdal/feature.py:58:21     - Unknown word (capi)       -- return bool(capi.feature_equal(self.ptr
django/contrib/gis/gdal/feature.py:5:54      - Unknown word (capi)       -- prototypes import ds as capi
django/contrib/gis/gdal/feature.py:68:16     - Unknown word (capi)       -- return capi.get_fid(self.ptr)
django/contrib/gis/gdal/feature.py:73:16     - Unknown word (capi)       -- name = capi.get_feat_name(self.
django/contrib/gis/gdal/feature.py:86:52     - Unknown word (defn)       -- name(capi.get_field_defn(self._layer._ldefn,
django/contrib/gis/gdal/field.py:147:9     - Unknown word (shapefiles) -- shapefiles -- forcing the type
django/contrib/gis/gdal/field.py:253:1     - Unknown word (ROGR)       -- ROGRFieldTypes = {cls: num
django/contrib/gis/gdal/field.py:29:19     - Unknown word (capi)       -- fld_ptr = capi.get_feat_field_defn
django/contrib/gis/gdal/field.py:29:39     - Unknown word (defn)       -- capi.get_feat_field_defn(feat.ptr, index)
django/contrib/gis/gdal/field.py:45:13     - Unknown word (capi)       -- capi.get_field_as_double
django/contrib/gis/gdal/field.py:54:17     - Unknown word (capi)       -- capi.get_field_as_integer
django/contrib/gis/gdal/field.py:60:17     - Unknown word (capi)       -- capi.get_field_as_integer
django/contrib/gis/gdal/field.py:6:54      - Unknown word (capi)       -- prototypes import ds as capi
django/contrib/gis/gdal/geometries.py:26:18     - Unknown word (ellps)      -- +proj=longlat +ellps=WGS84 +datum=WGS84
django/contrib/gis/gdal/geometries.py:29:18     - Unknown word (ellps)      -- +proj=longlat +ellps=clrk66 +datum=NAD27
django/contrib/gis/gdal/geometries.py:29:24     - Unknown word (clrk)       -- proj=longlat +ellps=clrk66 +datum=NAD27 +no_defs
django/contrib/gis/gdal/geometries.py:394:25    - Unknown word (wkbsize)    -- return capi.get_wkbsize(self.ptr)
django/contrib/gis/gdal/geometries.py:455:13    - Unknown word (klone)      -- klone = self.clone()
django/contrib/gis/gdal/geometries.py:456:13    - Unknown word (klone)      -- klone.transform(coord_trans
django/contrib/gis/gdal/geometries.py:457:20    - Unknown word (klone)      -- return klone
django/contrib/gis/gdal/geometries.py:51:56     - Unknown word (capi)       -- prototypes import geom as capi
django/contrib/gis/gdal/geometries.py:520:10    - Unknown word (geomgen)    -- def _geomgen(self, gen_func, other
django/contrib/gis/gdal/geometries.py:530:22    - Unknown word (geomgen)    -- return self._geomgen(capi.get_boundary)
django/contrib/gis/gdal/geometries.py:538:22    - Unknown word (geomgen)    -- return self._geomgen(capi.geom_convex_hull
django/contrib/gis/gdal/geometries.py:545:22    - Unknown word (geomgen)    -- return self._geomgen(capi.geom_diff, other
django/contrib/gis/gdal/geometries.py:552:22    - Unknown word (geomgen)    -- return self._geomgen(capi.geom_intersection
django/contrib/gis/gdal/geometries.py:608:25    - Unknown word (getm)       -- return capi.getm(self.ptr, 0)
django/contrib/gis/gdal/geometries.py:66:18     - Unknown word (capi)       -- destructor = capi.destroy_geom
django/contrib/gis/gdal/geometries.py:684:39    - Unknown word (getm)       -- return self._listarr(capi.getm)
django/contrib/gis/gdal/geometries.py:88:25     - Unknown word (capi)       -- g = capi.create_geom(OGRGeomType
django/contrib/gis/gdal/geometries.py:89:21     - Unknown word (capi)       -- capi.import_wkt(g, byref
django/contrib/gis/gdal/geometries.py:91:25     - Unknown word (capi)       -- g = capi.from_wkt(
django/contrib/gis/gdal/geomtype.py:38:16     - Unknown word (TINZ)       -- 1016: "TINZ",
django/contrib/gis/gdal/geomtype.py:53:16     - Unknown word (TINM)       -- 2016: "TINM",
django/contrib/gis/gdal/geomtype.py:68:16     - Unknown word (TINZM)      -- 3016: "TINZM",
django/contrib/gis/gdal/layer.py:10:54     - Unknown word (capi)       -- prototypes import ds as capi
django/contrib/gis/gdal/layer.py:143:52    - Unknown word (defn)       -- name(capi.get_field_defn(self._ldefn, i)),
django/contrib/gis/gdal/layer.py:158:62    - Unknown word (defn)       -- type(capi.get_field_defn(self._ldefn, i))]
django/contrib/gis/gdal/layer.py:166:49    - Unknown word (defn)       -- width(capi.get_field_defn(self._ldefn, i))
django/contrib/gis/gdal/layer.py:174:53    - Unknown word (defn)       -- precision(capi.get_field_defn(self._ldefn, i))
django/contrib/gis/gdal/layer.py:38:23     - Unknown word (capi)       -- self._ldefn = capi.get_layer_defn(self
django/contrib/gis/gdal/layer.py:38:38     - Unknown word (defn)       -- ldefn = capi.get_layer_defn(self._ptr)
django/contrib/gis/gdal/layer.py:63:9      - Unknown word (capi)       -- capi.reset_reading(self.
django/contrib/gis/gdal/layer.py:65:27     - Unknown word (capi)       -- yield Feature(capi.get_next_feature(self
django/contrib/gis/gdal/layer.py:85:32     - Unknown word (capi)       -- return Feature(capi.get_feature(self.ptr
django/contrib/gis/gdal/libgdal.py:67:1      - Unknown word (lgdal)      -- lgdal = CDLL(lib_path)
django/contrib/gis/gdal/libgdal.py:76:5      - Unknown word (lwingdal)   -- lwingdal = WinDLL(lib_path)
django/contrib/gis/gdal/libgdal.py:85:16     - Unknown word (lwingdal)   -- return lwingdal[func]
django/contrib/gis/gdal/libgdal.py:87:16     - Unknown word (lgdal)      -- return lgdal[func]
django/contrib/gis/gdal/prototypes/ds.py:10:30     - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import lgdal
django/contrib/gis/gdal/prototypes/ds.py:10:45     - Unknown word (lgdal)      -- gdal.libgdal import lgdal
django/contrib/gis/gdal/prototypes/ds.py:20:5      - Unknown word (voidptr)    -- voidptr_output,
django/contrib/gis/gdal/prototypes/ds.py:33:28     - Unknown word (lgdal)      -- register_all = void_output(lgdal.GDALAllRegister, []
django/contrib/gis/gdal/prototypes/ds.py:34:27     - Unknown word (lgdal)      -- cleanup_all = void_output(lgdal.GDALDestroyDriverManager
django/contrib/gis/gdal/prototypes/ds.py:35:14     - Unknown word (voidptr)    -- get_driver = voidptr_output(lgdal.GDALGetDriver
django/contrib/gis/gdal/prototypes/ds.py:35:29     - Unknown word (lgdal)      -- driver = voidptr_output(lgdal.GDALGetDriver, [c_int
django/contrib/gis/gdal/prototypes/ds.py:36:22     - Unknown word (voidptr)    -- get_driver_by_name = voidptr_output(
django/contrib/gis/gdal/prototypes/ds.py:37:5      - Unknown word (lgdal)      -- lgdal.GDALGetDriverByName
django/contrib/gis/gdal/prototypes/ds.py:43:11     - Unknown word (voidptr)    -- open_ds = voidptr_output(
django/contrib/gis/gdal/prototypes/ds.py:49:22     - Unknown word (voidptr)    -- get_dataset_driver = voidptr_output(lgdal.GDALGetDatasetDr
django/contrib/gis/gdal/prototypes/ds.py:60:11     - Unknown word (defn)       -- get_layer_defn = voidptr_output(lgdal
django/contrib/gis/gdal/prototypes/ds.py:60:53     - Unknown word (Defn)       -- lgdal.OGR_L_GetLayerDefn, [c_void_p])
django/contrib/gis/gdal/prototypes/ds.py:80:11     - Unknown word (defn)       -- get_field_defn = voidptr_output(lgdal
django/contrib/gis/gdal/prototypes/ds.py:80:54     - Unknown word (Defn)       -- lgdal.OGR_FD_GetFieldDefn, [c_void_p, c_int])
django/contrib/gis/gdal/prototypes/ds.py:88:16     - Unknown word (defn)       -- get_feat_field_defn = voidptr_output(lgdal
django/contrib/gis/gdal/prototypes/ds.py:88:58     - Unknown word (Defn)       -- lgdal.OGR_F_GetFieldDefnRef, [c_void_p, c_int
django/contrib/gis/gdal/prototypes/errcheck.py:25:38     - Unknown word (cargs)      -- string(result, func, cargs, offset=None, cpl=False
django/contrib/gis/gdal/prototypes/errcheck.py:31:25     - Unknown word (cargs)      -- ptr = ptr_byref(cargs, offset)
django/contrib/gis/gdal/prototypes/errcheck.py:37:32     - Unknown word (cargs)      -- string(result, func, cargs, offset=-1, str_result
django/contrib/gis/gdal/prototypes/errcheck.py:56:25     - Unknown word (cargs)      -- ptr = ptr_byref(cargs, offset)
django/contrib/gis/gdal/prototypes/errcheck.py:62:9      - Unknown word (lgdal)      -- lgdal.VSIFree(ptr)
django/contrib/gis/gdal/prototypes/errcheck.py:70:34     - Unknown word (cargs)      -- envelope(result, func, cargs, offset=-1):
django/contrib/gis/gdal/prototypes/errcheck.py:9:30      - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import lgdal
django/contrib/gis/gdal/prototypes/errcheck.py:9:45      - Unknown word (lgdal)      -- gdal.libgdal import lgdal
django/contrib/gis/gdal/prototypes/generation.py:105:36    - Unknown word (cargs)        -- const(result, func, cargs):
django/contrib/gis/gdal/prototypes/generation.py:106:48    - Unknown word (cargs)        -- string(result, func, cargs, offset=offset, cpl
django/contrib/gis/gdal/prototypes/generation.py:135:34    - Unknown word (cargs)        -- check_str(result, func, cargs):
django/contrib/gis/gdal/prototypes/generation.py:163:5     - Unknown word (voidptr)      -- def voidptr_output(func, argtypes
django/contrib/gis/gdal/prototypes/generation.py:35:51     - Unknown word (strarg)     -- argtypes, errcheck=False, strarg=False, cpl=False):
django/contrib/gis/gdal/prototypes/generation.py:41:8      - Unknown word (strarg)     -- if strarg:
django/contrib/gis/gdal/prototypes/generation.py:62:13     - Unknown word (geomerrcheck) -- def geomerrcheck(result, func, cargs
django/contrib/gis/gdal/prototypes/generation.py:62:40     - Unknown word (cargs)        -- geomerrcheck(result, func, cargs):
django/contrib/gis/gdal/prototypes/generation.py:63:52     - Unknown word (cargs)        -- offset(result, func, cargs, offset)
django/contrib/gis/gdal/prototypes/generation.py:65:25     - Unknown word (geomerrcheck) -- func.errcheck = geomerrcheck
django/contrib/gis/gdal/prototypes/geom.py:111:9     - Unknown word (wkbsize)    -- get_wkbsize = int_output(lgdal.OGR
django/contrib/gis/gdal/prototypes/geom.py:113:9     - Unknown word (wkbsize)    -- get_wkbsize = int_output(lgdal.OGR
django/contrib/gis/gdal/prototypes/geom.py:130:68    - Unknown word (cargs)      -- lambda result, func, cargs: bool(result)
django/contrib/gis/gdal/prototypes/geom.py:35:39     - Unknown word (cargs)      -- lambda result, func, cargs: bool(result)
django/contrib/gis/gdal/prototypes/geom.py:42:25     - Unknown word (lgdal)      -- from_json = geom_output(lgdal.OGR_G_CreateGeometryFromJson
django/contrib/gis/gdal/prototypes/geom.py:44:5      - Unknown word (lgdal)      -- lgdal.OGR_G_ExportToJson,
django/contrib/gis/gdal/prototypes/geom.py:47:5      - Unknown word (lgdal)      -- lgdal.OGR_G_ExportToKML,
django/contrib/gis/gdal/prototypes/geom.py:4:30      - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import GDAL_VERSION
django/contrib/gis/gdal/prototypes/geom.py:4:59      - Unknown word (lgdal)      -- import GDAL_VERSION, lgdal
django/contrib/gis/gdal/prototypes/geom.py:51:17     - Unknown word (lgdal)      -- getx = pnt_func(lgdal.OGR_G_GetX)
django/contrib/gis/gdal/prototypes/geom.py:54:1      - Unknown word (getm)       -- getm = pnt_func(lgdal.OGR
django/contrib/gis/gdal/prototypes/raster.py:140:3     - Unknown word (Reprojection) -- # Reprojection routine
django/contrib/gis/gdal/prototypes/raster.py:141:1     - Unknown word (reproject)    -- reproject_image = void_output
django/contrib/gis/gdal/prototypes/raster.py:142:19    - Unknown word (Reproject)    -- std_call("GDALReprojectImage"),
django/contrib/gis/gdal/prototypes/raster.py:16:5      - Unknown word (voidptr)    -- voidptr_output,
django/contrib/gis/gdal/prototypes/raster.py:30:13     - Unknown word (voidptr)    -- create_ds = voidptr_output(
django/contrib/gis/gdal/prototypes/raster.py:33:11     - Unknown word (voidptr)    -- open_ds = voidptr_output(std_call("GDALOpen
django/contrib/gis/gdal/prototypes/raster.py:36:11     - Unknown word (voidptr)    -- copy_ds = voidptr_output(
django/contrib/gis/gdal/prototypes/raster.py:42:17     - Unknown word (voidptr)    -- get_ds_driver = voidptr_output(std_call("GDALGetDatas
django/contrib/gis/gdal/prototypes/raster.py:9:30      - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import std_call
django/contrib/gis/gdal/prototypes/srs.py:100:1     - Unknown word (islocal)       -- islocal = int_output(lgdal.OSRIsLocal
django/contrib/gis/gdal/prototypes/srs.py:100:28    - Unknown word (OSRIs)         -- islocal = int_output(lgdal.OSRIsLocal, [c_void_p])
django/contrib/gis/gdal/prototypes/srs.py:101:1     - Unknown word (isprojected)   -- isprojected = int_output(lgdal.OSRIsProje
django/contrib/gis/gdal/prototypes/srs.py:101:32    - Unknown word (OSRIs)         -- sprojected = int_output(lgdal.OSRIsProjected, [c_void_p
django/contrib/gis/gdal/prototypes/srs.py:28:60     - Unknown word (strarg)     -- POINTER(c_char_p)], strarg=True)
django/contrib/gis/gdal/prototypes/srs.py:34:27     - Unknown word (lgdal)      -- release_srs = void_output(lgdal.OSRRelease, [c_void
django/contrib/gis/gdal/prototypes/srs.py:38:28     - Unknown word (lgdal)      -- validate = void_output(lgdal.OSRValidate, [c_void
django/contrib/gis/gdal/prototypes/srs.py:3:30      - Unknown word (libgdal)    -- django.contrib.gis.gdal.libgdal import lgdal, std_call
django/contrib/gis/gdal/prototypes/srs.py:3:45      - Unknown word (lgdal)      -- gdal.libgdal import lgdal, std_call
django/contrib/gis/gdal/prototypes/srs.py:40:5      - Unknown word (lgdal)      -- lgdal.OSRSetAxisMappingStrategy
django/contrib/gis/gdal/prototypes/srs.py:44:25     - Unknown word (lgdal)      -- semi_major = srs_double(lgdal.OSRGetSemiMajor)
django/contrib/gis/gdal/prototypes/srs.py:46:1      - Unknown word (invflattening) -- invflattening = srs_double(lgdal.OSRGetInvF
django/contrib/gis/gdal/prototypes/srs.py:99:1      - Unknown word (isgeographic)  -- isgeographic = int_output(lgdal.OSRIsGeogr
django/contrib/gis/gdal/prototypes/srs.py:99:33     - Unknown word (OSRIs)         -- geographic = int_output(lgdal.OSRIsGeographic, [c_void_p
django/contrib/gis/gdal/raster/band.py:108:22    - Unknown word (smin)       -- result = smin.value, smax.value, smean
django/contrib/gis/gdal/raster/band.py:108:34    - Unknown word (smax)       -- result = smin.value, smax.value, smean.value,
django/contrib/gis/gdal/raster/band.py:108:46    - Unknown word (smean)      -- smin.value, smax.value, smean.value, sstd.value
django/contrib/gis/gdal/raster/band.py:220:50    - Unknown word (ndarray)    -- isinstance(data, numpy.ndarray)
django/contrib/gis/gdal/raster/band.py:248:30    - Unknown word (frombuffer) -- return numpy.frombuffer(
django/contrib/gis/gdal/raster/band.py:24:21     - Unknown word (capi)       -- self._ptr = capi.get_ds_raster_band(source
django/contrib/gis/gdal/raster/band.py:39:26     - Unknown word (capi)       -- return force_str(capi.get_band_description
django/contrib/gis/gdal/raster/band.py:46:16     - Unknown word (capi)       -- return capi.get_band_xsize(self
django/contrib/gis/gdal/raster/band.py:4:58      - Unknown word (capi)       -- prototypes import raster as capi
django/contrib/gis/gdal/raster/band.py:53:16     - Unknown word (capi)       -- return capi.get_band_ysize(self
django/contrib/gis/gdal/raster/band.py:84:15     - Unknown word (smax)       -- smin, smax, smean, sstd = c_double
django/contrib/gis/gdal/raster/band.py:84:21     - Unknown word (smean)      -- smin, smax, smean, sstd = c_double(),
django/contrib/gis/gdal/raster/band.py:84:9      - Unknown word (smin)       -- smin, smax, smean, sstd
django/contrib/gis/gdal/raster/band.py:88:19     - Unknown word (smin)       -- byref(smin),
django/contrib/gis/gdal/raster/band.py:89:19     - Unknown word (smax)       -- byref(smax),
django/contrib/gis/gdal/raster/band.py:90:19     - Unknown word (smean)      -- byref(smean),
django/contrib/gis/gdal/raster/base.py:22:21     - Unknown word (capi)       -- meta_list = capi.get_ds_metadata_domain
django/contrib/gis/gdal/raster/base.py:2:58      - Unknown word (capi)       -- prototypes import raster as capi
django/contrib/gis/gdal/raster/base.py:34:9      - Unknown word (capi)       -- capi.free_dsl(meta_list)
django/contrib/gis/gdal/raster/base.py:40:20     - Unknown word (capi)       -- data = capi.get_ds_metadata(
django/contrib/gis/gdal/raster/base.py:72:17     - Unknown word (capi)       -- capi.set_ds_metadata_item
django/contrib/gis/gdal/raster/const.py:64:13     - Unknown word (Neighbour)  -- "NearestNeighbour": 0,
django/contrib/gis/gdal/raster/const.py:68:6      - Unknown word (Lanczos)    -- "Lanczos": 4,
django/contrib/gis/gdal/raster/const.py:77:31     - Unknown word (Paletted)   -- GCI_PaletteIndex", # Paletted
django/contrib/gis/gdal/raster/const.py:88:43     - Unknown word (CMLY)       -- BlackBand", # Black band of CMLY image
django/contrib/gis/gdal/raster/const.py:98:34     - Unknown word (vsimem)     -- FILESYSTEM_BASE_PATH = "/vsimem/"
django/contrib/gis/gdal/raster/source.py:106:24    - Unknown word (getsizeof)  -- size = sys.getsizeof(ds_input)
django/contrib/gis/gdal/raster/source.py:108:24    - Unknown word (vsimem)     -- # that the vsimem file remains available
django/contrib/gis/gdal/raster/source.py:111:50    - Unknown word (vsimem)     -- name to reference in vsimem filesystem.
django/contrib/gis/gdal/raster/source.py:113:22    - Unknown word (vsimem)     -- # Create vsimem file from buffer.
django/contrib/gis/gdal/raster/source.py:114:13    - Unknown word (capi)       -- capi.create_vsi_file_from
django/contrib/gis/gdal/raster/source.py:120:28    - Unknown word (vsimem)     -- # Open the new vsimem file as a GDALRaster
django/contrib/gis/gdal/raster/source.py:122:29    - Unknown word (capi)       -- self._ptr = capi.open_ds(force_bytes
django/contrib/gis/gdal/raster/source.py:153:13    - Unknown word (papsz)      -- papsz_options = []
django/contrib/gis/gdal/raster/source.py:154:43    - Unknown word (papsz)      -- val in ds_input.get("papsz_options", {}).items
django/contrib/gis/gdal/raster/source.py:156:17    - Unknown word (papsz)      -- papsz_options.append(option
django/contrib/gis/gdal/raster/source.py:157:13    - Unknown word (papsz)      -- papsz_options.append(None
django/contrib/gis/gdal/raster/source.py:159:23    - Unknown word (papszlist)  -- # Convert papszlist to ctypes array.
django/contrib/gis/gdal/raster/source.py:160:13    - Unknown word (papsz)      -- papsz_options = (c_char_p
django/contrib/gis/gdal/raster/source.py:19:58     - Unknown word (capi)       -- prototypes import raster as capi
django/contrib/gis/gdal/raster/source.py:232:42    - Unknown word (geotransforms) -- that needs flushing are geotransforms, coordinate systems
django/contrib/gis/gdal/raster/source.py:400:49    - Unknown word (Neighbour)     -- resampling="NearestNeighbour", max_error=0.0):
django/contrib/gis/gdal/raster/source.py:442:11    - Unknown word (Reproject)     -- # Reproject image
django/contrib/gis/gdal/raster/source.py:443:14    - Unknown word (reproject)     -- capi.reproject_image(
django/contrib/gis/gdal/raster/source.py:483:63    - Unknown word (Neighbour)     -- resampling="NearestNeighbour", max_error=0.0
django/contrib/gis/gdal/raster/source.py:486:38    - Unknown word (reprojected)   -- copy of this raster reprojected into the given spatial
django/contrib/gis/gdal/raster/source.py:539:30    - Unknown word (gdalinfo)      -- to the output of the gdalinfo command line utility
django/contrib/gis/gdal/raster/source.py:75:18     - Unknown word (capi)       -- destructor = capi.close_ds
django/contrib/gis/gdal/raster/source.py:97:29     - Unknown word (capi)       -- self._ptr = capi.open_ds(force_bytes
django/contrib/gis/gdal/srs.py:119:20    - Unknown word (GEOGCS)     -- >>> wkt = 'GEOGCS["WGS 84", DATUM["WGS
django/contrib/gis/gdal/srs.py:121:24    - Unknown word (GEOGCS)     -- >>> print(srs['GEOGCS'])
django/contrib/gis/gdal/srs.py:129:24    - Unknown word (TOWGS)      -- >>> print(srs['TOWGS84', 4]) # the fourth
django/contrib/gis/gdal/srs.py:12:11     - Unknown word (TOWGS)      -- TOWGS84[0,0,0,0,0,0,0],
django/contrib/gis/gdal/srs.py:131:61    - Unknown word (symbole)    -- have to use the pipe symbole.
django/contrib/gis/gdal/srs.py:149:62    - Unknown word (PROJCS)     -- given target node (e.g. 'PROJCS'). The index
django/contrib/gis/gdal/srs.py:14:7      - Unknown word (PRIMEM)     -- PRIMEM["Greenwich",0,
django/contrib/gis/gdal/srs.py:196:37    - Unknown word (PROJCS)     -- return self.attr_value("PROJCS")
django/contrib/gis/gdal/srs.py:198:37    - Unknown word (GEOGCS)     -- return self.attr_value("GEOGCS")
django/contrib/gis/gdal/srs.py:20:18     - Unknown word (ellps)      -- +proj=longlat +ellps=WGS84 +datum=WGS84
django/contrib/gis/gdal/srs.py:257:11    - Unknown word (semimajor)  -- (semimajor axis, semiminor axis
django/contrib/gis/gdal/srs.py:257:27    - Unknown word (semiminor)  -- (semimajor axis, semiminor axis, and inverse flattening
django/contrib/gis/gdal/srs.py:274:21    - Unknown word (invflattening) -- return capi.invflattening(self.ptr, byref(c_int
django/contrib/gis/gdal/srs.py:281:24    - Unknown word (GEOGCS)        -- (root node is GEOGCS).
django/contrib/gis/gdal/srs.py:283:26    - Unknown word (isgeographic)  -- return bool(capi.isgeographic(self.ptr))
django/contrib/gis/gdal/srs.py:288:26    - Unknown word (islocal)       -- return bool(capi.islocal(self.ptr))
django/contrib/gis/gdal/srs.py:294:24    - Unknown word (PROJCS)        -- (root node is PROJCS).
django/contrib/gis/gdal/srs.py:296:26    - Unknown word (isprojected)   -- return bool(capi.isprojected(self.ptr))
django/contrib/gis/gdal/srs.py:36:55     - Unknown word (capi)       -- prototypes import srs as capi
django/contrib/gis/gdal/srs.py:52:18     - Unknown word (capi)       -- destructor = capi.release_srs
django/contrib/gis/gdal/srs.py:67:24     - Unknown word (capi)       -- self.ptr = capi.new_srs(c_char_p(b"
django/contrib/gis/gdal/srs.py:70:17     - Unknown word (capi)       -- capi.set_axis_strategy(self
django/contrib/gis/gdal/srs.py:8:3       - Unknown word (GEOGCS)     -- GEOGCS["WGS 84",
django/contrib/gis/gdal/srs.py:95:19     - Unknown word (capi)       -- srs = capi.new_srs(buf)
django/contrib/gis/geoip2.py:11:23     - Unknown word (mmdb)       -- Grab GeoLite2-Country.mmdb.gz and GeoLite2-City
django/contrib/gis/geoip2.py:11:49     - Unknown word (mmdb)       -- gz and GeoLite2-City.mmdb.gz, and unzip them in
django/contrib/gis/geoip2.py:187:28    - Unknown word (djangoproject) -- '24.124.1.80' and 'djangoproject.com' are valid parameters
django/contrib/gis/geoip2.py:67:56     - Unknown word (mmdb)       -- country data files (*.mmdb) are located.
django/contrib/gis/geoip2.py:78:31     - Unknown word (mmdb)       -- 'GeoLite2-Country.mmdb'; overrides the GEOIP
django/contrib/gis/geoip2.py:81:28     - Unknown word (mmdb)       -- 'GeoLite2-City.mmdb'; overrides the GEOIP
django/contrib/gis/geometry.py:13:55     - Unknown word (CIRCULARSTRING) -- LTIPOLYGON|GEOMETRYCOLLECTION|CIRCULARSTRING|COMPOUNDCURVE|"
django/contrib/gis/geometry.py:13:70     - Unknown word (COMPOUNDCURVE)  -- ETRYCOLLECTION|CIRCULARSTRING|COMPOUNDCURVE|"
django/contrib/gis/geometry.py:14:20     - Unknown word (MULTICURVE)     -- r"CURVEPOLYGON|MULTICURVE|MULTISURFACE|CURVE|SURFACE
django/contrib/gis/geometry.py:14:31     - Unknown word (MULTISURFACE)   -- CURVEPOLYGON|MULTICURVE|MULTISURFACE|CURVE|SURFACE|POLYHEDRALSURFA
django/contrib/gis/geometry.py:14:58     - Unknown word (POLYHEDRALSURFACE) -- MULTISURFACE|CURVE|SURFACE|POLYHEDRALSURFACE|TIN|"
django/contrib/gis/geometry.py:14:7      - Unknown word (CURVEPOLYGON)   -- r"CURVEPOLYGON|MULTICURVE|MULTISURFACE
django/contrib/gis/geometry.py:16:8      - Unknown word (ACEGIMLONPSRUTYZ)  -- r"[ACEGIMLONPSRUTYZ0-9,.+() -]+)$",
django/contrib/gis/geos/__init__.py:16:7      - Unknown word (libgeos)    -- from .libgeos import geos_version
django/contrib/gis/geos/collections.py:54:17     - Unknown word (capi)       -- capi.geom_clone(getattr(g
django/contrib/gis/geos/collections.py:58:16     - Unknown word (capi)       -- return capi.create_collection(self
django/contrib/gis/geos/collections.py:61:16     - Unknown word (capi)       -- return capi.get_geomn(self.ptr,
django/contrib/gis/geos/collections.py:61:25     - Unknown word (geomn)      -- return capi.get_geomn(self.ptr, index)
django/contrib/gis/geos/collections.py:67:13     - Unknown word (capi)       -- capi.geom_clone(self._get
django/contrib/gis/geos/collections.py:6:51      - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/collections.py:8:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR
django/contrib/gis/geos/coordseq.py:124:24    - Unknown word (getordinate) -- return capi.cs_getordinate(self.ptr, index, dimension
django/contrib/gis/geos/coordseq.py:12:30     - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import CS_PTR
django/contrib/gis/geos/coordseq.py:130:17    - Unknown word (setordinate) -- capi.cs_setordinate(self.ptr, index, dimension
django/contrib/gis/geos/coordseq.py:165:24    - Unknown word (getdims)     -- return capi.cs_getdims(self.ptr, byref(c_uint
django/contrib/gis/geos/coordseq.py:51:48     - Unknown word (ndarray)    -- isinstance(value, numpy.ndarray):
django/contrib/gis/geos/coordseq.py:81:16     - Unknown word (capi)       -- return capi.cs_getx(self.ptr, index
django/contrib/gis/geos/coordseq.py:84:16     - Unknown word (capi)       -- return capi.cs_gety(self.ptr, index
django/contrib/gis/geos/coordseq.py:87:16     - Unknown word (capi)       -- return capi.cs_getz(self.ptr, index
django/contrib/gis/geos/coordseq.py:90:9      - Unknown word (capi)       -- capi.cs_setx(self.ptr, index
django/contrib/gis/geos/coordseq.py:96:17     - Unknown word (setz)       -- capi.cs_setz(self.ptr, index, value
django/contrib/gis/geos/coordseq.py:9:51      - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/geometry.py:11:51     - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/geometry.py:15:30     - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR, geos
django/contrib/gis/geos/geometry.py:198:16    - Unknown word (capi)       -- return capi.geos_type(self.ptr)
django/contrib/gis/geos/geometry.py:203:16    - Unknown word (capi)       -- return capi.geos_typeid(self.ptr
django/contrib/gis/geos/geometry.py:261:26    - Unknown word (isring)     -- return capi.geos_isring(self.ptr)
django/contrib/gis/geos/geometry.py:266:26    - Unknown word (issimple)   -- return capi.geos_issimple(self.ptr)
django/contrib/gis/geos/geometry.py:278:26    - Unknown word (isvalidreason) -- return capi.geos_isvalidreason(self.ptr).decode()
django/contrib/gis/geos/geometry.py:27:18     - Unknown word (capi)       -- destructor = capi.destroy_geom
django/contrib/gis/geos/geometry.py:320:26    - Unknown word (equalsexact)   -- return capi.geos_equalsexact(self.ptr, other.ptr
django/contrib/gis/geos/geometry.py:330:26    - Unknown word (equalsidentical) -- return capi.geos_equalsidentical(self.ptr, other.ptr
django/contrib/gis/geos/geometry.py:350:26    - Unknown word (relatepattern)   -- return capi.geos_relatepattern(self.ptr, other.ptr
django/contrib/gis/geos/geometry.py:523:25    - Unknown word (gptr)            -- def _topology(self, gptr):
django/contrib/gis/geos/geometry.py:525:29    - Unknown word (gptr)            -- return GEOSGeometry(gptr, srid=self.srid)
django/contrib/gis/geos/geometry.py:532:29    - Unknown word (quadsegs)        -- buffer(self, width, quadsegs=8):
django/contrib/gis/geos/geometry.py:540:65    - Unknown word (quadsegs)        -- buffer(self.ptr, width, quadsegs))
django/contrib/gis/geos/geometry.py:543:22    - Unknown word (quadsegs)        -- self, width, quadsegs=8, end_cap_style=1,
django/contrib/gis/geos/geometry.py:553:23    - Unknown word (bufferwithstyle) -- capi.geos_bufferwithstyle(
django/contrib/gis/geos/geometry.py:554:34    - Unknown word (quadsegs)        -- self.ptr, width, quadsegs, end_cap_style, join
django/contrib/gis/geos/geometry.py:573:41    - Unknown word (convexhull)      -- _topology(capi.geos_convexhull(self.ptr))
django/contrib/gis/geos/geometry.py:602:59    - Unknown word (Peucker)         -- simplified using the Douglas-Peucker algorithm
django/contrib/gis/geos/geometry.py:613:45    - Unknown word (preservesimplify) -- _topology(capi.geos_preservesimplify(self.ptr, tolerance
django/contrib/gis/geos/geometry.py:67:26     - Unknown word (capi)       -- GEOSCoordSeq(capi.get_cs(self.ptr), self
django/contrib/gis/geos/geometry.py:709:41    - Unknown word (linemerge)        -- _topology(capi.geos_linemerge(self.ptr))
django/contrib/gis/geos/libgeos.py:103:11    - Unknown word (ERRORFUNC)  -- error_h = ERRORFUNC(error_h)
django/contrib/gis/geos/libgeos.py:127:1     - Unknown word (PREPGEOM)   -- PREPGEOM_PTR = POINTER(GEOSPrepGeom
django/contrib/gis/geos/libgeos.py:158:49    - Unknown word (threadsafe) -- gis.geos.prototypes.threadsafe import GEOSFunc
django/contrib/gis/geos/libgeos.py:36:33     - Unknown word (libgeos)    -- names = ["geos_c", "libgeos_c-1"]
django/contrib/gis/geos/libgeos.py:45:28     - Unknown word (libgeos)    -- and extension (e.g., libgeos_c.[so|so.1|dylib].)
django/contrib/gis/geos/libgeos.py:62:6      - Unknown word (lgeos)      -- _lgeos = CDLL(lib_path)
django/contrib/gis/geos/libgeos.py:66:23     - Unknown word (threadsafe) -- # geos/prototypes/threadsafe.py.
django/contrib/gis/geos/libgeos.py:67:6      - Unknown word (lgeos)      -- _lgeos.initGEOS_r.restype
django/contrib/gis/geos/libgeos.py:68:6      - Unknown word (lgeos)      -- _lgeos.finishGEOS_r.argtypes
django/contrib/gis/geos/libgeos.py:70:6      - Unknown word (lgeos)      -- _lgeos.GEOSversion.restype
django/contrib/gis/geos/libgeos.py:71:13     - Unknown word (lgeos)      -- return _lgeos
django/contrib/gis/geos/libgeos.py:77:1      - Unknown word (NOTICEFUNC) -- NOTICEFUNC = CFUNCTYPE(None, c
django/contrib/gis/geos/libgeos.py:89:12     - Unknown word (NOTICEFUNC) -- notice_h = NOTICEFUNC(notice_h)
django/contrib/gis/geos/libgeos.py:91:1      - Unknown word (ERRORFUNC)  -- ERRORFUNC = CFUNCTYPE(None, c
django/contrib/gis/geos/linestring.py:10:18     - Unknown word (capi)       -- _init_func = capi.create_linestring
django/contrib/gis/geos/linestring.py:119:27    - Unknown word (capi)       -- cs = GEOSCoordSeq(capi.create_cs(length, ndim
django/contrib/gis/geos/linestring.py:125:13    - Unknown word (capi)       -- capi.destroy_geom(self.ptr
django/contrib/gis/geos/linestring.py:156:40    - Unknown word (ARRRR)      -- numpy.array(lst) # ARRRR!
django/contrib/gis/geos/linestring.py:1:51      - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/linestring.py:35:42     - Unknown word (ndarray)    -- isinstance(coords, numpy.ndarray)
django/contrib/gis/geos/linestring.py:42:9      - Unknown word (ncoords)    -- ncoords = len(coords)
django/contrib/gis/geos/linestring.py:43:16     - Unknown word (ncoords)    -- if not ncoords:
django/contrib/gis/geos/linestring.py:47:12     - Unknown word (ncoords)    -- if ncoords < self._minlength:
django/contrib/gis/geos/linestring.py:53:21     - Unknown word (ncoords)    -- ncoords,
django/contrib/gis/geos/linestring.py:83:27     - Unknown word (capi)       -- cs = GEOSCoordSeq(capi.create_cs(ncoords, ndim
django/contrib/gis/geos/linestring.py:83:42     - Unknown word (ncoords)    -- GEOSCoordSeq(capi.create_cs(ncoords, ndim), z=bool(ndim
django/contrib/gis/geos/mutable_list.py:1:27      - Unknown word (Aryeh)      -- Copyright (c) 2008-2009 Aryeh Leib Taurog, all rights
django/contrib/gis/geos/mutable_list.py:1:33      - Unknown word (Leib)       -- (c) 2008-2009 Aryeh Leib Taurog, all rights reserved
django/contrib/gis/geos/mutable_list.py:1:38      - Unknown word (Taurog)     -- 008-2009 Aryeh Leib Taurog, all rights reserved
django/contrib/gis/geos/mutable_list.py:9:15      - Unknown word (Leib)       -- Author: Aryeh Leib Taurog.
django/contrib/gis/geos/mutable_list.py:9:20      - Unknown word (Taurog)     -- Author: Aryeh Leib Taurog.
django/contrib/gis/geos/mutable_list.py:9:9       - Unknown word (Aryeh)      -- Author: Aryeh Leib Taurog.
django/contrib/gis/geos/point.py:4:51      - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/point.py:64:20     - Unknown word (capi)       -- return capi.create_point(None)
django/contrib/gis/geos/point.py:69:14     - Unknown word (capi)       -- cs = capi.create_cs(c_uint(1)
django/contrib/gis/geos/point.py:71:9      - Unknown word (capi)       -- capi.cs_setx(cs, 0, next
django/contrib/gis/geos/point.py:72:9      - Unknown word (capi)       -- capi.cs_sety(cs, 0, next
django/contrib/gis/geos/point.py:74:21     - Unknown word (setz)       -- capi.cs_setz(cs, 0, next(i))
django/contrib/gis/geos/polygon.py:140:29    - Unknown word (extring)    -- return capi.get_extring(self.ptr)
django/contrib/gis/geos/polygon.py:143:29    - Unknown word (intring)    -- return capi.get_intring(self.ptr, index - 1
django/contrib/gis/geos/polygon.py:158:25    - Unknown word (nrings)     -- return capi.get_nrings(self.ptr)
django/contrib/gis/geos/polygon.py:1:51      - Unknown word (capi)       -- import prototypes as capi
django/contrib/gis/geos/polygon.py:3:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR
django/contrib/gis/geos/polygon.py:76:20     - Unknown word (capi)       -- return capi.create_empty_polygon
django/contrib/gis/geos/polygon.py:93:16     - Unknown word (capi)       -- return capi.create_polygon(shell
django/contrib/gis/geos/polygon.py:97:20     - Unknown word (capi)       -- return capi.geom_clone(g)
django/contrib/gis/geos/polygon.py:99:20     - Unknown word (capi)       -- return capi.geom_clone(g.ptr)
django/contrib/gis/geos/prepared.py:12:16     - Unknown word (capi)       -- ptr_type = capi.PREPGEOM_PTR
django/contrib/gis/geos/prepared.py:12:21     - Unknown word (PREPGEOM)   -- ptr_type = capi.PREPGEOM_PTR
django/contrib/gis/geos/prepared.py:13:18     - Unknown word (capi)       -- destructor = capi.prepared_destroy
django/contrib/gis/geos/prepared.py:24:20     - Unknown word (capi)       -- self.ptr = capi.geos_prepare(geom.ptr
django/contrib/gis/geos/prepared.py:27:16     - Unknown word (capi)       -- return capi.prepared_contains(self
django/contrib/gis/geos/prepared.py:2:37      - Unknown word (capi)       -- prototypes import prepared as capi
django/contrib/gis/geos/prototypes/__init__.py:10:8      - Unknown word (getdims)    -- cs_getdims,
django/contrib/gis/geos/prototypes/__init__.py:11:8      - Unknown word (getordinate) -- cs_getordinate,
django/contrib/gis/geos/prototypes/__init__.py:17:8      - Unknown word (setordinate) -- cs_setordinate,
django/contrib/gis/geos/prototypes/__init__.py:20:8      - Unknown word (setz)        -- cs_setz,
django/contrib/gis/geos/prototypes/__init__.py:39:9      - Unknown word (extring)     -- get_extring,
django/contrib/gis/geos/prototypes/__init__.py:40:9      - Unknown word (geomn)       -- get_geomn,
django/contrib/gis/geos/prototypes/__init__.py:41:9      - Unknown word (intring)     -- get_intring,
django/contrib/gis/geos/prototypes/__init__.py:42:9      - Unknown word (nrings)      -- get_nrings,
django/contrib/gis/geos/prototypes/__init__.py:53:10     - Unknown word (equalsexact) -- geos_equalsexact,
django/contrib/gis/geos/prototypes/__init__.py:54:10     - Unknown word (equalsidentical) -- geos_equalsidentical,
django/contrib/gis/geos/prototypes/__init__.py:59:10     - Unknown word (isring)          -- geos_isring,
django/contrib/gis/geos/prototypes/__init__.py:60:10     - Unknown word (issimple)        -- geos_issimple,
django/contrib/gis/geos/prototypes/__init__.py:63:10     - Unknown word (relatepattern)   -- geos_relatepattern,
django/contrib/gis/geos/prototypes/coordseq.py:16:32     - Unknown word (cargs)      -- cs_get(result, func, cargs):
django/contrib/gis/geos/prototypes/coordseq.py:18:31     - Unknown word (cargs)      -- cs_op(result, func, cargs)
django/contrib/gis/geos/prototypes/coordseq.py:20:27     - Unknown word (cargs)      -- return last_arg_byref(cargs)
django/contrib/gis/geos/prototypes/coordseq.py:3:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import CS_PTR, GEOM
django/contrib/gis/geos/prototypes/coordseq.py:59:32     - Unknown word (cargs)      -- errcheck(result, func, cargs):
django/contrib/gis/geos/prototypes/coordseq.py:76:4      - Unknown word (getordinate) -- cs_getordinate = CsOperation("GEOSCoordSeq
django/contrib/gis/geos/prototypes/coordseq.py:77:4      - Unknown word (setordinate) -- cs_setordinate = CsOperation("GEOSCoordSeq
django/contrib/gis/geos/prototypes/coordseq.py:87:4      - Unknown word (setz)        -- cs_setz = CsOperation("GEOSCoordSeq
django/contrib/gis/geos/prototypes/coordseq.py:8:31      - Unknown word (cargs)      -- cs_op(result, func, cargs):
django/contrib/gis/geos/prototypes/coordseq.py:91:4      - Unknown word (getdims)     -- cs_getdims = CsInt("GEOSCoordSeq
django/contrib/gis/geos/prototypes/errcheck.py:21:29     - Unknown word (cargs)      -- check_dbl(result, func, cargs):
django/contrib/gis/geos/prototypes/errcheck.py:27:27     - Unknown word (cargs)      -- return last_arg_byref(cargs)
django/contrib/gis/geos/prototypes/errcheck.py:30:30     - Unknown word (cargs)      -- check_geom(result, func, cargs):
django/contrib/gis/geos/prototypes/errcheck.py:40:35     - Unknown word (cargs)      -- minus_one(result, func, cargs):
django/contrib/gis/geos/prototypes/errcheck.py:50:35     - Unknown word (cargs)      -- predicate(result, func, cargs):
django/contrib/gis/geos/prototypes/errcheck.py:8:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOSFuncFactory
django/contrib/gis/geos/prototypes/geom.py:3:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import CS_PTR, GEOM
django/contrib/gis/geos/prototypes/geom.py:76:5      - Unknown word (extring)    -- get_extring = GeomOutput("GEOSGetExterior
django/contrib/gis/geos/prototypes/geom.py:77:5      - Unknown word (intring)    -- get_intring = GeomOutput("GEOSGetInterior
django/contrib/gis/geos/prototypes/geom.py:78:5      - Unknown word (nrings)     -- get_nrings = IntFromGeom("GEOSGetNumInte
django/contrib/gis/geos/prototypes/geom.py:81:5      - Unknown word (geomn)      -- get_geomn = GeomOutput("GEOSGetGeometry
django/contrib/gis/geos/prototypes/io.py:43:38     - Unknown word (GEOSWKT)    -- create = GEOSFuncFactory("GEOSWKTReader_create", restype
django/contrib/gis/geos/prototypes/io.py:44:39     - Unknown word (GEOSWKT)    -- destroy = GEOSFuncFactory("GEOSWKTReader_destroy", argtypes
django/contrib/gis/geos/prototypes/io.py:47:6      - Unknown word (GEOSWKT)    -- "GEOSWKTReader_read",
django/contrib/gis/geos/prototypes/io.py:53:38     - Unknown word (GEOSWKT)    -- create = GEOSFuncFactory("GEOSWKTWriter_create", restype
django/contrib/gis/geos/prototypes/io.py:54:39     - Unknown word (GEOSWKT)    -- destroy = GEOSFuncFactory("GEOSWKTWriter_destroy", argtypes
django/contrib/gis/geos/prototypes/io.py:5:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import (
django/contrib/gis/geos/prototypes/io.py:78:38     - Unknown word (GEOSWKB)    -- create = GEOSFuncFactory("GEOSWKBReader_create", restype
django/contrib/gis/geos/prototypes/io.py:79:39     - Unknown word (GEOSWKB)    -- destroy = GEOSFuncFactory("GEOSWKBReader_destroy", argtypes
django/contrib/gis/geos/prototypes/io.py:93:32     - Unknown word (GEOSWKB)    -- read = WKBReadFunc("GEOSWKBReader_read")
django/contrib/gis/geos/prototypes/io.py:94:36     - Unknown word (GEOSWKB)    -- read_hex = WKBReadFunc("GEOSWKBReader_readHEX")
django/contrib/gis/geos/prototypes/io.py:97:38     - Unknown word (GEOSWKB)    -- create = GEOSFuncFactory("GEOSWKBWriter_create", restype
django/contrib/gis/geos/prototypes/misc.py:12:63     - Unknown word (isvalidreason) -- geos_length", "geos_isvalidreason"]
django/contrib/gis/geos/prototypes/misc.py:33:6      - Unknown word (isvalidreason) -- geos_isvalidreason = GEOSFuncFactory(
django/contrib/gis/geos/prototypes/misc.py:8:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact
django/contrib/gis/geos/prototypes/predicates.py:29:6      - Unknown word (isring)     -- geos_isring = UnaryPredicate("GEOSisRing
django/contrib/gis/geos/prototypes/predicates.py:30:6      - Unknown word (issimple)   -- geos_issimple = UnaryPredicate("GEOSisSimpl
django/contrib/gis/geos/prototypes/predicates.py:39:6      - Unknown word (equalsexact) -- geos_equalsexact = BinaryPredicate(
django/contrib/gis/geos/prototypes/predicates.py:42:6      - Unknown word (equalsidentical) -- geos_equalsidentical = BinaryPredicate("GEOSEquals
django/contrib/gis/geos/prototypes/predicates.py:45:6      - Unknown word (relatepattern)   -- geos_relatepattern = BinaryPredicate(
django/contrib/gis/geos/prototypes/predicates.py:8:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact
django/contrib/gis/geos/prototypes/prepared.py:13:17     - Unknown word (PREPGEOM)   -- argtypes = [PREPGEOM_PTR, GEOM_PTR]
django/contrib/gis/geos/prototypes/prepared.py:3:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR, PREPGEOM
django/contrib/gis/geos/prototypes/prepared.py:3:55      - Unknown word (PREPGEOM)   -- libgeos import GEOM_PTR, PREPGEOM_PTR, GEOSFuncFactory
django/contrib/gis/geos/prototypes/prepared.py:7:76      - Unknown word (PREPGEOM)   -- [GEOM_PTR], restype=PREPGEOM_PTR)
django/contrib/gis/geos/prototypes/prepared.py:8:74      - Unknown word (PREPGEOM)   -- destroy", argtypes=[PREPGEOM_PTR])
django/contrib/gis/geos/prototypes/threadsafe.py:11:18     - Unknown word (lgeos)      -- destructor = lgeos.finishGEOS_r
django/contrib/gis/geos/prototypes/threadsafe.py:16:20     - Unknown word (lgeos)      -- self.ptr = lgeos.initGEOS_r(notice_h
django/contrib/gis/geos/prototypes/threadsafe.py:37:30     - Unknown word (lgeos)      -- self.cfunc = getattr(lgeos, func_name + "_r")
django/contrib/gis/geos/prototypes/threadsafe.py:4:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import CONTEXT_PTR,
django/contrib/gis/geos/prototypes/threadsafe.py:4:67      - Unknown word (lgeos)      -- CONTEXT_PTR, error_h, lgeos, notice_h
django/contrib/gis/geos/prototypes/topology.py:27:6      - Unknown word (bufferwithstyle) -- geos_bufferwithstyle = Topology(
django/contrib/gis/geos/prototypes/topology.py:31:6      - Unknown word (convexhull)      -- geos_convexhull = Topology("GEOSConvexHull
django/contrib/gis/geos/prototypes/topology.py:35:6      - Unknown word (linemerge)       -- geos_linemerge = Topology("GEOSLineMerge
django/contrib/gis/geos/prototypes/topology.py:37:6      - Unknown word (preservesimplify) -- geos_preservesimplify = Topology(
django/contrib/gis/geos/prototypes/topology.py:8:30      - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import GEOM_PTR, GEOSFuncFact
django/contrib/gis/measure.py:222:36    - Unknown word (LALIAS)     -- elif lower in self.LALIAS:
django/contrib/gis/measure.py:223:30    - Unknown word (LALIAS)     -- u = self.LALIAS[lower]
django/contrib/gis/measure.py:242:27    - Unknown word (LALIAS)     -- elif lower in cls.LALIAS:
django/contrib/gis/measure.py:243:24    - Unknown word (LALIAS)     -- return cls.LALIAS[lower]
django/contrib/gis/measure.py:252:16    - Unknown word (benoit)     -- "chain_benoit": 20.116782,
django/contrib/gis/measure.py:254:24    - Unknown word (benoit)     -- "british_chain_benoit": 20.1167824944,
django/contrib/gis/measure.py:271:15    - Unknown word (benoit)     -- "link_benoit": 0.20116782,
django/contrib/gis/measure.py:291:10    - Unknown word (kilometre)  -- "kilometre": "km",
django/contrib/gis/measure.py:295:10    - Unknown word (micrometre) -- "micrometre": "um",
django/contrib/gis/measure.py:297:10    - Unknown word (millimetre) -- "millimetre": "mm",
django/contrib/gis/measure.py:300:25    - Unknown word (Benoit)     -- "British chain (Benoit 1895 B)": "british_chain
django/contrib/gis/measure.py:300:57    - Unknown word (benoit)     -- B)": "british_chain_benoit",
django/contrib/gis/measure.py:309:17    - Unknown word (Benoit)     -- "Chain (Benoit)": "chain_benoit",
django/contrib/gis/measure.py:309:34    - Unknown word (benoit)     -- Chain (Benoit)": "chain_benoit",
django/contrib/gis/measure.py:316:16    - Unknown word (Benoit)     -- "Link (Benoit)": "link_benoit",
django/contrib/gis/measure.py:33:30     - Unknown word (Bronn)      -- Robert Coup, Justin Bronn, Riccardo Di Virgilio
django/contrib/gis/measure.py:33:37     - Unknown word (Riccardo)   -- Coup, Justin Bronn, Riccardo Di Virgilio
django/contrib/gis/measure.py:33:49     - Unknown word (Virgilio)   -- Justin Bronn, Riccardo Di Virgilio
django/contrib/gis/measure.py:36:11     - Unknown word (Biggs)      -- and Geoff Biggs' PhD work on dimensioned
django/contrib/gis/measure.py:36:5      - Unknown word (Geoff)      -- and Geoff Biggs' PhD work on dimensione
django/contrib/gis/measure.py:56:5      - Unknown word (LALIAS)     -- LALIAS = {}
django/contrib/gis/sitemaps/views.py:18:9      - Unknown word (klass)      -- klass = apps.get_model(label
django/contrib/gis/sitemaps/views.py:27:21     - Unknown word (klass)      -- field = klass._meta.get_field(field
django/contrib/gis/sitemaps/views.py:37:22     - Unknown word (klass)      -- placemarks = klass._default_manager.using
django/contrib/gis/sitemaps/views.py:43:18     - Unknown word (klass)      -- qs = klass._default_manager.using
django/contrib/gis/sitemaps/views.py:48:18     - Unknown word (klass)      -- qs = klass._default_manager.using
django/contrib/gis/utils/__init__.py:13:6      - Unknown word (ogrinfo)    -- "ogrinfo",
django/contrib/gis/utils/__init__.py:5:31      - Unknown word (ogrinfo)    -- django.contrib.gis.utils.ogrinfo import ogrinfo
django/contrib/gis/utils/__init__.py:5:46      - Unknown word (ogrinfo)    -- utils.ogrinfo import ogrinfo
django/contrib/gis/utils/layermapping.py:423:13    - Unknown word (dtup)       -- dtup = d.as_tuple()
django/contrib/gis/utils/layermapping.py:424:22    - Unknown word (dtup)       -- digits = dtup[1]
django/contrib/gis/utils/layermapping.py:425:21    - Unknown word (dtup)       -- d_idx = dtup[2] # index where the
django/contrib/gis/utils/layermapping.py:428:17    - Unknown word (prec)       -- max_prec = model_field.max_digits
django/contrib/gis/utils/layermapping.py:433:19    - Unknown word (prec)       -- n_prec = len(digits[:d_idx
django/contrib/gis/utils/layermapping.py:435:19    - Unknown word (prec)       -- n_prec = len(digits) + d_idx
django/contrib/gis/utils/layermapping.py:439:18    - Unknown word (prec)       -- if n_prec > max_prec:
django/contrib/gis/utils/layermapping.py:439:29    - Unknown word (prec)       -- if n_prec > max_prec:
django/contrib/gis/utils/layermapping.py:698:9     - Unknown word (nfeat)      -- nfeat = self.layer.num_feat
django/contrib/gis/utils/layermapping.py:699:54    - Unknown word (nfeat)      -- step, int) and step < nfeat:
django/contrib/gis/utils/layermapping.py:707:35    - Unknown word (nfeat)      -- indices = range(step, nfeat, step)
django/contrib/gis/utils/ogrinfo.py:11:5      - Unknown word (ogrinfo)    -- def ogrinfo(data_source, num_features
django/contrib/gis/utils/ogrinfo.py:4:18      - Unknown word (ogrinfo)    -- produced by the `ogrinfo` utility.
django/contrib/gis/utils/srs.py:28:12     - Unknown word (Spatia)     -- For SpatiaLite users only, sets
django/contrib/gis/utils/srs.py:57:11     - Unknown word (Spatia)     -- # and SpatiaLite.
django/contrib/gis/utils/srs.py:66:9      - Unknown word (srtext)     -- if "srtext" in srs_field_names
django/contrib/gis/utils/srs.py:67:17     - Unknown word (srtext)     -- kwargs["srtext"] = srs.wkt
django/contrib/gis/utils/srs.py:69:11     - Unknown word (Spatia)     -- # SpatiaLite specific
django/contrib/messages/storage/cookie.py:86:23     - Unknown word (messagesnotfinished) -- not_finished = "__messagesnotfinished__"
django/contrib/messages/storage/cookie.py:87:39     - Unknown word (messagesnotfinished) -- json = json.dumps("__messagesnotfinished__")
django/contrib/postgres/aggregates/statistics.py:36:32     - Unknown word (SAMP)       -- self.function = "COVAR_SAMP" if sample else "COVAR
django/contrib/postgres/aggregates/statistics.py:41:22     - Unknown word (AVGX)       -- function = "REGR_AVGX"
django/contrib/postgres/aggregates/statistics.py:45:22     - Unknown word (AVGY)       -- function = "REGR_AVGY"
django/contrib/postgres/constraints.py:37:63     - Unknown word (spgist)     -- lower() not in {"gist", "spgist"}:
django/contrib/postgres/fields/hstore.py:104:17    - Unknown word (akeys)      -- function = "akeys"
django/contrib/postgres/fields/hstore.py:111:17    - Unknown word (avals)      -- function = "avals"
django/contrib/postgres/fields/ranges.py:191:17    - Unknown word (numrange)   -- return "numrange"
django/contrib/postgres/fields/ranges.py:200:17    - Unknown word (tstzrange)  -- return "tstzrange"
django/contrib/postgres/fields/ranges.py:209:17    - Unknown word (daterange)  -- return "daterange"
django/contrib/postgres/fields/ranges.py:268:30    - Unknown word (numrange)   -- double precision": "numrange",
django/contrib/postgres/fields/ranges.py:269:21    - Unknown word (numrange)   -- "numeric": "numrange",
django/contrib/postgres/fields/ranges.py:270:18    - Unknown word (daterange)  -- "date": "daterange",
django/contrib/postgres/fields/ranges.py:271:38    - Unknown word (tstzrange)  -- timestamp with time zone": "tstzrange",
django/contrib/postgres/indexes.py:218:15    - Unknown word (spgist)     -- suffix = "spgist"
django/contrib/postgres/operations.py:103:25    - Unknown word (trgm)       -- self.name = "pg_trgm"
django/contrib/postgres/operations.py:173:51    - Unknown word (libc)       -- locale, *, provider="libc", deterministic=True
django/contrib/postgres/operations.py:184:48    - Unknown word (libc)       -- and self.provider != "libc":
django/contrib/postgres/operations.py:196:30    - Unknown word (libc)       -- if self.provider != "libc":
django/contrib/postgres/operations.py:2:16      - Unknown word (oids)       -- get_citext_oids,
django/contrib/postgres/operations.py:32:31     - Unknown word (oids)       -- Clear cached, stale oids.
django/contrib/postgres/operations.py:33:20     - Unknown word (oids)       -- get_hstore_oids.cache_clear()
django/contrib/postgres/operations.py:34:20     - Unknown word (oids)       -- get_citext_oids.cache_clear()
django/contrib/postgres/operations.py:3:16      - Unknown word (oids)       -- get_hstore_oids,
django/contrib/postgres/operations.py:58:51     - Unknown word (extname)    -- FROM pg_extension WHERE extname = %s",
django/contrib/postgres/operations.py:93:22     - Unknown word (pgcrypto)   -- self.name = "pgcrypto"
django/contrib/postgres/search.py:147:20    - Unknown word (setweight)  -- sql = "setweight({}, {})".format(sql
django/contrib/postgres/search.py:191:19    - Unknown word (plainto)    -- "plain": "plainto_tsquery",
django/contrib/postgres/search.py:191:27    - Unknown word (tsquery)    -- "plain": "plainto_tsquery",
django/contrib/postgres/search.py:192:20    - Unknown word (phraseto)   -- "phrase": "phraseto_tsquery",
django/contrib/postgres/search.py:192:29    - Unknown word (tsquery)    -- "phrase": "phraseto_tsquery",
django/contrib/postgres/search.py:193:20    - Unknown word (tsquery)    -- "raw": "to_tsquery",
django/contrib/postgres/search.py:194:36    - Unknown word (tsquery)    -- websearch": "websearch_to_tsquery",
django/contrib/postgres/search.py:34:17     - Unknown word (tsvector)   -- return "tsvector"
django/contrib/postgres/search.py:39:17     - Unknown word (tsquery)    -- return "tsquery"
django/contrib/postgres/search.py:68:21     - Unknown word (regconfig)  -- return "%s::regconfig" % sql, params
django/contrib/postgres/search.py:91:20     - Unknown word (tsvector)   -- function = "to_tsvector"
django/contrib/postgres/signals.py:11:26     - Unknown word (typarray)   -- "SELECT oid, typarray FROM pg_type WHERE typname
django/contrib/postgres/signals.py:11:54     - Unknown word (typname)    -- typarray FROM pg_type WHERE typname = %s", (type_name,)
django/contrib/postgres/signals.py:13:9      - Unknown word (oids)       -- oids = []
django/contrib/postgres/signals.py:14:15     - Unknown word (oids)       -- array_oids = []
django/contrib/postgres/signals.py:16:13     - Unknown word (oids)       -- oids.append(row[0])
django/contrib/postgres/signals.py:17:19     - Unknown word (oids)       -- array_oids.append(row[1])
django/contrib/postgres/signals.py:8:14      - Unknown word (oids)       -- def get_type_oids(connection_alias, type
django/contrib/sessions/backends/base.py:113:15    - Unknown word (atest)       -- async def atest_cookie_worked(self)
django/contrib/sessions/backends/base.py:156:15    - Unknown word (ahas)        -- async def ahas_key(self, key):
django/contrib/sessions/backends/base.py:162:15    - Unknown word (akeys)       -- async def akeys(self):
django/contrib/sessions/backends/base.py:168:15    - Unknown word (avalues)     -- async def avalues(self):
django/contrib/sessions/backends/base.py:174:15    - Unknown word (aitems)      -- async def aitems(self):
django/contrib/sessions/backends/base.py:260:50    - Unknown word (aload)       -- session_cache = await self.aload()
django/contrib/sessions/backends/base.py:40:25     - Unknown word (testcookie) -- TEST_COOKIE_NAME = "testcookie"
django/contrib/sessions/backends/base.py:421:15    - Unknown word (aflush)      -- async def aflush(self):
django/contrib/sessions/backends/base.py:437:15    - Unknown word (acycle)      -- async def acycle_key(self):
django/contrib/sessions/backends/base.py:507:15    - Unknown word (aload)       -- async def aload(self):
django/contrib/sessions/backends/base.py:96:15     - Unknown word (asetdefault) -- async def asetdefault(self, key, value):
django/contrib/sessions/backends/cache.py:103:48    - Unknown word (acache)     -- cache.aget(await self.acache_key()) is not None:
django/contrib/sessions/backends/cache.py:108:24    - Unknown word (acache)     -- await self.acache_key(),
django/contrib/sessions/backends/cache.py:121:56    - Unknown word (ahas)       -- and await self._cache.ahas_key(
django/contrib/sessions/backends/cache.py:23:15     - Unknown word (acache)     -- async def acache_key(self):
django/contrib/sessions/backends/cache.py:38:15     - Unknown word (aload)      -- async def aload(self):
django/contrib/sessions/backends/cache.py:40:62     - Unknown word (acache)     -- cache.aget(await self.acache_key())
django/contrib/sessions/backends/cached_db.py:131:15    - Unknown word (aflush)     -- async def aflush(self):
django/contrib/sessions/backends/cached_db.py:31:15     - Unknown word (acache)     -- async def acache_key(self):
django/contrib/sessions/backends/cached_db.py:53:15     - Unknown word (aload)      -- async def aload(self):
django/contrib/sessions/backends/cached_db.py:55:54     - Unknown word (acache)     -- cache.aget(await self.acache_key())
django/contrib/sessions/backends/cached_db.py:66:32     - Unknown word (acache)     -- await self.acache_key(),
django/contrib/sessions/backends/cached_db.py:99:28     - Unknown word (acache)     -- await self.acache_key(),
django/contrib/sessions/backends/db.py:58:15     - Unknown word (aload)      -- async def aload(self):
django/contrib/sessions/backends/file.py:107:15    - Unknown word (aload)      -- async def aload(self):
django/contrib/sessions/backends/file.py:135:26    - Unknown word (WRONLY)     -- flags = os.O_WRONLY | getattr(os, "O_BINARY
django/contrib/sessions/backends/file.py:137:43    - Unknown word (CREAT)      -- |= os.O_EXCL | os.O_CREAT
django/contrib/sessions/backends/signed_cookies.py:26:15     - Unknown word (aload)      -- async def aload(self):
django/contrib/sessions/backends/signed_cookies.py:82:15     - Unknown word (acycle)     -- async def acycle_key(self):
django/contrib/sessions/models.py:19:55     - Unknown word (Referer)    -- session-ID theft via the "Referer" header.
django/contrib/sitemaps/views.py:24:54     - Unknown word (noodp)      -- Robots-Tag"] = "noindex, noodp, noarchive"
django/contrib/sites/management.py:39:60     - Unknown word (incrementation) -- instead of relying on auto-incrementation,
django/contrib/staticfiles/handlers.py:110:23    - Unknown word (awrapper)   -- async def awrapper():
django/contrib/staticfiles/handlers.py:114:42    - Unknown word (awrapper)   -- streaming_content = awrapper()
django/contrib/staticfiles/handlers.py:17:37     - Unknown word (ASGI)       -- methods used by WSGI and ASGI handlers.
django/contrib/staticfiles/handlers.py:84:55     - Unknown word (ASGI)       -- StaticFilesHandlerMixin, ASGIHandler):
django/contrib/staticfiles/handlers.py:84:7      - Unknown word (ASGI)       -- class ASGIStaticFilesHandler(StaticFiles
django/contrib/staticfiles/handlers.py:86:5      - Unknown word (ASGI)       -- ASGI application which wraps
django/contrib/staticfiles/handlers.py:9:27      - Unknown word (asgi)       -- django.core.handlers.asgi import ASGIHandler
django/contrib/staticfiles/handlers.py:9:39      - Unknown word (ASGI)       -- handlers.asgi import ASGIHandler
django/contrib/staticfiles/management/commands/runserver.py:14:16     - Unknown word (nostatic)   -- "--nostatic",
django/contrib/staticfiles/storage.py:163:58    - Unknown word (myfont)     -- face hack, like url(myfont.eot?#iefix")
django/contrib/staticfiles/storage.py:163:70    - Unknown word (iefix)      -- like url(myfont.eot?#iefix")
django/contrib/staticfiles/storage.py:187:58    - Unknown word (myfont)     -- face hack, like url(myfont.eot?#iefix")
django/contrib/staticfiles/storage.py:187:70    - Unknown word (iefix)      -- like url(myfont.eot?#iefix")
django/contrib/staticfiles/storage.py:213:23    - Unknown word (matchobj)   -- def converter(matchobj):
django/contrib/staticfiles/storage.py:220:23    - Unknown word (matchobj)   -- matches = matchobj.groupdict()
django/contrib/staticfiles/storage.py:524:58    - Unknown word (myfont)     -- face hack, like url(myfont.eot?#iefix")
django/contrib/staticfiles/storage.py:524:70    - Unknown word (iefix)      -- like url(myfont.eot?#iefix")
django/contrib/syndication/views.py:102:24    - Unknown word (argcount)   -- if code.co_argcount == 2:  # one argument
django/contrib/syndication/views.py:40:9      - Unknown word (feedgen)    -- feedgen = self.get_feed(obj
django/contrib/syndication/views.py:41:46     - Unknown word (feedgen)    -- HttpResponse(content_type=feedgen.content_type)
django/contrib/syndication/views.py:46:17     - Unknown word (feedgen)    -- feedgen.latest_post_date().timestamp
django/contrib/syndication/views.py:48:9      - Unknown word (feedgen)    -- feedgen.write(response, "utf
django/contrib/syndication/views.py:84:24     - Unknown word (argcount)   -- # Check co_argcount rather than try/excepting
django/contrib/syndication/views.py:95:28     - Unknown word (argcount)   -- if not code.co_argcount and not isinstance(
django/core/asgi.py:13:12     - Unknown word (ASGI)       -- return ASGIHandler()
django/core/asgi.py:2:27      - Unknown word (asgi)       -- django.core.handlers.asgi import ASGIHandler
django/core/asgi.py:2:39      - Unknown word (ASGI)       -- handlers.asgi import ASGIHandler
django/core/asgi.py:5:9       - Unknown word (asgi)       -- def get_asgi_application():
django/core/asgi.py:7:38      - Unknown word (ASGI)       -- interface to Django's ASGI support. Return an ASGI
django/core/asgi.py:7:62      - Unknown word (ASGI)       -- ASGI support. Return an ASGI 3 callable.
django/core/asgi.py:9:40      - Unknown word (ASGI)       -- django.core.handlers.ASGIHandler a public API
django/core/cache/backends/base.py:176:15    - Unknown word (atouch)     -- async def atouch(self, key, timeout=DEFAULT
django/core/cache/backends/base.py:196:9     - Unknown word (pgsql)      -- pgsql) this can be *much*
django/core/cache/backends/base.py:256:15    - Unknown word (ahas)       -- async def ahas_key(self, key, version
django/core/cache/backends/base.py:274:15    - Unknown word (aincr)      -- async def aincr(self, key, delta=1,
django/core/cache/backends/base.py:290:15    - Unknown word (adecr)      -- async def adecr(self, key, delta=1,
django/core/cache/backends/base.py:291:27    - Unknown word (aincr)      -- return await self.aincr(key, -delta, version
django/core/cache/backends/base.py:361:15    - Unknown word (aincr)      -- async def aincr_version(self, key, delta
django/core/cache/backends/base.py:381:15    - Unknown word (adecr)      -- async def adecr_version(self, key, delta
django/core/cache/backends/base.py:382:27    - Unknown word (aincr)      -- return await self.aincr_version(key, -delta
django/core/cache/backends/db.py:200:25    - Unknown word (threadsafe) -- # To be threadsafe, updates/inserts are
django/core/cache/backends/db.py:21:28     - Unknown word (cacheentry) -- self.model_name = "cacheentry"
django/core/cache/backends/db.py:94:48     - Unknown word (clob)       -- connection.ops.process_clob(value)
django/core/cache/backends/filebased.py:116:10    - Unknown word (createdir)  -- def _createdir(self):
django/core/cache/backends/filebased.py:17:22     - Unknown word (djcache)    -- cache_suffix = ".djcache"
django/core/cache/backends/filebased.py:23:15     - Unknown word (createdir)  -- self._createdir()
django/core/cache/backends/filebased.py:47:15     - Unknown word (createdir)  -- self._createdir() # Cache dir can be
django/core/cache/backends/memcached.py:168:11    - Unknown word (libmemcached) -- # libmemcached manages its own connections
django/core/cache/backends/memcached.py:177:27    - Unknown word (serde)        -- import pymemcache.serde
django/core/cache/backends/memcached.py:186:14    - Unknown word (serde)        -- "serde": pymemcache.serde.pickle
django/core/cache/backends/memcached.py:186:33    - Unknown word (serde)        -- "serde": pymemcache.serde.pickle_serde,
django/core/cache/backends/memcached.py:186:46    - Unknown word (serde)        -- pymemcache.serde.pickle_serde,
django/core/checks/messages.py:32:38     - Unknown word (applabel)   -- method doesn't return "applabel.modellabel" and cannot
django/core/checks/messages.py:32:47     - Unknown word (modellabel) -- doesn't return "applabel.modellabel" and cannot be changed
django/core/checks/registry.py:42:33     - Unknown word (mytag)      -- @registry.register('mytag', 'anothertag')
django/core/checks/registry.py:42:42     - Unknown word (anothertag) -- registry.register('mytag', 'anothertag')
django/core/checks/registry.py:47:42     - Unknown word (mytag)      -- register(my_check, 'mytag', 'anothertag')
django/core/checks/registry.py:47:51     - Unknown word (anothertag) -- my_check, 'mytag', 'anothertag')
django/core/checks/security/base.py:149:6     - Unknown word (xframe)     -- def _xframe_middleware():
django/core/checks/security/base.py:162:11    - Unknown word (xframe)     -- def check_xframe_options_middleware(app
django/core/checks/security/base.py:163:21    - Unknown word (xframe)     -- passed_check = _xframe_middleware()
django/core/checks/security/base.py:249:11    - Unknown word (xframe)     -- def check_xframe_deny(app_configs, *
django/core/checks/security/base.py:250:25    - Unknown word (xframe)     -- passed_check = not _xframe_middleware() or settings
django/core/files/locks.py:26:14     - Unknown word (filedescriptor) -- """Get a filedescriptor from something which
django/core/files/locks.py:4:43      - Unknown word (Feignberg)  -- example by Jonathan Feignberg in the Python
django/core/files/locks.py:57:37     - Unknown word (stackoverflow)  -- inside Structure by stackoverflow:3480240 ---
django/core/files/locks.py:6:1       - Unknown word (Anatoly)    -- Anatoly Techtonik for Roundup
django/core/files/locks.py:6:9       - Unknown word (Techtonik)  -- Anatoly Techtonik for Roundup [2] (license
django/core/files/locks.py:74:5      - Unknown word (LPOVERLAPPED)   -- LPOVERLAPPED = POINTER(OVERLAPPED
django/core/files/locks.py:80:64     - Unknown word (LPOVERLAPPED)   -- DWORD, DWORD, DWORD, LPOVERLAPPED]
django/core/files/locks.py:83:59     - Unknown word (LPOVERLAPPED)   -- DWORD, DWORD, DWORD, LPOVERLAPPED]
django/core/files/locks.py:86:28     - Unknown word (osfhandle)      -- hfile = msvcrt.get_osfhandle(_fd(f))
django/core/files/locks.py:92:28     - Unknown word (osfhandle)      -- hfile = msvcrt.get_osfhandle(_fd(f))
django/core/files/move.py:54:22     - Unknown word (WRONLY)     -- os.O_WRONLY
django/core/files/move.py:55:24     - Unknown word (CREAT)      -- | os.O_CREAT
django/core/files/move.py:73:37     - Unknown word (CIFS)       -- Certain filesystems (e.g. CIFS) fail to copy the file
django/core/files/move.py:89:24     - Unknown word (winerror)   -- if getattr(e, "winerror", 0) != 32:
django/core/files/storage/base.py:40:35     - Unknown word (overriden)  -- get_available_name` is overriden and validation is lost
django/core/files/storage/filesystem.py:122:44    - Unknown word (CREAT)      -- The combination of O_CREAT and O_EXCL makes os
django/core/files/storage/filesystem.py:125:30    - Unknown word (WRONLY)     -- os.O_WRONLY
django/core/files/storage/filesystem.py:126:32    - Unknown word (CREAT)      -- | os.O_CREAT
django/core/files/storage/filesystem.py:27:26     - Unknown word (WRONLY)     -- OS_OPEN_FLAGS = os.O_WRONLY | os.O_CREAT | os.O
django/core/files/storage/filesystem.py:27:40     - Unknown word (CREAT)      -- os.O_WRONLY | os.O_CREAT | os.O_EXCL | getattr
django/core/files/storage/filesystem.py:44:39     - Unknown word (WRONLY)     -- OS_OPEN_FLAGS != os.O_WRONLY | os.O_CREAT | os.O
django/core/files/storage/filesystem.py:44:53     - Unknown word (CREAT)      -- os.O_WRONLY | os.O_CREAT | os.O_EXCL | getattr
django/core/files/storage/memory.py:116:27    - Unknown word (ENOTDIR)    -- errno.ENOTDIR, os.strerror(errno.ENOTDIR
django/core/files/storage/memory.py:116:39    - Unknown word (strerror)   -- errno.ENOTDIR, os.strerror(errno.ENOTDIR), current
django/core/files/storage/memory.py:116:54    - Unknown word (ENOTDIR)    -- ENOTDIR, os.strerror(errno.ENOTDIR), current_path
django/core/files/storage/memory.py:127:43    - Unknown word (ENOENT)     -- FileNotFoundError(errno.ENOENT, os.strerror(errno.ENOENT
django/core/files/storage/memory.py:127:54    - Unknown word (strerror)   -- otFoundError(errno.ENOENT, os.strerror(errno.ENOENT), path
django/core/files/storage/memory.py:127:69    - Unknown word (ENOENT)     -- ENOENT, os.strerror(errno.ENOENT), path)
django/core/files/storage/memory.py:132:44    - Unknown word (ENOTDIR)    -- NotADirectoryError, errno.ENOTDIR)
django/core/files/storage/memory.py:134:48    - Unknown word (EISDIR)     -- IsADirectoryError, errno.EISDIR)
django/core/files/storage/memory.py:136:44    - Unknown word (strerror)   -- error_cls(error_code, os.strerror(error_code), path)
django/core/files/storage/memory.py:2:43      - Unknown word (Soyland)    -- inmemorystorage (BSD) by Cody Soyland, Seán Hayes, Tore Birkeland
django/core/files/storage/memory.py:2:52      - Unknown word (Seán)       -- BSD) by Cody Soyland, Seán Hayes, Tore Birkeland
django/core/files/storage/memory.py:2:69      - Unknown word (Birkeland)  -- Soyland, Seán Hayes, Tore Birkeland,
django/core/files/storage/memory.py:3:10      - Unknown word (Presta)     -- and Nick Presta.
django/core/handlers/asgi.py:139:7     - Unknown word (ASGI)       -- class ASGIHandler(base.BaseHandler
django/core/handlers/asgi.py:140:20    - Unknown word (ASGI)       -- """Handler for ASGI requests."""
django/core/handlers/asgi.py:142:21    - Unknown word (ASGI)       -- request_class = ASGIRequest
django/core/handlers/asgi.py:175:39    - Unknown word (asend)      -- signals.request_started.asend(sender=self.__class
django/core/handlers/asgi.py:227:44    - Unknown word (asend)      -- signals.request_finished.asend(sender=self.__class
django/core/handlers/asgi.py:38:7      - Unknown word (ASGI)       -- class ASGIRequest(HttpRequest)
django/core/handlers/asgi.py:40:50     - Unknown word (ASGI)       -- that decodes from an ASGI-standard request dict
django/core/handlers/base.py:193:58    - Unknown word (subthread)  -- synchronous view, run it in a subthread.
django/core/handlers/base.py:247:56    - Unknown word (subthread)  -- synchronous view, run it in a subthread
django/core/handlers/wsgi.py:151:12    - Unknown word (repercent)  -- return repercent_broken_unicode(path
django/core/handlers/wsgi.py:167:53    - Unknown word (lighttpd)   -- not every web server (lighttpd!) passes this
django/core/handlers/wsgi.py:8:35      - Unknown word (repercent)  -- utils.encoding import repercent_broken_unicode
django/core/mail/__init__.py:117:52    - Unknown word (datatuple)  -- sender, recipient in datatuple
django/core/mail/__init__.py:55:5      - Unknown word (klass)      -- klass = import_string(backend
django/core/mail/__init__.py:56:12     - Unknown word (klass)      -- return klass(fail_silently=fail_silently
django/core/mail/__init__.py:96:5      - Unknown word (datatuple)  -- datatuple, fail_silently=False
django/core/mail/__init__.py:99:13     - Unknown word (datatuple)  -- Given a datatuple of (subject, message
django/core/mail/message.py:172:41    - Unknown word (surrogateescape) -- line.encode(errors="surrogateescape"))
django/core/management/__init__.py:273:13    - Unknown word (klass)      -- klass = app_name
django/core/management/__init__.py:275:13    - Unknown word (klass)      -- klass = load_command_class
django/core/management/__init__.py:276:16    - Unknown word (klass)      -- return klass
django/core/management/__init__.py:282:58    - Unknown word (COMPREPLY)  -- is passed to BASH's `COMPREPLY` variable
django/core/management/__init__.py:283:49    - Unknown word (COMPREPLY)  -- completion suggestions. `COMPREPLY` expects a space
django/core/management/__init__.py:392:49    - Unknown word (noreload)   -- "runserver" and "--noreload" not in self.argv:
django/core/management/__init__.py:397:38    - Unknown word (autoreloader) -- # started by the autoreloader. Pretend it didn't happen
django/core/management/base.py:341:25    - Unknown word (djangoprojects) -- '"/home/djangoprojects/myproject".'
django/core/management/color.py:59:13     - Unknown word (ANSICON)    -- or "ANSICON" in os.environ
django/core/management/color.py:78:44     - Unknown word (termcolors) -- is empty django.utils.termcolors.DEFAULT_PALETTE is used
django/core/management/color.py:83:22     - Unknown word (termcolors) -- color_settings = termcolors.parse_color_setting
django/core/management/color.py:88:17     - Unknown word (termcolors) -- for role in termcolors.PALETTES[termcolors
django/core/management/color.py:88:37     - Unknown word (termcolors) -- termcolors.PALETTES[termcolors.NOCOLOR_PALETTE]:
django/core/management/color.py:9:26      - Unknown word (termcolors) -- django.utils import termcolors
django/core/management/commands/compilemessages.py:132:17    - Unknown word (ldir)       -- for ldir in dirs:
django/core/management/commands/compilemessages.py:133:61    - Unknown word (ldir)       -- filenames in os.walk(ldir):
django/core/management/commands/compilemessages.py:174:25    - Unknown word (writability) -- # Check writability on first location
django/core/management/commands/compilemessages.py:93:58     - Unknown word (topdown)    -- filenames in os.walk(".", topdown=True):
django/core/management/commands/createcachetable.py:43:23     - Unknown word (tablenames) -- def handle(self, *tablenames, **options):
django/core/management/commands/createcachetable.py:47:12     - Unknown word (tablenames) -- if tablenames:
django/core/management/commands/createcachetable.py:49:30     - Unknown word (tablenames) -- for tablename in tablenames:
django/core/management/commands/diffsettings.py:4:28      - Unknown word (omittable)  -- module_to_dict(module, omittable=lambda k: k.startswith
django/core/management/commands/diffsettings.py:64:34     - Unknown word (postconf)   -- Inspired by Postfix's "postconf -n".
django/core/management/commands/diffsettings.py:6:69      - Unknown word (omittable)  -- in dir(module) if not omittable(k)}
django/core/management/commands/inspectdb.py:298:26    - Unknown word (sfield)     -- new_name = "%sfield" % new_name
django/core/management/commands/makemessages.py:105:9     - Unknown word (xgettext)    -- xgettext GNU gettext utility
django/core/management/commands/makemessages.py:107:24    - Unknown word (templatized) -- if not self.is_templatized:
django/core/management/commands/makemessages.py:121:43    - Unknown word (xgettext)    -- messages generated by xgettext GNU gettext utility
django/core/management/commands/makemessages.py:126:24    - Unknown word (templatized) -- if not self.is_templatized:
django/core/management/commands/makemessages.py:149:20    - Unknown word (templatized) -- if self.is_templatized:
django/core/management/commands/makemessages.py:216:5     - Unknown word (xgettext)    -- xgettext_options = ["--from-code
django/core/management/commands/makemessages.py:254:32    - Unknown word (djangojs)    -- 'if the domain is "djangojs"). Separate multiple
django/core/management/commands/makemessages.py:336:18    - Unknown word (xgettext)    -- self.xgettext_options = self.xgettext
django/core/management/commands/makemessages.py:336:42    - Unknown word (xgettext)    -- xgettext_options = self.xgettext_options[:] + ["--no
django/core/management/commands/makemessages.py:352:43    - Unknown word (djangojs)    -- domain not in ("django", "djangojs"):
django/core/management/commands/makemessages.py:355:32    - Unknown word (djangojs)    -- "'django' and 'djangojs'"
django/core/management/commands/makemessages.py:357:28    - Unknown word (djangojs)    -- if self.domain == "djangojs":
django/core/management/commands/makemessages.py:536:19    - Unknown word (topdown)     -- root, topdown=True, followlinks=self
django/core/management/commands/makemessages.py:536:33    - Unknown word (followlinks) -- root, topdown=True, followlinks=self.symlinks
django/core/management/commands/makemessages.py:602:37    - Unknown word (djangojs)    -- self.domain not in ("djangojs", "django"):
django/core/management/commands/makemessages.py:702:9     - Unknown word (pofile)      -- pofile = os.path.join(basedir
django/core/management/commands/makemessages.py:704:27    - Unknown word (pofile)      -- if os.path.exists(pofile):
django/core/management/commands/makemessages.py:705:60    - Unknown word (pofile)      -- msgmerge_options + [pofile, potfile]
django/core/management/commands/makemessages.py:714:25    - Unknown word (pofile)      -- msgs = Path(pofile).read_text(encoding
django/core/management/commands/makemessages.py:724:19    - Unknown word (pofile)      -- with open(pofile, "w", encoding="utf
django/core/management/commands/makemessages.py:81:12     - Unknown word (templatized) -- def is_templatized(self):
django/core/management/commands/makemessages.py:97:24     - Unknown word (templatized) -- if not self.is_templatized:
django/core/management/commands/migrate.py:14:31     - Unknown word (Truncator)  -- django.utils.text import Truncator
django/core/management/commands/migrate.py:511:21    - Unknown word (Truncator)  -- truncated = Truncator(action)
django/core/management/commands/runserver.py:116:38    - Unknown word (autoreloader) -- the server, using the autoreloader if needed."""
django/core/management/commands/runserver.py:158:23    - Unknown word (EADDRINUSE)   -- errno.EADDRINUSE: "That port is already
django/core/management/commands/runserver.py:159:23    - Unknown word (EADDRNOTAVAIL) -- errno.EADDRNOTAVAIL: "That IP address can
django/core/management/commands/runserver.py:16:1      - Unknown word (naiveip)    -- naiveip_re = _lazy_re_compile
django/core/management/commands/runserver.py:197:67    - Unknown word (ASGI)          -- a production WSGI or ASGI server "
django/core/management/commands/runserver.py:53:16     - Unknown word (nothreading) -- "--nothreading",
django/core/management/commands/runserver.py:59:16     - Unknown word (noreload)    -- "--noreload",
django/core/management/commands/runserver.py:94:26     - Unknown word (naiveip)     -- m = re.match(naiveip_re, options["addrport
django/core/management/commands/sendtestemail.py:33:56     - Unknown word (gethostname) -- %s on %s" % (socket.gethostname(), timezone.now())
django/core/management/commands/shell.py:13:10     - Unknown word (bpython)    -- "bpython, if one of them is available
django/core/management/commands/shell.py:18:27     - Unknown word (bpython)    -- shells = ["ipython", "bpython", "python"]
django/core/management/commands/shell.py:35:30     - Unknown word (bpython)    -- '"ipython", "bpython", and "python"'
django/core/management/commands/shell.py:52:9      - Unknown word (bpython)    -- def bpython(self, options):
django/core/management/commands/shell.py:53:16     - Unknown word (bpython)    -- import bpython
django/core/management/commands/squashmigrations.py:143:13    - Unknown word (smigration) -- for smigration in migrations_to_squash
django/core/management/commands/squashmigrations.py:144:16    - Unknown word (smigration) -- if smigration.replaces:
django/core/management/commands/squashmigrations.py:150:31    - Unknown word (smigration) -- operations.extend(smigration.operations)
django/core/management/commands/squashmigrations.py:151:31    - Unknown word (smigration) -- for dependency in smigration.dependencies:
django/core/management/commands/squashmigrations.py:157:39    - Unknown word (smigration) -- elif dependency[0] != smigration.app_label or first_migration
django/core/management/templates.py:315:16    - Unknown word (addheaders) -- opener.addheaders = [("User-Agent", f
django/core/management/utils.py:73:13     - Unknown word (fext)       -- fext = f + ext
django/core/management/utils.py:74:31     - Unknown word (fext)       -- if os.path.isfile(fext):
django/core/management/utils.py:75:24     - Unknown word (fext)       -- return fext
django/core/paginator.py:29:26     - Unknown word (paginators) -- range generated by paginators, e.g. [1, 2, '…', 5
django/core/serializers/base.py:2:32      - Unknown word (unserializer) -- abstract serializer/unserializer base classes.
django/core/serializers/base.py:59:9      - Unknown word (perc)         -- perc = count * 100 // self
django/core/serializers/base.py:60:16     - Unknown word (perc)         -- done = perc * self.progress_width
django/core/serializers/pyyaml.py:33:22     - Unknown word (representer) -- DjangoSafeDumper.add_representer(decimal.Decimal, DjangoSafeDu
django/core/serializers/pyyaml.py:34:22     - Unknown word (representer) -- DjangoSafeDumper.add_representer(
django/core/serializers/pyyaml.py:39:22     - Unknown word (representer) -- DjangoSafeDumper.add_representer(dict, DjangoSafeDumper
django/core/serializers/xml_serializer.py:117:59    - Unknown word (subelements) -- keys are rolled out as subelements
django/core/serializers/xml_serializer.py:142:63    - Unknown word (subelements) -- keys are rolled out as subelements
django/core/serializers/xml_serializer.py:15:19     - Unknown word (xmlutils)   -- from django.utils.xmlutils import SimplerXMLGenerator
django/core/serializers/xml_serializer.py:305:46    - Unknown word (subelements) -- there are 'natural' subelements, it must be a natural
django/core/serializers/xml_serializer.py:345:46    - Unknown word (subelements) -- there are 'natural' subelements, it must be a natural
django/core/serializers/xml_serializer.py:411:33    - Unknown word (Heimes)      -- code based on Christian Heimes' defusedxml
django/core/servers/basehttp.py:238:18    - Unknown word (requestline) -- self.raw_requestline = self.rfile.readline
django/core/servers/basehttp.py:239:25    - Unknown word (requestline) -- if len(self.raw_requestline) > 65536:
django/core/servers/basehttp.py:240:18    - Unknown word (requestline) -- self.requestline = ""
django/core/servers/basehttp.py:252:43    - Unknown word (backpointer) -- request_handler = self  # backpointer for logging & connection
django/core/servers/basehttp.py:32:50     - Unknown word (projectname) -- application`` object in ``projectname/wsgi.py``.
django/core/signing.py:16:20     - Unknown word (Imhlb)      -- >>> signing.loads("ImhlbGxvIg:1QaUZC:YIye-ze
django/core/signing.py:16:61     - Unknown word (sgmk)       -- YIye-ze3TTx7gtSv422nZA4sgmk")
django/core/signing.py:18:20     - Unknown word (Imhlb)      -- >>> signing.loads("ImhlbGxvIg:1QaUZC:YIye-ze
django/core/signing.py:20:26     - Unknown word (Imhlb)      -- BadSignature: Signature "ImhlbGxvIg:1QaUZC:YIye-ze
django/core/signing.py:27:32     - Unknown word (ZVJs)       -- eJwFwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T
django/core/signing.py:27:36     - Unknown word (Ngkxa)      -- FwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T7vhAml
django/core/signing.py:27:44     - Unknown word (Dgxc)       -- rCiILN47r-GyZVJsNgkxaFxoDgxcOHGxMKD_T7vhAml:1QaUaL
django/core/signing.py:27:81     - Unknown word (FQVXI)      -- vhAml:1QaUaL:BA0thEZrp4FQVXIXuOvYJtLJSrQ'
django/core/signing.py:27:9      - Unknown word (ERACA)      -- '.eJwFwcERACAIwLCF-rCiILN47r-GyZVJsNgkxaFxo
django/core/signing.py:7:2       - Unknown word (Imhlb)      -- 'ImhlbGxvIg:1QaUZC:YIye-ze
django/core/signing.py:7:43      - Unknown word (sgmk)       -- YIye-ze3TTx7gtSv422nZA4sgmk'
django/core/validators.py:128:19    - Unknown word (uffff)      -- ul = "\u00a1-\uffff" # Unicode letters
django/core/validators.py:71:19     - Unknown word (uffff)      -- ul = "\u00a1-\uffff" # Unicode letters
django/db/backends/base/base.py:108:62    - Unknown word (executemany) -- invoked around execute()/executemany()
django/db/backends/base/creation.py:101:36    - Unknown word (DJANGOS)    -- environ.get("RUNNING_DJANGOS_TEST_SUITE") == "true
django/db/backends/base/creation.py:33:63     - Unknown word (keepdb)     -- False, serialize=True, keepdb=False
django/db/backends/base/creation.py:367:28    - Unknown word (RDBMS)      -- accordingly to the RDBMS particularities.
django/db/backends/base/creation.py:46:16     - Unknown word (keepdb)     -- if keepdb:
django/db/backends/base/creation.py:57:38     - Unknown word (keepdb)     -- could skip this call if keepdb is True, but we instead
django/db/backends/base/creation.py:58:23     - Unknown word (keepdb)     -- # give it the keepdb param. This is to handle
django/db/backends/base/creation.py:62:54     - Unknown word (keepdb)     -- verbosity, autoclobber, keepdb)
django/db/backends/base/features.py:175:24    - Unknown word (clientside) -- schema_editor_uses_clientside_param_binding = False
django/db/backends/base/features.py:83:36     - Unknown word (timedeltas) -- a true datatype for timedeltas?
django/db/backends/base/operations.py:316:23    - Unknown word (lastrowid)  -- return cursor.lastrowid
django/db/backends/base/operations.py:371:17    - Unknown word (clob)       -- def process_clob(self, value):
django/db/backends/base/operations.py:373:31    - Unknown word (CLOB)       -- Return the value of a CLOB column, for backends
django/db/backends/base/operations.py:525:18    - Unknown word (autopk)     -- def validate_autopk_value(self, value):
django/db/backends/base/operations.py:683:9     - Unknown word (subexpression) -- subexpression types (e.g., date expressions
django/db/backends/base/schema.py:1223:9    - Unknown word (rels)         -- rels_to_update = []
django/db/backends/base/schema.py:1225:13   - Unknown word (rels)         -- rels_to_update.extend(_related
django/db/backends/base/schema.py:1231:13   - Unknown word (rels)         -- rels_to_update.extend(_related
django/db/backends/base/schema.py:1232:54   - Unknown word (rels)         -- on the other end of rels from the PK stuff above
django/db/backends/base/schema.py:1233:33   - Unknown word (rels)         -- old_rel, new_rel in rels_to_update:
django/db/backends/base/schema.py:214:37    - Unknown word (deferreds)    -- Create column SQL, add FK deferreds if needed.
django/db/backends/base/schema.py:215:16    - Unknown word (sqls)         -- column_sqls = []
django/db/backends/base/schema.py:249:20    - Unknown word (sqls)         -- column_sqls.append(
django/db/backends/base/schema.py:273:20    - Unknown word (sqls)         -- constraint_sqls = []
django/db/backends/base/schema.py:281:24    - Unknown word (sqls)         -- constraint_sqls.extend(
django/db/backends/base/schema.py:289:43    - Unknown word (sqls)         -- statement in (*column_sqls, *constraint_sqls)
django/db/backends/base/schema.py:705:22    - Unknown word (retablespace) -- self.sql_retablespace_table
django/db/backends/base/schema.py:83:7      - Unknown word (Overrideable) -- # Overrideable SQL templates
django/db/backends/base/schema.py:86:9      - Unknown word (retablespace) -- sql_retablespace_table = "ALTER TABLE
django/db/backends/mysql/base.py:151:10    - Unknown word (tinyblob)    -- "tinyblob",
django/db/backends/mysql/base.py:153:10    - Unknown word (mediumblob)  -- "mediumblob",
django/db/backends/mysql/base.py:155:10    - Unknown word (tinytext)    -- "tinytext",
django/db/backends/mysql/base.py:157:10    - Unknown word (mediumtext)  -- "mediumtext",
django/db/backends/mysql/base.py:57:29     - Unknown word (reraises)   -- exception instances and reraises them with the correct
django/db/backends/mysql/base.py:84:9      - Unknown word (executemany) -- def executemany(self, query, args):
django/db/backends/mysql/base.py:86:32     - Unknown word (executemany) -- return self.cursor.executemany(query, args)
django/db/backends/mysql/creation.py:20:59     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
django/db/backends/mysql/creation.py:22:65     - Unknown word (keepdb)     -- cursor, parameters, keepdb)
django/db/backends/mysql/creation.py:31:49     - Unknown word (keepdb)     -- suffix, verbosity, keepdb=False):
django/db/backends/mysql/creation.py:40:70     - Unknown word (keepdb)     -- cursor, test_db_params, keepdb)
django/db/backends/mysql/creation.py:42:20     - Unknown word (keepdb)     -- if keepdb:
django/db/backends/mysql/creation.py:67:14     - Unknown word (mysqldump)  -- "mysqldump",
django/db/backends/mysql/creation.py:86:48     - Unknown word (SIGPIPE)    -- dump_proc to receive a SIGPIPE if the load process
django/db/backends/mysql/features.py:144:46    - Unknown word (nonaggregated) -- GROUP BY cannot contain nonaggregated column when "
django/db/backends/mysql/introspection.py:169:37    - Unknown word (prec)       -- to_int(info.num_prec) or line[4],
django/db/backends/mysql/introspection.py:19:37     - Unknown word (prec)       -- data_type max_len num_prec num_scale extra column
django/db/backends/mysql/introspection.py:335:39    - Unknown word (colseq)     -- non_unique, index, colseq, column, order, type
django/db/backends/mysql/operations.py:120:36    - Unknown word (MAKEDATE)   -- f"CAST(DATE_FORMAT(MAKEDATE(YEAR({sql}), 1) + "
django/db/backends/mysql/operations.py:245:18    - Unknown word (autopk)     -- def validate_autopk_value(self, value):
django/db/backends/mysql/operations.py:285:32    - Unknown word (timespec)   -- return value.isoformat(timespec="microseconds")
django/db/backends/mysql/operations.py:362:17    - Unknown word (TIMESTAMPDIFF) -- return "TIMESTAMPDIFF(MICROSECOND, %s, %s
django/db/backends/mysql/operations.py:47:15     - Unknown word (DAYOFWEEK)  -- # DAYOFWEEK() returns an integer
django/db/backends/mysql/operations.py:48:22     - Unknown word (DAYOFWEEK)  -- return f"DAYOFWEEK({sql})", params
django/db/backends/mysql/operations.py:58:42     - Unknown word (YEARWEEK)   -- the year part from the YEARWEEK function, which returns
django/db/backends/mysql/operations.py:60:31     - Unknown word (YEARWEEK)   -- return f"TRUNCATE(YEARWEEK({sql}, 3), -2) / 10
django/db/backends/mysql/operations.py:65:44     - Unknown word (loookup)    -- ValueError(f"Invalid loookup type: {lookup_type!r
django/db/backends/mysql/operations.py:79:19     - Unknown word (MAKEDATE)   -- f"MAKEDATE(YEAR({sql}), 1) + "
django/db/backends/oracle/base.py:133:23    - Unknown word (NCLOB)      -- "JSONField": "NCLOB",
django/db/backends/oracle/base.py:144:23    - Unknown word (NCLOB)      -- "TextField": "NCLOB",
django/db/backends/oracle/base.py:158:29    - Unknown word (clob)       -- limited_data_types = ("clob", "nclob", "blob")
django/db/backends/oracle/base.py:158:37    - Unknown word (nclob)      -- data_types = ("clob", "nclob", "blob")
django/db/backends/oracle/base.py:192:6     - Unknown word (likec)      -- _likec_operators = {
django/db/backends/oracle/base.py:194:22    - Unknown word (LIKEC)      -- "contains": "LIKEC %s ESCAPE '\\'",
django/db/backends/oracle/base.py:195:23    - Unknown word (LIKEC)      -- "icontains": "LIKEC UPPER(%s) ESCAPE '\
django/db/backends/oracle/base.py:196:24    - Unknown word (LIKEC)      -- "startswith": "LIKEC %s ESCAPE '\\'",
django/db/backends/oracle/base.py:197:22    - Unknown word (LIKEC)      -- "endswith": "LIKEC %s ESCAPE '\\'",
django/db/backends/oracle/base.py:198:25    - Unknown word (LIKEC)      -- "istartswith": "LIKEC UPPER(%s) ESCAPE '\
django/db/backends/oracle/base.py:225:6     - Unknown word (likec)      -- _likec_pattern_ops = {
django/db/backends/oracle/base.py:296:40    - Unknown word (likec)      -- self.operators = self._likec_operators
django/db/backends/oracle/base.py:297:42    - Unknown word (likec)      -- pattern_ops = self._likec_pattern_ops
django/db/backends/oracle/base.py:302:25    - Unknown word (stmtcachesize) -- self.connection.stmtcachesize = 20
django/db/backends/oracle/base.py:362:39    - Unknown word (CLOB)          -- size needs to be set as CLOB. Alternatively, if the
django/db/backends/oracle/base.py:402:71    - Unknown word (CLOB)          -- 000 characters as a CLOB.
django/db/backends/oracle/base.py:403:48    - Unknown word (CLOB)          -- size = Database.DB_TYPE_CLOB
django/db/backends/oracle/base.py:447:21    - Unknown word (outputtypehandler) -- self.cursor.outputtypehandler = self._output_type
django/db/backends/oracle/base.py:458:35    - Unknown word (prec)              -- context = decimal.Context(prec=precision)
django/db/backends/oracle/base.py:459:45    - Unknown word (scaleb)            -- decimal.Decimal(1).scaleb(-scale)
django/db/backends/oracle/base.py:466:38    - Unknown word (NCLOB)             -- appropriate Python type, and NCLOB with JSON as strings
django/db/backends/oracle/base.py:474:21    - Unknown word (outconverter)      -- outconverter = FormatStylePlaceholderCurso
django/db/backends/oracle/base.py:478:21    - Unknown word (outconverter)      -- outconverter = float
django/db/backends/oracle/base.py:482:17    - Unknown word (outconverter)      -- outconverter = FormatStylePlaceholderCurso
django/db/backends/oracle/base.py:489:17    - Unknown word (outconverter)      -- outconverter = FormatStylePlaceholderCurso
django/db/backends/oracle/base.py:493:17    - Unknown word (arraysize)         -- arraysize=cursor.arraysize,
django/db/backends/oracle/base.py:493:34    - Unknown word (arraysize)         -- arraysize=cursor.arraysize,
django/db/backends/oracle/base.py:494:17    - Unknown word (outconverter)      -- outconverter=outconverter,
django/db/backends/oracle/base.py:496:35    - Unknown word (NLOB)              -- oracledb 2.0.0+ returns NLOB columns with IS JSON
django/db/backends/oracle/base.py:498:46    - Unknown word (NCLOB)             -- == Database.DB_TYPE_NCLOB:
django/db/backends/oracle/base.py:499:48    - Unknown word (NCLOB)             -- var(Database.DB_TYPE_NCLOB, arraysize=cursor.arraysize
django/db/backends/oracle/base.py:499:55    - Unknown word (arraysize)         -- Database.DB_TYPE_NCLOB, arraysize=cursor.arraysize)
django/db/backends/oracle/base.py:499:72    - Unknown word (arraysize)         -- NCLOB, arraysize=cursor.arraysize)
django/db/backends/oracle/base.py:516:22    - Unknown word (setinputsizes)     -- self.setinputsizes(**sizes)
django/db/backends/oracle/base.py:525:22    - Unknown word (setinputsizes)     -- self.setinputsizes(*sizes)
django/db/backends/oracle/base.py:550:15    - Unknown word (executemany)       -- # executemany() shares the formatted
django/db/backends/oracle/base.py:583:9     - Unknown word (executemany)       -- def executemany(self, query, params
django/db/backends/oracle/base.py:589:16    - Unknown word (firstparams)       -- query, firstparams = self._fix_for_params
django/db/backends/oracle/base.py:592:22    - Unknown word (firstparams)       -- formatted = [firstparams] + [self._format_params
django/db/backends/oracle/base.py:595:32    - Unknown word (executemany)       -- return self.cursor.executemany(
django/db/backends/oracle/base.py:609:9     - Unknown word (arrayvar)          -- def arrayvar(self, *args):
django/db/backends/oracle/base.py:610:44    - Unknown word (arrayvar)          -- VariableWrapper(self.cursor.arrayvar(*args))
django/db/backends/oracle/base.py:80:61     - Unknown word (DJANGOTEST) -- integrity constraint (TEST_DJANGOTEST.SYS
django/db/backends/oracle/base.py:83:53     - Unknown word (DJANGOTEST) -- unique constraint (DJANGOTEST.DEFERRABLE_
django/db/backends/oracle/client.py:8:21      - Unknown word (rlwrap)     -- wrapper_name = "rlwrap"
django/db/backends/oracle/creation.py:113:64    - Unknown word (keepdb)     -- parameters, verbosity, keepdb
django/db/backends/oracle/creation.py:29:63     - Unknown word (keepdb)     -- autoclobber=False, keepdb=False):
django/db/backends/oracle/creation.py:307:37    - Unknown word (DATAFILES)  -- INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS
django/db/backends/oracle/creation.py:309:37    - Unknown word (DATAFILES)  -- INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS
django/db/backends/oracle/creation.py:35:56     - Unknown word (keepdb)     -- parameters, verbosity, keepdb
django/db/backends/oracle/creation.py:78:64     - Unknown word (keepdb)     -- parameters, verbosity, keepdb
django/db/backends/oracle/creation.py:93:75     - Unknown word (keepdb)     -- parameters, verbosity, keepdb)
django/db/backends/oracle/features.py:125:47    - Unknown word (NCLOB)       -- t support comparing NCLOB to NUMBER.": {
django/db/backends/oracle/features.py:127:23    - Unknown word (textlink)    -- "test_textlink_filter",
django/db/backends/oracle/features.py:46:15     - Unknown word (uppercasing) -- # does by uppercasing all identifiers.
django/db/backends/oracle/functions.py:20:17     - Unknown word (NUMTODSINTERVAL) -- function = "NUMTODSINTERVAL"
django/db/backends/oracle/introspection.py:102:31    - Unknown word (mviews)     -- FROM user_mviews
django/db/backends/oracle/introspection.py:103:32    - Unknown word (mviews)     -- WHERE user_mviews.mview_name = user_tables
django/db/backends/oracle/introspection.py:103:39    - Unknown word (mview)      -- WHERE user_mviews.mview_name = user_tables.table
django/db/backends/oracle/introspection.py:112:31    - Unknown word (mview)      -- WHERE user_mviews.mview_name = UPPER(%s)
django/db/backends/oracle/introspection.py:180:37    - Unknown word (ROWNUM)     -- SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0".format
django/db/backends/oracle/introspection.py:24:26     - Unknown word (CLOB)       -- oracledb.DB_TYPE_CLOB: "TextField",
django/db/backends/oracle/introspection.py:27:26     - Unknown word (NCLOB)      -- oracledb.DB_TYPE_NCLOB: "TextField",
django/db/backends/oracle/introspection.py:309:17    - Unknown word (LISTAGG)    -- LISTAGG(LOWER(cols.column_name
django/db/backends/oracle/introspection.py:350:17    - Unknown word (LISTAGG)    -- LISTAGG(LOWER(cols.column_name
django/db/backends/oracle/introspection.py:386:17    - Unknown word (LISTAGG)    -- LISTAGG(LOWER(cols.column_name
django/db/backends/oracle/introspection.py:388:17    - Unknown word (LISTAGG)    -- LISTAGG(cols.descend, ',') WITHIN
django/db/backends/oracle/introspection.py:54:36     - Unknown word (NCLOB)      -- data_type == oracledb.NCLOB and description.is_json
django/db/backends/oracle/introspection.py:74:31     - Unknown word (mviews)     -- FROM user_mviews
django/db/backends/oracle/introspection.py:75:32     - Unknown word (mviews)     -- WHERE user_mviews.mview_name = user_tables
django/db/backends/oracle/introspection.py:75:39     - Unknown word (mview)      -- WHERE user_mviews.mview_name = user_tables.table
django/db/backends/oracle/introspection.py:80:20     - Unknown word (mview)      -- SELECT mview_name, 'v', NULL FROM
django/db/backends/oracle/introspection.py:80:52     - Unknown word (mviews)     -- 'v', NULL FROM user_mviews
django/db/backends/oracle/operations.py:102:44    - Unknown word (loookup)    -- ValueError(f"Invalid loookup type: {lookup_type!r
django/db/backends/oracle/operations.py:346:30    - Unknown word (currval)    -- cursor.execute('"%s".currval' % sq_name)
django/db/backends/oracle/operations.py:371:17    - Unknown word (clob)       -- def process_clob(self, value):
django/db/backends/oracle/operations.py:421:49    - Unknown word (rcons)      -- user_tables.table_name, rcons.constraint_name
django/db/backends/oracle/operations.py:429:42    - Unknown word (rcons)      -- user_constraints rcons
django/db/backends/oracle/operations.py:430:54    - Unknown word (rcons)      -- tables.table_name = rcons.table_name
django/db/backends/oracle/operations.py:431:29    - Unknown word (rcons)      -- AND rcons.constraint_type = 'R
django/db/backends/oracle/operations.py:434:25    - Unknown word (NOCYCLE)    -- NOCYCLE PRIOR cons.constraint
django/db/backends/oracle/operations.py:434:62    - Unknown word (rcons)      -- cons.constraint_name = rcons.r_constraint_name
django/db/backends/oracle/operations.py:707:18    - Unknown word (NUMTODSINTERVAL) -- "NUMTODSINTERVAL(TO_NUMBER(%s - %s),
django/db/backends/oracle/operations.py:98:30     - Unknown word (IYYY)       -- extract_param = "IYYY"
django/db/backends/oracle/schema.py:130:25    - Unknown word (CLOB)       -- if re.match("^N?CLOB", old_type):
django/db/backends/oracle/schema.py:187:40    - Unknown word (uppercased) -- properly shortened and uppercased identifier as returned
django/db/backends/oracle/utils.py:69:17     - Unknown word (NCLOB)      -- NCLOB = "TO_NCLOB(%s)"
django/db/backends/oracle/utils.py:69:5      - Unknown word (NCLOB)      -- NCLOB = "TO_NCLOB(%s)"
django/db/backends/oracle/utils.py:90:22     - Unknown word (NCLOB)      -- "TextField": NCLOB,
django/db/backends/oracle/utils.py:98:25     - Unknown word (makedsn)    -- return Database.makedsn(host, int(settings_dict
django/db/backends/postgresql/base.py:297:73    - Unknown word (poolers)     -- default to keep connection poolers
django/db/backends/postgresql/base.py:330:36    - Unknown word (getconn)     -- connection = self.pool.getconn()
django/db/backends/postgresql/base.py:383:54    - Unknown word (putconn)     -- errors` only works for `putconn` as long as there
django/db/backends/postgresql/base.py:391:43    - Unknown word (putconn)     -- self.connection._pool.putconn(self.connection)
django/db/backends/postgresql/base.py:434:13    - Unknown word (tzloader)    -- tzloader = self.connection.adapters
django/db/backends/postgresql/base.py:434:60    - Unknown word (TIMESTAMPTZ) -- adapters.get_loader(TIMESTAMPTZ_OID, Format.TEXT)
django/db/backends/postgresql/base.py:435:33    - Unknown word (tzloader)    -- if self.timezone != tzloader.timezone:
django/db/backends/postgresql/base.py:436:26    - Unknown word (tzloader)    -- register_tzloader(self.timezone, cursor
django/db/backends/postgresql/base.py:53:62     - Unknown word (tzloader)   -- adapters_template, register_tzloader
django/db/backends/postgresql/base.py:55:39     - Unknown word (timestamptz) -- OID = adapters.types["timestamptz"].oid
django/db/backends/postgresql/base.py:55:5      - Unknown word (TIMESTAMPTZ) -- TIMESTAMPTZ_OID = adapters.types
django/db/backends/postgresql/base.py:561:13    - Unknown word (qparts)      -- qparts = [sql.SQL("SELECT
django/db/backends/postgresql/base.py:564:21    - Unknown word (qparts)      -- qparts.append(sql.Literal(item
django/db/backends/postgresql/base.py:565:21    - Unknown word (qparts)      -- qparts.append(sql.SQL(",")
django/db/backends/postgresql/base.py:566:21    - Unknown word (qparts)      -- del qparts[-1]
django/db/backends/postgresql/base.py:568:13    - Unknown word (qparts)      -- qparts.append(sql.SQL(")")
django/db/backends/postgresql/base.py:585:9     - Unknown word (prepareable) -- prepareable SQL (#20516).
django/db/backends/postgresql/base.py:66:5      - Unknown word (INETARRAY)   -- INETARRAY_OID = 1041
django/db/backends/postgresql/base.py:67:5      - Unknown word (INETARRAY)   -- INETARRAY = psycopg2.extensions
django/db/backends/postgresql/base.py:68:10     - Unknown word (INETARRAY)   -- (INETARRAY_OID,),
django/db/backends/postgresql/base.py:69:10     - Unknown word (INETARRAY)   -- "INETARRAY",
django/db/backends/postgresql/base.py:72:39     - Unknown word (INETARRAY)   -- extensions.register_type(INETARRAY)
django/db/backends/postgresql/base.py:99:25     - Unknown word (bytea)       -- "BinaryField": "bytea",
django/db/backends/postgresql/client.py:43:18     - Unknown word (PGSERVICE)  -- env["PGSERVICE"] = str(service)
django/db/backends/postgresql/client.py:45:18     - Unknown word (PGSSLMODE)  -- env["PGSSLMODE"] = str(sslmode)
django/db/backends/postgresql/client.py:47:18     - Unknown word (PGSSLROOTCERT) -- env["PGSSLROOTCERT"] = str(sslrootcert
django/db/backends/postgresql/client.py:49:18     - Unknown word (PGSSLCERT)     -- env["PGSSLCERT"] = str(sslcert)
django/db/backends/postgresql/client.py:51:18     - Unknown word (PGSSLKEY)      -- env["PGSSLKEY"] = str(sslkey)
django/db/backends/postgresql/client.py:53:18     - Unknown word (PGPASSFILE)    -- env["PGPASSFILE"] = str(passfile)
django/db/backends/postgresql/creation.py:35:57     - Unknown word (datname)    -- catalog.pg_database WHERE datname = %s",
django/db/backends/postgresql/creation.py:40:59     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
django/db/backends/postgresql/creation.py:42:16     - Unknown word (keepdb)     -- if keepdb and self._database_exists
django/db/backends/postgresql/creation.py:46:65     - Unknown word (keepdb)     -- cursor, parameters, keepdb)
django/db/backends/postgresql/creation.py:52:22     - Unknown word (keepdb)     -- elif not keepdb:
django/db/backends/postgresql/creation.py:57:49     - Unknown word (keepdb)     -- suffix, verbosity, keepdb=False):
django/db/backends/postgresql/features.py:31:24     - Unknown word (clientside) -- schema_editor_uses_clientside_param_binding = True
django/db/backends/postgresql/features.py:46:17     - Unknown word (plpgsql)    -- $$ LANGUAGE plpgsql;"""
django/db/backends/postgresql/features.py:54:17     - Unknown word (plpgsql)    -- $$ LANGUAGE plpgsql;"""
django/db/backends/postgresql/introspection.py:100:44    - Unknown word (attcollation)   -- pg_collation co ON a.attcollation = co.oid
django/db/backends/postgresql/introspection.py:101:33    - Unknown word (atttypid)       -- JOIN pg_type t ON a.atttypid = t.oid
django/db/backends/postgresql/introspection.py:102:34    - Unknown word (attrelid)       -- JOIN pg_class c ON a.attrelid = c.oid
django/db/backends/postgresql/introspection.py:106:23    - Unknown word (nspname)        -- AND n.nspname NOT IN ('pg_catalog
django/db/backends/postgresql/introspection.py:134:30    - Unknown word (colname)        -- a.attname AS colname
django/db/backends/postgresql/introspection.py:138:27    - Unknown word (classid)        -- AND d.classid = 'pg_class'::regclass
django/db/backends/postgresql/introspection.py:138:49    - Unknown word (regclass)       -- classid = 'pg_class'::regclass
django/db/backends/postgresql/introspection.py:139:27    - Unknown word (refclassid)     -- AND d.refclassid = 'pg_class'::regclass
django/db/backends/postgresql/introspection.py:139:52    - Unknown word (regclass)       -- refclassid = 'pg_class'::regclass
django/db/backends/postgresql/introspection.py:140:42    - Unknown word (refobjid)       -- pg_attribute a ON d.refobjid = a.attrelid
django/db/backends/postgresql/introspection.py:140:55    - Unknown word (attrelid)       -- a ON d.refobjid = a.attrelid
django/db/backends/postgresql/introspection.py:141:27    - Unknown word (refobjsubid)    -- AND d.refobjsubid = a.attnum
django/db/backends/postgresql/introspection.py:141:43    - Unknown word (attnum)         -- AND d.refobjsubid = a.attnum
django/db/backends/postgresql/introspection.py:142:50    - Unknown word (refobjid)       -- class tbl ON tbl.oid = d.refobjid
django/db/backends/postgresql/introspection.py:164:42    - Unknown word (conrelid)       -- JOIN pg_class c1 ON con.conrelid = c1.oid
django/db/backends/postgresql/introspection.py:165:42    - Unknown word (confrelid)      -- JOIN pg_class c2 ON con.confrelid = c2.oid
django/db/backends/postgresql/introspection.py:167:48    - Unknown word (attrelid)       -- attribute a1 ON c1.oid = a1.attrelid AND a1.attnum = con
django/db/backends/postgresql/introspection.py:167:64    - Unknown word (attnum)         -- a1.attrelid AND a1.attnum = con.conkey[1]
django/db/backends/postgresql/introspection.py:167:77    - Unknown word (conkey)         -- AND a1.attnum = con.conkey[1]
django/db/backends/postgresql/introspection.py:169:64    - Unknown word (attnum)         -- a2.attrelid AND a2.attnum = con.confkey[1]
django/db/backends/postgresql/introspection.py:169:77    - Unknown word (confkey)        -- AND a2.attnum = con.confkey[1]
django/db/backends/postgresql/introspection.py:172:21    - Unknown word (contype)        -- con.contype = 'f' AND
django/db/backends/postgresql/introspection.py:193:19    - Unknown word (conname)        -- c.conname,
django/db/backends/postgresql/introspection.py:196:35    - Unknown word (conkey)         -- FROM unnest(c.conkey) WITH ORDINALITY cols
django/db/backends/postgresql/introspection.py:196:48    - Unknown word (ORDINALITY)     -- unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
django/db/backends/postgresql/introspection.py:196:64    - Unknown word (colid)          -- WITH ORDINALITY cols(colid, arridx)
django/db/backends/postgresql/introspection.py:196:71    - Unknown word (arridx)         -- ORDINALITY cols(colid, arridx)
django/db/backends/postgresql/introspection.py:197:53    - Unknown word (colid)          -- attribute AS ca ON cols.colid = ca.attnum
django/db/backends/postgresql/introspection.py:198:43    - Unknown word (conrelid)       -- WHERE ca.attrelid = c.conrelid
django/db/backends/postgresql/introspection.py:199:35    - Unknown word (arridx)         -- ORDER BY cols.arridx
django/db/backends/postgresql/introspection.py:201:19    - Unknown word (contype)        -- c.contype,
django/db/backends/postgresql/introspection.py:205:40    - Unknown word (confrelid)      -- WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey
django/db/backends/postgresql/introspection.py:205:69    - Unknown word (confkey)        -- confrelid AND fka.attnum = c.confkey[1]),
django/db/backends/postgresql/introspection.py:206:20    - Unknown word (reloptions)     -- cl.reloptions
django/db/backends/postgresql/introspection.py:208:38    - Unknown word (conrelid)       -- pg_class AS cl ON c.conrelid = cl.oid
django/db/backends/postgresql/introspection.py:229:44    - Unknown word (arridx)         -- agg(attname ORDER BY arridx),
django/db/backends/postgresql/introspection.py:230:17    - Unknown word (indisunique)    -- indisunique,
django/db/backends/postgresql/introspection.py:231:17    - Unknown word (indisprimary)   -- indisprimary,
django/db/backends/postgresql/introspection.py:232:45    - Unknown word (arridx)         -- agg(ordering ORDER BY arridx),
django/db/backends/postgresql/introspection.py:233:17    - Unknown word (amname)         -- amname,
django/db/backends/postgresql/introspection.py:234:17    - Unknown word (exprdef)        -- exprdef,
django/db/backends/postgresql/introspection.py:235:20    - Unknown word (attoptions)     -- s2.attoptions
django/db/backends/postgresql/introspection.py:238:70    - Unknown word (amname)         -- *, attr.attname, am.amname,
django/db/backends/postgresql/introspection.py:240:34    - Unknown word (indexprs)       -- WHEN idx.indexprs IS NOT NULL THEN
django/db/backends/postgresql/introspection.py:241:36    - Unknown word (indexdef)       -- pg_get_indexdef(idx.indexrelid)
django/db/backends/postgresql/introspection.py:242:28    - Unknown word (exprdef)        -- END AS exprdef,
django/db/backends/postgresql/introspection.py:243:29    - Unknown word (amname)         -- CASE am.amname
django/db/backends/postgresql/introspection.py:249:24    - Unknown word (reloptions)     -- c2.reloptions as attoptions
django/db/backends/postgresql/introspection.py:249:38    - Unknown word (attoptions)     -- c2.reloptions as attoptions
django/db/backends/postgresql/introspection.py:254:34    - Unknown word (indkey)         -- unnest(i.indkey, i.indoption)
django/db/backends/postgresql/introspection.py:254:44    - Unknown word (indoption)      -- unnest(i.indkey, i.indoption)
django/db/backends/postgresql/introspection.py:255:34    - Unknown word (ORDINALITY)     -- WITH ORDINALITY koi(key, option, arridx
django/db/backends/postgresql/introspection.py:255:62    - Unknown word (arridx)         -- ORDINALITY koi(key, option, arridx)
django/db/backends/postgresql/introspection.py:257:45    - Unknown word (indrelid)       -- JOIN pg_class c ON idx.indrelid = c.oid
django/db/backends/postgresql/introspection.py:259:42    - Unknown word (relam)          -- JOIN pg_am am ON c2.relam = am.oid
django/db/backends/postgresql/introspection.py:264:33    - Unknown word (indisunique)    -- GROUP BY indexname, indisunique, indisprimary, amname
django/db/backends/postgresql/introspection.py:264:46    - Unknown word (indisprimary)   -- indexname, indisunique, indisprimary, amname, exprdef, attoptions
django/db/backends/postgresql/introspection.py:264:60    - Unknown word (amname)         -- indisunique, indisprimary, amname, exprdef, attoptions
django/db/backends/postgresql/introspection.py:264:68    - Unknown word (exprdef)       -- indisprimary, amname, exprdef, attoptions;
django/db/backends/postgresql/introspection.py:264:77    - Unknown word (attoptions)    -- ndisprimary, amname, exprdef, attoptions;
django/db/backends/postgresql/introspection.py:63:28     - Unknown word (relispartition) -- WHEN c.relispartition THEN 'p'
django/db/backends/postgresql/introspection.py:71:23     - Unknown word (nspname)        -- AND n.nspname NOT IN ('pg_catalog
django/db/backends/postgresql/introspection.py:93:24     - Unknown word (attnotnull)     -- NOT (a.attnotnull OR (t.typtype = 'd'
django/db/backends/postgresql/introspection.py:93:41     - Unknown word (typtype)        -- (a.attnotnull OR (t.typtype = 'd' AND t.typnotnull
django/db/backends/postgresql/introspection.py:93:61     - Unknown word (typnotnull)     -- typtype = 'd' AND t.typnotnull)) AS is_nullable,
django/db/backends/postgresql/introspection.py:94:32     - Unknown word (adbin)          -- pg_get_expr(ad.adbin, ad.adrelid) AS column
django/db/backends/postgresql/introspection.py:94:42     - Unknown word (adrelid)        -- get_expr(ad.adbin, ad.adrelid) AS column_default,
django/db/backends/postgresql/introspection.py:95:27     - Unknown word (collname)       -- CASE WHEN collname = 'default' THEN NULL
django/db/backends/postgresql/introspection.py:95:63     - Unknown word (collname)       -- default' THEN NULL ELSE collname END AS collation,
django/db/backends/postgresql/introspection.py:96:19     - Unknown word (attidentity)    -- a.attidentity != '' AS is_autofield
django/db/backends/postgresql/introspection.py:97:35     - Unknown word (attrelid)       -- col_description(a.attrelid, a.attnum) AS column
django/db/backends/postgresql/introspection.py:97:47     - Unknown word (attnum)         -- description(a.attrelid, a.attnum) AS column_comment
django/db/backends/postgresql/introspection.py:99:26     - Unknown word (attrdef)        -- LEFT JOIN pg_attrdef ad ON a.attrelid = ad
django/db/backends/postgresql/introspection.py:99:42     - Unknown word (attrelid)       -- JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum
django/db/backends/postgresql/introspection.py:99:56     - Unknown word (adrelid)        -- ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
django/db/backends/postgresql/introspection.py:99:70     - Unknown word (attnum)         -- attrelid = ad.adrelid AND a.attnum = ad.adnum
django/db/backends/postgresql/introspection.py:99:82     - Unknown word (adnum)          -- adrelid AND a.attnum = ad.adnum
django/db/backends/postgresql/operations.py:11:5      - Unknown word (mogrify)    -- mogrify,
django/db/backends/postgresql/operations.py:193:16    - Unknown word (mogrify)    -- return mogrify(sql, params, self.connection
django/db/backends/postgresql/operations.py:224:21    - Unknown word (setval)     -- "%s setval(pg_get_serial_sequence
django/db/backends/postgresql/operations.py:247:60    - Unknown word (setval)     -- the third argument to `setval`) to true if
django/db/backends/postgresql/operations.py:255:29    - Unknown word (setval)     -- "%s setval(pg_get_serial_sequence
django/db/backends/postgresql/operations.py:281:61    - Unknown word (NAMEDATALEN) -- PostgreSQL after editing the NAMEDATALEN
django/db/backends/postgresql/operations.py:89:30     - Unknown word (ISODOW)     -- return f"EXTRACT(ISODOW FROM {sql})", params
django/db/backends/postgresql/operations.py:91:30     - Unknown word (ISOYEAR)    -- return f"EXTRACT(ISOYEAR FROM {sql})", params
django/db/backends/postgresql/psycopg_any.py:105:9     - Unknown word (mogrify)     -- def mogrify(sql, params, connection
django/db/backends/postgresql/psycopg_any.py:107:27    - Unknown word (mogrify)     -- return cursor.mogrify(sql, params).decode
django/db/backends/postgresql/psycopg_any.py:17:26     - Unknown word (tsrange)     -- TSRANGE_OID = types["tsrange"].oid
django/db/backends/postgresql/psycopg_any.py:17:5      - Unknown word (TSRANGE)     -- TSRANGE_OID = types["tsrange
django/db/backends/postgresql/psycopg_any.py:18:28     - Unknown word (tstzrange)   -- TSTZRANGE_OID = types["tstzrange"].oid
django/db/backends/postgresql/psycopg_any.py:18:5      - Unknown word (TSTZRANGE)   -- TSTZRANGE_OID = types["tstzrange
django/db/backends/postgresql/psycopg_any.py:20:9      - Unknown word (mogrify)     -- def mogrify(sql, params, connection
django/db/backends/postgresql/psycopg_any.py:22:52     - Unknown word (mogrify)     -- ientCursor(cursor.connection).mogrify(sql, params)
django/db/backends/postgresql/psycopg_any.py:25:24     - Unknown word (Timestamptz) -- class BaseTzLoader(TimestamptzLoader):
django/db/backends/postgresql/psycopg_any.py:27:27     - Unknown word (timestamptz) -- Load a PostgreSQL timestamptz using the a specific
django/db/backends/postgresql/psycopg_any.py:37:18     - Unknown word (tzloader)    -- def register_tzloader(tz, context):
django/db/backends/postgresql/psycopg_any.py:41:43     - Unknown word (timestamptz) -- adapters.register_loader("timestamptz", SpecificTzLoader)
django/db/backends/postgresql/psycopg_any.py:47:57     - Unknown word (tstzrange)   -- containing naive datetimes as tstzrange, because
django/db/backends/postgresql/psycopg_any.py:50:53     - Unknown word (TSRANGE)     -- self and dumper.oid == TSRANGE_OID:
django/db/backends/postgresql/psycopg_any.py:51:30     - Unknown word (TSTZRANGE)   -- dumper.oid = TSTZRANGE_OID
django/db/backends/postgresql/psycopg_any.py:67:22     - Unknown word (timestamptz) -- # Register a timestamptz loader configured on
django/db/backends/postgresql/psycopg_any.py:69:18     - Unknown word (tzloader)    -- register_tzloader(timezone, ctx)
django/db/backends/postgresql/psycopg_any.py:7:40      - Unknown word (Timestamptz) -- types.datetime import TimestamptzLoader
django/db/backends/postgresql/schema.py:204:31    - Unknown word (indentity)  -- self.sql_drop_indentity
django/db/backends/postgresql/schema.py:362:24    - Unknown word (collisdeterministic) -- SELECT collisdeterministic
django/db/backends/postgresql/schema.py:364:23    - Unknown word (collname)            -- WHERE collname = %s
django/db/backends/postgresql/schema.py:54:14     - Unknown word (indentity)  -- sql_drop_indentity = (
django/db/backends/sqlite3/_functions.py:240:21    - Unknown word (dtdelta)       -- def _sqlite_prepare_dtdelta_param(conn, param):
django/db/backends/sqlite3/_functions.py:249:20    - Unknown word (dtdelta)       -- def _sqlite_format_dtdelta(connector, lhs, rhs
django/db/backends/sqlite3/_functions.py:260:36    - Unknown word (dtdelta)       -- lhs = _sqlite_prepare_dtdelta_param(connector, lhs
django/db/backends/sqlite3/_functions.py:506:13    - Unknown word (Samp)          -- class StdDevSamp(ListAggregate):
django/db/backends/sqlite3/_functions.py:514:10    - Unknown word (Samp)          -- class VarSamp(ListAggregate):
django/db/backends/sqlite3/_functions.py:61:50     - Unknown word (dtdelta)    -- function("django_format_dtdelta", 3, _sqlite_format
django/db/backends/sqlite3/_functions.py:61:78     - Unknown word (dtdelta)    -- , 3, _sqlite_format_dtdelta)
django/db/backends/sqlite3/_functions.py:80:41     - Unknown word (SAMP)       -- create_aggregate("STDDEV_SAMP", 1, StdDevSamp)
django/db/backends/sqlite3/_functions.py:80:57     - Unknown word (Samp)       -- STDDEV_SAMP", 1, StdDevSamp)
django/db/backends/sqlite3/_functions.py:82:38     - Unknown word (SAMP)       -- create_aggregate("VAR_SAMP", 1, VarSamp)
django/db/backends/sqlite3/_functions.py:82:51     - Unknown word (Samp)       -- aggregate("VAR_SAMP", 1, VarSamp)
django/db/backends/sqlite3/_functions.py:84:26     - Unknown word (compileoption) -- sql = "select sqlite_compileoption_used('ENABLE_MATH_FUNCTIONS
django/db/backends/sqlite3/base.py:164:44    - Unknown word (DECLTYPES)  -- types": Database.PARSE_DECLTYPES | Database.PARSE_COLNAMES
django/db/backends/sqlite3/base.py:164:71    - Unknown word (COLNAMES)   -- DECLTYPES | Database.PARSE_COLNAMES,
django/db/backends/sqlite3/base.py:338:8     - Unknown word (QMARK)      -- FORMAT_QMARK_REGEX = _lazy_re_compile
django/db/backends/sqlite3/base.py:348:26    - Unknown word (qmark)      -- "format" style to "qmark" style
django/db/backends/sqlite3/base.py:362:9     - Unknown word (executemany) -- def executemany(self, query, param_list
django/db/backends/sqlite3/base.py:365:9     - Unknown word (peekable)    -- peekable, param_list = tee(iter
django/db/backends/sqlite3/base.py:366:28    - Unknown word (peekable)    -- if (params := next(peekable, None)) and isinstance
django/db/backends/sqlite3/base.py:371:24    - Unknown word (executemany) -- return super().executemany(query, param_list)
django/db/backends/sqlite3/base.py:375:47    - Unknown word (qmark)       -- from "format" style to "qmark" style.
django/db/backends/sqlite3/base.py:376:27    - Unknown word (QMARK)       -- return FORMAT_QMARK_REGEX.sub("?", query
django/db/backends/sqlite3/creation.py:105:13    - Unknown word (ondisk)     -- ondisk_db = sqlite3.connect
django/db/backends/sqlite3/creation.py:106:47    - Unknown word (ondisk)     -- connection.connection.backup(ondisk_db)
django/db/backends/sqlite3/creation.py:107:13    - Unknown word (ondisk)     -- ondisk_db.close()
django/db/backends/sqlite3/creation.py:143:24    - Unknown word (memorydb)   -- f"file:memorydb_{alias}_{_worker_id
django/db/backends/sqlite3/creation.py:158:40    - Unknown word (DJANGOS)    -- environ.get("RUNNING_DJANGOS_TEST_SUITE") == "true
django/db/backends/sqlite3/creation.py:22:26     - Unknown word (memorydb)   -- return "file:memorydb_%s?mode=memory&cache
django/db/backends/sqlite3/creation.py:25:55     - Unknown word (keepdb)     -- verbosity, autoclobber, keepdb=False):
django/db/backends/sqlite3/creation.py:28:12     - Unknown word (keepdb)     -- if keepdb:
django/db/backends/sqlite3/creation.py:74:49     - Unknown word (keepdb)     -- suffix, verbosity, keepdb=False):
django/db/backends/sqlite3/creation.py:80:20     - Unknown word (keepdb)     -- if keepdb:
django/db/backends/sqlite3/features.py:44:16     - Unknown word (nocase)     -- "ci": "nocase",
django/db/backends/sqlite3/features.py:46:25     - Unknown word (nocase)     -- "non_default": "nocase",
django/db/backends/sqlite3/features.py:47:21     - Unknown word (nocase)     -- "virtual": "nocase",
django/db/backends/sqlite3/features.py:50:29     - Unknown word (dtdelta)    -- # The django_format_dtdelta() function doesn't properly
django/db/backends/sqlite3/features.py:51:36     - Unknown word (timedeltas) -- DateTime fields and timedeltas.
django/db/backends/sqlite3/features.py:76:43     - Unknown word (doesnt)     -- alter_field_default_doesnt_perform_queries",
django/db/backends/sqlite3/features.py:99:39     - Unknown word (liveserverthread) -- "servers.test_liveserverthread.LiveServerThreadTest
django/db/backends/sqlite3/introspection.py:37:10     - Unknown word (smallinteger) -- "smallinteger": "SmallIntegerField
django/db/backends/sqlite3/introspection.py:94:27     - Unknown word (xinfo)        -- "PRAGMA table_xinfo(%s)" % self.connection
django/db/backends/sqlite3/operations.py:104:28    - Unknown word (tznames)       -- *self._convert_tznames_to_sql(tzname),
django/db/backends/sqlite3/operations.py:107:18    - Unknown word (tznames)       -- def _convert_tznames_to_sql(self, tzname
django/db/backends/sqlite3/operations.py:115:28    - Unknown word (tznames)       -- *self._convert_tznames_to_sql(tzname),
django/db/backends/sqlite3/operations.py:121:28    - Unknown word (tznames)       -- *self._convert_tznames_to_sql(tzname),
django/db/backends/sqlite3/operations.py:328:42    - Unknown word (prec)          -- decimal = decimal.Context(prec=15).create_decimal_from
django/db/backends/sqlite3/operations.py:330:49    - Unknown word (scaleb)        -- decimal.Decimal(1).scaleb(
django/db/backends/sqlite3/operations.py:371:31    - Unknown word (dtdelta)       -- return "django_format_dtdelta(%s)" % ", ".join(fn
django/db/backends/sqlite3/operations.py:54:33     - Unknown word (subexpression) -- # Not every subexpression has an output_field
django/db/backends/sqlite3/operations.py:97:28     - Unknown word (tznames)       -- *self._convert_tznames_to_sql(tzname),
django/db/backends/sqlite3/schema.py:257:41    - Unknown word (autom)      -- model(model, handle_autom2m=False)
django/db/backends/sqlite3/schema.py:274:42    - Unknown word (autom)      -- self, model, handle_autom2m=True):
django/db/backends/sqlite3/schema.py:275:19    - Unknown word (autom)      -- if handle_autom2m:
django/db/backends/utils.py:107:10    - Unknown word (executemany) -- def _executemany(self, sql, param_list
django/db/backends/utils.py:114:32    - Unknown word (executemany) -- return self.cursor.executemany(sql, param_list)
django/db/backends/utils.py:124:9     - Unknown word (executemany) -- def executemany(self, sql, param_list
django/db/backends/utils.py:22:73     - Unknown word (nextset)    -- fetchmany", "fetchall", "nextset"])
django/db/backends/utils.py:322:23    - Unknown word (getcontext)  -- context = decimal.getcontext().copy()
django/db/backends/utils.py:324:17    - Unknown word (prec)        -- context.prec = max_digits
django/db/backends/utils.py:327:32    - Unknown word (scaleb)      -- decimal.Decimal(1).scaleb(-decimal_places), context
django/db/backends/utils.py:83:9      - Unknown word (executemany) -- def executemany(self, sql, param_list
django/db/backends/utils.py:85:56     - Unknown word (executemany) -- True, executor=self._executemany
django/db/migrations/autodetector.py:771:30    - Unknown word (opns)       -- # Generate other opns
django/db/migrations/migration.py:131:26    - Unknown word (behaviour)  -- # Normal behaviour
django/db/migrations/migration.py:192:26    - Unknown word (behaviour)  -- # Normal behaviour
django/db/migrations/operations/base.py:155:17    - Unknown word (elidable)   -- if self.elidable:
django/db/migrations/operations/base.py:157:24    - Unknown word (elidable)   -- elif operation.elidable:
django/db/migrations/operations/base.py:43:5      - Unknown word (elidable)   -- elidable = False
django/db/migrations/operations/models.py:105:25    - Unknown word (smodel)     -- return "Create %smodel %s" % (
django/db/migrations/operations/special.py:121:39    - Unknown word (sqls)       -- self, schema_editor, sqls):
django/db/migrations/operations/special.py:122:23    - Unknown word (sqls)       -- if isinstance(sqls, (list, tuple)):
django/db/migrations/operations/special.py:123:24    - Unknown word (sqls)       -- for sql in sqls:
django/db/migrations/operations/special.py:132:14    - Unknown word (sqls)       -- elif sqls != RunSQL.noop:
django/db/migrations/operations/special.py:133:74    - Unknown word (sqls)       -- ops.prepare_sql_script(sqls)
django/db/migrations/operations/special.py:147:65    - Unknown word (elidable)   -- atomic=None, hints=None, elidable=False
django/db/migrations/operations/special.py:162:14    - Unknown word (elidable)   -- self.elidable = elidable
django/db/migrations/operations/special.py:46:13     - Unknown word (dbop)       -- for dbop in self.database_operations
django/db/migrations/operations/special.py:47:23     - Unknown word (dbop)       -- to_states[dbop] = to_state
django/db/migrations/operations/special.py:49:13     - Unknown word (dbop)       -- dbop.state_forwards(app_label
django/db/migrations/operations/special.py:76:73     - Unknown word (elidable)   -- operations=None, hints=None, elidable=False
django/db/migrations/operations/special.py:82:14     - Unknown word (elidable)   -- self.elidable = elidable
django/db/migrations/operations/special.py:82:25     - Unknown word (elidable)   -- self.elidable = elidable
django/db/migrations/questioner.py:18:36     - Unknown word (noninteractive) -- class has a built-in noninteractive mode, but the
django/db/migrations/serializer.py:178:13    - Unknown word (klass)           -- klass = self.value.__self
django/db/migrations/serializer.py:179:22    - Unknown word (klass)           -- module = klass.__module__
django/db/migrations/serializer.py:180:42    - Unknown word (klass)           -- s.%s.%s" % (module, klass.__qualname__, self.value
django/db/migrations/serializer.py:237:28    - Unknown word (Deconstructable) -- ModelFieldSerializer(DeconstructableSerializer):
django/db/migrations/serializer.py:243:30    - Unknown word (Deconstructable) -- ModelManagerSerializer(DeconstructableSerializer):
django/db/migrations/serializer.py:264:24    - Unknown word (fspath)          -- return repr(os.fspath(self.value)), {}
django/db/migrations/serializer.py:397:16    - Unknown word (Deconstructable) -- return DeconstructableSerializer(value)
django/db/migrations/serializer.py:95:7      - Unknown word (Deconstructable) -- class DeconstructableSerializer(BaseSerializer
django/db/migrations/serializer.py:98:25     - Unknown word (Deconstructable) -- name, imports = DeconstructableSerializer._serialize
django/db/migrations/state.py:612:78    - Unknown word (rels)       -- model(model, exclude_rels=True))
django/db/migrations/state.py:772:40    - Unknown word (rels)       -- cls, model, exclude_rels=False):
django/db/migrations/state.py:777:65    - Unknown word (rels)       -- , None) and exclude_rels:
django/db/migrations/state.py:793:24    - Unknown word (rels)       -- if not exclude_rels:
django/db/migrations/state.py:834:20    - Unknown word (rels)       -- if exclude_rels:
django/db/models/__init__.py:112:6     - Unknown word (aprefetch)  -- "aprefetch_related_objects",
django/db/models/__init__.py:52:5      - Unknown word (aprefetch)  -- aprefetch_related_objects,
django/db/models/aggregates.py:192:33    - Unknown word (SAMP)       -- self.function = "STDDEV_SAMP" if sample else "STDDEV
django/db/models/aggregates.py:196:83    - Unknown word (SAMP)       -- function == "STDDEV_SAMP"}
django/db/models/aggregates.py:209:30    - Unknown word (SAMP)       -- self.function = "VAR_SAMP" if sample else "VAR
django/db/models/aggregates.py:213:80    - Unknown word (SAMP)       -- self.function == "VAR_SAMP"}
django/db/models/base.py:1142:19   - Unknown word (autopopulate)  -- # autopopulate the _order field
django/db/models/base.py:114:9     - Unknown word (contributable) -- contributable_attrs = {}
django/db/models/base.py:117:17    - Unknown word (contributable) -- contributable_attrs[obj_name] = obj
django/db/models/base.py:193:30    - Unknown word (contributable) -- for obj_name, obj in contributable_attrs.items():
django/db/models/base.py:687:40    - Unknown word (attnames)      -- an iterable of field attnames. If fields is None,
django/db/models/enums.py:32:17     - Unknown word (metacls)    -- def __new__(metacls, classname, bases, classdict
django/db/models/enums.py:49:31     - Unknown word (metacls)    -- cls = super().__new__(metacls, classname, bases, classdict
django/db/models/expressions.py:285:47    - Unknown word (multijoins) -- of reusable joins for multijoins
django/db/models/fields/__init__.py:1791:32   - Unknown word (prec)       -- return decimal.Context(prec=self.max_digits)
django/db/models/fields/__init__.py:2816:45   - Unknown word (autopk)     -- connection.ops.validate_autopk_value(value)
django/db/models/fields/__init__.py:2858:11   - Unknown word (subclasscheck) -- def __subclasscheck__(self, subclass):
django/db/models/fields/__init__.py:2859:68   - Unknown word (subclasscheck) -- subclasses) or super().__subclasscheck__(
django/db/models/fields/__init__.py:520:76    - Unknown word (EXXX)       -- details.get("id", "fields.EXXX"),
django/db/models/fields/__init__.py:531:79    - Unknown word (WXXX)       -- details.get("id", "fields.WXXX"),
django/db/models/fields/json.py:322:7     - Unknown word (JSONI)      -- class JSONIContains(CaseInsensitiveMixin
django/db/models/fields/json.py:332:27    - Unknown word (JSONI)      -- JSONField.register_lookup(JSONIContains)
django/db/models/fields/json.py:401:65    - Unknown word (MDEV)       -- and ->> operators (see MDEV-13594).
django/db/models/fields/related.py:1266:51   - Unknown word (klass)      -- intermediary_model(field, klass):
django/db/models/fields/related.py:1272:33   - Unknown word (klass)      -- model = resolve_relation(klass, field.remote_field
django/db/models/fields/related.py:1273:23   - Unknown word (klass)      -- name = "%s_%s" % (klass._meta.object_name, field
django/db/models/fields/related.py:1274:41   - Unknown word (klass)      -- operation(set_managed, klass, to_model, name)
django/db/models/fields/related.py:1277:13   - Unknown word (klass)      -- from_ = klass._meta.model_name
django/db/models/fields/related.py:825:63    - Unknown word (pushdown)   -- joining and subquery pushdown. The
django/db/models/fields/related.py:830:57    - Unknown word (pushdown)   -- conditions, like subquery pushdown.
django/db/models/fields/related_descriptors.py:1573:41   - Unknown word (colname)    -- source_field_name: the PK colname in join table for the
django/db/models/fields/related_descriptors.py:1574:41   - Unknown word (colname)    -- target_field_name: the PK colname in join table for the
django/db/models/fields/related_descriptors.py:31:69     - Unknown word (unicity)    -- is checked upstream (unicity
django/db/models/functions/comparison.py:198:64    - Unknown word (CLOB)       -- connection, returning="CLOB", **extra_context)
django/db/models/functions/comparison.py:92:46     - Unknown word (NCLOB)      -- prohibits mixing TextField (NCLOB) and CharField (NVARCHAR
django/db/models/functions/comparison.py:93:36     - Unknown word (NCLOB)      -- convert all fields to NCLOB when that type is expected
django/db/models/functions/comparison.py:98:51     - Unknown word (NCLOB)      -- expression, function="TO_NCLOB")
django/db/models/functions/datetime.py:156:35    - Unknown word (mydatetime) -- replicate this in Python: (mydatetime.isoweekday() % 7) +
django/db/models/functions/datetime.py:241:45    - Unknown word (LOCALTIMESTAMP) -- connection, template="LOCALTIMESTAMP", **extra_context
django/db/models/functions/math.py:117:41    - Unknown word (spatialite) -- getattr(connection.ops, "spatialite", False):
django/db/models/functions/math.py:120:30    - Unknown word (Spatia)     -- the base b, but on SpatiaLite it's Log(x, b).
django/db/models/functions/math.py:39:30     - Unknown word (spatialite) -- connection.ops, "spatialite", False
django/db/models/functions/math.py:43:45     - Unknown word (Spatia)     -- it's ATan2(x, y) on SpatiaLite < 5.0.0.
django/db/models/functions/text.py:24:24     - Unknown word (RAWTOHEX)   -- "LOWER(RAWTOHEX(STANDARD_HASH(UTL_I
django/db/models/functions/text.py:271:26    - Unknown word (LISTAGG)    -- "(SELECT LISTAGG(s) WITHIN GROUP (ORDER
django/db/models/functions/text.py:301:29    - Unknown word (Postgre)    -- SHA1(OracleHashMixin, PostgreSQLSHAMixin, Transform
django/db/models/functions/text.py:306:30    - Unknown word (Postgre)    -- SHA224(MySQLSHA2Mixin, PostgreSQLSHAMixin, Transform
django/db/models/functions/text.py:314:47    - Unknown word (Postgre)    -- Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform
django/db/models/functions/text.py:319:47    - Unknown word (Postgre)    -- Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform
django/db/models/functions/text.py:31:7      - Unknown word (Postgre)    -- class PostgreSQLSHAMixin:
django/db/models/functions/text.py:341:63    - Unknown word (STRPOS)     -- connection, function="STRPOS", **extra_context)
django/db/models/functions/window.py:20:17     - Unknown word (CUME)       -- function = "CUME_DIST"
django/db/models/lookups.py:377:18    - Unknown word (boolfield)  -- # turns "boolfield__exact=True" into "WHERE
django/db/models/lookups.py:571:30    - Unknown word (thevalue)   -- col LIKE %s, ['thevalue%']
django/db/models/lookups.py:575:24    - Unknown word (othercol)   -- # col LIKE othercol || '%%'
django/db/models/lookups.py:59:13     - Unknown word (sqls)       -- sqls, sqls_params = [],
django/db/models/lookups.py:59:19     - Unknown word (sqls)       -- sqls, sqls_params = [], []
django/db/models/lookups.py:65:17     - Unknown word (sqls)       -- sqls.append(sql)
django/db/models/lookups.py:66:17     - Unknown word (sqls)       -- sqls_params.extend(sql_params
django/db/models/lookups.py:69:13     - Unknown word (sqls)       -- sqls, sqls_params = ["%s
django/db/models/lookups.py:771:7     - Unknown word (UUIDI)      -- class UUIDIExact(UUIDTextMixin,
django/db/models/lookups.py:781:7     - Unknown word (UUIDI)      -- class UUIDIContains(UUIDTextMixin
django/db/models/lookups.py:791:7     - Unknown word (UUIDI)      -- class UUIDIStartsWith(UUIDTextMixin
django/db/models/lookups.py:801:7     - Unknown word (UUIDI)      -- class UUIDIEndsWith(UUIDTextMixin
django/db/models/options.py:530:33    - Unknown word (longwinded) -- The third lambda is a longwinded way of checking f.related
django/db/models/options.py:981:13    - Unknown word (klass)      -- for klass in self.model.__mro
django/db/models/options.py:984:36    - Unknown word (klass)      -- for name, value in klass.__dict__.items()
django/db/models/options.py:987:25    - Unknown word (klass)      -- seen |= set(klass.__dict__)
django/db/models/query.py:100:25    - Unknown word (klass)      -- select_fields = klass_info["select_fields
django/db/models/query.py:2416:11   - Unknown word (aprefetch)  -- async def aprefetch_related_objects(model
django/db/models/query.py:2656:35   - Unknown word (attnames)   -- init_list: the field attnames fetched from the database
django/db/models/query.py:2657:57   - Unknown word (attnames)   -- isn't the same as all attnames of the
django/db/models/query.py:2677:24   - Unknown word (attnames)   -- model_init_attnames = (
django/db/models/query.py:2681:51   - Unknown word (attnames)   -- attname in model_init_attnames if attname in attname
django/db/models/query.py:545:27    - Unknown word (aprefetch)  -- await aprefetch_related_objects(
django/db/models/query.py:553:23    - Unknown word (aprefetch)  -- await aprefetch_related_objects(
django/db/models/query.py:761:30    - Unknown word (childmost)  -- insert into the childmost table.
django/db/models/query.py:89:67     - Unknown word (klass)      -- fill compiler.select, klass_info,
django/db/models/query.py:94:17     - Unknown word (klass)      -- select, klass_info, annotation_col
django/db/models/query.py:96:22     - Unknown word (klass)      -- compiler.klass_info,
django/db/models/query.py:99:21     - Unknown word (klass)      -- model_cls = klass_info["model"]
django/db/models/query_utils.py:24:49     - Unknown word (somecol)    -- converting lookups (fk__somecol). The contents
django/db/models/sql/compiler.py:103:49    - Unknown word (somecol)    -- objects.annotate(Count('somecol'))
django/db/models/sql/compiler.py:106:63    - Unknown word (somecol)    -- name').annotate(Count('somecol'))
django/db/models/sql/compiler.py:109:48    - Unknown word (somecol)    -- objects.annotate(Count('somecol')).values('name')
django/db/models/sql/compiler.py:113:31    - Unknown word (somecol)    -- .annotate(Count('somecol')).values('pk')
django/db/models/sql/compiler.py:116:63    - Unknown word (somecol)    -- name').annotate(Count('somecol')).values('pk')
django/db/models/sql/compiler.py:1442:49   - Unknown word (popleft)    -- klass_info = queue.popleft()
django/db/models/sql/compiler.py:1520:23   - Unknown word (convs)      -- for pos, (convs, expression) in converters
django/db/models/sql/compiler.py:1522:34   - Unknown word (convs)      -- for converter in convs:
django/db/models/sql/compiler.py:1744:24   - Unknown word (sqls)       -- # tuple like ([sqls], [[params]s]) for each
django/db/models/sql/compiler.py:1928:9    - Unknown word (innerq)     -- innerq = self.query.clone(
django/db/models/sql/compiler.py:1929:9    - Unknown word (innerq)     -- innerq.__class__ = Query
django/db/models/sql/compiler.py:1930:9    - Unknown word (innerq)     -- innerq.clear_select_clause
django/db/models/sql/compiler.py:1932:9    - Unknown word (innerq)     -- innerq.select = [pk.get_col
django/db/models/sql/compiler.py:1933:9    - Unknown word (outerq)     -- outerq = Query(self.query.model
django/db/models/sql/compiler.py:1937:27   - Unknown word (innerq)     -- sql, params = innerq.get_compiler(connection
django/db/models/sql/compiler.py:1939:9    - Unknown word (outerq)     -- outerq.add_filter("pk__in"
django/db/models/sql/compiler.py:1940:29   - Unknown word (outerq)     -- return self._as_sql(outerq)
django/db/models/sql/compiler.py:233:13    - Unknown word (klass)      -- - a klass_info structure,
django/db/models/sql/compiler.py:239:13    - Unknown word (klass)      -- The klass_info structure contains
django/db/models/sql/compiler.py:463:23    - Unknown word (combinated) -- # combinated queries might define
django/db/models/sql/compiler.py:510:37    - Unknown word (orderbycol) -- col_alias = f"__orderbycol{order_by_idx}"
django/db/models/sql/compiler.py:54:23     - Unknown word (klass)      -- # The select, klass_info, and annotations
django/db/models/sql/compiler.py:609:54    - Unknown word (resultset)  -- always including an empty resultset query to force
django/db/models/sql/compiler.py:60:14     - Unknown word (klass)      -- self.klass_info = None
django/db/models/sql/compiler.py:73:27     - Unknown word (klass)      -- self.select, self.klass_info, self.annotation
django/db/models/sql/compiler.py:742:22    - Unknown word (sqls)       -- ordering_sqls = []
django/db/models/sql/compiler.py:745:26    - Unknown word (sqls)       -- ordering_sqls.append(ordering_sql
django/db/models/sql/compiler.py:747:59    - Unknown word (sqls)       -- ", ".join(ordering_sqls)])
django/db/models/sql/compiler.py:962:36    - Unknown word (subparams)  -- subselect, subparams = select_clone.as_sql
django/db/models/sql/compiler.py:966:43    - Unknown word (subparams)  -- sub_params.extend(subparams)
django/db/models/sql/constants.py:24:1      - Unknown word (LOUTER)      -- LOUTER = "LEFT OUTER JOIN"
django/db/models/sql/constants.py:9:3       - Unknown word (Namedtuples) -- # Namedtuples for sql.* internal use
django/db/models/sql/datastructures.py:104:54    - Unknown word (depraction) -- edInDjango60Warning: when the depraction ends, remove
django/db/models/sql/datastructures.py:196:25    - Unknown word (LOUTER)     -- new.join_type = LOUTER
django/db/models/sql/datastructures.py:204:35    - Unknown word (somecond)   -- SELECT * FROM "foo" WHERE somecond
django/db/models/sql/datastructures.py:22:20     - Unknown word (travelled)  -- # The path travelled, this includes the path
django/db/models/sql/datastructures.py:22:61     - Unknown word (multijoin)  -- includes the path to the multijoin.
django/db/models/sql/datastructures.py:34:26     - Unknown word (sometable)  -- LEFT OUTER JOIN "sometable" T1
django/db/models/sql/datastructures.py:35:14     - Unknown word (othertable) -- ON ("othertable"."sometable_id" = "sometable
django/db/models/sql/datastructures.py:35:27     - Unknown word (sometable)  -- ON ("othertable"."sometable_id" = "sometable"."id
django/db/models/sql/datastructures.py:35:44     - Unknown word (sometable)  -- othertable"."sometable_id" = "sometable"."id")
django/db/models/sql/datastructures.py:64:11     - Unknown word (LOUTER)     -- # LOUTER or INNER
django/db/models/sql/datastructures.py:84:24     - Unknown word (nullabled)  -- # Is this join nullabled?
django/db/models/sql/datastructures.py:91:28     - Unknown word (sometable)  -- LEFT OUTER JOIN sometable ON sometable.somecol
django/db/models/sql/datastructures.py:91:41     - Unknown word (sometable)  -- OUTER JOIN sometable ON sometable.somecol = othertable
django/db/models/sql/datastructures.py:91:51     - Unknown word (somecol)    -- sometable ON sometable.somecol = othertable.othercol
django/db/models/sql/datastructures.py:91:61     - Unknown word (othertable) -- sometable.somecol = othertable.othercol, params
django/db/models/sql/datastructures.py:91:72     - Unknown word (othercol)   -- somecol = othertable.othercol, params
django/db/models/sql/datastructures.py:99:46     - Unknown word (depraction) -- edInDjango60Warning: when the depraction ends, replace with:
django/db/models/sql/datastructures.py:9:51      - Unknown word (LOUTER)     -- constants import INNER, LOUTER
django/db/models/sql/query.py:113:19    - Unknown word (repointing) -- # without repointing to the filtered annotation
django/db/models/sql/query.py:1471:56   - Unknown word (multijoins) -- of reusable joins for multijoins.
django/db/models/sql/query.py:1475:28   - Unknown word (unreffing)  -- is responsible for unreffing the joins used.
django/db/models/sql/query.py:1582:40   - Unknown word (someval)    -- is null, then col != someval will result in SQL
django/db/models/sql/query.py:1585:42   - Unknown word (someval)    -- col IS NULL OR col != someval)
django/db/models/sql/query.py:1587:50   - Unknown word (someval)    -- IS NOT NULL AND col = someval).
django/db/models/sql/query.py:1595:22   - Unknown word (someval)    -- # If someval is a nullable column
django/db/models/sql/query.py:1595:52   - Unknown word (someval)    -- is a nullable column, someval IS NOT NULL is
django/db/models/sql/query.py:2072:34   - Unknown word (louter)     -- trimmed_prefix, contains_louter = query.trim_start(names
django/db/models/sql/query.py:2388:44   - Unknown word (datastructure) -- that we can use a set datastructure. We do the foo__bar
django/db/models/sql/query.py:2578:42   - Unknown word (outerq)        -- lookup usable for doing outerq.filter(lookup=self)
django/db/models/sql/query.py:2672:5    - Unknown word (dirn)          -- dirn = ORDER_DIR[default
django/db/models/sql/query.py:2674:27   - Unknown word (dirn)          -- return field[1:], dirn[1]
django/db/models/sql/query.py:2675:19   - Unknown word (dirn)          -- return field, dirn[0]
django/db/models/sql/query.py:2738:61   - Unknown word (rels)          -- 2, if either of the rels produce NULL
django/db/models/sql/query.py:353:53    - Unknown word (deepcopied) -- work when a Query is deepcopied."""
django/db/models/sql/query.py:421:21    - Unknown word (klass)      -- def chain(self, klass=None):
django/db/models/sql/query.py:424:13    - Unknown word (klass)      -- The klass argument changes the
django/db/models/sql/query.py:427:12    - Unknown word (klass)      -- if klass and obj.__class__ !
django/db/models/sql/query.py:427:39    - Unknown word (klass)      -- and obj.__class__ != klass:
django/db/models/sql/query.py:428:29    - Unknown word (klass)      -- obj.__class__ = klass
django/db/models/sql/query.py:42:51     - Unknown word (LOUTER)     -- constants import INNER, LOUTER, ORDER_DIR, SINGLE
django/db/models/sql/query.py:547:62    - Unknown word (realiasing) -- would require complex realiasing logic.
django/db/models/sql/query.py:568:50    - Unknown word (repointed)  -- sure the aggregates are repointed to them.
django/db/models/sql/query.py:720:15    - Unknown word (revrel)     -- # revrel__col=1 & revrel__col
django/db/models/sql/query.py:720:31    - Unknown word (revrel)     -- revrel__col=1 & revrel__col=2
django/db/models/sql/query.py:924:76    - Unknown word (LOUTER)     -- chains that contain a LOUTER
django/db/models/sql/query.py:940:20    - Unknown word (louter)     -- parent_louter = (
django/db/models/sql/query.py:941:76    - Unknown word (LOUTER)     -- alias].join_type == LOUTER
django/db/models/sql/query.py:943:21    - Unknown word (louter)     -- already_louter = self.alias_map[alias
django/db/models/sql/query.py:943:65    - Unknown word (LOUTER)     -- alias].join_type == LOUTER
django/db/models/sql/query.py:944:58    - Unknown word (louter)     -- .nullable or parent_louter) and not already_louter
django/db/models/sql/query.py:944:82    - Unknown word (louter)     -- louter) and not already_louter:
django/db/models/sql/query.py:957:31    - Unknown word (LOUTER)     -- Change join type from LOUTER to INNER for all joins
django/db/models/sql/where.py:339:24    - Unknown word (sqls)       -- def __init__(self, sqls, params):
django/db/models/sql/where.py:340:14    - Unknown word (sqls)       -- self.sqls = sqls
django/db/models/sql/where.py:340:21    - Unknown word (sqls)       -- self.sqls = sqls
django/db/models/sql/where.py:344:46    - Unknown word (sqls)       -- sql for sql in self.sqls]
django/db/models/sql/where.py:344:9     - Unknown word (sqls)       -- sqls = ["(%s)" % sql for
django/db/transaction.py:162:17    - Unknown word (reentrancy) -- This allows reentrancy even if the same AtomicWrappe
django/db/utils.py:121:26    - Unknown word (ispkg)      -- for _, name, ispkg in pkgutil.iter_modules
django/db/utils.py:122:16    - Unknown word (ispkg)      -- if ispkg and name not in {"base
django/db/utils.py:125:21    - Unknown word (reprs)      -- backend_reprs = map(repr, sorted(builtin
django/db/utils.py:131:61    - Unknown word (reprs)      -- name, ", ".join(backend_reprs))
django/db/utils.py:55:40     - Unknown word (reraises)   -- manager and decorator that reraises backend-specific database
django/dispatch/__init__.py:3:21      - Unknown word (pydispatch) -- Originally based on pydispatch (BSD) https://pypi.org
django/dispatch/dispatcher.py:193:23    - Unknown word (asend)       -- async def asend():
django/dispatch/dispatcher.py:202:44    - Unknown word (asend)       -- extend(async_to_sync(asend)())
django/dispatch/dispatcher.py:205:15    - Unknown word (asend)       -- async def asend(self, sender, **named
django/dispatch/dispatcher.py:314:23    - Unknown word (asend)       -- async def asend_and_wrap_exception(receiver
django/dispatch/dispatcher.py:322:23    - Unknown word (asend)       -- async def asend():
django/dispatch/dispatcher.py:32:15     - Unknown word (receiverkey) -- { receiverkey (id) : weakref(receiver
django/dispatch/dispatcher.py:435:23    - Unknown word (receiverkey) -- for (_receiverkey, r_senderkey), receiver
django/dispatch/dispatcher.py:463:54    - Unknown word (weakrefs)    -- receivers list has dead weakrefs. If so, we will
django/forms/boundfield.py:13:18     - Unknown word (Renderable) -- class BoundField(RenderableFieldMixin):
django/forms/boundfield.py:292:28    - Unknown word (describedby) -- # If a custom aria-describedby attribute is given
django/forms/boundfield.py:296:33    - Unknown word (describedby) -- not attrs.get("aria-describedby")
django/forms/boundfield.py:297:44    - Unknown word (describedby) -- widget.attrs.get("aria-describedby")
django/forms/boundfield.py:303:25    - Unknown word (describedby) -- attrs["aria-describedby"] = f"{self.auto_id
django/forms/boundfield.py:327:21    - Unknown word (myform)      -- {% for radio in myform.beatles %}
django/forms/boundfield.py:4:32      - Unknown word (Renderable) -- django.forms.utils import RenderableFieldMixin, pretty_name
django/forms/fields.py:448:39    - Unknown word (scaleb)     -- step = str(Decimal(1).scaleb(-self.decimal_places
django/forms/fields.py:802:19    - Unknown word (misformatted) -- # misformatted URLs.
django/forms/forms.py:10:54     - Unknown word (Renderable) -- ErrorDict, ErrorList, RenderableFormMixin
django/forms/forms.py:52:16     - Unknown word (Renderable) -- class BaseForm(RenderableFormMixin):
django/forms/formsets.py:52:19     - Unknown word (Renderable) -- class BaseFormSet(RenderableFormMixin):
django/forms/formsets.py:5:43      - Unknown word (Renderable) -- utils import ErrorList, RenderableFormMixin
django/forms/models.py:824:13    - Unknown word (uclass)     -- for uclass, unique_check in all
django/forms/models.py:864:13    - Unknown word (uclass)     -- uclass, lookup, field, unique
django/forms/renderers.py:42:26     - Unknown word (djangoforms) -- "NAME": "djangoforms",
django/forms/utils.py:150:24    - Unknown word (initlist)   -- def __init__(self, initlist=None, error_class=None
django/forms/utils.py:151:26    - Unknown word (initlist)   -- super().__init__(initlist)
django/forms/utils.py:20:5      - Unknown word (flatatt)    -- def flatatt(attrs):
django/forms/utils.py:45:7      - Unknown word (Renderable) -- class RenderableMixin:
django/forms/utils.py:48:28     - Unknown word (Renderable) -- "Subclasses of RenderableMixin must provide a
django/forms/utils.py:61:28     - Unknown word (Renderable) -- RenderableFieldMixin(RenderableMixin):
django/forms/utils.py:61:7      - Unknown word (Renderable) -- class RenderableFieldMixin(RenderableMixin
django/forms/utils.py:67:28     - Unknown word (Renderable) -- "Subclasses of RenderableFieldMixin must provide
django/forms/widgets.py:1016:43   - Unknown word (splitdatetime) -- django/forms/widgets/splitdatetime.html"
django/forms/widgets.py:1050:43   - Unknown word (splithiddendatetime) -- django/forms/widgets/splithiddendatetime.html"
django/forms/widgets.py:688:17    - Unknown word (subvalue)   -- for subvalue, sublabel in choices
django/forms/widgets.py:688:27    - Unknown word (sublabel)   -- for subvalue, sublabel in choices:
django/forms/widgets.py:690:21    - Unknown word (subvalue)   -- subvalue
django/forms/widgets.py:696:25    - Unknown word (subvalue)   -- subvalue,
django/forms/widgets.py:697:25    - Unknown word (sublabel)   -- sublabel,
django/http/cookie.py:11:5      - Unknown word (cookiedict) -- cookiedict = {}
django/http/cookie.py:22:13     - Unknown word (cookiedict) -- cookiedict[key] = cookies._unquote
django/http/cookie.py:23:12     - Unknown word (cookiedict) -- return cookiedict
django/http/multipartparser.py:362:17    - Unknown word (shortcircuits) -- # any() shortcircuits if a handler's upload
django/http/multipartparser.py:513:64    - Unknown word (ungetting)     -- one chunk. If we keep ungetting the
django/http/multipartparser.py:715:33    - Unknown word (CRLFCRLF)      -- as throwing away the CRLFCRLF bytes from above.
django/http/multipartparser.py:719:5     - Unknown word (outdict)       -- outdict = {}
django/http/multipartparser.py:737:9     - Unknown word (outdict)       -- outdict[name] = value, params
django/http/multipartparser.py:742:19    - Unknown word (outdict)       -- return (TYPE, outdict, stream)
django/http/multipartparser.py:751:9     - Unknown word (boundarystream) -- boundarystream = InterBoundaryIter
django/http/multipartparser.py:752:27    - Unknown word (boundarystream) -- for sub_stream in boundarystream:
django/http/request.py:249:44    - Unknown word (schemeless) -- an absolute url (but schemeless and domainless) for
django/http/request.py:249:59    - Unknown word (domainless) -- (but schemeless and domainless) for the
django/http/request.py:501:12    - Unknown word (asgi)       -- def to_asgi_name(cls, header):
django/http/request.py:512:12    - Unknown word (asgi)       -- def to_asgi_names(cls, headers)
django/http/request.py:514:20    - Unknown word (asgi)       -- cls.to_asgi_name(header_name): value
django/http/request.py:755:66    - Unknown word (codepoint)  -- with Unicode "unknown" codepoint
django/http/request.py:756:7     - Unknown word (ufffd)      -- (\ufffd).
django/http/response.py:470:23    - Unknown word (awrapper)   -- async def awrapper():
django/http/response.py:474:20    - Unknown word (awrapper)   -- return awrapper()
django/http/response.py:576:37    - Unknown word (getbuffer)  -- elif hasattr(filelike, "getbuffer"):
django/http/response.py:578:30    - Unknown word (getbuffer)  -- filelike.getbuffer().nbytes - filelike
django/http/response.py:578:42    - Unknown word (nbytes)     -- filelike.getbuffer().nbytes - filelike.tell()
django/middleware/clickjacking.py:17:7      - Unknown word (xframe)     -- a xframe_options_exempt value
django/middleware/clickjacking.py:30:38     - Unknown word (xframe)     -- set it if they used @xframe_options_exempt
django/middleware/clickjacking.py:31:31     - Unknown word (xframe)     -- if getattr(response, "xframe_options_exempt", False
django/middleware/clickjacking.py:34:56     - Unknown word (xframe)     -- Options"] = self.get_xframe_options_value(
django/middleware/clickjacking.py:40:13     - Unknown word (xframe)     -- def get_xframe_options_value(self,
django/middleware/common.py:124:13    - Unknown word (referer)    -- referer = request.META.get(
django/middleware/common.py:124:46    - Unknown word (REFERER)    -- request.META.get("HTTP_REFERER", "")
django/middleware/common.py:126:69    - Unknown word (referer)    -- request, path, domain, referer):
django/middleware/common.py:134:65    - Unknown word (referer)    -- internal_request(domain, referer)
django/middleware/common.py:140:43    - Unknown word (referer)    -- IP address: %s\n" % (referer, path, ua, ip),
django/middleware/common.py:145:43    - Unknown word (referer)    -- request(self, domain, referer):
django/middleware/csrf.py:297:16    - Unknown word (referer)    -- def _check_referer(self, request):
django/middleware/csrf.py:298:42    - Unknown word (REFERER)    -- request.META.get("HTTP_REFERER")
django/middleware/csrf.py:298:9     - Unknown word (referer)    -- referer = request.META.get(
django/middleware/csrf.py:299:12    - Unknown word (referer)    -- if referer is None:
django/middleware/csrf.py:303:13    - Unknown word (referer)    -- referer = urlsplit(referer)
django/middleware/csrf.py:303:32    - Unknown word (referer)    -- referer = urlsplit(referer)
django/middleware/csrf.py:30:11     - Unknown word (REFERER)    -- REASON_NO_REFERER = "Referer checking
django/middleware/csrf.py:30:22     - Unknown word (Referer)    -- REASON_NO_REFERER = "Referer checking failed - no
django/middleware/csrf.py:30:51     - Unknown word (Referer)    -- checking failed - no Referer."
django/middleware/csrf.py:31:12     - Unknown word (REFERER)    -- REASON_BAD_REFERER = "Referer checking
django/middleware/csrf.py:31:23     - Unknown word (Referer)    -- REASON_BAD_REFERER = "Referer checking failed - %s
django/middleware/csrf.py:34:18     - Unknown word (REFERER)    -- REASON_MALFORMED_REFERER = "Referer checking
django/middleware/csrf.py:34:29     - Unknown word (Referer)    -- MALFORMED_REFERER = "Referer checking failed - Referer
django/middleware/csrf.py:34:55     - Unknown word (Referer)    -- Referer checking failed - Referer is malformed."
django/middleware/csrf.py:35:17     - Unknown word (REFERER)    -- REASON_INSECURE_REFERER = (
django/middleware/gzip.py:23:17     - Unknown word (gzipping)   -- # Avoid gzipping if we've already got
django/middleware/gzip.py:37:17     - Unknown word (orignal)    -- orignal_iterator = response
django/middleware/gzip.py:40:40     - Unknown word (orignal)    -- async for chunk in orignal_iterator:
django/shortcuts.py:52:19     - Unknown word (klass)      -- def _get_queryset(klass):
django/shortcuts.py:60:16     - Unknown word (klass)      -- if hasattr(klass, "_default_manager"
django/shortcuts.py:61:16     - Unknown word (klass)      -- return klass._default_manager.all
django/shortcuts.py:62:12     - Unknown word (klass)      -- return klass
django/shortcuts.py:65:23     - Unknown word (klass)      -- def get_object_or_404(klass, *args, **kwargs):
django/template/__init__.py:34:19     - Unknown word (smartif)    -- - django.template.smartif
django/template/base.py:526:25    - Unknown word (endtag)     -- def skip_past(self, endtag):
django/template/base.py:529:74    - Unknown word (endtag)     -- and token.contents == endtag:
django/template/base.py:531:34    - Unknown word (endtag)     -- unclosed_block_tag([endtag])
django/template/base.py:622:19    - Unknown word (strdq)      -- (?:%(i18n_open)s%(strdq)s%(i18n_close)s|
django/template/base.py:623:16    - Unknown word (strsq)      -- %(i18n_open)s%(strsq)s%(i18n_close)s|
django/template/base.py:624:3     - Unknown word (strdq)      -- %(strdq)s|
django/template/base.py:625:3     - Unknown word (strsq)      -- %(strsq)s)
django/template/base.py:627:6     - Unknown word (strdq)      -- "strdq": r'"[^"\\]*(?:\\.[
django/template/base.py:628:6     - Unknown word (strsq)      -- "strsq": r"'[^'\\]*(?:\\.[
django/template/base.py:764:9     - Unknown word (alen)       -- alen = len(args)
django/template/base.py:765:9     - Unknown word (dlen)       -- dlen = len(defaults or [
django/template/base.py:767:20    - Unknown word (alen)       -- if plen < (alen - dlen) or plen > alen
django/template/base.py:767:27    - Unknown word (dlen)       -- if plen < (alen - dlen) or plen > alen:
django/template/base.py:767:43    - Unknown word (alen)       -- alen - dlen) or plen > alen:
django/template/base.py:769:66    - Unknown word (alen)       -- d provided" % (name, alen - dlen, plen)
django/template/base.py:769:73    - Unknown word (dlen)       -- provided" % (name, alen - dlen, plen)
django/template/base.py:842:34    - Unknown word (bonafide)   -- # dealing with a bonafide variable
django/template/defaultfilters.py:193:22    - Unknown word (scaleb)     -- exp = Decimal(1).scaleb(-abs(p))
django/template/defaultfilters.py:195:5     - Unknown word (tupl)       -- tupl = d.as_tuple()
django/template/defaultfilters.py:196:17    - Unknown word (tupl)       -- units = len(tupl[1])
django/template/defaultfilters.py:197:15    - Unknown word (tupl)       -- units += -tupl[2] if m else tupl[2
django/template/defaultfilters.py:197:33    - Unknown word (tupl)       -- -tupl[2] if m else tupl[2]
django/template/defaultfilters.py:198:5     - Unknown word (prec)       -- prec = abs(p) + units +
django/template/defaultfilters.py:199:16    - Unknown word (getcontext) -- prec = max(getcontext().prec, prec)
django/template/defaultfilters.py:199:29    - Unknown word (prec)       -- prec = max(getcontext().prec, prec)
django/template/defaultfilters.py:199:35    - Unknown word (prec)       -- max(getcontext().prec, prec)
django/template/defaultfilters.py:199:5     - Unknown word (prec)       -- prec = max(getcontext().prec
django/template/defaultfilters.py:203:56    - Unknown word (prec)       -- ROUND_HALF_UP, Context(prec=prec))
django/template/defaultfilters.py:21:31     - Unknown word (Truncator)  -- django.utils.text import Truncator, normalize_newlines
django/template/defaultfilters.py:298:30    - Unknown word (titlecase)  -- Convert a string into titlecase."""
django/template/defaultfilters.py:311:12    - Unknown word (Truncator)  -- return Truncator(value).chars(length
django/template/defaultfilters.py:325:12    - Unknown word (Truncator)  -- return Truncator(value).chars(length
django/template/defaultfilters.py:339:12    - Unknown word (Truncator)  -- return Truncator(value).words(length
django/template/defaultfilters.py:353:12    - Unknown word (Truncator)  -- return Truncator(value).words(length
django/template/defaultfilters.py:460:5     - Unknown word (escapeseq)  -- def escapeseq(value):
django/template/defaultfilters.py:6:72      - Unknown word (getcontext) -- Decimal, InvalidOperation, getcontext
django/template/defaultfilters.py:956:22    - Unknown word (cand)       -- * If value is 0, cand{{ value|pluralize:"y
django/template/defaultfilters.py:957:22    - Unknown word (cand)       -- * If value is 1, cand{{ value|pluralize:"y
django/template/defaultfilters.py:958:22    - Unknown word (cand)       -- * If value is 2, cand{{ value|pluralize:"y
django/template/defaulttags.py:1118:48   - Unknown word (amet)        -- Lorem ipsum dolor sit amet, consectetuer...").
django/template/defaulttags.py:1118:54   - Unknown word (consectetuer) -- ipsum dolor sit amet, consectetuer...").
django/template/defaulttags.py:1224:21   - Unknown word (Remler)       -- * Emily Remler
django/template/defaulttags.py:1226:15   - Unknown word (Lovie)        -- * Lovie Austin
django/template/defaulttags.py:1457:21   - Unknown word (myblock)      -- {% verbatim myblock %}
django/template/defaulttags.py:1459:24   - Unknown word (myblock)      -- {% endverbatim myblock %}
django/template/defaulttags.py:146:35    - Unknown word (asvar)      -- init__(self, variables, asvar=None):
django/template/defaulttags.py:148:14    - Unknown word (asvar)      -- self.asvar = asvar
django/template/defaulttags.py:148:22    - Unknown word (asvar)      -- self.asvar = asvar
django/template/defaulttags.py:157:17    - Unknown word (asvar)      -- if self.asvar:
django/template/defaulttags.py:158:26    - Unknown word (asvar)      -- context[self.asvar] = first
django/template/defaulttags.py:40:7      - Unknown word (smartif)    -- from .smartif import IfParser, Literal
django/template/defaulttags.py:610:53    - Unknown word (subtemplate) -- rowcolors }}">{% include "subtemplate.html " %}</tr>
django/template/library.py:115:17    - Unknown word (varkw)      -- varkw,
django/template/library.py:117:17    - Unknown word (kwonly)     -- kwonly,
django/template/library.py:118:17    - Unknown word (kwonly)     -- kwonly_defaults,
django/template/library.py:135:21    - Unknown word (varkw)      -- varkw,
django/template/library.py:137:21    - Unknown word (kwonly)     -- kwonly,
django/template/library.py:138:21    - Unknown word (kwonly)     -- kwonly_defaults,
django/template/library.py:170:17    - Unknown word (varkw)      -- varkw,
django/template/library.py:172:17    - Unknown word (kwonly)     -- kwonly,
django/template/library.py:186:21    - Unknown word (varkw)      -- varkw,
django/template/library.py:254:36    - Unknown word (reparsing)  -- render_context to avoid reparsing and loading when used
django/template/library.py:288:5     - Unknown word (varkw)      -- varkw,
django/template/library.py:37:34     - Unknown word (somename)   -- # @register.tag('somename') or @register.tag(name
django/template/library.py:37:68     - Unknown word (somename)   -- @register.tag(name='somename')
django/template/library.py:43:29     - Unknown word (somename)   -- # register.tag('somename', somefunc)
django/template/library.py:43:40     - Unknown word (somefunc)   -- register.tag('somename', somefunc)
django/template/library.py:75:37     - Unknown word (somename)   -- # @register.filter('somename') or @register.filter
django/template/library.py:75:74     - Unknown word (somename)   -- register.filter(name='somename')
django/template/library.py:81:43     - Unknown word (somefunc)   -- register.filter('somename', somefunc)
django/template/loader_tags.py:179:36    - Unknown word (reparsing)  -- render_context to avoid reparsing and loading when used
django/template/loader_tags.py:312:49    - Unknown word (BAZZ)       -- some_include" with bar="BAZZ!" baz="BING!" %}
django/template/loader_tags.py:348:5     - Unknown word (namemap)    -- namemap = options.get("with
django/template/loader_tags.py:352:23    - Unknown word (namemap)    -- extra_context=namemap,
django/template/response.py:116:17    - Unknown word (newretval)  -- newretval = post_callback(retval
django/template/response.py:117:20    - Unknown word (newretval)  -- if newretval is not None:
django/template/response.py:118:30    - Unknown word (newretval)  -- retval = newretval
django/templatetags/i18n.py:75:49     - Unknown word (asvar)      -- filter_expression, noop, asvar=None, message_context
django/templatetags/i18n.py:77:14     - Unknown word (asvar)      -- self.asvar = asvar
django/templatetags/i18n.py:77:22     - Unknown word (asvar)      -- self.asvar = asvar
django/templatetags/i18n.py:97:17     - Unknown word (asvar)      -- if self.asvar:
django/templatetags/i18n.py:98:26     - Unknown word (asvar)      -- context[self.asvar] = value
django/templatetags/tz.py:14:7      - Unknown word (datetimeobject) -- class datetimeobject(datetime):
django/templatetags/tz.py:56:32     - Unknown word (exceptionsm)    -- Filters must never raise exceptionsm, so catch everything
django/templatetags/tz.py:75:14     - Unknown word (datetimeobject) -- result = datetimeobject(
django/test/client.py:1453:36   - Unknown word (asgi)          -- urlconf = getattr(response.asgi_request, "urlconf",
django/test/client.py:1490:36   - Unknown word (ahandle)       -- response = await self._ahandle_redirects(
django/test/client.py:1520:36   - Unknown word (ahandle)       -- response = await self._ahandle_redirects(
django/test/client.py:1553:36   - Unknown word (ahandle)       -- response = await self._ahandle_redirects(
django/test/client.py:1583:36   - Unknown word (ahandle)       -- response = await self._ahandle_redirects(
django/test/client.py:1618:36   - Unknown word (ahandle)       -- response = await self._ahandle_redirects(
django/test/client.py:16:27     - Unknown word (asgi)       -- django.core.handlers.asgi import ASGIRequest
django/test/client.py:16:39     - Unknown word (ASGI)       -- handlers.asgi import ASGIRequest
django/test/client.py:232:31    - Unknown word (asend)      -- await request_started.asend(sender=self.__class
django/test/client.py:235:19    - Unknown word (ASGI)       -- request = ASGIRequest(scope, LimitedStream
django/test/client.py:244:34    - Unknown word (ASGI)       -- Attach the originating ASGI request to the response
django/test/client.py:246:18    - Unknown word (asgi)       -- response.asgi_request = request
django/test/client.py:399:69    - Unknown word (doseq)      -- urlencode(query_params, doseq=True)
django/test/client.py:665:61    - Unknown word (doseq)      -- urlencode(query_params, doseq=True)
django/test/client.py:676:37    - Unknown word (ASGI)       -- lets you create mock ASGI-like Request objects
django/test/client.py:685:19    - Unknown word (ASGI)       -- a) this makes ASGIRequest subclasses, and
django/test/client.py:695:14    - Unknown word (asgi)       -- "asgi": {"version": "3.0"
django/test/client.py:764:57    - Unknown word (doseq)      -- urlencode(query_params, doseq=True)
django/test/client.py:772:41    - Unknown word (asgi)       -- update(HttpHeaders.to_asgi_names(headers))
django/test/client.py:814:15    - Unknown word (asession)   -- async def asession(self):
django/test/client.py:839:15    - Unknown word (alogin)     -- async def alogin(self, **credentials
django/test/client.py:841:41    - Unknown word (aauthenticate) -- contrib.auth import aauthenticate
django/test/client.py:843:22    - Unknown word (aauthenticate) -- user = await aauthenticate(**credentials)
django/test/client.py:845:25    - Unknown word (alogin)        -- await self._alogin(user)
django/test/client.py:855:15    - Unknown word (aforce)        -- async def aforce_login(self, user, backend
django/test/client.py:859:21    - Unknown word (alogin)        -- await self._alogin(user, backend)
django/test/client.py:884:16    - Unknown word (alogin)        -- async def _alogin(self, user, backend
django/test/client.py:885:41    - Unknown word (alogin)        -- contrib.auth import alogin
django/test/client.py:889:30    - Unknown word (asession)      -- session = await self.asession()
django/test/client.py:928:15    - Unknown word (alogout)       -- async def alogout(self):
django/test/client.py:930:52    - Unknown word (alogout)       -- auth import aget_user, alogout
django/test/client.py:933:30    - Unknown word (asession)      -- session = await self.asession()
django/test/client.py:940:15    - Unknown word (alogout)       -- await alogout(request)
django/test/html.py:19:6      - Unknown word (autoplay)   -- "autoplay",
django/test/html.py:212:40    - Unknown word (getpos)         -- HTMLParseError(msg, self.getpos())
django/test/html.py:218:29    - Unknown word (getpos)         -- position = self.getpos()
django/test/html.py:241:48    - Unknown word (getpos)         -- positions[element] = self.getpos()
django/test/html.py:25:6      - Unknown word (formnovalidate) -- "formnovalidate",
django/test/html.py:28:6      - Unknown word (itemscope)      -- "itemscope",
django/test/html.py:35:6      - Unknown word (playsinline)    -- "playsinline",
django/test/html.py:41:6      - Unknown word (truespeed)      -- "truespeed",
django/test/runner.py:353:36    - Unknown word (unpythonic) -- implementation matches the unpythonic coding style of unittest
django/test/runner.py:445:10    - Unknown word (subsuite)   -- def _run_subsuite(args):
django/test/runner.py:452:19    - Unknown word (subsuite)   -- runner_class, subsuite_index, subsuite, failfast
django/test/runner.py:452:35    - Unknown word (subsuite)   -- class, subsuite_index, subsuite, failfast, buffer =
django/test/runner.py:454:25    - Unknown word (subsuite)   -- result = runner.run(subsuite)
django/test/runner.py:455:12    - Unknown word (subsuite)   -- return subsuite_index, result.events
django/test/runner.py:487:15    - Unknown word (subsuites)  -- self, subsuites, processes, failfast
django/test/runner.py:489:14    - Unknown word (subsuites)  -- self.subsuites = subsuites
django/test/runner.py:489:26    - Unknown word (subsuites)  -- self.subsuites = subsuites
django/test/runner.py:508:45    - Unknown word (subsuites)  -- numeric indexes in self.subsuites instead of tests
django/test/runner.py:519:13    - Unknown word (initargs)   -- initargs=[
django/test/runner.py:531:51    - Unknown word (subsuites)  -- subsuite in enumerate(self.subsuites)
django/test/runner.py:653:9     - Unknown word (keepdb)     -- keepdb=False,
django/test/runner.py:675:14    - Unknown word (keepdb)     -- self.keepdb = keepdb
django/test/runner.py:675:23    - Unknown word (keepdb)     -- self.keepdb = keepdb
django/test/runner.py:727:16    - Unknown word (keepdb)     -- "--keepdb", action="store_true
django/test/runner.py:968:13    - Unknown word (keepdb)     -- keepdb=self.keepdb,
django/test/signals.py:243:54    - Unknown word (modwsgi)    -- auth.handlers import modwsgi
django/test/signals.py:245:13    - Unknown word (modwsgi)    -- modwsgi.UserModel = UserModel
django/test/signals.py:61:27     - Unknown word (tzset)      -- if hasattr(time, "tzset"):
django/test/signals.py:66:18     - Unknown word (tzset)      -- time.tzset()
django/test/testcases.py:328:53    - Unknown word (picklability) -- cannot be tested on picklability, since they
django/test/testcases.py:331:13    - Unknown word (pickable)     -- pickable_state = {"_outcome"
django/test/testcases.py:333:27    - Unknown word (pickable)     -- if key in pickable_state or not is_pickable
django/test/testcases.py:333:52    - Unknown word (pickable)     -- pickable_state or not is_pickable(value):
django/test/testcases.py:335:17    - Unknown word (pickable)     -- pickable_state[key] = value
django/test/testcases.py:99:8      - Unknown word (pickable)   -- def is_pickable(obj):
django/test/utils.py:103:27    - Unknown word (subcontexts) -- Flattened keys of subcontexts.
django/test/utils.py:178:5     - Unknown word (keepdb)      -- keepdb=False,
django/test/utils.py:209:25    - Unknown word (keepdb)      -- keepdb=keepdb,
django/test/utils.py:209:32    - Unknown word (keepdb)      -- keepdb=keepdb,
django/test/utils.py:218:33    - Unknown word (keepdb)      -- keepdb=keepdb,
django/test/utils.py:218:40    - Unknown word (keepdb)      -- keepdb=keepdb,
django/test/utils.py:58:29     - Unknown word (tzset)      -- SUPPORT = hasattr(time, "tzset")
django/test/utils.py:751:30    - Unknown word (tzset)       -- OSes that don't provide tzset (Windows), we can't
django/test/utils.py:993:22    - Unknown word (weakreferences) -- # Collecting weakreferences can take two collections
django/urls/conf.py:1:27      - Unknown word (Lsconfs)    -- Functions for use in URLsconfs."""
django/urls/resolvers.py:25:39     - Unknown word (SUBDELIMS)  -- http import RFC3986_SUBDELIMS, escape_leading_slashes
django/urls/resolvers.py:673:66    - Unknown word (submatch)   -- arguments in match with submatch
django/urls/resolvers.py:799:38    - Unknown word (SUBDELIMS)  -- safe=RFC3986_SUBDELIMS + "/~:@",
django/urls/utils.py:34:20     - Unknown word (submod)     -- parentmod, submod = get_mod_func(mod_name
django/urls/utils.py:34:9      - Unknown word (parentmod)  -- parentmod, submod = get_mod_func
django/urls/utils.py:35:12     - Unknown word (submod)     -- if submod and not module_has_submodule
django/urls/utils.py:35:62     - Unknown word (parentmod)  -- submodule(import_module(parentmod), submod):
django/urls/utils.py:35:74     - Unknown word (submod)     -- import_module(parentmod), submod):
django/utils/archive.py:112:28    - Unknown word (unarchived) -- permissions to the unarchived file.
django/utils/autoreload.py:100:29    - Unknown word (SIGTTOU)    -- if hasattr(signal, "SIGTTOU"):
django/utils/autoreload.py:101:48    - Unknown word (SIGTTOU)    -- signal.signal(signal.SIGTTOU, signal.SIG_IGN)
django/utils/autoreload.py:104:17    - Unknown word (tcsetattr)  -- termios.tcsetattr(sys.stdin, termios.TCSANOW
django/utils/autoreload.py:104:46    - Unknown word (TCSANOW)    -- tcsetattr(sys.stdin, termios.TCSANOW, attr_list)
django/utils/autoreload.py:106:34    - Unknown word (SIGTTOU)    -- signal.signal(signal.SIGTTOU, old_handler)
django/utils/autoreload.py:388:9     - Unknown word (mtimes)     -- mtimes = {}
django/utils/autoreload.py:391:28    - Unknown word (mtimes)     -- old_time = mtimes.get(filepath)
django/utils/autoreload.py:392:17    - Unknown word (mtimes)     -- mtimes[filepath] = mtime
django/utils/autoreload.py:483:14    - Unknown word (dedup)      -- "dedup_results": True,
django/utils/autoreload.py:97:25     - Unknown word (tcgetattr)  -- attr_list = termios.tcgetattr(sys.stdin)
django/utils/cache.py:316:9     - Unknown word (newheader)  -- newheader
django/utils/cache.py:317:13    - Unknown word (newheader)  -- for newheader in newheaders
django/utils/cache.py:318:12    - Unknown word (newheader)  -- if newheader.lower() not in existing
django/utils/cache.py:47:9      - Unknown word (dictitem)   -- def dictitem(s):
django/utils/cache.py:54:9      - Unknown word (dictvalue)  -- def dictvalue(*t):
django/utils/cache.py:63:32     - Unknown word (dictitem)   -- directive, value = dictitem(field)
django/utils/cache.py:96:32     - Unknown word (dictvalue)  -- directives.extend([dictvalue(directive, value) for
django/utils/cache.py:98:31     - Unknown word (dictvalue)  -- directives.append(dictvalue(directive, values))
django/utils/choices.py:20:68     - Unknown word (fillvalue)  -- longest(self, other, fillvalue=object()))
django/utils/choices.py:25:15     - Unknown word (Suboptimally) -- # Suboptimally consume whole iterator
django/utils/crypto.py:45:50     - Unknown word (digestmod)  -- force_bytes(value), digestmod=hasher)
django/utils/crypto.py:70:40     - Unknown word (dklen)      -- password, salt, iterations, dklen=0, digest=None):
django/utils/crypto.py:74:13     - Unknown word (dklen)      -- dklen = dklen or None
django/utils/crypto.py:74:5      - Unknown word (dklen)      -- dklen = dklen or None
django/utils/crypto.py:77:75     - Unknown word (dklen)      -- password, salt, iterations, dklen)
django/utils/datastructures.py:243:7     - Unknown word (delslice)   -- __delslice__ = complain
django/utils/datastructures.py:247:7     - Unknown word (setslice)   -- __setslice__ = complain
django/utils/datastructures.py:65:33     - Unknown word (Holovaty)   -- setlist('lastname', ['Holovaty', 'Willison'])
django/utils/datastructures.py:65:45     - Unknown word (Willison)   -- lastname', ['Holovaty', 'Willison'])
django/utils/dateformat.py:319:41    - Unknown word (yday)        -- data.timetuple().tm_yday
django/utils/dateformat.py:35:4      - Unknown word (formatchars) -- re_formatchars = _lazy_re_compile(r
django/utils/dateformat.py:40:22     - Unknown word (formatstr)   -- def format(self, formatstr):
django/utils/dateformat.py:42:38     - Unknown word (formatchars) -- piece in enumerate(re_formatchars.split(str(formatstr
django/utils/dateformat.py:42:60     - Unknown word (formatstr)   -- formatchars.split(str(formatstr))):
django/utils/deconstruct.py:14:19     - Unknown word (klass)      -- def decorator(klass):
django/utils/deconstruct.py:17:25     - Unknown word (klass)      -- obj = super(klass, cls).__new__(cls)
django/utils/deconstruct.py:27:38     - Unknown word (klass)      -- path and type(obj) is klass:
django/utils/deconstruct.py:47:46     - Unknown word (klass)      -- path and type(obj) is klass
django/utils/deconstruct.py:54:9      - Unknown word (klass)      -- klass.__new__ = staticmethod
django/utils/decorators.py:57:9      - Unknown word (markcoroutinefunction) -- markcoroutinefunction(_wrapper)
django/utils/decorators.py:5:47      - Unknown word (markcoroutinefunction) -- iscoroutinefunction, markcoroutinefunction
django/utils/decorators.py:8:7       - Unknown word (classonlymethod)       -- class classonlymethod(classmethod):
django/utils/deprecation.py:100:13    - Unknown word (markcoroutinefunction) -- markcoroutinefunction(self)
django/utils/deprecation.py:116:27    - Unknown word (acall)                 -- return self.__acall__(request)
django/utils/deprecation.py:125:17    - Unknown word (acall)                 -- async def __acall__(self, request):
django/utils/deprecation.py:4:47      - Unknown word (markcoroutinefunction) -- iscoroutinefunction, markcoroutinefunction, sync_to_async
django/utils/deprecation.py:99:46     - Unknown word (dunder)                -- to avoid swapping out dunder methods.
django/utils/encoding.py:147:66    - Unknown word (multibyte)  -- bytes ≥ 128 are part of multibyte
django/utils/encoding.py:149:2     - Unknown word (hexdig)     -- _hexdig = "0123456789ABCDEFabcdef
django/utils/encoding.py:151:55    - Unknown word (hexdig)     -- fromhex(a + b) for a in _hexdig[8:] for b in _hexdig
django/utils/encoding.py:151:76    - Unknown word (hexdig)     -- hexdig[8:] for b in _hexdig}
django/utils/encoding.py:188:12    - Unknown word (repercent)  -- return repercent_broken_unicode(iri)
django/utils/encoding.py:199:23    - Unknown word (alphanum)   -- # unreserved  = alphanum | mark
django/utils/encoding.py:213:5     - Unknown word (repercent)  -- def repercent_broken_unicode(path
django/utils/encoding.py:216:5     - Unknown word (repercent)  -- repercent-encode any octet produced
django/utils/encoding.py:226:13    - Unknown word (repercent)  -- repercent = quote(path[e.start
django/utils/encoding.py:227:52    - Unknown word (repercent)  -- append(path[: e.start] + repercent.encode())
django/utils/feedgenerator.py:32:19     - Unknown word (xmlutils)   -- from django.utils.xmlutils import SimplerXMLGenerator
django/utils/feedgenerator.py:66:5      - Unknown word (mimetypedb) -- mimetypedb = mimetypes.MimeTypes
django/utils/feedgenerator.py:71:5      - Unknown word (mimetypedb) -- mimetypedb.readfp(StringIO("text
django/utils/feedgenerator.py:73:12     - Unknown word (mimetypedb) -- return mimetypedb.guess_type(url)
django/utils/feedgenerator.py:8:16      - Unknown word (Poynter)    -- ... title="Poynter E-Media Tidbits",
django/utils/formats.py:270:33    - Unknown word (CFGY)       -- ?:^|[^%])(?:%%)*)%([CFGY])",
django/utils/functional.py:323:66    - Unknown word (unpickler)  -- _ method and custom unpickler. We
django/utils/functional.py:324:40    - Unknown word (unpickler's) -- wrapped object as the unpickler's argument, so that pickle
django/utils/functional.py:325:45    - Unknown word (unpickler)   -- normally, and then the unpickler simply returns its
django/utils/functional.py:330:26    - Unknown word (lazyobject)  -- return (unpickle_lazyobject, (self._wrapped,))
django/utils/functional.py:375:14    - Unknown word (lazyobject)  -- def unpickle_lazyobject(wrapped):
django/utils/html.py:14:39     - Unknown word (GENDELIMS)  -- http import RFC3986_GENDELIMS, RFC3986_SUBDELIMS
django/utils/html.py:14:58     - Unknown word (SUBDELIMS)  -- _GENDELIMS, RFC3986_SUBDELIMS
django/utils/html.py:184:34    - Unknown word (charrefs)   -- super().__init__(convert_charrefs=False)
django/utils/html.py:232:11    - Unknown word (urlquote)   -- def smart_urlquote(url):
django/utils/html.py:239:44    - Unknown word (SUBDELIMS)  -- segment, safe=RFC3986_SUBDELIMS + RFC3986_GENDELIMS
django/utils/html.py:239:64    - Unknown word (GENDELIMS)  -- SUBDELIMS + RFC3986_GENDELIMS + "~")
django/utils/html.py:345:29    - Unknown word (urlquote)   -- url = smart_urlquote(html.unescape(middle
django/utils/html.py:347:29    - Unknown word (urlquote)   -- url = smart_urlquote("http://%s" % html.unescape
django/utils/html.py:414:21    - Unknown word (rstripped)  -- rstripped = middle.rstrip(closing
django/utils/html.py:415:24    - Unknown word (rstripped)  -- if rstripped != middle:
django/utils/html.py:424:17    - Unknown word (rstripped)  -- rstripped = middle.rstrip(self
django/utils/html.py:426:17    - Unknown word (rstripped)  -- rstripped = middle.rstrip(self
django/utils/html.py:427:16    - Unknown word (rstripped)  -- if rstripped != middle:
django/utils/html.py:492:15    - Unknown word (klass)      -- def html_safe(klass):
django/utils/html.py:497:22    - Unknown word (klass)      -- if "__html__" in klass.__dict__:
django/utils/html.py:500:29    - Unknown word (klass)      -- "__html__()." % klass.__name__
django/utils/html.py:502:25    - Unknown word (klass)      -- if "__str__" not in klass.__dict__:
django/utils/html.py:505:35    - Unknown word (klass)      -- define __str__()." % klass.__name__
django/utils/http.py:106:19    - Unknown word (parsedate)  -- # email.utils.parsedate() does the job for RFC
django/utils/http.py:155:18    - Unknown word (overconsumption) -- # To prevent overconsumption of server resources
django/utils/http.py:313:6     - Unknown word (parseparam)      -- def _parseparam(s):
django/utils/http.py:331:14    - Unknown word (parseparam)      -- parts = _parseparam(";" + line)
django/utils/http.py:38:9      - Unknown word (GENDELIMS)  -- RFC3986_GENDELIMS = ":/?#[]@"
django/utils/http.py:39:9      - Unknown word (SUBDELIMS)  -- RFC3986_SUBDELIMS = "!$&'()*+,;="
django/utils/http.py:42:22     - Unknown word (doseq)      -- def urlencode(query, doseq=False):
django/utils/http.py:58:18     - Unknown word (doseq)      -- elif not doseq or isinstance(value
django/utils/http.py:66:58     - Unknown word (doseq)      -- and iterators, when doseq=True, to
django/utils/http.py:80:45     - Unknown word (doseq)      -- urlencode(query_params, doseq)
django/utils/http.py:94:38     - Unknown word (usegmt)     -- formatdate(epoch_seconds, usegmt=True)
django/utils/ipv6.py:16:31     - Unknown word (hextets)    -- zeroes, and make sure all hextets are lowercase.
django/utils/itercompat.py:11:23     - Unknown word (itercompat) -- "django.utils.itercompat.is_iterable() is deprecated
django/utils/log.py:105:24    - Unknown word (levelname)  -- record.levelname,
django/utils/log.py:114:42    - Unknown word (levelname)  -- "%s: %s" % (record.levelname, record.getMessage(
django/utils/lorem_ipsum.py:100:6     - Unknown word (ipsa)           -- "ipsa",
django/utils/lorem_ipsum.py:102:6     - Unknown word (reiciendis)     -- "reiciendis",
django/utils/lorem_ipsum.py:103:6     - Unknown word (nesciunt)       -- "nesciunt",
django/utils/lorem_ipsum.py:104:6     - Unknown word (doloribus)      -- "doloribus",
django/utils/lorem_ipsum.py:105:6     - Unknown word (autem)          -- "autem",
django/utils/lorem_ipsum.py:106:6     - Unknown word (impedit)        -- "impedit",
django/utils/lorem_ipsum.py:108:6     - Unknown word (maiores)        -- "maiores",
django/utils/lorem_ipsum.py:109:6     - Unknown word (repudiandae)    -- "repudiandae",
django/utils/lorem_ipsum.py:10:14     - Unknown word (quis)        -- "veniam, quis nostrud exercitation
django/utils/lorem_ipsum.py:10:19     - Unknown word (nostrud)     -- "veniam, quis nostrud exercitation ullamco
django/utils/lorem_ipsum.py:10:40     - Unknown word (ullamco)     -- nostrud exercitation ullamco laboris nisi ut aliquip
django/utils/lorem_ipsum.py:10:48     - Unknown word (laboris)     -- exercitation ullamco laboris nisi ut aliquip ex ea
django/utils/lorem_ipsum.py:10:6      - Unknown word (veniam)      -- "veniam, quis nostrud exercitation
django/utils/lorem_ipsum.py:10:64     - Unknown word (aliquip)     -- ullamco laboris nisi ut aliquip ex ea "
django/utils/lorem_ipsum.py:110:6     - Unknown word (ipsam)          -- "ipsam",
django/utils/lorem_ipsum.py:111:6     - Unknown word (obcaecati)      -- "obcaecati",
django/utils/lorem_ipsum.py:112:6     - Unknown word (ullam)          -- "ullam",
django/utils/lorem_ipsum.py:113:6     - Unknown word (enim)           -- "enim",
django/utils/lorem_ipsum.py:114:6     - Unknown word (totam)          -- "totam",
django/utils/lorem_ipsum.py:115:6     - Unknown word (delectus)       -- "delectus",
django/utils/lorem_ipsum.py:116:6     - Unknown word (ducimus)        -- "ducimus",
django/utils/lorem_ipsum.py:117:6     - Unknown word (quis)           -- "quis",
django/utils/lorem_ipsum.py:118:6     - Unknown word (voluptates)     -- "voluptates",
django/utils/lorem_ipsum.py:11:14     - Unknown word (consequat)   -- "commodo consequat. Duis aute irure dolor
django/utils/lorem_ipsum.py:11:25     - Unknown word (Duis)        -- "commodo consequat. Duis aute irure dolor in
django/utils/lorem_ipsum.py:11:30     - Unknown word (aute)        -- commodo consequat. Duis aute irure dolor in reprehenderit
django/utils/lorem_ipsum.py:11:35     - Unknown word (irure)       -- consequat. Duis aute irure dolor in reprehenderit
django/utils/lorem_ipsum.py:11:50     - Unknown word (reprehenderit) -- aute irure dolor in reprehenderit in voluptate "
django/utils/lorem_ipsum.py:11:6      - Unknown word (commodo)     -- "commodo consequat. Duis aute
django/utils/lorem_ipsum.py:11:67     - Unknown word (voluptate)     -- in reprehenderit in voluptate "
django/utils/lorem_ipsum.py:120:6     - Unknown word (molestiae)      -- "molestiae",
django/utils/lorem_ipsum.py:121:6     - Unknown word (harum)          -- "harum",
django/utils/lorem_ipsum.py:122:6     - Unknown word (dolorem)        -- "dolorem",
django/utils/lorem_ipsum.py:124:6     - Unknown word (voluptatem)     -- "voluptatem",
django/utils/lorem_ipsum.py:125:6     - Unknown word (molestias)      -- "molestias",
django/utils/lorem_ipsum.py:126:6     - Unknown word (magni)          -- "magni",
django/utils/lorem_ipsum.py:127:6     - Unknown word (distinctio)     -- "distinctio",
django/utils/lorem_ipsum.py:128:6     - Unknown word (omnis)          -- "omnis",
django/utils/lorem_ipsum.py:129:6     - Unknown word (illum)          -- "illum",
django/utils/lorem_ipsum.py:12:17     - Unknown word (cillum)        -- "velit esse cillum dolore eu fugiat nulla
django/utils/lorem_ipsum.py:12:24     - Unknown word (dolore)        -- "velit esse cillum dolore eu fugiat nulla pariatur
django/utils/lorem_ipsum.py:12:34     - Unknown word (fugiat)        -- esse cillum dolore eu fugiat nulla pariatur. Excepteur
django/utils/lorem_ipsum.py:12:41     - Unknown word (nulla)         -- cillum dolore eu fugiat nulla pariatur. Excepteur
django/utils/lorem_ipsum.py:12:47     - Unknown word (pariatur)      -- dolore eu fugiat nulla pariatur. Excepteur sint "
django/utils/lorem_ipsum.py:12:57     - Unknown word (Excepteur)     -- fugiat nulla pariatur. Excepteur sint "
django/utils/lorem_ipsum.py:12:6      - Unknown word (velit)         -- "velit esse cillum dolore eu
django/utils/lorem_ipsum.py:130:6     - Unknown word (dolorum)        -- "dolorum",
django/utils/lorem_ipsum.py:131:6     - Unknown word (voluptatum)     -- "voluptatum",
django/utils/lorem_ipsum.py:133:6     - Unknown word (quas)           -- "quas",
django/utils/lorem_ipsum.py:135:6     - Unknown word (corporis)       -- "corporis",
django/utils/lorem_ipsum.py:137:6     - Unknown word (blanditiis)     -- "blanditiis",
django/utils/lorem_ipsum.py:138:6     - Unknown word (atque)          -- "atque",
django/utils/lorem_ipsum.py:139:6     - Unknown word (deserunt)       -- "deserunt",
django/utils/lorem_ipsum.py:13:15     - Unknown word (cupidatat)     -- "occaecat cupidatat non proident, sunt in
django/utils/lorem_ipsum.py:13:29     - Unknown word (proident)      -- occaecat cupidatat non proident, sunt in culpa qui officia
django/utils/lorem_ipsum.py:13:39     - Unknown word (sunt)          -- cupidatat non proident, sunt in culpa qui officia
django/utils/lorem_ipsum.py:13:57     - Unknown word (officia)       -- proident, sunt in culpa qui officia deserunt "
django/utils/lorem_ipsum.py:13:6      - Unknown word (occaecat)      -- "occaecat cupidatat non proident
django/utils/lorem_ipsum.py:13:65     - Unknown word (deserunt)      -- in culpa qui officia deserunt "
django/utils/lorem_ipsum.py:140:6     - Unknown word (laboriosam)     -- "laboriosam",
django/utils/lorem_ipsum.py:141:6     - Unknown word (earum)          -- "earum",
django/utils/lorem_ipsum.py:142:6     - Unknown word (consequuntur)   -- "consequuntur",
django/utils/lorem_ipsum.py:144:6     - Unknown word (cupiditate)     -- "cupiditate",
django/utils/lorem_ipsum.py:145:6     - Unknown word (quibusdam)      -- "quibusdam",
django/utils/lorem_ipsum.py:146:6     - Unknown word (accusamus)      -- "accusamus",
django/utils/lorem_ipsum.py:148:6     - Unknown word (rerum)          -- "rerum",
django/utils/lorem_ipsum.py:14:25     - Unknown word (laborum)       -- "mollit anim id est laborum."
django/utils/lorem_ipsum.py:14:6      - Unknown word (mollit)        -- "mollit anim id est laborum
django/utils/lorem_ipsum.py:151:6     - Unknown word (eius)           -- "eius",
django/utils/lorem_ipsum.py:154:6     - Unknown word (nemo)           -- "nemo",
django/utils/lorem_ipsum.py:156:6     - Unknown word (officia)        -- "officia",
django/utils/lorem_ipsum.py:161:6     - Unknown word (reprehenderit)  -- "reprehenderit",
django/utils/lorem_ipsum.py:162:6     - Unknown word (numquam)        -- "numquam",
django/utils/lorem_ipsum.py:163:6     - Unknown word (iste)           -- "iste",
django/utils/lorem_ipsum.py:164:6     - Unknown word (fugiat)         -- "fugiat",
django/utils/lorem_ipsum.py:166:6     - Unknown word (inventore)      -- "inventore",
django/utils/lorem_ipsum.py:167:6     - Unknown word (beatae)         -- "beatae",
django/utils/lorem_ipsum.py:168:6     - Unknown word (repellendus)    -- "repellendus",
django/utils/lorem_ipsum.py:169:6     - Unknown word (magnam)         -- "magnam",
django/utils/lorem_ipsum.py:170:6     - Unknown word (recusandae)     -- "recusandae",
django/utils/lorem_ipsum.py:172:6     - Unknown word (explicabo)      -- "explicabo",
django/utils/lorem_ipsum.py:173:6     - Unknown word (doloremque)     -- "doloremque",
django/utils/lorem_ipsum.py:174:6     - Unknown word (aperiam)        -- "aperiam",
django/utils/lorem_ipsum.py:175:6     - Unknown word (consequatur)    -- "consequatur",
django/utils/lorem_ipsum.py:176:6     - Unknown word (asperiores)     -- "asperiores",
django/utils/lorem_ipsum.py:177:6     - Unknown word (commodi)        -- "commodi",
django/utils/lorem_ipsum.py:178:6     - Unknown word (optio)         -- "optio",
django/utils/lorem_ipsum.py:180:6     - Unknown word (labore)        -- "labore",
django/utils/lorem_ipsum.py:181:6     - Unknown word (temporibus)    -- "temporibus",
django/utils/lorem_ipsum.py:182:6     - Unknown word (repellat)      -- "repellat",
django/utils/lorem_ipsum.py:183:6     - Unknown word (veniam)        -- "veniam",
django/utils/lorem_ipsum.py:184:6     - Unknown word (architecto)    -- "architecto",
django/utils/lorem_ipsum.py:187:6     - Unknown word (mollitia)      -- "mollitia",
django/utils/lorem_ipsum.py:188:6     - Unknown word (nulla)         -- "nulla",
django/utils/lorem_ipsum.py:18:6      - Unknown word (exercitationem) -- "exercitationem",
django/utils/lorem_ipsum.py:190:6     - Unknown word (similique)     -- "similique",
django/utils/lorem_ipsum.py:193:6     - Unknown word (dolore)        -- "dolore",
django/utils/lorem_ipsum.py:194:6     - Unknown word (tenetur)       -- "tenetur",
django/utils/lorem_ipsum.py:195:6     - Unknown word (deleniti)      -- "deleniti",
django/utils/lorem_ipsum.py:196:6     - Unknown word (porro)         -- "porro",
django/utils/lorem_ipsum.py:197:6     - Unknown word (facere)        -- "facere",
django/utils/lorem_ipsum.py:198:6     - Unknown word (maxime)        -- "maxime",
django/utils/lorem_ipsum.py:199:6     - Unknown word (corrupti)      -- "corrupti",
django/utils/lorem_ipsum.py:19:6      - Unknown word (perferendis)    -- "perferendis",
django/utils/lorem_ipsum.py:207:6     - Unknown word (amet)          -- "amet",
django/utils/lorem_ipsum.py:208:6     - Unknown word (consectetur)   -- "consectetur",
django/utils/lorem_ipsum.py:209:6     - Unknown word (adipisicing)   -- "adipisicing",
django/utils/lorem_ipsum.py:20:6      - Unknown word (perspiciatis)   -- "perspiciatis",
django/utils/lorem_ipsum.py:210:6     - Unknown word (elit)          -- "elit",
django/utils/lorem_ipsum.py:213:6     - Unknown word (eiusmod)       -- "eiusmod",
django/utils/lorem_ipsum.py:214:6     - Unknown word (tempor)        -- "tempor",
django/utils/lorem_ipsum.py:215:6     - Unknown word (incididunt)    -- "incididunt",
django/utils/lorem_ipsum.py:217:6     - Unknown word (labore)        -- "labore",
django/utils/lorem_ipsum.py:219:6     - Unknown word (dolore)        -- "dolore",
django/utils/lorem_ipsum.py:21:6      - Unknown word (laborum)        -- "laborum",
django/utils/lorem_ipsum.py:221:6     - Unknown word (aliqua)        -- "aliqua",
django/utils/lorem_ipsum.py:22:6      - Unknown word (eveniet)        -- "eveniet",
django/utils/lorem_ipsum.py:23:6      - Unknown word (sunt)           -- "sunt",
django/utils/lorem_ipsum.py:24:6      - Unknown word (iure)           -- "iure",
django/utils/lorem_ipsum.py:26:6      - Unknown word (nobis)          -- "nobis",
django/utils/lorem_ipsum.py:29:6      - Unknown word (officiis)       -- "officiis",
django/utils/lorem_ipsum.py:30:6      - Unknown word (excepturi)      -- "excepturi",
django/utils/lorem_ipsum.py:31:6      - Unknown word (odio)           -- "odio",
django/utils/lorem_ipsum.py:32:6      - Unknown word (consectetur)    -- "consectetur",
django/utils/lorem_ipsum.py:35:6      - Unknown word (quisquam)       -- "quisquam",
django/utils/lorem_ipsum.py:37:6      - Unknown word (eligendi)       -- "eligendi",
django/utils/lorem_ipsum.py:38:6      - Unknown word (itaque)         -- "itaque",
django/utils/lorem_ipsum.py:40:6      - Unknown word (odit)           -- "odit",
django/utils/lorem_ipsum.py:42:6      - Unknown word (quaerat)        -- "quaerat",
django/utils/lorem_ipsum.py:43:6      - Unknown word (dignissimos)    -- "dignissimos",
django/utils/lorem_ipsum.py:44:6      - Unknown word (facilis)        -- "facilis",
django/utils/lorem_ipsum.py:45:6      - Unknown word (neque)          -- "neque",
django/utils/lorem_ipsum.py:47:6      - Unknown word (expedita)       -- "expedita",
django/utils/lorem_ipsum.py:49:6      - Unknown word (vero)           -- "vero",
django/utils/lorem_ipsum.py:52:6      - Unknown word (animi)          -- "animi",
django/utils/lorem_ipsum.py:53:6      - Unknown word (cumque)         -- "cumque",
django/utils/lorem_ipsum.py:54:6      - Unknown word (pariatur)       -- "pariatur",
django/utils/lorem_ipsum.py:55:6      - Unknown word (velit)          -- "velit",
django/utils/lorem_ipsum.py:57:6      - Unknown word (natus)          -- "natus",
django/utils/lorem_ipsum.py:58:6      - Unknown word (iusto)          -- "iusto",
django/utils/lorem_ipsum.py:59:6      - Unknown word (eaque)          -- "eaque",
django/utils/lorem_ipsum.py:60:6      - Unknown word (sequi)          -- "sequi",
django/utils/lorem_ipsum.py:61:6      - Unknown word (illo)           -- "illo",
django/utils/lorem_ipsum.py:65:6      - Unknown word (voluptatibus)   -- "voluptatibus",
django/utils/lorem_ipsum.py:66:6      - Unknown word (tempora)        -- "tempora",
django/utils/lorem_ipsum.py:67:6      - Unknown word (veritatis)      -- "veritatis",
django/utils/lorem_ipsum.py:68:6      - Unknown word (ratione)        -- "ratione",
django/utils/lorem_ipsum.py:69:6      - Unknown word (assumenda)      -- "assumenda",
django/utils/lorem_ipsum.py:70:6      - Unknown word (incidunt)       -- "incidunt",
django/utils/lorem_ipsum.py:72:6      - Unknown word (placeat)        -- "placeat",
django/utils/lorem_ipsum.py:73:6      - Unknown word (aliquid)        -- "aliquid",
django/utils/lorem_ipsum.py:74:6      - Unknown word (fuga)           -- "fuga",
django/utils/lorem_ipsum.py:76:6      - Unknown word (praesentium)    -- "praesentium",
django/utils/lorem_ipsum.py:78:6      - Unknown word (necessitatibus) -- "necessitatibus",
django/utils/lorem_ipsum.py:79:6      - Unknown word (suscipit)       -- "suscipit",
django/utils/lorem_ipsum.py:80:6      - Unknown word (adipisci)       -- "adipisci",
django/utils/lorem_ipsum.py:81:6      - Unknown word (quidem)         -- "quidem",
django/utils/lorem_ipsum.py:82:6      - Unknown word (possimus)       -- "possimus",
django/utils/lorem_ipsum.py:83:6      - Unknown word (voluptas)       -- "voluptas",
django/utils/lorem_ipsum.py:84:6      - Unknown word (debitis)        -- "debitis",
django/utils/lorem_ipsum.py:86:6      - Unknown word (accusantium)    -- "accusantium",
django/utils/lorem_ipsum.py:87:6      - Unknown word (unde)           -- "unde",
django/utils/lorem_ipsum.py:88:6      - Unknown word (sapiente)       -- "sapiente",
django/utils/lorem_ipsum.py:89:6      - Unknown word (voluptate)      -- "voluptate",
django/utils/lorem_ipsum.py:8:28      - Unknown word (amet)       -- Lorem ipsum dolor sit amet, consectetur adipisicing
django/utils/lorem_ipsum.py:8:34      - Unknown word (consectetur) -- ipsum dolor sit amet, consectetur adipisicing elit, sed
django/utils/lorem_ipsum.py:8:46      - Unknown word (adipisicing) -- sit amet, consectetur adipisicing elit, sed do eiusmod
django/utils/lorem_ipsum.py:8:58      - Unknown word (elit)        -- consectetur adipisicing elit, sed do eiusmod "
django/utils/lorem_ipsum.py:8:71      - Unknown word (eiusmod)     -- adipisicing elit, sed do eiusmod "
django/utils/lorem_ipsum.py:91:6      - Unknown word (aspernatur)     -- "aspernatur",
django/utils/lorem_ipsum.py:92:6      - Unknown word (laudantium)     -- "laudantium",
django/utils/lorem_ipsum.py:93:6      - Unknown word (soluta)         -- "soluta",
django/utils/lorem_ipsum.py:94:6      - Unknown word (amet)           -- "amet",
django/utils/lorem_ipsum.py:96:6      - Unknown word (aliquam)        -- "aliquam",
django/utils/lorem_ipsum.py:97:6      - Unknown word (saepe)          -- "saepe",
django/utils/lorem_ipsum.py:9:13      - Unknown word (incididunt)  -- "tempor incididunt ut labore et dolore
django/utils/lorem_ipsum.py:9:27      - Unknown word (labore)      -- tempor incididunt ut labore et dolore magna aliqua
django/utils/lorem_ipsum.py:9:37      - Unknown word (dolore)      -- incididunt ut labore et dolore magna aliqua. Ut enim
django/utils/lorem_ipsum.py:9:50      - Unknown word (aliqua)      -- labore et dolore magna aliqua. Ut enim ad minim "
django/utils/lorem_ipsum.py:9:6       - Unknown word (tempor)      -- "tempor incididunt ut labore
django/utils/lorem_ipsum.py:9:61      - Unknown word (enim)        -- dolore magna aliqua. Ut enim ad minim "
django/utils/regex_helper.py:5:60      - Unknown word (decompiler) -- a complete reg-exp decompiler. It
django/utils/termcolors.py:2:1       - Unknown word (termcolors) -- termcolors.py
django/utils/text.py:102:56    - Unknown word (charrefs)   -- replacement, convert_charrefs=True):
django/utils/text.py:103:34    - Unknown word (charrefs)   -- super().__init__(convert_charrefs=convert_charrefs)
django/utils/text.py:103:51    - Unknown word (charrefs)   -- convert_charrefs=convert_charrefs)
django/utils/text.py:123:23    - Unknown word (appendleft) -- self.tags.appendleft(tag)
django/utils/text.py:156:56    - Unknown word (charrefs)   -- replacement, convert_charrefs=True):
django/utils/text.py:162:21    - Unknown word (charrefs)   -- convert_charrefs=convert_charrefs,
django/utils/text.py:168:54    - Unknown word (rawdata)    -- len(data) == len(self.rawdata)
django/utils/text.py:183:7     - Unknown word (Truncator)  -- class Truncator(SimpleLazyObject):
django/utils/text.py:356:40    - Unknown word (compresslevel) -- data = gzip_compress(s, compresslevel=6, mtime=0)
django/utils/text.py:383:39    - Unknown word (compresslevel) -- filename, mode="wb", compresslevel=6, fileobj=buf, mtime
django/utils/text.py:384:10    - Unknown word (zfile)         -- ) as zfile:
django/utils/text.py:388:13    - Unknown word (zfile)         -- zfile.write(item)
django/utils/timezone.py:84:63     - Unknown word (tzset)      -- 'TZ'] and call time.tzset()
django/utils/translation/template.py:132:21    - Unknown word (inplural)    -- inplural = False
django/utils/translation/template.py:135:22    - Unknown word (pluralmatch) -- elif pluralmatch:
django/utils/translation/template.py:136:21    - Unknown word (inplural)    -- inplural = True
django/utils/translation/template.py:146:20    - Unknown word (inplural)    -- if inplural:
django/utils/translation/template.py:182:17    - Unknown word (bmatch)      -- bmatch = block_re.match(t.contents
django/utils/translation/template.py:183:17    - Unknown word (cmatches)    -- cmatches = constant_re.findall
django/utils/translation/template.py:207:22    - Unknown word (bmatch)      -- elif bmatch:
django/utils/translation/template.py:208:25    - Unknown word (fmatch)      -- for fmatch in constant_re.findall
django/utils/translation/template.py:209:47    - Unknown word (fmatch)      -- out.write(" _(%s) " % fmatch)
django/utils/translation/template.py:210:24    - Unknown word (bmatch)      -- if bmatch[1]:
django/utils/translation/template.py:212:58    - Unknown word (bmatch)      -- match = context_re.match(bmatch[1])
django/utils/translation/template.py:223:22    - Unknown word (cmatches)    -- elif cmatches:
django/utils/translation/template.py:224:35    - Unknown word (cmatches)    -- for cmatch in cmatches:
django/utils/translation/template.py:227:21    - Unknown word (incomment)   -- incomment = True
django/utils/translation/template.py:41:65     - Unknown word (xgettext)   -- that is understood by xgettext. It
django/utils/translation/template.py:48:5      - Unknown word (inplural)   -- inplural = False
django/utils/translation/template.py:52:5      - Unknown word (incomment)  -- incomment = False
django/utils/translation/template.py:66:12     - Unknown word (incomment)  -- if incomment:
django/utils/translation/template.py:81:17     - Unknown word (incomment)  -- incomment = False
django/utils/translation/template.py:87:17     - Unknown word (endbmatch)  -- endbmatch = endblock_re.match
django/utils/translation/template.py:88:17     - Unknown word (pluralmatch) -- pluralmatch = plural_re.match(t
django/utils/translation/template.py:89:20     - Unknown word (endbmatch)   -- if endbmatch:
django/utils/translation/template.py:90:24     - Unknown word (inplural)    -- if inplural:
django/utils/translation/trans_real.py:123:13    - Unknown word (tmsg)       -- tmsg = cat.get((msgid, plural
django/utils/translation/trans_real.py:124:16    - Unknown word (tmsg)       -- if tmsg is not None:
django/utils/translation/trans_real.py:125:24    - Unknown word (tmsg)       -- return tmsg
django/utils/translation/trans_real.py:207:9     - Unknown word (settingsfile) -- settingsfile = sys.modules[settings
django/utils/translation/trans_real.py:208:50    - Unknown word (settingsfile) -- join(os.path.dirname(settingsfile), "locale")
django/utils/translation/trans_real.py:24:41     - Unknown word (threadid)   -- translations are stored by threadid to make them thread
django/utils/translation/trans_real.py:275:13    - Unknown word (tmsg)         -- tmsg = self._catalog.plural
django/utils/translation/trans_real.py:280:17    - Unknown word (tmsg)         -- tmsg = msgid1
django/utils/translation/trans_real.py:395:14    - Unknown word (ctxt)         -- msg_with_ctxt = "%s%s%s" % (context
django/utils/translation/trans_real.py:396:31    - Unknown word (ctxt)         -- result = gettext(msg_with_ctxt)
django/utils/translation/trans_real.py:415:8     - Unknown word (ntranslate)   -- def do_ntranslate(singular, plural, number
django/utils/translation/trans_real.py:431:15    - Unknown word (ntranslate)   -- return do_ntranslate(singular, plural, number
django/utils/translation/trans_real.py:435:15    - Unknown word (ctxt)         -- msgs_with_ctxt = (
django/utils/translation/trans_real.py:440:34    - Unknown word (ctxt)         -- ngettext(*msgs_with_ctxt)
django/utils/translation/trans_real.py:451:5     - Unknown word (globalpath)   -- globalpath = os.path.join(
django/utils/translation/trans_real.py:459:13    - Unknown word (globalpath)   -- return [globalpath, *settings.LOCALE_PATHS
django/utils/translation/trans_real.py:564:28    - Unknown word (sublanguage)  -- the user requests a sublanguage where we have a main
django/utils/tree.py:120:42    - Unknown word (pushdown)   -- children could be used for pushdown here.
django/utils/version.py:12:57     - Unknown word (PYXY)       -- the Python version. PYXY means "Python X.Y
django/views/csrf.py:26:73     - Unknown word (REFERER)    -- CSRF_COOKIE, REASON_NO_REFERER
django/views/csrf.py:32:13     - Unknown word (referer)    -- "no_referer": reason == REASON_NO
django/views/csrf.py:32:43     - Unknown word (REFERER)    -- reason == REASON_NO_REFERER,
django/views/csrf.py:33:13     - Unknown word (referer)    -- "no_referer1": _(
django/views/csrf.py:35:15     - Unknown word (Referer)    -- "“Referer header” to be sent by
django/views/csrf.py:39:13     - Unknown word (referer)    -- "no_referer2": _(
django/views/csrf.py:40:62     - Unknown word (Referer)    -- browser to disable “Referer” headers, "
django/views/csrf.py:44:13     - Unknown word (referer)    -- "no_referer3": _(
django/views/csrf.py:48:28     - Unknown word (Referer)    -- "requires the “Referer” header to do strict
django/views/csrf.py:48:57     - Unknown word (referer)    -- header to do strict referer checking. If "
django/views/csrf.py:50:22     - Unknown word (noreferrer) -- '<a rel="noreferrer" …> for links to third
django/views/debug.py:254:69    - Unknown word (firstlineno) -- {tb_frame.f_code.co_firstlineno}"
django/views/debug.py:421:16    - Unknown word (lastframe)   -- c["lastframe"] = frames[-1]
django/views/debug.py:573:66    - Unknown word (lasti)       -- co_positions(), tb.tb_lasti // 2, None
django/views/decorators/cache.py:41:27     - Unknown word (viewfunc)   -- def _cache_controller(viewfunc):
django/views/decorators/cache.py:42:32     - Unknown word (viewfunc)   -- iscoroutinefunction(viewfunc):
django/views/decorators/cache.py:46:34     - Unknown word (viewfunc)   -- response = await viewfunc(request, *args, **kw
django/views/decorators/cache.py:54:28     - Unknown word (viewfunc)   -- response = viewfunc(request, *args, **kw
django/views/decorators/cache.py:58:22     - Unknown word (viewfunc)   -- return wraps(viewfunc)(_view_wrapper)
django/views/decorators/clickjacking.py:12:6      - Unknown word (xframe)     -- @xframe_options_deny
django/views/decorators/clickjacking.py:36:5      - Unknown word (xframe)     -- def xframe_options_sameorigin(view
django/views/decorators/clickjacking.py:42:6      - Unknown word (xframe)     -- @xframe_options_sameorigin
django/views/decorators/clickjacking.py:66:5      - Unknown word (xframe)     -- def xframe_options_exempt(view
django/views/decorators/clickjacking.py:6:5       - Unknown word (xframe)     -- def xframe_options_deny(view_func
django/views/decorators/debug.py:59:62     - Unknown word (firstlineno) -- wrapped_func.__code__.co_firstlineno
django/views/generic/base.py:121:13    - Unknown word (markcoroutinefunction) -- markcoroutinefunction(view)
django/views/generic/base.py:15:37     - Unknown word (classonlymethod)       -- utils.decorators import classonlymethod
django/views/generic/base.py:3:47      - Unknown word (markcoroutinefunction) -- iscoroutinefunction, markcoroutinefunction
django/views/generic/base.py:80:6      - Unknown word (classonlymethod)       -- @classonlymethod
django/views/i18n.py:107:54    - Unknown word (djangojs)   -- JavaScript messages go to the djangojs domain. This
django/views/i18n.py:111:15    - Unknown word (djangojs)   -- domain = "djangojs"
django/views/i18n.py:49:43     - Unknown word (REFERER)    -- request.META.get("HTTP_REFERER")
django/views/static.py:53:5      - Unknown word (statobj)    -- statobj = fullpath.stat()
django/views/static.py:55:53     - Unknown word (statobj)    -- IF_MODIFIED_SINCE"), statobj.st_mtime
django/views/static.py:61:51     - Unknown word (statobj)    -- Modified"] = http_date(statobj.st_mtime)
docs/_ext/djangodocs.py:11:15     - Unknown word (statemachine) -- from docutils.statemachine import ViewList
docs/_ext/djangodocs.py:123:31    - Unknown word (starttag)        -- self.body.append(self.starttag(node, "table", CLASS
docs/_ext/djangodocs.py:130:20    - Unknown word (parameterlist)   -- def visit_desc_parameterlist(self, node):
docs/_ext/djangodocs.py:150:21    - Unknown word (parameterlist)   -- def depart_desc_parameterlist(self, node):
docs/_ext/djangodocs.py:167:15    - Unknown word (versionmodified) -- def visit_versionmodified(self, node):
docs/_ext/djangodocs.py:168:31    - Unknown word (starttag)        -- self.body.append(self.starttag(node, "div", CLASS=node
docs/_ext/djangodocs.py:16:32     - Unknown word (Cmdoption)    -- sphinx.domains.std import Cmdoption
docs/_ext/djangodocs.py:174:16    - Unknown word (versionmodified) -- def depart_versionmodified(self, node):
docs/_ext/djangodocs.py:186:39    - Unknown word (signode)         -- admin_node(env, sig, signode):
docs/_ext/djangodocs.py:190:5     - Unknown word (signode)         -- signode += addnodes.desc_name
docs/_ext/djangodocs.py:199:13    - Unknown word (djangohtml)      -- name = "djangohtml"
docs/_ext/djangodocs.py:204:26    - Unknown word (domaindata)      -- xrefs = self.env.domaindata["std"]["objects"]
docs/_ext/djangodocs.py:206:14    - Unknown word (ttags)           -- "ttags": [
docs/_ext/djangodocs.py:211:14    - Unknown word (tfilters)        -- "tfilters": [
docs/_ext/djangodocs.py:217:9     - Unknown word (outfilename)     -- outfilename = os.path.join(self
docs/_ext/djangodocs.py:218:19    - Unknown word (outfilename)     -- with open(outfilename, "w") as fp:
docs/_ext/djangodocs.py:232:24    - Unknown word (litblk)          -- def __init__(self, litblk_obj):
docs/_ext/djangodocs.py:233:24    - Unknown word (litblk)          -- self.wrapped = litblk_obj
docs/_ext/djangodocs.py:253:31    - Unknown word (djangohtml)      -- self.builder.name in ("djangohtml", "json") and node[
docs/_ext/djangodocs.py:283:58    - Unknown word (docname)         -- self.builder.current_docname, node.line))
docs/_ext/djangodocs.py:286:24    - Unknown word (doscon)          -- win_text, "doscon", warn=warner, linenos
docs/_ext/djangodocs.py:304:12    - Unknown word (doscon)          -- # The 'doscon' Pygments formatter
docs/_ext/djangodocs.py:30:9      - Unknown word (rolename)     -- rolename="setting",
docs/_ext/djangodocs.py:354:13    - Unknown word (bchanged)        -- bchanged = False
docs/_ext/djangodocs.py:357:17    - Unknown word (modline)         -- modline = cmdline_to_win(line
docs/_ext/djangodocs.py:358:20    - Unknown word (modline)         -- if modline is None:
docs/_ext/djangodocs.py:35:19     - Unknown word (ttag)         -- rolename="ttag",
docs/_ext/djangodocs.py:35:9      - Unknown word (rolename)     -- rolename="ttag",
docs/_ext/djangodocs.py:361:52    - Unknown word (modline)         -- append(self.WIN_PROMPT + modline)
docs/_ext/djangodocs.py:362:21    - Unknown word (bchanged)        -- bchanged = True
docs/_ext/djangodocs.py:363:16    - Unknown word (bchanged)        -- if bchanged:
docs/_ext/djangodocs.py:371:33    - Unknown word (djangohtml)      -- Only do work when the djangohtml HTML Sphinx builder
docs/_ext/djangodocs.py:373:42    - Unknown word (djangohtml)      -- builder.name not in ("djangohtml", "json"):
docs/_ext/djangodocs.py:376:42    - Unknown word (serialno)        -- uid"] = str(env.new_serialno("console"))
docs/_ext/djangodocs.py:384:64    - Unknown word (rawsource)       -- = super().run()[0].rawsource
docs/_ext/djangodocs.py:391:33    - Unknown word (pagename)        -- page_context_hook(app, pagename, templatename, context
docs/_ext/djangodocs.py:391:43    - Unknown word (templatename)    -- hook(app, pagename, templatename, context, doctree):
docs/_ext/djangodocs.py:391:66    - Unknown word (doctree)         -- templatename, context, doctree):
docs/_ext/djangodocs.py:397:9     - Unknown word (doctree)         -- doctree, "_console_directive
docs/_ext/djangodocs.py:40:19     - Unknown word (tfilter)      -- rolename="tfilter",
docs/_ext/djangodocs.py:40:9      - Unknown word (rolename)     -- rolename="tfilter",
docs/_ext/djangodocs.py:44:24     - Unknown word (fieldlookup)  -- directivename="fieldlookup",
docs/_ext/djangodocs.py:45:9      - Unknown word (rolename)     -- rolename="lookup",
docs/_ext/djangodocs.py:50:19     - Unknown word (djadmin)      -- rolename="djadmin",
docs/_ext/djangodocs.py:50:9      - Unknown word (rolename)     -- rolename="djadmin",
docs/_ext/djangodocs.py:54:46     - Unknown word (Cmdoption)    -- django-admin-option", Cmdoption)
docs/_ext/djangodocs.py:59:25     - Unknown word (djangohtml)   -- app.set_translator("djangohtml", DjangoHTMLTranslator
docs/_ext/djangodocs.py:93:25     - Unknown word (versionmodified) -- node = addnodes.versionmodified()
docs/_ext/github_links.py:103:37    - Unknown word (maxsplit)   -- module.rsplit(".", maxsplit=1)[0]
docs/_ext/github_links.py:118:57    - Unknown word (maxsplit)   -- fullname.rsplit(".", maxsplit=1)
docs/_ext/github_links.py:35:22     - Unknown word (asname)     -- if alias.asname:
docs/_ext/github_links.py:88:43     - Unknown word (maxsplit)   -- fullname.split(".", maxsplit=1)[0]
docs/conf.py:104:12    - Unknown word (toctree)           -- # The root toctree document.
docs/conf.py:140:1     - Unknown word (extlinks)          -- extlinks = {
docs/conf.py:150:5     - Unknown word (extlinks)          -- extlinks["cve"] = ("https://www
docs/conf.py:179:12    - Unknown word (sectionauthor)     -- # If true, sectionauthor and moduleauthor directives
docs/conf.py:179:30    - Unknown word (moduleauthor)      -- true, sectionauthor and moduleauthor directives will be shown
docs/conf.py:184:19    - Unknown word (trac)              -- pygments_style = "trac"
docs/conf.py:188:1     - Unknown word (intersphinx)       -- intersphinx_mapping = {
docs/conf.py:195:1     - Unknown word (intersphinx)       -- intersphinx_cache_limit = 90  #
docs/conf.py:19:15     - Unknown word (doctree)    -- # pickle.dump(doctree, f, pickle.HIGHEST_PROTOCOL
docs/conf.py:204:15    - Unknown word (djangodocs)        -- html_theme = "djangodocs"
docs/conf.py:259:13    - Unknown word (sourcelink)        -- # html_show_sourcelink = True
docs/conf.py:25:5      - Unknown word (setrecursionlimit) -- sys.setrecursionlimit(2000)
docs/conf.py:270:12    - Unknown word (opensearch)        -- # html_use_opensearch = ''
docs/conf.py:276:1     - Unknown word (htmlhelp)          -- htmlhelp_basename = "Djangodoc
docs/conf.py:276:22    - Unknown word (Djangodoc)         -- htmlhelp_basename = "Djangodoc"
docs/conf.py:278:1     - Unknown word (modindex)          -- modindex_common_prefix = ["django
docs/conf.py:291:17    - Unknown word (xelatex)           -- latex_engine = "xelatex"
docs/conf.py:292:11    - Unknown word (xindy)             -- latex_use_xindy = False
docs/conf.py:295:6     - Unknown word (fontpkg)           -- "fontpkg": r"""
docs/conf.py:296:10    - Unknown word (setmainfont)       -- \setmainfont{Symbola}
docs/conf.py:296:22    - Unknown word (Symbola)           -- \setmainfont{Symbola}
docs/conf.py:299:10    - Unknown word (usepackage)        -- \usepackage[UTF8]{ctex}
docs/conf.py:299:27    - Unknown word (ctex)              -- \usepackage[UTF8]{ctex}
docs/conf.py:304:10    - Unknown word (usepackage)        -- \usepackage{newunicodechar}
docs/conf.py:305:29    - Unknown word (ensuremath)        -- \newunicodechar{π}{\ensuremath{\pi}}
docs/conf.py:306:29    - Unknown word (ensuremath)        -- \newunicodechar{≤}{\ensuremath{\le}}
docs/conf.py:307:29    - Unknown word (ensuremath)        -- \newunicodechar{≥}{\ensuremath{\ge}}
docs/conf.py:308:29    - Unknown word (ensuremath)        -- \newunicodechar{♥}{\ensuremath{\heartsuit}}
docs/conf.py:308:41    - Unknown word (heartsuit)         -- ewunicodechar{♥}{\ensuremath{\heartsuit}}
docs/conf.py:309:29    - Unknown word (ensuremath)        -- \newunicodechar{…}{\ensuremath{\ldots}}
docs/conf.py:314:67    - Unknown word (howto)             -- author, document class [howto/manual]).
docs/conf.py:335:14    - Unknown word (pagerefs)          -- # latex_show_pagerefs = False
docs/conf.py:35:71     - Unknown word (directoy)          -- import it after the _ext directoy
docs/conf.py:364:19    - Unknown word (startdocname)      -- # List of tuples (startdocname, targetname, title,
docs/conf.py:364:33    - Unknown word (targetname)        -- tuples (startdocname, targetname, title, author, dir
docs/conf.py:365:26    - Unknown word (toctree)           -- description, category, toctree_only)
docs/conf.py:395:15    - Unknown word (djangodocs)        -- epub_theme = "djangodocs-epub"
docs/conf.py:429:8     - Unknown word (tocdepth)          -- # epub_tocdepth = 3
docs/conf.py:432:8     - Unknown word (tocdup)            -- # epub_tocdup = True
docs/conf.py:434:33    - Unknown word (includehidden)     -- between 'default' and 'includehidden'.
docs/conf.py:435:8     - Unknown word (tocscope)          -- # epub_tocscope = 'default'
docs/conf.py:47:6      - Unknown word (djangodocs)        -- "djangodocs",
docs/conf.py:48:17     - Unknown word (extlinks)          -- "sphinx.ext.extlinks",
docs/conf.py:49:17     - Unknown word (intersphinx)       -- "sphinx.ext.intersphinx",
docs/conf.py:50:17     - Unknown word (autosectionlabel)  -- "sphinx.ext.autosectionlabel",
docs/conf.py:54:3      - Unknown word (Autosection)       -- # AutosectionLabel settings.
docs/conf.py:57:1      - Unknown word (autosectionlabel)  -- autosectionlabel_prefix_document = True
docs/conf.py:58:1      - Unknown word (autosectionlabel)  -- autosectionlabel_maxdepth = 2
docs/conf.py:60:3      - Unknown word (Linkcheck)         -- # Linkcheck settings.
docs/conf.py:61:1      - Unknown word (linkcheck)         -- linkcheck_ignore = [
docs/conf.py:85:24     - Unknown word (sphinxcontrib)     -- extensions.append("sphinxcontrib.spelling")
docs/conf.py:91:41     - Unknown word (wordlist)          -- filename = "spelling_wordlist"
scripts/manage_translations.py:138:19    - Unknown word (Transifex)   -- """Return the Transifex resource name"""
scripts/manage_translations.py:13:36     - Unknown word (transifex)  -- fetch translations from transifex.com
scripts/manage_translations.py:177:57    - Unknown word (djangojs)    -- locale=["en"], domain="djangojs")
scripts/manage_translations.py:222:29    - Unknown word (Transifex)   -- Fetch translations from Transifex, wrap long lines, generate
scripts/manage_translations.py:234:24    - Unknown word (perc)        -- "--minimum-perc=5",
scripts/manage_translations.py:236:11    - Unknown word (Transifex)   -- # Transifex pull
scripts/manage_translations.py:249:11    - Unknown word (msgcat)      -- # msgcat to wrap lines and msgfmt
scripts/manage_translations.py:262:19    - Unknown word (msgcat)      -- run(["msgcat", "--no-location",
scripts/manage_translations.py:275:29    - Unknown word (Transifex)   -- Fetch translations from Transifex that were modified since
scripts/manage_translations.py:327:39    - Unknown word (Transifex)   -- fetch translations from Transifex, wrap long lines, generate
scripts/manage_translations.py:45:55     - Unknown word (transifexrc) -- otherwise read from the ~/.transifexrc file.
scripts/manage_translations.py:46:28     - Unknown word (TRANSIFEX)   -- api_token = os.getenv("TRANSIFEX_API_TOKEN")
scripts/manage_translations.py:49:44     - Unknown word (transifexrc) -- path.expanduser("~/.transifexrc"))
scripts/manage_translations.py:52:42     - Unknown word (TRANSIFEX)   -- "Please define the TRANSIFEX_API_TOKEN env var."
tests/absolute_url_overrides/tests.py:32:41     - Unknown word (testb)      -- absolute_url_overrides.testb": lambda o: "/overridden
tests/absolute_url_overrides/tests.py:47:41     - Unknown word (testc)      -- absolute_url_overrides.testc": lambda o: "/test-c
tests/admin_changelist/admin.py:160:49    - Unknown word (swallowonetoone) -- , "load", "speed", "swallowonetoone")
tests/admin_changelist/tests.py:1096:57   - Unknown word (swallowonetoone) -- response, '<td class="field-swallowonetoone">-</td>')
tests/admin_changelist/tests.py:1098:41   - Unknown word (swallowonetoone) -- response, '<td class="field-swallowonetoone">%s</td>' % swallow
tests/admin_changelist/tests.py:1101:14   - Unknown word (multiuser)       -- def test_multiuser_edit(self):
tests/admin_changelist/tests.py:1217:32   - Unknown word (INVALD)          -- data["form-0-uuid"] = "INVALD_PRIMARY_KEY"
tests/admin_changelist/tests.py:1305:23   - Unknown word (unorderedobject) -- "/unorderedobject/?p=%s" % page, superuser
tests/admin_changelist/tests.py:1365:23   - Unknown word (orderedobject)   -- "/orderedobject/?p=%s" % page, superuser
tests/admin_changelist/tests.py:1449:32   - Unknown word (attnames)        -- # Composite unique attnames.
tests/admin_changelist/tests.py:1667:19   - Unknown word (describedby)     -- 'aria-describedby="searchbar_helptext
tests/admin_changelist/tests.py:1710:46   - Unknown word (parentless)      -- objects.create(name="I am parentless", parent=None)
tests/admin_changelist/tests.py:1775:31   - Unknown word (jondoe)          -- user = User(username="jondoe", password="secret"
tests/admin_changelist/tests.py:1786:53   - Unknown word (jondoe)          -- render(context), "Added “jondoe”.")
tests/admin_changelist/tests.py:1808:70   - Unknown word (foruser)         -- log 10 as admin_log foruser user %}")
tests/admin_changelist/tests.py:2120:58   - Unknown word (proxyuser)       -- admin:admin_changelist_proxyuser_changelist")
tests/admin_changelist/tests.py:367:45    - Unknown word (dunder)     -- checkbox_for_model_with_dunder_html(self):
tests/admin_changelist/tests.py:628:38    - Unknown word (chordsband) -- self.factory.get("/chordsband/", data={"members":
tests/admin_changelist/tests.py:724:51    - Unknown word (Halvorson)  -- objects.create(name="Mary Halvorson")
tests/admin_changelist/tests.py:725:59    - Unknown word (Finlayson)  -- create(name="Jonathan Finlayson")
tests/admin_changelist/tests.py:759:15    - Unknown word (Finlayson)  -- ("Finlayson Duo Tiny", 1),
tests/admin_changelist/tests.py:760:15    - Unknown word (Finlayson)  -- ("Finlayson", 1),
tests/admin_changelist/tests.py:761:15    - Unknown word (Finlayson)  -- ("Finlayson Hype", 0),
tests/admin_changelist/tests.py:762:24    - Unknown word (Finlayson)  -- ("Jonathan Finlayson Duo", 1),
tests/admin_checks/tests.py:1002:29   - Unknown word (authorsbooks) -- list_filter = ["authorsbooks__featured"]
tests/admin_checks/tests.py:275:45    - Unknown word (modeladmins) -- checks_relying_on_other_modeladmins(self):
tests/admin_checks/tests.py:398:21    - Unknown word (modelforms)  -- def test_custom_modelforms_with_fields_fieldsets
tests/admin_checks/tests.py:435:14    - Unknown word (nonfirst)    -- def test_nonfirst_fieldset(self):
tests/admin_checks/tests.py:965:20    - Unknown word (sublists)    -- def test_check_sublists_for_duplicates(self
tests/admin_checks/tests.py:979:29    - Unknown word (sublists)    -- test_check_fieldset_sublists_for_duplicates(self
tests/admin_docs/test_utils.py:101:43    - Unknown word (firstline)  -- = parse_docstring("firstline\n\n second line"
tests/admin_docs/test_utils.py:103:56    - Unknown word (firstline)  -- rst(title, ""), "<p>firstline</p>\n")
tests/admin_docs/test_views.py:340:18    - Unknown word (docstrings) -- # method docstrings
tests/admin_filters/tests.py:1004:41   - Unknown word (underscorelookup)           -- relatedonlyfieldlistfilter_underscorelookup_foreignkey(self):
tests/admin_filters/tests.py:1037:14   - Unknown word (listfilter)                 -- def test_listfilter_genericrelation(self
tests/admin_filters/tests.py:1171:14   - Unknown word (fieldlistfilter)            -- def test_fieldlistfilter_underscorelookup_tuple
tests/admin_filters/tests.py:1171:30   - Unknown word (underscorelookup)           -- test_fieldlistfilter_underscorelookup_tuple(self):
tests/admin_filters/tests.py:1173:18   - Unknown word (fieldpath)                  -- Ensure ('fieldpath', ClassName ) lookups
tests/admin_filters/tests.py:1174:14   - Unknown word (fieldpath)                  -- when fieldpath contains double underscore
tests/admin_filters/tests.py:1189:14   - Unknown word (fieldlistfilter)            -- def test_fieldlistfilter_invalid_lookup_parameters
tests/admin_filters/tests.py:1199:14   - Unknown word (fieldlistfilter)            -- def test_fieldlistfilter_multiple_invalid_lookup
tests/admin_filters/tests.py:1310:14   - Unknown word (listfilter)                 -- def test_listfilter_without_title(self)
tests/admin_filters/tests.py:1869:61   - Unknown word (EMPT)                       -- objects.create(code="EMPT", description="")
tests/admin_filters/tests.py:1934:19   - Unknown word (improvedbook)               -- {"improvedbook__isempty": "1"},
tests/admin_filters/tests.py:1937:28   - Unknown word (improvedbook)               -- (book_admin, {"improvedbook__isempty": "0"}, [self
tests/admin_filters/tests.py:26:15     - Unknown word (dictlist)   -- def select_by(dictlist, key, value):
tests/admin_filters/tests.py:27:24     - Unknown word (dictlist)   -- return [x for x in dictlist if x[key] == value]
tests/admin_filters/tests.py:332:11    - Unknown word (improvedbook) -- ("improvedbook", EmptyFieldListFilter
tests/admin_filters/tests.py:373:13    - Unknown word (djangonaut)   -- cls.djangonaut_book = Book.objects
tests/admin_filters/tests.py:374:20    - Unknown word (Djangonaut)   -- title="Djangonaut: an art of living",
tests/admin_filters/tests.py:417:14    - Unknown word (choicesfieldlistfilter) -- def test_choicesfieldlistfilter_has_none_choice(self
tests/admin_filters/tests.py:435:14    - Unknown word (datefieldlistfilter)    -- def test_datefieldlistfilter(self):
tests/admin_filters/tests.py:451:66    - Unknown word (djangonaut)             -- self.django_book, self.djangonaut_book])
tests/admin_filters/tests.py:486:59    - Unknown word (djangonaut)             -- self.django_book, self.djangonaut_book],
tests/admin_filters/tests.py:489:70    - Unknown word (djangonaut)             -- self.django_book, self.djangonaut_book])
tests/admin_filters/tests.py:521:59    - Unknown word (djangonaut)             -- self.django_book, self.djangonaut_book],
tests/admin_filters/tests.py:611:14    - Unknown word (datefieldlistfilter)    -- def test_datefieldlistfilter_with_time_zone_support
tests/admin_filters/tests.py:613:19    - Unknown word (datefieldlistfilter)    -- self.test_datefieldlistfilter()
tests/admin_filters/tests.py:615:14    - Unknown word (allvaluesfieldlistfilter) -- def test_allvaluesfieldlistfilter(self):
tests/admin_filters/tests.py:644:14    - Unknown word (allvaluesfieldlistfilter) -- def test_allvaluesfieldlistfilter_custom_qs(self):
tests/admin_filters/tests.py:900:40    - Unknown word (Djangonaut)               -- djangonaut_book.pk, "Djangonaut: an art of living")
tests/admin_filters/tests.py:906:14    - Unknown word (relatedonlyfieldlistfilter) -- def test_relatedonlyfieldlistfilter_foreignkey(self):
tests/admin_filters/tests.py:918:14    - Unknown word (relatedonlyfieldlistfilter) -- def test_relatedonlyfieldlistfilter_foreignkey_reverse_relationsh
tests/admin_filters/tests.py:935:44    - Unknown word (Djangonaut)                 -- djangonaut_book.pk, "Djangonaut: an art of living")
tests/admin_filters/tests.py:941:14    - Unknown word (relatedonlyfieldlistfilter) -- def test_relatedonlyfieldlistfilter_manytomany_reverse_relationsh
tests/admin_filters/tests.py:955:14    - Unknown word (relatedonlyfieldlistfilter) -- def test_relatedonlyfieldlistfilter_foreignkey_ordering
tests/admin_filters/tests.py:981:14    - Unknown word (relatedonlyfieldlistfilter) -- def test_relatedonlyfieldlistfilter_foreignkey_default_ordering
tests/admin_inlines/admin.py:15:5      - Unknown word (Consigliere) -- Consigliere,
tests/admin_inlines/admin.py:319:7     - Unknown word (Consigliere) -- class ConsigliereInline(admin.TabularInline
tests/admin_inlines/admin.py:320:13    - Unknown word (Consigliere) -- model = Consigliere
tests/admin_inlines/admin.py:323:7     - Unknown word (Sotto)       -- class SottoCapoInline(admin.TabularInline
tests/admin_inlines/admin.py:324:13    - Unknown word (Sotto)       -- model = SottoCapo
tests/admin_inlines/admin.py:401:7     - Unknown word (Fashonista)  -- class FashonistaStackedInline(admin.StackedInl
tests/admin_inlines/admin.py:513:28    - Unknown word (Consigliere) -- CapoFamiglia, inlines=[ConsigliereInline, SottoCapoInline
tests/admin_inlines/admin.py:513:47    - Unknown word (Sotto)       -- [ConsigliereInline, SottoCapoInline, ReadOnlyInlineInli
tests/admin_inlines/admin.py:513:9     - Unknown word (Famiglia)    -- CapoFamiglia, inlines=[ConsigliereInline
tests/admin_inlines/admin.py:524:53    - Unknown word (Fashonista)  -- AuthorTabularInline, FashonistaStackedInline])
tests/admin_inlines/admin.py:56:5      - Unknown word (Sotto)       -- SottoCapo,
tests/admin_inlines/admin.py:9:9       - Unknown word (Famiglia)   -- CapoFamiglia,
tests/admin_inlines/models.py:261:11    - Unknown word (Famiglia)   -- class CapoFamiglia(models.Model):
tests/admin_inlines/models.py:265:7     - Unknown word (Consigliere) -- class Consigliere(models.Model):
tests/admin_inlines/models.py:266:70    - Unknown word (Consigliere) -- text="Help text for Consigliere")
tests/admin_inlines/models.py:267:10    - Unknown word (famiglia)    -- capo_famiglia = models.ForeignKey
tests/admin_inlines/models.py:267:43    - Unknown word (Famiglia)    -- models.ForeignKey(CapoFamiglia, models.CASCADE, related
tests/admin_inlines/models.py:270:7     - Unknown word (Sotto)       -- class SottoCapo(models.Model):
tests/admin_inlines/models.py:272:10    - Unknown word (famiglia)    -- capo_famiglia = models.ForeignKey
tests/admin_inlines/models.py:272:43    - Unknown word (Famiglia)    -- models.ForeignKey(CapoFamiglia, models.CASCADE, related
tests/admin_inlines/models.py:277:10    - Unknown word (famiglia)    -- capo_famiglia = models.ForeignKey
tests/admin_inlines/models.py:277:43    - Unknown word (Famiglia)    -- models.ForeignKey(CapoFamiglia, models.CASCADE)
tests/admin_inlines/tests.py:124:42    - Unknown word (uuidparent)       -- admin:admin_inlines_uuidparent_change", args=(parent
tests/admin_inlines/tests.py:128:42    - Unknown word (uuidchild)        -- type="hidden" name="uuidchild_set-0-id" value="{child
tests/admin_inlines/tests.py:129:21    - Unknown word (uuidchild)        -- 'id="id_uuidchild_set-0-id">',
tests/admin_inlines/tests.py:1456:58   - Unknown word (closelink)               -- inlines/poll/" class="closelink">Close</a>',
tests/admin_inlines/tests.py:1495:41   - Unknown word (childs)                  -- name = "Non-verbose childs"
tests/admin_inlines/tests.py:1499:29   - Unknown word (Childs)                  -- verbose_name = "Childs with verbose name"
tests/admin_inlines/tests.py:1503:29   - Unknown word (Childs)                  -- verbose_name = "Childs with verbose name plural
tests/admin_inlines/tests.py:1507:29   - Unknown word (Childs)                  -- verbose_name = "Childs with both verbose names
tests/admin_inlines/tests.py:1527:30   - Unknown word (childss)                 -- "Non-verbose childss</h2>"
tests/admin_inlines/tests.py:1541:26   - Unknown word (verbosenameprofile)      -- '<h2 id="verbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1542:18   - Unknown word (Childs)                  -- "Childs with verbose names<
tests/admin_inlines/tests.py:1546:52   - Unknown word (Childs)                  -- response, "Add another Childs with verbose name")
tests/admin_inlines/tests.py:1549:22   - Unknown word (verbosenameprofile)      -- '<h2 id="verbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1550:38   - Unknown word (onlys)                   -- Model with verbose name onlys</h2>",
tests/admin_inlines/tests.py:1558:26   - Unknown word (verbosenamepluralprofile) -- '<h2 id="verbosenamepluralprofile_set-heading" class=
tests/admin_inlines/tests.py:1566:22   - Unknown word (verbosenamepluralprofile) -- '<h2 id="verbosenamepluralprofile_set-heading" class=
tests/admin_inlines/tests.py:1574:26   - Unknown word (bothverbosenameprofile)   -- '<h2 id="bothverbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1575:43   - Unknown word (namess)                   -- Childs with both verbose namess</h2>"
tests/admin_inlines/tests.py:1582:22   - Unknown word (bothverbosenameprofile)   -- '<h2 id="bothverbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1591:48   - Unknown word (childs)                   -- plural = "Non-verbose childs"
tests/admin_inlines/tests.py:1622:30   - Unknown word (childs)                   -- "Non-verbose childs</h2>"
tests/admin_inlines/tests.py:1636:26   - Unknown word (verbosenameprofile)       -- '<h2 id="verbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1644:22   - Unknown word (verbosenameprofile)       -- '<h2 id="verbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1645:38   - Unknown word (onlys)                    -- Model with verbose name onlys</h2>",
tests/admin_inlines/tests.py:1652:26   - Unknown word (verbosenamepluralprofile) -- '<h2 id="verbosenamepluralprofile_set-heading" class=
tests/admin_inlines/tests.py:1660:22   - Unknown word (verbosenamepluralprofile) -- '<h2 id="verbosenamepluralprofile_set-heading" class=
tests/admin_inlines/tests.py:1668:26   - Unknown word (bothverbosenameprofile)   -- '<h2 id="bothverbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1676:22   - Unknown word (bothverbosenameprofile)   -- '<h2 id="bothverbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1684:41   - Unknown word (childs)                   -- name = "Non-verbose childs - name"
tests/admin_inlines/tests.py:1685:48   - Unknown word (childs)                   -- plural = "Non-verbose childs - plural name"
tests/admin_inlines/tests.py:1734:26   - Unknown word (verbosenameprofile)       -- '<h2 id="verbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1743:38   - Unknown word (onlys)                    -- Model with verbose name onlys</h2>",
tests/admin_inlines/tests.py:1750:26   - Unknown word (verbosenamepluralprofile) -- '<h2 id="verbosenamepluralprofile_set-heading" class=
tests/admin_inlines/tests.py:1768:22   - Unknown word (bothverbosenameprofile)   -- '<h2 id="bothverbosenameprofile_set-heading" class=
tests/admin_inlines/tests.py:1809:28   - Unknown word (labelledby)               -- f'aria-labelledby="{heading_id}">',
tests/admin_inlines/tests.py:1853:36   - Unknown word (labelledby)               -- f'aria-labelledby="{heading_id}">',
tests/admin_inlines/tests.py:1885:18   - Unknown word (stackeds)                 -- def test_add_stackeds(self):
tests/admin_inlines/tests.py:1907:21   - Unknown word (stackeds)                 -- def test_delete_stackeds(self):
tests/admin_inlines/tests.py:190:65    - Unknown word (titlecollection)  -- admin:admin_inlines_titlecollection_add"))
tests/admin_inlines/tests.py:196:65    - Unknown word (outfititem)       -- admin:admin_inlines_outfititem_add"))
tests/admin_inlines/tests.py:210:65    - Unknown word (someparentmodel)  -- admin:admin_inlines_someparentmodel_add"))
tests/admin_inlines/tests.py:231:42    - Unknown word (titlecollection)  -- admin:admin_inlines_titlecollection_add"), data
tests/admin_inlines/tests.py:2419:34   - Unknown word (courseproxy)              -- admin:admin_inlines_courseproxy_add",
tests/admin_inlines/tests.py:2420:34   - Unknown word (courseproxy)              -- admin:admin_inlines_courseproxy1_add",
tests/admin_inlines/tests.py:2421:34   - Unknown word (courseproxy)              -- admin:admin_inlines_courseproxy2_add",
tests/admin_inlines/tests.py:300:65    - Unknown word (capofamiglia)     -- admin:admin_inlines_capofamiglia_add"))
tests/admin_inlines/tests.py:315:65    - Unknown word (someparentmodel)  -- admin:admin_inlines_someparentmodel_add"))
tests/admin_inlines/tests.py:331:42    - Unknown word (someparentmodel)  -- admin:admin_inlines_someparentmodel_change", args=(parent
tests/admin_inlines/tests.py:335:28    - Unknown word (somechildmodel)   -- '<input id="id_somechildmodel_set-1-position" '
tests/admin_inlines/tests.py:336:20    - Unknown word (somechildmodel)   -- 'name="somechildmodel_set-1-position" type
tests/admin_inlines/tests.py:347:62    - Unknown word (someparentmodel)  -- admin:admin_inlines_someparentmodel_change",
tests/admin_inlines/tests.py:447:14    - Unknown word (somechildmodel)   -- "somechildmodel_set-TOTAL_FORMS": 1
tests/admin_inlines/tests.py:448:14    - Unknown word (somechildmodel)   -- "somechildmodel_set-INITIAL_FORMS":
tests/admin_inlines/tests.py:482:65    - Unknown word (capofamiglia)     -- admin:admin_inlines_capofamiglia_add"))
tests/admin_inlines/tests.py:488:51    - Unknown word (famiglia)         -- hidden" name="-1-0-capo_famiglia" '
tests/admin_inlines/tests.py:489:31    - Unknown word (famiglia)         -- 'id="id_-1-0-capo_famiglia">',
tests/admin_inlines/tests.py:495:35    - Unknown word (describedby)      -- maxlength="100" aria-describedby="id_-1-0-name_helptext
tests/admin_inlines/tests.py:503:51    - Unknown word (famiglia)         -- hidden" name="-2-0-capo_famiglia" '
tests/admin_inlines/tests.py:504:31    - Unknown word (famiglia)         -- 'id="id_-2-0-capo_famiglia">',
tests/admin_inlines/tests.py:53:34     - Unknown word (inlinechangelink) -- CHANGELINK_HTML = 'class="inlinechangelink">Change</a>'
tests/admin_inlines/tests.py:540:42    - Unknown word (parentmodelwithcustompk) -- admin:admin_inlines_parentmodelwithcustompk_change", args=("foo
tests/admin_inlines/tests.py:658:21    - Unknown word (nonauto)                 -- def test_inline_nonauto_noneditable_pk(self
tests/admin_inlines/tests.py:658:29    - Unknown word (noneditable)             -- test_inline_nonauto_noneditable_pk(self):
tests/admin_inlines/tests.py:662:28    - Unknown word (nonautopkbook)           -- '<input id="id_nonautopkbook_set-0-rand_pk" '
tests/admin_inlines/tests.py:663:20    - Unknown word (nonautopkbook)           -- 'name="nonautopkbook_set-0-rand_pk" type
tests/admin_inlines/tests.py:668:28    - Unknown word (nonautopkbook)           -- '<input id="id_nonautopkbook_set-2-0-rand_pk" '
tests/admin_inlines/tests.py:669:20    - Unknown word (nonautopkbook)           -- 'name="nonautopkbook_set-2-0-rand_pk" type
tests/admin_inlines/tests.py:673:21    - Unknown word (nonauto)                 -- def test_inline_nonauto_noneditable_inherited
tests/admin_inlines/tests.py:673:29    - Unknown word (noneditable)             -- test_inline_nonauto_noneditable_inherited_pk(self):
tests/admin_inlines/tests.py:677:28    - Unknown word (nonautopkbookchild)      -- '<input id="id_nonautopkbookchild_set-0-nonautopkbook
tests/admin_inlines/tests.py:677:53    - Unknown word (nonautopkbook)           -- nonautopkbookchild_set-0-nonautopkbook_ptr" '
tests/admin_inlines/tests.py:678:20    - Unknown word (nonautopkbookchild)      -- 'name="nonautopkbookchild_set-0-nonautopkbook
tests/admin_inlines/tests.py:683:28    - Unknown word (nonautopkbookchild)      -- '<input id="id_nonautopkbookchild_set-2-nonautopkbook
tests/admin_inlines/tests.py:684:20    - Unknown word (nonautopkbookchild)      -- 'name="nonautopkbookchild_set-2-nonautopkbook
tests/admin_inlines/tests.py:692:50    - Unknown word (editablepkbook)          -- vIntegerField" id="id_editablepkbook_set-0-manual_pk" '
tests/admin_inlines/tests.py:693:20    - Unknown word (editablepkbook)          -- 'name="editablepkbook_set-0-manual_pk" type
tests/admin_inlines/tests.py:699:50    - Unknown word (editablepkbook)          -- vIntegerField" id="id_editablepkbook_set-2-0-manual_pk"
tests/admin_inlines/tests.py:700:20    - Unknown word (editablepkbook)          -- 'name="editablepkbook_set-2-0-manual_pk" type
tests/admin_inlines/tests.py:747:42    - Unknown word (parentmodelwithcustompk) -- admin:admin_inlines_parentmodelwithcustompk_change", args=("foo
tests/admin_inlines/tests.py:766:14    - Unknown word (noneditable)             -- def test_noneditable_inline_has_field_inputs
tests/admin_inlines/tests.py:769:42    - Unknown word (novelreadonlychapter)    -- admin:admin_inlines_novelreadonlychapter_add")
tests/admin_inlines/tests.py:784:25    - Unknown word (stackeds)                -- "Inner4 stackeds</h2>"
tests/admin_inlines/tests.py:792:25    - Unknown word (tabulars)                -- "Inner4 tabulars</h2>"
tests/admin_inlines/tests.py:817:34    - Unknown word (showinlineparent)        -- admin:admin_inlines_showinlineparent_change",
tests/admin_inlines/tests.py:86:28     - Unknown word (someparentmodel)  -- codename="view_someparentmodel",
tests/admin_inlines/tests.py:891:9     - Unknown word (lotr)                    -- lotr = Novel.objects.create
tests/admin_inlines/tests.py:892:48    - Unknown word (lotr)                    -- objects.create(novel=lotr, name="Many Meetings
tests/admin_inlines/tests.py:893:68    - Unknown word (yadda)                   -- chapter=chapter, note="yadda yadda")
tests/admin_inlines/tests.py:893:74    - Unknown word (yadda)                   -- chapter, note="yadda yadda")
tests/admin_inlines/tests.py:895:72    - Unknown word (lotr)                    -- novel_change", args=(lotr.id,))
tests/admin_inlines/tests.py:898:21    - Unknown word (lotr)                    -- "name": lotr.name,
tests/admin_inlines/tests.py:905:36    - Unknown word (lotr)                    -- chapter_set-0-novel": lotr.id,
tests/admin_inlines/tests.py:91:28     - Unknown word (somechildmodel)   -- codename="view_somechildmodel",
tests/admin_ordering/tests.py:47:28     - Unknown word (Aerosmith)  -- Band(name="Aerosmith", bio="", rank=3),
tests/admin_ordering/tests.py:48:28     - Unknown word (Radiohead)  -- Band(name="Radiohead", bio="", rank=1),
tests/admin_ordering/tests.py:49:32     - Unknown word (Halen)      -- Band(name="Van Halen", bio="", rank=2),
tests/admin_ordering/tests.py:60:28     - Unknown word (Aerosmith)  -- self.assertEqual(["Aerosmith", "Radiohead", "Van
tests/admin_ordering/tests.py:60:41     - Unknown word (Radiohead)  -- assertEqual(["Aerosmith", "Radiohead", "Van Halen"], names
tests/admin_ordering/tests.py:60:58     - Unknown word (Halen)      -- , "Radiohead", "Van Halen"], names)
tests/admin_ordering/tests.py:73:28     - Unknown word (Radiohead)  -- self.assertEqual(["Radiohead", "Van Halen", "Aerosmith
tests/admin_ordering/tests.py:73:45     - Unknown word (Halen)      -- ssertEqual(["Radiohead", "Van Halen", "Aerosmith"], names
tests/admin_ordering/tests.py:73:54     - Unknown word (Aerosmith)  -- Radiohead", "Van Halen", "Aerosmith"], names)
tests/admin_ordering/tests.py:81:28     - Unknown word (Aerosmith)  -- self.assertEqual(["Aerosmith", "Van Halen", "Radiohead
tests/admin_ordering/tests.py:81:45     - Unknown word (Halen)      -- ssertEqual(["Aerosmith", "Van Halen", "Radiohead"], names
tests/admin_ordering/tests.py:81:54     - Unknown word (Radiohead)  -- Aerosmith", "Van Halen", "Radiohead"], names)
tests/admin_ordering/tests.py:93:28     - Unknown word (Radiohead)  -- self.assertEqual(["Radiohead", "Van Halen", "Aerosmith
tests/admin_ordering/tests.py:93:45     - Unknown word (Halen)      -- ssertEqual(["Radiohead", "Van Halen", "Aerosmith"], names
tests/admin_ordering/tests.py:93:54     - Unknown word (Aerosmith)  -- Radiohead", "Van Halen", "Aerosmith"], names)
tests/admin_scripts/broken_app/models.py:1:23      - Unknown word (modelz)     -- from django.db import modelz # NOQA
tests/admin_scripts/tests.py:1390:44   - Unknown word (sdict)      -- settings("settings.py", sdict={"BAD_VAR": "INSTALLED
tests/admin_scripts/tests.py:1397:44   - Unknown word (sdict)      -- settings("settings.py", sdict={"BAD_VAR": 'DATABASES
tests/admin_scripts/tests.py:1424:26   - Unknown word (scriptz)    -- apps=["admin_scriptz.broken_app"],
tests/admin_scripts/tests.py:1432:39   - Unknown word (scriptz)    -- assertOutput(err, "admin_scriptz")
tests/admin_scripts/tests.py:1604:59   - Unknown word (ASGI)       -- a production WSGI or ASGI server instead."
tests/admin_scripts/tests.py:1622:59   - Unknown word (ASGI)       -- a production WSGI or ASGI server instead."
tests/admin_scripts/tests.py:1641:59   - Unknown word (ASGI)       -- a production WSGI or ASGI server instead."
tests/admin_scripts/tests.py:1787:56   - Unknown word (trackback)  -- support --verbosity and --trackback options."""
tests/admin_scripts/tests.py:1790:40   - Unknown word (trackback)  -- assertNotInOutput(out, "--trackback")
tests/admin_scripts/tests.py:1902:25   - Unknown word (altert)     -- def test_help_short_altert(self):
tests/admin_scripts/tests.py:2156:33   - Unknown word (Erreur)     -- raise CommandError("Erreur personnalisée")
tests/admin_scripts/tests.py:2156:40   - Unknown word (personnalisée) -- CommandError("Erreur personnalisée")
tests/admin_scripts/tests.py:2360:15   - Unknown word (deflaut)       -- "'deflaut' (choose from 'default
tests/admin_scripts/tests.py:2382:50   - Unknown word (deflaut)       -- arg, "--database", "deflaut", verbosity=0)
tests/admin_scripts/tests.py:2568:49   - Unknown word (othertestproject) -- tartproject", "testproject", "othertestproject"]
tests/admin_scripts/tests.py:2569:56   - Unknown word (othertestproject) -- join(self.test_dir, "othertestproject")
tests/admin_scripts/tests.py:2633:63   - Unknown word (tarballtestproject) -- template", template_path, "tarballtestproject"]
tests/admin_scripts/tests.py:2634:56   - Unknown word (tarballtestproject) -- join(self.test_dir, "tarballtestproject")
tests/admin_scripts/tests.py:2651:14   - Unknown word (tarballtestproject) -- "tarballtestproject",
tests/admin_scripts/tests.py:2652:14   - Unknown word (altlocation)        -- "altlocation",
tests/admin_scripts/tests.py:2654:56   - Unknown word (altlocation)        -- join(self.test_dir, "altlocation")
tests/admin_scripts/tests.py:2734:14   - Unknown word (Procfile)           -- "Procfile",
tests/admin_scripts/tests.py:2743:20   - Unknown word (Procfile)           -- for f in ("Procfile", "additional_file.py
tests/admin_scripts/tests.py:2926:42   - Unknown word (umasks)             -- only partially supports umasks and chmod.",
tests/admin_scripts/tests.py:3169:18   - Unknown word (rnserver)           -- args = ["rnserver", "--settings=test_project
tests/admin_scripts/tests.py:3172:51   - Unknown word (rnserver)           -- "Unknown command: 'rnserver'. Did you mean runserver
tests/admin_scripts/tests.py:58:65     - Unknown word (sdict)      -- None, is_dir=False, sdict=None, extra=None):
tests/admin_scripts/tests.py:95:16     - Unknown word (sdict)      -- if sdict:
tests/admin_scripts/tests.py:96:29     - Unknown word (sdict)      -- for k, v in sdict.items():
tests/admin_utils/test_logentry.py:189:42    - Unknown word (Ajout)      -- Modification de Domain. Ajout de article « Added article
tests/admin_utils/test_logentry.py:332:14    - Unknown word (recentactions) -- def test_recentactions_without_content_type
tests/admin_utils/test_logentry.py:84:74     - Unknown word (Historique) -- Modification de Title et Historique."
tests/admin_utils/test_logentry.py:96:62     - Unknown word (Ajout)      -- get_change_message(), "Ajout.")
tests/admin_utils/tests.py:439:74    - Unknown word (Aother)     -- ), "something_0Aor_0Aother")
tests/admin_views/admin.py:1143:13   - Unknown word (Referer)          -- class InlineRefererAdmin(admin.ModelAdmin
tests/admin_views/admin.py:114:16    - Unknown word (UUIDPK)     -- RelatedWithUUIDPKModel,
tests/admin_views/admin.py:1213:15   - Unknown word (Vodcast)          -- site.register(Vodcast, VodcastAdmin)
tests/admin_views/admin.py:1213:24   - Unknown word (Vodcast)          -- site.register(Vodcast, VodcastAdmin)
tests/admin_views/admin.py:1256:22   - Unknown word (Referer)          -- site.register(ChildOfReferer)
tests/admin_views/admin.py:1258:21   - Unknown word (Referer)          -- site.register(InlineReferer, InlineRefererAdmin
tests/admin_views/admin.py:1261:25   - Unknown word (UUIDPK)           -- site.register(ParentWithUUIDPK)
tests/admin_views/admin.py:1263:26   - Unknown word (UUIDPK)           -- register(RelatedWithUUIDPKModel)
tests/admin_views/admin.py:1325:26   - Unknown word (UUIDPK)           -- .register(ParentWithUUIDPK)
tests/admin_views/admin.py:140:5     - Unknown word (Vodcast)    -- Vodcast,
tests/admin_views/admin.py:42:12     - Unknown word (Referer)    -- ChildOfReferer,
tests/admin_views/admin.py:436:7     - Unknown word (Vodcast)    -- class VodcastAdmin(admin.ModelAdmin
tests/admin_views/admin.py:497:11    - Unknown word (titletranslation) -- "=titletranslation__text",
tests/admin_views/admin.py:498:28    - Unknown word (titletranslation) -- "=the_recommender__titletranslation__text",
tests/admin_views/admin.py:556:29    - Unknown word (subslug)          -- prepopulated_fields = {"subslug": ("subtitle",)}
tests/admin_views/admin.py:560:22    - Unknown word (subslug)          -- return ("subslug",)
tests/admin_views/admin.py:76:11     - Unknown word (Referer)    -- InlineReferer,
tests/admin_views/admin.py:88:15     - Unknown word (UUIDPK)     -- ParentWithUUIDPK,
tests/admin_views/forms.py:12:25     - Unknown word (customform) -- if username == "customform":
tests/admin_views/models.py:1004:13   - Unknown word (Referer)      -- class InlineReferer(models.Model):
tests/admin_views/models.py:1013:39   - Unknown word (Referer)      -- models.ForeignKey(InlineReferer, models.CASCADE)
tests/admin_views/models.py:1013:5    - Unknown word (referer)      -- referer = models.ForeignKey
tests/admin_views/models.py:1023:5    - Unknown word (rname)        -- rname = models.CharField(max
tests/admin_views/models.py:1033:66   - Unknown word (rname)        -- models.CASCADE, to_field="rname")
tests/admin_views/models.py:1062:17   - Unknown word (UUIDPK)       -- class ParentWithUUIDPK(models.Model):
tests/admin_views/models.py:1070:18   - Unknown word (UUIDPK)       -- class RelatedWithUUIDPKModel(models.Model):
tests/admin_views/models.py:1072:19   - Unknown word (UUIDPK)       -- ParentWithUUIDPK, on_delete=models.SET
tests/admin_views/models.py:1098:7    - Unknown word (Héllo)        -- class Héllo(models.Model):
tests/admin_views/models.py:195:30    - Unknown word (Palin)      -- "leader__name": "Palin",
tests/admin_views/models.py:342:7     - Unknown word (Vodcast)    -- class Vodcast(Media):
tests/admin_views/models.py:501:5     - Unknown word (subslug)    -- subslug = models.SlugField(
tests/admin_views/models.py:506:82    - Unknown word (Žćžšđ)      -- title (with Unicode ŠĐĆŽćžšđ)"
tests/admin_views/models.py:509:68    - Unknown word (Žćžšđ)      -- content (with Unicode ŠĐĆŽćžšđ)"
tests/admin_views/models.py:514:65    - Unknown word (Žćžšđ)      -- date (with Unicode ŠĐĆŽćžšđ)",
tests/admin_views/models.py:595:5     - Unknown word (supervillain) -- supervillain = models.ForeignKey
tests/admin_views/models.py:736:24    - Unknown word (Pography)     -- ("thai", "Thai Pography"),
tests/admin_views/models.py:999:14    - Unknown word (Referer)      -- class ChildOfReferer(ParentWithFK):
tests/admin_views/test_actions.py:188:40    - Unknown word (unchangeableobject) -- reverse("admin:admin_views_unchangeableobject_changelist"), action
tests/admin_views/test_actions.py:312:40    - Unknown word (oldsubscriber)      -- reverse("admin:admin_views_oldsubscriber_changelist")
tests/admin_views/test_actions.py:318:59    - Unknown word (checkboxbox)        -- unexpected action toggle checkboxbox in response",
tests/admin_views/test_actions.py:327:40    - Unknown word (oldsubscriber)      -- reverse("admin:admin_views_oldsubscriber_changelist")
tests/admin_views/test_actions.py:38:23     - Unknown word (Mustermann) -- name="Max Mustermann", email="max@example
tests/admin_views/test_actions.py:443:53    - Unknown word (Tennant)            -- objects.create(name="David Tennant", age=45)
tests/admin_views/test_actions.py:447:29    - Unknown word (Tennant)            -- {"name": "David Tennant", "age": "46", IS_POPUP
tests/admin_views/test_actions.py:461:53    - Unknown word (Tennant)            -- objects.create(name="David Tennant", age=45)
tests/admin_views/test_actions.py:503:23    - Unknown word (Mustermann)         -- name="Max Mustermann", email="max@example
tests/admin_views/test_autocomplete_view.py:176:27    - Unknown word (Frida)      -- name="Frida Kahlo", gender=2, code
tests/admin_views/test_autocomplete_view.py:176:33    - Unknown word (Kahlo)      -- name="Frida Kahlo", gender=2, code="painter
tests/admin_views/test_autocomplete_view.py:183:64    - Unknown word (frida)      -- self.url, {"term": "frida", **opts})
tests/admin_views/test_nav_sidebar.py:106:54    - Unknown word (héllo)      -- sidebar:admin_views_héllo_changelist")
tests/admin_views/test_nav_sidebar.py:111:57    - Unknown word (héllo)      -- response, '<tr class="model-héllo current-model">')
tests/admin_views/test_nav_sidebar.py:114:46    - Unknown word (héllo)      -- row" id="admin_views-héllo">'
tests/admin_views/test_nav_sidebar.py:116:14    - Unknown word (Héllos)     -- "Héllos</a></th>",
tests/admin_views/test_nav_sidebar.py:22:28     - Unknown word (Héllo)      -- with_sidebar.register(Héllo)
tests/admin_views/test_nav_sidebar.py:26:16     - Unknown word (wihout)     -- path("test_wihout_sidebar/admin/", site
tests/admin_views/test_nav_sidebar.py:7:21      - Unknown word (Héllo)      -- from .models import Héllo
tests/admin_views/test_related_object_lookups.py:132:46    - Unknown word (camelcaserelatedmodel) -- reverse("admin:admin_views_camelcaserelatedmodel_add")
tests/admin_views/test_related_object_lookups.py:139:17    - Unknown word (Bergeron)              -- name = "Bergeron"
tests/admin_views/test_related_object_lookups.py:85:46     - Unknown word (camelcaserelatedmodel) -- reverse("admin:admin_views_camelcaserelatedmodel_add")
tests/admin_views/test_skip_link_to_content.py:117:25    - Unknown word (scrolleable) -- is_vertical_scrolleable = self.selenium.execute
tests/admin_views/test_skip_link_to_content.py:120:27    - Unknown word (scrolleable) -- is_horizontal_scrolleable = self.selenium.execute
tests/admin_views/test_skip_link_to_content.py:123:41    - Unknown word (scrolleable) -- assertTrue(is_vertical_scrolleable)
tests/admin_views/test_skip_link_to_content.py:124:44    - Unknown word (scrolleable) -- assertFalse(is_horizontal_scrolleable)
tests/admin_views/test_skip_link_to_content.py:99:42     - Unknown word (doesnt)     -- link_with_RTL_language_doesnt_create_horizontal_scrolling
tests/admin_views/tests.py:101:15    - Unknown word (UUIDPK)     -- ParentWithUUIDPK,
tests/admin_views/tests.py:1077:47   - Unknown word (labelledby)              -- changelist-filter" aria-labelledby="changelist-filter-header
tests/admin_views/tests.py:1117:47   - Unknown word (Choisir)                 -- assertNotContains(response, "Choisir une heure")
tests/admin_views/tests.py:1117:59   - Unknown word (heure)                   -- response, "Choisir une heure")
tests/admin_views/tests.py:1126:44   - Unknown word (Choisir)                 -- assertContains(response, "Choisir une heure")
tests/admin_views/tests.py:1126:56   - Unknown word (heure)                   -- response, "Choisir une heure")
tests/admin_views/tests.py:1176:63   - Unknown word (workhour)                -- reverse("admin:admin_views_workhour_changelist"))
tests/admin_views/tests.py:1180:43   - Unknown word (workhour)                -- reverse("admin:admin_views_workhour_changelist"), e1.pk
tests/admin_views/tests.py:1201:40   - Unknown word (notreferenced)           -- reverse("admin:admin_views_notreferenced_changelist"), {TO_FIELD
tests/admin_views/tests.py:1208:77   - Unknown word (rname)                   -- changelist"), {TO_FIELD_VAR: "rname"}
tests/admin_views/tests.py:120:16    - Unknown word (UUIDPK)     -- RelatedWithUUIDPKModel,
tests/admin_views/tests.py:1223:40   - Unknown word (referencedbyparent)      -- reverse("admin:admin_views_referencedbyparent_changelist"),
tests/admin_views/tests.py:1231:40   - Unknown word (referencedbyinline)      -- reverse("admin:admin_views_referencedbyinline_changelist"),
tests/admin_views/tests.py:1238:42   - Unknown word (referencedbygenrel)      -- reverse("admin:admin_views_referencedbygenrel_changelist")
tests/admin_views/tests.py:1270:32   - Unknown word (Palin)                   -- url = "%s?leader__name=Palin&leader__age=27" % reverse
tests/admin_views/tests.py:1280:44   - Unknown word (Palin)                   -- objects.create(name="Palin", age=27)
tests/admin_views/tests.py:1313:40   - Unknown word (undeletableobject)       -- reverse("admin:admin_views_undeletableobject_change", args=(instance
tests/admin_views/tests.py:1323:40   - Unknown word (readablepizza)           -- reverse("admin:admin_views_readablepizza_change", args=(pizza
tests/admin_views/tests.py:1327:50   - Unknown word (readablepizza)           -- reverse("admin:admin_views_readablepizza_changelist")
tests/admin_views/tests.py:1354:40   - Unknown word (unchangeableobject)      -- reverse("admin:admin_views_unchangeableobject_changelist")
tests/admin_views/tests.py:1361:22   - Unknown word (appindex)                -- def test_invalid_appindex_url(self):
tests/admin_views/tests.py:142:5     - Unknown word (Vodcast)    -- Vodcast,
tests/admin_views/tests.py:152:11    - Unknown word (ENCTYPE)    -- MULTIPART_ENCTYPE = 'enctype="multipart
tests/admin_views/tests.py:152:22    - Unknown word (enctype)    -- MULTIPART_ENCTYPE = 'enctype="multipart/form-data
tests/admin_views/tests.py:1629:55   - Unknown word (tabindex)                -- start" class="content" tabindex="-1">',
tests/admin_views/tests.py:1639:19   - Unknown word (describedby)             -- def test_aria_describedby_for_add_and_change_links
tests/admin_views/tests.py:1654:47   - Unknown word (describedby)             -- class="changelink" aria-describedby="{row_id}">Change</a
tests/admin_views/tests.py:1659:30   - Unknown word (addlink)                 -- f'class="addlink" aria-describedby="
tests/admin_views/tests.py:1659:44   - Unknown word (describedby)             -- class="addlink" aria-describedby="{row_id}">Add</a>'
tests/admin_views/tests.py:1772:23   - Unknown word (extrabody)               -- def test_extended_extrabody(self):
tests/admin_views/tests.py:1774:40   - Unknown word (extrabody)               -- assertContains(response, "extrabody_check\n</body>")
tests/admin_views/tests.py:1857:44   - Unknown word (foogroup)                -- objects.create(name="foogroup")
tests/admin_views/tests.py:1866:44   - Unknown word (foogroup)                -- objects.create(name="foogroup")
tests/admin_views/tests.py:1942:35   - Unknown word (behaviour)               -- this would be the usual behaviour
tests/admin_views/tests.py:1944:34   - Unknown word (behaviour)               -- this is the overridden behaviour
tests/admin_views/tests.py:1967:44   - Unknown word (prepopulate)             -- assertContains(response, "prepopulate.js")
tests/admin_views/tests.py:1974:44   - Unknown word (prepopulate)            -- assertContains(response, "prepopulate.js")
tests/admin_views/tests.py:1986:53   - Unknown word (Mauchly)                -- objects.create(name="John Mauchly", gender=1, alive=True
tests/admin_views/tests.py:1993:24   - Unknown word (saveasnew)              -- post_data = {"_saveasnew": "", "name": "John
tests/admin_views/tests.py:2009:24   - Unknown word (saveasnew)              -- post_data = {"_saveasnew": "", "name": "John
tests/admin_views/tests.py:2098:30   - Unknown word (customform)             -- "username": "customform",
tests/admin_views/tests.py:2280:26   - Unknown word (notsecret)              -- "password": "notsecret",
tests/admin_views/tests.py:2342:35   - Unknown word (jondoe)                 -- user = User(username="jondoe", password="secret"
tests/admin_views/tests.py:244:36    - Unknown word (Palin)      -- objects.create(name="Palin", age=27)
tests/admin_views/tests.py:2502:27   - Unknown word (ikke)                   -- "title": "Døm ikke",
tests/admin_views/tests.py:2549:51   - Unknown word (ikke)                   -- success">The article “Døm ikke” was added successfully
tests/admin_views/tests.py:2557:30   - Unknown word (rsaquo)                 -- change_list_link = '&rsaquo; <a href="%s">Articles
tests/admin_views/tests.py:255:37    - Unknown word (Norske)     -- article_set-0-title": "Norske bostaver æøå skaper
tests/admin_views/tests.py:255:44    - Unknown word (bostaver)   -- set-0-title": "Norske bostaver æøå skaper problemer
tests/admin_views/tests.py:255:57    - Unknown word (skaper)     -- Norske bostaver æøå skaper problemer",
tests/admin_views/tests.py:255:64    - Unknown word (problemer)  -- bostaver æøå skaper problemer",
tests/admin_views/tests.py:2582:57   - Unknown word (ikke)                   -- log.object_repr, "Døm ikke")
tests/admin_views/tests.py:2636:23   - Unknown word (Ikke)                   -- "title": "Ikke fordømt",
tests/admin_views/tests.py:2636:28   - Unknown word (fordømt)                -- "title": "Ikke fordømt",
tests/admin_views/tests.py:2672:70   - Unknown word (closelink)              -- views/article/" class="closelink">Close'
tests/admin_views/tests.py:2732:78   - Unknown word (mult)                   -- create(id=3, name="odd id mult 3")
tests/admin_views/tests.py:2733:79   - Unknown word (mult)                   -- id=6, name="even id mult 3")
tests/admin_views/tests.py:2735:32   - Unknown word (rowlevelchangepermissionmodel) -- "admin:admin_views_rowlevelchangepermissionmodel_change", args=(r1.pk
tests/admin_views/tests.py:2738:32   - Unknown word (rowlevelchangepermissionmodel) -- "admin:admin_views_rowlevelchangepermissionmodel_change", args=(r2.pk
tests/admin_views/tests.py:2741:32   - Unknown word (rowlevelchangepermissionmodel) -- "admin:admin_views_rowlevelchangepermissionmodel_change", args=(r3.pk
tests/admin_views/tests.py:2744:32   - Unknown word (rowlevelchangepermissionmodel) -- "admin:admin_views_rowlevelchangepermissionmodel_change", args=(r6.pk
tests/admin_views/tests.py:2776:29   - Unknown word (mult)                          -- "odd id mult 3",
tests/admin_views/tests.py:2824:71   - Unknown word (closelink)                     -- views/article/" class="closelink">Close'
tests/admin_views/tests.py:2835:23   - Unknown word (Ikke)                          -- "title": "Ikke fordømt",
tests/admin_views/tests.py:2835:28   - Unknown word (fordømt)                       -- "title": "Ikke fordømt",
tests/admin_views/tests.py:2897:24   - Unknown word (reshows)                       -- # Invalid POST reshows inlines.
tests/admin_views/tests.py:2955:24   - Unknown word (reshows)                       -- # Invalid POST reshows inlines.
tests/admin_views/tests.py:3054:49   - Unknown word (readonlypizza)                 -- reverse("admin:admin_views_readonlypizza_delete", args=(pizza
tests/admin_views/tests.py:3057:52   - Unknown word (readonlypizza)                 -- response, "admin_views/readonlypizza/%s/" % pizza.pk)
tests/admin_views/tests.py:3062:46   - Unknown word (readonlypizza)                 -- reverse("admin:admin_views_readonlypizza_changelist")
tests/admin_views/tests.py:3115:40   - Unknown word (rowlevelchangepermissionmodel) -- "admin:admin_views_rowlevelchangepermissionmodel_history",
tests/admin_views/tests.py:336:16    - Unknown word (saveasnew)  -- {"_saveasnew": "1"},  # "Save as
tests/admin_views/tests.py:3582:48   - Unknown word (supervillain)                  -- super floating castle!", supervillain=cls.sv1
tests/admin_views/tests.py:3614:40   - Unknown word (cyclicone)                     -- reverse("admin:admin_views_cyclicone_change", args=(self
tests/admin_views/tests.py:3617:40   - Unknown word (cyclictwo)                     -- reverse("admin:admin_views_cyclictwo_change", args=(self
tests/admin_views/tests.py:3620:40   - Unknown word (cyclicone)                     -- reverse("admin:admin_views_cyclicone_delete", args=(self
tests/admin_views/tests.py:3760:42   - Unknown word (supervillain)                  -- reverse("admin:admin_views_supervillain_change", args=(self
tests/admin_views/tests.py:3770:40   - Unknown word (supervillain)                  -- reverse("admin:admin_views_supervillain_delete", args=(self
tests/admin_views/tests.py:3781:66   - Unknown word (hott)                          -- content_object=plot, name="hott")
tests/admin_views/tests.py:3782:55   - Unknown word (hott)                          -- Funky tag: <a href="%s">hott' % reverse(
tests/admin_views/tests.py:3783:32   - Unknown word (funkytag)                      -- "admin:admin_views_funkytag_change", args=(tag.id
tests/admin_views/tests.py:3796:50   - Unknown word (djangoproject)                 -- objects.create(name="djangoproject")
tests/admin_views/tests.py:3798:46   - Unknown word (funkytag)                      -- reverse("admin:admin_views_funkytag_change", args=(tag.id
tests/admin_views/tests.py:3831:64   - Unknown word (hott)                          -- object=self.pl3, name="hott")
tests/admin_views/tests.py:3832:63   - Unknown word (funkytag)                      -- reverse("admin:admin_views_funkytag_changelist"))
tests/admin_views/tests.py:3935:14   - Unknown word (recentactions)                 -- def test_recentactions_link(self):
tests/admin_views/tests.py:3947:14   - Unknown word (recentactions)                 -- def test_recentactions_description(self):
tests/admin_views/tests.py:3955:14   - Unknown word (deleteconfirmation)            -- def test_deleteconfirmation_link(self):
tests/admin_views/tests.py:4030:40   - Unknown word (viewsitelink)                  -- contain = '/%s/" class="viewsitelink">' % model.pk
tests/admin_views/tests.py:4048:44   - Unknown word (historylink)                   -- <a href="%s" class="historylink"' % escape(expected
tests/admin_views/tests.py:4067:30   - Unknown word (Fhistory)                      -- self.assertIn("/123_2Fhistory/", response.headers
tests/admin_views/tests.py:4105:44   - Unknown word (Lærdommer)                     -- objects.create(name="Lærdommer")
tests/admin_views/tests.py:4106:56   - Unknown word (Lærdommer)                     -- create(name="<Promo for Lærdommer>", book=cls.b1)
tests/admin_views/tests.py:4108:20   - Unknown word (Norske)                        -- title="Norske bostaver æøå skaper
tests/admin_views/tests.py:4108:27   - Unknown word (bostaver)                      -- title="Norske bostaver æøå skaper problemer
tests/admin_views/tests.py:4108:40   - Unknown word (skaper)                        -- Norske bostaver æøå skaper problemer",
tests/admin_views/tests.py:4108:47   - Unknown word (problemer)                     -- bostaver æøå skaper problemer",
tests/admin_views/tests.py:4109:25   - Unknown word (Svært)                         -- content="<p>Svært frustrerende med UnicodeDecod
tests/admin_views/tests.py:4109:31   - Unknown word (frustrerende)                  -- content="<p>Svært frustrerende med UnicodeDecodeErro
tests/admin_views/tests.py:4109:61   - Unknown word (Erro)                          -- frustrerende med UnicodeDecodeErro</p>",
tests/admin_views/tests.py:4113:20   - Unknown word (Kjærlighet)                    -- title="Kjærlighet",
tests/admin_views/tests.py:4114:28   - Unknown word (kjærligheten)                  -- content="<p>La kjærligheten til de lidende seire
tests/admin_views/tests.py:4114:48   - Unknown word (lidende)                       -- kjærligheten til de lidende seire.</p>",
tests/admin_views/tests.py:4114:56   - Unknown word (seire)                         -- rligheten til de lidende seire.</p>",
tests/admin_views/tests.py:4118:20   - Unknown word (Kjærlighet)                    -- title="Kjærlighet", content="<p>Noe innhold
tests/admin_views/tests.py:4118:49   - Unknown word (innhold)                       -- rlighet", content="<p>Noe innhold</p>", book=cls.b1
tests/admin_views/tests.py:4121:44   - Unknown word (Norske)                        -- chap1, xtra="<Xtra(1) Norske bostaver æøå skaper
tests/admin_views/tests.py:4121:51   - Unknown word (bostaver)                     -- xtra="<Xtra(1) Norske bostaver æøå skaper problemer
tests/admin_views/tests.py:4121:64   - Unknown word (skaper)                       -- Norske bostaver æøå skaper problemer>"
tests/admin_views/tests.py:4121:71   - Unknown word (problemer)                    -- bostaver æøå skaper problemer>"
tests/admin_views/tests.py:4124:44   - Unknown word (Kjærlighet)                   -- chap2, xtra="<Xtra(1) Kjærlighet>"
tests/admin_views/tests.py:4127:44   - Unknown word (Kjærlighet)                   -- chap3, xtra="<Xtra(1) Kjærlighet>"
tests/admin_views/tests.py:4130:44   - Unknown word (Norske)                       -- chap1, xtra="<Xtra(2) Norske bostaver æøå skaper
tests/admin_views/tests.py:4130:51   - Unknown word (bostaver)                     -- xtra="<Xtra(2) Norske bostaver æøå skaper problemer
tests/admin_views/tests.py:4130:64   - Unknown word (skaper)                       -- Norske bostaver æøå skaper problemer>"
tests/admin_views/tests.py:4130:71   - Unknown word (problemer)                    -- bostaver æøå skaper problemer>"
tests/admin_views/tests.py:4133:44   - Unknown word (Kjærlighet)                   -- chap2, xtra="<Xtra(2) Kjærlighet>"
tests/admin_views/tests.py:4147:27   - Unknown word (lærdommer)                    -- "name": "Test lærdommer",
tests/admin_views/tests.py:4153:37   - Unknown word (Norske)                       -- chapter_set-0-title": "Norske bostaver æøå skaper
tests/admin_views/tests.py:4153:44   - Unknown word (bostaver)                     -- set-0-title": "Norske bostaver æøå skaper problemer
tests/admin_views/tests.py:4153:57   - Unknown word (skaper)                       -- Norske bostaver æøå skaper problemer",
tests/admin_views/tests.py:4153:64   - Unknown word (problemer)                    -- bostaver æøå skaper problemer",
tests/admin_views/tests.py:4155:27   - Unknown word (Svært)                        -- "&lt;p&gt;Svært frustrerende med UnicodeDecod
tests/admin_views/tests.py:4155:33   - Unknown word (frustrerende)                 -- "&lt;p&gt;Svært frustrerende med UnicodeDecodeError
tests/admin_views/tests.py:4160:30   - Unknown word (kjærligheten)                 -- "&lt;p&gt;La kjærligheten til de lidende seire
tests/admin_views/tests.py:4160:50   - Unknown word (lidende)                      -- kjærligheten til de lidende seire.&lt;/p&gt;"
tests/admin_views/tests.py:4160:58   - Unknown word (seire)                        -- rligheten til de lidende seire.&lt;/p&gt;"
tests/admin_views/tests.py:4219:53   - Unknown word (Mauchly)                      -- objects.create(name="John Mauchly", gender=1, alive=True
tests/admin_views/tests.py:4221:58   - Unknown word (Rossum)                       -- create(name="Guido van Rossum", gender=1, alive=True
tests/admin_views/tests.py:4234:9    - Unknown word (Vodcast)                      -- Vodcast.objects.create(name
tests/admin_views/tests.py:4235:63   - Unknown word (vodcast)                      -- reverse("admin:admin_views_vodcast_changelist"))
tests/admin_views/tests.py:4294:53   - Unknown word (Mauchly)                      -- objects.get(name="John Mauchly").alive, False)
tests/admin_views/tests.py:4314:53   - Unknown word (Mauchly)                      -- objects.get(name="John Mauchly").alive, True)
tests/admin_views/tests.py:4329:53   - Unknown word (Mauchly)                      -- objects.get(name="John Mauchly").alive, False)
tests/admin_views/tests.py:4366:40   - Unknown word (fooddelivery)                 -- reverse("admin:admin_views_fooddelivery_changelist"), data
tests/admin_views/tests.py:437:40    - Unknown word (supervillain) -- reverse("admin:admin_views_supervillain_change", args=("abc
tests/admin_views/tests.py:4397:40   - Unknown word (fooddelivery)                 -- reverse("admin:admin_views_fooddelivery_changelist"), data
tests/admin_views/tests.py:4447:68   - Unknown word (Clegg)                        -- id=1, name="Frederick Clegg")
tests/admin_views/tests.py:4495:40   - Unknown word (unorderedobject)              -- reverse("admin:admin_views_unorderedobject_changelist")
tests/admin_views/tests.py:4501:40   - Unknown word (unorderedobject)              -- reverse("admin:admin_views_unorderedobject_changelist") + "?p=
tests/admin_views/tests.py:4571:75   - Unknown word (Djangoland)                   -- Once upon a time in Djangoland..."
tests/admin_views/tests.py:4599:42   - Unknown word (Djangoland)                   -- Once upon a time in Djangoland...",
tests/admin_views/tests.py:4605:44   - Unknown word (otherstory)                   -- reverse("admin:admin_views_otherstory_change", args=(story
tests/admin_views/tests.py:4606:44   - Unknown word (otherstory)                   -- reverse("admin:admin_views_otherstory_change", args=(story
tests/admin_views/tests.py:4607:63   - Unknown word (otherstory)                  -- reverse("admin:admin_views_otherstory_changelist"))
tests/admin_views/tests.py:4663:58   - Unknown word (Rossum)                      -- create(name="Guido van Rossum", gender=1, alive=True
tests/admin_views/tests.py:4665:44   - Unknown word (Hara)                        -- create(name='John O"Hara', gender=1)
tests/admin_views/tests.py:4726:66   - Unknown word (uido)                        -- person_changelist") + "?q=uido"
tests/admin_views/tests.py:4737:40   - Unknown word (pluggablesearchperson)       -- reverse("admin:admin_views_pluggablesearchperson_changelist") + "?q=Bob
tests/admin_views/tests.py:4744:40   - Unknown word (pluggablesearchperson)       -- reverse("admin:admin_views_pluggablesearchperson_changelist") + "?q=
tests/admin_views/tests.py:4797:25   - Unknown word (Hara)                        -- ("'John O\\'Hara'", 1),
tests/admin_views/tests.py:4798:23   - Unknown word (Hara)                        -- ('"John O"Hara"', 0),
tests/admin_views/tests.py:4799:25   - Unknown word (Hara)                        -- ('"John O\\"Hara"', 1),
tests/admin_views/tests.py:486:19    - Unknown word (saveasnew)    -- "_saveasnew": "Save+as+new",
tests/admin_views/tests.py:4961:63   - Unknown word (emptymodel)                  -- reverse("admin:admin_views_emptymodel_changelist"))
tests/admin_views/tests.py:4998:46   - Unknown word (emptymodel)                  -- reverse("admin:admin_views_emptymodel_change", args=(i,))
tests/admin_views/tests.py:506:19    - Unknown word (saveasnew)    -- "_saveasnew": "Save+as+new",
tests/admin_views/tests.py:5227:40   - Unknown word (filteredmanager)             -- reverse("admin:admin_views_filteredmanager_changelist")
tests/admin_views/tests.py:5233:44   - Unknown word (filteredmanager)             -- reverse("admin:admin_views_filteredmanager_history", args=(1,)
tests/admin_views/tests.py:5239:44   - Unknown word (filteredmanager)             -- reverse("admin:admin_views_filteredmanager_history", args=(2,)
tests/admin_views/tests.py:5266:33   - Unknown word (enctype)                     -- test_form_has_multipart_enctype(self):
tests/admin_views/tests.py:5271:49   - Unknown word (ENCTYPE)                     -- response, MULTIPART_ENCTYPE)
tests/admin_views/tests.py:5358:14   - Unknown word (fancydoodad)                 -- "fancydoodad_set-TOTAL_FORMS": "
tests/admin_views/tests.py:5359:14   - Unknown word (fancydoodad)                 -- "fancydoodad_set-INITIAL_FORMS":
tests/admin_views/tests.py:5360:14   - Unknown word (fancydoodad)                 -- "fancydoodad_set-MAX_NUM_FORMS":
tests/admin_views/tests.py:5361:14   - Unknown word (fancydoodad)                 -- "fancydoodad_set-0-doodad_ptr":
tests/admin_views/tests.py:5362:14   - Unknown word (fancydoodad)                 -- "fancydoodad_set-0-owner": "1",
tests/admin_views/tests.py:5406:39   - Unknown word (enctype)                     -- or image fields, no enctype on the forms
tests/admin_views/tests.py:5408:52   - Unknown word (ENCTYPE)                     -- response, MULTIPART_ENCTYPE)
tests/admin_views/tests.py:5582:36   - Unknown word (Clegg)                       -- "name": "Frederick Clegg",
tests/admin_views/tests.py:5727:40   - Unknown word (prepopulatedsubpost)         -- id&quot;: &quot;#id_prepopulatedsubpost_set-0-subslug&quot;
tests/admin_views/tests.py:5727:66   - Unknown word (subslug)                     -- prepopulatedsubpost_set-0-subslug&quot;",
tests/admin_views/tests.py:5741:40   - Unknown word (prepopulatedsubpost)         -- id&quot;: &quot;#id_prepopulatedsubpost_set-0-subslug&quot;
tests/admin_views/tests.py:5741:66   - Unknown word (subslug)                     -- prepopulatedsubpost_set-0-subslug&quot;",
tests/admin_views/tests.py:5751:40   - Unknown word (prepopulatedpostlargeslug)   -- reverse("admin:admin_views_prepopulatedpostlargeslug_add")
tests/admin_views/tests.py:5820:63   - Unknown word (mainprepopulated)            -- reverse("admin:admin_views_mainprepopulated_add")
tests/admin_views/tests.py:5830:38   - Unknown word (awεšomeııı)                  -- the mAin nÀMë and it's awεšomeıııİ"
tests/admin_views/tests.py:5835:56   - Unknown word (awesomeiiii)                 -- the-main-name-and-its-awesomeiiii-2012-02-18")
tests/admin_views/tests.py:5836:67   - Unknown word (awesomeiiii)                 -- the-main-name-and-its-awesomeiiii")
tests/admin_views/tests.py:5844:24   - Unknown word (relatedprepopulated)         -- By.ID, "id_relatedprepopulated_set-0-pubdate"
tests/admin_views/tests.py:5847:24   - Unknown word (relatedprepopulated)         -- By.ID, "id_relatedprepopulated_set-0-status"
tests/admin_views/tests.py:5850:33   - Unknown word (relatedprepopulated)         -- self.select_option("#id_relatedprepopulated_set-0-status", "option
tests/admin_views/tests.py:5852:24   - Unknown word (relatedprepopulated)         -- By.ID, "id_relatedprepopulated_set-0-name"
tests/admin_views/tests.py:5853:36   - Unknown word (Çkeð)                        -- keys(" here is a sŤāÇkeð inline !  ")
tests/admin_views/tests.py:5855:24   - Unknown word (relatedprepopulated)        -- By.ID, "id_relatedprepopulated_set-0-slug1"
tests/admin_views/tests.py:5889:28   - Unknown word (anöther)                    -- " now you haVe anöther sŤāÇkeð  inline with
tests/admin_views/tests.py:5889:41   - Unknown word (Çkeð)                       -- you haVe anöther   sŤāÇkeð inline with a very
tests/admin_views/tests.py:5890:14   - Unknown word (loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooog) -- "loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooog "
tests/admin_views/tests.py:5918:39   - Unknown word (Ãbűla)                                                                  -- keys("And now, with a tÃbűlaŘ inline !!!")
tests/admin_views/tests.py:5949:24   - Unknown word (Ãbűla)                                                                  -- ).send_keys(r'tÃbűlaŘ inline with ignored
tests/admin_views/tests.py:5976:18   - Unknown word (Çkeð)                                                                   -- " sŤāÇkeð inline !  "
tests/admin_views/tests.py:5997:28   - Unknown word (anöther)                                                                -- " now you haVe anöther sŤāÇkeð  inline with
tests/admin_views/tests.py:5997:41   - Unknown word (Çkeð)                                                                   -- you haVe anöther   sŤāÇkeð inline with a very
tests/admin_views/tests.py:5997:66   - Unknown word (loooong)                                                                -- inline with a very loooong "
tests/admin_views/tests.py:6013:43   - Unknown word (awεšomeııı)                                                             -- the mAin nÀMë and it's awεšomeıııİ",
tests/admin_views/tests.py:6016:42   - Unknown word (awesomeiiii)                                                            -- the-main-name-and-its-awesomeiiii-2012-02-18",
tests/admin_views/tests.py:6017:53   - Unknown word (awesomeiiii)                                                            -- the-main-name-and-its-awesomeiiii",
tests/admin_views/tests.py:6018:29   - Unknown word (nàmë)                                                                   -- slug3="the-main-nàmë-and-its-awεšomeıııi
tests/admin_views/tests.py:6018:42   - Unknown word (awεšomeıııi)                                                            -- the-main-nàmë-and-its-awεšomeıııi",
tests/admin_views/tests.py:6022:33   - Unknown word (Çkeð)                                                                   -- name=" here is a sŤāÇkeð inline !  ",
tests/admin_views/tests.py:6031:32   - Unknown word (anöther)                                                                -- " now you haVe anöther sŤāÇkeð  inline with
tests/admin_views/tests.py:6032:18   - Unknown word (loooooooooooooooooo)                                                    -- "loooooooooooooooooo"
tests/admin_views/tests.py:6040:36   - Unknown word (Ãbűla)                                                                 -- name="And now, with a tÃbűlaŘ inline !!!",
tests/admin_views/tests.py:6047:21   - Unknown word (Ãbűla)                                                                 -- name=r'tÃbűlaŘ inline with ignored
tests/admin_views/tests.py:6056:13   - Unknown word (prepopulation)                                                         -- The prepopulation works for existing objects
tests/admin_views/tests.py:6074:32   - Unknown word (mainprepopulated)                                                      -- "admin:admin_views_mainprepopulated_change", args=(item
tests/admin_views/tests.py:6120:14   - Unknown word (selectbox)                                                             -- def test_selectbox_height_collapsible_fieldset
tests/admin_views/tests.py:6145:31   - Unknown word (selectbox)                                                             -- self.take_screenshot("selectbox-collapsible")
tests/admin_views/tests.py:6148:14   - Unknown word (selectbox)                                                             -- def test_selectbox_height_not_collapsible
tests/admin_views/tests.py:6176:31   - Unknown word (selectbox)                                                             -- self.take_screenshot("selectbox-non-collapsible")
tests/admin_views/tests.py:6179:14   - Unknown word (selectbox)                                                             -- def test_selectbox_selected_rows(self)
tests/admin_views/tests.py:6378:28   - Unknown word (UUIDPK)                                                                -- parent = ParentWithUUIDPK.objects.create(title
tests/admin_views/tests.py:6379:42   - Unknown word (UUIDPK)                                                                -- parent = RelatedWithUUIDPKModel.objects.create
tests/admin_views/tests.py:6384:32   - Unknown word (relatedwithuuidpkmodel)                                                -- "admin:admin_views_relatedwithuuidpkmodel_change",
tests/admin_views/tests.py:6409:42   - Unknown word (relatedwithuuidpkmodel)                                                -- reverse("admin:admin_views_relatedwithuuidpkmodel_add")
tests/admin_views/tests.py:6418:33   - Unknown word (UUIDPK)                                                                -- uuid_id = str(ParentWithUUIDPK.objects.first().id)
tests/admin_views/tests.py:6433:32   - Unknown word (relatedwithuuidpkmodel)                                               -- "admin:admin_views_relatedwithuuidpkmodel_change",
tests/admin_views/tests.py:6459:32   - Unknown word (relatedwithuuidpkmodel)                                               -- "admin:admin_views_relatedwithuuidpkmodel_change",
tests/admin_views/tests.py:6481:32   - Unknown word (relatedwithuuidpkmodel)                                               -- "admin:admin_views_relatedwithuuidpkmodel_changelist",
tests/admin_views/tests.py:6513:18   - Unknown word (Segoe)                                                                -- "Segoe UI",
tests/admin_views/tests.py:6515:18   - Unknown word (Roboto)                                                               -- "Roboto",
tests/admin_views/tests.py:6516:28   - Unknown word (Neue)                                                                 -- "Helvetica Neue",
tests/admin_views/tests.py:6520:18   - Unknown word (Segoe)                                                                -- "Segoe UI Emoji",
tests/admin_views/tests.py:6521:18   - Unknown word (Segoe)                                                                -- "Segoe UI Symbol",
tests/admin_views/tests.py:6522:18   - Unknown word (Noto)                                                                 -- "Noto Color Emoji",
tests/admin_views/tests.py:6529:47   - Unknown word (Rossum)                                                               -- create(name="Guido van Rossum", gender=1, alive=True
tests/admin_views/tests.py:6905:37   - Unknown word (Žćžšđ)                                                                -- title (with Unicode ŠĐĆŽćžšđ)</div></div>",
tests/admin_views/tests.py:6911:39   - Unknown word (Žćžšđ)                                                                -- content (with Unicode ŠĐĆŽćžšđ)</div></div>",
tests/admin_views/tests.py:6916:82   - Unknown word (Žćžšđ)                                                                -- date (with Unicode ŠĐĆŽćžšđ)'
tests/admin_views/tests.py:7013:44   - Unknown word (readonlyrelatedfield)                                                 -- admin_site}:admin_views_readonlyrelatedfield_change", args=(obj.pk
tests/admin_views/tests.py:7065:23   - Unknown word (onetoone)                                                             -- def test_readonly_onetoone_backwards_ref(self)
tests/admin_views/tests.py:7074:40   - Unknown word (plotproxy)                                                           -- reverse("admin:admin_views_plotproxy_change", args=(pl.pk
tests/admin_views/tests.py:7085:40   - Unknown word (plotproxy)                                                           -- reverse("admin:admin_views_plotproxy_change", args=(pl.pk
tests/admin_views/tests.py:7103:40   - Unknown word (fieldoverridepost)                                                   -- reverse("admin:admin_views_fieldoverridepost_change", args=(p.pk
tests/admin_views/tests.py:7116:69   - Unknown word (Žćžšđ)                                                               -- date (with Unicode ŠĐĆŽćžšđ)"
tests/admin_views/tests.py:7151:9    - Unknown word (threepwood)                                                          -- threepwood = Character.objects
tests/admin_views/tests.py:7152:23   - Unknown word (threepwood)                                                          -- username="threepwood",
tests/admin_views/tests.py:7159:63   - Unknown word (stumpjoke)                                                           -- reverse("admin:admin_views_stumpjoke_add"))
tests/admin_views/tests.py:7161:39   - Unknown word (threepwood)                                                          -- assertContains(response, threepwood.username, count=2)
tests/admin_views/tests.py:7178:44   - Unknown word (Palin)                                                               -- objects.create(name="Palin", age=27)
tests/admin_views/tests.py:7204:36   - Unknown word (Palin)                                                               -- objects.create(name="Palin", age=27)
tests/admin_views/tests.py:7205:36   - Unknown word (Kilbraken)                                                           -- objects.create(name="Kilbraken", age=50, title="Judge
tests/admin_views/tests.py:7221:41   - Unknown word (Kilbraken)                                                           -- assertContains(response2, "Kilbraken")
tests/admin_views/tests.py:7227:36   - Unknown word (Kilbraken)                                                           -- objects.create(name="Kilbraken", age=50, title="Judge
tests/admin_views/tests.py:7243:44   - Unknown word (Kilbraken)                                                           -- assertNotContains(response2, "Kilbraken")
tests/admin_views/tests.py:7296:58   - Unknown word (Rossum)                                                              -- create(name="Guido van Rossum", gender=1, alive=True
tests/admin_views/tests.py:7505:26   - Unknown word (newgroup)                                                           -- "name": "newgroup",
tests/admin_views/tests.py:795:44    - Unknown word (complexsortedperson) -- reverse("admin:admin_views_complexsortedperson_change", args=(p1.pk
tests/admin_views/tests.py:796:44    - Unknown word (complexsortedperson) -- reverse("admin:admin_views_complexsortedperson_change", args=(p2.pk
tests/admin_views/tests.py:799:40    - Unknown word (complexsortedperson) -- reverse("admin:admin_views_complexsortedperson_changelist"), {}
tests/admin_views/tests.py:8073:40   - Unknown word (usermessenger)                                                      -- reverse("admin:admin_views_usermessenger_changelist"),
tests/admin_views/tests.py:8105:40   - Unknown word (usermessenger)                                                      -- reverse("admin:admin_views_usermessenger_changelist"),
tests/admin_views/tests.py:822:34    - Unknown word (adminorderedfield)   -- AdminOrderedField, "adminorderedfield"),
tests/admin_views/tests.py:823:40    - Unknown word (adminorderedmodelmethod) -- AdminOrderedModelMethod, "adminorderedmodelmethod"),
tests/admin_views/tests.py:824:40    - Unknown word (adminorderedadminmethod) -- AdminOrderedAdminMethod, "adminorderedadminmethod"),
tests/admin_views/tests.py:825:37    - Unknown word (adminorderedcallable)    -- AdminOrderedCallable, "adminorderedcallable"),
tests/admin_views/tests.py:8289:37   - Unknown word (historylink)                                                        -- href="(.*?)" class="historylink">History</a>', response
tests/admin_views/tests.py:8335:37   - Unknown word (closelink)                                                          -- href="(.*?)" class="closelink">Close</a>', response
tests/admin_views/tests.py:8434:63   - Unknown word (emptymodelvisible)                                                  -- reverse("admin:admin_views_emptymodelvisible_add"))
tests/admin_views/tests.py:8440:63   - Unknown word (emptymodelhidden)                                                   -- reverse("admin:admin_views_emptymodelhidden_add"))
tests/admin_views/tests.py:8446:63   - Unknown word (emptymodelmixin)                                                    -- reverse("admin:admin_views_emptymodelmixin_add"))
tests/admin_views/tests.py:8488:79   - Unknown word (Rossi)                                                              -- name="Mario", surname="Rossi")
tests/admin_views/tests.py:8490:54   - Unknown word (Bianchi)                                                            -- "Antonio", surname="Bianchi"
tests/admin_views/tests.py:8518:40   - Unknown word (parentwithdependentchildren)                                        -- reverse("admin:admin_views_parentwithdependentchildren_add"), post_data
tests/admin_views/tests.py:852:44    - Unknown word (Karnataka)               -- objects.create(name="Karnataka")
tests/admin_views/tests.py:8545:9    - Unknown word (pwdc)                                                               -- pwdc = ParentWithDependentChildren
tests/admin_views/tests.py:8557:48   - Unknown word (pwdc)                                                               -- ndentchild_set-0-parent": str(pwdc.id),
tests/admin_views/tests.py:8562:36   - Unknown word (parentwithdependentchildren)                                        -- "admin:admin_views_parentwithdependentchildren_change", args=(pwdc
tests/admin_views/tests.py:8562:79   - Unknown word (pwdc)                                                               -- endentchildren_change", args=(pwdc.id,)
tests/admin_views/tests.py:865:9     - Unknown word (Vodcast)                 -- Vodcast.objects.create(media
tests/admin_views/tests.py:866:63    - Unknown word (vodcast)                 -- reverse("admin:admin_views_vodcast_changelist"), {})
tests/admin_views/tests.py:8677:79   - Unknown word (Rossi)                                                              -- name="Mario", surname="Rossi")
tests/admin_views/tests.py:8679:54   - Unknown word (Bianchi)                                                           -- "Antonio", surname="Bianchi"
tests/admin_views/tests.py:8738:40   - Unknown word (explicitlyprovidedpk)                                              -- reverse("admin:admin_views_explicitlyprovidedpk_add"), post_data
tests/admin_views/tests.py:8744:40   - Unknown word (explicitlyprovidedpk)                                              -- reverse("admin:admin_views_explicitlyprovidedpk_change", args=(1,))
tests/admin_views/tests.py:8752:40   - Unknown word (implicitlygeneratedpk)                                             -- reverse("admin:admin_views_implicitlygeneratedpk_add"), post_data
tests/admin_views/tests.py:8758:40   - Unknown word (implicitlygeneratedpk)                                             -- reverse("admin:admin_views_implicitlygeneratedpk_change", args=(1,))
tests/admin_views/tests.py:8767:18   - Unknown word (behaviour)                                                         -- Verifies the behaviour of the admin catch-all
tests/admin_views/tests.py:8769:7    - Unknown word (Anonynous)                                                         -- * Anonynous/non-staff users are
tests/admin_views/tests.py:882:47    - Unknown word (labelledby)              -- changelist-filter" aria-labelledby="changelist-filter-header
tests/admin_views/tests.py:8830:14   - Unknown word (unkown)                                                            -- def test_unkown_url_without_trailing
tests/admin_views/tests.py:898:45    - Unknown word (viewlink)                -- facets=True" class="viewlink">Show counts</a>',
tests/admin_views/tests.py:904:33    - Unknown word (hidelink)                -- '<a href="?" class="hidelink">Hide counts</a>',
tests/admin_views/tests.py:908:63    - Unknown word (workhour)                -- reverse("admin:admin_views_workhour_changelist"))
tests/admin_views/tests.py:920:63    - Unknown word (fooddelivery)            -- reverse("admin:admin_views_fooddelivery_changelist"))
tests/admin_views/tests.py:933:53    - Unknown word (chapterxtra)             -- reverse("admin:admin_views_chapterxtra1_changelist")
tests/admin_views/tests.py:937:47    - Unknown word (labelledby)              -- changelist-filter" aria-labelledby="changelist-filter-header
tests/admin_views/tests.py:993:54    - Unknown word (notarealfield)           -- get(changelist_url, {"notarealfield": "5"})
tests/admin_views/tests.py:997:54    - Unknown word (notarealfield)           -- get(changelist_url, {"notarealfield__whatever": "5"})
tests/admin_widgets/models.py:51:40     - Unknown word (escapeme)   -- choices_to={"name": '"&><escapeme'},
tests/admin_widgets/tests.py:1024:56   - Unknown word (clocklink)            -- find_element(By.ID, "clocklink0")
tests/admin_widgets/tests.py:1035:45   - Unknown word (timelist)             -- XPATH, "//ul[@class='timelist']/li/a"
tests/admin_widgets/tests.py:1073:56   - Unknown word (calendarin)           -- find_element(By.ID, "calendarin0")
tests/admin_widgets/tests.py:1100:56   - Unknown word (calendarin)           -- find_element(By.ID, "calendarin0")
tests/admin_widgets/tests.py:1126:56   - Unknown word (calendarin)           -- find_element(By.ID, "calendarin0")
tests/admin_widgets/tests.py:1157:52   - Unknown word (djangojs)             -- gettext.translation("djangojs", path, [language_code
tests/admin_widgets/tests.py:1176:42   - Unknown word (calendarin)           -- self.wait_for_text("#calendarin0 caption", expected
tests/admin_widgets/tests.py:1197:21   - Unknown word (neighbouring)         -- # If we are neighbouring a DST, we add an hour
tests/admin_widgets/tests.py:1213:49   - Unknown word (datetimeshortcuts)    -- ".field-birthdate .datetimeshortcuts"
tests/admin_widgets/tests.py:1224:61   - Unknown word (timezonewarning)      -- umElements(".field-birthdate .timezonewarning", 1)
tests/admin_widgets/tests.py:1901:59   - Unknown word (brokenimg)            -- tests_files_folder}/brokenimg.png")
tests/admin_widgets/tests.py:307:65    - Unknown word (cartire)     -- admin:admin_widgets_cartire_add"))
tests/admin_widgets/tests.py:309:51    - Unknown word (Passat)      -- response, "Volkswagen Passat")
tests/admin_widgets/tests.py:345:27    - Unknown word (Iñtërnâtiônàlizætiøn) -- for test_str in ("Iñtërnâtiônàlizætiøn", "1234'", -1234):
tests/admin_widgets/tests.py:384:50    - Unknown word (selectfilter)         -- multiple name="test" class="selectfilter" '
tests/admin_widgets/tests.py:393:50    - Unknown word (selectfilterstacked)  -- multiple name="test" class="selectfilterstacked" '
tests/admin_widgets/tests.py:53:7      - Unknown word (widgetadmin) -- from .widgetadmin import site as widget
tests/admin_widgets/tests.py:575:42    - Unknown word (Linkin)               -- objects.create(name="Linkin Park")
tests/admin_widgets/tests.py:584:71    - Unknown word (salbums)              -- href="%(STORAGE_URL)salbums/'
tests/admin_widgets/tests.py:617:71    - Unknown word (salbums)              -- href="%(STORAGE_URL)salbums/'
tests/admin_widgets/tests.py:629:71    - Unknown word (salbums)              -- href="%(STORAGE_URL)salbums/'
tests/admin_widgets/tests.py:62:53     - Unknown word (testser)     -- create_user(username="testser", password="secret"
tests/admin_widgets/tests.py:63:75     - Unknown word (Passat)      -- Volkswagen", model="Passat")
tests/admin_widgets/tests.py:664:59    - Unknown word (salbums)              -- href="%(STORAGE_URL)salbums/hybrid_theory.jpg">
tests/admin_widgets/tests.py:685:42    - Unknown word (Linkin)               -- objects.create(name="Linkin Park")
tests/admin_widgets/tests.py:693:59    - Unknown word (banduuid)             -- name="test" value="%(banduuid)s" '
tests/admin_widgets/tests.py:697:45    - Unknown word (bandpk)               -- admin_widgets/band/%(bandpk)s/change/">Linkin Park
tests/admin_widgets/tests.py:697:63    - Unknown word (Linkin)               -- %(bandpk)s/change/">Linkin Park</a>'
tests/admin_widgets/tests.py:698:35    - Unknown word (banduuid)             -- /strong></div>" % {"banduuid": band.uuid, "bandpk
tests/admin_widgets/tests.py:698:58    - Unknown word (bandpk)               -- banduuid": band.uuid, "bandpk": band.pk},
tests/admin_widgets/tests.py:72:49     - Unknown word (widgetclass) -- self, model, fieldname, widgetclass, **admin_overrides)
tests/admin_widgets/tests.py:738:66    - Unknown word (hcombpk)              -- honeycomb_widget" value="%(hcombpk)s">'
tests/admin_widgets/tests.py:739:30    - Unknown word (hcomb)                -- "&nbsp;<strong>%(hcomb)s</strong>"
tests/admin_widgets/tests.py:740:17    - Unknown word (hcombpk)              -- % {"hcombpk": big_honeycomb.pk,
tests/admin_widgets/tests.py:740:46    - Unknown word (hcomb)                -- big_honeycomb.pk, "hcomb": big_honeycomb},
tests/admin_widgets/tests.py:783:60    - Unknown word (Cescapeme)            -- band/?name=%22%26%3E%3Cescapeme&amp;'
tests/admin_widgets/tests.py:794:38    - Unknown word (releaseevent)         -- href="/admin_widgets/releaseevent/?_to_field=album" '
tests/admin_widgets/tests.py:802:42    - Unknown word (Linkin)               -- objects.create(name="Linkin Park")
tests/admin_widgets/tests.py:835:51    - Unknown word (Rockstar)             -- objects.create(name="Rockstar Techie")
tests/admin_widgets/tests.py:835:9     - Unknown word (consultor)            -- consultor1 = Advisor.objects.create
tests/admin_widgets/tests.py:839:9     - Unknown word (consultor)            -- consultor1.companies.add(c1, c
tests/admin_widgets/tests.py:953:50    - Unknown word (releaseevent)         -- context["model_name"], "releaseevent")
tests/admin_widgets/tests.py:956:61    - Unknown word (releaseevent)         -- wrapper" data-model-ref="releaseevent">
tests/admin_widgets/tests.py:95:39     - Unknown word (widgetclass) -- assertIsInstance(widget, widgetclass)
tests/admin_widgets/tests.py:961:35    - Unknown word (releaseevent)         -- href="/admin_widgets/releaseevent/add/?_to_field=album
tests/admin_widgets/tests.py:962:46    - Unknown word (addlink)              -- static/admin/img/icon-addlink.svg" alt="" width="
tests/admin_widgets/urls.py:3:15      - Unknown word (widgetadmin) -- from . import widgetadmin
tests/admin_widgets/urls.py:6:14      - Unknown word (widgetadmin) -- path("", widgetadmin.site.urls),
tests/aggregation/test_filter_argument.py:102:47    - Unknown word (Apress)     -- book__publisher__name="Apress") & ~Q(friends__name
tests/aggregation/test_filter_argument.py:142:9     - Unknown word (aggs)       -- aggs = Author.objects.annotate
tests/aggregation/test_filter_argument.py:145:26    - Unknown word (aggs)       -- self.assertEqual(aggs["cnt"], 2)
tests/aggregation/test_filter_argument.py:148:9     - Unknown word (aggs)       -- aggs = Author.objects.annotate
tests/aggregation/test_filter_argument.py:159:26    - Unknown word (aggs)       -- self.assertEqual(aggs["cnt"], 2)
tests/aggregation/test_filter_argument.py:32:19     - Unknown word (Apress)     -- name="Apress", num_awards=3, duration
tests/aggregation/test_filter_argument.py:46:19     - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/aggregation/tests.py:1038:13   - Unknown word (qstr)       -- qstr = captured_queries[
tests/aggregation/tests.py:1039:44   - Unknown word (qstr)       -- assertNotIn("for update", qstr)
tests/aggregation/tests.py:1045:51   - Unknown word (qstr)       -- findall(r"order by (\w+)", qstr),
tests/aggregation/tests.py:1049:46   - Unknown word (qstr)       -- assertNotIn("order by", qstr)
tests/aggregation/tests.py:1050:30   - Unknown word (qstr)       -- self.assertEqual(qstr.count(" join "), 0)
tests/aggregation/tests.py:1056:9    - Unknown word (thedate)    -- thedate = timezone.now()
tests/aggregation/tests.py:1066:25   - Unknown word (thedate)    -- pubdate=thedate,
tests/aggregation/tests.py:1072:14   - Unknown word (nonaggregate) -- def test_nonaggregate_aggregation_throws(self
tests/aggregation/tests.py:108:19    - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/aggregation/tests.py:1099:29   - Unknown word (Kaplan)       -- ("Jacob Kaplan-Moss", 129),
tests/aggregation/tests.py:1101:31   - Unknown word (Forcier)      -- ("Jeffrey Forcier", 128),
tests/aggregation/tests.py:1102:28   - Unknown word (Bissex)       -- ("Paul Bissex", 120),
tests/aggregation/tests.py:1105:33   - Unknown word (Chun)         -- ("Wesley J. Chun", 176),
tests/aggregation/tests.py:1463:18   - Unknown word (Jonno's)      -- "Jonno's House of Books",
tests/aggregation/tests.py:1683:45   - Unknown word (outeref)      -- ggregation_exists_multivalued_outeref(self):
tests/aggregation/tests.py:1721:27   - Unknown word (Forcier)      -- ("Jeffrey Forcier", 1),
tests/aggregation/tests.py:1723:29   - Unknown word (Chun)         -- ("Wesley J. Chun", 1),
tests/aggregation/tests.py:177:29    - Unknown word (Pappa's)    -- name="Mamma and Pappa's Books",
tests/aggregation/tests.py:1885:24   - Unknown word (Jonno's)      -- [{"name": "Jonno's House of Books", "books
tests/aggregation/tests.py:1896:27   - Unknown word (Jonno's)      -- {"name": "Jonno's House of Books", "rating
tests/aggregation/tests.py:252:18    - Unknown word (Sams)       -- "Sams Teach Yourself Django
tests/aggregation/tests.py:301:25    - Unknown word (Holovaty)   -- "Adrian Holovaty",
tests/aggregation/tests.py:323:19    - Unknown word (Sams)       -- ("Sams Teach Yourself Django
tests/aggregation/tests.py:340:19    - Unknown word (Sams)       -- ("Sams Teach Yourself Django
tests/aggregation/tests.py:355:26    - Unknown word (Holovaty)   -- ("Adrian Holovaty", 4.5),
tests/aggregation/tests.py:356:24    - Unknown word (Dayley)     -- ("Brad Dayley", 3.0),
tests/aggregation/tests.py:357:25    - Unknown word (Kaplan)     -- ("Jacob Kaplan-Moss", 4.5),
tests/aggregation/tests.py:359:24    - Unknown word (Bissex)     -- ("Paul Bissex", 4.0),
tests/aggregation/tests.py:369:26    - Unknown word (Holovaty)   -- ("Adrian Holovaty", 1),
tests/aggregation/tests.py:370:24    - Unknown word (Dayley)     -- ("Brad Dayley", 1),
tests/aggregation/tests.py:371:25    - Unknown word (Kaplan)     -- ("Jacob Kaplan-Moss", 1),
tests/aggregation/tests.py:373:27    - Unknown word (Forcier)    -- ("Jeffrey Forcier", 1),
tests/aggregation/tests.py:374:24    - Unknown word (Bissex)     -- ("Paul Bissex", 1),
tests/aggregation/tests.py:377:29    - Unknown word (Chun)       -- ("Wesley J. Chun", 1),
tests/aggregation/tests.py:405:19    - Unknown word (Apress)     -- ("Apress", Decimal("59.69"))
tests/aggregation/tests.py:406:19    - Unknown word (Jonno's)    -- ("Jonno's House of Books", None
tests/aggregation/tests.py:407:26    - Unknown word (Kaufmann)   -- ("Morgan Kaufmann", Decimal("75.00"))
tests/aggregation/tests.py:526:26    - Unknown word (Holovaty)   -- ("Adrian Holovaty", 32.0),
tests/aggregation/tests.py:527:24    - Unknown word (Dayley)     -- ("Brad Dayley", None),
tests/aggregation/tests.py:528:25    - Unknown word (Kaplan)     -- ("Jacob Kaplan-Moss", 29.5),
tests/aggregation/tests.py:530:27    - Unknown word (Forcier)    -- ("Jeffrey Forcier", 27.0),
tests/aggregation/tests.py:531:24    - Unknown word (Bissex)     -- ("Paul Bissex", 31.0),
tests/aggregation/tests.py:534:29    - Unknown word (Chun)       -- ("Wesley J. Chun", Approximate(33.66
tests/aggregation/tests.py:550:9     - Unknown word (aggs)       -- aggs = Book.objects.aggregate
tests/aggregation/tests.py:555:26    - Unknown word (aggs)       -- self.assertEqual(aggs["distinct_ratings"]
tests/aggregation/tests.py:575:35    - Unknown word (xprice)     -- Book.objects.annotate(xprice=F("price"))
tests/aggregation/tests.py:590:35    - Unknown word (xprice)     -- Book.objects.annotate(xprice=F("price"))
tests/aggregation/tests.py:592:32    - Unknown word (xprice)     -- .values("rating", "xprice")
tests/aggregation/tests.py:68:53     - Unknown word (Holovaty)   -- create(name="Adrian Holovaty", age=34)
tests/aggregation/tests.py:69:52     - Unknown word (Kaplan)     -- objects.create(name="Jacob Kaplan-Moss", age=35)
tests/aggregation/tests.py:70:51     - Unknown word (Dayley)     -- objects.create(name="Brad Dayley", age=45)
tests/aggregation/tests.py:719:15    - Unknown word (Apress)     -- ["Apress", "Prentice Hall",
tests/aggregation/tests.py:729:18    - Unknown word (Apress)     -- "Apress",
tests/aggregation/tests.py:72:54     - Unknown word (Forcier)    -- create(name="Jeffrey Forcier", age=37)
tests/aggregation/tests.py:730:18    - Unknown word (Apress)     -- "Apress",
tests/aggregation/tests.py:73:51     - Unknown word (Bissex)     -- objects.create(name="Paul Bissex", age=29)
tests/aggregation/tests.py:74:56     - Unknown word (Chun)       -- create(name="Wesley J. Chun", age=25)
tests/aggregation/tests.py:768:25    - Unknown word (Kaufmann)   -- "Morgan Kaufmann",
tests/aggregation/tests.py:781:57    - Unknown word (Kaufmann)   -- Prentice Hall", "Morgan Kaufmann"],
tests/aggregation/tests.py:792:30    - Unknown word (Kaufmann)   -- ["Sams", "Morgan Kaufmann", "Expensive Publisher
tests/aggregation/tests.py:824:50    - Unknown word (Dayley)     -- QuerySetEqual(authors, ["Brad Dayley"], lambda a: a.name
tests/aggregation/tests.py:87:19     - Unknown word (Apress)     -- name="Apress", num_awards=3, duration
tests/aggregation/tests.py:90:19     - Unknown word (Sams)       -- name="Sams", num_awards=1, duration
tests/aggregation/tests.py:93:56     - Unknown word (Kaufmann)   -- create(name="Morgan Kaufmann", num_awards=9)
tests/aggregation/tests.py:94:49     - Unknown word (Jonno's)    -- objects.create(name="Jonno's House of Books", num
tests/aggregation_regress/tests.py:1002:54   - Unknown word (Holovaty)     -- 0]["name"], "Adrian Holovaty")
tests/aggregation_regress/tests.py:1082:64   - Unknown word (Apress)       -- p in publishers), ["Apress", "Sams"])
tests/aggregation_regress/tests.py:1305:25   - Unknown word (Kaufmann)     -- "Morgan Kaufmann",
tests/aggregation_regress/tests.py:1419:49   - Unknown word (LOUTER)       -- join isn't promoted to LOUTER. This could
tests/aggregation_regress/tests.py:1444:26   - Unknown word (Holovaty)     -- ("Adrian Holovaty", 1),
tests/aggregation_regress/tests.py:1445:24   - Unknown word (Dayley)       -- ("Brad Dayley", 1),
tests/aggregation_regress/tests.py:1446:25   - Unknown word (Kaplan)       -- ("Jacob Kaplan-Moss", 0),
tests/aggregation_regress/tests.py:1448:27   - Unknown word (Forcier)      -- ("Jeffrey Forcier", 1),
tests/aggregation_regress/tests.py:1449:24   - Unknown word (Bissex)       -- ("Paul Bissex", 0),
tests/aggregation_regress/tests.py:1452:29   - Unknown word (Chun)         -- ("Wesley J. Chun", 0),
tests/aggregation_regress/tests.py:1471:24   - Unknown word (Dayley)       -- ("Brad Dayley", 1),
tests/aggregation_regress/tests.py:1472:25   - Unknown word (Kaplan)       -- ("Jacob Kaplan-Moss", 0),
tests/aggregation_regress/tests.py:1474:27   - Unknown word (Forcier)      -- ("Jeffrey Forcier", 1),
tests/aggregation_regress/tests.py:1475:24   - Unknown word (Bissex)       -- ("Paul Bissex", 0),
tests/aggregation_regress/tests.py:1478:29   - Unknown word (Chun)         -- ("Wesley J. Chun", 0),
tests/aggregation_regress/tests.py:1621:9    - Unknown word (wmpk)         -- wmpk = WithManualPK.objects
tests/aggregation_regress/tests.py:1623:23   - Unknown word (wmpk)         -- object_id=wmpk.id,
tests/aggregation_regress/tests.py:1625:60   - Unknown word (wmpk)         -- objects.get_for_model(wmpk),
tests/aggregation_regress/tests.py:162:29    - Unknown word (Pappa's)    -- name="Mamma and Pappa's Books",
tests/aggregation_regress/tests.py:1754:14   - Unknown word (fobj)         -- def test_fobj_group_by(self):
tests/aggregation_regress/tests.py:1851:55   - Unknown word (Kaufmann)     -- 1", "name": "Morgan Kaufmann", "num_authors": 1}
tests/aggregation_regress/tests.py:1906:42   - Unknown word (recipeunmanaged) -- annotate(num_recipes=Count("recipeunmanaged"))
tests/aggregation_regress/tests.py:1937:38   - Unknown word (unpromoted)      -- the existing join is unpromoted when doing filtering
tests/aggregation_regress/tests.py:1943:70   - Unknown word (LOUTER)          -- by annotate will be LOUTER
tests/aggregation_regress/tests.py:310:19    - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/aggregation_regress/tests.py:331:19    - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/aggregation_regress/tests.py:358:26    - Unknown word (Sams)       -- "name": "Sams Teach Yourself Django
tests/aggregation_regress/tests.py:55:53     - Unknown word (Holovaty)   -- create(name="Adrian Holovaty", age=34)
tests/aggregation_regress/tests.py:56:52     - Unknown word (Kaplan)     -- objects.create(name="Jacob Kaplan-Moss", age=35)
tests/aggregation_regress/tests.py:57:51     - Unknown word (Dayley)     -- objects.create(name="Brad Dayley", age=45)
tests/aggregation_regress/tests.py:59:54     - Unknown word (Forcier)    -- create(name="Jeffrey Forcier", age=37)
tests/aggregation_regress/tests.py:600:35    - Unknown word (hardbackbook) -- contact, contact_id, hardbackbook, id, isbn, name, pages
tests/aggregation_regress/tests.py:60:51     - Unknown word (Bissex)     -- objects.create(name="Paul Bissex", age=29)
tests/aggregation_regress/tests.py:611:35    - Unknown word (hardbackbook) -- contact, contact_id, hardbackbook, id, isbn, name, num
tests/aggregation_regress/tests.py:61:56     - Unknown word (Chun)       -- create(name="Wesley J. Chun", age=25)
tests/aggregation_regress/tests.py:700:24    - Unknown word (fexpr)        -- def test_aggregate_fexpr(self):
tests/aggregation_regress/tests.py:712:50    - Unknown word (Kaufmann)     -- 1, "name": "Morgan Kaufmann", "num_awards": 9},
tests/aggregation_regress/tests.py:726:43    - Unknown word (Apress)       -- books": 2, "name": "Apress", "num_awards": 3},
tests/aggregation_regress/tests.py:727:43    - Unknown word (Jonno's)      -- books": 0, "name": "Jonno's House of Books", "num
tests/aggregation_regress/tests.py:73:49     - Unknown word (Apress)     -- objects.create(name="Apress", num_awards=3)
tests/aggregation_regress/tests.py:742:50    - Unknown word (Kaufmann)     -- 1, "name": "Morgan Kaufmann", "num_awards": 9},
tests/aggregation_regress/tests.py:74:49     - Unknown word (Sams)       -- objects.create(name="Sams", num_awards=1)
tests/aggregation_regress/tests.py:756:43    - Unknown word (Apress)       -- books": 2, "name": "Apress", "num_awards": 3},
tests/aggregation_regress/tests.py:757:43    - Unknown word (Jonno's)      -- books": 0, "name": "Jonno's House of Books", "num
tests/aggregation_regress/tests.py:76:56     - Unknown word (Kaufmann)   -- create(name="Morgan Kaufmann", num_awards=9)
tests/aggregation_regress/tests.py:77:49     - Unknown word (Jonno's)    -- objects.create(name="Jonno's House of Books", num
tests/aggregation_regress/tests.py:806:44    - Unknown word (Jonno's)      -- objects.filter(name="Jonno's House of Books")
tests/aggregation_regress/tests.py:821:30    - Unknown word (Jonno's)      -- "name": "Jonno's House of Books",
tests/aggregation_regress/tests.py:868:54    - Unknown word (Apress)       -- Django Projects", 29.0, "Apress", "James Bennett"),
tests/aggregation_regress/tests.py:873:30    - Unknown word (Forcier)      -- "Jeffrey Forcier",
tests/aggregation_regress/tests.py:875:80    - Unknown word (Dayley)       -- 45.0, "Sams", "Brad Dayley"),
tests/aggregation_regress/tests.py:915:11    - Unknown word (realiased)    -- # realiased when used in a subquery
tests/aggregation_regress/tests.py:91:19     - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/aggregation_regress/tests.py:932:9     - Unknown word (qstr)         -- qstr = str(
tests/aggregation_regress/tests.py:939:26    - Unknown word (qstr)         -- self.assertEqual(qstr[qstr.index("GROUP BY
tests/aggregation_regress/tests.py:939:31    - Unknown word (qstr)         -- self.assertEqual(qstr[qstr.index("GROUP BY") :
tests/aggregation_regress/tests.py:982:54    - Unknown word (Holovaty)     -- 0]["name"], "Adrian Holovaty")
tests/aggregation_regress/tests.py:992:54    - Unknown word (Holovaty)     -- 0]["name"], "Adrian Holovaty")
tests/annotations/tests.py:1014:44   - Unknown word (Sams)       -- books_qs, [{"name": "Sams"}, {"name": "Morgan
tests/annotations/tests.py:1014:69   - Unknown word (Kaufmann)   -- }, {"name": "Morgan Kaufmann"}]
tests/annotations/tests.py:1038:27   - Unknown word (Apress)     -- {"name": "Apress"},
tests/annotations/tests.py:1039:27   - Unknown word (Sams)       -- {"name": "Sams"},
tests/annotations/tests.py:1041:34   - Unknown word (Kaufmann)   -- {"name": "Morgan Kaufmann"},
tests/annotations/tests.py:1135:32   - Unknown word (Bissex)     -- {"name": "Paul Bissex", "max_pages": 0},
tests/annotations/tests.py:1136:37   - Unknown word (Chun)       -- {"name": "Wesley J. Chun", "max_pages": 0},
tests/annotations/tests.py:1154:14   - Unknown word (alia)       -- "alia s",
tests/annotations/tests.py:1195:53   - Unknown word (Holovaty)   -- create(name="Adrian Holovaty", age=34)
tests/annotations/tests.py:1196:52   - Unknown word (Kaplan)     -- objects.create(name="Jacob Kaplan-Moss", age=35)
tests/annotations/tests.py:1200:45   - Unknown word (Apress)     -- objects.create(name="Apress", num_awards=3)
tests/annotations/tests.py:1430:25   - Unknown word (otherage)   -- ).aggregate(otherage_sum=Sum("other_age"
tests/annotations/tests.py:164:29    - Unknown word (Pappa's)    -- name="Mamma and Pappa's Books",
tests/annotations/tests.py:390:13    - Unknown word (otherage)   -- otherage_sum=Sum("other_age"
tests/annotations/tests.py:393:31    - Unknown word (otherage)   -- self.assertEqual(agg["otherage_sum"], other_agg["age
tests/annotations/tests.py:407:14    - Unknown word (Catelyn)    -- "Catelyn Stark",
tests/annotations/tests.py:523:14    - Unknown word (preupdate)  -- book_preupdate = Book.objects.get(pk
tests/annotations/tests.py:527:14    - Unknown word (postupdate) -- book_postupdate = Book.objects.get(pk
tests/annotations/tests.py:528:31    - Unknown word (preupdate)  -- self.assertEqual(book_preupdate.rating - 1, book_postupdate
tests/annotations/tests.py:528:58    - Unknown word (postupdate) -- preupdate.rating - 1, book_postupdate.rating)
tests/annotations/tests.py:552:52    - Unknown word (Pappa's)    -- Books.com", "Mamma and Pappa's Books"],
tests/annotations/tests.py:59:53     - Unknown word (Holovaty)   -- create(name="Adrian Holovaty", age=34)
tests/annotations/tests.py:60:52     - Unknown word (Kaplan)     -- objects.create(name="Jacob Kaplan-Moss", age=35)
tests/annotations/tests.py:619:20    - Unknown word (Westfield)  -- chain="Westfield",
tests/annotations/tests.py:61:51     - Unknown word (Dayley)     -- objects.create(name="Brad Dayley", age=45)
tests/annotations/tests.py:634:28    - Unknown word (Westfield)  -- .filter(chain="Westfield")
tests/annotations/tests.py:63:54     - Unknown word (Forcier)    -- create(name="Jeffrey Forcier", age=37)
tests/annotations/tests.py:640:39    - Unknown word (Westfield)  -- Angus & Robinson", "Westfield", True, "155860191"
tests/annotations/tests.py:641:39    - Unknown word (Westfield)  -- Angus & Robinson", "Westfield", True, "159059725"
tests/annotations/tests.py:64:51     - Unknown word (Bissex)     -- objects.create(name="Paul Bissex", age=29)
tests/annotations/tests.py:65:56     - Unknown word (Chun)       -- create(name="Wesley J. Chun", age=25)
tests/annotations/tests.py:699:20    - Unknown word (Westfield)  -- chain="Westfield",
tests/annotations/tests.py:77:49     - Unknown word (Apress)     -- objects.create(name="Apress", num_awards=3)
tests/annotations/tests.py:78:49     - Unknown word (Sams)       -- objects.create(name="Sams", num_awards=1)
tests/annotations/tests.py:80:56     - Unknown word (Kaufmann)   -- create(name="Morgan Kaufmann", num_awards=9)
tests/annotations/tests.py:81:49     - Unknown word (Jonno's)    -- objects.create(name="Jonno's House of Books", num
tests/annotations/tests.py:834:26    - Unknown word (APPL)       -- ticker_name="APPL",
tests/annotations/tests.py:866:28    - Unknown word (APPL)       -- ("Apple", "APPL"),
tests/annotations/tests.py:878:26    - Unknown word (APPL)       -- ticker_name="APPL",
tests/annotations/tests.py:922:28    - Unknown word (APPL)       -- ("Apple", "APPL".lower()),
tests/annotations/tests.py:953:54    - Unknown word (Apress)     -- value_sum": 9, "name": "Apress"},
tests/annotations/tests.py:954:54    - Unknown word (Jonno's)    -- value_sum": 0, "name": "Jonno's House of Books"},
tests/annotations/tests.py:955:62    - Unknown word (Kaufmann)   -- 27, "name": "Morgan Kaufmann"},
tests/annotations/tests.py:957:54    - Unknown word (Sams)       -- value_sum": 3, "name": "Sams"},
tests/annotations/tests.py:95:19     - Unknown word (Sams)       -- name="Sams Teach Yourself Django
tests/annotations/tests.py:975:30    - Unknown word (Holovaty)   -- name="Adrian Holovaty",
tests/annotations/tests.py:991:36    - Unknown word (Kaplan)     -- jacob_name": "Jacob Kaplan-Moss", "james_name"
tests/app_loading/tests.py:15:24     - Unknown word (modelapp)   -- egg_name = "%s/modelapp.egg" % self.egg_dir
tests/app_loading/tests.py:27:24     - Unknown word (nomodelapp) -- egg_name = "%s/nomodelapp.egg" % self.egg_dir
tests/app_loading/tests.py:63:24     - Unknown word (brokenapp)  -- egg_name = "%s/brokenapp.egg" % self.egg_dir
tests/app_loading/tests.py:65:57     - Unknown word (modelz)     -- rtRaisesMessage(ImportError, "modelz"):
tests/apps/apps.py:11:14     - Unknown word (myauth)     -- label = "myauth"
tests/apps/namespace_package_base/nsapp/apps.py:8:13      - Unknown word (nsapp)      -- name = "nsapp"
tests/apps/query_performing_app/apps.py:61:20     - Unknown word (executemany) -- cursor.executemany(
tests/apps/tests.py:172:81    - Unknown word (myauth)     -- auth'. Did you mean 'myauth'"
tests/apps/tests.py:215:72    - Unknown word (currsize)   -- settings_name.cache_info().currsize, 0)
tests/apps/tests.py:216:55    - Unknown word (currsize)   -- models.cache_info().currsize, 0)
tests/apps/tests.py:317:26    - Unknown word (southponies) -- "Model 'apps.southponies' was already registered
tests/apps/tests.py:330:41    - Unknown word (southponies) -- RuntimeError, "Conflicting 'southponies' models in application
tests/apps/tests.py:365:33    - Unknown word (lazya)       -- for model_name in ["lazya", "lazyb", "lazyb",
tests/apps/tests.py:365:42    - Unknown word (lazyb)       -- model_name in ["lazya", "lazyb", "lazyb", "lazyc",
tests/apps/tests.py:365:51    - Unknown word (lazyb)       -- ["lazya", "lazyb", "lazyb", "lazyc", "lazya"]
tests/apps/tests.py:365:60    - Unknown word (lazyc)       -- "lazyb", "lazyb", "lazyc", "lazya"]
tests/apps/tests.py:365:69    - Unknown word (lazya)       -- "lazyb", "lazyc", "lazya"]
tests/apps/tests.py:372:73    - Unknown word (lazyb)       -- pending, {("apps", "lazyb")}
tests/apps/tests.py:376:56    - Unknown word (lazyb)       -- test_func, ("apps", "lazyb"))
tests/apps/tests.py:385:73    - Unknown word (lazyc)       -- pending, {("apps", "lazyc")}
tests/apps/tests.py:423:14    - Unknown word (dunder)      -- def test_dunder_path(self):
tests/apps/tests.py:429:17    - Unknown word (dunder)      -- def test_no_dunder_path_fallback_to_dunder
tests/apps/tests.py:429:41    - Unknown word (dunder)      -- dunder_path_fallback_to_dunder_file(self):
tests/apps/tests.py:435:20    - Unknown word (dunder)      -- def test_empty_dunder_path_fallback_to_dunder
tests/apps/tests.py:435:44    - Unknown word (dunder)      -- dunder_path_fallback_to_dunder_file(self):
tests/apps/tests.py:508:15    - Unknown word (nsapp)       -- # We need nsapp to be top-level so our
tests/apps/tests.py:514:45    - Unknown word (nsapp)       -- join(base_location, "nsapp")
tests/apps/tests.py:521:49    - Unknown word (nsapp)       -- settings(INSTALLED_APPS=["nsapp"]):
tests/apps/tests.py:522:51    - Unknown word (nsapp)       -- apps.get_app_config("nsapp")
tests/apps/tests.py:533:30    - Unknown word (nsapp)       -- components of the "nsapp" package.
tests/asgi/tests.py:10:49     - Unknown word (ASGI)       -- staticfiles.handlers import ASGIStaticFilesHandler
tests/asgi/tests.py:11:18     - Unknown word (asgi)       -- from django.core.asgi import get_asgi_application
tests/asgi/tests.py:11:34     - Unknown word (asgi)       -- core.asgi import get_asgi_application
tests/asgi/tests.py:13:27     - Unknown word (asgi)       -- django.core.handlers.asgi import ASGIHandler,
tests/asgi/tests.py:13:39     - Unknown word (ASGI)       -- handlers.asgi import ASGIHandler, ASGIRequest
tests/asgi/tests.py:13:52     - Unknown word (ASGI)       -- import ASGIHandler, ASGIRequest
tests/asgi/tests.py:174:24    - Unknown word (referer)    -- [b"referer", b"Scotland"],
tests/asgi/tests.py:175:24    - Unknown word (referer)    -- [b"referer", b"Wales"],
tests/asgi/tests.py:44:34     - Unknown word (asgi)       -- settings(ROOT_URLCONF="asgi.urls")
tests/asgi/tests.py:45:7      - Unknown word (ASGI)       -- class ASGITest(SimpleTestCase)
tests/asgi/tests.py:52:24     - Unknown word (asgi)       -- async def test_get_asgi_application(self):
tests/asgi/tests.py:54:54     - Unknown word (ASGI)       -- returns a functioning ASGI callable.
tests/asgi/urls.py:23:44     - Unknown word (REFERER)    -- request.META.get("HTTP_REFERER") or "",
tests/async/test_async_auth.py:106:27    - Unknown word (aforce)        -- async def test_client_aforce_login(self):
tests/async/test_async_auth.py:107:27    - Unknown word (aforce)        -- await self.client.aforce_login(self.test_user
tests/async/test_async_auth.py:119:27    - Unknown word (aforce)        -- async def test_client_aforce_login_backend(self)
tests/async/test_async_auth.py:122:27    - Unknown word (aforce)        -- await self.client.aforce_login(
tests/async/test_async_auth.py:17:46     - Unknown word (testpw)        -- test@example.com", "testpw"
tests/async/test_async_auth.py:20:20     - Unknown word (aauthenticate) -- async def test_aauthenticate(self):
tests/async/test_async_auth.py:21:22     - Unknown word (aauthenticate) -- user = await aauthenticate(username="testuser"
tests/async/test_async_auth.py:21:67     - Unknown word (testpw)        -- testuser", password="testpw")
tests/async/test_async_auth.py:26:33     - Unknown word (aauthenticate) -- self.assertIsNone(await aauthenticate(username="testuser"
tests/async/test_async_auth.py:26:78     - Unknown word (testpw)        -- testuser", password="testpw"))
tests/async/test_async_auth.py:28:20     - Unknown word (alogin)        -- async def test_alogin(self):
tests/async/test_async_auth.py:2:5       - Unknown word (aauthenticate) -- aauthenticate,
tests/async/test_async_auth.py:30:45     - Unknown word (asession)      -- = await self.client.asession()
tests/async/test_async_auth.py:31:15     - Unknown word (alogin)        -- await alogin(request, self.test_user
tests/async/test_async_auth.py:38:45     - Unknown word (asession)      -- = await self.client.asession()
tests/async/test_async_auth.py:39:15     - Unknown word (alogin)        -- await alogin(request, self.test_user
tests/async/test_async_auth.py:4:5       - Unknown word (alogin)        -- alogin,
tests/async/test_async_auth.py:51:20     - Unknown word (alogin)        -- async def test_alogin_new_user(self):
tests/async/test_async_auth.py:53:45     - Unknown word (asession)      -- = await self.client.asession()
tests/async/test_async_auth.py:56:48     - Unknown word (testpw)        -- test2@example.com", "testpw2"
tests/async/test_async_auth.py:5:5       - Unknown word (alogout)       -- alogout,
tests/async/test_async_auth.py:64:19     - Unknown word (auser)         -- async def auser():
tests/async/test_async_auth.py:69:17     - Unknown word (auser)         -- request.auser = auser
tests/async/test_async_auth.py:69:25     - Unknown word (auser)         -- request.auser = auser
tests/async/test_async_auth.py:70:45     - Unknown word (asession)      -- = await self.client.asession()
tests/async/test_async_auth.py:76:20     - Unknown word (alogout)       -- async def test_alogout(self):
tests/async/test_async_auth.py:77:65     - Unknown word (testpw)        -- testuser", password="testpw")
tests/async/test_async_auth.py:79:45     - Unknown word (asession)      -- = await self.client.asession()
tests/async/test_async_auth.py:80:15     - Unknown word (alogout)       -- await alogout(request)
tests/async/test_async_auth.py:84:27     - Unknown word (alogout)       -- async def test_client_alogout(self):
tests/async/test_async_auth.py:88:27     - Unknown word (alogout)       -- await self.client.alogout()
tests/async/test_async_model_methods.py:14:9      - Unknown word (refetched)  -- refetched = await SimpleModel
tests/async/test_async_model_methods.py:15:26     - Unknown word (refetched)  -- self.assertEqual(refetched.field, 10)
tests/async/test_async_queryset.py:257:44    - Unknown word (simplemodel)  -- id, field FROM async_simplemodel WHERE created=%s"
tests/async/test_async_queryset.py:56:23     - Unknown word (relatedmodel) -- Prefetch("relatedmodel_set", to_attr="prefetched
tests/async/test_async_queryset.py:56:62     - Unknown word (relatedmodel) -- to_attr="prefetched_relatedmodel")
tests/async/test_async_queryset.py:58:41     - Unknown word (relatedmodel) -- append(s.prefetched_relatedmodel)
tests/async/test_async_related_managers.py:20:23     - Unknown word (relatedmodel) -- await self.s1.relatedmodel_set.acreate()
tests/async/test_async_related_managers.py:21:13     - Unknown word (relatedmodel) -- new_relatedmodel = await self.s1.relatedmodel
tests/async/test_async_related_managers.py:21:42     - Unknown word (relatedmodel) -- relatedmodel = await self.s1.relatedmodel_set.aget()
tests/async/test_async_related_managers.py:22:30     - Unknown word (relatedmodel) -- self.assertEqual(new_relatedmodel.simple, self.s1)
tests/async/test_async_related_managers.py:37:13     - Unknown word (relatedmodel) -- new_relatedmodel, created = await self
tests/async/test_async_shortcuts.py:23:46     - Unknown word (relatedmodel) -- object_or_404(self.s1.relatedmodel_set, pk=self.r1.pk)
tests/async/test_async_shortcuts.py:37:44     - Unknown word (relatedmodel) -- list_or_404(self.s1.relatedmodel_set, pk=self.r1.pk)
tests/auth_tests/models/proxy.py:12:34     - Unknown word (proxys)     -- permissions = (("display_proxys", "May display proxys
tests/auth_tests/models/proxy.py:12:56     - Unknown word (proxys)     -- proxys", "May display proxys information"),)
tests/auth_tests/test_auth_backends.py:1061:36   - Unknown word (mypassword)      -- sensitive_password = "mypassword"
tests/auth_tests/test_auth_backends.py:1076:36   - Unknown word (testusername)    -- authenticate(username="testusername", password=self.sensitive
tests/auth_tests/test_auth_backends.py:1097:27   - Unknown word (testusername)    -- username="testusername", password=self.sensitive
tests/auth_tests/test_auth_backends.py:1166:41   - Unknown word (thismodel)       -- settings(AUTH_USER_MODEL="thismodel.doesntexist")
tests/auth_tests/test_auth_backends.py:1166:51   - Unknown word (doesntexist)     -- USER_MODEL="thismodel.doesntexist")
tests/auth_tests/test_auth_backends.py:1173:47   - Unknown word (thismodel)       -- MODEL refers to model 'thismodel.doesntexist' "
tests/auth_tests/test_auth_backends.py:1173:57   - Unknown word (doesntexist)     -- to model 'thismodel.doesntexist' "
tests/auth_tests/test_auth_backends.py:11:5      - Unknown word (aauthenticate) -- aauthenticate,
tests/auth_tests/test_auth_backends.py:221:20    - Unknown word (acustom)       -- async def test_acustom_perms(self):
tests/auth_tests/test_auth_backends.py:271:12    - Unknown word (Regressiontest) -- """Regressiontest for #12462"""
tests/auth_tests/test_auth_backends.py:330:20    - Unknown word (aanonymous)     -- async def test_aanonymous_has_no_permissions(self
tests/auth_tests/test_auth_backends.py:396:20    - Unknown word (ainactive)      -- async def test_ainactive_has_no_permissions(self
tests/auth_tests/test_auth_backends.py:463:20    - Unknown word (aauthentication) -- async def test_aauthentication_timing(self):
tests/auth_tests/test_auth_backends.py:471:15    - Unknown word (aauthenticate)   -- await aauthenticate(username=username, password
tests/auth_tests/test_auth_backends.py:475:15    - Unknown word (aauthenticate)   -- await aauthenticate(username="no_such_user
tests/auth_tests/test_auth_backends.py:521:20    - Unknown word (aauthenticate)   -- async def test_aauthenticate_inactive(self):
tests/auth_tests/test_auth_backends.py:525:32    - Unknown word (aauthenticate)   -- self.assertEqual(await aauthenticate(**self.user_credentials
tests/auth_tests/test_auth_backends.py:647:20    - Unknown word (alogin)          -- async def test_alogin(self):
tests/auth_tests/test_auth_backends.py:650:43    - Unknown word (alogin)          -- assertTrue(await self.client.alogin(username="uuid", password
tests/auth_tests/test_auth_backends.py:82:20     - Unknown word (ahas)          -- async def test_ahas_perm(self):
tests/auth_tests/test_auth_backends.py:830:20    - Unknown word (araises)         -- async def test_araises_exception(self):
tests/auth_tests/test_auth_backends.py:83:39     - Unknown word (ahas)          -- assertIs(await self.user.ahas_perm("user_perm"), True
tests/auth_tests/test_auth_backends.py:84:39     - Unknown word (ahas)          -- assertIs(await self.user.ahas_perm("group_perm"),
tests/auth_tests/test_auth_backends.py:85:39     - Unknown word (ahas)          -- assertIs(await self.user.ahas_perm("other_perm", TestObj
tests/auth_tests/test_auth_backends.py:94:20     - Unknown word (ahas)          -- async def test_ahas_perms_perm_list_invalid
tests/auth_tests/test_basic.py:113:41    - Unknown word (badsetting) -- settings(AUTH_USER_MODEL="badsetting")
tests/auth_tests/test_basic.py:120:41    - Unknown word (thismodel)  -- settings(AUTH_USER_MODEL="thismodel.doesntexist")
tests/auth_tests/test_basic.py:120:51    - Unknown word (doesntexist) -- USER_MODEL="thismodel.doesntexist")
tests/auth_tests/test_basic.py:124:47    - Unknown word (thismodel)   -- MODEL refers to model 'thismodel.doesntexist' "
tests/auth_tests/test_basic.py:124:57    - Unknown word (doesntexist) -- to model 'thismodel.doesntexist' "
tests/auth_tests/test_basic.py:136:56    - Unknown word (usuario)     -- meta.verbose_name, "usuario")
tests/auth_tests/test_basic.py:137:63    - Unknown word (usuarios)    -- verbose_name_plural, "usuarios")
tests/auth_tests/test_basic.py:149:45    - Unknown word (asession)    -- = await self.client.asession()
tests/auth_tests/test_basic.py:16:71     - Unknown word (testpw)     -- test@example.com", "testpw")
tests/auth_tests/test_basic.py:173:25    - Unknown word (newsecret)   -- SECRET_KEY="newsecret",
tests/auth_tests/test_basic.py:182:44    - Unknown word (newsecret)   -- settings(SECRET_KEY="newsecret"):
tests/auth_tests/test_basic.py:191:27    - Unknown word (alogin)      -- await self.client.alogin(username="testuser"
tests/auth_tests/test_basic.py:193:45    - Unknown word (asession)    -- = await self.client.asession()
tests/auth_tests/test_basic.py:196:25    - Unknown word (newsecret)   -- SECRET_KEY="newsecret",
tests/auth_tests/test_basic.py:19:43     - Unknown word (testpw)     -- assertTrue(u.check_password("testpw"))
tests/auth_tests/test_basic.py:205:44    - Unknown word (newsecret)   -- settings(SECRET_KEY="newsecret"):
tests/auth_tests/test_basic.py:24:44     - Unknown word (testpw)     -- assertFalse(u.check_password("testpw"))
tests/auth_tests/test_basic.py:26:25     - Unknown word (testpw)     -- u.set_password("testpw")
tests/auth_tests/test_basic.py:27:43     - Unknown word (testpw)     -- assertTrue(u.check_password("testpw"))
tests/auth_tests/test_basic.py:48:34     - Unknown word (acheck)     -- assertFalse(await u.acheck_password("bad"))
tests/auth_tests/test_basic.py:49:33     - Unknown word (acheck)     -- self.assertTrue(await u.acheck_password("testpw"))
tests/auth_tests/test_basic.py:52:35     - Unknown word (jörg)       -- objects.create_user("jörg")
tests/auth_tests/test_basic.py:53:35     - Unknown word (Григорий)   -- objects.create_user("Григорий")
tests/auth_tests/test_basic.py:55:27     - Unknown word (iamthe)     -- omega_username = "iamtheΩ" # U+03A9 GREEK CAPITAL
tests/auth_tests/test_basic.py:56:25     - Unknown word (iamthe)     -- ohm_username = "iamtheΩ" # U+2126 OHM SIGN
tests/auth_tests/test_basic.py:80:20     - Unknown word (asuperuser) -- async def test_asuperuser(self):
tests/auth_tests/test_context_processors.py:149:46    - Unknown word (someflag)       -- context["user"]) & Q(someflag=True)
tests/auth_tests/test_context_processors.py:19:33     - Unknown word (someperm)   -- return perm == "mockapp.someperm"
tests/auth_tests/test_context_processors.py:45:14     - Unknown word (permwrapper) -- def test_permwrapper_in(self):
tests/auth_tests/test_context_processors.py:53:32     - Unknown word (someperm)    -- self.assertIn("mockapp.someperm", perms)
tests/auth_tests/test_context_processors.py:56:14     - Unknown word (permlookupdict) -- def test_permlookupdict_in(self):
tests/auth_tests/test_context_processors.py:60:9      - Unknown word (pldict)         -- pldict = PermLookupDict(MockUser
tests/auth_tests/test_context_processors.py:62:39     - Unknown word (pldict)         -- EQLimiterObject() in pldict
tests/auth_tests/test_decorators.py:102:17    - Unknown word (auser)      -- request.auser = auser_anonymous
tests/auth_tests/test_decorators.py:102:25    - Unknown word (auser)      -- request.auser = auser_anonymous
tests/auth_tests/test_decorators.py:107:17    - Unknown word (auser)      -- request.auser = auser
tests/auth_tests/test_decorators.py:217:14    - Unknown word (permissioned) -- def test_permissioned_denied_redirect(self
tests/auth_tests/test_decorators.py:233:14    - Unknown word (permissioned) -- def test_permissioned_denied_exception_raised
tests/auth_tests/test_decorators.py:284:20    - Unknown word (permissioned) -- async def test_permissioned_denied_redirect_async
tests/auth_tests/test_decorators.py:300:20    - Unknown word (permissioned) -- async def test_permissioned_denied_exception_raised
tests/auth_tests/test_decorators.py:375:31    - Unknown word (ahas)         -- return await user.ahas_perms(["auth_tests.add
tests/auth_tests/test_decorators.py:411:31    - Unknown word (ahas)         -- return await user.ahas_perms(["auth_tests.add
tests/auth_tests/test_decorators.py:89:19     - Unknown word (auser)      -- async def auser_anonymous():
tests/auth_tests/test_decorators.py:92:19     - Unknown word (auser)      -- async def auser():
tests/auth_tests/test_forms.py:104:26    - Unknown word (jsmith)     -- "username": "jsmith!",
tests/auth_tests/test_forms.py:1158:21   - Unknown word (jsmith)       -- username = "jsmith"
tests/auth_tests/test_forms.py:1180:51   - Unknown word (ıxample)      -- user("mike456", "mike@ıxample.org", "test123")
tests/auth_tests/test_forms.py:1181:32   - Unknown word (ıxample)      -- data = {"email": "mike@ıxample.org"}
tests/auth_tests/test_forms.py:1185:47   - Unknown word (ıxample)      -- ertEmailMessageSent(to=["mike@ıxample.org"])
tests/auth_tests/test_forms.py:1197:32   - Unknown word (ıxample)      -- data = {"email": "mike@ıxample.org"}
tests/auth_tests/test_forms.py:120:26    - Unknown word (jsmith)     -- "username": "jsmith",
tests/auth_tests/test_forms.py:132:30    - Unknown word (jsmith)     -- data = {"username": "jsmith"}
tests/auth_tests/test_forms.py:1361:45   - Unknown word (catched)      -- email_exceptions_are_catched_and_logged(self):
tests/auth_tests/test_forms.py:1411:37   - Unknown word (Pucb)         -- pbkdf2_sha256$100000$a6Pucb1qSFcD$WmCkn9Hqidj48NVe
tests/auth_tests/test_forms.py:1420:48   - Unknown word (Pucb)         -- salt</strong>: <bdi>a6Pucb******</bdi>"
tests/auth_tests/test_forms.py:1436:45   - Unknown word (labelable)    -- it doesn't have any labelable elements.
tests/auth_tests/test_forms.py:1584:28   - Unknown word (complexpassword) -- {"password1": "complexpassword", "password2": "complexpasswo
tests/auth_tests/test_forms.py:1584:60   - Unknown word (complexpassword) -- mplexpassword", "password2": "complexpassword"},
tests/auth_tests/test_forms.py:1638:26   - Unknown word (otherclient)     -- "username": "otherclient",
tests/auth_tests/test_forms.py:1639:27   - Unknown word (otherclient)     -- "password1": "otherclient",
tests/auth_tests/test_forms.py:199:27    - Unknown word (iamthe)     -- omega_username = "iamtheΩ" # U+03A9 GREEK CAPITAL
tests/auth_tests/test_forms.py:200:25    - Unknown word (iamthe)     -- ohm_username = "iamtheΩ" # U+2126 OHM SIGN
tests/auth_tests/test_forms.py:234:26    - Unknown word (otherclient) -- "username": "otherclient",
tests/auth_tests/test_forms.py:235:27    - Unknown word (otherclient) -- "password1": "otherclient",
tests/auth_tests/test_forms.py:236:27    - Unknown word (otherclient) -- "password2": "otherclient",
tests/auth_tests/test_forms.py:473:26    - Unknown word (jsmith)      -- "username": "jsmith_does_not_exist",
tests/auth_tests/test_forms.py:606:44    - Unknown word (Σαρα)        -- create_user(username="Σαρα", password="pwd")
tests/auth_tests/test_forms.py:608:26    - Unknown word (Σαρα)        -- "username": "Σαρα",
tests/auth_tests/test_forms.py:678:56    - Unknown word (credentails) -- necessary to have valid credentails for the test.
tests/auth_tests/test_forms.py:859:14    - Unknown word (Votre)       -- "Votre mot de passe ne peut
tests/auth_tests/test_forms.py:859:36    - Unknown word (peut)        -- Votre mot de passe ne peut pas trop ressembler
tests/auth_tests/test_forms.py:859:50    - Unknown word (ressembler)  -- passe ne peut pas trop ressembler à vos autres informations
tests/auth_tests/test_forms.py:859:67    - Unknown word (autres)      -- trop ressembler à vos autres informations "
tests/auth_tests/test_forms.py:859:74    - Unknown word (informations) -- ressembler à vos autres informations "
tests/auth_tests/test_forms.py:860:14    - Unknown word (personnelles) -- "personnelles.",
tests/auth_tests/test_forms.py:861:14    - Unknown word (Votre)        -- "Votre mot de passe doit contenir
tests/auth_tests/test_forms.py:861:38    - Unknown word (contenir)     -- Votre mot de passe doit contenir au minimum 12 caract
tests/auth_tests/test_forms.py:861:61    - Unknown word (caractères)   -- contenir au minimum 12 caractères.",
tests/auth_tests/test_forms.py:959:31    - Unknown word (oldpassword)  -- user.set_password(" oldpassword ")
tests/auth_tests/test_forms.py:961:33    - Unknown word (oldpassword)  -- "old_password": "   oldpassword ",
tests/auth_tests/test_handlers.py:1:35      - Unknown word (modwsgi)    -- contrib.auth.handlers.modwsgi import check_password
tests/auth_tests/test_hashers.py:115:42    - Unknown word (lètmeinz)   -- assertFalse(check_password("lètmeinz", encoded))
tests/auth_tests/test_hashers.py:136:42    - Unknown word (lètmeinz)   -- assertFalse(check_password("lètmeinz", encoded))
tests/auth_tests/test_hashers.py:15:5      - Unknown word (acheck)     -- acheck_password,
tests/auth_tests/test_hashers.py:185:38    - Unknown word (letmein)    -- encoded = make_password("letmein", hasher="bcrypt")
tests/auth_tests/test_hashers.py:195:45    - Unknown word (letmein)    -- assertTrue(check_password("letmein", encoded, setter,
tests/auth_tests/test_hashers.py:202:45    - Unknown word (letmein)    -- assertTrue(check_password("letmein", encoded, setter,
tests/auth_tests/test_hashers.py:216:38    - Unknown word (letmein)    -- encoded = make_password("letmein", hasher="bcrypt")
tests/auth_tests/test_hashers.py:271:31    - Unknown word (badencoded) -- passwords = ("lètmein_badencoded", "", None)
tests/auth_tests/test_hashers.py:301:14    - Unknown word (bcryptsha)  -- def test_bcryptsha256_salt_check(self)
tests/auth_tests/test_hashers.py:365:38    - Unknown word (letmein)    -- encoded = make_password("letmein")
tests/auth_tests/test_hashers.py:51:34     - Unknown word (lètmein)    -- encoded = make_password("lètmein")
tests/auth_tests/test_hashers.py:54:41     - Unknown word (lètmein)    -- assertTrue(check_password("lètmein", encoded))
tests/auth_tests/test_hashers.py:55:42     - Unknown word (lètmeinz)   -- assertFalse(check_password("lètmeinz", encoded))
tests/auth_tests/test_hashers.py:612:55    - Unknown word (QOXS)       -- 1,p=1$c29tZXNhbHQ$gwQOXSNhxiOxPOA0+PY10P9QFO
tests/auth_tests/test_hashers.py:612:59    - Unknown word (Nhxi)       -- 1$c29tZXNhbHQ$gwQOXSNhxiOxPOA0+PY10P9QFO"
tests/auth_tests/test_hashers.py:63:20     - Unknown word (acheck)     -- async def test_acheck_password(self):
tests/auth_tests/test_hashers.py:647:60    - Unknown word (Nklj)       -- 400,t=2,p=8$Y041dExhNkljRUUy$TMa6A8fPJh"
tests/auth_tests/test_hashers.py:648:14    - Unknown word (CAUX)       -- "CAUXRhJXCXdw"
tests/auth_tests/test_hashers.py:64:34     - Unknown word (lètmein)    -- encoded = make_password("lètmein")
tests/auth_tests/test_hashers.py:65:29     - Unknown word (acheck)     -- self.assertIs(await acheck_password("lètmein",
tests/auth_tests/test_hashers.py:65:46     - Unknown word (lètmein)    -- await acheck_password("lètmein", encoded), True)
tests/auth_tests/test_hashers.py:66:29     - Unknown word (acheck)     -- self.assertIs(await acheck_password("lètmeinz"
tests/auth_tests/test_hashers.py:66:46     - Unknown word (lètmeinz)   -- await acheck_password("lètmeinz", encoded), False)
tests/auth_tests/test_hashers.py:69:29     - Unknown word (acheck)     -- self.assertIs(await acheck_password("", blank_encoded
tests/auth_tests/test_hashers.py:84:34     - Unknown word (lètmein)    -- encoded = make_password("lètmein", "seasalt", "pbkdf
tests/auth_tests/test_hashers.py:92:42     - Unknown word (lètmeinz)   -- assertFalse(check_password("lètmeinz", encoded))
tests/auth_tests/test_management.py:1266:14   - Unknown word (usermodel)                     -- def test_usermodel_without_password(self
tests/auth_tests/test_management.py:1279:14   - Unknown word (usermodel)                     -- def test_usermodel_without_password_interactive
tests/auth_tests/test_management.py:141:53    - Unknown word (xfalia)     -- username = lambda: "J\xfalia"
tests/auth_tests/test_management.py:245:46    - Unknown word (xfalia)     -- create_user(username="J\xfalia", password="qwerty"
tests/auth_tests/test_management.py:246:52    - Unknown word (xfalia)     -- changepassword", username="J\xfalia", stdout=self.stdout
tests/auth_tests/test_management.py:330:18    - Unknown word (Uživatel)   -- "Uživatel (leave blank to use
tests/auth_tests/test_management.py:338:52    - Unknown word (eivatel)    -- verbose_name = _("u\u017eivatel")
tests/auth_tests/test_management.py:509:44    - Unknown word (mygroup)    -- objects.create(name="mygroup")
tests/auth_tests/test_management.py:539:44    - Unknown word (mygroup)    -- objects.create(name="mygroup")
tests/auth_tests/test_management.py:569:44    - Unknown word (mygroup)    -- objects.create(name="mygroup")
tests/auth_tests/test_management.py:811:21    - Unknown word (supremelycomplex) -- username = "supremelycomplex"
tests/auth_tests/test_management.py:815:14    - Unknown word (superduperunguessablepassword) -- "superduperunguessablepassword",
tests/auth_tests/test_management.py:816:14    - Unknown word (superduperunguessablepassword) -- "superduperunguessablepassword",
tests/auth_tests/test_management.py:863:14    - Unknown word (superduperunguessablepassword) -- "superduperunguessablepassword",
tests/auth_tests/test_management.py:864:14    - Unknown word (superduperunguessablepassword) -- "superduperunguessablepassword",
tests/auth_tests/test_management.py:913:14    - Unknown word (superduperunguessablepassword) -- "superduperunguessablepassword",
tests/auth_tests/test_middleware.py:27:33     - Unknown word (doesnt)     -- test_no_password_change_doesnt_invalidate_session(self
tests/auth_tests/test_middleware.py:53:20     - Unknown word (auser)      -- async def test_auser(self):
tests/auth_tests/test_middleware.py:55:36     - Unknown word (auser)      -- await self.request.auser()
tests/auth_tests/test_middleware.py:55:9      - Unknown word (auser)      -- auser = await self.request
tests/auth_tests/test_middleware.py:56:26     - Unknown word (auser)      -- self.assertEqual(auser, self.user)
tests/auth_tests/test_middleware.py:57:9      - Unknown word (auser)      -- auser_second = await self
tests/auth_tests/test_migrations.py:127:31    - Unknown word (proxys)     -- codename="display_proxys",
tests/auth_tests/test_migrations.py:128:31    - Unknown word (proxys)     -- name="May display proxys information",
tests/auth_tests/test_migrations.py:207:31    - Unknown word (proxys)     -- codename="display_proxys",
tests/auth_tests/test_migrations.py:208:31    - Unknown word (proxys)     -- name="May display proxys information",
tests/auth_tests/test_mixins.py:274:14    - Unknown word (permissioned) -- def test_permissioned_denied_redirect(self
tests/auth_tests/test_mixins.py:292:14    - Unknown word (permissioned) -- def test_permissioned_denied_exception_raised
tests/auth_tests/test_models.py:102:21    - Unknown word (examplemodelb) -- "delete_examplemodelb",
tests/auth_tests/test_models.py:227:43    - Unknown word (gibbberish)    -- User(password="some-gibbberish").has_usable_password
tests/auth_tests/test_models.py:234:25    - Unknown word (iamthe)        -- ohm_username = "iamtheΩ" # U+2126 OHM SIGN
tests/auth_tests/test_models.py:243:32    - Unknown word (iamthe)        -- username, "iamtheΩ"
tests/auth_tests/test_models.py:31:20     - Unknown word (auser)      -- async def test_auser_natural_key(self):
tests/auth_tests/test_models.py:330:20    - Unknown word (acheck)        -- async def test_acheck_password_upgrade(self
tests/auth_tests/test_models.py:333:34    - Unknown word (acheck)        -- assertIs(await user.acheck_password("foo"), True
tests/auth_tests/test_models.py:344:42    - Unknown word (acheck)        -- assertIs(await user.acheck_password("foo"), True
tests/auth_tests/test_models.py:355:49    - Unknown word (charliebrown)  -- and obj.username == "charliebrown":
tests/auth_tests/test_models.py:382:14    - Unknown word (charliebrown)  -- "charliebrown", "charlie@brown.com
tests/auth_tests/test_models.py:388:14    - Unknown word (superpassword) -- "superpassword",
tests/auth_tests/test_models.py:400:23    - Unknown word (nodots)        -- for perm in ("nodots", "too.many.dots",
tests/auth_tests/test_models.py:40:20     - Unknown word (agroup)     -- async def test_agroup_natural_key(self):
tests/auth_tests/test_models.py:516:27    - Unknown word (isactive)      -- def test_builtin_user_isactive(self):
tests/auth_tests/test_models.py:634:51    - Unknown word (customemailfield) -- objects.get(codename="view_customemailfield")
tests/auth_tests/test_models.py:70:24     - Unknown word (examplemodela) -- model="examplemodela",
tests/auth_tests/test_models.py:74:24     - Unknown word (examplemodelb) -- model="examplemodelb",
tests/auth_tests/test_models.py:80:24     - Unknown word (examplemodelb) -- model="examplemodelb",
tests/auth_tests/test_models.py:84:24     - Unknown word (examplemodela) -- model="examplemodela",
tests/auth_tests/test_models.py:92:30     - Unknown word (examplemodelb) -- codename="delete_examplemodelb",
tests/auth_tests/test_models.py:97:30     - Unknown word (examplemodelb) -- codename="delete_examplemodelb",
tests/auth_tests/test_remote_user.py:107:34    - Unknown word (fakeuser)      -- headers = {self.header: "fakeuser"}
tests/auth_tests/test_remote_user.py:116:54    - Unknown word (alogin)        -- django.contrib.auth.alogin() which will call
tests/auth_tests/test_remote_user.py:248:22    - Unknown word (remoteuser)    -- # verify the remoteuser middleware will not
tests/auth_tests/test_remote_user.py:267:22    - Unknown word (remoteuser)    -- # verify the remoteuser middleware will not
tests/auth_tests/test_remote_user.py:270:33    - Unknown word (alogin)        -- await self.async_client.alogin(username="modeluser
tests/auth_tests/test_remote_user.py:271:15    - Unknown word (aauthenticate) -- await aauthenticate(username="modeluser
tests/auth_tests/test_remote_user.py:285:70    - Unknown word (newnewuser)    -- ", **{self.header: "newnewuser"})
tests/auth_tests/test_remote_user.py:287:60    - Unknown word (newnewuser)    -- new user, username is "newnewuser"
tests/auth_tests/test_remote_user.py:301:47    - Unknown word (newnewuser)    -- ", **{self.header: "newnewuser"}
tests/auth_tests/test_remote_user.py:304:60    - Unknown word (newnewuser)    -- new user, username is "newnewuser"
tests/auth_tests/test_remote_user.py:442:20    - Unknown word (AUTHUSER)      -- header = "HTTP_AUTHUSER"
tests/auth_tests/test_remote_user.py:452:20    - Unknown word (AUTHUSER)      -- header = "HTTP_AUTHUSER"
tests/auth_tests/test_remote_user.py:4:33      - Unknown word (aauthenticate) -- contrib.auth import aauthenticate, authenticate
tests/auth_tests/test_remote_user.py:82:34     - Unknown word (fakeuser)      -- headers = {self.header: "fakeuser"}
tests/auth_tests/test_templates.py:27:42     - Unknown word (jsmith)     -- objects.create_user("jsmith", "jsmith@example.com
tests/auth_tests/test_templates.py:29:45     - Unknown word (somepath)   -- request_factory.get("/somepath/")
tests/auth_tests/test_templates.py:57:48     - Unknown word (uidb)       -- reset_confirm", kwargs={"uidb64": "Bad", "token":
tests/auth_tests/test_templates.py:70:9      - Unknown word (uidb)       -- uidb64 = urlsafe_base64_encode
tests/auth_tests/test_templates.py:72:48     - Unknown word (uidb)       -- reset_confirm", kwargs={"uidb64": uidb64, "token"
tests/auth_tests/test_templates.py:72:57     - Unknown word (uidb)       -- , kwargs={"uidb64": uidb64, "token": token}
tests/auth_tests/test_templates.py:83:67     - Unknown word (jsmith)     -- utocomplete="username" value="jsmith">',
tests/auth_tests/test_templates.py:90:9      - Unknown word (uidb)       -- uidb64 = urlsafe_base64_encode
tests/auth_tests/test_tokens.py:100:42    - Unknown word (tokentestuser)   -- objects.create_user("tokentestuser", "test2@example.com
tests/auth_tests/test_tokens.py:120:42    - Unknown word (tokentestuser)   -- objects.create_user("tokentestuser", "test2@example.com
tests/auth_tests/test_tokens.py:149:22    - Unknown word (newsecret)       -- p2.secret = "newsecret"
tests/auth_tests/test_tokens.py:24:42     - Unknown word (tokentestuser) -- objects.create_user("tokentestuser", "test2@example.com
tests/auth_tests/test_tokens.py:24:80     - Unknown word (testpw)        -- test2@example.com", "testpw")
tests/auth_tests/test_tokens.py:34:42     - Unknown word (comebackkid)   -- objects.create_user("comebackkid", "test3@example.com
tests/auth_tests/test_tokens.py:34:78     - Unknown word (testpw)        -- test3@example.com", "testpw")
tests/auth_tests/test_tokens.py:35:50     - Unknown word (comebackkid)   -- objects.get(username="comebackkid")
tests/auth_tests/test_tokens.py:51:22     - Unknown word (changeemailuser) -- "changeemailuser",
tests/auth_tests/test_tokens.py:53:31     - Unknown word (testpw)          -- password="testpw",
tests/auth_tests/test_tokens.py:66:42     - Unknown word (tokentestuser)   -- objects.create_user("tokentestuser", "test2@example.com
tests/auth_tests/test_tokens.py:66:80     - Unknown word (testpw)          -- test2@example.com", "testpw")
tests/auth_tests/test_tokens.py:89:42     - Unknown word (tokentestuser)   -- objects.create_user("tokentestuser", "test2@example.com
tests/auth_tests/test_tokens.py:89:80     - Unknown word (testpw)          -- test2@example.com", "testpw")
tests/auth_tests/test_validators.py:270:44    - Unknown word (ᴮᴵᴳᴮᴵᴿᴰ)    -- usernames = ["joe", "René", "ᴮᴵᴳᴮᴵᴿᴰ", "أحمد"]
tests/auth_tests/test_validators.py:270:55    - Unknown word (أحمد)       -- "René", "ᴮᴵᴳᴮᴵᴿᴰ", "أحمد"]
tests/auth_tests/test_validators.py:274:14    - Unknown word (zerowidth)  -- "zerowidth\u200Bspace",
tests/auth_tests/test_validators.py:275:14    - Unknown word (nonbreaking) -- "nonbreaking\u00A0space",
tests/auth_tests/test_validators.py:277:14    - Unknown word (trailingnewline) -- "trailingnewline\u000A",
tests/auth_tests/test_validators.py:294:14    - Unknown word (أحمد)            -- "أحمد",
tests/auth_tests/test_validators.py:295:14    - Unknown word (trailingnewline) -- "trailingnewline\n",
tests/auth_tests/test_views.py:116:22    - Unknown word (uidb)       -- "uidb64": "aaaaaaa",
tests/auth_tests/test_views.py:1255:21   - Unknown word (doesnt)         -- def test_logout_doesnt_cache(self):
tests/auth_tests/test_views.py:1535:53   - Unknown word (rsaquo)         -- admin.username}</a>\n&rsaquo; Change password"
tests/auth_tests/test_views.py:1629:52   - Unknown word (rsaquo)         -- user.username}</a>\n&rsaquo; Set password"
tests/auth_tests/test_views.py:1709:29   - Unknown word (shouldnotchange) -- data["password"] = "shouldnotchange"
tests/auth_tests/test_views.py:1729:43   - Unknown word (uuiduser)        -- user_admin:auth_tests_uuiduser_change", args=(u.pk
tests/auth_tests/test_views.py:1739:64   - Unknown word (uuiduser)        -- form method="post" id="uuiduser_form">')
tests/auth_tests/test_views.py:280:35    - Unknown word (anewpassword) -- "new_password1": "anewpassword",
tests/auth_tests/test_views.py:281:36    - Unknown word (anewpassword) -- "new_password2": " anewpassword",
tests/auth_tests/test_views.py:286:47    - Unknown word (anewpassword) -- not u.check_password("anewpassword"))
tests/auth_tests/test_views.py:300:35    - Unknown word (anewpassword) -- "new_password1": "anewpassword",
tests/auth_tests/test_views.py:301:35    - Unknown word (anewpassword) -- "new_password2": "anewpassword",
tests/auth_tests/test_views.py:383:44    - Unknown word (passwordcustom) -- reset_url_token = "set-passwordcustom"
tests/auth_tests/test_views.py:448:51    - Unknown word (uidb)           -- resolver_match.kwargs["uidb64"]
tests/auth_tests/test_views.py:458:51    - Unknown word (uidb)           -- resolver_match.kwargs["uidb64"]
tests/auth_tests/test_views.py:460:51    - Unknown word (passwordcustom) -- custom/token/%s/set-passwordcustom/" % uuidb64
tests/auth_tests/test_views.py:471:43    - Unknown word (uidb)           -- URL path must contain 'uidb64' and 'token' parameters
tests/auth_tests/test_views.py:482:56    - Unknown word (uidb)           -- reset_confirm", kwargs={"uidb64": "abc", "token":
tests/auth_tests/urls.py:172:24    - Unknown word (uidb)       -- "reset/custom/<uidb64>/<token>/",
tests/auth_tests/urls.py:176:30    - Unknown word (uidb)       -- reset/custom/named/<uidb64>/<token>/",
tests/auth_tests/urls.py:182:30    - Unknown word (uidb)       -- reset/custom/token/<uidb64>/<token>/",
tests/auth_tests/urls.py:183:69    - Unknown word (passwordcustom) -- reset_url_token="set-passwordcustom"),
tests/auth_tests/urls.py:186:34    - Unknown word (uidb)           -- reset/post_reset_login/<uidb64>/<token>/",
tests/auth_tests/urls.py:190:49    - Unknown word (uidb)           -- login_custom_backend/<uidb64>/<token>/",
tests/backends/base/test_base.py:123:14    - Unknown word (executemany) -- def call_executemany(self, connection, params
tests/backends/base/test_base.py:124:11    - Unknown word (executemany) -- # executemany() must use an update
tests/backends/base/test_base.py:130:20    - Unknown word (executemany) -- cursor.executemany(sql, params)
tests/backends/base/test_base.py:150:23    - Unknown word (executemany) -- self.call_executemany(connection)
tests/backends/base/test_base.py:166:23    - Unknown word (executemany) -- self.call_executemany(connection)
tests/backends/base/test_creation.py:148:44    - Unknown word (DJANGOS)    -- os.environ, {"RUNNING_DJANGOS_TEST_SUITE": ""})
tests/backends/base/test_creation.py:156:17    - Unknown word (DJANGOS)    -- RUNNING_DJANGOS_TEST_SUITE is 'true
tests/backends/base/test_creation.py:186:36    - Unknown word (objectreference) -- "model": "backends.objectreference",
tests/backends/base/test_creation.py:251:43    - Unknown word (schoolclass)     -- '"model": "backends.schoolclass"', data)
tests/backends/base/test_creation.py:255:9     - Unknown word (sclass)          -- sclass = SchoolClass.objects
tests/backends/base/test_creation.py:259:13    - Unknown word (schoolclasses)   -- bus.schoolclasses.add(sclass)
tests/backends/base/test_creation.py:259:31    - Unknown word (sclass)          -- bus.schoolclasses.add(sclass)
tests/backends/base/test_creation.py:266:43    - Unknown word (schoolbus)       -- '"model": "backends.schoolbus"', data)
tests/backends/base/test_creation.py:267:43    - Unknown word (schoolclass)     -- '"model": "backends.schoolclass"', data)
tests/backends/base/test_creation.py:268:26    - Unknown word (schoolclasses)   -- self.assertIn(f'"schoolclasses": [{sclass.pk}]', data
tests/backends/base/test_creation.py:268:44    - Unknown word (sclass)          -- f'"schoolclasses": [{sclass.pk}]', data)
tests/backends/base/test_creation.py:35:22     - Unknown word (hodor)      -- prod_name = "hodor"
tests/backends/base/test_creation.py:44:22     - Unknown word (hodor)      -- test_name = "hodor"
tests/backends/base/test_creation.py:52:45     - Unknown word (hodor)      -- TEST_DATABASE_PREFIX + "hodor"
tests/backends/models.py:37:57     - Unknown word (schoolclasses) -- ).prefetch_related("schoolclasses")
tests/backends/models.py:42:5      - Unknown word (schoolclasses) -- schoolclasses = models.ManyToManyField
tests/backends/mysql/test_creation.py:14:66     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
tests/backends/mysql/test_creation.py:19:64     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
tests/backends/mysql/test_creation.py:38:57     - Unknown word (keepdb)     -- autoclobber=False, keepdb=False
tests/backends/mysql/test_creation.py:40:55     - Unknown word (keepdb)     -- shouldn't appear when keepdb is on
tests/backends/mysql/test_creation.py:41:70     - Unknown word (keepdb)     -- autoclobber=False, keepdb=True)
tests/backends/mysql/test_creation.py:80:34     - Unknown word (mysqldump)  -- "mysqldump",
tests/backends/mysql/test_schema.py:15:19     - Unknown word (hablas)     -- ("¿Tú hablas inglés?", "'¿Tú hablas
tests/backends/mysql/test_schema.py:15:42     - Unknown word (hablas)     -- hablas inglés?", "'¿Tú hablas inglés?'"),
tests/backends/oracle/test_creation.py:105:72    - Unknown word (sqls)       -- = creation.tblspace_sqls
tests/backends/oracle/test_creation.py:54:59     - Unknown word (keepdb)     -- test_db(verbosity=0, keepdb=False)
tests/backends/oracle/test_creation.py:55:65     - Unknown word (keepdb)     -- error is ignored when keepdb is on
tests/backends/oracle/test_creation.py:56:51     - Unknown word (keepdb)     -- test_db(verbosity=0, keepdb=True)
tests/backends/oracle/test_creation.py:60:55     - Unknown word (keepdb)     -- test_db(verbosity=0, keepdb=False)
tests/backends/oracle/test_creation.py:62:55     - Unknown word (keepdb)     -- test_db(verbosity=0, keepdb=True)
tests/backends/oracle/test_creation.py:92:27     - Unknown word (sqls)       -- self.tblspace_sqls = statements
tests/backends/oracle/test_introspection.py:68:16     - Unknown word (mview)      -- person_mview = connection.introspection
tests/backends/oracle/test_introspection.py:69:26     - Unknown word (MVIEW)      -- "TEST_PERSON_MVIEW"
tests/backends/oracle/test_introspection.py:74:52     - Unknown word (mview)      -- MATERIALIZED VIEW {person_mview} "
tests/backends/oracle/test_introspection.py:80:36     - Unknown word (mview)      -- cursor, person_mview
tests/backends/oracle/test_introspection.py:86:65     - Unknown word (mview)      -- MATERIALIZED VIEW {person_mview}")
tests/backends/oracle/test_operations.py:123:36    - Unknown word (VERYLONGMODELNAME)    -- ALTER TABLE "BACKENDS_VERYLONGMODELNAME540F" DISABLE CONSTRAINT
tests/backends/oracle/test_operations.py:131:43    - Unknown word (VERYLONGMODELNAME)    -- TRUNCATE TABLE "BACKENDS_VERYLONGMODELNAME540F";',
tests/backends/oracle/test_operations.py:142:33    - Unknown word (VERYLONGMODELN)       -- self.assertIn("BACKENDS_VERYLONGMODELN7BE2_SQ", statements
tests/backends/oracle/test_operations.py:16:21     - Unknown word (authorwithevenlongee) -- "schema_authorwithevenlongee869"
tests/backends/oracle/test_operations.py:18:44     - Unknown word (AUTHORWITHEVENLOB)    -- assertEqual(seq_name, "SCHEMA_AUTHORWITHEVENLOB0B8_SQ")
tests/backends/oracle/test_operations.py:67:36     - Unknown word (VERYLONGMODELNAME)    -- ALTER TABLE "BACKENDS_VERYLONGMODELNAME540F" DISABLE CONSTRAINT
tests/backends/oracle/test_operations.py:75:43     - Unknown word (VERYLONGMODELNAME)    -- TRUNCATE TABLE "BACKENDS_VERYLONGMODELNAME540F";',
tests/backends/oracle/test_operations.py:80:36     - Unknown word (VERYLONGMODELNAME)    -- ALTER TABLE "BACKENDS_VERYLONGMODELNAME540F" ENABLE CONSTRAINT
tests/backends/oracle/tests.py:110:51    - Unknown word (ssword)                                                      -- dict["PASSWORD"] = "p@ssword"
tests/backends/oracle/tests.py:113:22    - Unknown word (ssword)                                                      -- '/"p@ssword"@',
tests/backends/oracle/tests.py:25:27     - Unknown word (verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- "backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
tests/backends/oracle/tests.py:48:67     - Unknown word (SYSDATE)                                                     -- 1936-12-29 00:00' < SYSDATE"
tests/backends/postgresql/test_creation.py:101:63    - Unknown word (keepdb)     -- error is ignored when keepdb is on
tests/backends/postgresql/test_creation.py:102:70    - Unknown word (keepdb)     -- autoclobber=False, keepdb=True)
tests/backends/postgresql/test_creation.py:73:74     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
tests/backends/postgresql/test_creation.py:79:68     - Unknown word (keepdb)     -- cursor, parameters, keepdb=False):
tests/backends/postgresql/test_creation.py:99:57     - Unknown word (keepdb)     -- autoclobber=False, keepdb=False
tests/backends/postgresql/test_introspection.py:24:77     - Unknown word (pers)       -- person_id_seq RENAME TO pers_seq")
tests/backends/postgresql/test_introspection.py:28:76     - Unknown word (pers)       -- column": "id", "name": "pers_seq"}],
tests/backends/postgresql/tests.py:474:15    - Unknown word (awef)       -- a = ["awef"]
tests/backends/postgresql/tests.py:479:16    - Unknown word (awef)       -- a = ["ᄲawef"]
tests/backends/sqlite/test_operations.py:36:40     - Unknown word (verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz) -- DELETE FROM "backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz'
tests/backends/sqlite/test_operations.py:70:40     - Unknown word (verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz) -- DELETE FROM "backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzz'
tests/backends/sqlite/test_operations.py:84:24     - Unknown word (verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- "'backends_verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
tests/backends/sqlite/tests.py:74:31     - Unknown word (memorydb)   -- "NAME": "file:memorydb_test?mode=memory&cache
tests/backends/test_utils.py:78:24     - Unknown word (Nera)       -- ("Asia/Ust+Nera", ("Asia/Ust+Nera",
tests/backends/test_utils.py:78:42     - Unknown word (Nera)       -- Ust+Nera", ("Asia/Ust+Nera", None, None)),
tests/backends/test_utils.py:79:24     - Unknown word (Nera)       -- ("Asia/Ust-Nera", ("Asia/Ust-Nera",
tests/backends/test_utils.py:79:42     - Unknown word (Nera)       -- Ust-Nera", ("Asia/Ust-Nera", None, None)),
tests/backends/test_utils.py:80:24     - Unknown word (Nera)       -- ("Asia/Ust+Nera-02:00", ("Asia/Ust+Nera
tests/backends/tests.py:167:12    - Unknown word (executemany) -- An executemany call with too many/not
tests/backends/tests.py:177:24    - Unknown word (executemany) -- cursor.executemany(query, [(1, 2, 3)])
tests/backends/tests.py:179:24    - Unknown word (executemany) -- cursor.executemany(query, [(1,)])
tests/backends/tests.py:284:14    - Unknown word (paramless)   -- def test_paramless_no_escaping(self):
tests/backends/tests.py:303:29    - Unknown word (executemany) -- create_squares_with_executemany(self, args):
tests/backends/tests.py:323:24    - Unknown word (executemany) -- cursor.executemany(query, args)
tests/backends/tests.py:388:46    - Unknown word (Agnelline)   -- name="Mary", last_name="Agnelline").save()
tests/backends/tests.py:408:53    - Unknown word (Agnelline)   -- fetchall()), [("Mary", "Agnelline"), ("Peter", "Parker
tests/backends/tests.py:599:34    - Unknown word (MYISAM)      -- MySQL+InnoDB and MySQL+MYISAM (something we currently
tests/backends/tests.py:942:9     - Unknown word (SQLPK)       -- class MySQLPKZeroTests(TestCase):
tests/backends/tests.py:950:22    - Unknown word (autoval)     -- def test_zero_as_autoval(self):
tests/basic/tests.py:138:18    - Unknown word (datetimefields) -- def test_for_datetimefields_saves_as_much_precision
tests/basic/tests.py:503:43    - Unknown word (undashedvalue)  -- dashed-value": "1", "undashedvalue": "2"}
tests/basic/tests.py:505:38    - Unknown word (undashedvalue)  -- assertEqual(articles[0].undashedvalue, 2)
tests/basic/tests.py:531:14    - Unknown word (emptyqs)        -- def test_emptyqs(self):
tests/basic/tests.py:538:14    - Unknown word (emptyqs)        -- def test_emptyqs_values(self):
tests/basic/tests.py:546:14    - Unknown word (emptyqs)        -- def test_emptyqs_customqs(self):
tests/basic/tests.py:546:22    - Unknown word (customqs)       -- def test_emptyqs_customqs(self):
tests/basic/tests.py:562:14    - Unknown word (emptyqs)        -- def test_emptyqs_values_order(self):
tests/basic/tests.py:580:14    - Unknown word (emptyqs)        -- def test_emptyqs_distinct(self):
tests/basic/tests.py:75:14     - Unknown word (autofields) -- def test_autofields_generate_different_values
tests/basic/tests.py:941:9     - Unknown word (asos)           -- asos = ArticleSelectOnSave
tests/basic/tests.py:943:13    - Unknown word (asos)           -- asos.save()
tests/basic/tests.py:945:13    - Unknown word (asos)           -- asos.save(force_update=True
tests/basic/tests.py:951:17    - Unknown word (asos)           -- asos.save(force_update=True
tests/basic/tests.py:977:13    - Unknown word (asos)           -- asos = ArticleSelectOnSave
tests/bulk_create/tests.py:106:45    - Unknown word (Fillory)    -- ProxyMultiCountry(name="Fillory", iso_two_letter="FL
tests/bulk_create/tests.py:112:50    - Unknown word (Fillory)    -- ProxyMultiProxyCountry(name="Fillory", iso_two_letter="FL
tests/bulk_create/tests.py:119:36    - Unknown word (Qwghlm)     -- ProxyCountry(name="Qwghlm", iso_two_letter="QW
tests/bulk_create/tests.py:120:31    - Unknown word (Tortall)    -- Country(name="Tortall", iso_two_letter="TA
tests/bulk_create/tests.py:125:15    - Unknown word (Qwghlm)     -- {"Qwghlm", "Tortall"},
tests/bulk_create/tests.py:125:25    - Unknown word (Tortall)    -- {"Qwghlm", "Tortall"},
tests/bulk_create/tests.py:138:18    - Unknown word (Qwghlm)     -- "Qwghlm",
tests/bulk_create/tests.py:139:18    - Unknown word (Tortall)    -- "Tortall",
tests/bulk_create/tests.py:179:22    - Unknown word (autoval)    -- def test_zero_as_autoval(self):
tests/bulk_create/tests.py:523:33    - Unknown word (relatedmodel) -- update_fields=["relatedmodel"],
tests/bulk_create/tests.py:561:33    - Unknown word (relatedmodel) -- unique_fields=["relatedmodel"],
tests/bulk_create/tests.py:77:63     - Unknown word (CLOB)       -- bytes, must be set as a CLOB on Oracle
tests/cache/tests.py:1248:26   - Unknown word (doesnt)               -- def test_second_call_doesnt_crash(self):
tests/cache/tests.py:1615:7    - Unknown word (libmemcached)         -- # libmemcached manages its own connections
tests/cache/tests.py:1628:36   - Unknown word (nodelay)              -- "behaviors": {"tcp_nodelay": True},
tests/cache/tests.py:1634:54   - Unknown word (nodelay)              -- cache.behaviors["tcp_nodelay"], int(True))
tests/cache/tests.py:1670:42   - Unknown word (serde)                -- cache.default_kwargs["serde"]._serialize_func.keywords
tests/cache/tests.py:1679:32   - Unknown word (serde)                -- client.serde._serialize_func.keywords
tests/cache/tests.py:1743:26   - Unknown word (enoent)               -- def test_get_ignores_enoent(self):
tests/cache/tests.py:1751:42   - Unknown word (umasks)               -- only partially supports umasks and chmod.",
tests/cache/tests.py:1755:53   - Unknown word (filebasedcache)       -- dirname) / "nested" / "filebasedcache"
tests/cache/tests.py:1771:38   - Unknown word (filenotfound)         -- does_not_ignore_non_filenotfound_exceptions(self):
tests/cache/tests.py:2216:28   - Unknown word (cacheprefix)          -- "KEY_PREFIX": "cacheprefix",
tests/cache/tests.py:228:31    - Unknown word (Iñtërnâtiônàlizætiøn) -- "unicode_ascii": "Iñtërnâtiônàlizætiøn1",
tests/cache/tests.py:229:14    - Unknown word (Iñtërnâtiônàlizætiøn) -- "Iñtërnâtiônàlizætiøn": "Iñtërnâtiônàlizæti
tests/cache/tests.py:229:38    - Unknown word (Iñtërnâtiônàlizætiøn) -- rnâtiônàlizætiøn": "Iñtërnâtiônàlizætiøn2",
tests/cache/tests.py:2430:63   - Unknown word (somethingelse)        -- path, {"foo": "bar", "somethingelse": "true"})
tests/cache/tests.py:2439:28   - Unknown word (mundo)                -- es_message = "Hola mundo!"
tests/cache/tests.py:2474:25   - Unknown word (doesnt)               -- def test_middleware_doesnt_cache_streaming_response
tests/cache/tests.py:2496:28   - Unknown word (cacheprefix)          -- "KEY_PREFIX": "cacheprefix",
tests/cache/tests.py:295:31    - Unknown word (cacheprefix)          -- prefix": {"KEY_PREFIX": "cacheprefix{}".format(os.getpid
tests/cache/tests.py:295:56    - Unknown word (getpid)               -- cacheprefix{}".format(os.getpid())},
tests/cache/tests.py:350:20    - Unknown word (somekey)              -- cache.set("somekey", "value")
tests/cache/tests.py:353:49    - Unknown word (somekey)              -- caches["prefix"].has_key("somekey"), False)
tests/cache/tests.py:355:31    - Unknown word (somekey)              -- caches["prefix"].set("somekey", "value2")
tests/cache/tests.py:357:37    - Unknown word (somekey)              -- assertEqual(cache.get("somekey"), "value")
tests/cache/tests.py:358:48    - Unknown word (somekey)              -- caches["prefix"].get("somekey"), "value2")
tests/cache/tests.py:533:31    - Unknown word (Iñtërnâtiônàlizætiøn) -- "unicode_ascii": "Iñtërnâtiônàlizætiøn1",
tests/cache/tests.py:534:14    - Unknown word (Iñtërnâtiônàlizætiøn) -- "Iñtërnâtiônàlizætiøn": "Iñtërnâtiônàlizæti
tests/cache/tests_async.py:116:35    - Unknown word (ahas)       -- assertIs(await cache.ahas_key("expire3"), False
tests/cache/tests_async.py:122:31    - Unknown word (Iñtërnâtiônàlizætiøn) -- "unicode_ascii": "Iñtërnâtiônàlizætiøn1",
tests/cache/tests_async.py:123:14    - Unknown word (Iñtërnâtiônàlizætiøn) -- "Iñtërnâtiônàlizætiøn": "Iñtërnâtiônàlizæti
tests/cache/tests_async.py:123:38    - Unknown word (Iñtërnâtiônàlizætiøn) -- rnâtiônàlizætiøn": "Iñtërnâtiônàlizætiøn2",
tests/cache/tests_async.py:161:20    - Unknown word (aincr)                -- async def test_aincr_version(self):
tests/cache/tests_async.py:171:20    - Unknown word (adecr)                -- async def test_adecr_version(self):
tests/cache/tests_async.py:54:20     - Unknown word (ahas)       -- async def test_ahas_key(self):
tests/cache/tests_async.py:55:12     - Unknown word (ahas)       -- """ahas_key() doesn't ever return
tests/cache/tests_async.py:57:35     - Unknown word (ahas)       -- assertIs(await cache.ahas_key("hello1"), False
tests/cache/tests_async.py:58:35     - Unknown word (ahas)       -- assertIs(await cache.ahas_key("goodbye1"), False
tests/cache/tests_async.py:60:20     - Unknown word (aincr)      -- async def test_aincr(self):
tests/cache/tests_async.py:64:25     - Unknown word (aincr)      -- await cache.aincr("answer")
tests/cache/tests_async.py:66:25     - Unknown word (aincr)      -- await cache.aincr("does_not_exist")
tests/cache/tests_async.py:68:25     - Unknown word (aincr)      -- await cache.aincr("does_not_exist", -
tests/cache/tests_async.py:70:20     - Unknown word (adecr)      -- async def test_adecr(self):
tests/cache/tests_async.py:74:25     - Unknown word (adecr)      -- await cache.adecr("answer")
tests/cache/tests_async.py:76:25     - Unknown word (adecr)      -- await cache.adecr("does_not_exist")
tests/cache/tests_async.py:78:25     - Unknown word (adecr)      -- await cache.adecr("does_not_exist", -
tests/cache/tests_async.py:80:20     - Unknown word (atouch)     -- async def test_atouch(self):
tests/cache/tests_async.py:81:35     - Unknown word (atouch)     -- assertIs(await cache.atouch("key"), False)
tests/check_framework/test_model_field_deprecation.py:23:32     - Unknown word (WXXX)       -- id="fields.WXXX",
tests/check_framework/test_model_field_deprecation.py:72:32     - Unknown word (EXXX)       -- id="fields.EXXX",
tests/check_framework/test_security.py:319:37    - Unknown word (xframe)     -- assertEqual(base.check_xframe_options_middleware(None
tests/check_framework/test_security.py:325:37    - Unknown word (xframe)     -- assertEqual(base.check_xframe_options_middleware(None
tests/check_framework/test_security.py:338:37    - Unknown word (xframe)     -- assertEqual(base.check_xframe_deny(None), [base.W
tests/check_framework/test_security.py:346:37    - Unknown word (xframe)     -- assertEqual(base.check_xframe_deny(None), [])
tests/check_framework/test_security.py:352:14    - Unknown word (xframe)     -- def test_xframe_deny(self):
tests/check_framework/test_security.py:519:14    - Unknown word (badkey)     -- "badkey",
tests/check_framework/test_security.py:533:14    - Unknown word (badkey)     -- "badkey1",
tests/check_framework/test_security.py:534:14    - Unknown word (badkey)     -- "badkey2",
tests/check_framework/test_translation.py:16:36     - Unknown word (extlang)    -- sgn-ase", # language+extlang
tests/check_framework/test_translation.py:30:32     - Unknown word (subtag)     -- "en--us", # empty subtag.
tests/check_framework/tests.py:223:51    - Unknown word (missingtag) -- system check with the "missingtag" tag.'
tests/check_framework/tests.py:225:42    - Unknown word (missingtag) -- command("check", tags=["missingtag"])
tests/check_framework/tests.py:273:32    - Unknown word (myerrorcheck) -- [Error("Error", id="myerrorcheck.E001")]
tests/check_framework/tests.py:277:36    - Unknown word (mywarningcheck) -- Warning("Warning", id="mywarningcheck.E001")]
tests/check_framework/tests.py:289:49    - Unknown word (myerrorcheck)   -- SILENCED_SYSTEM_CHECKS=["myerrorcheck.E001"])
tests/check_framework/tests.py:300:49    - Unknown word (mywarningcheck) -- SILENCED_SYSTEM_CHECKS=["mywarningcheck.E001"])
tests/check_framework/tests.py:368:15    - Unknown word (reimports)      -- "Spawning reimports modules, overwriting
tests/constraints/models.py:121:23    - Unknown word (sheld)      -- name="sheld_init_immediate_uniq
tests/constraints/tests.py:1316:58   - Unknown word (sheld)      -- connection.ops.quote_name("sheld_init_immediate_uniq
tests/constraints/tests.py:261:36    - Unknown word (childmodel) -- assertIn("constraints_childmodel_adult", constraints
tests/contenttypes_tests/test_models.py:147:37    - Unknown word (modelcreatedonthefly) -- assertEqual(ct.model, "modelcreatedonthefly")
tests/contenttypes_tests/test_models.py:148:36    - Unknown word (modelcreatedonthefly) -- assertEqual(str(ct), "modelcreatedonthefly")
tests/contenttypes_tests/test_operations.py:105:59    - Unknown word (renamedfoo) -- types.filter(model="renamedfoo").exists())
tests/contenttypes_tests/test_operations.py:115:60    - Unknown word (renamedfoo) -- types.filter(model="renamedfoo").exists())
tests/contenttypes_tests/test_operations.py:132:56    - Unknown word (renamedfoo) -- contenttypes_tests", model="renamedfoo"
tests/contenttypes_tests/test_operations.py:67:56     - Unknown word (renamedfoo) -- contenttypes_tests", model="renamedfoo"
tests/contenttypes_tests/test_operations.py:85:56     - Unknown word (renamedfoo) -- contenttypes_tests", model="renamedfoo"
tests/contenttypes_tests/test_views.py:125:14    - Unknown word (nonint)     -- def test_nonint_content_type(self):
tests/csrf_tests/tests.py:1240:41   - Unknown word (badvalue)   -- get_request(cookie="badvalue")
tests/csrf_tests/tests.py:39:16     - Unknown word (lccccccc)   -- TEST_SECRET = "lcccccccX2kcccccccY2jcccccccssIC
tests/csrf_tests/tests.py:39:26     - Unknown word (kccccccc)   -- SECRET = "lcccccccX2kcccccccY2jcccccccssIC"
tests/csrf_tests/tests.py:39:36     - Unknown word (jcccccccss) -- lcccccccX2kcccccccY2jcccccccssIC"
tests/csrf_tests/tests.py:41:25     - Unknown word (bcdefghij)  -- MASKED_TEST_SECRET1 = "1bcdefghij2bcdefghij3bcdefghij
tests/csrf_tests/tests.py:41:35     - Unknown word (bcdefghij)  -- SECRET1 = "1bcdefghij2bcdefghij3bcdefghij4bcdefghij
tests/csrf_tests/tests.py:41:45     - Unknown word (bcdefghij)  -- bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij
tests/csrf_tests/tests.py:41:55     - Unknown word (bcdefghij)  -- bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD
tests/csrf_tests/tests.py:41:65     - Unknown word (bcdefghij)  -- bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD"
tests/csrf_tests/tests.py:618:24    - Unknown word (referer)    -- def test_https_bad_referer(self):
tests/csrf_tests/tests.py:620:41    - Unknown word (referer)    -- HTTPS request with a bad referer is rejected
tests/csrf_tests/tests.py:625:24    - Unknown word (REFERER)    -- req.META["HTTP_REFERER"] = "https://www.evil
tests/csrf_tests/tests.py:631:14    - Unknown word (Referer)    -- "Referer checking failed - https
tests/csrf_tests/tests.py:636:16    - Unknown word (referer)    -- def _check_referer_rejects(self, mw, req
tests/csrf_tests/tests.py:638:23    - Unknown word (referer)    -- mw._check_referer(req)
tests/csrf_tests/tests.py:641:23    - Unknown word (referer)    -- def test_https_no_referer(self):
tests/csrf_tests/tests.py:650:14    - Unknown word (Referer)    -- "Referer checking failed - no
tests/csrf_tests/tests.py:650:43    - Unknown word (Referer)    -- checking failed - no Referer.",
tests/csrf_tests/tests.py:662:24    - Unknown word (REFERER)    -- req.META["HTTP_REFERER"] = "https://www.evil
tests/csrf_tests/tests.py:666:14    - Unknown word (Referer)    -- "Referer checking failed - https
tests/csrf_tests/tests.py:689:34    - Unknown word (Referer)    -- malformed_referer_msg = "Referer checking failed - Referer
tests/csrf_tests/tests.py:692:24    - Unknown word (REFERER)    -- req.META["HTTP_REFERER"] = "http://http://www
tests/csrf_tests/tests.py:702:24    - Unknown word (REFERER)    -- req.META["HTTP_REFERER"] = ""
tests/csrf_tests/tests.py:707:24    - Unknown word (REFERER)    -- req.META["HTTP_REFERER"] = "ØBöIß"
tests/csrf_tests/tests.py:83:31     - Unknown word (vcgiso)     -- "da4SrUiHJYoJ0HYQ0vcgisoIuFOxx4ER",
tests/custom_lookups/tests.py:124:21    - Unknown word (somecol)    -- # WHERE somecol <= '2013-12-31')
tests/custom_lookups/tests.py:180:36    - Unknown word (transformfunc) -- lookup_name.startswith("transformfunc_"):
tests/custom_lookups/tests.py:198:20    - Unknown word (inmonth)       -- lookup_name = "inmonth"
tests/custom_lookups/tests.py:222:22    - Unknown word (unixtime)      -- return "from_unixtime({})".format(lhs), params
tests/custom_lookups/tests.py:243:75    - Unknown word (justtheyear)   -- YearTransform, lookup_name="justtheyear"),
tests/custom_lookups/tests.py:245:66    - Unknown word (isactually)    -- Exactly, lookup_name="isactually"),
tests/custom_lookups/tests.py:248:52    - Unknown word (justtheyear)   -- objects.filter(birthdate__justtheyear__isactually=1981)
tests/custom_lookups/tests.py:248:65    - Unknown word (isactually)    -- birthdate__justtheyear__isactually=1981)
tests/custom_lookups/tests.py:289:50    - Unknown word (inmonth)       -- objects.filter(birthdate__inmonth=date(2012, 1, 15)),
tests/custom_lookups/tests.py:292:50    - Unknown word (inmonth)       -- objects.filter(birthdate__inmonth=date(2012, 2, 1)),
tests/custom_lookups/tests.py:295:50    - Unknown word (inmonth)       -- objects.filter(birthdate__inmonth=date(1981, 2, 28)),
tests/custom_lookups/tests.py:298:50    - Unknown word (inmonth)       -- objects.filter(birthdate__inmonth=date(2012, 3, 12)),
tests/custom_lookups/tests.py:310:13    - Unknown word (baseqs)        -- baseqs = Author.objects.order
tests/custom_lookups/tests.py:311:38    - Unknown word (baseqs)        -- assertSequenceEqual(baseqs.filter(age__div3=2)
tests/custom_lookups/tests.py:312:38    - Unknown word (baseqs)        -- assertSequenceEqual(baseqs.filter(age__div3__lte
tests/custom_lookups/tests.py:313:38    - Unknown word (baseqs)        -- assertSequenceEqual(baseqs.filter(age__div3__in
tests/custom_lookups/tests.py:314:38    - Unknown word (baseqs)        -- assertSequenceEqual(baseqs.filter(age__div3__in
tests/custom_lookups/tests.py:320:14    - Unknown word (foreignobject) -- def test_foreignobject_lookup_registration
tests/custom_lookups/tests.py:341:11    - Unknown word (Unregistration) -- # Unregistration should bust the cache
tests/custom_lookups/tests.py:403:34    - Unknown word (Mult)           -- models.IntegerField, Mult3BilateralTransform,
tests/custom_lookups/tests.py:411:15    - Unknown word (mult)           -- # mult3__div3 always leads
tests/custom_lookups/tests.py:413:36    - Unknown word (mult)           -- baseqs.filter(age__mult3__div3=42), [a1, a2
tests/custom_lookups/tests.py:415:63    - Unknown word (mult)           -- baseqs.filter(age__div3__mult3=42), [a3])
tests/custom_lookups/tests.py:423:48    - Unknown word (lastdigit)      -- objects.order_by("age__lastdigit")
tests/custom_lookups/tests.py:426:24    - Unknown word (fexpr)          -- def test_bilateral_fexpr(self):
tests/custom_lookups/tests.py:427:51    - Unknown word (Mult)           -- models.IntegerField, Mult3BilateralTransform)
tests/custom_lookups/tests.py:434:36    - Unknown word (mult)           -- baseqs.filter(age__mult3=models.F("age")),
tests/custom_lookups/tests.py:489:23    - Unknown word (fexpr)          -- def test_year_lte_fexpr(self):
tests/custom_lookups/tests.py:48:7      - Unknown word (Mult)       -- class Mult3BilateralTransform(models
tests/custom_lookups/tests.py:50:20     - Unknown word (mult)       -- lookup_name = "mult3"
tests/custom_lookups/tests.py:58:20     - Unknown word (lastdigit)  -- lookup_name = "lastdigit"
tests/custom_lookups/tests.py:634:7     - Unknown word (Customised)     -- class CustomisedMethodsTests(SimpleTestCase
tests/custom_lookups/tests.py:640:47    - Unknown word (transformfunc)  -- objects.filter(field__transformfunc_banana=3)
tests/custom_lookups/tests.py:645:20    - Unknown word (transformfunc)  -- field__transformfunc_banana__lookupfunc_elephants
tests/custom_lookups/tests.py:651:20    - Unknown word (transformfunc)  -- field__transformfunc_banana__transformfunc
tests/custom_lookups/tests.py:651:42    - Unknown word (transformfunc)  -- transformfunc_banana__transformfunc_pear=3
tests/custom_managers/models.py:52:10     - Unknown word (optin)      -- def _optin_private_method(self
tests/custom_managers/models.py:55:6      - Unknown word (optin)      -- _optin_private_method.queryset
tests/custom_managers/tests.py:500:25    - Unknown word (funperson)  -- lambda c: c.funperson.first_name,
tests/custom_managers/tests.py:510:25    - Unknown word (funperson)  -- lambda c: c.funperson.first_name,
tests/custom_managers/tests.py:521:25    - Unknown word (funperson)  -- lambda c: c.funperson.first_name,
tests/custom_managers/tests.py:69:26     - Unknown word (optin)      -- manager._optin_private_method()
tests/custom_pk/tests.py:133:9     - Unknown word (emps)       -- emps = Employee.objects.in
tests/custom_pk/tests.py:134:26    - Unknown word (emps)       -- self.assertEqual(emps[123], self.dan)
tests/custom_pk/tests.py:169:39    - Unknown word (jaźń)       -- objects.create(name="jaźń")
tests/datatypes/tests.py:86:14     - Unknown word (textfields) -- def test_textfields_str(self):
tests/datatypes/tests.py:89:9      - Unknown word (newd)       -- newd = Donut.objects.get
tests/datatypes/tests.py:90:31     - Unknown word (newd)       -- self.assertIsInstance(newd.review, str)
tests/dates/tests.py:35:19     - Unknown word (LMAO)       -- text="LMAO",
tests/datetimes/tests.py:33:19     - Unknown word (LMAO)       -- text="LMAO",
tests/db_functions/comparison/test_coalesce.py:10:12     - Unknown word (incididunt)  -- tempor incididunt ut labore et dolore
tests/db_functions/comparison/test_coalesce.py:10:26     - Unknown word (labore)      -- tempor incididunt ut labore et dolore magna aliqua
tests/db_functions/comparison/test_coalesce.py:10:36     - Unknown word (dolore)      -- incididunt ut labore et dolore magna aliqua."""
tests/db_functions/comparison/test_coalesce.py:10:49     - Unknown word (aliqua)      -- labore et dolore magna aliqua."""
tests/db_functions/comparison/test_coalesce.py:10:5      - Unknown word (tempor)      -- tempor incididunt ut labore
tests/db_functions/comparison/test_coalesce.py:15:57     - Unknown word (smithj)      -- John Smith", alias="smithj")
tests/db_functions/comparison/test_coalesce.py:19:41     - Unknown word (smithj)      -- order_by("name"), ["smithj", "Rhonda"], lambda
tests/db_functions/comparison/test_coalesce.py:29:62     - Unknown word (smithj)      -- John Smith", alias="smithj")
tests/db_functions/comparison/test_coalesce.py:56:57     - Unknown word (smithj)      -- John Smith", alias="smithj")
tests/db_functions/comparison/test_coalesce.py:9:27      - Unknown word (amet)       -- Lorem ipsum dolor sit amet, consectetur adipiscing
tests/db_functions/comparison/test_coalesce.py:9:33      - Unknown word (consectetur) -- ipsum dolor sit amet, consectetur adipiscing elit, sed
tests/db_functions/comparison/test_coalesce.py:9:45      - Unknown word (adipiscing)  -- sit amet, consectetur adipiscing elit, sed do eiusmod
tests/db_functions/comparison/test_coalesce.py:9:56      - Unknown word (elit)        -- consectetur adipiscing elit, sed do eiusmod
tests/db_functions/comparison/test_coalesce.py:9:69      - Unknown word (eiusmod)     -- adipiscing elit, sed do eiusmod
tests/db_functions/comparison/test_json_object.py:17:35     - Unknown word (Ivanov)     -- Author(name="Ivan Ivanov", alias="iivanov"),
tests/db_functions/comparison/test_json_object.py:17:51     - Unknown word (iivanov)    -- Ivan Ivanov", alias="iivanov"),
tests/db_functions/comparison/test_json_object.py:18:37     - Unknown word (Berthy)     -- Author(name="Bertha Berthy", alias="bberthy"),
tests/db_functions/comparison/test_json_object.py:18:53     - Unknown word (bberthy)    -- Bertha Berthy", alias="bberthy"),
tests/db_functions/comparison/test_json_object.py:28:58     - Unknown word (Ivanov)     -- object, {"name": "Ivan Ivanov"})
tests/db_functions/comparison/test_json_object.py:43:31     - Unknown word (ivanov)     -- "name": "ivan ivanov",
tests/db_functions/comparison/test_json_object.py:44:27     - Unknown word (iivanov)    -- "alias": "iivanov",
tests/db_functions/comparison/test_json_object.py:64:31     - Unknown word (Ivanov)     -- "name": "Ivan Ivanov",
tests/db_functions/comparison/test_json_object.py:66:31     - Unknown word (iivanov)    -- "alias": "iivanov",
tests/db_functions/comparison/test_json_object.py:82:31     - Unknown word (Ivanov)     -- "name": "Ivan Ivanov",
tests/db_functions/comparison/test_nullif.py:14:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/comparison/test_nullif.py:24:19     - Unknown word (smithj)     -- ("smithj",),
tests/db_functions/datetime/test_extract_trunc.py:166:27    - Unknown word (greaterthan) -- def test_extract_year_greaterthan_lookup(self):
tests/db_functions/datetime/test_extract_trunc.py:1679:9    - Unknown word (melb)        -- melb = zoneinfo.ZoneInfo
tests/db_functions/datetime/test_extract_trunc.py:1683:17   - Unknown word (melb)        -- day_melb=Extract("start_datetime
tests/db_functions/datetime/test_extract_trunc.py:1683:62   - Unknown word (melb)        -- datetime", "day", tzinfo=melb),
tests/db_functions/datetime/test_extract_trunc.py:1684:59   - Unknown word (melb)        -- datetime", "week", tzinfo=melb),
tests/db_functions/datetime/test_extract_trunc.py:1685:13   - Unknown word (isoyear)     -- isoyear=ExtractIsoYear("start
tests/db_functions/datetime/test_extract_trunc.py:1685:61   - Unknown word (melb)        -- start_datetime", tzinfo=melb),
tests/db_functions/datetime/test_extract_trunc.py:1704:36   - Unknown word (isoyear)     -- assertEqual(utc_model.isoyear, 2015)
tests/db_functions/datetime/test_extract_trunc.py:1722:37   - Unknown word (isoyear)     -- assertEqual(melb_model.isoyear, 2015)
tests/db_functions/datetime/test_extract_trunc.py:1737:13   - Unknown word (nera)        -- ust_nera = zoneinfo.ZoneInfo
tests/db_functions/datetime/test_extract_trunc.py:1737:48   - Unknown word (Nera)        -- zoneinfo.ZoneInfo("Asia/Ust-Nera")
tests/db_functions/datetime/test_extract_trunc.py:1741:62   - Unknown word (nera)        -- datetime", tzinfo=ust_nera),
tests/db_functions/datetime/test_extract_trunc.py:1748:36   - Unknown word (nera)        -- timezone.override(ust_nera):
tests/db_functions/datetime/test_extract_trunc.py:1749:17   - Unknown word (nera)        -- ust_nera_model = qs.get()
tests/db_functions/datetime/test_extract_trunc.py:1751:30   - Unknown word (nera)        -- self.assertEqual(ust_nera_model.hour, 9)
tests/db_functions/datetime/test_extract_trunc.py:191:27    - Unknown word (lessthan)    -- def test_extract_year_lessthan_lookup(self):
tests/db_functions/datetime/test_now.py:12:27     - Unknown word (amet)       -- Lorem ipsum dolor sit amet, consectetur adipiscing
tests/db_functions/datetime/test_now.py:12:33     - Unknown word (consectetur) -- ipsum dolor sit amet, consectetur adipiscing elit, sed
tests/db_functions/datetime/test_now.py:12:45     - Unknown word (adipiscing)  -- sit amet, consectetur adipiscing elit, sed do eiusmod
tests/db_functions/datetime/test_now.py:12:56     - Unknown word (elit)        -- consectetur adipiscing elit, sed do eiusmod
tests/db_functions/datetime/test_now.py:12:69     - Unknown word (eiusmod)     -- adipiscing elit, sed do eiusmod
tests/db_functions/datetime/test_now.py:13:12     - Unknown word (incididunt)  -- tempor incididunt ut labore et dolore
tests/db_functions/datetime/test_now.py:13:26     - Unknown word (labore)      -- tempor incididunt ut labore et dolore magna aliqua
tests/db_functions/datetime/test_now.py:13:36     - Unknown word (dolore)      -- incididunt ut labore et dolore magna aliqua."""
tests/db_functions/datetime/test_now.py:13:49     - Unknown word (aliqua)      -- labore et dolore magna aliqua."""
tests/db_functions/datetime/test_now.py:13:5      - Unknown word (tempor)      -- tempor incididunt ut labore
tests/db_functions/tests.py:41:61     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/tests.py:54:61     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/tests.py:67:57     - Unknown word (SMITHJ)     -- John Smith", alias="SMITHJ")
tests/db_functions/tests.py:70:50     - Unknown word (smithj)     -- filter(alias=Upper(V("smithj"))),
tests/db_functions/tests.py:75:51     - Unknown word (smithj)     -- exclude(alias=Upper(V("smithj"))),
tests/db_functions/text/test_chr.py:12:68     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_chr.py:13:49     - Unknown word (Élena)      -- objects.create(name="Élena Jordan", alias="elena
tests/db_functions/text/test_concat.py:13:27     - Unknown word (amet)       -- Lorem ipsum dolor sit amet, consectetur adipiscing
tests/db_functions/text/test_concat.py:13:33     - Unknown word (consectetur) -- ipsum dolor sit amet, consectetur adipiscing elit, sed
tests/db_functions/text/test_concat.py:13:45     - Unknown word (adipiscing)  -- sit amet, consectetur adipiscing elit, sed do eiusmod
tests/db_functions/text/test_concat.py:13:56     - Unknown word (elit)        -- consectetur adipiscing elit, sed do eiusmod
tests/db_functions/text/test_concat.py:13:69     - Unknown word (eiusmod)     -- adipiscing elit, sed do eiusmod
tests/db_functions/text/test_concat.py:14:12     - Unknown word (incididunt)  -- tempor incididunt ut labore et dolore
tests/db_functions/text/test_concat.py:14:26     - Unknown word (labore)      -- tempor incididunt ut labore et dolore magna aliqua
tests/db_functions/text/test_concat.py:14:36     - Unknown word (dolore)      -- incididunt ut labore et dolore magna aliqua."""
tests/db_functions/text/test_concat.py:14:49     - Unknown word (aliqua)      -- labore et dolore magna aliqua."""
tests/db_functions/text/test_concat.py:14:5      - Unknown word (tempor)      -- tempor incididunt ut labore
tests/db_functions/text/test_concat.py:19:37     - Unknown word (Jayden)      -- objects.create(name="Jayden")
tests/db_functions/text/test_concat.py:20:57     - Unknown word (smithj)      -- John Smith", alias="smithj", goes_by="John")
tests/db_functions/text/test_concat.py:22:53     - Unknown word (adnoh)       -- name="Rhonda", alias="adnohR")
tests/db_functions/text/test_concat.py:28:18     - Unknown word (smithj)      -- "smithjJohn",
tests/db_functions/text/test_concat.py:30:18     - Unknown word (adnoh)       -- "adnohR",
tests/db_functions/text/test_concat.py:42:37     - Unknown word (Jayden)      -- objects.create(name="Jayden")
tests/db_functions/text/test_concat.py:43:57     - Unknown word (smithj)      -- John Smith", alias="smithj", goes_by="John")
tests/db_functions/text/test_concat.py:45:53     - Unknown word (adnoh)       -- name="Rhonda", alias="adnohR")
tests/db_functions/text/test_concat.py:52:18     - Unknown word (Jayden)      -- "Jayden ()",
tests/db_functions/text/test_left.py:11:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_left.py:17:50     - Unknown word (Rhond)      -- "name"), ["John ", "Rhond"], lambda a: a.name
tests/db_functions/text/test_left.py:22:41     - Unknown word (smithj)     -- order_by("name"), ["smithj", "rh"], lambda a: a
tests/db_functions/text/test_length.py:11:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_length.py:25:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_length.py:26:57     - Unknown word (smithj)     -- John Smith", alias="smithj1")
tests/db_functions/text/test_length.py:33:33     - Unknown word (smithj)     -- ("John Smith", "smithj"),
tests/db_functions/text/test_length.py:34:33     - Unknown word (smithj)     -- ("John Smith", "smithj1"),
tests/db_functions/text/test_lower.py:11:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_lower.py:35:61     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_md5.py:16:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_ord.py:12:68     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_ord.py:13:49     - Unknown word (Élena)      -- objects.create(name="Élena Jordan", alias="elena
tests/db_functions/text/test_pad.py:17:45     - Unknown word (Johnxyx)    -- , 7, Value("xy")), "Johnxyx"),
tests/db_functions/text/test_pad.py:19:44     - Unknown word (Johnxx)     -- name", 6, Value("x")), "Johnxx"),
tests/db_functions/text/test_replace.py:16:21     - Unknown word (middlename) -- without_middlename=Replace(F("name"), Value
tests/db_functions/text/test_replace.py:24:52     - Unknown word (middlename) -- (x.name, x.without_middlename),
tests/db_functions/text/test_reverse.py:13:68     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_reverse.py:14:49     - Unknown word (Élena)      -- objects.create(name="Élena Jordan", alias="elena
tests/db_functions/text/test_reverse.py:34:33     - Unknown word (htim)       -- ("John Smith", "htimS nhoJ", "gnirts citats
tests/db_functions/text/test_reverse.py:34:47     - Unknown word (gnirts)     -- Smith", "htimS nhoJ", "gnirts citats"),
tests/db_functions/text/test_reverse.py:34:54     - Unknown word (citats)     -- htimS nhoJ", "gnirts citats"),
tests/db_functions/text/test_reverse.py:35:19     - Unknown word (Élena)      -- ("Élena Jordan", "nadroJ anel
tests/db_functions/text/test_reverse.py:35:35     - Unknown word (nadro)      -- ("Élena Jordan", "nadroJ anelÉ", "gnirts citats
tests/db_functions/text/test_reverse.py:35:42     - Unknown word (anel)       -- lena Jordan", "nadroJ anelÉ", "gnirts citats")
tests/db_functions/text/test_reverse.py:35:51     - Unknown word (gnirts)     -- Jordan", "nadroJ anelÉ", "gnirts citats"),
tests/db_functions/text/test_reverse.py:35:58     - Unknown word (citats)     -- nadroJ anelÉ", "gnirts citats"),
tests/db_functions/text/test_reverse.py:36:35     - Unknown word (gnirts)     -- ("パイソン", "ンソイパ", "gnirts citats"),
tests/db_functions/text/test_reverse.py:36:42     - Unknown word (citats)     -- ン", "ンソイパ", "gnirts citats"),
tests/db_functions/text/test_right.py:12:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_right.py:23:41     - Unknown word (smithj)     -- order_by("name"), ["smithj", "da"], lambda a: a
tests/db_functions/text/test_right.py:38:18     - Unknown word (mith)       -- "mith",
tests/db_functions/text/test_sha1.py:16:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_sha224.py:18:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_sha256.py:16:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_sha384.py:16:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_sha512.py:16:38     - Unknown word (Élena)      -- Author(alias="Jordan Élena"),
tests/db_functions/text/test_strindex.py:14:43     - Unknown word (fullstop)   -- Author.objects.annotate(fullstop=StrIndex("name", Value
tests/db_functions/text/test_strindex.py:16:62     - Unknown word (fullstop)   -- 4, 0], lambda a: a.fullstop
tests/db_functions/text/test_substr.py:10:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_substr.py:25:41     - Unknown word (smithj)     -- order_by("name"), ["smithj", "rhond"], lambda a
tests/db_functions/text/test_substr.py:25:51     - Unknown word (rhond)      -- name"), ["smithj", "rhond"], lambda a: a.alias
tests/db_functions/text/test_substr.py:29:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_substr.py:33:22     - Unknown word (smithj)     -- ).get(alias="smithj")
tests/db_functions/text/test_substr.py:42:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_upper.py:11:57     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_functions/text/test_upper.py:34:61     - Unknown word (smithj)     -- John Smith", alias="smithj")
tests/db_typecasts/tests.py:77:17     - Unknown word (inpt)       -- for inpt, expected in v:
tests/db_typecasts/tests.py:78:40     - Unknown word (inpt)       -- with self.subTest(k=k, inpt=inpt):
tests/db_typecasts/tests.py:78:45     - Unknown word (inpt)       -- self.subTest(k=k, inpt=inpt):
tests/db_typecasts/tests.py:79:49     - Unknown word (inpt)       -- getattr(typecasts, k)(inpt)
tests/db_typecasts/tests.py:84:31     - Unknown word (inpt)       -- % (k, inpt, expected, got),
tests/db_utils/tests.py:65:14     - Unknown word (reraising)  -- def test_reraising_backend_specific_database
tests/db_utils/tests.py:75:62     - Unknown word (sqlstate)   -- exception.__cause__.diag.sqlstate)
tests/db_utils/tests.py:79:57     - Unknown word (pgerror)    -- exception.__cause__.pgerror)
tests/dbshell/test_mysql.py:100:32    - Unknown word (deprecatedoptiondbname) -- "db": "deprecatedoptiondbname",
tests/dbshell/test_mysql.py:102:36    - Unknown word (deprecatedoptionpassword) -- "passwd": "deprecatedoptionpassword",
tests/dbshell/test_mysql.py:112:21    - Unknown word (someuser)                 -- "--user=someuser",
tests/dbshell/test_mysql.py:116:14    - Unknown word (somedbname)               -- "somedbname",
tests/dbshell/test_mysql.py:118:39    - Unknown word (somepassword)             -- env = {"MYSQL_PWD": "somepassword"}
tests/dbshell/test_mysql.py:122:30    - Unknown word (somedbname)               -- "NAME": "somedbname",
tests/dbshell/test_mysql.py:124:34    - Unknown word (somepassword)             -- "PASSWORD": "somepassword",
tests/dbshell/test_mysql.py:138:14    - Unknown word (somedbname)               -- "somedbname",
tests/dbshell/test_mysql.py:140:39    - Unknown word (somepassword)             -- env = {"MYSQL_PWD": "somepassword"}
tests/dbshell/test_mysql.py:161:23    - Unknown word (sslca)                    -- "--ssl-ca=sslca",
tests/dbshell/test_mysql.py:177:36    - Unknown word (sslca)                    -- "ca": "sslca",
tests/dbshell/test_mysql.py:26:21     - Unknown word (someuser)   -- "--user=someuser",
tests/dbshell/test_mysql.py:29:14     - Unknown word (somedbname) -- "somedbname",
tests/dbshell/test_mysql.py:31:39     - Unknown word (somepassword) -- env = {"MYSQL_PWD": "somepassword"}
tests/dbshell/test_mysql.py:35:30     - Unknown word (somedbname)   -- "NAME": "somedbname",
tests/dbshell/test_mysql.py:36:30     - Unknown word (someuser)     -- "USER": "someuser",
tests/dbshell/test_mysql.py:37:34     - Unknown word (somepassword) -- "PASSWORD": "somepassword",
tests/dbshell/test_mysql.py:52:21     - Unknown word (optionuser)   -- "--user=optionuser",
tests/dbshell/test_mysql.py:53:21     - Unknown word (optionhost)   -- "--host=optionhost",
tests/dbshell/test_mysql.py:64:38     - Unknown word (settingdbname) -- "NAME": "settingdbname",
tests/dbshell/test_mysql.py:65:38     - Unknown word (settinguser)   -- "USER": "settinguser",
tests/dbshell/test_mysql.py:66:42     - Unknown word (settingpassword) -- "PASSWORD": "settingpassword",
tests/dbshell/test_mysql.py:67:38     - Unknown word (settinghost)     -- "HOST": "settinghost",
tests/dbshell/test_mysql.py:71:42     - Unknown word (optionuser)      -- "user": "optionuser",
tests/dbshell/test_mysql.py:73:42     - Unknown word (optionhost)      -- "host": "optionhost",
tests/dbshell/test_mysql.py:84:21     - Unknown word (someuser)        -- "--user=someuser",
tests/dbshell/test_mysql.py:93:30     - Unknown word (settingdbname)   -- "NAME": "settingdbname",
tests/dbshell/test_mysql.py:94:30     - Unknown word (someuser)        -- "USER": "someuser",
tests/dbshell/test_mysql.py:95:34     - Unknown word (settingpassword) -- "PASSWORD": "settingpassword",
tests/dbshell/test_oracle.py:10:72     - Unknown word (rlwrap)     -- dict, parameters=None, rlwrap=False):
tests/dbshell/test_oracle.py:14:52     - Unknown word (rlwrap)     -- return_value="/usr/bin/rlwrap" if rlwrap else None
tests/dbshell/test_oracle.py:14:63     - Unknown word (rlwrap)     -- /usr/bin/rlwrap" if rlwrap else None
tests/dbshell/test_oracle.py:18:22     - Unknown word (rlwrap)     -- def test_without_rlwrap(self):
tests/dbshell/test_oracle.py:25:69     - Unknown word (rlwrap)     -- connection.settings_dict, rlwrap=False),
tests/dbshell/test_postgresql.py:101:19    - Unknown word (PGPASSFILE)    -- {"PGPASSFILE": "~/.custompgpass"
tests/dbshell/test_postgresql.py:101:36    - Unknown word (custompgpass)  -- {"PGPASSFILE": "~/.custompgpass"},
tests/dbshell/test_postgresql.py:109:41    - Unknown word (custompgpass)  -- "passfile": "~/.custompgpass",
tests/dbshell/test_postgresql.py:115:19    - Unknown word (PGSERVICE)     -- {"PGSERVICE": "django_test", "PGPASSFILE
tests/dbshell/test_postgresql.py:115:47    - Unknown word (PGPASSFILE)    -- PGSERVICE": "django_test", "PGPASSFILE": "~/.custompgpass"
tests/dbshell/test_postgresql.py:115:64    - Unknown word (custompgpass)  -- , "PGPASSFILE": "~/.custompgpass"},
tests/dbshell/test_postgresql.py:137:21    - Unknown word (rôle)          -- username = "rôle"
tests/dbshell/test_postgresql.py:138:21    - Unknown word (sésame)        -- password = "sésame"
tests/dbshell/test_postgresql.py:180:65    - Unknown word (somepassword)  -- args_env({"PASSWORD": "somepassword"}, [])
tests/dbshell/test_postgresql.py:187:27    - Unknown word (somepassword)  -- self.assertNotIn("somepassword", str(ctx.exception
tests/dbshell/test_postgresql.py:25:30     - Unknown word (someuser)   -- "USER": "someuser",
tests/dbshell/test_postgresql.py:26:34     - Unknown word (somepassword) -- "PASSWORD": "somepassword",
tests/dbshell/test_postgresql.py:32:33     - Unknown word (someuser)     -- ["psql", "-U", "someuser", "-h", "somehost",
tests/dbshell/test_postgresql.py:33:33     - Unknown word (somepassword) -- {"PGPASSWORD": "somepassword"},
tests/dbshell/test_postgresql.py:37:14     - Unknown word (nopass)       -- def test_nopass(self):
tests/dbshell/test_postgresql.py:42:30     - Unknown word (someuser)     -- "USER": "someuser",
tests/dbshell/test_postgresql.py:48:33     - Unknown word (someuser)     -- ["psql", "-U", "someuser", "-h", "somehost",
tests/dbshell/test_postgresql.py:58:30     - Unknown word (someuser)     -- "USER": "someuser",
tests/dbshell/test_postgresql.py:72:22     - Unknown word (PGSSLCERT)    -- "PGSSLCERT": "client.crt",
tests/dbshell/test_postgresql.py:73:22     - Unknown word (PGSSLKEY)     -- "PGSSLKEY": "client.key",
tests/dbshell/test_postgresql.py:74:22     - Unknown word (PGSSLMODE)    -- "PGSSLMODE": "verify-ca",
tests/dbshell/test_postgresql.py:75:22     - Unknown word (PGSSLROOTCERT) -- "PGSSLROOTCERT": "root.crt",
tests/dbshell/test_postgresql.py:83:26     - Unknown word (PGSERVICE)     -- (["psql"], {"PGSERVICE": "django_test"}),
tests/dbshell/test_postgresql.py:95:41     - Unknown word (custompgpass)  -- "passfile": "~/.custompgpass",
tests/decorators/test_clickjacking.py:18:24     - Unknown word (xframe)     -- wrapped_view = xframe_options_deny(sync_view
tests/decorators/test_clickjacking.py:25:24     - Unknown word (xframe)     -- wrapped_view = xframe_options_deny(async_view
tests/decorators/test_clickjacking.py:7:5       - Unknown word (xframe)     -- xframe_options_deny,
tests/decorators/test_clickjacking.py:8:5       - Unknown word (xframe)     -- xframe_options_exempt,
tests/decorators/test_clickjacking.py:9:5       - Unknown word (xframe)     -- xframe_options_sameorigin,
tests/decorators/test_csrf.py:13:16     - Unknown word (bcdefghij)  -- CSRF_TOKEN = "1bcdefghij2bcdefghij3bcdefghij
tests/decorators/test_csrf.py:13:26     - Unknown word (bcdefghij)  -- TOKEN = "1bcdefghij2bcdefghij3bcdefghij4bcdefghij
tests/decorators/test_csrf.py:13:36     - Unknown word (bcdefghij)  -- bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij
tests/decorators/test_csrf.py:13:46     - Unknown word (bcdefghij)  -- bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD
tests/decorators/test_csrf.py:13:56     - Unknown word (bcdefghij)  -- bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD"
tests/decorators/tests.py:282:16    - Unknown word (argumented) -- # Test for argumented decorator
tests/decorators/tests.py:283:14    - Unknown word (argumented) -- def test_argumented(self):
tests/decorators/tests.py:570:20    - Unknown word (argumented) -- async def test_argumented(self):
tests/decorators/tests.py:690:20    - Unknown word (markcoroutinefunction) -- async def test_markcoroutinefunction_applied(self):
tests/defer_regress/tests.py:148:22    - Unknown word (ofield)     -- # side has o2ofield or unique FK) - the
tests/defer_regress/tests.py:360:21    - Unknown word (defered)    -- def test_delete_defered_model(self):
tests/defer_regress/tests.py:365:21    - Unknown word (defered)    -- def test_delete_defered_proxy_model(self):
tests/delete/models.py:178:69    - Unknown word (rels)       -- NOTHING, related_name="rels")
tests/delete/tests.py:151:25    - Unknown word (qscount)    -- def test_do_nothing_qscount(self):
tests/delete/tests.py:405:9     - Unknown word (rchild)     -- rchild = RChild.objects.create
tests/delete/tests.py:413:26    - Unknown word (rchild)     -- (RChild, rchild.pk),
tests/delete/tests.py:424:26    - Unknown word (rchild)     -- (RChild, rchild.pk),
tests/delete/tests.py:565:32    - Unknown word (rchild)     -- parent_id = childchild.rchild_ptr.r_ptr_id
tests/delete/tests.py:566:31    - Unknown word (rchild)     -- child_id = childchild.rchild_ptr_id
tests/delete/tests.py:703:26    - Unknown word (revm)       -- def test_fast_delete_revm2m(self):
tests/delete/tests.py:778:9     - Unknown word (referer)    -- referer = Referrer.objects.create
tests/delete/tests.py:780:13    - Unknown word (referer)    -- referer.delete()
tests/delete/tests.py:789:21    - Unknown word (rels)       -- rels_count=models.Count(
tests/delete/tests.py:789:46    - Unknown word (rels)       -- count=models.Count("rels"),
tests/delete/tests.py:791:25    - Unknown word (rels)       -- .filter(rels_count=0)
tests/delete_regress/tests.py:317:30    - Unknown word (extraf)     -- ).extra(select={"extraf": "1"}).filter(pk=self
tests/delete_regress/tests.py:404:18    - Unknown word (querycount) -- def test_set_querycount(self):
tests/deprecation/tests.py:177:14    - Unknown word (removedafternextversionwarning) -- def test_removedafternextversionwarning_pending(self):
tests/dispatch/tests.py:102:31    - Unknown word (wref)       -- self.assertIsNone(wref())
tests/dispatch/tests.py:87:21     - Unknown word (garbaged)   -- def test_cached_garbaged_collected(self):
tests/dispatch/tests.py:96:9      - Unknown word (wref)       -- wref = weakref.ref(sender
tests/distinct_on_fields/models.py:41:5      - Unknown word (organisation) -- organisation = models.CharField(max
tests/distinct_on_fields/tests.py:101:13    - Unknown word (qset)         -- for qset, expected in qsets:
tests/distinct_on_fields/tests.py:101:31    - Unknown word (qsets)        -- for qset, expected in qsets:
tests/distinct_on_fields/tests.py:102:38    - Unknown word (qset)         -- assertSequenceEqual(qset, expected)
tests/distinct_on_fields/tests.py:103:30    - Unknown word (qset)         -- self.assertEqual(qset.count(), len(expected
tests/distinct_on_fields/tests.py:115:21    - Unknown word (unreffing)    -- # Test join unreffing
tests/distinct_on_fields/tests.py:21:59     - Unknown word (organisation) -- create(id=1, name="p1", organisation="o1")
tests/distinct_on_fields/tests.py:22:59     - Unknown word (organisation) -- create(id=2, name="p2", organisation="o1")
tests/distinct_on_fields/tests.py:23:59     - Unknown word (organisation) -- create(id=3, name="p3", organisation="o1")
tests/distinct_on_fields/tests.py:24:59     - Unknown word (organisation) -- create(id=4, name="p1", organisation="o2")
tests/distinct_on_fields/tests.py:38:12     - Unknown word (qset)         -- # (qset, expected) tuples
tests/distinct_on_fields/tests.py:39:9      - Unknown word (qsets)        -- qsets = (
tests/distinct_on_fields/tests.py:49:41     - Unknown word (organisation) -- Staff.objects.distinct("organisation").order_by("organisation
tests/expressions/models.py:107:7     - Unknown word (UUIDPK)     -- class UUIDPK(models.Model):
tests/expressions/models.py:113:33    - Unknown word (UUIDPK)     -- = models.ForeignKey(UUIDPK, models.CASCADE, null
tests/expressions/test_queryset_values.py:27:44     - Unknown word (Mustermann) -- firstname="Max", lastname="Mustermann", salary=30
tests/expressions/tests.py:110:40    - Unknown word (Mustermann) -- firstname="Max", lastname="Mustermann", salary=30
tests/expressions/tests.py:1182:61   - Unknown word (LOUTER)      -- join_type, constants.LOUTER)
tests/expressions/tests.py:1586:40   - Unknown word (modsalary)   -- Employee.objects.annotate(modsalary=F("salary") % 20)
tests/expressions/tests.py:1615:60   - Unknown word (Mustermann)  -- firstname="Max", lastname="Mustermann")
tests/expressions/tests.py:1706:14   - Unknown word (righthand)   -- def test_righthand_power(self):
tests/expressions/tests.py:1720:13   - Unknown word (sday)        -- cls.sday = sday = datetime.date
tests/expressions/tests.py:1720:20   - Unknown word (sday)        -- cls.sday = sday = datetime.date(201
tests/expressions/tests.py:1741:22   - Unknown word (sday)        -- assigned=sday,
tests/expressions/tests.py:1760:22   - Unknown word (sday)        -- assigned=sday,
tests/expressions/tests.py:1774:22   - Unknown word (sday)        -- assigned=sday - datetime.timedelta
tests/expressions/tests.py:214:34    - Unknown word (Examp)      -- F("name")[:6][:5], "Examp"), # Nested slicing
tests/expressions/tests.py:2499:46   - Unknown word (anothercol)  -- ExpressionList(F("col"), F("anothercol"))),
tests/expressions/tests.py:2500:39   - Unknown word (anothercol)  -- ExpressionList(F(col), F(anothercol))",
tests/expressions/tests.py:254:31    - Unknown word (mple)       -- ("after_three", ["mple Inc.", "bar Ltd.",
tests/expressions/tests.py:354:47    - Unknown word (Mustermann) -- "Frank Meyer", "Max Mustermann"],
tests/expressions/tests.py:372:46    - Unknown word (Rossum)     -- Guido", lastname="van Rossum"
tests/expressions/tests.py:407:36    - Unknown word (Funcs)      -- should be able to use Funcs when inserting new data
tests/expressions/tests.py:505:19    - Unknown word (multijoin)  -- # Reverse multijoin F() references and the
tests/expressions/tests.py:545:41    - Unknown word (Mustermann) -- firstname="Mary", lastname="Mustermann", salary=20
tests/expressions/tests.py:547:9     - Unknown word (mustermanns) -- mustermanns_by_seniority = Employee
tests/expressions/tests.py:548:23    - Unknown word (Mustermann)  -- lastname="Mustermann"
tests/expressions/tests.py:553:34    - Unknown word (mustermanns) -- assertSequenceEqual(mustermanns_by_seniority, [self
tests/expressions/tests.py:733:13    - Unknown word (UUIDPK)      -- u = UUIDPK.objects.create()
tests/expressions/tests.py:735:14    - Unknown word (UUIDPK)      -- qs = UUIDPK.objects.filter(id__in
tests/expressions/tests.py:79:5      - Unknown word (UUIDPK)     -- UUIDPK,
tests/expressions_case/tests.py:162:12    - Unknown word (rels)       -- fk_rels = FKCaseTestModel.objects
tests/expressions_case/tests.py:168:44    - Unknown word (rels)       -- When(fk_rel__in=fk_rels, then=F("fk_rel__integer
tests/expressions_case/tests.py:473:44    - Unknown word (somecase)   -- aseTestModel.objects.annotate(somecase=SOME_CASE).order_by
tests/expressions_case/tests.py:474:44    - Unknown word (somecase)   -- aseTestModel.objects.annotate(somecase=SOME_CASE)
tests/expressions_case/tests.py:476:33    - Unknown word (somecase)   -- .values_list("pk", "somecase"),
tests/expressions_case/tests.py:477:32    - Unknown word (somecase)   -- lambda x: (x.pk, x.somecase),
tests/expressions_window/tests.py:115:27    - Unknown word (Jenson)     -- ("Jenson", 45000, "Accounting
tests/expressions_window/tests.py:146:19    - Unknown word (Jenson)     -- ("Jenson", "Accounting", 450
tests/expressions_window/tests.py:1758:60   - Unknown word (Nowak)      -- department": "IT", "name": "Nowak", "salary": 32000})
tests/expressions_window/tests.py:1787:27   - Unknown word (Nowak)      -- ("Nowak", "IT", 32000, 3200
tests/expressions_window/tests.py:185:19    - Unknown word (Jenson)     -- ("Jenson", 45000, "Accounting
tests/expressions_window/tests.py:222:19    - Unknown word (Jenson)     -- ("Jenson", "Accounting", 3),
tests/expressions_window/tests.py:615:14    - Unknown word (cume)       -- def test_cume_dist(self):
tests/expressions_window/tests.py:621:13    - Unknown word (cume)       -- cume_dist=Window(
tests/expressions_window/tests.py:626:27    - Unknown word (cume)       -- # Round result of cume_dist because Oracle
tests/expressions_window/tests.py:647:27    - Unknown word (cume)       -- round(row.cume_dist, 10),
tests/expressions_window/tests.py:76:23     - Unknown word (Jenson)     -- ("Jenson", 45000, "Accounting
tests/extra_regress/models.py:8:7       - Unknown word (Revisionable) -- class RevisionableModel(models.Model):
tests/extra_regress/tests.py:20:14     - Unknown word (Revisionable) -- rm = RevisionableModel.objects.create
tests/extra_regress/tests.py:37:14     - Unknown word (Revisionable) -- qs = RevisionableModel.objects.extra(
tests/extra_regress/tests.py:42:30     - Unknown word (Revisionable) -- "table": RevisionableModel._meta.db_table
tests/extra_regress/tests.py:54:15     - Unknown word (Revisionable) -- qs2 = RevisionableModel.objects.filter
tests/extra_regress/tests.py:6:28      - Unknown word (Revisionable) -- models import Order, RevisionableModel, TestObject
tests/field_deconstruction/tests.py:458:28    - Unknown word (barness)    -- upload_to="foo/barness", width_field="width
tests/field_deconstruction/tests.py:466:35    - Unknown word (barness)    -- "upload_to": "foo/barness",
tests/field_defaults/tests.py:220:37    - Unknown word (nocase)     -- Collate(Value("John"), "nocase"),
tests/file_storage/test_base.py:62:52     - Unknown word (monkeypatching) -- this is achieved by monkeypatching _save).
tests/file_storage/test_generate_filename.py:10:7      - Unknown word (AWSS)       -- class AWSS3Storage(Storage):
tests/file_storage/test_generate_filename.py:216:24    - Unknown word (awss)       -- def test_filefield_awss3_storage(self):
tests/file_storage/test_generate_filename.py:222:19    - Unknown word (AWSS)       -- storage = AWSS3Storage()
tests/file_storage/test_generate_filename.py:228:24    - Unknown word (AWSS)       -- expected_key = AWSS3Storage.prefix + folder
tests/file_storage/tests.py:1017:14   - Unknown word (stringio)   -- def test_stringio(self):
tests/file_storage/tests.py:1024:34   - Unknown word (stringio)   -- storage.save("tests/stringio", output)
tests/file_storage/tests.py:1143:63   - Unknown word (umasks)     -- only partially supports umasks and chmod."
tests/file_storage/tests.py:304:19    - Unknown word (doesnt)     -- def test_save_doesnt_close(self):
tests/file_storage/tests.py:589:73    - Unknown word (Trac)       -- than underscores, like Trac.
tests/file_storage/tests.py:742:27    - Unknown word (longext)    -- name = "file_name.longext"
tests/file_storage/tests.py:766:34    - Unknown word (stringio)   -- storage.save("tests/stringio", output)
tests/file_storage/tests.py:767:52    - Unknown word (stringio)   -- storage.exists("tests/stringio"))
tests/file_storage/tests.py:769:39    - Unknown word (stringio)   -- storage.open("tests/stringio") as f:
tests/file_storage/tests.py:780:60    - Unknown word (AUFS)       -- filename length (e.g. AUFS has 242).
tests/file_storage/tests.py:786:23    - Unknown word (pathconf)   -- return os.pathconf(dir_to_test, "PC_NAME
tests/file_storage/tests.py:908:31    - Unknown word (longext)    -- filename = "short.longext"
tests/file_uploads/tests.py:377:49    - Unknown word (monkeybusiness) -- uploader We have to do some monkeybusiness here to construct
tests/file_uploads/tests.py:660:14    - Unknown word (fileupload)     -- def test_fileupload_getlist(self):
tests/file_uploads/tests.py:688:14    - Unknown word (fileuploads)    -- def test_fileuploads_closed_at_request_end
tests/file_uploads/views.py:57:5      - Unknown word (largefile)  -- largefile = request.FILES["file
tests/file_uploads/views.py:59:23     - Unknown word (largefile)  -- obj.testfile.save(largefile.name, largefile)
tests/file_uploads/views.py:59:39     - Unknown word (largefile)  -- save(largefile.name, largefile)
tests/files/tests.py:230:14    - Unknown word (noname)     -- def test_noname_file_default_name(self
tests/files/tests.py:233:14    - Unknown word (noname)     -- def test_noname_file_get_size(self)
tests/files/tests.py:36:34     - Unknown word (Cómo)       -- UploadedFile(name="¿Cómo?", content_type="text
tests/files/tests.py:390:9     - Unknown word (brokenimg)  -- brokenimg.png is not a valid image
tests/files/tests.py:391:24    - Unknown word (brokenimg)  -- $ echo "123" > brokenimg.png
tests/files/tests.py:393:61    - Unknown word (brokenimg)  -- dirname(__file__), "brokenimg.png")
tests/files/tests.py:40:25     - Unknown word (djángö)     -- f = File(None, "djángö")
tests/files/tests.py:448:23    - Unknown word (CIFS)       -- filesystem is CIFS, or when relabel is
tests/files/tests.py:503:38    - Unknown word (quux)       -- write(b"foo bar baz quux\n")
tests/files/tests.py:509:38    - Unknown word (quux)       -- write(b"foo bar baz quux\n")
tests/filtered_relation/tests.py:303:23    - Unknown word (multijoin)  -- def test_with_m2m_multijoin(self):
tests/fixtures/models.py:4:63      - Unknown word (Fixure)     -- the database in bulk. Fixure data
tests/fixtures/tests.py:1160:59   - Unknown word (doesnt)       -- named 'this_fixture_doesnt_exist' found."
tests/fixtures/tests.py:1163:43   - Unknown word (doesnt)       -- loaddata", "this_fixture_doesnt_exist", stdout=stdout
tests/fixtures/tests.py:1176:59   - Unknown word (doesnt)       -- named 'this_fixture_doesnt_exist' found."
tests/fixtures/tests.py:1179:43   - Unknown word (doesnt)       -- loaddata", "this_fixture_doesnt_exist", verbosity=0
tests/fixtures/tests.py:1323:35   - Unknown word (circulara)    -- {"model": "fixtures.circulara", "pk": 1, '
tests/fixtures/tests.py:1325:34   - Unknown word (circularb)    -- {"model": "fixtures.circularb", "pk": 1, '
tests/fixtures/tests.py:1341:35   - Unknown word (circulara)    -- {"model": "fixtures.circulara", '
tests/fixtures/tests.py:1343:34   - Unknown word (circularb)    -- {"model": "fixtures.circularb", '
tests/fixtures/tests.py:308:25    - Unknown word (Stephane)   -- "<Visa: Stephane Grappelli Can add user
tests/fixtures/tests.py:308:34    - Unknown word (Grappelli)  -- "<Visa: Stephane Grappelli Can add user>",
tests/fixtures/tests.py:322:25    - Unknown word (Stephane)   -- "<Visa: Stephane Grappelli Can add user
tests/fixtures/tests.py:322:34    - Unknown word (Grappelli)  -- "<Visa: Stephane Grappelli Can add user, Can delete
tests/fixtures/tests.py:361:35    - Unknown word (Stephane)   -- "fields": {"name": "Stephane Grappelli"}, "model
tests/fixtures/tests.py:361:44    - Unknown word (Grappelli)  -- {"name": "Stephane Grappelli"}, "model": "fixtures
tests/fixtures/tests.py:399:34    - Unknown word (Stephane)   -- "fields": {"name": "Stephane Grappelli"}}, '
tests/fixtures/tests.py:399:43    - Unknown word (Grappelli)  -- {"name": "Stephane Grappelli"}}, '
tests/fixtures/tests.py:407:27    - Unknown word (Stephane)   -- '{"person": ["Stephane Grappelli"], "permissions
tests/fixtures/tests.py:407:36    - Unknown word (Grappelli)  -- person": ["Stephane Grappelli"], "permissions": '
tests/fixtures/tests.py:947:69    - Unknown word (someotherapp) -- verbosity=0, app_label="someotherapp"
tests/fixtures_regress/tests.py:1:3       - Unknown word (Unittests)  -- # Unittests for fixtures.
tests/fixtures_regress/tests.py:259:50    - Unknown word (ture)       -- installing fixture 'bad_fix.ture1': unkn is not a known
tests/fixtures_regress/tests.py:265:26    - Unknown word (ture)       -- "bad_fix.ture1.unkn",
tests/fixtures_regress/tests.py:270:14    - Unknown word (unimportable) -- def test_unimportable_serializer(self):
tests/fixtures_regress/tests.py:277:26    - Unknown word (ture)         -- "bad_fix.ture1.unkn",
tests/fixtures_regress/tests.py:412:41    - Unknown word (anatinus)     -- name="Ornithorhynchus anatinus",
tests/fixtures_regress/tests.py:442:40    - Unknown word (Panthera)     -- "latin_name": "Panthera leo",
tests/fixtures_regress/tests.py:452:40    - Unknown word (Dromaius)     -- "latin_name": "Dromaius novaehollandiae",
tests/fixtures_regress/tests.py:452:49    - Unknown word (novaehollandiae) -- latin_name": "Dromaius novaehollandiae",
tests/fixtures_regress/tests.py:462:56    - Unknown word (anatinus)        -- name": "Ornithorhynchus anatinus",
tests/fixtures_regress/tests.py:484:31    - Unknown word (widgetproxy)     -- "fixtures_regress.widgetproxy",
tests/fixtures_regress/tests.py:583:16    - Unknown word (mtoself)         -- "m2mtoself.json",
tests/fixtures_regress/tests.py:725:22    - Unknown word (Cryptonomicon)   -- "name": "Cryptonomicon", "author": ["Neal Stephenson
tests/fixtures_regress/tests.py:843:25    - Unknown word (Cryptonomicon)   -- "<Book: Cryptonomicon by Neal Stephenson
tests/fixtures_regress/tests.py:847:50    - Unknown word (Egan)            -- Permutation City by Greg Egan (available at Angus
tests/fixtures_regress/tests.py:94:41     - Unknown word (anatinus)   -- name="Ornithorhynchus anatinus",
tests/flatpages_tests/test_csrf.py:49:19     - Unknown word (sekrit)     -- url="/sekrit/",
tests/flatpages_tests/test_csrf.py:50:20     - Unknown word (Sekrit)     -- title="Sekrit Flatpage",
tests/flatpages_tests/test_csrf.py:51:31     - Unknown word (sekrit)     -- content="Isn't it sekrit!",
tests/flatpages_tests/test_csrf.py:57:28     - Unknown word (sekrit)     -- url="/location/sekrit/",
tests/flatpages_tests/test_csrf.py:58:20     - Unknown word (Sekrit)     -- title="Sekrit Nested Flatpage",
tests/flatpages_tests/test_csrf.py:59:31     - Unknown word (sekrit)     -- content="Isn't it sekrit and deep!",
tests/flatpages_tests/test_csrf.py:87:52     - Unknown word (sekrit)     -- get("/flatpage_root/sekrit/")
tests/flatpages_tests/test_csrf.py:89:76     - Unknown word (krit)       -- test@example.com", "s3krit")
tests/flatpages_tests/test_forms.py:137:23    - Unknown word (nosites)    -- def test_flatpage_nosites(self):
tests/flatpages_tests/test_forms.py:84:23     - Unknown word (doesnt)     -- def test_flatpage_doesnt_requires_trailing_slash
tests/flatpages_tests/test_middleware.py:110:76    - Unknown word (krit)       -- test@example.com", "s3krit")
tests/flatpages_tests/test_middleware.py:34:19     - Unknown word (sekrit)     -- url="/sekrit/",
tests/flatpages_tests/test_middleware.py:35:20     - Unknown word (Sekrit)     -- title="Sekrit Flatpage",
tests/flatpages_tests/test_middleware.py:36:31     - Unknown word (sekrit)     -- content="Isn't it sekrit!",
tests/flatpages_tests/test_middleware.py:42:28     - Unknown word (sekrit)     -- url="/location/sekrit/",
tests/flatpages_tests/test_middleware.py:43:20     - Unknown word (Sekrit)     -- title="Sekrit Nested Flatpage",
tests/flatpages_tests/test_middleware.py:44:31     - Unknown word (sekrit)     -- content="Isn't it sekrit and deep!",
tests/flatpages_tests/test_middleware.py:86:52     - Unknown word (sekrit)     -- get("/flatpage_root/sekrit/")
tests/flatpages_tests/test_middleware.py:88:76     - Unknown word (krit)       -- test@example.com", "s3krit")
tests/flatpages_tests/test_models.py:10:31     - Unknown word (urlencodes) -- test_get_absolute_url_urlencodes(self):
tests/flatpages_tests/test_models.py:26:58     - Unknown word (flatpagecaf) -- get_absolute_url(), "/flatpagecaf%C3%A9/")
tests/flatpages_tests/test_templatetags.py:109:48    - Unknown word (anonuser)   -- flatpages '/location/' for anonuser as location_flatpages
tests/flatpages_tests/test_templatetags.py:113:28    - Unknown word (anonuser)   -- ).render(Context({"anonuser": AnonymousUser()})
tests/flatpages_tests/test_templatetags.py:121:74    - Unknown word (krit)       -- test@example.com", "s3krit")
tests/flatpages_tests/test_templatetags.py:129:50    - Unknown word (Sekrit)     -- "A Nested Flatpage,Sekrit Nested Flatpage,")
tests/flatpages_tests/test_templatetags.py:32:19     - Unknown word (sekrit)     -- url="/sekrit/",
tests/flatpages_tests/test_templatetags.py:33:20     - Unknown word (Sekrit)     -- title="Sekrit Flatpage",
tests/flatpages_tests/test_templatetags.py:34:31     - Unknown word (sekrit)     -- content="Isn't it sekrit!",
tests/flatpages_tests/test_templatetags.py:40:28     - Unknown word (sekrit)     -- url="/location/sekrit/",
tests/flatpages_tests/test_templatetags.py:41:20     - Unknown word (Sekrit)     -- title="Sekrit Nested Flatpage",
tests/flatpages_tests/test_templatetags.py:42:31     - Unknown word (sekrit)     -- content="Isn't it sekrit and deep!",
tests/flatpages_tests/test_templatetags.py:70:35     - Unknown word (anonuser)   -- % get_flatpages for anonuser as flatpages %}"
tests/flatpages_tests/test_templatetags.py:74:28     - Unknown word (anonuser)   -- ).render(Context({"anonuser": AnonymousUser()})
tests/flatpages_tests/test_templatetags.py:79:74     - Unknown word (krit)       -- test@example.com", "s3krit")
tests/flatpages_tests/test_templatetags.py:88:48     - Unknown word (Sekrit)     -- Flatpage,A Nested Flatpage,Sekrit Nested Flatpage,Sekrit
tests/flatpages_tests/test_templatetags.py:88:71     - Unknown word (Sekrit)     -- Sekrit Nested Flatpage,Sekrit Flatpage,"
tests/flatpages_tests/test_views.py:34:19     - Unknown word (sekrit)     -- url="/sekrit/",
tests/flatpages_tests/test_views.py:35:20     - Unknown word (Sekrit)     -- title="Sekrit Flatpage",
tests/flatpages_tests/test_views.py:36:31     - Unknown word (sekrit)     -- content="Isn't it sekrit!",
tests/flatpages_tests/test_views.py:42:28     - Unknown word (sekrit)     -- url="/location/sekrit/",
tests/flatpages_tests/test_views.py:43:20     - Unknown word (Sekrit)     -- title="Sekrit Nested Flatpage",
tests/flatpages_tests/test_views.py:44:31     - Unknown word (sekrit)     -- content="Isn't it sekrit and deep!",
tests/flatpages_tests/test_views.py:83:52     - Unknown word (sekrit)     -- get("/flatpage_root/sekrit/")
tests/flatpages_tests/test_views.py:85:76     - Unknown word (krit)       -- test@example.com", "s3krit")
tests/foreign_object/test_forms.py:11:33     - Unknown word (foreignobject) -- manually deal with the foreignobject relation.
tests/foreign_object/test_tuple_lookups.py:75:17     - Unknown word (cust)       -- cust_1, cust_2, cust_3, cust_4, cust
tests/foreign_object/test_tuple_lookups.py:75:25     - Unknown word (cust)       -- cust_1, cust_2, cust_3, cust_4, cust_5 =
tests/foreign_object/test_tuple_lookups.py:75:33     - Unknown word (cust)       -- cust_1, cust_2, cust_3, cust_4, cust_5 = (
tests/foreign_object/test_tuple_lookups.py:75:41     - Unknown word (cust)       -- cust_2, cust_3, cust_4, cust_5 = (
tests/foreign_object/test_tuple_lookups.py:75:9      - Unknown word (cust)       -- cust_1, cust_2, cust_3, cust
tests/foreign_object/tests.py:412:43    - Unknown word (Otsikko)    -- , lang="fi", title="Otsikko", body="Diipadaapa"
tests/foreign_object/tests.py:412:59    - Unknown word (Diipadaapa) -- title="Otsikko", body="Diipadaapa"
tests/foreign_object/tests.py:416:57    - Unknown word (Lalalalala) -- title="Title", body="Lalalalala"
tests/foreign_object/tests.py:424:44    - Unknown word (Otsikko)    -- translation__title="Otsikko"
tests/foreign_object/tests.py:426:65    - Unknown word (Otsikko)    -- translation.title, "Otsikko")
tests/foreign_object/tests.py:429:43    - Unknown word (Atsikko)    -- , lang="fi", title="Atsikko", body="Diipadaapa"
tests/foreign_object/tests.py:429:59    - Unknown word (Diipadaapa) -- title="Atsikko", body="Diipadaapa", abstract="dipad"
tests/foreign_object/tests.py:429:82    - Unknown word (dipad)      -- Diipadaapa", abstract="dipad"
tests/foreign_object/tests.py:434:59    - Unknown word (lalalalala) -- title="A title", body="lalalalala", abstract="lala"
tests/foreign_object/tests.py:474:31    - Unknown word (newsarticle) -- "id, idea_things, newsarticle, pub_date, tag"
tests/foreign_object/tests.py:488:31    - Unknown word (newsarticle) -- "id, idea_things, newsarticle, pub_date, tag"
tests/foreign_object/tests.py:683:23    - Unknown word (foreignobjectrel) -- def test_pickling_foreignobjectrel(self):
tests/foreign_object/tests.py:689:47    - Unknown word (behaviour)        -- doesn't share the same behaviour.
tests/foreign_object/tests.py:698:23    - Unknown word (foreignobject)    -- def test_pickling_foreignobject(self):
tests/forms_tests/field_tests/test_base.py:23:20     - Unknown word (deepcopies) -- def test_field_deepcopies_widget_instance(self
tests/forms_tests/field_tests/test_datefield.py:131:12    - Unknown word (Geef)       -- # 'Geef een geldige datum op
tests/forms_tests/field_tests/test_datefield.py:131:21    - Unknown word (geldige)    -- # 'Geef een geldige datum op.' = 'Enter
tests/forms_tests/field_tests/test_datefield.py:132:49    - Unknown word (Voer)       -- errors, {"mydate": ["Voer een geldige datum in
tests/forms_tests/field_tests/test_datefield.py:132:58    - Unknown word (geldige)    -- mydate": ["Voer een geldige datum in."]})
tests/forms_tests/field_tests/test_decimalfield.py:78:14     - Unknown word (łąść)       -- "łąść",
tests/forms_tests/field_tests/test_durationfield.py:55:19     - Unknown word (nombre)     -- msg = "Le nombre de jours doit être entre
tests/forms_tests/field_tests/test_durationfield.py:55:29     - Unknown word (jours)      -- msg = "Le nombre de jours doit être entre {min
tests/forms_tests/field_tests/test_durationfield.py:55:40     - Unknown word (être)       -- nombre de jours doit être entre {min_days} et
tests/forms_tests/field_tests/test_emailfield.py:25:52     - Unknown word (xdfabc)     -- idn.xyz\xe4\xf6\xfc\xdfabc.part.com",
tests/forms_tests/field_tests/test_emailfield.py:26:47     - Unknown word (äöüßabc)    -- local@domain.with.idn.xyzäöüßabc.part.com"),
tests/forms_tests/field_tests/test_filefield.py:57:22     - Unknown word (मेरी)       -- "मेरी मँडराने वाली नाव सर
tests/forms_tests/field_tests/test_filefield.py:57:27     - Unknown word (मँडराने)    -- "मेरी मँडराने वाली नाव सर्पमीनों
tests/forms_tests/field_tests/test_filefield.py:57:35     - Unknown word (वाली)       -- "मेरी मँडराने वाली नाव सर्पमीनों से भर
tests/forms_tests/field_tests/test_filefield.py:57:44     - Unknown word (सर्पमीनो)   -- री मँडराने वाली नाव सर्पमीनों से भरी ह".encode()
tests/forms_tests/field_tests/test_jsonfield.py:124:20    - Unknown word (overquote)  -- should not overquote JSONField inputs.
tests/forms_tests/field_tests/test_jsonfield.py:40:44     - Unknown word (jaźń)       -- prepare_value(["你好，世界", "jaźń"]),
tests/forms_tests/field_tests/test_jsonfield.py:41:25     - Unknown word (jaźń)       -- '["你好，世界", "jaźń"]',
tests/forms_tests/field_tests/test_nullbooleanfield.py:25:20     - Unknown word (nullbool)   -- hidden_nullbool1 = NullBooleanField
tests/forms_tests/field_tests/test_nullbooleanfield.py:26:20     - Unknown word (nullbool)   -- hidden_nullbool2 = NullBooleanField
tests/forms_tests/field_tests/test_nullbooleanfield.py:31:48     - Unknown word (nullbool)   -- hidden" name="hidden_nullbool1" value="True" '
tests/forms_tests/field_tests/test_nullbooleanfield.py:32:28     - Unknown word (nullbool)   -- 'id="id_hidden_nullbool1">'
tests/forms_tests/field_tests/test_nullbooleanfield.py:33:48     - Unknown word (nullbool)   -- hidden" name="hidden_nullbool2" value="False" '
tests/forms_tests/field_tests/test_nullbooleanfield.py:52:9      - Unknown word (NULLBOOL)   -- NULLBOOL_CHOICES = (("1", "Yes
tests/forms_tests/field_tests/test_nullbooleanfield.py:55:69     - Unknown word (NULLBOOL)   -- RadioSelect(choices=NULLBOOL_CHOICES))
tests/forms_tests/field_tests/test_nullbooleanfield.py:56:69     - Unknown word (NULLBOOL)   -- RadioSelect(choices=NULLBOOL_CHOICES))
tests/forms_tests/field_tests/test_nullbooleanfield.py:57:69     - Unknown word (NULLBOOL)   -- RadioSelect(choices=NULLBOOL_CHOICES))
tests/forms_tests/field_tests/test_regexfield.py:65:27     - Unknown word (éèøç)       -- self.assertEqual("éèøçÎÎ你好", f.clean("éèøç
tests/forms_tests/field_tests/test_regexfield.py:65:47     - Unknown word (éèøç)       -- éèøçÎÎ你好", f.clean("éèøçÎÎ你好"))
tests/forms_tests/field_tests/test_slugfield.py:17:35     - Unknown word (ıçğüş)      -- assertEqual(f.clean("ıçğüş"), "ıçğüş")
tests/forms_tests/field_tests/test_slugfield.py:17:45     - Unknown word (ıçğüş)      -- ssertEqual(f.clean("ıçğüş"), "ıçğüş")
tests/forms_tests/tests/test_error_messages.py:178:14    - Unknown word (djangoproject) -- "djangoproject.com",
tests/forms_tests/tests/test_forms.py:119:19    - Unknown word (nonexistentfield) -- "Key 'nonexistentfield' not found in 'Person
tests/forms_tests/tests/test_forms.py:123:16    - Unknown word (nonexistentfield) -- p["nonexistentfield"]
tests/forms_tests/tests/test_forms.py:1336:31   - Unknown word (ducktyping)       -- SelectMultiple uses ducktyping so that MultiValueDictLike
tests/forms_tests/tests/test_forms.py:1382:36   - Unknown word (ducktyping)       -- MultipleHiddenInput uses ducktyping so that
tests/forms_tests/tests/test_forms.py:1892:25   - Unknown word (reuired)          -- ({"class": "reuired"}, {"class": "required
tests/forms_tests/tests/test_forms.py:1937:38   - Unknown word (unspec)           -- _init__(self, allow_unspec_gender=False, *args
tests/forms_tests/tests/test_forms.py:1940:26   - Unknown word (unspec)           -- if allow_unspec_gender:
tests/forms_tests/tests/test_forms.py:1945:26   - Unknown word (unspec)           -- f = Person(allow_unspec_gender=True)
tests/forms_tests/tests/test_forms.py:2139:47   - Unknown word (describedby)      -- widget_does_not_have_aria_describedby(self):
tests/forms_tests/tests/test_forms.py:2229:13   - Unknown word (realname)         -- realname = CharField(
tests/forms_tests/tests/test_forms.py:2242:17   - Unknown word (Realname)         -- <li>Realname: <input type="text"
tests/forms_tests/tests/test_forms.py:2242:52   - Unknown word (realname)         -- input type="text" name="realname" maxlength="10" required
tests/forms_tests/tests/test_forms.py:2273:64   - Unknown word (Contraseña)       -- PasswordInput, label="Contraseña (de nuevo)")
tests/forms_tests/tests/test_forms.py:2273:79   - Unknown word (nuevo)            -- label="Contraseña (de nuevo)")
tests/forms_tests/tests/test_forms.py:2282:17   - Unknown word (Contraseña)       -- <li>Contraseña (de nuevo):
tests/forms_tests/tests/test_forms.py:2282:32   - Unknown word (nuevo)            -- <li>Contraseña (de nuevo):
tests/forms_tests/tests/test_forms.py:2489:52   - Unknown word (stephane)         -- initial={"username": "stephane"}, auto_id=False)
tests/forms_tests/tests/test_forms.py:2493:69   - Unknown word (stephane)         -- name="username" value="stephane"
tests/forms_tests/tests/test_forms.py:2546:52   - Unknown word (babik)            -- initial={"username": "babik"}, auto_id=False)
tests/forms_tests/tests/test_forms.py:2550:69   - Unknown word (babik)            -- name="username" value="babik"
tests/forms_tests/tests/test_forms.py:2570:21   - Unknown word (stephane)         -- def initial_stephane():
tests/forms_tests/tests/test_forms.py:2571:21   - Unknown word (stephane)         -- return "stephane"
tests/forms_tests/tests/test_forms.py:2689:42   - Unknown word (stephane)         -- "username": initial_stephane, "options": initial
tests/forms_tests/tests/test_forms.py:2738:44   - Unknown word (Greatel)          -- CharField(initial="Greatel")
tests/forms_tests/tests/test_forms.py:2742:55   - Unknown word (Scrmbl)           -- Hans", "last_name": "Scrmbl", "birthday": "1974
tests/forms_tests/tests/test_forms.py:2760:31   - Unknown word (Scrmbl)           -- "last_name": "Scrmbl",
tests/forms_tests/tests/test_forms.py:2773:58   - Unknown word (djangonaut)       -- length=10, initial="djangonaut")
tests/forms_tests/tests/test_forms.py:2779:56   - Unknown word (djangonaut)       -- username"].value(), "djangonaut")
tests/forms_tests/tests/test_forms.py:2941:50   - Unknown word (Wählen)           -- PasswordInput, help_text="Wählen Sie mit Bedacht."
tests/forms_tests/tests/test_forms.py:2941:65   - Unknown word (Bedacht)          -- text="Wählen Sie mit Bedacht."
tests/forms_tests/tests/test_forms.py:2950:24   - Unknown word (Wählen)           -- span class="helptext">Wählen Sie mit Bedacht.</span
tests/forms_tests/tests/test_forms.py:2950:39   - Unknown word (Bedacht)          -- helptext">Wählen Sie mit Bedacht.</span></li>""",
tests/forms_tests/tests/test_forms.py:2957:24   - Unknown word (Wählen)           -- span class="helptext">Wählen Sie mit Bedacht.</span
tests/forms_tests/tests/test_forms.py:2957:39   - Unknown word (Bedacht)          -- helptext">Wählen Sie mit Bedacht.</span></p>""",
tests/forms_tests/tests/test_forms.py:2967:36   - Unknown word (Wählen)           -- span class="helptext">Wählen Sie mit Bedacht.</span
tests/forms_tests/tests/test_forms.py:2967:51   - Unknown word (Bedacht)          -- helptext">Wählen Sie mit Bedacht.</span></td></tr>""
tests/forms_tests/tests/test_forms.py:2973:51   - Unknown word (Wählen)           -- div class="helptext">Wählen Sie mit Bedacht.</div
tests/forms_tests/tests/test_forms.py:2973:66   - Unknown word (Bedacht)          -- helptext">Wählen Sie mit Bedacht.</div>'
tests/forms_tests/tests/test_forms.py:3043:39   - Unknown word (describedby)      -- widget_attrs_custom_aria_describedby(self):
tests/forms_tests/tests/test_forms.py:3044:16   - Unknown word (describedby)      -- # aria-describedby provided to the widget
tests/forms_tests/tests/test_forms.py:3050:47   - Unknown word (describedby)      -- TextInput(attrs={"aria-describedby": "custom-description
tests/forms_tests/tests/test_forms.py:3062:19   - Unknown word (describedby)      -- 'aria-describedby="custom-description
tests/forms_tests/tests/test_forms.py:3207:40   - Unknown word (Rendang)          -- FoodForm({"intl_name": "Rendang"})
tests/forms_tests/tests/test_forms.py:3210:57   - Unknown word (Rendang)          -- name="intl_name" value="Rendang"'
tests/forms_tests/tests/test_forms.py:3563:31   - Unknown word (मेरी)             -- "我隻氣墊船裝滿晒鱔.txt", "मेरी मँडराने वाली नाव सर
tests/forms_tests/tests/test_forms.py:3563:36   - Unknown word (मँडराने)          -- 氣墊船裝滿晒鱔.txt", "मेरी मँडराने वाली नाव सर्पमीनों
tests/forms_tests/tests/test_forms.py:3563:44   - Unknown word (वाली)             -- txt", "मेरी मँडराने वाली नाव सर्पमीनों से भर
tests/forms_tests/tests/test_forms.py:3563:53   - Unknown word (सर्पमीनो)         -- री मँडराने वाली नाव सर्पमीनों से भरी ह".encode()
tests/forms_tests/tests/test_forms.py:4205:54   - Unknown word (splithiddendatetime) -- birthday"].widget_type, "splithiddendatetime")
tests/forms_tests/tests/test_forms.py:4471:14   - Unknown word (baseform)            -- def test_baseform_repr(self):
tests/forms_tests/tests/test_forms.py:4496:72   - Unknown word (fakedate)            -- Lennon", "birthday": "fakedate"}
tests/forms_tests/tests/test_forms.py:4504:14   - Unknown word (baseform)            -- def test_baseform_repr_dont_trigger_validation
tests/forms_tests/tests/test_forms.py:4509:72   - Unknown word (fakedate)            -- Lennon", "birthday": "fakedate"}
tests/forms_tests/tests/test_forms.py:4532:55   - Unknown word (sirrobin)            -- cleaned_data["username"], "sirrobin")
tests/forms_tests/tests/test_forms.py:4545:55   - Unknown word (sirrobin)            -- cleaned_data["username"], "sirrobin")
tests/forms_tests/tests/test_forms.py:4563:55   - Unknown word (sirrobin)            -- cleaned_data["username"], "sirrobin")
tests/forms_tests/tests/test_forms.py:4852:26   - Unknown word (myradio)             -- '<div class="myradio">{{ radio }}</div>'
tests/forms_tests/tests/test_forms.py:4857:26   - Unknown word (myradio)             -- '<div class="myradio"><label for="id_language
tests/forms_tests/tests/test_forms.py:4860:26   - Unknown word (myradio)             -- '<div class="myradio"><label for="id_language
tests/forms_tests/tests/test_forms.py:4869:26   - Unknown word (mycheckbox)          -- '<div class="mycheckbox">{{ checkbox }}</div
tests/forms_tests/tests/test_forms.py:4874:26   - Unknown word (mycheckbox)          -- '<div class="mycheckbox"><label>'
tests/forms_tests/tests/test_forms.py:4877:26   - Unknown word (mycheckbox)          -- '<div class="mycheckbox"><label>'
tests/forms_tests/tests/test_forms.py:5068:48   - Unknown word (doesn)               -- picking a username that doesn&#x27;t already exist
tests/forms_tests/tests/test_forms.py:897:15    - Unknown word (Beatle)           -- class BeatleForm(Form):
tests/forms_tests/tests/test_forms.py:908:13    - Unknown word (Beatle)           -- f = BeatleForm(auto_id=False)
tests/forms_tests/tests/test_forms.py:934:15    - Unknown word (Beatle)           -- class BeatleForm(Form):
tests/forms_tests/tests/test_forms.py:945:23    - Unknown word (Beatle)           -- fields = list(BeatleForm()["name"])
tests/forms_tests/tests/test_forms.py:973:15    - Unknown word (Beatle)           -- class BeatleForm(Form):
tests/forms_tests/tests/test_formsets.py:1043:66   - Unknown word (Fernet)       -- inkFormSet(initial=[{"name": "Fernet and Coke"}])
tests/forms_tests/tests/test_formsets.py:1048:58   - Unknown word (Fernet)       -- form-0-name" value="Fernet and Coke"
tests/forms_tests/tests/test_formsets.py:1069:23   - Unknown word (Fernet)       -- {"name": "Fernet and Coke"},
tests/forms_tests/tests/test_formsets.py:1081:24   - Unknown word (Fernet)       -- value="Fernet and Coke"></div>
tests/forms_tests/tests/test_formsets.py:1338:40   - Unknown word (mgmt)         -- someone fiddles with the mgmt form data...
tests/forms_tests/tests/test_formsets.py:281:41    - Unknown word (Decemberists) -- Calexico", "100"), ("The Decemberists", "")], initial_forms
tests/forms_tests/tests/test_formsets.py:555:38    - Unknown word (Decemberists) -- choices-1-choice": "The Decemberists",
tests/forms_tests/tests/test_formsets.py:604:25    - Unknown word (Fergie)       -- {"choice": "Fergie", "votes": 900},
tests/forms_tests/tests/test_formsets.py:613:76    - Unknown word (Fergie)       -- choices-1-choice" value="Fergie">'
tests/forms_tests/tests/test_formsets.py:622:37    - Unknown word (Fergie)       -- go ahead and delete Fergie.
tests/forms_tests/tests/test_formsets.py:631:34    - Unknown word (Fergie)       -- choices-1-choice": "Fergie",
tests/forms_tests/tests/test_formsets.py:644:59    - Unknown word (Fergie)       -- DELETE": True, "choice": "Fergie"},
tests/forms_tests/tests/test_formsets.py:777:38    - Unknown word (Decemberists) -- choices-2-choice": "The Decemberists",
tests/forms_tests/tests/test_formsets.py:786:59    - Unknown word (Decemberists) -- : 0, "choice": "The Decemberists"},
tests/forms_tests/tests/test_formsets.py:838:38    - Unknown word (Decemberists) -- choices-2-choice": "The Decemberists",
tests/forms_tests/tests/test_formsets.py:841:34    - Unknown word (Basia)        -- choices-3-choice": "Basia Bulat",
tests/forms_tests/tests/test_formsets.py:841:40    - Unknown word (Bulat)        -- choices-3-choice": "Basia Bulat",
tests/forms_tests/tests/test_formsets.py:854:57    - Unknown word (Basia)        -- ORDER": None, "choice": "Basia Bulat"},
tests/forms_tests/tests/test_formsets.py:854:63    - Unknown word (Bulat)        -- None, "choice": "Basia Bulat"},
tests/forms_tests/tests/test_i18n.py:111:18    - Unknown word (Mies)         -- "Mies</label></div>\n<div
tests/forms_tests/tests/test_i18n.py:115:18    - Unknown word (Nainen)       -- "Nainen</label></div>\n</div
tests/forms_tests/tests/test_i18n.py:35:46     - Unknown word (Benutzername) -- label for="id_username">Benutzername:</label>'
tests/forms_tests/tests/test_i18n.py:42:46     - Unknown word (nazwa)        -- label for="id_username">nazwa u\u017cytkownika:</label
tests/forms_tests/tests/test_i18n.py:42:58     - Unknown word (cytkownika)   -- username">nazwa u\u017cytkownika:</label>'
tests/forms_tests/tests/test_i18n.py:74:13     - Unknown word (somechoice)   -- somechoice = ChoiceField(
tests/forms_tests/tests/test_i18n.py:75:61     - Unknown word (Mies)         -- tied\xe4"), ("\xf8", "Mies"), ("\xdf", "Nainen
tests/forms_tests/tests/test_i18n.py:75:79     - Unknown word (Nainen)       -- "Mies"), ("\xdf", "Nainen")),
tests/forms_tests/tests/test_i18n.py:84:26     - Unknown word (somechoice)   -- '<div id="id_somechoice">\n'
tests/forms_tests/tests/test_i18n.py:85:34     - Unknown word (somechoice)   -- <div><label for="id_somechoice_0">'
tests/forms_tests/tests/test_i18n.py:86:41     - Unknown word (somechoice)   -- type="radio" id="id_somechoice_0" value="\xc5" name
tests/forms_tests/tests/test_i18n.py:86:74     - Unknown word (somechoice)   -- value="\xc5" name="somechoice" '
tests/forms_tests/tests/test_i18n.py:90:24     - Unknown word (Mies)         -- 'required> Mies</label></div>\n<div
tests/forms_tests/tests/test_i18n.py:92:24     - Unknown word (Nainen)       -- "required> Nainen</label></div>\n</div
tests/forms_tests/tests/test_media.py:468:9     - Unknown word (mymulti)    -- mymulti = MyMultiWidget()
tests/forms_tests/tests/test_media.py:470:17    - Unknown word (mymulti)    -- str(mymulti.media),
tests/forms_tests/tests/test_utils.py:10:5      - Unknown word (flatatt)    -- flatatt,
tests/forms_tests/tests/test_utils.py:21:14     - Unknown word (flatatt)    -- def test_flatatt(self):
tests/forms_tests/tests/test_utils.py:23:11     - Unknown word (flatatt)    -- # flatatt #
tests/forms_tests/tests/test_utils.py:257:17    - Unknown word (Renderable) -- mixin = RenderableMixin()
tests/forms_tests/tests/test_utils.py:258:30    - Unknown word (Renderable) -- msg = "Subclasses of RenderableMixin must provide a
tests/forms_tests/tests/test_utils.py:263:17    - Unknown word (Renderable) -- mixin = RenderableFieldMixin()
tests/forms_tests/tests/test_utils.py:26:26     - Unknown word (flatatt)    -- self.assertEqual(flatatt({"id": "header"}),
tests/forms_tests/tests/test_utils.py:28:13     - Unknown word (flatatt)    -- flatatt({"class": "news", "title
tests/forms_tests/tests/test_utils.py:8:5       - Unknown word (Renderable) -- RenderableFieldMixin,
tests/forms_tests/tests/test_utils.py:9:5       - Unknown word (Renderable) -- RenderableMixin,
tests/forms_tests/tests/tests.py:252:31    - Unknown word (मेरी)       -- "我隻氣墊船裝滿晒鱔.txt", "मेरी मँडराने वाली नाव सर
tests/forms_tests/tests/tests.py:252:36    - Unknown word (मँडराने)    -- 氣墊船裝滿晒鱔.txt", "मेरी मँडराने वाली नाव सर्पमीनों
tests/forms_tests/tests/tests.py:252:44    - Unknown word (वाली)       -- txt", "मेरी मँडराने वाली नाव सर्पमीनों से भर
tests/forms_tests/tests/tests.py:252:53    - Unknown word (सर्पमीनो)   -- री मँडराने वाली नाव सर्पमीनों से भरी ह".encode()
tests/forms_tests/widget_tests/test_checkboxselectmultiple.py:198:14    - Unknown word (doesnt)     -- def test_doesnt_localize_input_value
tests/forms_tests/widget_tests/test_fileinput.py:88:25     - Unknown word (myclass)    -- ({"class": "myclass"}, True),
tests/forms_tests/widget_tests/test_nullbooleanselect.py:150:45    - Unknown word (Unbekannt)  -- option value="unknown">Unbekannt</option>
tests/forms_tests/widget_tests/test_nullbooleanselect.py:152:43    - Unknown word (Nein)       -- option value="false">Nein</option>
tests/forms_tests/widget_tests/test_radioselect.py:19:46     - Unknown word (beatle)       -- input type="radio" name="beatle" value="">------</label
tests/forms_tests/widget_tests/test_radioselect.py:22:54     - Unknown word (beatle)       -- checked type="radio" name="beatle" value="J">John</label
tests/forms_tests/widget_tests/test_radioselect.py:25:46     - Unknown word (beatle)       -- input type="radio" name="beatle" value="P">Paul</label
tests/forms_tests/widget_tests/test_radioselect.py:289:39    - Unknown word (Žćžšđ)        -- widget(choices=[("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), (
tests/forms_tests/widget_tests/test_radioselect.py:289:49    - Unknown word (Đabc)         -- choices=[("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abc
tests/forms_tests/widget_tests/test_radioselect.py:289:54    - Unknown word (Žćžšđ)        -- ("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abcćžš
tests/forms_tests/widget_tests/test_radioselect.py:289:65    - Unknown word (ćžšđ)         -- , "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abcćžšđ")]),
tests/forms_tests/widget_tests/test_radioselect.py:289:73    - Unknown word (abcćžšđ)      -- abcĆŽćžšđ"), ("ćžšđ", "abcćžšđ")]),
tests/forms_tests/widget_tests/test_radioselect.py:28:46     - Unknown word (beatle)       -- input type="radio" name="beatle" value="G">George</label
tests/forms_tests/widget_tests/test_radioselect.py:291:17    - Unknown word (Žćžšđ)        -- "ŠĐĆŽćžšđ",
tests/forms_tests/widget_tests/test_radioselect.py:31:46     - Unknown word (beatle)       -- input type="radio" name="beatle" value="R">Ringo</label
tests/forms_tests/widget_tests/test_radioselect.py:429:14    - Unknown word (doesnt)       -- def test_doesnt_localize_input_value
tests/forms_tests/widget_tests/test_radioselect.py:7:12      - Unknown word (choicewidget) -- from .test_choicewidget import ChoiceWidgetTest
tests/forms_tests/widget_tests/test_select.py:15:23     - Unknown word (beatle)       -- <select name="beatle">
tests/forms_tests/widget_tests/test_select.py:217:39    - Unknown word (Žćžšđ)        -- widget(choices=[("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), (
tests/forms_tests/widget_tests/test_select.py:217:49    - Unknown word (Đabc)         -- choices=[("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abc
tests/forms_tests/widget_tests/test_select.py:217:54    - Unknown word (Žćžšđ)        -- ("ŠĐĆŽćžšđ", "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abcćžš
tests/forms_tests/widget_tests/test_select.py:217:65    - Unknown word (ćžšđ)         -- , "ŠĐabcĆŽćžšđ"), ("ćžšđ", "abcćžšđ")]),
tests/forms_tests/widget_tests/test_select.py:217:73    - Unknown word (abcćžšđ)      -- abcĆŽćžšđ"), ("ćžšđ", "abcćžšđ")]),
tests/forms_tests/widget_tests/test_select.py:219:17    - Unknown word (Žćžšđ)        -- "ŠĐĆŽćžšđ",
tests/forms_tests/widget_tests/test_select.py:24:64     - Unknown word (beatle)       -- widget(choices=choices), "beatle", "J", html=html)
tests/forms_tests/widget_tests/test_select.py:280:14    - Unknown word (doesnt)       -- def test_doesnt_localize_option_value
tests/forms_tests/widget_tests/test_select.py:32:14     - Unknown word (beatle)       -- "beatle",
tests/forms_tests/widget_tests/test_select.py:35:34     - Unknown word (beatle)       -- """<select name="beatle">
tests/forms_tests/widget_tests/test_select.py:417:14    - Unknown word (doesnt)       -- def test_doesnt_render_required_when
tests/forms_tests/widget_tests/test_select.py:421:14    - Unknown word (doesnt)       -- def test_doesnt_render_required_when
tests/forms_tests/widget_tests/test_select.py:51:14     - Unknown word (beatle)       -- "beatle",
tests/forms_tests/widget_tests/test_select.py:7:12      - Unknown word (choicewidget) -- from .test_choicewidget import ChoiceWidgetTest
tests/forms_tests/widget_tests/test_selectdatewidget.py:340:14    - Unknown word (selectdate) -- def test_selectdate_required(self):
tests/forms_tests/widget_tests/test_selectdatewidget.py:350:14    - Unknown word (selectdate) -- def test_selectdate_empty_label(self):
tests/forms_tests/widget_tests/test_selectdatewidget.py:494:35    - Unknown word (januari)    -- <option value="1">januari</option>
tests/forms_tests/widget_tests/test_selectdatewidget.py:495:35    - Unknown word (februari)   -- <option value="2">februari</option>
tests/forms_tests/widget_tests/test_selectdatewidget.py:496:35    - Unknown word (maart)      -- <option value="3">maart</option>
tests/forms_tests/widget_tests/test_selectdatewidget.py:499:35    - Unknown word (juni)       -- <option value="6">juni</option>
tests/forms_tests/widget_tests/test_selectdatewidget.py:500:35    - Unknown word (juli)       -- <option value="7">juli</option>
tests/forms_tests/widget_tests/test_selectdatewidget.py:503:36    - Unknown word (oktober)    -- <option value="10">oktober</option>
tests/forms_tests/widget_tests/test_textarea.py:48:30     - Unknown word (ampersanded) -- 'some "quoted" & ampersanded value',
tests/forms_tests/widget_tests/test_textarea.py:51:48     - Unknown word (ampersanded) -- quot;quoted&quot; &amp; ampersanded value</textarea>"
tests/forms_tests/widget_tests/test_textinput.py:50:30     - Unknown word (ampersanded) -- 'some "quoted" & ampersanded value',
tests/forms_tests/widget_tests/test_textinput.py:53:55     - Unknown word (ampersanded) -- quot;quoted&quot; &amp; ampersanded value">'
tests/forms_tests/widget_tests/test_textinput.py:72:17     - Unknown word (Žćžšđ)       -- "ŠĐĆŽćžšđ",
tests/generic_inline_admin/tests.py:273:40    - Unknown word (phonenumber) -- generic_inline_admin-phonenumber-content_type-object
tests/generic_relations/models.py:123:60    - Unknown word (manualpk)   -- related_query_name="manualpk")
tests/generic_relations/test_forms.py:123:70    - Unknown word (Panthera)   -- "Lion", latin_name="Panthera leo")
tests/generic_relations/test_forms.py:144:65    - Unknown word (anatinus)   -- name="Ornithorhynchus anatinus"
tests/generic_relations/test_forms.py:290:70    - Unknown word (Panthera)   -- "Lion", latin_name="Panthera leo")
tests/generic_relations/test_forms.py:78:41     - Unknown word (anatinus)   -- name="Ornithorhynchus anatinus",
tests/generic_relations/tests.py:192:41    - Unknown word (manualpk)   -- animal__isnull=False) | Q(manualpk__id=1)
tests/generic_relations/tests.py:205:79    - Unknown word (clearish)   -- object=self.quartz, tag="clearish")
tests/generic_relations/tests.py:205:9     - Unknown word (clearish)   -- clearish = TaggedItem.objects
tests/generic_relations/tests.py:211:38    - Unknown word (clearish)   -- assertSequenceEqual(q, [clearish, shiny])
tests/generic_relations/tests.py:297:68    - Unknown word (clearish)   -- object=self.quartz, tag="clearish")
tests/generic_relations/tests.py:303:19    - Unknown word (clearish)   -- ("clearish", Mineral, quartz_pk
tests/generic_relations/tests.py:30:74     - Unknown word (Panthera)   -- "Lion", latin_name="Panthera leo")
tests/generic_relations/tests.py:33:41     - Unknown word (anatinus)   -- name="Ornithorhynchus anatinus",
tests/generic_relations/tests.py:476:14    - Unknown word (manualpk)   -- "manualpk, object_id, tag, valuabletagg
tests/generic_relations/tests.py:476:40    - Unknown word (valuabletaggeditem) -- manualpk, object_id, tag, valuabletaggeditem"
tests/generic_relations/tests.py:522:9     - Unknown word (valuedtag)          -- valuedtag = ValuableTaggedItem
tests/generic_relations/tests.py:525:26    - Unknown word (valuedtag)          -- self.assertEqual(valuedtag.content_object, quartz
tests/generic_relations/tests.py:848:9     - Unknown word (newrel)             -- newrel = ConcreteRelatedModel
tests/generic_relations/tests.py:850:9     - Unknown word (newrel)             -- newrel.bases.set([base])
tests/generic_relations/tests.py:851:54    - Unknown word (newrel)             -- teRelatedModel.objects.get(pk=newrel.pk)
tests/generic_relations/tests.py:851:9     - Unknown word (newrel)             -- newrel = ConcreteRelatedModel
tests/generic_relations/tests.py:852:32    - Unknown word (newrel)             -- self.assertEqual(base, newrel.bases.get())
tests/generic_relations_regress/models.py:84:5      - Unknown word (tlinks)     -- tlinks = GenericRelation(TextLink
tests/generic_relations_regress/tests.py:185:61    - Unknown word (autopk)     -- HasLinkThing so that the autopk value
tests/generic_relations_regress/tests.py:67:9      - Unknown word (oddrel)     -- oddrel = OddRelation1.objects
tests/generic_relations_regress/tests.py:68:48     - Unknown word (oddrel)     -- create(content_object=oddrel)
tests/generic_relations_regress/tests.py:69:9      - Unknown word (oddrel)     -- oddrel.delete()
tests/generic_relations_regress/tests.py:71:14     - Unknown word (textlink)   -- def test_textlink_delete(self):
tests/generic_relations_regress/tests.py:72:52     - Unknown word (tlink)      -- objects.create(name="tlink")
tests/generic_relations_regress/tests.py:72:9      - Unknown word (oddrel)     -- oddrel = OddRelation2.objects
tests/generic_relations_regress/tests.py:73:48     - Unknown word (oddrel)     -- create(content_object=oddrel)
tests/generic_relations_regress/tests.py:83:14     - Unknown word (textlink)   -- def test_textlink_filter(self):
tests/generic_relations_regress/tests.py:87:41     - Unknown word (tlinks)     -- OddRelation2.objects.filter(tlinks__value="value"), [oddrel
tests/generic_views/test_dates.py:195:45    - Unknown word (sortedbynamedec) -- client.get("/dates/books/sortedbynamedec/")
tests/generic_views/test_dates.py:255:31    - Unknown word (Testement)       -- name="The New New Testement", pages=600, pubdate
tests/generic_views/test_dates.py:26:27     - Unknown word (Bolaño)     -- name="Roberto Bolaño", slug="roberto-bolano
tests/generic_views/test_dates.py:26:50     - Unknown word (bolano)     -- Bolaño", slug="roberto-bolano"
tests/generic_views/test_dates.py:310:50    - Unknown word (sortedbypageandnamedec) -- get("/dates/books/2006/sortedbypageandnamedec/")
tests/generic_views/test_dates.py:429:51    - Unknown word (Testement)              -- create(name="The New New Testement", pages=600, pubdate
tests/generic_views/test_dates.py:594:51    - Unknown word (Testement)              -- create(name="The New New Testement", pages=600, pubdate
tests/generic_views/test_dates.py:726:51    - Unknown word (Testement)              -- create(name="The New New Testement", pages=600, pubdate
tests/generic_views/test_dates.py:842:57    - Unknown word (byslug)                 -- dates/books/2006/may/01/byslug/dreaming-in-code/")
tests/generic_views/test_dates.py:855:31    - Unknown word (Testement)              -- name="The New New Testement", slug="new-new", pages
tests/generic_views/test_dates.py:884:55    - Unknown word (nopk)                   -- dates/books/2008/oct/01/nopk/")
tests/generic_views/test_dates.py:904:41    - Unknown word (numqueries)             -- object_custom_queryset_numqueries(self):
tests/generic_views/test_detail.py:101:29    - Unknown word (bypkignoreslug) -- "/detail/author/bypkignoreslug/%s-scott-rosenberg/
tests/generic_views/test_detail.py:110:29    - Unknown word (bypkandslug)    -- "/detail/author/bypkandslug/%s-roberto-bolano/"
tests/generic_views/test_detail.py:110:52    - Unknown word (bolano)         -- bypkandslug/%s-roberto-bolano/" % self.author1.pk
tests/generic_views/test_detail.py:119:29    - Unknown word (bypkandslug)    -- "/detail/author/bypkandslug/%s-scott-rosenberg/
tests/generic_views/test_detail.py:19:27     - Unknown word (Bolaño)     -- name="Roberto Bolaño", slug="roberto-bolano
tests/generic_views/test_detail.py:19:50     - Unknown word (bolano)     -- Bolaño", slug="roberto-bolano"
tests/generic_views/test_detail.py:219:40    - Unknown word (nonmodel)       -- client.get("/detail/nonmodel/1/")
tests/generic_views/test_detail.py:62:47     - Unknown word (bycustompk) -- get("/detail/author/bycustompk/%s/" % self.author1
tests/generic_views/test_detail.py:69:47     - Unknown word (byslug)     -- get("/detail/author/byslug/scott-rosenberg/")
tests/generic_views/test_detail.py:80:47     - Unknown word (bycustomslug) -- get("/detail/author/bycustomslug/scott-rosenberg/")
tests/generic_views/test_detail.py:92:29     - Unknown word (bypkignoreslug) -- "/detail/author/bypkignoreslug/%s-roberto-bolano/"
tests/generic_views/test_detail.py:92:55     - Unknown word (bolano)         -- bypkignoreslug/%s-roberto-bolano/" % self.author1.pk
tests/generic_views/test_edit.py:106:31    - Unknown word (Munroe)     -- {"name": "Randall Munroe", "slug": "randall-munroe
tests/generic_views/test_edit.py:106:57    - Unknown word (munroe)     -- Munroe", "slug": "randall-munroe"},
tests/generic_views/test_edit.py:111:70    - Unknown word (Munroe)     -- flat=True), ["Randall Munroe"]
tests/generic_views/test_edit.py:116:75    - Unknown word (munroe)     -- 1, "slug": "randall-munroe"}
tests/generic_views/test_edit.py:133:31    - Unknown word (Munroe)     -- {"name": "Randall Munroe", "slug": "randall-munroe
tests/generic_views/test_edit.py:133:57    - Unknown word (munroe)     -- Munroe", "slug": "randall-munroe"},
tests/generic_views/test_edit.py:138:70    - Unknown word (Munroe)     -- flat=True), ["Randall Munroe"]
tests/generic_views/test_edit.py:144:31    - Unknown word (Munroe)     -- {"name": "Randall Munroe", "slug": "randall-munroe
tests/generic_views/test_edit.py:144:57    - Unknown word (munroe)     -- Munroe", "slug": "randall-munroe"},
tests/generic_views/test_edit.py:171:57    - Unknown word (munroe)     -- Munroe", "slug": "randall-munroe"},
tests/generic_views/test_edit.py:259:39    - Unknown word (xkcd)       -- name": "Randall Munroe (xkcd)", "slug": "randall
tests/generic_views/test_edit.py:264:78    - Unknown word (xkcd)       -- , ["Randall Munroe (xkcd)"]
tests/generic_views/test_edit.py:290:49    - Unknown word (xkcd)       -- Randall Munroe (author of xkcd)", "slug": "randall
tests/generic_views/test_edit.py:296:41    - Unknown word (xkcd)       -- Randall Munroe (author of xkcd)"],
tests/generic_views/test_edit.py:302:49    - Unknown word (xkcd)       -- Randall Munroe (author of xkcd)", "slug": "randall
tests/generic_views/test_list.py:127:61    - Unknown word (pagina)     -- custom_page_kwarg/", {"pagina": "2"}
tests/generic_views/test_list.py:16:27     - Unknown word (Bolaño)     -- name="Roberto Bolaño", slug="roberto-bolano
tests/generic_views/test_list.py:16:50     - Unknown word (bolano)     -- Bolaño", slug="roberto-bolano"
tests/generic_views/test_list.py:246:44    - Unknown word (sortedbypagesandnamedec) -- client.get("/list/books/sortedbypagesandnamedec/")
tests/generic_views/test_list.py:66:33     - Unknown word (shortdata)  -- test_paginated_queryset_shortdata(self):
tests/generic_views/test_list.py:96:36     - Unknown word (urlvar)     -- paginated_get_page_by_urlvar(self):
tests/generic_views/urls.py:164:23    - Unknown word (sortedbynamedec) -- path("dates/books/sortedbynamedec/", views.BookArchive
tests/generic_views/urls.py:213:62    - Unknown word (pagina)          -- paginate_by=30, page_kwarg="pagina"),
tests/generic_views/urls.py:221:21    - Unknown word (sortedbypagesandnamedec) -- "list/books/sortedbypagesandnamedec/",
tests/generic_views/urls.py:249:33    - Unknown word (sortedbypageandnamedec)  -- dates/books/<int:year>/sortedbypageandnamedec/",
tests/generic_views/urls.py:363:52    - Unknown word (nopk)                    -- year>/<month>/<int:day>/nopk/", views.BookDetail
tests/generic_views/urls.py:365:51    - Unknown word (byslug)                  -- year>/<month>/<int:day>/byslug/<slug:slug>/",
tests/generic_views/urls.py:43:24     - Unknown word (bycustompk) -- "detail/author/bycustompk/<foo>/",
tests/generic_views/urls.py:46:25     - Unknown word (byslug)     -- path("detail/author/byslug/<slug>/", views.AuthorDetail
tests/generic_views/urls.py:48:24     - Unknown word (bycustomslug) -- "detail/author/bycustomslug/<foo>/",
tests/generic_views/urls.py:51:25     - Unknown word (bypkignoreslug) -- path("detail/author/bypkignoreslug/<int:pk>-<slug>/", views
tests/generic_views/urls.py:53:24     - Unknown word (bypkandslug)    -- "detail/author/bypkandslug/<int:pk>-<slug>/",
tests/generic_views/urls.py:76:18     - Unknown word (nonmodel)       -- path("detail/nonmodel/1/", views.NonModelDetail
tests/get_object_or_404/tests.py:89:29     - Unknown word (klass)      -- # Given an argument klass that is not a Model
tests/get_or_create/tests.py:592:24    - Unknown word (sqls)       -- update_sqls = [
tests/get_or_create/tests.py:595:45    - Unknown word (sqls)       -- assertEqual(len(update_sqls), 1)
tests/get_or_create/tests.py:596:37    - Unknown word (sqls)       -- update_sql = update_sqls[0]
tests/gis_tests/distapp/tests.py:106:64    - Unknown word (spatialite)   -- oracle or connection.ops.spatialite:
tests/gis_tests/distapp/tests.py:132:30    - Unknown word (Southside)    -- (thus, Houston and Southside place will be excluded
tests/gis_tests/distapp/tests.py:142:40    - Unknown word (Bellaire)     -- assertEqual(cities, ["Bellaire", "Pearland", "West
tests/gis_tests/distapp/tests.py:142:52    - Unknown word (Pearland)     -- cities, ["Bellaire", "Pearland", "West University Place
tests/gis_tests/distapp/tests.py:166:14    - Unknown word (Batemans)     -- "Batemans Bay",
tests/gis_tests/distapp/tests.py:168:14    - Unknown word (Hillsdale)    -- "Hillsdale",
tests/gis_tests/distapp/tests.py:170:14    - Unknown word (Mittagong)    -- "Mittagong",
tests/gis_tests/distapp/tests.py:171:14    - Unknown word (Shellharbour) -- "Shellharbour",
tests/gis_tests/distapp/tests.py:173:14    - Unknown word (Thirroul)     -- "Thirroul",
tests/gis_tests/distapp/tests.py:176:27    - Unknown word (spatialite)   -- if connection.ops.spatialite:
tests/gis_tests/distapp/tests.py:177:15    - Unknown word (Spatia)       -- # SpatiaLite is less accurate
tests/gis_tests/distapp/tests.py:177:67    - Unknown word (Batemans)     -- returns 102.8km for Batemans Bay.
tests/gis_tests/distapp/tests.py:212:36    - Unknown word (Batemans)     -- assertEqual(cities, ["Batemans Bay", "Canberra", "Melbourne
tests/gis_tests/distapp/tests.py:236:62    - Unknown word (Shellharbour) -- Adelaide", "Hobart", "Shellharbour", "Thirroul"])
tests/gis_tests/distapp/tests.py:236:78    - Unknown word (Thirroul)     -- Hobart", "Shellharbour", "Thirroul"])
tests/gis_tests/distapp/tests.py:249:18    - Unknown word (Bellaire)     -- "Bellaire",
tests/gis_tests/distapp/tests.py:251:18    - Unknown word (Southside)    -- "Southside Place",
tests/gis_tests/distapp/tests.py:261:24    - Unknown word (Pearland)     -- self.assertIn("Pearland", self.get_names(qs
tests/gis_tests/distapp/tests.py:346:27    - Unknown word (Mittagong)    -- ["Adelaide", "Mittagong", "Shellharbour", "Thirroul
tests/gis_tests/distapp/tests.py:346:40    - Unknown word (Shellharbour) -- Adelaide", "Mittagong", "Shellharbour", "Thirroul", "Wollongong
tests/gis_tests/distapp/tests.py:346:56    - Unknown word (Thirroul)     -- Mittagong", "Shellharbour", "Thirroul", "Wollongong"],
tests/gis_tests/distapp/tests.py:383:23    - Unknown word (Spatia)       -- Distance functions on SpatiaLite
tests/gis_tests/distapp/tests.py:405:45    - Unknown word (southtexaszipcode) -- Area(poly) FROM distapp_southtexaszipcode;
tests/gis_tests/distapp/tests.py:447:25    - Unknown word (southtexascity)    -- # FROM distapp_southtexascity;
tests/gis_tests/distapp/tests.py:463:25    - Unknown word (southtexascityft)  -- # FROM distapp_southtexascityft;
tests/gis_tests/distapp/tests.py:499:43    - Unknown word (Shellharbour)      -- LineString of Wollongong and Shellharbour coords).
tests/gis_tests/distapp/tests.py:507:25    - Unknown word (australiacity)     -- # FROM distapp_australiacity ORDER BY name;
tests/gis_tests/distapp/tests.py:526:71    - Unknown word (Spatia)            -- meter (kilometer on SpatiaLite).
tests/gis_tests/distapp/tests.py:527:44    - Unknown word (spatialite)        -- 3 if connection.ops.spatialite else 0
tests/gis_tests/distapp/tests.py:540:25    - Unknown word (australiacity)     -- # FROM distapp_australiacity WHERE (NOT (id = 11
tests/gis_tests/distapp/tests.py:545:25    - Unknown word (australiacity)     -- # FROM distapp_australiacity WHERE (NOT (id = 11
tests/gis_tests/distapp/tests.py:571:53    - Unknown word (Hillsdale)         -- straliaCity.objects.get(name="Hillsdale")
tests/gis_tests/distapp/tests.py:571:9     - Unknown word (hillsdale)         -- hillsdale = AustraliaCity.objects
tests/gis_tests/distapp/tests.py:573:46    - Unknown word (hillsdale)         -- traliaCity.objects.exclude(id=hillsdale.id)
tests/gis_tests/distapp/tests.py:574:50    - Unknown word (hillsdale)         -- distance=Distance("point", hillsdale.point, spheroid=True
tests/gis_tests/distapp/tests.py:580:53    - Unknown word (spatialite)        -- postgis or connection.ops.spatialite:
tests/gis_tests/distapp/tests.py:583:50    - Unknown word (hillsdale)         -- traliaCity.objects.exclude(id=hillsdale.id)
tests/gis_tests/distapp/tests.py:584:54    - Unknown word (hillsdale)         -- distance=Distance("point", hillsdale.point))
tests/gis_tests/distapp/tests.py:665:52    - Unknown word (censuszipcode)     -- ST_Transform("distapp_censuszipcode"."poly", 32140),
tests/gis_tests/distapp/tests.py:667:25    - Unknown word (censuszipcode)     -- # FROM "distapp_censuszipcode";
tests/gis_tests/distapp/tests.py:697:47    - Unknown word (Pearland)          -- in=("San Antonio", "Pearland"))
tests/gis_tests/distapp/tests.py:699:55    - Unknown word (Pearland)          -- qs, ["San Antonio", "Pearland"])
tests/gis_tests/distapp/tests.py:744:40    - Unknown word (southtexaszipcode) -- ST_Perimeter(distapp_southtexaszipcode.poly)
tests/gis_tests/distapp/tests.py:745:25    - Unknown word (southtexaszipcode) -- # FROM distapp_southtexaszipcode;
tests/gis_tests/distapp/tests.py:746:9     - Unknown word (perim)             -- perim_m = [
tests/gis_tests/distapp/tests.py:757:36    - Unknown word (perim)             -- self.assertAlmostEqual(perim_m[i], z.perimeter.m
tests/gis_tests/distapp/tests.py:760:46    - Unknown word (perim)             -- uthTexasCity.objects.annotate(perim=Perimeter("point"))
tests/gis_tests/distapp/tests.py:762:38    - Unknown word (perim)             -- assertEqual(0, city.perim.m)
tests/gis_tests/distapp/tests.py:768:46    - Unknown word (perim)             -- ensusZipcode.objects.annotate(perim=Perimeter("poly"))
tests/gis_tests/distapp/tests.py:791:9     - Unknown word (htown)             -- htown = SouthTexasCity.objects
tests/gis_tests/distapp/tests.py:793:39    - Unknown word (htown)             -- distance=Distance("poly", htown.point), area=Area("poly
tests/gis_tests/distapp/tests.py:80:43     - Unknown word (Southside)  -- Downtown Houston", "Southside Place"]
tests/gis_tests/distapp/tests.py:81:23     - Unknown word (Mittagong)  -- au_cities = ["Mittagong", "Shellharbour", "Thirroul
tests/gis_tests/distapp/tests.py:81:36     - Unknown word (Shellharbour) -- cities = ["Mittagong", "Shellharbour", "Thirroul", "Wollongong
tests/gis_tests/distapp/tests.py:81:52     - Unknown word (Thirroul)     -- Mittagong", "Shellharbour", "Thirroul", "Wollongong"]
tests/gis_tests/gdal_tests/test_driver.py:24:32     - Unknown word (clucka)     -- drivers = ("Foo baz", "clucka", "ESRI Shp", "ESRI
tests/gis_tests/gdal_tests/test_driver.py:24:59     - Unknown word (rast)       -- , "ESRI Shp", "ESRI rast")
tests/gis_tests/gdal_tests/test_driver.py:57:49     - Unknown word (capi)       -- contrib.gis.gdal.driver.capi.get_driver_count")
tests/gis_tests/gdal_tests/test_driver.py:58:49     - Unknown word (capi)       -- contrib.gis.gdal.driver.capi.register_all")
tests/gis_tests/gdal_tests/test_ds.py:14:6      - Unknown word (GEOGCS)     -- 'GEOGCS["GCS_WGS_1984",DATUM
tests/gis_tests/gdal_tests/test_ds.py:15:30     - Unknown word (PRIMEM)     -- 137,298.257223563]],PRIMEM["Greenwich",0],UNIT
tests/gis_tests/gdal_tests/test_ds.py:162:53    - Unknown word (nfeat)      -- ssertEqual(len(layer), source.nfeat)
tests/gis_tests/gdal_tests/test_ds.py:176:17    - Unknown word (flds)       -- flds = layer.fields
tests/gis_tests/gdal_tests/test_ds.py:177:26    - Unknown word (flds)       -- for f in flds:
tests/gis_tests/gdal_tests/test_ds.py:19:23     - Unknown word (GEOGCS)     -- wgs_84_wkt_regex = r'^GEOGCS\["(GCS_)?WGS[ _](19
tests/gis_tests/gdal_tests/test_ds.py:27:9      - Unknown word (nfeat)      -- nfeat=5,
tests/gis_tests/gdal_tests/test_ds.py:33:78     - Unknown word (QGIS)       -- # Got extent from QGIS
tests/gis_tests/gdal_tests/test_ds.py:343:33    - Unknown word (ALAND)      -- which has land area ('ALAND10') stored in a Real
tests/gis_tests/gdal_tests/test_ds.py:347:43    - Unknown word (ogrinfo)    -- value obtained using `ogrinfo`.
tests/gis_tests/gdal_tests/test_ds.py:348:50    - Unknown word (ALAND)      -- 86997978, feat.get("ALAND10"))
tests/gis_tests/gdal_tests/test_ds.py:45:9      - Unknown word (nfeat)      -- nfeat=3,
tests/gis_tests/gdal_tests/test_ds.py:65:9      - Unknown word (nfeat)      -- nfeat=3,
tests/gis_tests/gdal_tests/test_ds.py:71:78     - Unknown word (QGIS)       -- # Got extent from QGIS
tests/gis_tests/gdal_tests/test_ds.py:76:9      - Unknown word (nfeat)      -- nfeat=3,
tests/gis_tests/gdal_tests/test_ds.py:90:83     - Unknown word (QGIS)       -- # Got extent from QGIS
tests/gis_tests/gdal_tests/test_geom.py:122:27    - Unknown word (jsons)      -- # Loading jsons to prevent decimal difference
tests/gis_tests/gdal_tests/test_geom.py:148:13    - Unknown word (mgeom)      -- mgeom1 = OGRGeometry(mp.wkt
tests/gis_tests/gdal_tests/test_geom.py:149:33    - Unknown word (mgeom)      -- self.assertEqual(4, mgeom1.geom_type)
tests/gis_tests/gdal_tests/test_geom.py:150:44    - Unknown word (mgeom)      -- assertEqual("MULTIPOINT", mgeom1.geom_name)
tests/gis_tests/gdal_tests/test_geom.py:151:13    - Unknown word (mgeom)      -- mgeom2 = OGRGeometry("MULTIPOINT
tests/gis_tests/gdal_tests/test_geom.py:152:13    - Unknown word (mgeom)      -- mgeom3 = OGRGeometry("MULTIPOINT
tests/gis_tests/gdal_tests/test_geom.py:164:35    - Unknown word (linestrings) -- ls in self.geometries.linestrings:
tests/gis_tests/gdal_tests/test_geom.py:178:18    - Unknown word (tmpx)        -- x = [tmpx for tmpx, tmpy in ls
tests/gis_tests/gdal_tests/test_geom.py:178:27    - Unknown word (tmpx)        -- x = [tmpx for tmpx, tmpy in ls.coords]
tests/gis_tests/gdal_tests/test_geom.py:178:33    - Unknown word (tmpy)        -- x = [tmpx for tmpx, tmpy in ls.coords]
tests/gis_tests/gdal_tests/test_geom.py:179:18    - Unknown word (tmpy)        -- y = [tmpy for tmpx, tmpy in ls
tests/gis_tests/gdal_tests/test_geom.py:179:27    - Unknown word (tmpx)        -- y = [tmpy for tmpx, tmpy in ls.coords]
tests/gis_tests/gdal_tests/test_geom.py:179:33    - Unknown word (tmpy)        -- y = [tmpy for tmpx, tmpy in ls.coords]
tests/gis_tests/gdal_tests/test_geom.py:205:35    - Unknown word (linearrings) -- rr in self.geometries.linearrings:
tests/gis_tests/gdal_tests/test_geom.py:260:14    - Unknown word (closepolygons) -- def test_closepolygons(self):
tests/gis_tests/gdal_tests/test_geom.py:301:13    - Unknown word (klone)         -- klone = mpoly.clone()
tests/gis_tests/gdal_tests/test_geom.py:302:38    - Unknown word (klone)         -- assertEqual(sr.wkt, klone.srs.wkt)
tests/gis_tests/gdal_tests/test_geom.py:369:9     - Unknown word (prec)          -- prec = -1
tests/gis_tests/gdal_tests/test_geom.py:371:50    - Unknown word (prec)          -- sertAlmostEqual(trans.x, p.x, prec)
tests/gis_tests/gdal_tests/test_geom.py:372:50    - Unknown word (prec)          -- sertAlmostEqual(trans.y, p.y, prec)
tests/gis_tests/gdal_tests/test_geom.py:381:9     - Unknown word (prec)          -- prec = -1
tests/gis_tests/gdal_tests/test_geom.py:385:61    - Unknown word (prec)          -- x[0], ls_orig.x[0], prec)
tests/gis_tests/gdal_tests/test_geom.py:422:46    - Unknown word (sdiff)         -- OGRGeometry(self.geometries.sdiff_geoms[i].wkt)
tests/gis_tests/gdal_tests/test_raster.py:104:35    - Unknown word (geotransforms) -- geotransform in error_geotransforms:
tests/gis_tests/gdal_tests/test_raster.py:128:9     - Unknown word (rast)          -- rast = GDALRaster(
tests/gis_tests/gdal_tests/test_raster.py:16:21     - Unknown word (textrasters) -- from ..data.rasters.textrasters import JSON_RASTER
tests/gis_tests/gdal_tests/test_raster.py:179:23    - Unknown word (TOWGS)         -- # Presence of TOWGS84 depend on GDAL/Proj
tests/gis_tests/gdal_tests/test_raster.py:181:46    - Unknown word (TOWGS)         -- raster.srs.wkt.replace("TOWGS84[0,0,0,0,0,0,0],",
tests/gis_tests/gdal_tests/test_raster.py:182:38    - Unknown word (TOWGS)         -- rs.srs.wkt.replace("TOWGS84[0,0,0,0,0,0,0],",
tests/gis_tests/gdal_tests/test_raster.py:201:13    - Unknown word (vsimem)        -- vsimem = GDALRaster(dat.read
tests/gis_tests/gdal_tests/test_raster.py:203:18    - Unknown word (vsimem)        -- result = vsimem.bands[0].data()
tests/gis_tests/gdal_tests/test_raster.py:211:18    - Unknown word (vsimem)        -- path = "/vsimem/raster.tif"
tests/gis_tests/gdal_tests/test_raster.py:213:9     - Unknown word (vsimem)        -- vsimem = GDALRaster(
tests/gis_tests/gdal_tests/test_raster.py:231:13    - Unknown word (vsimem)        -- del vsimem
tests/gis_tests/gdal_tests/test_raster.py:268:18    - Unknown word (vsizip)        -- def test_vsi_vsizip_filesystem(self):
tests/gis_tests/gdal_tests/test_raster.py:272:22    - Unknown word (vsizip)        -- rst_path = "/vsizip/" + os.path.join(rst
tests/gis_tests/gdal_tests/test_raster.py:390:50    - Unknown word (Interp)        -- x50 Type=Byte, ColorInterp=Gray",
tests/gis_tests/gdal_tests/test_raster.py:408:44    - Unknown word (Albers)        -- NAD83 / Florida GDL Albers", infos)
tests/gis_tests/gdal_tests/test_raster.py:414:15    - Unknown word (papsz)         -- {"papsz_options": {"compress
tests/gis_tests/gdal_tests/test_raster.py:414:45    - Unknown word (packbits)      -- options": {"compress": "packbits"}, "name": rstfile.name
tests/gis_tests/gdal_tests/test_raster.py:419:9     - Unknown word (papsz)         -- papsz_options = {
tests/gis_tests/gdal_tests/test_raster.py:420:26    - Unknown word (packbits)      -- "compress": "packbits",
tests/gis_tests/gdal_tests/test_raster.py:421:14    - Unknown word (blockxsize)    -- "blockxsize": 23,
tests/gis_tests/gdal_tests/test_raster.py:422:14    - Unknown word (blockysize)    -- "blockysize": 23,
tests/gis_tests/gdal_tests/test_raster.py:426:13    - Unknown word (papsz)         -- papsz_options["pixeltype"
tests/gis_tests/gdal_tests/test_raster.py:426:43    - Unknown word (signedbyte)    -- options["pixeltype"] = "signedbyte"
tests/gis_tests/gdal_tests/test_raster.py:446:18    - Unknown word (papsz)         -- "papsz_options": papsz_options
tests/gis_tests/gdal_tests/test_raster.py:446:34    - Unknown word (papsz)         -- "papsz_options": papsz_options,
tests/gis_tests/gdal_tests/test_raster.py:455:14    - Unknown word (PACKBITS)      -- "PACKBITS",
tests/gis_tests/gdal_tests/test_raster.py:461:18    - Unknown word (SIGNEDBYTE)    -- "SIGNEDBYTE",
tests/gis_tests/gdal_tests/test_raster.py:471:26    - Unknown word (sourceraster)  -- "name": "sourceraster",
tests/gis_tests/gdal_tests/test_raster.py:499:40    - Unknown word (sourceraster)  -- assertEqual(target.name, "sourceraster_copy.MEM")
tests/gis_tests/gdal_tests/test_raster.py:507:31    - Unknown word (targetraster)  -- "name": "/path/to/targetraster.tif",
tests/gis_tests/gdal_tests/test_raster.py:512:49    - Unknown word (targetraster)  -- target.name, "/path/to/targetraster.tif")
tests/gis_tests/gdal_tests/test_raster.py:51:9      - Unknown word (rast)        -- rast = GDALRaster(
tests/gis_tests/gdal_tests/test_raster.py:58:26     - Unknown word (rast)        -- self.assertEqual(rast.srid, 4326)
tests/gis_tests/gdal_tests/test_raster.py:59:9      - Unknown word (rast)        -- rast.srid = 3086
tests/gis_tests/gdal_tests/test_raster.py:60:26     - Unknown word (rast)        -- self.assertEqual(rast.srid, 3086)
tests/gis_tests/gdal_tests/test_raster.py:654:23    - Unknown word (reprojection)  -- # The reprojection of a raster that spans
tests/gis_tests/gdal_tests/test_raster.py:77:47     - Unknown word (gtvalues)    -- memory rasters and change gtvalues
tests/gis_tests/gdal_tests/test_raster.py:784:34    - Unknown word (loadtxt)       -- assert_array = numpy.loadtxt(
tests/gis_tests/gdal_tests/test_raster.py:78:9      - Unknown word (rsmem)       -- rsmem = GDALRaster(JSON_RASTER
tests/gis_tests/gdal_tests/test_raster.py:799:13    - Unknown word (smin)          -- smin, smax, smean, sstd
tests/gis_tests/gdal_tests/test_raster.py:799:19    - Unknown word (smax)          -- smin, smax, smean, sstd = band
tests/gis_tests/gdal_tests/test_raster.py:799:25    - Unknown word (smean)         -- smin, smax, smean, sstd = band.statistics
tests/gis_tests/gdal_tests/test_raster.py:800:30    - Unknown word (smin)          -- self.assertEqual(smin, 0)
tests/gis_tests/gdal_tests/test_raster.py:801:30    - Unknown word (smax)          -- self.assertEqual(smax, 9)
tests/gis_tests/gdal_tests/test_raster.py:802:36    - Unknown word (smean)         -- self.assertAlmostEqual(smean, 2.842331288343558)
tests/gis_tests/gdal_tests/test_raster.py:805:13    - Unknown word (smin)          -- smin, smax, smean, sstd
tests/gis_tests/gdal_tests/test_raster.py:805:19    - Unknown word (smax)          -- smin, smax, smean, sstd = band
tests/gis_tests/gdal_tests/test_raster.py:805:25    - Unknown word (smean)         -- smin, smax, smean, sstd = band.statistics
tests/gis_tests/gdal_tests/test_raster.py:806:30    - Unknown word (smin)          -- self.assertEqual(smin, 0)
tests/gis_tests/gdal_tests/test_raster.py:807:30    - Unknown word (smax)          -- self.assertEqual(smax, 9)
tests/gis_tests/gdal_tests/test_raster.py:808:36    - Unknown word (smean)         -- self.assertAlmostEqual(smean, 2.828326634228898)
tests/gis_tests/gdal_tests/test_raster.py:80:9      - Unknown word (rsmem)       -- rsmem.geotransform = [0.0
tests/gis_tests/gdal_tests/test_raster.py:81:26     - Unknown word (rsmem)       -- self.assertEqual(rsmem.geotransform, [0.0,
tests/gis_tests/gdal_tests/test_raster.py:82:9      - Unknown word (rsmem)       -- rsmem.geotransform = range
tests/gis_tests/gdal_tests/test_raster.py:83:26     - Unknown word (rsmem)       -- self.assertEqual(rsmem.geotransform, [float
tests/gis_tests/gdal_tests/test_raster.py:916:9     - Unknown word (rsmemjson)     -- rsmemjson = GDALRaster(JSON_RASTER
tests/gis_tests/gdal_tests/test_raster.py:917:23    - Unknown word (rsmemjson)     -- bandmemjson = rsmemjson.bands[0]
tests/gis_tests/gdal_tests/test_raster.py:917:9     - Unknown word (bandmemjson)   -- bandmemjson = rsmemjson.bands[0
tests/gis_tests/gdal_tests/test_raster.py:920:17    - Unknown word (bandmemjson)   -- bandmemjson.data(), numpy.array
tests/gis_tests/gdal_tests/test_raster.py:923:30    - Unknown word (bandmemjson)   -- self.assertEqual(bandmemjson.data(), list(range(
tests/gis_tests/gdal_tests/test_raster.py:98:15     - Unknown word (geotransforms) -- error_geotransforms = [
tests/gis_tests/gdal_tests/test_srs.py:104:14    - Unknown word (PROJCS)     -- "PROJCS": (None, None),
tests/gis_tests/gdal_tests/test_srs.py:107:15    - Unknown word (PROJCS)     -- ("PROJCS|GeOgCs|spheroid", "GRS
tests/gis_tests/gdal_tests/test_srs.py:108:16    - Unknown word (projcs)     -- (("projcs", 9), "UNIT"),
tests/gis_tests/gdal_tests/test_srs.py:109:16    - Unknown word (projcs)     -- (("projcs", 11), "AXIS"),
tests/gis_tests/gdal_tests/test_srs.py:132:10    - Unknown word (GEOGCS)     -- 'GEOGCS["WGS 84",DATUM["WGS
tests/gis_tests/gdal_tests/test_srs.py:133:36    - Unknown word (TOWGS)      -- AUTHORITY["EPSG","7030"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:134:10    - Unknown word (PRIMEM)     -- 'PRIMEM["Greenwich",0,AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:144:10    - Unknown word (PRIMEM)     -- 'PRIMEM["Greenwich",0,AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:174:18    - Unknown word (NZGD)       -- 'PROJCS["NZGD49 / Karamea Circuit
tests/gis_tests/gdal_tests/test_srs.py:174:27    - Unknown word (Karamea)    -- 'PROJCS["NZGD49 / Karamea Circuit",GEOGCS["NZGD
tests/gis_tests/gdal_tests/test_srs.py:174:52    - Unknown word (NZGD)       -- Karamea Circuit",GEOGCS["NZGD49",'
tests/gis_tests/gdal_tests/test_srs.py:178:10    - Unknown word (TOWGS)      -- "TOWGS84[59.47,-5.04,187.4
tests/gis_tests/gdal_tests/test_srs.py:189:15    - Unknown word (NZGD)       -- name="NZGD49 / Karamea Circuit
tests/gis_tests/gdal_tests/test_srs.py:189:24    - Unknown word (Karamea)    -- name="NZGD49 / Karamea Circuit",
tests/gis_tests/gdal_tests/test_srs.py:197:5     - Unknown word (srlist)     -- bad_srlist = (
tests/gis_tests/gdal_tests/test_srs.py:199:6     - Unknown word (OOJCS)      -- 'OOJCS["NAD83 / Texas South
tests/gis_tests/gdal_tests/test_srs.py:20:1      - Unknown word (srlist)     -- srlist = (
tests/gis_tests/gdal_tests/test_srs.py:217:18    - Unknown word (srlist)     -- for s in srlist:
tests/gis_tests/gdal_tests/test_srs.py:222:24    - Unknown word (srlist)     -- for bad in bad_srlist:
tests/gis_tests/gdal_tests/test_srs.py:22:10     - Unknown word (GEOGCS)     -- 'GEOGCS["WGS 84",DATUM["WGS
tests/gis_tests/gdal_tests/test_srs.py:233:18    - Unknown word (srlist)     -- for s in srlist:
tests/gis_tests/gdal_tests/test_srs.py:23:36     - Unknown word (TOWGS)      -- AUTHORITY["EPSG","7030"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:245:15    - Unknown word (ellps)      -- "+ellps=WGS84",
tests/gis_tests/gdal_tests/test_srs.py:246:15    - Unknown word (towgs)      -- "+towgs84=0,0,0,0,0,0,0",
tests/gis_tests/gdal_tests/test_srs.py:24:10     - Unknown word (PRIMEM)     -- 'PRIMEM["Greenwich",0,AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:335:22    - Unknown word (DHDN)       -- 'PROJCS["DHDN / Soldner 39 Langscho
tests/gis_tests/gdal_tests/test_srs.py:335:29    - Unknown word (Soldner)    -- 'PROJCS["DHDN / Soldner 39 Langschoß",'
tests/gis_tests/gdal_tests/test_srs.py:335:40    - Unknown word (Langschoß)  -- PROJCS["DHDN / Soldner 39 Langschoß",'
tests/gis_tests/gdal_tests/test_srs.py:336:22    - Unknown word (DHDN)       -- 'GEOGCS["DHDN",DATUM["Deutsches_Hauptdreiec
tests/gis_tests/gdal_tests/test_srs.py:336:35    - Unknown word (Deutsches)  -- GEOGCS["DHDN",DATUM["Deutsches_Hauptdreiecksnetz",
tests/gis_tests/gdal_tests/test_srs.py:336:45    - Unknown word (Hauptdreiecksnetz) -- DHDN",DATUM["Deutsches_Hauptdreiecksnetz",'
tests/gis_tests/gdal_tests/test_srs.py:341:52    - Unknown word (Cassini)           -- 4314"]],PROJECTION["Cassini_Soldner"],'
tests/gis_tests/gdal_tests/test_srs.py:341:60    - Unknown word (Soldner)           -- PROJECTION["Cassini_Soldner"],'
tests/gis_tests/gdal_tests/test_srs.py:353:41    - Unknown word (DHDN)              -- assertEqual(srs.name, "DHDN / Soldner 39 Langscho
tests/gis_tests/gdal_tests/test_srs.py:353:48    - Unknown word (Soldner)           -- assertEqual(srs.name, "DHDN / Soldner 39 Langschoß")
tests/gis_tests/gdal_tests/test_srs.py:353:59    - Unknown word (Langschoß)         -- "DHDN / Soldner 39 Langschoß")
tests/gis_tests/gdal_tests/test_srs.py:355:28    - Unknown word (Langschoß)         -- self.assertIn("Langschoß", srs.pretty_wkt)
tests/gis_tests/gdal_tests/test_srs.py:356:28    - Unknown word (Langschoß)         -- self.assertIn("Langschoß", srs.xml)
tests/gis_tests/gdal_tests/test_srs.py:37:14     - Unknown word (GEOGCS)     -- "GEOGCS": ("EPSG", "4326"),
tests/gis_tests/gdal_tests/test_srs.py:43:15     - Unknown word (primem)     -- ("primem|authority", "EPSG")
tests/gis_tests/gdal_tests/test_srs.py:47:10     - Unknown word (PROJCS)     -- 'PROJCS["NAD83 / Texas South
tests/gis_tests/gdal_tests/test_srs.py:48:10     - Unknown word (GEOGCS)     -- 'GEOGCS["NAD83",DATUM["North
tests/gis_tests/gdal_tests/test_srs.py:50:36     - Unknown word (PRIMEM)     -- AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0,AUTHORITY
tests/gis_tests/gdal_tests/test_srs.py:69:14     - Unknown word (PROJCS)     -- "PROJCS": ("EPSG", "32140")
tests/gis_tests/gdal_tests/test_srs.py:80:10     - Unknown word (PROJCS)     -- 'PROJCS["NAD83 / Texas South
tests/gis_tests/gdal_tests/test_srs.py:81:10     - Unknown word (GEOGCS)     -- 'GEOGCS["NAD83",DATUM["North
tests/gis_tests/gdal_tests/test_srs.py:84:10     - Unknown word (PRIMEM)     -- 'PRIMEM["Greenwich",0],'
tests/gis_tests/geo3d/models.py:16:5      - Unknown word (pointg)     -- pointg = models.PointField
tests/gis_tests/geo3d/tests.py:122:17    - Unknown word (pointg)     -- pointg=Point(*pnt_data, srid
tests/gis_tests/geo3d/tests.py:164:34    - Unknown word (pointg)     -- self.assertTrue(city.pointg.hasz)
tests/gis_tests/geo3d/tests.py:166:35    - Unknown word (pointg)     -- self.assertEqual(city.pointg.z, pnt_data[2])
tests/gis_tests/geo3d/tests.py:295:13    - Unknown word (perim)      -- ref_perim_3d = 76859.2620451
tests/gis_tests/geo3d/tests.py:296:13    - Unknown word (perim)      -- ref_perim_2d = 76859.2577803
tests/gis_tests/geo3d/tests.py:301:36    - Unknown word (perim)      -- assertAlmostEqual(ref_perim_2d, poly2d.perimeter
tests/gis_tests/geo3d/tests.py:305:36    - Unknown word (perim)      -- assertAlmostEqual(ref_perim_3d, poly3d.perimeter
tests/gis_tests/geo3d/tests.py:326:46    - Unknown word (interstateproj) -- Length(line) FROM geo3d_interstateproj2d;`
tests/gis_tests/geo3d/tests.py:328:48    - Unknown word (interstateproj) -- Length3D(line) FROM geo3d_interstateproj3d;`
tests/gis_tests/geo3d/tests.py:345:9     - Unknown word (zscales)        -- zscales = (-3, 4, 23)
tests/gis_tests/geo3d/tests.py:346:13    - Unknown word (zscale)         -- for zscale in zscales:
tests/gis_tests/geo3d/tests.py:346:23    - Unknown word (zscales)        -- for zscale in zscales:
tests/gis_tests/geo3d/tests.py:347:80    - Unknown word (zscale)         -- Scale("point", 1.0, 1.0, zscale)):
tests/gis_tests/geo3d/tests.py:348:60    - Unknown word (zscale)         -- dict[city.name][2] * zscale, city.scale.z)
tests/gis_tests/geo3d/tests.py:355:9     - Unknown word (ztranslations)  -- ztranslations = (5.23, 23, -17)
tests/gis_tests/geo3d/tests.py:356:13    - Unknown word (ztrans)         -- for ztrans in ztranslations:
tests/gis_tests/geo3d/tests.py:356:23    - Unknown word (ztranslations)  -- for ztrans in ztranslations:
tests/gis_tests/geo3d/tests.py:358:52    - Unknown word (ztrans)         -- Translate("point", 0, 0, ztrans)
tests/gis_tests/geo3d/tests.py:360:60    - Unknown word (ztrans)         -- dict[city.name][2] + ztrans, city.translate.z)
tests/gis_tests/geoapp/feeds.py:22:33     - Unknown word (georss)     -- This should attach a <georss:box> element for the
tests/gis_tests/geoapp/feeds.py:69:8      - Unknown word (cgeo)       -- "w3cgeo1": TestW3CGeo1,
tests/gis_tests/geoapp/feeds.py:70:8      - Unknown word (cgeo)       -- "w3cgeo2": TestW3CGeo2,
tests/gis_tests/geoapp/feeds.py:71:8      - Unknown word (cgeo)       -- "w3cgeo3": TestW3CGeo3,
tests/gis_tests/geoapp/test_feeds.py:109:39    - Unknown word (cgeo)       -- client.get("/feeds/w3cgeo2/")
tests/gis_tests/geoapp/test_feeds.py:111:39    - Unknown word (cgeo)       -- client.get("/feeds/w3cgeo3/")
tests/gis_tests/geoapp/test_feeds.py:25:14     - Unknown word (geofeed)    -- def test_geofeed_rss(self):
tests/gis_tests/geoapp/test_feeds.py:43:18     - Unknown word (georss)     -- "georss:box",
tests/gis_tests/geoapp/test_feeds.py:50:28     - Unknown word (georss)     -- # Ensuring the georss namespace was added
tests/gis_tests/geoapp/test_feeds.py:52:42     - Unknown word (georss)     -- getAttribute("xmlns:georss"), "http://www.georss
tests/gis_tests/geoapp/test_feeds.py:58:28     - Unknown word (georss)     -- # Ensuring the georss element was added to
tests/gis_tests/geoapp/test_feeds.py:61:69     - Unknown word (georss)     -- description", "guid", "georss:point"]
tests/gis_tests/geoapp/test_feeds.py:64:14     - Unknown word (geofeed)    -- def test_geofeed_atom(self):
tests/gis_tests/geoapp/test_feeds.py:76:28     - Unknown word (georsss)    -- # Ensuring the georsss namespace was added
tests/gis_tests/geoapp/test_feeds.py:89:14     - Unknown word (geofeed)    -- def test_geofeed_w3c(self):
tests/gis_tests/geoapp/test_feeds.py:91:61     - Unknown word (cgeo)       -- client.get("/feeds/w3cgeo1/").content)
tests/gis_tests/geoapp/test_functions.py:148:9     - Unknown word (ptown)      -- ptown = City.objects.annotate
tests/gis_tests/geoapp/test_functions.py:166:41    - Unknown word (ptown)      -- assertTrue(gml_regex.match(ptown.gml))
tests/gis_tests/geoapp/test_functions.py:182:9     - Unknown word (ptown)      -- ptown = City.objects.annotate
tests/gis_tests/geoapp/test_functions.py:186:80    - Unknown word (ptown)      -- coordinates></Point>", ptown.kml
tests/gis_tests/geoapp/test_functions.py:263:29    - Unknown word (spatialite) -- elif connection.ops.spatialite:
tests/gis_tests/geoapp/test_functions.py:352:43    - Unknown word (tobytes)    -- FromWKB(Value(g.wkb.tobytes())),
tests/gis_tests/geoapp/test_functions.py:353:43    - Unknown word (tobytes)    -- FromWKB(Value(g.wkb.tobytes()), srid=4326),
tests/gis_tests/geoapp/test_functions.py:556:9     - Unknown word (ptown)      -- ptown = City.objects.annotate
tests/gis_tests/geoapp/test_functions.py:617:15    - Unknown word (yfac)       -- xfac, yfac = 2, 3
tests/gis_tests/geoapp/test_functions.py:617:9     - Unknown word (xfac)       -- xfac, yfac = 2, 3
tests/gis_tests/geoapp/test_functions.py:618:55    - Unknown word (Spatia)     -- precision tolerance is for SpatiaLite
tests/gis_tests/geoapp/test_functions.py:619:71    - Unknown word (xfac)       -- functions.Scale("mpoly", xfac, yfac))
tests/gis_tests/geoapp/test_functions.py:619:77    - Unknown word (yfac)       -- Scale("mpoly", xfac, yfac))
tests/gis_tests/geoapp/test_functions.py:624:56    - Unknown word (xfac)       -- assertAlmostEqual(c1[0] * xfac, c2[0], tol)
tests/gis_tests/geoapp/test_functions.py:625:56    - Unknown word (yfac)       -- assertAlmostEqual(c1[1] * yfac, c2[1], tol)
tests/gis_tests/geoapp/test_functions.py:642:28    - Unknown word (Marino)     -- # Boundary for San Marino, courtesy of Bjorn Sandvik
tests/gis_tests/geoapp/test_functions.py:642:48    - Unknown word (Bjorn)      -- Marino, courtesy of Bjorn Sandvik of thematicmapping
tests/gis_tests/geoapp/test_functions.py:642:54    - Unknown word (Sandvik)    -- Marino, courtesy of Bjorn Sandvik of thematicmapping.org
tests/gis_tests/geoapp/test_functions.py:642:65    - Unknown word (thematicmapping) -- of Bjorn Sandvik of thematicmapping.org
tests/gis_tests/geoapp/test_functions.py:654:42    - Unknown word (Marino)          -- objects.create(name="San Marino", mpoly=fromstr(wkt
tests/gis_tests/geoapp/test_functions.py:662:48    - Unknown word (Marino)          -- country"."name" = 'San Marino';
tests/gis_tests/geoapp/test_functions.py:667:32    - Unknown word (Marino)          -- .get(name="San Marino")
tests/gis_tests/geoapp/test_functions.py:675:48    - Unknown word (Marino)          -- country"."name" = 'San Marino';
tests/gis_tests/geoapp/test_functions.py:737:15    - Unknown word (yfac)            -- xfac, yfac = 5, -23
tests/gis_tests/geoapp/test_functions.py:737:9     - Unknown word (xfac)            -- xfac, yfac = 5, -23
tests/gis_tests/geoapp/test_functions.py:739:53    - Unknown word (xfac)            -- functions.Translate("mpoly", xfac, yfac)
tests/gis_tests/geoapp/test_functions.py:739:59    - Unknown word (yfac)            -- Translate("mpoly", xfac, yfac)
tests/gis_tests/geoapp/test_functions.py:745:52    - Unknown word (Spatia)          -- low precision is for SpatiaLite
tests/gis_tests/geoapp/test_functions.py:768:15    - Unknown word (Spatia)          -- # SpatiaLite).
tests/gis_tests/geoapp/test_regress.py:32:17     - Unknown word (Åland)      -- name = "Åland Islands"
tests/gis_tests/geoapp/test_regress.py:42:43     - Unknown word (aggr)       -- essDBFeature("supports_extent_aggr")
tests/gis_tests/geoapp/test_regress.py:54:56     - Unknown word (Spatia)     -- converted properly, even on SpatiaLite. See #16408."
tests/gis_tests/geoapp/test_regress.py:58:21     - Unknown word (Tioga)      -- county="Tioga",
tests/gis_tests/geoapp/test_serializers.py:82:39     - Unknown word (Tioga)      -- Mansfield", county="Tioga", point="POINT(-77.
tests/gis_tests/geoapp/test_sitemaps.py:27:14     - Unknown word (geositemap) -- def test_geositemap_kml(self):
tests/gis_tests/geoapp/test_sitemaps.py:70:55     - Unknown word (Placemark)  -- getElementsByTagName("Placemark")),
tests/gis_tests/geoapp/tests.py:150:14    - Unknown word (createnull) -- def test_createnull(self):
tests/gis_tests/geoapp/tests.py:186:24    - Unknown word (geofields)  -- def test_inherited_geofields(self):
tests/gis_tests/geoapp/tests.py:190:39    - Unknown word (Tioga)      -- Mansfield", county="Tioga", point="POINT(-77.
tests/gis_tests/geoapp/tests.py:254:13    - Unknown word (klass)      -- for klass in geometry_classes
tests/gis_tests/geoapp/tests.py:255:17    - Unknown word (klass)      -- g = klass(srid=4326)
tests/gis_tests/geoapp/tests.py:262:64    - Unknown word (klass)      -- create(name=f"Empty {klass.__name__}", geom=g)
tests/gis_tests/geoapp/tests.py:264:16    - Unknown word (klass)      -- if klass is LinearRing:
tests/gis_tests/geoapp/tests.py:265:65    - Unknown word (Geomtry)    -- representable in WKB, so GEOSGeomtry.wkb
tests/gis_tests/geoapp/tests.py:277:9     - Unknown word (ptown)      -- ptown = City.objects.get(name
tests/gis_tests/geoapp/tests.py:278:51    - Unknown word (ptown)      -- filter(point__disjoint=ptown.point)
tests/gis_tests/geoapp/tests.py:280:51    - Unknown word (ptown)      -- filter(poly__disjoint=ptown.point)
tests/gis_tests/geoapp/tests.py:303:9     - Unknown word (okcity)     -- okcity = City.objects.get(name
tests/gis_tests/geoapp/tests.py:311:22    - Unknown word (EWKBHEX)    -- ) # Query w/EWKBHEX
tests/gis_tests/geoapp/tests.py:325:56    - Unknown word (okcity)     -- filter(mpoly__contains=okcity.point.wkt)), 0
tests/gis_tests/geoapp/tests.py:330:59    - Unknown word (okcity)     -- filter(mpoly__bbcontains=okcity.point)
tests/gis_tests/geoapp/tests.py:370:50    - Unknown word (lwgeom)     -- and BOX2D_right() in lwgeom_box2dfloat4.c in PostGIS
tests/gis_tests/geoapp/tests.py:370:61    - Unknown word (dfloat)     -- right() in lwgeom_box2dfloat4.c in PostGIS source
tests/gis_tests/geoapp/tests.py:441:9     - Unknown word (nullqs)     -- nullqs = State.objects.filter
tests/gis_tests/geoapp/tests.py:442:9     - Unknown word (validqs)    -- validqs = State.objects.filter
tests/gis_tests/geoapp/tests.py:445:33    - Unknown word (nullqs)     -- self.assertEqual(1, len(nullqs))
tests/gis_tests/geoapp/tests.py:446:41    - Unknown word (nullqs)     -- assertEqual("Puerto Rico", nullqs[0].name)
tests/gis_tests/geoapp/tests.py:448:64    - Unknown word (nullqs)     -- objects.filter(poly=None), nullqs)
tests/gis_tests/geoapp/tests.py:449:65    - Unknown word (validqs)    -- exclude(poly=None), validqs)
tests/gis_tests/geoapp/tests.py:452:33    - Unknown word (validqs)    -- self.assertEqual(2, len(validqs))
tests/gis_tests/geoapp/tests.py:453:40    - Unknown word (validqs)    -- names = [s.name for s in validqs]
tests/gis_tests/geoapp/tests.py:53:9      - Unknown word (nullcity)   -- nullcity = City(name="NullCity
tests/gis_tests/geoapp/tests.py:54:9      - Unknown word (nullcity)   -- nullcity.save()
tests/gis_tests/geoapp/tests.py:564:17    - Unknown word (anyinteract) -- mask = "anyinteract" if connection.ops.oracle
tests/gis_tests/geoapp/tests.py:606:43    - Unknown word (aggr)        -- essDBFeature("supports_extent_aggr")
tests/gis_tests/geoapp/tests.py:60:17     - Unknown word (nullcity)   -- nullcity.point = bad
tests/gis_tests/geoapp/tests.py:628:40    - Unknown word (Smalltown)   -- objects.filter(name=("Smalltown")).aggregate(Extent
tests/gis_tests/geoapp/tests.py:633:43    - Unknown word (aggr)        -- essDBFeature("supports_extent_aggr")
tests/gis_tests/geoapp/tests.py:646:55    - Unknown word (aggr)        -- features.supports_make_line_aggr:
tests/gis_tests/geoapp/tests.py:65:9      - Unknown word (nullcity)   -- nullcity.point = new
tests/gis_tests/geoapp/tests.py:666:42    - Unknown word (aggr)        -- lessDBFeature("supports_union_aggr")
tests/gis_tests/geoapp/tests.py:667:14    - Unknown word (unionagg)    -- def test_unionagg(self):
tests/gis_tests/geoapp/tests.py:687:42    - Unknown word (aggr)        -- lessDBFeature("supports_union_aggr")
tests/gis_tests/geoapp/tests.py:688:14    - Unknown word (geoagg)      -- def test_geoagg_subquery(self):
tests/gis_tests/geoapp/tests.py:69:32     - Unknown word (nullcity)   -- self.assertEqual(4326, nullcity.point.srid)
tests/gis_tests/geoapp/tests.py:706:14    - Unknown word (unionagg)    -- def test_unionagg_tolerance(self):
tests/gis_tests/geoapp/tests.py:709:19    - Unknown word (Forney)      -- name="Forney",
tests/gis_tests/geoapp/tests.py:712:54    - Unknown word (Forney)      -- than distance between Forney and Dallas, that's
tests/gis_tests/geoapp/tests.py:714:9     - Unknown word (forney)      -- forney_houston = GEOSGeometry
tests/gis_tests/geoapp/tests.py:719:13    - Unknown word (forney)      -- forney_houston.equals_exact
tests/gis_tests/geoapp/tests.py:729:14    - Unknown word (unionagg)    -- def test_unionagg_tolerance_escaping(self
tests/gis_tests/geoapp/tests.py:94:9      - Unknown word (nullstate)  -- nullstate = State(name="NullState
tests/gis_tests/geoapp/tests.py:95:32     - Unknown word (nullstate)  -- self.assertEqual(4326, nullstate.poly.srid) # SRID auto
tests/gis_tests/geoapp/tests.py:96:9      - Unknown word (nullstate)  -- nullstate.save()
tests/gis_tests/geogapp/models.py:18:22     - Unknown word (geogapp)    -- app_label = "geogapp"
tests/gis_tests/geogapp/models.py:41:22     - Unknown word (geogapp)    -- app_label = "geogapp"
tests/gis_tests/geogapp/tests.py:102:19    - Unknown word (Bexar)      -- names = ["Bexar", "Galveston", "Harris
tests/gis_tests/geogapp/tests.py:121:43    - Unknown word (aggr)       -- essDBFeature("supports_extent_aggr")
tests/gis_tests/geogapp/tests.py:148:29    - Unknown word (spatialite) -- elif connection.ops.spatialite:
tests/gis_tests/geogapp/tests.py:150:19    - Unknown word (Spatia)     -- # SpatiaLite < 5 returns non
tests/gis_tests/geogapp/tests.py:171:31    - Unknown word (spatialite) -- if not connection.ops.spatialite:
tests/gis_tests/geogapp/tests.py:173:13    - Unknown word (hzip)       -- hzip = Zipcode.objects.get
tests/gis_tests/geogapp/tests.py:174:55    - Unknown word (hzip)       -- get(distance__lte=0), hzip)
tests/gis_tests/geogapp/tests.py:181:37    - Unknown word (geogapp)    -- SELECT ST_Area(poly) FROM geogapp_zipcode WHERE code=
tests/gis_tests/geogapp/tests.py:184:28    - Unknown word (geolib)     -- # the database and geolib) include 5439084, 5
tests/gis_tests/geogapp/tests.py:50:9      - Unknown word (htown)      -- htown = City.objects.get(name
tests/gis_tests/geogapp/tests.py:51:41     - Unknown word (htown)      -- objects.create(point=htown.point)
tests/gis_tests/geogapp/tests.py:52:38     - Unknown word (htown)      -- duplicate = CityUnique(point=htown.point)
tests/gis_tests/geogapp/tests.py:79:9      - Unknown word (htown)      -- htown = City.objects.get(name
tests/gis_tests/geogapp/tests.py:80:47     - Unknown word (htown)      -- filter(point__exact=htown.point)
tests/gis_tests/geos_tests/test_geos.py:1098:14   - Unknown word (threed)      -- def test_threed(self):
tests/gis_tests/geos_tests/test_geos.py:1293:9    - Unknown word (prec)        -- prec = -1
tests/gis_tests/geos_tests/test_geos.py:1295:50   - Unknown word (prec)        -- sertAlmostEqual(trans.x, p.x, prec)
tests/gis_tests/geos_tests/test_geos.py:1296:50   - Unknown word (prec)        -- sertAlmostEqual(trans.y, p.y, prec)
tests/gis_tests/geos_tests/test_geos.py:1319:24   - Unknown word (nosrid)      -- def test_transform_nosrid(self):
tests/gis_tests/geos_tests/test_geos.py:1362:9    - Unknown word (tgeoms)      -- tgeoms = get_geoms(self.geometries
tests/gis_tests/geos_tests/test_geos.py:1363:9    - Unknown word (tgeoms)      -- tgeoms.extend(get_geoms(self
tests/gis_tests/geos_tests/test_geos.py:1364:9    - Unknown word (tgeoms)      -- tgeoms.extend(get_geoms(self
tests/gis_tests/geos_tests/test_geos.py:1365:9    - Unknown word (tgeoms)      -- tgeoms.extend(get_geoms(self
tests/gis_tests/geos_tests/test_geos.py:1366:9    - Unknown word (tgeoms)      -- tgeoms.append(Point(srid=4
tests/gis_tests/geos_tests/test_geos.py:1383:9    - Unknown word (pnts)        -- pnts = [Point(5, 5), Point
tests/gis_tests/geos_tests/test_geos.py:1384:20   - Unknown word (pnts)        -- for pnt in pnts:
tests/gis_tests/geos_tests/test_geos.py:1432:14   - Unknown word (linearref)   -- def test_linearref(self):
tests/gis_tests/geos_tests/test_geos.py:144:9     - Unknown word (srids)      -- srids = (-1, 32140)
tests/gis_tests/geos_tests/test_geos.py:145:21    - Unknown word (srids)      -- for srid in srids:
tests/gis_tests/geos_tests/test_geos.py:1546:25   - Unknown word (CAPI)        -- (b"3.0.0rc4-CAPI-1.3.3", (3, 0, 0)),
tests/gis_tests/geos_tests/test_geos.py:1547:22   - Unknown word (CAPI)        -- (b"3.0.0-CAPI-1.4.1", (3, 0, 0)),
tests/gis_tests/geos_tests/test_geos.py:1548:25   - Unknown word (CAPI)        -- (b"3.4.0dev-CAPI-1.8.0", (3, 4, 0)),
tests/gis_tests/geos_tests/test_geos.py:1549:25   - Unknown word (CAPI)        -- (b"3.4.0dev-CAPI-1.8.0 r0", (3, 4, 0
tests/gis_tests/geos_tests/test_geos.py:1550:22   - Unknown word (CAPI)        -- (b"3.6.2-CAPI-1.10.2 4d2925d6", (
tests/gis_tests/geos_tests/test_geos.py:1555:46   - Unknown word (libgeos)     -- django.contrib.gis.geos.libgeos.geos_version",
tests/gis_tests/geos_tests/test_geos.py:1587:37   - Unknown word (SRUD)        -- GEOSGeometry.from_ewkt("SRUD=1;POINT(1 1)")
tests/gis_tests/geos_tests/test_geos.py:158:27    - Unknown word (jsons)      -- # Loading jsons to prevent decimal difference
tests/gis_tests/geos_tests/test_geos.py:225:49    - Unknown word (srids)      -- equivalence with different srids."
tests/gis_tests/geos_tests/test_geos.py:26:30     - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import geos_version
tests/gis_tests/geos_tests/test_geos.py:306:42    - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos.geos_version", lambda
tests/gis_tests/geos_tests/test_geos.py:400:37    - Unknown word (linestrings) -- line in self.geometries.linestrings:
tests/gis_tests/geos_tests/test_geos.py:513:35    - Unknown word (linearrings) -- rr in self.geometries.linearrings:
tests/gis_tests/geos_tests/test_geos.py:722:25    - Unknown word (tset)        -- tset = (5, 23)
tests/gis_tests/geos_tests/test_geos.py:724:25    - Unknown word (tset)        -- tset = (5, 23, 8)
tests/gis_tests/geos_tests/test_geos.py:725:29    - Unknown word (tset)        -- cs[i] = tset
tests/gis_tests/geos_tests/test_geos.py:728:40    - Unknown word (tset)        -- for j in range(len(tset)):
tests/gis_tests/geos_tests/test_geos.py:729:33    - Unknown word (tset)        -- cs[i] = tset
tests/gis_tests/geos_tests/test_geos.py:794:42    - Unknown word (sdiff)       -- fromstr(self.geometries.sdiff_geoms[i].wkt)
tests/gis_tests/geos_tests/test_geos.py:807:56    - Unknown word (quadsegs)    -- point for the number of quadsegs.
tests/gis_tests/geos_tests/test_geos.py:809:32    - Unknown word (quadsegs)    -- g.buffer(bg.width, quadsegs=1.1)
tests/gis_tests/geos_tests/test_geos.py:817:56    - Unknown word (quadsegs)    -- point for the number of quadsegs.
tests/gis_tests/geos_tests/test_geos.py:819:43    - Unknown word (quadsegs)    -- with_style(bg.width, quadsegs=1.1)
tests/gis_tests/geos_tests/test_geos.py:854:22    - Unknown word (quadsegs)    -- "quadsegs",
tests/gis_tests/geos_tests/test_geos_mutation.py:1:27      - Unknown word (Aryeh)      -- Copyright (c) 2008-2009 Aryeh Leib Taurog, all rights
tests/gis_tests/geos_tests/test_geos_mutation.py:1:33      - Unknown word (Leib)       -- (c) 2008-2009 Aryeh Leib Taurog, all rights reserved
tests/gis_tests/geos_tests/test_geos_mutation.py:1:38      - Unknown word (Taurog)     -- 008-2009 Aryeh Leib Taurog, all rights reserved
tests/gis_tests/geos_tests/test_geos_mutation.py:2:42      - Unknown word (Aryeh)      -- original contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_geos_mutation.py:2:48      - Unknown word (Leib)       -- contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_geos_mutation.py:2:53      - Unknown word (Taurog)     -- contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_io.py:12:30     - Unknown word (libgeos)    -- django.contrib.gis.geos.libgeos import geos_version
tests/gis_tests/geos_tests/test_io.py:16:7      - Unknown word (GEOSIO)     -- class GEOSIOTest(SimpleTestCase)
tests/gis_tests/geos_tests/test_io.py:91:24     - Unknown word (byteorders) -- # Ensuring bad byteorders are not accepted.
tests/gis_tests/geos_tests/test_mutable_list.py:102:13    - Unknown word (setfcn)     -- def setfcn(x, i, j, k, L):
tests/gis_tests/geos_tests/test_mutable_list.py:137:29    - Unknown word (setfcn)     -- setfcn(ul, i, j, k, sliceLen
tests/gis_tests/geos_tests/test_mutable_list.py:140:33    - Unknown word (setfcn)     -- setfcn(ul, i, j, k, sliceLen
tests/gis_tests/geos_tests/test_mutable_list.py:159:16    - Unknown word (delslice)   -- def test03_delslice(self):
tests/gis_tests/geos_tests/test_mutable_list.py:1:27      - Unknown word (Aryeh)      -- Copyright (c) 2008-2009 Aryeh Leib Taurog, http:/
tests/gis_tests/geos_tests/test_mutable_list.py:1:33      - Unknown word (Leib)       -- (c) 2008-2009 Aryeh Leib Taurog, http://www.aryehleib
tests/gis_tests/geos_tests/test_mutable_list.py:1:38      - Unknown word (Taurog)     -- 008-2009 Aryeh Leib Taurog, http://www.aryehleib
tests/gis_tests/geos_tests/test_mutable_list.py:226:13    - Unknown word (setfcn)     -- def setfcn(x, i):
tests/gis_tests/geos_tests/test_mutable_list.py:229:13    - Unknown word (getfcn)     -- def getfcn(x, i):
tests/gis_tests/geos_tests/test_mutable_list.py:232:13    - Unknown word (delfcn)     -- def delfcn(x, i):
tests/gis_tests/geos_tests/test_mutable_list.py:238:17    - Unknown word (setfcn)     -- setfcn(ul, i)
tests/gis_tests/geos_tests/test_mutable_list.py:240:17    - Unknown word (getfcn)     -- getfcn(ul, i)
tests/gis_tests/geos_tests/test_mutable_list.py:242:17    - Unknown word (delfcn)     -- delfcn(ul, i)
tests/gis_tests/geos_tests/test_mutable_list.py:276:13    - Unknown word (popfcn)     -- def popfcn(x, i):
tests/gis_tests/geos_tests/test_mutable_list.py:280:13    - Unknown word (popfcn)     -- popfcn(ul, self.limit)
tests/gis_tests/geos_tests/test_mutable_list.py:282:13    - Unknown word (popfcn)     -- popfcn(ul, -1 - self.limit
tests/gis_tests/geos_tests/test_mutable_list.py:297:13    - Unknown word (indexfcn)   -- def indexfcn(x, v):
tests/gis_tests/geos_tests/test_mutable_list.py:300:13    - Unknown word (removefcn)  -- def removefcn(x, v):
tests/gis_tests/geos_tests/test_mutable_list.py:304:13    - Unknown word (indexfcn)   -- indexfcn(ul, 40)
tests/gis_tests/geos_tests/test_mutable_list.py:306:13    - Unknown word (removefcn)  -- removefcn(ul, 40)
tests/gis_tests/geos_tests/test_mutable_list.py:328:13    - Unknown word (delfcn)     -- def delfcn(x, i):
tests/gis_tests/geos_tests/test_mutable_list.py:336:17    - Unknown word (delfcn)     -- delfcn(ul, i)
tests/gis_tests/geos_tests/test_mutable_list.py:4:42      - Unknown word (Aryeh)      -- original contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_mutable_list.py:4:48      - Unknown word (Leib)       -- contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_mutable_list.py:4:53      - Unknown word (Taurog)     -- contribution by Aryeh Leib Taurog, which was
tests/gis_tests/geos_tests/test_mutable_list.py:78:16     - Unknown word (getslice)   -- def test01_getslice(self):
tests/gis_tests/geos_tests/test_mutable_list.py:99:16     - Unknown word (setslice)   -- def test02_setslice(self):
tests/gis_tests/gis_migrations/migrations/0002_create_models.py:93:19     - Unknown word (rast)       -- ("rast", models.fields.RasterField
tests/gis_tests/gis_migrations/test_commands.py:27:68     - Unknown word (Geodjango)  -- command when a model uses Geodjango
tests/gis_tests/gis_migrations/test_commands.py:30:65     - Unknown word (spatialite) -- in migrations where spatialite is
tests/gis_tests/gis_migrations/test_commands.py:62:23     - Unknown word (unmigration) -- # Revert the "unmigration"
tests/gis_tests/gis_migrations/test_commands.py:8:42      - Unknown word (Geodjango)  -- the migrate command in Geodjango.
tests/gis_tests/gis_migrations/test_operations.py:101:25    - Unknown word (convexhull) -- "st_convexhull(%s)" % column in c[
tests/gis_tests/gis_migrations/test_operations.py:22:46     - Unknown word (indclass)   -- i on oc.oid = ANY(i.indclass)
tests/gis_tests/gis_migrations/test_operations.py:244:71    - Unknown word (rast)       -- RemoveField, "Neighborhood", "rast")
tests/gis_tests/gis_migrations/test_operations.py:245:57    - Unknown word (rast)       -- gis_neighborhood", "rast")
tests/gis_tests/gis_migrations/test_operations.py:254:64    - Unknown word (rast)       -- gis_neighborhood", "rast", raster=True)
tests/gis_tests/gis_migrations/test_operations.py:67:31     - Unknown word (rast)       -- test_fields += [("rast", fields.RasterField
tests/gis_tests/gis_migrations/test_operations.py:87:25     - Unknown word (convexhull) -- "st_convexhull(%s)" % column in c[
tests/gis_tests/inspectapp/models.py:18:5      - Unknown word (pointg)     -- pointg = models.PointField
tests/gis_tests/inspectapp/tests.py:121:23    - Unknown word (shapefiles)   -- # Writing shapefiles via GDAL currently does
tests/gis_tests/inspectapp/tests.py:146:15    - Unknown word (Spatia)       -- # SpatiaLite introspection is
tests/gis_tests/inspectapp/tests.py:219:41    - Unknown word (spatialite)   -- contrib.gis.db.backends.spatialite": ("SQLite", "%(db_name
tests/gis_tests/inspectapp/tests.py:234:14    - Unknown word (Spatia)       -- # SQLite/SpatiaLite in-memory databases
tests/gis_tests/inspectapp/tests.py:24:49     - Unknown word (inspectapp) -- filter=lambda tn: tn == "inspectapp_allogrfields",
tests/gis_tests/inspectapp/tests.py:24:60     - Unknown word (allogrfields) -- tn: tn == "inspectapp_allogrfields",
tests/gis_tests/inspectapp/tests.py:40:49     - Unknown word (inspectapp)   -- filter=lambda tn: tn == "inspectapp_fields3d",
tests/gis_tests/inspectapp/tests.py:48:22     - Unknown word (pointg)       -- "pointg = models.PointField
tests/gis_tests/inspectapp/tests.py:51:32     - Unknown word (pointg)       -- self.assertIn("pointg = models.PointField
tests/gis_tests/inspectapp/tests.py:56:28     - Unknown word (pointg)       -- self.assertIn("pointg = models.GeometryField
tests/gis_tests/inspectapp/tests.py:90:62     - Unknown word (leitung)      -- DATA, "gas_lines", "gas_leitung.shp")
tests/gis_tests/layermap/models.py:101:1     - Unknown word (cofeat)     -- cofeat_mapping = {
tests/gis_tests/layermap/tests.py:177:36    - Unknown word (mpolygon)    -- ValueError, ("name", "mpolygon")),
tests/gis_tests/layermap/tests.py:192:34    - Unknown word (nombre)      -- fk_map2["state"] = {"nombre": "State"}
tests/gis_tests/layermap/tests.py:228:47    - Unknown word (cofeat)      -- CountyFeat, co_shp, cofeat_mapping, transform=False
tests/gis_tests/layermap/tests.py:294:9     - Unknown word (icity)       -- icity_mapping = {
tests/gis_tests/layermap/tests.py:302:46    - Unknown word (icity)       -- ayerMapping(ICity1, city_shp, icity_mapping)
tests/gis_tests/layermap/tests.py:306:46    - Unknown word (icity)       -- ayerMapping(ICity2, city_shp, icity_mapping)
tests/gis_tests/layermap/tests.py:32:5      - Unknown word (cofeat)     -- cofeat_mapping,
tests/gis_tests/layermap/tests.py:41:39     - Unknown word (emptypoints) -- path / "invalid" / "emptypoints.shp"
tests/gis_tests/layermap/tests.py:45:11     - Unknown word (Bexar)       -- NAMES = ["Bexar", "Galveston", "Harris
tests/gis_tests/layermap/tests.py:60:25     - Unknown word (Nombre)      -- bad2["name"] = "Nombre"
tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:25:22     - Unknown word (rast)       -- "rast",
tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:34:22     - Unknown word (rastprojected) -- "rastprojected",
tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:63:29     - Unknown word (rasterapp)     -- to="rasterapp.rastermodel",
tests/gis_tests/rasterapp/migrations/0002_rastermodels.py:8:11      - Unknown word (rasterapp)  -- ("rasterapp", "0001_setup_extensions
tests/gis_tests/rasterapp/models.py:5:5       - Unknown word (rast)       -- rast = models.RasterField
tests/gis_tests/rasterapp/models.py:8:5       - Unknown word (rastprojected) -- rastprojected = models.RasterField
tests/gis_tests/rasterapp/test_rasterfield.py:15:21     - Unknown word (textrasters) -- from ..data.rasters.textrasters import JSON_RASTER
tests/gis_tests/rasterapp/test_rasterfield.py:170:9     - Unknown word (unprojected)   -- unprojected coordinate systems.
tests/gis_tests/rasterapp/test_rasterfield.py:194:22    - Unknown word (rastprojected) -- "rastprojected__0__",
tests/gis_tests/rasterapp/test_rasterfield.py:196:22    - Unknown word (rastprojected) -- "rastprojected__",
tests/gis_tests/rasterapp/test_rasterfield.py:21:34     - Unknown word (rasterapp)   -- available_apps = ["gis_tests.rasterapp"]
tests/gis_tests/rasterapp/test_rasterfield.py:239:34    - Unknown word (rastprojected) -- combo_keys[2] = "rastprojected__" + name
tests/gis_tests/rasterapp/test_rasterfield.py:24:9      - Unknown word (rast)        -- rast = GDALRaster(
tests/gis_tests/rasterapp/test_rasterfield.py:287:41    - Unknown word (rastprojected) -- RasterModel.objects.filter(rastprojected__dwithin=(rast, D(km
tests/gis_tests/rasterapp/test_rasterfield.py:298:24    - Unknown word (unprojected)   -- # Filter in an unprojected coordinate system.
tests/gis_tests/rasterapp/test_rasterfield.py:37:13     - Unknown word (rast)        -- rast=rast,
tests/gis_tests/rasterapp/test_rasterfield.py:37:18     - Unknown word (rast)        -- rast=rast,
tests/gis_tests/rasterapp/test_rasterfield.py:38:13     - Unknown word (rastprojected) -- rastprojected=rast,
tests/gis_tests/rasterapp/test_rasterfield.py:38:27     - Unknown word (rast)          -- rastprojected=rast,
tests/gis_tests/rasterapp/test_rasterfield.py:400:26    - Unknown word (polygonized)   -- def test_lookup_with_polygonized_raster(self):
tests/gis_tests/rasterapp/test_rasterfield.py:47:40     - Unknown word (rast)          -- RasterModel.objects.create(rast=None)
tests/gis_tests/relatedapp/models.py:38:18     - Unknown word (curveball)  -- # Throwing a curveball w/`db_column` here.
tests/gis_tests/relatedapp/models.py:39:55     - Unknown word (mycenter)   -- srid=2276, db_column="mycenter")
tests/gis_tests/relatedapp/tests.py:123:9     - Unknown word (pcity)      -- pcity = City.objects.get(name
tests/gis_tests/relatedapp/tests.py:128:14    - Unknown word (pcity)      -- c1 = pcity.location.point
tests/gis_tests/relatedapp/tests.py:132:29    - Unknown word (pcity)      -- name="P1", city=pcity, center1=c1, center
tests/gis_tests/relatedapp/tests.py:147:29    - Unknown word (pcity)      -- name="P2", city=pcity, center1=c1, center
tests/gis_tests/relatedapp/tests.py:184:9     - Unknown word (gvqs)       -- gvqs = Location.objects.values
tests/gis_tests/relatedapp/tests.py:185:9     - Unknown word (gvlqs)      -- gvlqs = Location.objects.values
tests/gis_tests/relatedapp/tests.py:189:33    - Unknown word (gvqs)       -- m, d, t in zip(gqs, gvqs, gvlqs):
tests/gis_tests/relatedapp/tests.py:189:39    - Unknown word (gvlqs)      -- t in zip(gqs, gvqs, gvlqs):
tests/gis_tests/relatedapp/tests.py:226:39    - Unknown word (Kecksburg)  -- City.objects.get(name="Kecksburg").location.point.buffer
tests/gis_tests/relatedapp/tests.py:233:24    - Unknown word (Kecksburg)  -- self.assertIn("Kecksburg", names)
tests/gis_tests/relatedapp/tests.py:249:45    - Unknown word (Paglen)     -- be one author (Trevor Paglen) returned by this query
tests/gis_tests/relatedapp/tests.py:25:15     - Unknown word (Kecksburg)  -- ("Kecksburg", "PA", -79.460734,
tests/gis_tests/relatedapp/tests.py:282:44    - Unknown word (aggr)       -- ssDBFeature("supports_collect_aggr")
tests/gis_tests/relatedapp/tests.py:308:44    - Unknown word (aggr)       -- ssDBFeature("supports_collect_aggr")
tests/gis_tests/relatedapp/tests.py:334:59    - Unknown word (Spatia)     -- .7128 -2.006)"),  # SpatiaLite collapse to POINT
tests/gis_tests/relatedapp/tests.py:36:43     - Unknown word (aggr)       -- essDBFeature("supports_extent_aggr")
tests/gis_tests/relatedapp/tests.py:40:9      - Unknown word (aggs)       -- aggs = City.objects.aggregate
tests/gis_tests/relatedapp/tests.py:44:9      - Unknown word (txpa)       -- txpa_extent = (-97.51611
tests/gis_tests/relatedapp/tests.py:51:14     - Unknown word (aggs)       -- e3 = aggs["location__point__extent
tests/gis_tests/relatedapp/tests.py:56:43     - Unknown word (txpa)       -- [(all_extent, e1), (txpa_extent, e2), (all_extent
tests/gis_tests/relatedapp/tests.py:60:43     - Unknown word (aggr)       -- essDBFeature("supports_extent_aggr")
tests/gis_tests/relatedapp/tests.py:73:42     - Unknown word (aggr)       -- lessDBFeature("supports_union_aggr")
tests/gis_tests/relatedapp/tests.py:77:9      - Unknown word (aggs)       -- aggs = City.objects.aggregate
tests/gis_tests/relatedapp/tests.py:97:14     - Unknown word (aggs)       -- u3 = aggs["location__point__union
tests/gis_tests/test_data.py:15:5      - Unknown word (tuplize)    -- def tuplize(seq):
tests/gis_tests/test_data.py:18:22     - Unknown word (tuplize)    -- return tuple(tuplize(i) for i in seq)
tests/gis_tests/test_data.py:22:5      - Unknown word (strconvert) -- def strconvert(d):
tests/gis_tests/test_data.py:64:27     - Unknown word (tuplize)    -- self.coords = tuplize(coords)
tests/gis_tests/test_data.py:67:44     - Unknown word (tuplize)    -- cs = ext_ring_cs and tuplize(ext_ring_cs)
tests/gis_tests/test_data.py:78:44     - Unknown word (strconvert) -- self, key, [TestGeom(**strconvert(kw)) for kw in value
tests/gis_tests/test_data.py:92:30     - Unknown word (strconvert) -- return TestGeomSet(**strconvert(geometries))
tests/gis_tests/test_geoforms.py:33:9      - Unknown word (xform)      -- xform_geom = GEOSGeometry
tests/gis_tests/test_geoforms.py:41:25     - Unknown word (xform)      -- self.assertTrue(xform_geom.equals_exact(cleaned
tests/gis_tests/test_geoip2.py:143:34    - Unknown word (Boxford)    -- "city": "Boxford",
tests/gis_tests/test_geoip2.py:226:34    - Unknown word (mmdb)       -- CITY="GeoIP2-City-Test.mmdb",
tests/gis_tests/test_geoip2.py:227:40    - Unknown word (mmdb)       -- GeoIP2-Country-Test.mmdb",
tests/gis_tests/test_geoip2.py:243:75    - Unknown word (mmdb)       -- path("GeoLite2-ASN-Test.mmdb")):
tests/gis_tests/test_geoip2.py:24:36     - Unknown word (mmdb)       -- "GeoLite2-City-Test.mmdb",
tests/gis_tests/test_geoip2.py:25:42     - Unknown word (mmdb)       -- GeoLite2-Country-Test.mmdb",
tests/gis_tests/test_ptr.py:42:20     - Unknown word (ptrs)       -- # (in `bad_ptrs`) aren't allowed.
tests/gis_tests/test_ptr.py:43:13     - Unknown word (ptrs)       -- bad_ptrs = (5, ctypes.c_char
tests/gis_tests/test_ptr.py:44:28     - Unknown word (ptrs)       -- for bad_ptr in bad_ptrs:
tests/gis_tests/test_spatialrefsys.py:101:56    - Unknown word (srtext)        -- srs.wkt.startswith(sd["srtext"]))
tests/gis_tests/test_spatialrefsys.py:118:56    - Unknown word (srtext)        -- srs.wkt.startswith(sd["srtext"]))
tests/gis_tests/test_spatialrefsys.py:126:13    - Unknown word (ellps)         -- ellps1 = sd["ellipsoid"]
tests/gis_tests/test_spatialrefsys.py:127:13    - Unknown word (prec)          -- prec = sd["eprec"]
tests/gis_tests/test_spatialrefsys.py:127:24    - Unknown word (eprec)         -- prec = sd["eprec"]
tests/gis_tests/test_spatialrefsys.py:131:13    - Unknown word (ellps)         -- ellps2 = srs.ellipsoid
tests/gis_tests/test_spatialrefsys.py:134:40    - Unknown word (ellps)         -- self.assertAlmostEqual(ellps1[i], ellps2[i], prec
tests/gis_tests/test_spatialrefsys.py:134:51    - Unknown word (ellps)         -- assertAlmostEqual(ellps1[i], ellps2[i], prec[i])
tests/gis_tests/test_spatialrefsys.py:134:62    - Unknown word (prec)          -- ellps1[i], ellps2[i], prec[i])
tests/gis_tests/test_spatialrefsys.py:13:10     - Unknown word (srtext)     -- "srtext": 'GEOGCS["WGS 84",DATUM
tests/gis_tests/test_spatialrefsys.py:13:20     - Unknown word (GEOGCS)     -- "srtext": 'GEOGCS["WGS 84",DATUM["WGS
tests/gis_tests/test_spatialrefsys.py:15:48     - Unknown word (towgs)      -- longlat (\+datum=WGS84 |\+towgs84=0,0,0,0,0,0,0 )\+no
tests/gis_tests/test_spatialrefsys.py:21:10     - Unknown word (spatialite) -- "spatialite": True,
tests/gis_tests/test_spatialrefsys.py:24:10     - Unknown word (eprec)      -- "eprec": (1, 1, 9),
tests/gis_tests/test_spatialrefsys.py:29:9      - Unknown word (GEOGCS)     -- GEOGCS["WGS 84",
tests/gis_tests/test_spatialrefsys.py:34:5      - Unknown word (PRIMEM)     -- PRIMEM["Greenwich",0,
tests/gis_tests/test_spatialrefsys.py:46:10     - Unknown word (srtext)     -- "srtext": (
tests/gis_tests/test_spatialrefsys.py:47:14     - Unknown word (PROJCS)     -- 'PROJCS["NAD83 / Texas South
tests/gis_tests/test_spatialrefsys.py:47:51     - Unknown word (GEOGCS)     -- Texas South Central",GEOGCS["NAD83",'
tests/gis_tests/test_spatialrefsys.py:53:61     - Unknown word (ellps)      -- 00 \+y_0=4000000 (\+ellps=GRS80 )?"
tests/gis_tests/test_spatialrefsys.py:54:33     - Unknown word (towgs)      -- r"(\+datum=NAD83 |\+towgs84=0,0,0,0,0,0,0 )?\
tests/gis_tests/test_spatialrefsys.py:60:10     - Unknown word (spatialite) -- "spatialite": False,
tests/gis_tests/test_spatialrefsys.py:63:10     - Unknown word (eprec)      -- "eprec": (1, 5, 10),
tests/gis_tests/test_spatialrefsys.py:68:27     - Unknown word (spatialrefsys) -- skipUnlessDBFeature("has_spatialrefsys_table")
tests/gis_tests/test_spatialrefsys.py:93:27     - Unknown word (Spatialite)    -- # ("epsg") on Spatialite.
tests/gis_tests/test_spatialrefsys.py:99:37     - Unknown word (srtext)        -- No PROJ and different srtext on Oracle.
tests/handlers/tests.py:188:14    - Unknown word (suspiciousop) -- def test_suspiciousop_in_view_returns_400
tests/handlers/tests.py:304:20    - Unknown word (suspiciousop) -- async def test_suspiciousop_in_view_returns_400
tests/handlers/tests.py:333:31    - Unknown word (somepath)     -- **{"path": "/root/somepath/", "root_path": "/root
tests/handlers/tests.py:335:47    - Unknown word (somepath)     -- request.path, "/root/somepath/")
tests/handlers/tests.py:337:47    - Unknown word (somepath)     -- request.path_info, "/somepath/")
tests/handlers/tests.py:342:76    - Unknown word (somepath)     -- path": "/FORCED_PREFIX/somepath/"})
tests/handlers/tests.py:343:56    - Unknown word (somepath)     -- path, "/FORCED_PREFIX/somepath/")
tests/handlers/tests.py:47:15     - Unknown word (MSIE)       -- # MSIE).
tests/handlers/tests.py:58:53     - Unknown word (ufffd)      -- café", "café", "caf\ufffd", "café"])
tests/httpwrappers/tests.py:120:25    - Unknown word (xebst)      -- q["next"] = "/t\xebst&key/"
tests/httpwrappers/tests.py:291:28    - Unknown word (ǝnlɐʌ)      -- expected["ʎǝʞ"] = "ǝnlɐʌ"
tests/httpwrappers/tests.py:356:36    - Unknown word (Edel)       -- attachment; filename="EdelRot_Blu\u0308te (3)-
tests/httpwrappers/tests.py:415:23    - Unknown word (idan)       -- r.content = ["idan", "alex", "jacob"]
tests/httpwrappers/tests.py:416:39    - Unknown word (idanalexjacob) -- assertEqual(r.content, b"idanalexjacob")
tests/httpwrappers/tests.py:425:25    - Unknown word (unichr)        -- # '\xde\x9e' == unichr(1950).encode()
tests/httpwrappers/tests.py:449:23    - Unknown word (isnt)          -- def test_iterator_isnt_rewound(self):
tests/httpwrappers/tests.py:464:18    - Unknown word (привет)        -- r.write("привет")
tests/httpwrappers/tests.py:486:48    - Unknown word (nbaz)          -- content, b"foo\nbar\nbaz\n")
tests/httpwrappers/tests.py:615:25    - Unknown word (łóżko)         -- data = {"key": "łóżko"}
tests/httpwrappers/tests.py:675:25    - Unknown word (unichr)        -- # '\xc3\xa9' == unichr(233).encode()
tests/httpwrappers/tests.py:849:27    - Unknown word (keebler)       -- parse_cookie('keebler="E=mc2; L=\\"Loves\
tests/httpwrappers/tests.py:850:15    - Unknown word (keebler)       -- {"keebler": '"E=mc2', "L": '\
tests/httpwrappers/tests.py:853:40    - Unknown word (keebler)       -- assertEqual(parse_cookie("keebler=E=mc2"), {"keebler"
tests/httpwrappers/tests.py:853:59    - Unknown word (keebler)       -- "keebler=E=mc2"), {"keebler": "E=mc2"})
tests/httpwrappers/tests.py:863:21    - Unknown word (edgecases)     -- def test_cookie_edgecases(self):
tests/httpwrappers/tests.py:895:33    - Unknown word (André)         -- parse_cookie("saint=André Bessette"), {"saint
tests/httpwrappers/tests.py:895:39    - Unknown word (Bessette)      -- cookie("saint=André Bessette"), {"saint": "André
tests/httpwrappers/tests.py:895:62    - Unknown word (André)         -- Bessette"), {"saint": "André Bessette"}
tests/httpwrappers/tests.py:895:68    - Unknown word (Bessette)      -- ), {"saint": "André Bessette"}
tests/httpwrappers/tests.py:921:9     - Unknown word (rawdata)       -- rawdata = 'Customer="WILE_E
tests/httpwrappers/tests.py:922:46    - Unknown word (rawdata)       -- "Set-Cookie: %s" % rawdata
tests/httpwrappers/tests.py:925:16    - Unknown word (rawdata)       -- C.load(rawdata)
tests/humanize_tests/tests.py:371:18    - Unknown word (Millionen)  -- "1,2 Millionen",
tests/humanize_tests/tests.py:372:18    - Unknown word (Millionen)  -- "1,3 Millionen",
tests/humanize_tests/tests.py:373:18    - Unknown word (Milliarde)  -- "1,0 Milliarde",
tests/humanize_tests/tests.py:374:18    - Unknown word (Milliarden) -- "2,0 Milliarden",
tests/humanize_tests/tests.py:375:18    - Unknown word (Billionen)  -- "6,0 Billionen",
tests/humanize_tests/tests.py:412:9     - Unknown word (notdate)    -- notdate = "I'm not a date value
tests/humanize_tests/tests.py:414:59    - Unknown word (notdate)    -- tomorrow, someday, notdate, None)
tests/humanize_tests/tests.py:597:14    - Unknown word (před)       -- "před 1\xa0dnem",
tests/humanize_tests/tests.py:597:24    - Unknown word (dnem)       -- "před 1\xa0dnem",
tests/humanize_tests/tests.py:598:14    - Unknown word (před)       -- "před 2\xa0dny",
tests/humanize_tests/tests.py:599:14    - Unknown word (před)       -- "před 1\xa0měsícem",
tests/humanize_tests/tests.py:599:24    - Unknown word (měsícem)    -- "před 1\xa0měsícem",
tests/humanize_tests/tests.py:600:14    - Unknown word (před)       -- "před 2\xa0měsíci",
tests/humanize_tests/tests.py:600:24    - Unknown word (měsíci)     -- "před 2\xa0měsíci",
tests/humanize_tests/tests.py:601:14    - Unknown word (před)       -- "před 1\xa0rokem, 4\xa0měs
tests/humanize_tests/tests.py:601:24    - Unknown word (rokem)      -- "před 1\xa0rokem, 4\xa0měsíci",
tests/humanize_tests/tests.py:601:36    - Unknown word (měsíci)     -- ed 1\xa0rokem, 4\xa0měsíci",
tests/humanize_tests/tests.py:602:24    - Unknown word (lety)       -- "před 2\xa0lety, 4\xa0měsíci",
tests/humanize_tests/tests.py:602:35    - Unknown word (měsíci)     -- před 2\xa0lety, 4\xa0měsíci",
tests/humanize_tests/tests.py:605:22    - Unknown word (měsíc)      -- "za 1\xa0měsíc",
tests/humanize_tests/tests.py:606:22    - Unknown word (měsíce)     -- "za 2\xa0měsíce",
tests/humanize_tests/tests.py:607:32    - Unknown word (měsíce)     -- "za 1\xa0rok, 4\xa0měsíce",
tests/humanize_tests/tests.py:608:22    - Unknown word (roky)       -- "za 2\xa0roky, 4\xa0měsíce",
tests/humanize_tests/tests.py:608:33    - Unknown word (měsíce)     -- "za 2\xa0roky, 4\xa0měsíce",
tests/i18n/commands/__init__.py:13:49     - Unknown word (Foos)       -- s Foo", "%(number)s Foos", number) % {"number
tests/i18n/contenttypes/tests.py:25:57     - Unknown word (Société)    -- company_type), "I18N | Société")
tests/i18n/patterns/tests.py:146:65    - Unknown word (vertaald)   -- prefix-translated"), "/vertaald/")
tests/i18n/patterns/tests.py:147:71    - Unknown word (vertaald)   -- translated-regex"), "/vertaald-regex/")
tests/i18n/patterns/tests.py:150:19    - Unknown word (vertaald)   -- "/vertaald/yeah/",
tests/i18n/patterns/tests.py:154:65    - Unknown word (traduzidos) -- prefix-translated"), "/traduzidos/")
tests/i18n/patterns/tests.py:156:58    - Unknown word (traduzidos) -- translated-regex"), "/traduzidos-regex/"
tests/i18n/patterns/tests.py:160:19    - Unknown word (traduzidos) -- "/traduzidos/yeah/",
tests/i18n/patterns/tests.py:168:53    - Unknown word (gebruikers) -- reverse("users"), "/nl/gebruikers/")
tests/i18n/patterns/tests.py:172:56    - Unknown word (usuarios)   -- reverse("users"), "/pt-br/usuarios/")
tests/i18n/patterns/tests.py:179:70    - Unknown word (gebruikers) -- users/", "nl"), "/nl/gebruikers/")
tests/i18n/patterns/tests.py:182:68    - Unknown word (profiel)    -- register/", "nl"), "/nl/profiel/registreren/"
tests/i18n/patterns/tests.py:187:22    - Unknown word (profiel)    -- "/nl/profiel/registreren-als-pad
tests/i18n/patterns/tests.py:208:49    - Unknown word (gebruikers) -- ssertEqual(translate_url("/nl/gebruikers/", "en"), "/en/users
tests/i18n/patterns/tests.py:216:22    - Unknown word (vertaald)   -- ("nl", "/vertaald/apo/"),
tests/i18n/patterns/tests.py:217:25    - Unknown word (traduzidos) -- ("pt-br", "/traduzidos/apo/"),
tests/i18n/patterns/tests.py:228:25    - Unknown word (interepreted) -- def test_locale_not_interepreted_as_regex(self):
tests/i18n/patterns/tests.py:231:49    - Unknown word (subpattern)   -- missing ), unterminated subpattern at position 1
tests/i18n/patterns/tests.py:248:64    - Unknown word (profiel)      -- account:register"), "/nl/profiel/registreren/")
tests/i18n/patterns/tests.py:250:59    - Unknown word (profiel)      -- register-as-path"), "/nl/profiel/registreren-als-pad
tests/i18n/patterns/tests.py:275:15    - Unknown word (profiel)      -- "/profiel/registreren/", headers
tests/i18n/patterns/tests.py:296:15    - Unknown word (conta)        -- "/conta/registre-se/", headers
tests/i18n/patterns/tests.py:296:21    - Unknown word (registre)     -- "/conta/registre-se/", headers={"accept
tests/i18n/patterns/tests.py:298:48    - Unknown word (conta)        -- rtRedirects(response, "/pt-br/conta/registre-se/")
tests/i18n/patterns/tests.py:298:54    - Unknown word (registre)     -- response, "/pt-br/conta/registre-se/")
tests/i18n/patterns/tests.py:426:44    - Unknown word (conta)        -- self.client.get("/pt-br/conta/registre-se/")
tests/i18n/patterns/tests.py:426:50    - Unknown word (registre)     -- client.get("/pt-br/conta/registre-se/")
tests/i18n/patterns/tests.py:447:38    - Unknown word (gebruikers)   -- = self.client.get("/gebruikers/", headers={"accept
tests/i18n/patterns/tests.py:452:38    - Unknown word (gebruikers)   -- = self.client.get("/gebruikers/")
tests/i18n/patterns/tests.py:493:55    - Unknown word (vertaald)     -- strip().split(), ["/vertaald/", "/traduzidos/"]
tests/i18n/patterns/tests.py:493:69    - Unknown word (traduzidos)   -- ), ["/vertaald/", "/traduzidos/"]
tests/i18n/sampleproject/update_catalogs.py:48:5      - Unknown word (pofile)     -- pofile = os.path.join(proj
tests/i18n/sampleproject/update_catalogs.py:50:15     - Unknown word (pofile)     -- with open(pofile) as f:
tests/i18n/sampleproject/update_catalogs.py:53:15     - Unknown word (pofile)     -- with open(pofile, "w") as f:
tests/i18n/test_compilation.py:205:16    - Unknown word (somedir)    -- [("somedir", ["ignore", "locale
tests/i18n/test_compilation.py:207:44    - Unknown word (somedir)    -- locale", "locale", "somedir/locale"]
tests/i18n/test_compilation.py:217:24    - Unknown word (somedir)    -- [("exclude/somedir/locale/LC_MESSAGES"
tests/i18n/test_compilation.py:218:24    - Unknown word (somedir)    -- [("exclude/somedir/locale/LC_MESSAGES"
tests/i18n/test_compilation.py:219:24    - Unknown word (somedir)    -- [("exclude/somedir/locale/LC_MESSAGES"
tests/i18n/test_compilation.py:292:14    - Unknown word (nofuzzy)    -- def test_nofuzzy_compiling(self):
tests/i18n/test_compilation.py:296:53    - Unknown word (Ленин)      -- ssertEqual(gettext("Lenin"), "Ленин")
tests/i18n/test_compilation.py:305:53    - Unknown word (Ленин)      -- ssertEqual(gettext("Lenin"), "Ленин")
tests/i18n/test_compilation.py:306:53    - Unknown word (Водка)      -- ssertEqual(gettext("Vodka"), "Водка")
tests/i18n/test_extraction.py:154:28    - Unknown word (msgctxt)    -- self.assertIn('msgctxt "Special trans context
tests/i18n/test_extraction.py:182:27    - Unknown word (tachelhit)  -- def test_valid_locale_tachelhit_latin_morocco(self)
tests/i18n/test_extraction.py:191:35    - Unknown word (subtag)     -- valid_locale_private_subtag(self):
tests/i18n/test_extraction.py:227:37    - Unknown word (subtag)     -- invalid_locale_private_subtag(self):
tests/i18n/test_extraction.py:27:30     - Unknown word (xgettext)   -- xgettext = find_command("xgettext")
tests/i18n/test_extraction.py:27:5      - Unknown word (xgettext)   -- has_xgettext = find_command("xgettext
tests/i18n/test_extraction.py:302:40    - Unknown word (áéíóúö)     -- non ASCII characters: áéíóúö",
tests/i18n/test_extraction.py:307:40    - Unknown word (áéíóúö)     -- non ASCII characters: áéíóúö\n#. continued here.
tests/i18n/test_extraction.py:30:17     - Unknown word (xgettext)   -- @skipUnless(has_xgettext, "xgettext is mandatory
tests/i18n/test_extraction.py:30:28     - Unknown word (xgettext)   -- skipUnless(has_xgettext, "xgettext is mandatory for extraction
tests/i18n/test_extraction.py:358:43    - Unknown word (vidéo)      -- join(self.test_dir, "vidéo.txt"), "a").close()
tests/i18n/test_extraction.py:362:17    - Unknown word (xgettext)   -- """test xgettext warning about multiple
tests/i18n/test_extraction.py:378:28    - Unknown word (msgctxt)    -- self.assertIn('msgctxt "Special trans context
tests/i18n/test_extraction.py:380:28    - Unknown word (msgctxt)    -- self.assertIn('msgctxt "Special trans context
tests/i18n/test_extraction.py:382:28    - Unknown word (msgctxt)    -- self.assertIn('msgctxt "Special trans context
tests/i18n/test_extraction.py:390:22    - Unknown word (msgctxt)    -- 'msgctxt "context #7.1{}"'.format
tests/i18n/test_extraction.py:438:63    - Unknown word (thtml)      -- LOCALE], extensions=["thtml"], verbosity=0
tests/i18n/test_extraction.py:446:61    - Unknown word (thtml)      -- templates[/\\]comments.thtml, line 4\) "
tests/i18n/test_extraction.py:452:61    - Unknown word (thtml)      -- templates[/\\]comments.thtml, line 6\) "
tests/i18n/test_extraction.py:458:61    - Unknown word (thtml)      -- templates[/\\]comments.thtml, line 8\) "
tests/i18n/test_extraction.py:512:40    - Unknown word (tfile)      -- = {os.path.splitext(tfile.file)[1] for tfile in
tests/i18n/test_extraction.py:512:59    - Unknown word (tfile)      -- splitext(tfile.file)[1] for tfile in found_files}
tests/i18n/test_extraction.py:516:23    - Unknown word (djangojs)   -- cmd.domain = "djangojs"
tests/i18n/test_extraction.py:519:40    - Unknown word (tfile)      -- = {os.path.splitext(tfile.file)[1] for tfile in
tests/i18n/test_extraction.py:519:59    - Unknown word (tfile)      -- splitext(tfile.file)[1] for tfile in found_files}
tests/i18n/test_extraction.py:532:25    - Unknown word (Ulrich)     -- "Written by Ulrich Drepper.\n",
tests/i18n/test_extraction.py:532:32    - Unknown word (Drepper)    -- "Written by Ulrich Drepper.\n",
tests/i18n/test_extraction.py:567:32    - Unknown word (Größe)      -- self.assertMsgStr("Größe", po_contents)
tests/i18n/test_extraction.py:591:38    - Unknown word (djangojs)   -- locale/%s/LC_MESSAGES/djangojs.po" % LOCALE
tests/i18n/test_extraction.py:594:57    - Unknown word (djangojs)   -- makemessages(domain="djangojs")
tests/i18n/test_extraction.py:599:27    - Unknown word (okkkk)      -- self.assertMsgId("okkkk", po_contents)
tests/i18n/test_extraction.py:621:61    - Unknown word (djangojs)   -- makemessages(domain="djangojs")
tests/i18n/test_extraction.py:634:57    - Unknown word (djangojs)   -- makemessages(domain="djangojs")
tests/i18n/test_extraction.py:737:57    - Unknown word (djtpl)      -- "es"], extensions=["djtpl"], verbosity=0
tests/i18n/test_extraction.py:756:67    - Unknown word (djtpl)      -- extensions=["html", "djtpl"], verbosity=0
tests/i18n/test_extraction.py:822:36    - Unknown word (templatized) -- location_comments_for_templatized_files(self):
tests/i18n/test_percents.py:102:31    - Unknown word (littérale)  -- expected = "Pour cent littérale % avec un symbole au
tests/i18n/test_percents.py:102:43    - Unknown word (avec)       -- Pour cent littérale % avec un symbole au milieu
tests/i18n/test_percents.py:102:51    - Unknown word (symbole)    -- littérale % avec un symbole au milieu"
tests/i18n/test_percents.py:122:58    - Unknown word (Elle)       -- render(Context({})), "Elle est de 100%")
tests/i18n/test_percents.py:132:58    - Unknown word (Elle)       -- render(Context({})), "Elle est de 100%")
tests/i18n/test_percents.py:137:17    - Unknown word (dirait)     -- "On dirait un spec str fmt %s mais
tests/i18n/test_percents.py:137:43    - Unknown word (mais)       -- dirait un spec str fmt %s mais ne devrait pas être
tests/i18n/test_percents.py:137:51    - Unknown word (devrait)    -- spec str fmt %s mais ne devrait pas être interprété
tests/i18n/test_percents.py:137:63    - Unknown word (être)       -- mais ne devrait pas être interprété comme "
tests/i18n/test_percents.py:137:68    - Unknown word (interprété) -- ne devrait pas être interprété comme "
tests/i18n/test_percents.py:138:19    - Unknown word (disponible) -- "plus disponible"
tests/i18n/test_percents.py:153:17    - Unknown word (dirait)     -- "On dirait un spec str fmt % o
tests/i18n/test_percents.py:153:44    - Unknown word (mais)       -- un spec str fmt % o mais ne devrait pas être
tests/i18n/test_percents.py:153:52    - Unknown word (devrait)    -- str fmt % o mais ne devrait pas être interprété
tests/i18n/test_percents.py:153:64    - Unknown word (être)       -- mais ne devrait pas être interprété comme "
tests/i18n/test_percents.py:153:69    - Unknown word (interprété) -- ne devrait pas être interprété comme "
tests/i18n/test_percents.py:154:19    - Unknown word (disponible) -- "plus disponible"
tests/i18n/test_percents.py:171:18    - Unknown word (signe)      -- "1 % signe pour cent, signes %
tests/i18n/test_percents.py:171:35    - Unknown word (signes)     -- % signe pour cent, signes %% 2 pour cent, trois
tests/i18n/test_percents.py:171:64    - Unknown word (signes)     -- 2 pour cent, trois signes de pourcentage "
tests/i18n/test_percents.py:171:74    - Unknown word (pourcentage) -- cent, trois signes de pourcentage "
tests/i18n/test_percents.py:191:38    - Unknown word (signe)       -- Django dit: 1 pour cent signe %, deux signes de pourcentage
tests/i18n/test_percents.py:191:52    - Unknown word (signes)      -- pour cent signe %, deux signes de pourcentage %%",
tests/i18n/test_percents.py:191:62    - Unknown word (pourcentage) -- signe %, deux signes de pourcentage %%",
tests/i18n/test_percents.py:87:21     - Unknown word (Littérale)  -- expected = "Littérale avec un symbole de pour
tests/i18n/test_percents.py:87:31     - Unknown word (avec)       -- expected = "Littérale avec un symbole de pour cent
tests/i18n/test_percents.py:87:39     - Unknown word (symbole)    -- "Littérale avec un symbole de pour cent à la fin
tests/i18n/tests.py:1162:18   - Unknown word (sublocales)  -- Check if sublocales fall back to the main
tests/i18n/tests.py:1168:41   - Unknown word (diciembre)   -- self.assertEqual("31 de diciembre de 2009", date_format
tests/i18n/tests.py:126:74    - Unknown word (pluriel)    -- plural", 0) % 0, "0 pluriel1")
tests/i18n/tests.py:127:74    - Unknown word (singulier)  -- plural", 1) % 1, "1 singulier")
tests/i18n/tests.py:128:74    - Unknown word (pluriel)    -- plural", 2) % 2, "2 pluriel2")
tests/i18n/tests.py:130:39    - Unknown word (subcatalogs) -- Internal _catalog can query subcatalogs (from different po files
tests/i18n/tests.py:131:67    - Unknown word (singulier)   -- singular", 0)], "%d singulier")
tests/i18n/tests.py:132:73    - Unknown word (heure)       -- hour", 0)], "%(num)d heure")
tests/i18n/tests.py:1386:46   - Unknown word (Dezember)    -- localized = "1.455/3,14/31. Dezember 2016"
tests/i18n/tests.py:1509:45   - Unknown word (Bild)        -- ssertEqual(gettext("Image"), "Bild")
tests/i18n/tests.py:161:25    - Unknown word (perds)       -- 'msgstr "Je perds"\n'
tests/i18n/tests.py:171:25    - Unknown word (gagne)       -- 'msgstr "Je gagne"\n'
tests/i18n/tests.py:1754:17   - Unknown word (mingo)       -- ("i-mingo", "Mingo"),
tests/i18n/tests.py:1754:26   - Unknown word (Mingo)       -- ("i-mingo", "Mingo"),
tests/i18n/tests.py:1755:18   - Unknown word (tunumiit)    -- ("kl-tunumiit", "Tunumiisiut"),
tests/i18n/tests.py:1755:30   - Unknown word (Tunumiisiut) -- ("kl-tunumiit", "Tunumiisiut"),
tests/i18n/tests.py:1756:19   - Unknown word (hani)        -- ("nan-hani-tw", "Hanji"),
tests/i18n/tests.py:1756:30   - Unknown word (Hanji)       -- ("nan-hani-tw", "Hanji"),
tests/i18n/tests.py:175:55    - Unknown word (gagne)       -- gettext("I win"), "Je gagne")
tests/i18n/tests.py:1777:18   - Unknown word (mingo)       -- ("/i-mingo/", "i-mingo"),
tests/i18n/tests.py:1777:30   - Unknown word (mingo)       -- ("/i-mingo/", "i-mingo"),
tests/i18n/tests.py:1778:19   - Unknown word (tunumiit)    -- ("/kl-tunumiit/", "kl-tunumiit"),
tests/i18n/tests.py:1778:35   - Unknown word (tunumiit)    -- /kl-tunumiit/", "kl-tunumiit"),
tests/i18n/tests.py:1779:20   - Unknown word (hani)        -- ("/nan-hani-tw/", "nan-hani-tw"
tests/i18n/tests.py:1779:36   - Unknown word (hani)        -- nan-hani-tw/", "nan-hani-tw"),
tests/i18n/tests.py:1883:14   - Unknown word (safestr)     -- def test_safestr(self):
tests/i18n/tests.py:1885:30   - Unknown word (Iñtërnâtiônàlizætiøn) -- c.name = SafeString("Iñtërnâtiônàlizætiøn1")
tests/i18n/tests.py:1893:45   - Unknown word (Deutsch)              -- ssertEqual(li["name_local"], "Deutsch")
tests/i18n/tests.py:1908:45   - Unknown word (Deutsch)              -- ssertEqual(li["name_local"], "Deutsch")
tests/i18n/tests.py:2096:57   - Unknown word (unparseable)          -- default language is unparseable."""
tests/i18n/tests.py:2113:22   - Unknown word (Somelanguage)         -- ("xxx", "Somelanguage"),
tests/i18n/tests.py:2120:44   - Unknown word (reay)                 -- assertEqual(gettext("year"), "reay")
tests/i18n/tests.py:238:37    - Unknown word (hinzuf)      -- self.assertEqual("Ringo hinzuf\xfcgen", s % d)
tests/i18n/tests.py:238:44    - Unknown word (xfcgen)      -- assertEqual("Ringo hinzuf\xfcgen", s % d)
tests/i18n/tests.py:240:35    - Unknown word (Dodaj)       -- self.assertEqual("Dodaj Ringo", s % d)
tests/i18n/tests.py:266:57    - Unknown word (gutes)       -- with_format % 1, "1 gutes Resultat")
tests/i18n/tests.py:266:63    - Unknown word (Resultat)    -- format % 1, "1 gutes Resultat")
tests/i18n/tests.py:267:57    - Unknown word (guten)       -- with_format % 4, "4 guten Resultate")
tests/i18n/tests.py:267:63    - Unknown word (Resultate)   -- format % 4, "4 guten Resultate")
tests/i18n/tests.py:268:65    - Unknown word (gutes)       -- with_format % 1, "1 gutes Resultat!")
tests/i18n/tests.py:268:71    - Unknown word (Resultat)    -- format % 1, "1 gutes Resultat!")
tests/i18n/tests.py:269:65    - Unknown word (guten)       -- with_format % 4, "4 guten Resultate!")
tests/i18n/tests.py:269:71    - Unknown word (Resultate)   -- format % 4, "4 guten Resultate!")
tests/i18n/tests.py:270:58    - Unknown word (gutes)       -- without_format % 1, "gutes Resultat")
tests/i18n/tests.py:270:64    - Unknown word (Resultat)    -- without_format % 1, "gutes Resultat")
tests/i18n/tests.py:271:58    - Unknown word (guten)       -- without_format % 4, "guten Resultate")
tests/i18n/tests.py:271:64    - Unknown word (Resultate)   -- without_format % 4, "guten Resultate")
tests/i18n/tests.py:296:31    - Unknown word (guten)       -- "Hallo Jim, 4 guten Resultate",
tests/i18n/tests.py:296:37    - Unknown word (Resultate)   -- "Hallo Jim, 4 guten Resultate",
tests/i18n/tests.py:300:31    - Unknown word (gutes)       -- "Hallo Jim, 1 gutes Resultat",
tests/i18n/tests.py:300:37    - Unknown word (Resultat)    -- "Hallo Jim, 1 gutes Resultat",
tests/i18n/tests.py:304:31    - Unknown word (guten)       -- "Hallo Jim, 5 guten Resultate",
tests/i18n/tests.py:304:37    - Unknown word (Resultate)   -- "Hallo Jim, 5 guten Resultate",
tests/i18n/tests.py:310:18    - Unknown word (Willkommen)  -- "Willkommen Jim, 4 guten Resultate
tests/i18n/tests.py:314:18    - Unknown word (Willkommen)  -- "Willkommen Jim, 1 gutes Resultat
tests/i18n/tests.py:314:36    - Unknown word (gutes)       -- "Willkommen Jim, 1 gutes Resultat",
tests/i18n/tests.py:314:42    - Unknown word (Resultat)    -- Willkommen Jim, 1 gutes Resultat",
tests/i18n/tests.py:318:18    - Unknown word (Willkommen)  -- "Willkommen Jim, 5 guten Resultate
tests/i18n/tests.py:371:18    - Unknown word (Willkommen)  -- "Willkommen Jim, 4 guten Resultate
tests/i18n/tests.py:375:18    - Unknown word (Willkommen)  -- "Willkommen Jim, 1 gutes Resultat
tests/i18n/tests.py:401:40    - Unknown word (unexisting)  -- assertEqual(pgettext("unexisting", "May"), "May")
tests/i18n/tests.py:403:56    - Unknown word (Kann)        -- pgettext("verb", "May"), "Kann")
tests/i18n/tests.py:429:27    - Unknown word (Passworda)   -- self.assertEqual("Passworda", s1 + SafeString("a
tests/i18n/tests.py:430:27    - Unknown word (Passworda)   -- self.assertEqual("Passworda", s1 + mark_safe("a
tests/i18n/tests.py:434:14    - Unknown word (maclines)    -- def test_maclines(self):
tests/i18n/tests.py:462:32    - Unknown word (subtag)      -- # With private use subtag (x-informal).
tests/i18n/tests.py:568:14    - Unknown word (ctxt)        -- self.ctxt = Context(
tests/i18n/tests.py:691:69    - Unknown word (ctxt)        -- i" }}').render(self.ctxt),
tests/i18n/tests.py:694:73    - Unknown word (ctxt)        -- i" }}').render(self.ctxt)
tests/i18n/tests.py:722:34    - Unknown word (desembre)    -- self.assertEqual("31 desembre de 2009", date_format
tests/i18n/tests.py:723:33    - Unknown word (abril)       -- self.assertEqual("1 abril de 2009", date_format
tests/i18n/tests.py:725:18    - Unknown word (desembre)    -- "desembre del 2009", date_format
tests/i18n/tests.py:742:38    - Unknown word (desembre)    -- self.assertEqual("31 desembre de 2009", localize(self
tests/i18n/tests.py:743:38    - Unknown word (desembre)    -- self.assertEqual("31 desembre de 2009 a les 20:50
tests/i18n/tests.py:746:80    - Unknown word (ctxt)        -- n }}").render(self.ctxt))
tests/i18n/tests.py:747:80    - Unknown word (ctxt)        -- f }}").render(self.ctxt))
tests/i18n/tests.py:782:25    - Unknown word (desembre)    -- "31 desembre de 2009", Template(
tests/i18n/tests.py:894:36    - Unknown word (gener)       -- '<option value="1">gener</option>'
tests/i18n/tests.py:895:36    - Unknown word (febrer)      -- '<option value="2">febrer</option>'
tests/i18n/tests.py:897:36    - Unknown word (abril)       -- '<option value="4">abril</option>'
tests/i18n/tests.py:898:36    - Unknown word (maig)        -- '<option value="5">maig</option>'
tests/i18n/tests.py:899:36    - Unknown word (juny)        -- '<option value="6">juny</option>'
tests/i18n/tests.py:900:36    - Unknown word (juliol)      -- '<option value="7">juliol</option>'
tests/i18n/tests.py:901:36    - Unknown word (agost)       -- '<option value="8">agost</option>'
tests/i18n/tests.py:902:36    - Unknown word (setembre)    -- '<option value="9">setembre</option>'
tests/i18n/tests.py:903:37    - Unknown word (octubre)     -- '<option value="10">octubre</option>'
tests/i18n/tests.py:904:37    - Unknown word (novembre)    -- '<option value="11">novembre</option>'
tests/i18n/tests.py:99:16     - Unknown word (année)      -- "0 année",
tests/i18n/utils.py:54:31     - Unknown word (rmrf)       -- self.addCleanup(self._rmrf, self.test_dir)
tests/i18n/utils.py:58:10     - Unknown word (rmrf)       -- def _rmrf(self, dname):
tests/indexes/tests.py:150:46    - Unknown word (indclass)             -- i on oc.oid = ANY(i.indclass)
tests/indexes/tests.py:52:45     - Unknown word (looooooooooooooooooo) -- indexes_article_c1_c2_looooooooooooooooooo_255179b2ix",
tests/indexes/tests.py:54:50     - Unknown word (loooooooooooooooooo)  -- indexes_article_c1_c2_loooooooooooooooooo_255179b2ix",
tests/inline_formsets/tests.py:91:19     - Unknown word (inlineformsets) -- Make sure inlineformsets respect commit=False
tests/inspectdb/models.py:49:48     - Unknown word (tamaño)     -- IntegerField(db_column="tamaño")
tests/inspectdb/tests.py:124:46    - Unknown word (jsonfieldcolumntype) -- inspectdb", "inspectdb_jsonfieldcolumntype", stdout=out)
tests/inspectdb/tests.py:135:46    - Unknown word (dbcomment)           -- inspectdb", "inspectdb_dbcomment", stdout=out)
tests/inspectdb/tests.py:154:46    - Unknown word (charfielddbcollation) -- inspectdb", "inspectdb_charfielddbcollation", stdout=out)
tests/inspectdb/tests.py:173:46    - Unknown word (textfielddbcollation) -- inspectdb", "inspectdb_textfielddbcollation", stdout=out)
tests/inspectdb/tests.py:190:46    - Unknown word (charfieldunlimited)   -- inspectdb", "inspectdb_charfieldunlimited", stdout=out)
tests/inspectdb/tests.py:284:46    - Unknown word (foreignkeytofield)    -- inspectdb", "inspectdb_foreignkeytofield", stdout=out)
tests/inspectdb/tests.py:286:56    - Unknown word (Peoplemoredata)       -- ForeignKey('InspectdbPeoplemoredata', "
tests/inspectdb/tests.py:295:46    - Unknown word (digitsincolumnname)   -- inspectdb", "inspectdb_digitsincolumnname", stdout=out)
tests/inspectdb/tests.py:346:24    - Unknown word (tamaño)               -- self.assertIn("tamaño = models.%s()" % integer
tests/inspectdb/tests.py:372:36    - Unknown word (pascalcase)           -- expected_model_name = "pascalcase"
tests/inspectdb/tests.py:380:46    - Unknown word (funcuniqueconstraint) -- inspectdb", "inspectdb_funcuniqueconstraint", stdout=out)
tests/inspectdb/tests.py:382:39    - Unknown word (Funcuniqueconstraint) -- assertIn("class InspectdbFuncuniqueconstraint(models.Model):", output
tests/inspectdb/tests.py:389:46    - Unknown word (columntypes)          -- inspectdb", "inspectdb_columntypes", stdout=out)
tests/inspectdb/tests.py:400:46    - Unknown word (uniquetogether)       -- inspectdb", "inspectdb_uniquetogether", stdout=out)
tests/inspectdb/tests.py:420:38    - Unknown word (Findex)               -- CREATE UNIQUE INDEX Findex ON %s "
tests/inspectdb/tests.py:440:39    - Unknown word (Findex)               -- execute("DROP INDEX Findex")
tests/inspectdb/tests.py:455:26    - Unknown word (myfields)             -- "text": "myfields.TextField",
tests/inspectdb/tests.py:459:50    - Unknown word (columntypes)          -- inspectdb", "inspectdb_columntypes", stdout=out)
tests/inspectdb/tests.py:461:41    - Unknown word (myfields)             -- assertIn("text_field = myfields.TextField()", output
tests/inspectdb/tests.py:485:28    - Unknown word (inspectdbmessage)     -- "related_name='inspectdbmessage_author_set')",
tests/inspectdb/tests.py:57:36     - Unknown word (Peopledata) -- assertNotIn("InspectdbPeopledata", output)
tests/inspectdb/tests.py:65:46     - Unknown word (columntypes) -- inspectdb", "inspectdb_columntypes", stdout=out)
tests/introspection/tests.py:198:49    - Unknown word (dbcommentmodel) -- name == "introspection_dbcommentmodel"
tests/invalid_models_tests/test_models.py:1346:24   - Unknown word (overriden)                                                               -- def test_inherited_overriden_property_no_clash(self
tests/invalid_models_tests/test_models.py:1460:14   - Unknown word (onetoone)                                                                -- def test_onetoone_with_parent_model(self
tests/invalid_models_tests/test_models.py:1471:14   - Unknown word (onetoone)                                                                -- def test_onetoone_with_explicit_parent
tests/invalid_models_tests/test_models.py:1544:13   - Unknown word (foos)                                                                    -- foos = models.ManyToManyField
tests/invalid_models_tests/test_models.py:1547:13   - Unknown word (foos)                                                                    -- foos = models.ManyToManyField
tests/invalid_models_tests/test_models.py:1554:62   - Unknown word (foos)                                                                    -- invalid_models_tests.Baz.foos'.",
tests/invalid_models_tests/test_models.py:1555:46   - Unknown word (foos)                                                                    -- Bar._meta.get_field("foos"),
tests/invalid_models_tests/test_models.py:1560:62   - Unknown word (foos)                                                                    -- invalid_models_tests.Bar.foos'.",
tests/invalid_models_tests/test_models.py:1698:16   - Unknown word (aproxy)                                                                  -- mm_aproxy = models.ManyToManyField
tests/invalid_models_tests/test_models.py:1815:23   - Unknown word (autofields)                                                              -- def test_multiple_autofields(self):
tests/invalid_models_tests/test_models.py:240:39    - Unknown word (sindex)     -- "The index name '%sindex_name' cannot start with
tests/invalid_models_tests/test_models.py:623:28    - Unknown word (Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- class VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(
tests/invalid_models_tests/test_models.py:631:30    - Unknown word (Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,
tests/invalid_models_tests/test_models.py:635:30    - Unknown word (Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,
tests/invalid_models_tests/test_models.py:637:28    - Unknown word (msimple)                                                    -- through="m2msimple",
tests/invalid_models_tests/test_models.py:640:30    - Unknown word (Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,
tests/invalid_models_tests/test_models.py:642:28    - Unknown word (mcomplex)                                                   -- through="m2mcomplex",
tests/invalid_models_tests/test_models.py:645:30    - Unknown word (Namezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- VeryLongModelNamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,
tests/invalid_models_tests/test_models.py:651:17    - Unknown word (msimple)                                                    -- class m2msimple(models.Model):
tests/invalid_models_tests/test_models.py:654:17    - Unknown word (mcomplex)                                                   -- class m2mcomplex(models.Model):
tests/invalid_models_tests/test_models.py:661:33    - Unknown word (msimple)                                                    -- contribute_to_class(m2msimple, long_field_name)
tests/invalid_models_tests/test_models.py:667:33    - Unknown word (mcomplex)                                                   -- contribute_to_class(m2mcomplex, long_field_name)
tests/invalid_models_tests/test_models.py:673:14    - Unknown word (verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) -- "verylongmodelnamezzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz_id"
tests/invalid_models_tests/test_models.py:696:14    - Unknown word (msimple)                                                                 -- # `m2msimple` has auto-generated
tests/invalid_models_tests/test_models.py:739:52    - Unknown word (vlmn)                                                                    -- length=11, db_column="vlmn").contribute_to_class
tests/invalid_models_tests/test_models.py:863:14    - Unknown word (multiinheritance)                                                        -- def test_multiinheritance_clash(self):
tests/invalid_models_tests/test_models.py:919:14    - Unknown word (multigeneration)                                                         -- def test_multigeneration_inheritance(self):
tests/invalid_models_tests/test_ordinary_fields.py:830:13    - Unknown word (biginteger) -- biginteger = models.BigIntegerField
tests/invalid_models_tests/test_ordinary_fields.py:831:13    - Unknown word (smallinteger) -- smallinteger = models.SmallIntegerField
tests/invalid_models_tests/test_ordinary_fields.py:832:13    - Unknown word (positiveinteger) -- positiveinteger = models.PositiveIntegerField
tests/invalid_models_tests/test_ordinary_fields.py:833:13    - Unknown word (positivebiginteger) -- positivebiginteger = models.PositiveBigIntegerFi
tests/invalid_models_tests/test_ordinary_fields.py:834:13    - Unknown word (positivesmallinteger) -- positivesmallinteger = models.PositiveSmallInteger
tests/invalid_models_tests/test_relative_fields.py:499:31    - Unknown word (tfktpuf)    -- name="tfktpuf_partial_unique",
tests/invalid_models_tests/test_relative_fields.py:532:31    - Unknown word (tfktufwmc)  -- name="tfktufwmc_unique",
tests/invalid_models_tests/test_relative_fields.py:587:31    - Unknown word (tfotpuf)    -- name="tfotpuf_partial_unique",
tests/invalid_models_tests/test_relative_fields.py:630:31    - Unknown word (tfotpuf)    -- name="tfotpuf_unique",
tests/invalid_models_tests/test_relative_fields.py:917:53    - Unknown word (doesnt)     -- checked_if_related_model_doesnt_exist(self):
tests/known_related_objects/models.py:14:7      - Unknown word (Organiser)  -- class Organiser(models.Model):
tests/known_related_objects/models.py:21:35     - Unknown word (Organiser)  -- = models.ForeignKey(Organiser, models.CASCADE)
tests/known_related_objects/models.py:21:5      - Unknown word (organiser)  -- organiser = models.ForeignKey
tests/known_related_objects/tests.py:12:18     - Unknown word (Organiser)  -- cls.o1 = Organiser.objects.create(name
tests/known_related_objects/tests.py:12:49     - Unknown word (Organiser)  -- objects.create(name="Organiser 1")
tests/known_related_objects/tests.py:14:50     - Unknown word (organiser)  -- tournament=cls.t1, organiser=cls.o1
tests/known_related_objects/tests.py:17:50     - Unknown word (organiser)  -- tournament=cls.t1, organiser=cls.o1
tests/known_related_objects/tests.py:20:50     - Unknown word (organiser)  -- tournament=cls.t2, organiser=cls.o1
tests/known_related_objects/tests.py:23:50     - Unknown word (organiser)  -- tournament=cls.t2, organiser=cls.o1
tests/known_related_objects/tests.py:4:21      - Unknown word (Organiser)  -- from .models import Organiser, Pool, PoolStyle, Tournament
tests/known_related_objects/tests.py:65:9      - Unknown word (organiser)  -- organiser = self.o1
tests/known_related_objects/tests.py:72:40     - Unknown word (precache)   -- queryset_or_only_one_with_precache(self):
tests/logging_tests/tests.py:360:11    - Unknown word (Monkeypatches) -- # Monkeypatches
tests/logging_tests/tests.py:370:22    - Unknown word (Monkeypatches) -- # Revert Monkeypatches
tests/logging_tests/tests.py:416:30    - Unknown word (doesnt)        -- test_disallowed_host_doesnt_crash(self):
tests/logging_tests/tests.py:512:44    - Unknown word (sdict)         -- settings("settings.py", sdict={"LOGGING": log_config
tests/logging_tests/tests.py:559:40    - Unknown word (sublogger)     -- suspicious_operation_uses_sublogger(self):
tests/logging_tests/tests.py:609:13    - Unknown word (sdict)         -- sdict={
tests/lookup/tests.py:1001:22   - Unknown word (foobarbaz)  -- "foobarbaz",
tests/lookup/tests.py:1002:22   - Unknown word (foobaz)     -- "foobaz",
tests/lookup/tests.py:1009:61   - Unknown word (foobarbaz)  -- headline__in=["foobar", "foobarbaz", "foobaz"]),
tests/lookup/tests.py:1009:74   - Unknown word (foobaz)     -- foobar", "foobarbaz", "foobaz"]),
tests/lookup/tests.py:1017:22   - Unknown word (barfoobaz)  -- "barfoobaz",
tests/lookup/tests.py:1019:22   - Unknown word (bazba)      -- "bazbaRFOO",
tests/lookup/tests.py:1019:27   - Unknown word (RFOO)       -- "bazbaRFOO",
tests/lookup/tests.py:1020:22   - Unknown word (foobarbaz)  -- "foobarbaz",
tests/lookup/tests.py:1021:22   - Unknown word (foobaz)     -- "foobaz",
tests/lookup/tests.py:1030:22   - Unknown word (barfoobaz)  -- "barfoobaz",
tests/lookup/tests.py:1031:22   - Unknown word (bazba)      -- "bazbaRFOO",
tests/lookup/tests.py:1031:27   - Unknown word (RFOO)       -- "bazbaRFOO",
tests/lookup/tests.py:1048:49   - Unknown word (zoocarfaz)  -- date=now, headline="zoocarfaz"),
tests/lookup/tests.py:1050:49   - Unknown word (bazba)      -- date=now, headline="bazbaRFOO"),
tests/lookup/tests.py:1050:54   - Unknown word (RFOO)       -- now, headline="bazbaRFOO"),
tests/lookup/tests.py:1057:28   - Unknown word (bazba)      -- ["barfoobaz", "bazbaRFOO", "foobarbaz"],
tests/lookup/tests.py:1057:33   - Unknown word (RFOO)       -- ["barfoobaz", "bazbaRFOO", "foobarbaz"],
tests/lookup/tests.py:1118:48   - Unknown word (Astros)     -- create(home="Houston Astros", away="St. Louis Cardinals
tests/lookup/tests.py:1120:48   - Unknown word (Astros)     -- create(home="Houston Astros", away="Chicago Cubs
tests/lookup/tests.py:1121:48   - Unknown word (Astros)     -- create(home="Houston Astros", away="Milwaukee Brewers
tests/lookup/tests.py:1122:48   - Unknown word (Astros)     -- create(home="Houston Astros", away="St. Louis Cardinals
tests/lookup/tests.py:1124:48   - Unknown word (Astros)     -- create(home="Houston Astros", away="St. Louis Cardinals
tests/lookup/tests.py:1128:9    - Unknown word (pudge)      -- pudge = Player.objects.create
tests/lookup/tests.py:1129:9    - Unknown word (pudge)      -- pudge.games.set(Game.objects
tests/lookup/tests.py:1130:15   - Unknown word (feliz)      -- pedro_feliz = Player.objects.create
tests/lookup/tests.py:1130:57   - Unknown word (Feliz)      -- objects.create(name="Pedro Feliz")
tests/lookup/tests.py:1131:15   - Unknown word (feliz)      -- pedro_feliz.games.set(Game.objects
tests/lookup/tests.py:1300:61   - Unknown word (Johx)       -- John Smith", alias="Johx")
tests/lookup/tests.py:1301:65   - Unknown word (sonx)       -- Rhonda Simpson", alias="sonx")
tests/lookup/tests.py:301:38    - Unknown word (constaint)  -- bulk_non_unique_meta_constaint(self):
tests/lookup/tests.py:854:34    - Unknown word (lengtp)     -- Unsupported lookup 'lengtp' for SlugField or join
tests/lookup/tests.py:859:46    - Unknown word (lengtp)     -- objects.filter(slug__lengtp=20)
tests/lookup/tests.py:886:34    - Unknown word (abspl)      -- Unsupported lookup 'abspl' for ManyToOneRel or
tests/lookup/tests.py:887:43    - Unknown word (abspk)      -- permitted, perhaps you meant abspk?"
tests/lookup/tests.py:891:62    - Unknown word (abspk)      -- field, Abs, lookup_name="abspk"):
tests/lookup/tests.py:892:48    - Unknown word (abspl)      -- objects.filter(article__abspl=2)
tests/lookup/tests.py:911:49    - Unknown word (fooo)       -- date=now, headline="fooo"),
tests/lookup/tests.py:922:69    - Unknown word (fooo)       -- ["f", "fo", "foo", "fooo"]),
tests/lookup/tests.py:926:69    - Unknown word (fooo)       -- ["f", "fo", "foo", "fooo", "hey-Foo"]),
tests/lookup/tests.py:931:64    - Unknown word (fooo)       -- headline__in=["fo", "foo", "fooo"]),
tests/lookup/tests.py:935:54    - Unknown word (fooo)       -- filter(headline__regex=r"fooo?"),
tests/lookup/tests.py:974:49    - Unknown word (foobaz)     -- date=now, headline="foobaz"),
tests/lookup/tests.py:976:49    - Unknown word (foobarbaz)  -- date=now, headline="foobarbaz"),
tests/lookup/tests.py:977:49    - Unknown word (zoocarfaz)  -- date=now, headline="zoocarfaz"),
tests/lookup/tests.py:978:49    - Unknown word (barfoobaz)  -- date=now, headline="barfoobaz"),
tests/lookup/tests.py:979:49    - Unknown word (bazba)      -- date=now, headline="bazbaRFOO"),
tests/lookup/tests.py:979:54    - Unknown word (RFOO)       -- now, headline="bazbaRFOO"),
tests/lookup/tests.py:988:22    - Unknown word (barfoobaz)  -- "barfoobaz",
tests/lookup/tests.py:990:22    - Unknown word (foobarbaz)  -- "foobarbaz",
tests/lookup/tests.py:991:22    - Unknown word (foobaz)     -- "foobaz",
tests/lookup/tests.py:999:22    - Unknown word (barfoobaz)  -- "barfoobaz",
tests/m2m_regress/tests.py:122:44    - Unknown word (doesnt)                -- invalid_data_to_m2m_doesnt_clear_existing_relations
tests/m2m_regress/tests.py:46:58     - Unknown word (selfreferchild) -- references, related, selfreferchild, "
tests/m2m_regress/tests.py:47:14     - Unknown word (selfreferchildsibling) -- "selfreferchildsibling"
tests/m2m_regress/tests.py:63:70     - Unknown word (selfrefer)             -- related.all(), [sr_sibling.selfrefer_ptr])
tests/m2m_regress/tests.py:64:70     - Unknown word (selfrefer)             -- related.all(), [sr_child.selfrefer_ptr])
tests/m2m_through/models.py:144:5     - Unknown word (rname)                 -- rname = models.CharField(max
tests/m2m_through/models.py:152:22    - Unknown word (rname)                 -- ordering = ("rname",)
tests/m2m_through/models.py:157:66    - Unknown word (rname)                 -- models.CASCADE, to_field="rname")
tests/m2m_through/models.py:27:23     - Unknown word (testnodefaultsnonulls) -- related_name="testnodefaultsnonulls",
tests/m2m_through/tests.py:110:36    - Unknown word (testnodefaultsornulls) -- assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull
tests/m2m_through/tests.py:140:36    - Unknown word (testnodefaultsornulls) -- assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull
tests/m2m_through/tests.py:150:36    - Unknown word (testnodefaultsornulls) -- assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull
tests/m2m_through/tests.py:160:36    - Unknown word (testnodefaultsornulls) -- assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull
tests/m2m_through/tests.py:187:36    - Unknown word (testnodefaultsornulls) -- assertEqual(self.rock.testnodefaultsornulls_set.get().nodefaultnonull
tests/m2m_through/tests.py:360:34    - Unknown word (doesnt)                -- custom_related_name_doesnt_conflict_with_fky_related
tests/m2m_through/tests.py:369:45    - Unknown word (Rockwhale)             -- objects.create(title="Rockwhale 2014")
tests/m2m_through/tests.py:466:27    - Unknown word (symmetricalfriendship) -- friendship = tony.symmetricalfriendship_set.get()
tests/m2m_through/tests.py:489:18    - Unknown word (symmetricalfriendship) -- kate.symmetricalfriendship_set.get().date_friended
tests/m2m_through/tests.py:494:18    - Unknown word (symmetricalfriendship) -- anne.symmetricalfriendship_set.get().date_friended
tests/m2m_through/tests.py:506:18    - Unknown word (symmetricalfriendship) -- anne.symmetricalfriendship_set.get().date_friended
tests/m2m_through/tests.py:517:43    - Unknown word (rname)                 -- Recipe.objects.create(rname="curry")
tests/m2m_through_regress/models.py:14:38     - Unknown word (usermembership) -- AutoField(db_column="usermembership_id", primary_key=True
tests/m2m_through_regress/tests.py:125:55    - Unknown word (Briscoe)    -- objects.create(name="Ryan Briscoe")
tests/m2m_through_regress/tests.py:130:64    - Unknown word (autonumbering) -- driver to mix up the autonumbering
tests/m2m_through_regress/tests.py:131:64    - Unknown word (Gumble)        -- create(name="Barney Gumble")
tests/m2m_through_regress/tests.py:133:52    - Unknown word (Trabant)       -- objects.create(make="Trabant")
tests/m2m_through_regress/tests.py:165:9     - Unknown word (nullcar)       -- nullcar = Car(make=None)
tests/m2m_through_regress/tests.py:171:13    - Unknown word (nullcar)       -- nullcar.drivers.all()
tests/m2m_through_regress/tests.py:194:9     - Unknown word (nullcar)       -- nullcar = Car.objects.create
tests/m2m_through_regress/tests.py:197:61    - Unknown word (nullcar)       -- items("driver", "car", nullcar)
tests/m2m_through_regress/tests.py:233:55    - Unknown word (usermembership) -- m2m_through_regress.usermembership", '
tests/mail/tests.py:102:59    - Unknown word (surrogateescape) -- provided charset and `surrogateescape` is
tests/mail/tests.py:1142:15   - Unknown word (localpartonly)   -- ("localpartonly", "ascii", "localpartonly
tests/mail/tests.py:1142:41   - Unknown word (localpartonly)   -- localpartonly", "ascii", "localpartonly"),
tests/mail/tests.py:1150:18   - Unknown word (éxample)         -- ("to@éxample.com", "utf-8", "to@xn
tests/mail/tests.py:1150:49   - Unknown word (xample)          -- com", "utf-8", "to@xn--xample-9ua.com"),
tests/mail/tests.py:1163:33   - Unknown word (éxample)         -- "To Example <to@éxample.com>",
tests/mail/tests.py:1165:37   - Unknown word (xample)          -- "To Example <to@xn--xample-9ua.com>",
tests/mail/tests.py:1168:33   - Unknown word (éxample)         -- "To Example <to@éxample.com>",
tests/mail/tests.py:1170:37   - Unknown word (xample)          -- "To Example <to@xn--xample-9ua.com>",
tests/mail/tests.py:1203:50   - Unknown word (exampl)          -- very long" * 4, "to@exampl€.com"),
tests/mail/tests.py:1207:32   - Unknown word (exampl)          -- " long <to@xn--exampl-nc1c.com>",
tests/mail/tests.py:121:45    - Unknown word (surrogateescape) -- decode("ascii", errors="surrogateescape")
tests/mail/tests.py:1380:14   - Unknown word (Chère)           -- "Chère maman", "Je t'aime tr
tests/mail/tests.py:1380:20   - Unknown word (maman)           -- "Chère maman", "Je t'aime très fort
tests/mail/tests.py:1380:32   - Unknown word (t'aime)          -- "Chère maman", "Je t'aime très fort", "from@example
tests/mail/tests.py:1385:68   - Unknown word (maman)           -- ?utf-8?q?Ch=C3=A8re_maman?=")
tests/mail/tests.py:1387:60   - Unknown word (t'aime)          -- True).decode(), "Je t'aime très fort"
tests/mail/tests.py:1399:27   - Unknown word (южных)           -- "Subject", "В южных морях " * 60, "from
tests/mail/tests.py:1399:33   - Unknown word (морях)           -- "Subject", "В южных морях " * 60, "from@example
tests/mail/tests.py:1690:28   - Unknown word (locmen)          -- Make sure that the locmen backend populates the
tests/mail/tests.py:1873:17   - Unknown word (AIOSMTPD)        -- @skipUnless(HAS_AIOSMTPD, "No aiosmtpd library
tests/mail/tests.py:1873:31   - Unknown word (aiosmtpd)        -- skipUnless(HAS_AIOSMTPD, "No aiosmtpd library detected.")
tests/mail/tests.py:1902:17   - Unknown word (AIOSMTPD)        -- @skipUnless(HAS_AIOSMTPD, "No aiosmtpd library
tests/mail/tests.py:1902:31   - Unknown word (aiosmtpd)        -- skipUnless(HAS_AIOSMTPD, "No aiosmtpd library detected.")
tests/mail/tests.py:2144:17   - Unknown word (AIOSMTPD)        -- @skipUnless(HAS_AIOSMTPD, "No aiosmtpd library
tests/mail/tests.py:2144:31   - Unknown word (aiosmtpd)        -- skipUnless(HAS_AIOSMTPD, "No aiosmtpd library detected.")
tests/mail/tests.py:36:10     - Unknown word (aiosmtpd)   -- from aiosmtpd.controller import Controller
tests/mail/tests.py:38:9      - Unknown word (AIOSMTPD)   -- HAS_AIOSMTPD = True
tests/mail/tests.py:40:9      - Unknown word (AIOSMTPD)   -- HAS_AIOSMTPD = False
tests/mail/tests.py:481:26    - Unknown word (Sürname)         -- ['"Firstname Sürname" <to@example.com>',
tests/mail/tests.py:485:40    - Unknown word (Crname)          -- 8?q?Firstname_S=C3=BCrname?= <to@example.com>,
tests/mail/tests.py:491:16    - Unknown word (Sürname)         -- ['"Sürname, Firstname" <to@example
tests/mail/tests.py:495:30    - Unknown word (Crname)          -- "=?utf-8?q?S=C3=BCrname=2C_Firstname?= <to@example
tests/mail/tests.py:500:14    - Unknown word (Gżegżółka)       -- "Gżegżółka",
tests/mail/tests.py:505:39    - Unknown word (Sürname)         -- Sender": '"Firstname Sürname" <sender@example.com
tests/mail/tests.py:506:33    - Unknown word (Sürname)         -- "Comments": "My Sürname is non-ASCII",
tests/mail/tests.py:512:59    - Unknown word (Crname)          -- 8?q?Firstname_S=C3=BCrname?= <sender@example.com
tests/mail/tests.py:515:54    - Unknown word (Crname)          -- "=?utf-8?q?My_S=C3=BCrname_is_non-ASCII?="
tests/mail/tests.py:524:48    - Unknown word (Sürname)         -- from@example.com", '"Sürname, Firstname" <to@example
tests/mail/tests.py:538:32    - Unknown word (Crname)          -- "=?iso-8859-1?q?S=FCrname=2C_Firstname?= <to@example
tests/mail/tests.py:782:25    - Unknown word (pièce)           -- msg.attach("une pièce jointe.pdf", b"%PDF
tests/mail/tests.py:782:31    - Unknown word (jointe)          -- msg.attach("une pièce jointe.pdf", b"%PDF-1.4.%.
tests/mail/tests.py:786:58    - Unknown word (pièce)           -- get_filename(), "une pièce jointe.pdf")
tests/mail/tests.py:786:64    - Unknown word (jointe)          -- filename(), "une pièce jointe.pdf")
tests/mail/tests.py:98:68     - Unknown word (surrogateescape) -- payload supporting `surrogateescape`.
tests/many_to_one/tests.py:439:43    - Unknown word (Royko)      -- name="Mike", last_name="Royko", email="royko@suntimes
tests/many_to_one/tests.py:442:43    - Unknown word (Kass)       -- name="John", last_name="Kass", email="jkass@tribune
tests/many_to_one/tests.py:568:38    - Unknown word (notafield)  -- Cannot resolve keyword 'notafield' into field. Choices
tests/many_to_one/tests.py:572:52    - Unknown word (notafield)  -- values_list("reporter__notafield")
tests/many_to_one/tests.py:578:18    - Unknown word (notafield)  -- "notafield"
tests/many_to_one/tests.py:805:44    - Unknown word (Ladida)     -- objects.create(name="Ladida", city=c)
tests/many_to_one/tests.py:813:43    - Unknown word (Ladida)     -- objects.create(name="Ladida", city=c)
tests/many_to_one/tests.py:821:43    - Unknown word (Ladida)     -- objects.create(name="Ladida", city=c)
tests/many_to_one/tests.py:829:39    - Unknown word (Ladida)     -- objects.create(name="Ladida", city=c)
tests/many_to_one/tests.py:830:44    - Unknown word (Ladidu)     -- objects.create(name="Ladidu")
tests/many_to_one/tests.py:838:39    - Unknown word (Ladida)     -- objects.create(name="Ladida", city=c)
tests/many_to_one/tests.py:839:44    - Unknown word (Ladidu)     -- objects.create(name="Ladidu")
tests/many_to_one/tests.py:848:44    - Unknown word (Ladidu)     -- objects.create(name="Ladidu")
tests/many_to_one_null/tests.py:44:19     - Unknown word (reget)      -- # Need to reget a3 to refresh the cache
tests/max_lengths/models.py:13:5      - Unknown word (vcard)      -- vcard = models.FileField(max
tests/max_lengths/models.py:6:5       - Unknown word (vcard)      -- vcard = models.FileField(
tests/max_lengths/tests.py:14:62     - Unknown word (vcard)      -- PersonWithDefaultMaxLengths, "vcard", 100)
tests/max_lengths/tests.py:20:61     - Unknown word (vcard)      -- PersonWithCustomMaxLengths, "vcard", 250)
tests/max_lengths/tests.py:29:14     - Unknown word (vcard)      -- "vcard": "vcard",
tests/max_lengths/tests.py:29:23     - Unknown word (vcard)      -- "vcard": "vcard",
tests/max_lengths/tests.py:34:33     - Unknown word (vcard)      -- field in ("email", "vcard", "homepage", "avatar
tests/messages_tests/test_api.py:57:30     - Unknown word (ducktyping) -- message() should use ducktyping to allow request wrappers
tests/messages_tests/test_cookie.py:157:55    - Unknown word (NOTRECEIVED) -- m"e', "\u2019", '123"NOTRECEIVED"']
tests/messages_tests/tests.py:160:21    - Unknown word (levelname)  -- def test_custom_levelname(self):
tests/middleware/extra_urls.py:6:11      - Unknown word (customurlconf) -- path("customurlconf/noslash", views.empty
tests/middleware/extra_urls.py:7:11      - Unknown word (customurlconf) -- path("customurlconf/slash/", views.empty
tests/middleware/extra_urls.py:8:11      - Unknown word (customurlconf) -- path("customurlconf/needsquoting#/", views
tests/middleware/tests.py:178:37    - Unknown word (Fevil)        -- assertEqual(r.url, "/%2Fevil.com/security/")
tests/middleware/tests.py:181:37    - Unknown word (Fevil)        -- assertEqual(r.url, "/%2Fevil.com/security/")
tests/middleware/tests.py:212:33    - Unknown word (customurlconf) -- request = self.rf.get("/customurlconf/slash/")
tests/middleware/tests.py:226:33    - Unknown word (customurlconf) -- request = self.rf.get("/customurlconf/noslash")
tests/middleware/tests.py:238:33    - Unknown word (customurlconf) -- request = self.rf.get("/customurlconf/unknown")
tests/middleware/tests.py:248:33    - Unknown word (customurlconf) -- request = self.rf.get("/customurlconf/slash")
tests/middleware/tests.py:257:35    - Unknown word (customurlconf) -- assertEqual(r.url, "/customurlconf/slash/")
tests/middleware/tests.py:404:29    - Unknown word (REFERER)       -- self.req.META["HTTP_REFERER"] = "/another/url/"
tests/middleware/tests.py:409:37    - Unknown word (referer)       -- _error_reporting_no_referer(self):
tests/middleware/tests.py:425:66    - Unknown word (referer)       -- request, uri, domain, referer):
tests/middleware/tests.py:427:71    - Unknown word (referer)       -- request, uri, domain, referer):
tests/middleware/tests.py:435:29    - Unknown word (REFERER)       -- self.req.META["HTTP_REFERER"] = "/another/url/"
tests/middleware/tests.py:443:14    - Unknown word (referer)       -- def test_referer_equal_to_requested_url
tests/middleware/tests.py:445:27    - Unknown word (referer)       -- Some bots set the referer to the current URL to
tests/middleware/tests.py:448:29    - Unknown word (REFERER)       -- self.req.META["HTTP_REFERER"] = self.req.path
tests/middleware/tests.py:453:29    - Unknown word (REFERER)       -- self.req.META["HTTP_REFERER"] = "http://testserver
tests/middleware/tests.py:458:34    - Unknown word (referers)      -- tend to use http:// in referers even when browsing HTTPS
tests/middleware/tests.py:466:29    - Unknown word (REFERER)       -- self.req.META["HTTP_REFERER"] = "http://anotherserver
tests/middleware/tests.py:784:32    - Unknown word (xframe)        -- the response has an xframe_options_exempt attribute
tests/middleware/tests.py:788:13    - Unknown word (xframe)        -- def xframe_exempt_response(request
tests/middleware/tests.py:790:22    - Unknown word (xframe)        -- response.xframe_options_exempt = True
tests/middleware/tests.py:793:13    - Unknown word (xframe)        -- def xframe_not_exempt_response
tests/middleware/tests.py:795:22    - Unknown word (xframe)        -- response.xframe_options_exempt = False
tests/middleware/tests.py:92:38     - Unknown word (querystrings) -- SLASH should preserve querystrings when redirecting.
tests/middleware_exceptions/middleware.py:19:13     - Unknown word (markcoroutinefunction) -- markcoroutinefunction(self)
tests/middleware_exceptions/middleware.py:1:47      - Unknown word (markcoroutinefunction) -- iscoroutinefunction, markcoroutinefunction
tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations/0002_second.py:11:33     - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/migrations_test_apps/migrated_app/migrations/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/migrations_test_apps/unmigrated_app/models.py:6:11      - Unknown word (tribble)    -- silly_tribble = models.ForeignKey
tests/migrations/migrations_test_apps/unmigrated_app/models.py:6:51      - Unknown word (Tribble)    -- ForeignKey("migrations.Tribble", models.CASCADE)
tests/migrations/migrations_test_apps/unmigrated_app_simple/models.py:7:46      - Unknown word (repointed)  -- directory has not been repointed)
tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations/0002_second.py:8:33      - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/models.py:14:66     - Unknown word (Ðjáñgó)     -- length=20, default="“Ðjáñgó”")
tests/migrations/models.py:19:33     - Unknown word (µóðéø)      -- verbose_name = "úñí©óðé µóðéø"
tests/migrations/models.py:20:40     - Unknown word (µóðéøß)     -- name_plural = "úñí©óðé µóðéøß"
tests/migrations/models.py:45:46     - Unknown word (repointed)  -- directory has not been repointed)
tests/migrations/routers.py:11:27     - Unknown word (tribble)    -- if model_name == "tribble":
tests/migrations/routers.py:9:13      - Unknown word (Tribble)    -- The Tribble model should be the
tests/migrations/test_autodetector.py:1622:38   - Unknown word (oneoff)     -- alter_field_to_not_null_oneoff_default(self, mocked
tests/migrations/test_autodetector.py:2504:45   - Unknown word (newauthor)  -- testapp", 0, 1, name="newauthor", table="author_three
tests/migrations/test_autodetector.py:2559:30   - Unknown word (doesnt)     -- test_identical_regex_doesnt_alter(self):
tests/migrations/test_autodetector.py:3552:45   - Unknown word (authorunmanaged) -- testapp", 0, 0, name="authorunmanaged", options={}
tests/migrations/test_autodetector.py:3565:45   - Unknown word (authorunmanaged) -- testapp", 0, 0, name="authorunmanaged", options={"managed
tests/migrations/test_autodetector.py:3790:19   - Unknown word (Uninstantiated)  -- #22951 -- Uninstantiated classes with deconstruct
tests/migrations/test_autodetector.py:3993:28   - Unknown word (multistep)       -- def test_m2m_w_through_multistep_remove(self):
tests/migrations/test_autodetector.py:4096:34   - Unknown word (Authi)           -- "verbose_name": "Authi",
tests/migrations/test_autodetector.py:435:64    - Unknown word (otheritem)  -- DeconstructibleObject(), "otheritem": 123},
tests/migrations/test_autodetector.py:449:64    - Unknown word (otheritem)  -- DeconstructibleObject(), "otheritem": 123},
tests/migrations/test_autodetector.py:463:64    - Unknown word (otheritem)  -- DeconstructibleObject(), "otheritem": 999},
tests/migrations/test_autodetector.py:4653:40   - Unknown word (addcreate)       -- circular_dependency_mixed_addcreate(self):
tests/migrations/test_autodetector.py:4673:9    - Unknown word (apackage)        -- apackage = ModelState(
tests/migrations/test_autodetector.py:4688:58   - Unknown word (apackage)        -- , [address, person, apackage, country])
tests/migrations/test_autodetector.py:684:41    - Unknown word (thirdapp)   -- models.ForeignKey("thirdapp.CustomUser", models
tests/migrations/test_autodetector.py:704:10    - Unknown word (thirdapp)   -- "thirdapp", "AuthorProxy", []
tests/migrations/test_autodetector.py:707:10    - Unknown word (thirdapp)   -- "thirdapp", "AuthorProxy", []
tests/migrations/test_autodetector.py:782:30    - Unknown word (Authi)      -- "verbose_name": "Authi",
tests/migrations/test_autodetector.py:901:10    - Unknown word (thirdapp)   -- "thirdapp", "Thing", [("id", models
tests/migrations/test_autodetector.py:917:43    - Unknown word (thirdapp)   -- models.ForeignKey("thirdapp.AuthorProxy", models
tests/migrations/test_base.py:266:9     - Unknown word (multicol)   -- multicol_index=False,
tests/migrations/test_base.py:312:12    - Unknown word (multicol)   -- if multicol_index:
tests/migrations/test_commands.py:1079:25   - Unknown word (unrepresentable) -- def test_sqlmigrate_unrepresentable(self):
tests/migrations/test_commands.py:1117:70   - Unknown word (Tribble)         -- foreign key to 'migrations.Tribble',
tests/migrations/test_commands.py:1126:56   - Unknown word (schemaeditor)    -- deferred_sql_executed_with_schemaeditor(self):
tests/migrations/test_commands.py:144:47    - Unknown word (tribble)    -- ertTableNotExists("migrations_tribble")
tests/migrations/test_commands.py:1517:40   - Unknown word (µóðéø)           -- self.assertIn("úñí©óðé µóðéø", content)  # Meta.verbose
tests/migrations/test_commands.py:1518:40   - Unknown word (µóðéøß)          -- self.assertIn("úñí©óðé µóðéøß", content)  # Meta.verbose
tests/migrations/test_commands.py:1520:33   - Unknown word (Ðjáñgó)          -- self.assertIn("“Ðjáñgó”", content)  # title
tests/migrations/test_commands.py:1883:42   - Unknown word (sillymodel)      -- silly_int' on model 'sillymodel' not migrated: it is
tests/migrations/test_commands.py:2046:54   - Unknown word (sillymodel)      -- field silly_field from sillymodel", out.getvalue())
tests/migrations/test_commands.py:2047:50   - Unknown word (sillymodel)      -- field silly_rename to sillymodel", out.getvalue())
tests/migrations/test_commands.py:2078:42   - Unknown word (sillymodel)      -- field silly_field on sillymodel to silly_rename",
tests/migrations/test_commands.py:2106:14   - Unknown word (makemigration)   -- def test_makemigration_merge_dry_run(self)
tests/migrations/test_commands.py:2132:14   - Unknown word (makemigration)   -- def test_makemigration_merge_dry_run_verbosity
tests/migrations/test_commands.py:2187:48   - Unknown word (sillymodel)      -- field silly_date to sillymodel", out.getvalue())
tests/migrations/test_commands.py:2277:61   - Unknown word (doesnt)          -- test_migrations_path_doesnt_exist.foo.bar"
tests/migrations/test_commands.py:2551:37   - Unknown word (getdefaultencoding) -- MagicMock(encoding=sys.getdefaultencoding()),
tests/migrations/test_commands.py:2715:52   - Unknown word (modelwithcustombase) -- tribble_author_rating_modelwithcustombase_and_more.py",
tests/migrations/test_commands.py:3286:14   - Unknown word (ambigious)           -- def test_ambigious_prefix(self):
tests/migrations/test_commands.py:424:20    - Unknown word (mmigrations) -- "\x1b[1mmigrations\n\x1b[0m [ ] 0001_initial
tests/migrations/test_commands.py:50:47     - Unknown word (tribble)    -- ertTableNotExists("migrations_tribble")
tests/migrations/test_commands.py:598:70    - Unknown word (salamand)    -- SELECT * FROM migrations_salamand…\n",
tests/migrations/test_commands.py:677:27    - Unknown word (Tribble)     -- # 'migrations.Tribble', but that model is
tests/migrations/test_commands.py:68:44     - Unknown word (tribble)    -- assertTableExists("migrations_tribble")
tests/migrations/test_commands.py:74:47     - Unknown word (tribble)    -- ertTableNotExists("migrations_tribble")
tests/migrations/test_commands.py:845:27    - Unknown word (Tribble)     -- # 'migrations.Tribble', but that model is
tests/migrations/test_commands.py:883:34    - Unknown word (Tribble)     -- "-- Create model Tribble",
tests/migrations/test_commands.py:90:47     - Unknown word (tribble)    -- ertTableNotExists("migrations_tribble")
tests/migrations/test_commands.py:950:38    - Unknown word (Tribble)     -- "-- Create model Tribble",
tests/migrations/test_executor.py:198:26    - Unknown word (unmigrations) -- perform spurious unmigrations and remigrations.
tests/migrations/test_executor.py:325:18    - Unknown word (storer)       -- def fake_storer(phase, migration=None
tests/migrations/test_executor.py:328:73    - Unknown word (storer)       -- progress_callback=fake_storer)
tests/migrations/test_executor.py:331:47    - Unknown word (tribble)      -- ertTableNotExists("migrations_tribble")
tests/migrations/test_executor.py:342:44    - Unknown word (tribble)      -- assertTableExists("migrations_tribble")
tests/migrations/test_executor.py:351:44    - Unknown word (tribble)      -- assertTableExists("migrations_tribble")
tests/migrations/test_executor.py:375:47    - Unknown word (tribble)      -- ertTableNotExists("migrations_tribble")
tests/migrations/test_executor.py:392:51    - Unknown word (tribble)      -- ertTableNotExists("migrations_tribble")
tests/migrations/test_graph.py:467:14    - Unknown word (dummynode)  -- def test_dummynode_repr(self):
tests/migrations/test_loader.py:136:70    - Unknown word (unmigdep)   -- migrations.test_migrations_unmigdep"}
tests/migrations/test_loader.py:194:33    - Unknown word (thefirst)   -- ("migrations", "thefirst"),
tests/migrations/test_loader.py:212:72    - Unknown word (blarg)      -- migrations' with the prefix 'blarg'"
tests/migrations/test_loader.py:214:69    - Unknown word (blarg)      -- prefix("migrations", "blarg")
tests/migrations/test_loader.py:572:39    - Unknown word (unsquashes) -- apply a few from app1: unsquashes migration in app1.
tests/migrations/test_loader.py:585:37    - Unknown word (unsquashes) -- apply one from app2: unsquashes migration in app2 too
tests/migrations/test_loader.py:669:25    - Unknown word (reraises)   -- MigrationLoader reraises ImportErrors caused
tests/migrations/test_migrations/0001_initial.py:19:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations/0001_initial.py:26:25     - Unknown word (tribble)    -- model_name="tribble",
tests/migrations/test_migrations/0002_second.py:10:33     - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_conflict/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_conflict/0002_second.py:8:33      - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_custom_user/0001_initial.py:19:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_fake_split_initial/0001_initial.py:19:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_first/second.py:11:33     - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_first/second.py:6:25      - Unknown word (thefirst)   -- ("migrations", "thefirst"),
tests/migrations/test_migrations_first/thefirst.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_initial_false/0001_not_initial.py:19:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_manual_porting/0003_third.py:15:19     - Unknown word (somemodel)  -- name="somemodel",
tests/migrations/test_migrations_manual_porting/0003_third.py:19:19     - Unknown word (somemodel)  -- name="somemodel",
tests/migrations/test_migrations_manual_porting/0004_fourth.py:19:19     - Unknown word (somemodel)  -- name="somemodel",
tests/migrations/test_migrations_manual_porting/0004_fourth.py:23:19     - Unknown word (somemodel)  -- name="somemodel",
tests/migrations/test_migrations_no_ancestor/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_no_ancestor/0002_conflicting_second.py:8:33      - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_no_ancestor/0002_second.py:10:33     - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_no_changes/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_no_changes/0002_second.py:10:33     - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_migrations_squashed/0001_initial.py:17:14     - Unknown word (Tribble)    -- "Tribble",
tests/migrations/test_migrations_squashed/0002_second.py:8:33      - Unknown word (Tribble)    -- migrations.DeleteModel("Tribble"),
tests/migrations/test_multidb.py:102:43    - Unknown word (mltdb)      -- test_create_model("test_mltdb_crmo4", should_run=False
tests/migrations/test_multidb.py:102:49    - Unknown word (crmo)       -- create_model("test_mltdb_crmo4", should_run=False
tests/migrations/test_multidb.py:77:39     - Unknown word (mltdb)      -- test_create_model("test_mltdb_crmo", should_run=True
tests/migrations/test_multidb.py:77:45     - Unknown word (crmo)       -- create_model("test_mltdb_crmo", should_run=True)
tests/migrations/test_multidb.py:84:39     - Unknown word (mltdb)      -- test_create_model("test_mltdb_crmo2", should_run=False
tests/migrations/test_multidb.py:84:45     - Unknown word (crmo)       -- create_model("test_mltdb_crmo2", should_run=False
tests/migrations/test_multidb.py:91:39     - Unknown word (mltdb)      -- test_create_model("test_mltdb_crmo3", should_run=True
tests/migrations/test_multidb.py:91:45     - Unknown word (crmo)       -- create_model("test_mltdb_crmo3", should_run=True)
tests/migrations/test_multidb.py:98:43     - Unknown word (mltdb)      -- test_create_model("test_mltdb_crmo4", should_run=True
tests/migrations/test_multidb.py:98:49     - Unknown word (crmo)       -- create_model("test_mltdb_crmo4", should_run=True)
tests/migrations/test_operations.py:1002:27   - Unknown word (rmwdbtfk)     -- app_label = "test_rmwdbtfk"
tests/migrations/test_operations.py:1152:27   - Unknown word (rmwdbrm)      -- app_label = "test_rmwdbrm2m"
tests/migrations/test_operations.py:1345:9    - Unknown word (ponyrider)    -- ponyrider = PonyRider.objects
tests/migrations/test_operations.py:1346:9    - Unknown word (ponyrider)    -- ponyrider.riders.add(jockey)
tests/migrations/test_operations.py:1446:63   - Unknown word (adfl)         -- make_test_state("test_adfl", operation)
tests/migrations/test_operations.py:1447:53   - Unknown word (adfl)         -- new_state.models["test_adfl", "pony"].fields),
tests/migrations/test_operations.py:1448:40   - Unknown word (adfl)         -- new_state.models["test_adfl", "pony"].fields["height
tests/migrations/test_operations.py:1451:42   - Unknown word (adfl)         -- assertColumnNotExists("test_adfl_pony", "height")
tests/migrations/test_operations.py:1453:47   - Unknown word (adfl)         -- database_forwards("test_adfl", editor, project_state
tests/migrations/test_operations.py:1517:54   - Unknown word (adchfl)       -- up_test_model("test_adchfl")
tests/migrations/test_operations.py:1519:51   - Unknown word (adchfl)       -- apps.get_model("test_adchfl", "Pony")
tests/migrations/test_operations.py:1523:19   - Unknown word (adchfl)       -- "test_adchfl",
tests/migrations/test_operations.py:1551:47   - Unknown word (adchfl)       -- apps.get_model("test_adchfl", "Pony")
tests/migrations/test_operations.py:1562:54   - Unknown word (adtxtfl)      -- up_test_model("test_adtxtfl")
tests/migrations/test_operations.py:1564:51   - Unknown word (adtxtfl)      -- apps.get_model("test_adtxtfl", "Pony")
tests/migrations/test_operations.py:1568:19   - Unknown word (adtxtfl)      -- "test_adtxtfl",
tests/migrations/test_operations.py:1596:47   - Unknown word (adtxtfl)      -- apps.get_model("test_adtxtfl", "Pony")
tests/migrations/test_operations.py:1607:54   - Unknown word (adbinfl)      -- up_test_model("test_adbinfl")
tests/migrations/test_operations.py:1609:51   - Unknown word (adbinfl)      -- apps.get_model("test_adbinfl", "Pony")
tests/migrations/test_operations.py:1613:19   - Unknown word (adbinfl)      -- "test_adbinfl",
tests/migrations/test_operations.py:1641:47   - Unknown word (adbinfl)      -- apps.get_model("test_adbinfl", "Pony")
tests/migrations/test_operations.py:1673:54   - Unknown word (adflpd)       -- up_test_model("test_adflpd")
tests/migrations/test_operations.py:1682:40   - Unknown word (adflpd)       -- state_forwards("test_adflpd", new_state)
tests/migrations/test_operations.py:1683:53   - Unknown word (adflpd)       -- new_state.models["test_adflpd", "pony"].fields),
tests/migrations/test_operations.py:1684:40   - Unknown word (adflpd)      -- new_state.models["test_adflpd", "pony"].fields["height
tests/migrations/test_operations.py:1687:44   - Unknown word (adflpd)      -- apps.get_model("test_adflpd", "pony").objects.create
tests/migrations/test_operations.py:1704:27   - Unknown word (adfldd)      -- app_label = "test_adfldd"
tests/migrations/test_operations.py:1747:27   - Unknown word (adflddsce)   -- app_label = "test_adflddsce"
tests/migrations/test_operations.py:1795:27   - Unknown word (adflddf)     -- app_label = "test_adflddf"
tests/migrations/test_operations.py:1823:27   - Unknown word (adflbddd)    -- app_label = "test_adflbddd"
tests/migrations/test_operations.py:1876:54   - Unknown word (adflmm)      -- up_test_model("test_adflmm", second_model=True
tests/migrations/test_operations.py:1882:40   - Unknown word (adflmm)      -- state_forwards("test_adflmm", new_state)
tests/migrations/test_operations.py:1883:53   - Unknown word (adflmm)      -- new_state.models["test_adflmm", "pony"].fields),
tests/migrations/test_operations.py:1885:41   - Unknown word (adflmm)      -- assertTableNotExists("test_adflmm_pony_stables")
tests/migrations/test_operations.py:1887:47   - Unknown word (adflmm)      -- database_forwards("test_adflmm", editor, project_state
tests/migrations/test_operations.py:1905:54   - Unknown word (alflmm)      -- up_test_model("test_alflmm", second_model=True
tests/migrations/test_operations.py:1908:19   - Unknown word (alflmm)      -- "test_alflmm",
tests/migrations/test_operations.py:1918:51   - Unknown word (alflmm)      -- apps.get_model("test_alflmm", "Pony")
tests/migrations/test_operations.py:1922:19   - Unknown word (alflmm)      -- "test_alflmm",
tests/migrations/test_operations.py:1934:51   - Unknown word (alflmm)      -- apps.get_model("test_alflmm", "Pony")
tests/migrations/test_operations.py:1975:54   - Unknown word (rmflmm)      -- up_test_model("test_rmflmm", second_model=True
tests/migrations/test_operations.py:1978:19   - Unknown word (rmflmm)      -- "test_rmflmm",
tests/migrations/test_operations.py:1988:38   - Unknown word (rmflmm)      -- assertTableExists("test_rmflmm_pony_stables")
tests/migrations/test_operations.py:1993:19   - Unknown word (rmflmm)      -- "test_rmflmm", project_state, operations
tests/migrations/test_operations.py:1995:41   - Unknown word (rmflmm)      -- assertTableNotExists("test_rmflmm_pony_stables")
tests/migrations/test_operations.py:2002:54   - Unknown word (rmflmmwt)    -- up_test_model("test_rmflmmwt", second_model=True
tests/migrations/test_operations.py:2004:41   - Unknown word (rmflmmwt)    -- assertTableNotExists("test_rmflmmwt_ponystables")
tests/migrations/test_operations.py:2004:50   - Unknown word (ponystables) -- TableNotExists("test_rmflmmwt_ponystables")
tests/migrations/test_operations.py:2006:19   - Unknown word (rmflmmwt)    -- "test_rmflmmwt",
tests/migrations/test_operations.py:2014:53   - Unknown word (rmflmmwt)    -- models.ForeignKey("test_rmflmmwt.Pony", models.CASCADE
tests/migrations/test_operations.py:2018:53   - Unknown word (rmflmmwt)    -- models.ForeignKey("test_rmflmmwt.Stable", models.CASCADE
tests/migrations/test_operations.py:202:50    - Unknown word (crmoua)     -- models.ForeignKey("test_crmoua.Pony", models.CASCADE
tests/migrations/test_operations.py:2033:47   - Unknown word (ponystables) -- ertTableExists("test_rmflmmwt_ponystables")
tests/migrations/test_operations.py:2045:54   - Unknown word (rmfl)        -- up_test_model("test_rmfl")
tests/migrations/test_operations.py:2054:40   - Unknown word (rmfl)        -- state_forwards("test_rmfl", new_state)
tests/migrations/test_operations.py:2055:53   - Unknown word (rmfl)        -- new_state.models["test_rmfl", "pony"].fields),
tests/migrations/test_operations.py:2057:39   - Unknown word (rmfl)        -- assertColumnExists("test_rmfl_pony", "pink")
tests/migrations/test_operations.py:2059:47   - Unknown word (rmfl)        -- database_forwards("test_rmfl", editor, project_state
tests/migrations/test_operations.py:2092:54   - Unknown word (almota)      -- up_test_model("test_almota")
tests/migrations/test_operations.py:2094:62   - Unknown word (almota)      -- AlterModelTable("Pony", "test_almota_pony_2")
tests/migrations/test_operations.py:2096:66   - Unknown word (almota)      -- table for Pony to test_almota_pony_2"
tests/migrations/test_operations.py:2100:46   - Unknown word (almota)      -- table for Pony to test_almota_pony_2",
tests/migrations/test_operations.py:2104:40   - Unknown word (almota)      -- state_forwards("test_almota", new_state)
tests/migrations/test_operations.py:213:41    - Unknown word (crmoua)     -- assertTableNotExists("test_crmoua_pony")
tests/migrations/test_operations.py:214:41    - Unknown word (crmoua)     -- assertTableNotExists("test_crmoua_rider")
tests/migrations/test_operations.py:2165:27   - Unknown word (talflmltlm)  -- app_label = "test_talflmltlm2m"
tests/migrations/test_operations.py:217:45    - Unknown word (crmoua)     -- state_forwards("test_crmoua", new_state)
tests/migrations/test_operations.py:2197:27   - Unknown word (talm)        -- app_label = "test_talm2mfl"
tests/migrations/test_operations.py:219:23    - Unknown word (crmoua)     -- "test_crmoua", editor, project_state
tests/migrations/test_operations.py:2237:54   - Unknown word (alfl)        -- up_test_model("test_alfl")
tests/migrations/test_operations.py:2248:40   - Unknown word (alfl)        -- state_forwards("test_alfl", new_state)
tests/migrations/test_operations.py:2250:40   - Unknown word (alfl)        -- project_state.models["test_alfl", "pony"].fields["pink
tests/migrations/test_operations.py:2252:46   - Unknown word (alfl)        -- new_state.models["test_alfl", "pony"].fields["pink
tests/migrations/test_operations.py:2254:40   - Unknown word (alfl)        -- assertColumnNotNull("test_alfl_pony", "pink")
tests/migrations/test_operations.py:2269:27   - Unknown word (alfladd)     -- app_label = "test_alfladd"
tests/migrations/test_operations.py:2309:27   - Unknown word (alflcdtdd)   -- app_label = "test_alflcdtdd"
tests/migrations/test_operations.py:2341:27   - Unknown word (alflcntddnn) -- app_label = "test_alflcntddnn"
tests/migrations/test_operations.py:2372:27   - Unknown word (alflcntdddn) -- app_label = "test_alflcntdddn"
tests/migrations/test_operations.py:239:54    - Unknown word (crmomm)     -- up_test_model("test_crmomm")
tests/migrations/test_operations.py:2410:27   - Unknown word (alflcbnddnn) -- app_label = "test_alflcbnddnn"
tests/migrations/test_operations.py:2450:27   - Unknown word (afadbn)      -- app_label = "test_afadbn"
tests/migrations/test_operations.py:249:40    - Unknown word (crmomm)     -- state_forwards("test_crmomm", new_state)
tests/migrations/test_operations.py:2502:26   - Unknown word (foreignobject) -- def test_alter_field_foreignobject_noop(self):
tests/migrations/test_operations.py:2503:27   - Unknown word (alflfo)        -- app_label = "test_alflfo_noop"
tests/migrations/test_operations.py:251:41    - Unknown word (crmomm)     -- assertTableNotExists("test_crmomm_stable_ponies")
tests/migrations/test_operations.py:253:47    - Unknown word (crmomm)     -- database_forwards("test_crmomm", editor, project_state
tests/migrations/test_operations.py:254:38    - Unknown word (crmomm)     -- assertTableExists("test_crmomm_stable")
tests/migrations/test_operations.py:2550:27   - Unknown word (almotaco)      -- app_label = "test_almotaco"
tests/migrations/test_operations.py:2587:54   - Unknown word (alflpk)        -- up_test_model("test_alflpk")
tests/migrations/test_operations.py:2593:40   - Unknown word (alflpk)        -- state_forwards("test_alflpk", new_state)
tests/migrations/test_operations.py:2595:40   - Unknown word (alflpk)        -- project_state.models["test_alflpk", "pony"].fields["id
tests/migrations/test_operations.py:2599:36   - Unknown word (alflpk)        -- new_state.models["test_alflpk", "pony"].fields["id
tests/migrations/test_operations.py:2604:47   - Unknown word (alflpk)        -- database_forwards("test_alflpk", editor, project_state
tests/migrations/test_operations.py:2616:54   - Unknown word (alflpkfk)      -- up_test_model("test_alflpkfk", related_model=True
tests/migrations/test_operations.py:2618:19   - Unknown word (alflpkfk)      -- "test_alflpkfk",
tests/migrations/test_operations.py:2639:40   - Unknown word (alflpkfk)      -- state_forwards("test_alflpkfk", new_state)
tests/migrations/test_operations.py:2641:40   - Unknown word (alflpkfk)      -- project_state.models["test_alflpkfk", "pony"].fields["id
tests/migrations/test_operations.py:2645:36   - Unknown word (alflpkfk)      -- new_state.models["test_alflpkfk", "pony"].fields["id
tests/migrations/test_operations.py:2734:27   - Unknown word (alflpkfkdbc)   -- app_label = "test_alflpkfkdbc"
tests/migrations/test_operations.py:2782:27   - Unknown word (alflpkmtifk)   -- app_label = "test_alflpkmtifk"
tests/migrations/test_operations.py:2829:60   - Unknown word (shetlandrider) -- column_id_type(cursor, "shetlandrider", "pony_id")
tests/migrations/test_operations.py:282:27    - Unknown word (cfkmtopkfdbc) -- app_label = "test_cfkmtopkfdbc"
tests/migrations/test_operations.py:2845:31   - Unknown word (shetlandrider) -- f"{app_label}_shetlandrider",
tests/migrations/test_operations.py:2860:31   - Unknown word (shetlandrider) -- f"{app_label}_shetlandrider",
tests/migrations/test_operations.py:2866:27   - Unknown word (alflpkmtiftb)  -- app_label = "test_alflpkmtiftb"
tests/migrations/test_operations.py:2937:27   - Unknown word (alidpktuuidpk) -- app_label = "test_alidpktuuidpk"
tests/migrations/test_operations.py:2974:27   - Unknown word (alflrsfkwtflttc) -- app_label = "test_alflrsfkwtflttc"
tests/migrations/test_operations.py:3023:27   - Unknown word (alflrsfkwtflrnttc) -- app_label = "test_alflrsfkwtflrnttc"
tests/migrations/test_operations.py:3262:54   - Unknown word (rnfl)              -- up_test_model("test_rnfl")
tests/migrations/test_operations.py:3270:40   - Unknown word (rnfl)              -- state_forwards("test_rnfl", new_state)
tests/migrations/test_operations.py:3271:54   - Unknown word (rnfl)              -- new_state.models["test_rnfl", "pony"].fields)
tests/migrations/test_operations.py:3272:57   - Unknown word (rnfl)              -- new_state.models["test_rnfl", "pony"].fields)
tests/migrations/test_operations.py:3274:39   - Unknown word (rnfl)              -- assertColumnExists("test_rnfl_pony", "pink")
tests/migrations/test_operations.py:3295:54   - Unknown word (rnflut)            -- up_test_model("test_rnflut", unique_together=True
tests/migrations/test_operations.py:3298:40   - Unknown word (rnflut)            -- state_forwards("test_rnflut", new_state)
tests/migrations/test_operations.py:3302:36   - Unknown word (rnflut)            -- new_state.models["test_rnflut", "pony"].options["unique
tests/migrations/test_operations.py:3306:36   - Unknown word (rnflut)            -- new_state.models["test_rnflut", "pony"].options["unique
tests/migrations/test_operations.py:3309:39   - Unknown word (rnflut)            -- assertColumnExists("test_rnflut_pony", "pink")
tests/migrations/test_operations.py:330:50    - Unknown word (shetlandpony) -- ColumnCollation(f"{app_label}_shetlandpony", "pony_id", collation
tests/migrations/test_operations.py:3334:19   - Unknown word (rfwdbc)            -- "test_rfwdbc",
tests/migrations/test_operations.py:3356:40   - Unknown word (rfwdbc)            -- state_forwards("test_rfwdbc", new_state)
tests/migrations/test_operations.py:3357:63   - Unknown word (rfwdbc)            -- new_state.models["test_rfwdbc", "pony"].fields)
tests/migrations/test_operations.py:3358:58   - Unknown word (rfwdbc)            -- new_state.models["test_rfwdbc", "pony"].fields)
tests/migrations/test_operations.py:3359:39   - Unknown word (rfwdbc)            -- assertColumnExists("test_rfwdbc_pony", "db_field")
tests/migrations/test_operations.py:3396:19   - Unknown word (rfmx)              -- "test_rfmx",
tests/migrations/test_operations.py:339:54    - Unknown word (crmoih)       -- up_test_model("test_crmoih")
tests/migrations/test_operations.py:3410:40   - Unknown word (rfmx)              -- state_forwards("test_rfmx", new_state)
tests/migrations/test_operations.py:3411:55   - Unknown word (rfmx)              -- new_state.models["test_rfmx", "pony"].fields)
tests/migrations/test_operations.py:3412:39   - Unknown word (rfmx)              -- assertColumnExists("test_rfmx_pony", "field")
tests/migrations/test_operations.py:3414:47   - Unknown word (rfmx)              -- database_forwards("test_rfmx", editor, project_state
tests/migrations/test_operations.py:347:31    - Unknown word (crmoih)       -- "test_crmoih.Pony",
tests/migrations/test_operations.py:3515:54   - Unknown word (alunto)            -- up_test_model("test_alunto")
tests/migrations/test_operations.py:3530:40   - Unknown word (alunto)            -- state_forwards("test_alunto", new_state)
tests/migrations/test_operations.py:3533:44   - Unknown word (alunto)            -- project_state.models["test_alunto", "pony"].options.get
tests/migrations/test_operations.py:3541:40   - Unknown word (alunto)            -- new_state.models["test_alunto", "pony"].options.get
tests/migrations/test_operations.py:3549:46   - Unknown word (alunto)            -- execute("INSERT INTO test_alunto_pony (pink, weight)
tests/migrations/test_operations.py:3599:27   - Unknown word (rutopkf)           -- app_label = "test_rutopkf"
tests/migrations/test_operations.py:359:40    - Unknown word (crmoih)       -- state_forwards("test_crmoih", new_state)
tests/migrations/test_operations.py:360:30    - Unknown word (crmoih)       -- self.assertIn(("test_crmoih", "shetlandpony"), new
tests/migrations/test_operations.py:360:40    - Unknown word (shetlandpony) -- assertIn(("test_crmoih", "shetlandpony"), new_state.models
tests/migrations/test_operations.py:3612:45   - Unknown word (pkey)              -- name = f"{table_name}_pkey"
tests/migrations/test_operations.py:3629:27   - Unknown word (rutouf)            -- app_label = "test_rutouf"
tests/migrations/test_operations.py:362:41    - Unknown word (crmoih)       -- assertTableNotExists("test_crmoih_shetlandpony")
tests/migrations/test_operations.py:362:48    - Unknown word (shetlandpony) -- rtTableNotExists("test_crmoih_shetlandpony")
tests/migrations/test_operations.py:365:45    - Unknown word (shetlandpony) -- ssertTableExists("test_crmoih_shetlandpony")
tests/migrations/test_operations.py:3664:54   - Unknown word (adin)              -- up_test_model("test_adin")
tests/migrations/test_operations.py:3671:58   - Unknown word (adin)              -- "pink"], name="test_adin_pony_pink_idx")
tests/migrations/test_operations.py:3675:32   - Unknown word (adin)              -- "Create index test_adin_pony_pink_idx on field
tests/migrations/test_operations.py:3679:34   - Unknown word (adin)              -- + Create index test_adin_pony_pink_idx on field
tests/migrations/test_operations.py:3683:24   - Unknown word (adin)              -- "pony_test_adin_pony_pink_idx",
tests/migrations/test_operations.py:3709:61   - Unknown word (multicol)          -- test_model("test_rmin", multicol_index=True)
tests/migrations/test_operations.py:371:48    - Unknown word (shetlandpony) -- rtTableNotExists("test_crmoih_shetlandpony")
tests/migrations/test_operations.py:3759:27   - Unknown word (rnin)              -- app_label = "test_rnin"
tests/migrations/test_operations.py:377:54    - Unknown word (crprmo)       -- up_test_model("test_crprmo")
tests/migrations/test_operations.py:3826:27   - Unknown word (rninuui)           -- app_label = "test_rninuui"
tests/migrations/test_operations.py:3833:59   - Unknown word (rninuui)           -- of indexes for test_rninuui_pony(weight, pink).
tests/migrations/test_operations.py:383:26    - Unknown word (crprmo)       -- bases=("test_crprmo.Pony",),
tests/migrations/test_operations.py:3840:27   - Unknown word (rninuniwui)        -- app_label = "test_rninuniwui"
tests/migrations/test_operations.py:3843:13   - Unknown word (multicol)          -- multicol_index=True,
tests/migrations/test_operations.py:3859:54   - Unknown word (adinsf)            -- up_test_model("test_adinsf")
tests/migrations/test_operations.py:3860:58   - Unknown word (adinsf)            -- "pink"], name="test_adinsf_pony_pink_idx")
tests/migrations/test_operations.py:3861:56   - Unknown word (adinsf)            -- apps.get_model("test_adinsf", "Pony")
tests/migrations/test_operations.py:3865:40   - Unknown word (adinsf)            -- state_forwards("test_adinsf", new_state)
tests/migrations/test_operations.py:3866:52   - Unknown word (adinsf)            -- apps.get_model("test_adinsf", "Pony")
tests/migrations/test_operations.py:3870:54   - Unknown word (rminsf)            -- up_test_model("test_rminsf")
tests/migrations/test_operations.py:3871:58   - Unknown word (rminsf)            -- "pink"], name="test_rminsf_pony_pink_idx")
tests/migrations/test_operations.py:3872:65   - Unknown word (rminsf)            -- state_forwards("test_rminsf", project_state)
tests/migrations/test_operations.py:3873:56   - Unknown word (rminsf)            -- apps.get_model("test_rminsf", "Pony")
tests/migrations/test_operations.py:3876:58   - Unknown word (rminsf)            -- RemoveIndex("Pony", "test_rminsf_pony_pink_idx")
tests/migrations/test_operations.py:387:40    - Unknown word (crprmo)       -- state_forwards("test_crprmo", new_state)
tests/migrations/test_operations.py:3882:27   - Unknown word (rnidsf)            -- app_label = "test_rnidsf"
tests/migrations/test_operations.py:388:30    - Unknown word (crprmo)       -- self.assertIn(("test_crprmo", "proxypony"), new
tests/migrations/test_operations.py:388:40    - Unknown word (proxypony)    -- assertIn(("test_crprmo", "proxypony"), new_state.models
tests/migrations/test_operations.py:3897:27   - Unknown word (addfuncin)         -- app_label = "test_addfuncin"
tests/migrations/test_operations.py:3905:32   - Unknown word (addfuncin)         -- "Create index test_addfuncin_pony_abs_idx on Abs
tests/migrations/test_operations.py:3909:24   - Unknown word (addfuncin)         -- "pony_test_addfuncin_pony_abs_idx",
tests/migrations/test_operations.py:390:41    - Unknown word (crprmo)       -- assertTableNotExists("test_crprmo_proxypony")
tests/migrations/test_operations.py:390:48    - Unknown word (proxypony)    -- rtTableNotExists("test_crprmo_proxypony")
tests/migrations/test_operations.py:3931:27   - Unknown word (rmfuncin)          -- app_label = "test_rmfuncin"
tests/migrations/test_operations.py:3945:32   - Unknown word (rmfuncin)          -- "Remove index test_rmfuncin_pony_abs_idx from Pony
tests/migrations/test_operations.py:3949:31   - Unknown word (rmfuncin)          -- "remove_pony_test_rmfuncin_pony_abs_idx",
tests/migrations/test_operations.py:394:48    - Unknown word (proxypony)    -- rtTableNotExists("test_crprmo_proxypony")
tests/migrations/test_operations.py:3970:27   - Unknown word (alfuncin)          -- app_label = "test_alfuncin"
tests/migrations/test_operations.py:3994:54   - Unknown word (alflin)            -- up_test_model("test_alflin", index=True)
tests/migrations/test_operations.py:3999:40   - Unknown word (alflin)            -- state_forwards("test_alflin", new_state)
tests/migrations/test_operations.py:4001:40   - Unknown word (alflin)            -- assertColumnNotNull("test_alflin_pony", "pink")
tests/migrations/test_operations.py:4003:47   - Unknown word (alflin)           -- database_forwards("test_alflin", editor, project_state
tests/migrations/test_operations.py:4005:38   - Unknown word (alflin)           -- assertIndexExists("test_alflin_pony", ["pink"])
tests/migrations/test_operations.py:401:48    - Unknown word (proxypony)    -- rtTableNotExists("test_crprmo_proxypony")
tests/migrations/test_operations.py:4120:27   - Unknown word (Artur)            -- {"name": "Artur"},
tests/migrations/test_operations.py:413:54    - Unknown word (crummo)       -- up_test_model("test_crummo")
tests/migrations/test_operations.py:4189:27   - Unknown word (Artur)            -- {"name": "Artur"},
tests/migrations/test_operations.py:419:26    - Unknown word (crummo)       -- bases=("test_crummo.Pony",),
tests/migrations/test_operations.py:4230:27   - Unknown word (addorconstraint)  -- app_label = "test_addorconstraint"
tests/migrations/test_operations.py:423:40    - Unknown word (crummo)       -- state_forwards("test_crummo", new_state)
tests/migrations/test_operations.py:424:30    - Unknown word (crummo)       -- self.assertIn(("test_crummo", "unmanagedpony"),
tests/migrations/test_operations.py:426:41    - Unknown word (crummo)       -- assertTableNotExists("test_crummo_unmanagedpony")
tests/migrations/test_operations.py:4491:27   - Unknown word (adddeferred)      -- app_label = "test_adddeferred_uc"
tests/migrations/test_operations.py:4551:27   - Unknown word (removedeferred)   -- app_label = "test_removedeferred_uc"
tests/migrations/test_operations.py:4617:27   - Unknown word (addcovering)      -- app_label = "test_addcovering_uc"
tests/migrations/test_operations.py:4664:27   - Unknown word (removecovering)   -- app_label = "test_removecovering_uc"
tests/migrations/test_operations.py:4717:27   - Unknown word (alfuncuc)         -- app_label = "test_alfuncuc"
tests/migrations/test_operations.py:4741:27   - Unknown word (adfuncuc)         -- app_label = "test_adfuncuc"
tests/migrations/test_operations.py:4749:37   - Unknown word (adfuncuc)         -- Create constraint test_adfuncuc_pony_abs_uq on model
tests/migrations/test_operations.py:4753:24   - Unknown word (adfuncuc)         -- "pony_test_adfuncuc_pony_abs_uq",
tests/migrations/test_operations.py:4789:27   - Unknown word (rmfuncuc)         -- app_label = "test_rmfuncuc"
tests/migrations/test_operations.py:4804:37   - Unknown word (rmfuncuc)         -- Remove constraint test_rmfuncuc_pony_abs_uq from model
tests/migrations/test_operations.py:4808:31   - Unknown word (rmfuncuc)         -- "remove_pony_test_rmfuncuc_pony_abs_uq",
tests/migrations/test_operations.py:4844:54   - Unknown word (almoop)           -- up_test_model("test_almoop")
tests/migrations/test_operations.py:4855:40   - Unknown word (almoop)           -- state_forwards("test_almoop", new_state)
tests/migrations/test_operations.py:4858:44   - Unknown word (almoop)           -- project_state.models["test_almoop", "pony"].options.get
tests/migrations/test_operations.py:485:27    - Unknown word (crmobechc)    -- app_label = "test_crmobechc"
tests/migrations/test_operations.py:4865:40   - Unknown word (almoop)           -- new_state.models["test_almoop", "pony"].options.get
tests/migrations/test_operations.py:4869:36   - Unknown word (almoop)           -- new_state.models["test_almoop", "pony"].options["permission
tests/migrations/test_operations.py:4913:54   - Unknown word (alorwrtto)        -- up_test_model("test_alorwrtto", related_model=True
tests/migrations/test_operations.py:4928:40   - Unknown word (alorwrtto)        -- state_forwards("test_alorwrtto", new_state)
tests/migrations/test_operations.py:4930:40   - Unknown word (alorwrtto)        -- project_state.models["test_alorwrtto", "rider"].options.get
tests/migrations/test_operations.py:4935:36   - Unknown word (alorwrtto)        -- new_state.models["test_alorwrtto", "rider"].options.get
tests/migrations/test_operations.py:4941:42   - Unknown word (alorwrtto)        -- assertColumnNotExists("test_alorwrtto_rider", "_order")
tests/migrations/test_operations.py:4987:54   - Unknown word (almoma)           -- up_test_model("test_almoma")
tests/migrations/test_operations.py:5000:47   - Unknown word (almoma)           -- project_state.models["test_almoma", "pony"].managers
tests/migrations/test_operations.py:5004:40   - Unknown word (almoma)           -- state_forwards("test_almoma", new_state)
tests/migrations/test_operations.py:5005:30   - Unknown word (almoma)           -- self.assertIn(("test_almoma", "pony"), new_state
tests/migrations/test_operations.py:5006:43   - Unknown word (almoma)           -- new_state.models["test_almoma", "pony"].managers
tests/migrations/test_operations.py:5025:54   - Unknown word (almomae)          -- up_test_model("test_almomae", manager_model=True
tests/migrations/test_operations.py:5029:30   - Unknown word (almomae)          -- self.assertIn(("test_almomae", "food"), project_state
tests/migrations/test_operations.py:5030:47   - Unknown word (almomae)          -- project_state.models["test_almomae", "food"].managers
tests/migrations/test_operations.py:5041:40   - Unknown word (almomae)          -- state_forwards("test_almomae", new_state)
tests/migrations/test_operations.py:5042:43   - Unknown word (almomae)          -- new_state.models["test_almomae", "food"].managers
tests/migrations/test_operations.py:5050:54   - Unknown word (alfk)             -- up_test_model("test_alfk")
tests/migrations/test_operations.py:5060:47   - Unknown word (alfk)             -- state_forwards("test_alfk", create_state)
tests/migrations/test_operations.py:5067:46   - Unknown word (alfk)             -- state_forwards("test_alfk", alter_state)
tests/migrations/test_operations.py:5070:23   - Unknown word (alfk)             -- "test_alfk", editor, project_state
tests/migrations/test_operations.py:5073:23   - Unknown word (alfk)             -- "test_alfk", editor, create_state
tests/migrations/test_operations.py:5087:19   - Unknown word (afknfk)           -- "test_afknfk", operation, related
tests/migrations/test_operations.py:5090:39   - Unknown word (afknfk)           -- assertColumnExists("test_afknfk_rider", "pony_id")
tests/migrations/test_operations.py:5091:42   - Unknown word (afknfk)           -- assertColumnNotExists("test_afknfk_rider", "pony")
tests/migrations/test_operations.py:5093:47   - Unknown word (afknfk)           -- database_forwards("test_afknfk", editor, project_state
tests/migrations/test_operations.py:5094:39   - Unknown word (afknfk)           -- assertColumnExists("test_afknfk_rider", "pony")
tests/migrations/test_operations.py:5139:50   - Unknown word (somethingelse)    -- models["test_runsql", "somethingelse"].fields), 1
tests/migrations/test_operations.py:5181:15   - Unknown word (elidable)         -- # And elidable reduction
tests/migrations/test_operations.py:5183:71   - Unknown word (elidable)         -- SELECT 1 FROM void;", elidable=True)
tests/migrations/test_operations.py:5183:9    - Unknown word (elidable)         -- elidable_operation = migrations
tests/migrations/test_operations.py:5184:26   - Unknown word (elidable)         -- self.assertEqual(elidable_operation.reduce(operation
tests/migrations/test_operations.py:5367:42   - Unknown word (ahahaha)          -- migrations.RunPython("print 'ahahaha'")
tests/migrations/test_operations.py:5412:20   - Unknown word (shetlandponies)   -- def create_shetlandponies(models, schema_editor
tests/migrations/test_operations.py:5420:49   - Unknown word (shetlandponies)   -- migrations.RunPython(create_shetlandponies)
tests/migrations/test_operations.py:5434:15   - Unknown word (elidable)         -- # And elidable reduction
tests/migrations/test_operations.py:5657:47   - Unknown word (Triomphe)         -- create(title="Arc de Triomphe", author=author2)
tests/migrations/test_operations.py:56:40     - Unknown word (crmo)       -- state_forwards("test_crmo", new_state)
tests/migrations/test_operations.py:57:49     - Unknown word (crmo)       -- new_state.models["test_crmo", "pony"].name, "Pony
tests/migrations/test_operations.py:5823:14   - Unknown word (smallfield)       -- def test_smallfield_autofield_foreignfield
tests/migrations/test_operations.py:5831:14   - Unknown word (smallfield)       -- def test_smallfield_bigautofield_foreignfield
tests/migrations/test_operations.py:5885:55   - Unknown word (somethingelse)    -- separatedatabaseandstate", "somethingelse"
tests/migrations/test_operations.py:58:53     - Unknown word (crmo)       -- new_state.models["test_crmo", "pony"].fields),
tests/migrations/test_operations.py:5926:39   - Unknown word (iloveponies)      -- options={"db_table": "iloveponies"},
tests/migrations/test_operations.py:5934:39   - Unknown word (ilovemoreponies)  -- options={"db_table": "ilovemoreponies"},
tests/migrations/test_operations.py:5940:39   - Unknown word (iloveevenmoreponies) -- options={"db_table": "iloveevenmoreponies"},
tests/migrations/test_operations.py:5947:39   - Unknown word (somethingelse)       -- options={"db_table": "somethingelse"},
tests/migrations/test_operations.py:5953:39   - Unknown word (somethingcompletelydifferent) -- options={"db_table": "somethingcompletelydifferent"},
tests/migrations/test_operations.py:5966:43   - Unknown word (somethingelse)                -- assertNotIn((app_label, "somethingelse"), new_state.models
tests/migrations/test_operations.py:5968:50   - Unknown word (somethingcompletelydifferent) -- state.models[app_label, "somethingcompletelydifferent"].fields),
tests/migrations/test_operations.py:5971:43   - Unknown word (iloveponiesonies)             -- assertNotIn((app_label, "iloveponiesonies"), new_state.models
tests/migrations/test_operations.py:5972:43   - Unknown word (ilovemoreponies)              -- assertNotIn((app_label, "ilovemoreponies"), new_state.models
tests/migrations/test_operations.py:5973:43   - Unknown word (iloveevenmoreponies)          -- assertNotIn((app_label, "iloveevenmoreponies"), new_state.models
tests/migrations/test_operations.py:5974:40   - Unknown word (somethingelse)                -- assertTableNotExists("somethingelse")
tests/migrations/test_operations.py:5975:40   - Unknown word (somethingcompletelydifferent) -- assertTableNotExists("somethingcompletelydifferent")
tests/migrations/test_operations.py:5976:40   - Unknown word (ilovemoreponies)              -- assertTableNotExists("ilovemoreponies")
tests/migrations/test_operations.py:5978:41   - Unknown word (iloveponies)                  -- self.assertTableExists("iloveponies")
tests/migrations/test_operations.py:5979:41   - Unknown word (iloveevenmoreponies)          -- self.assertTableExists("iloveevenmoreponies")
tests/migrations/test_operations.py:5981:44   - Unknown word (iloveponies)                  -- assertTableNotExists("iloveponies")
tests/migrations/test_operations.py:5982:44   - Unknown word (iloveevenmoreponies)          -- assertTableNotExists("iloveevenmoreponies")
tests/migrations/test_operations.py:6008:20   - Unknown word (igfc)                         -- ("test_igfc_1", regular, generated
tests/migrations/test_operations.py:6009:20   - Unknown word (igfc)                         -- ("test_igfc_2", generated_1, regular
tests/migrations/test_operations.py:6010:20   - Unknown word (igfc)                         -- ("test_igfc_3", generated_1, generated
tests/migrations/test_operations.py:6035:27   - Unknown word (igfcor)                       -- app_label = "test_igfcor"
tests/migrations/test_operations.py:6083:27   - Unknown word (igfpc)                        -- app_label = "test_igfpc"
tests/migrations/test_operations.py:60:41     - Unknown word (crmo)       -- assertTableNotExists("test_crmo_pony")
tests/migrations/test_operations.py:6181:27   - Unknown word (adfagf)                       -- app_label = "test_adfagf"
tests/migrations/test_operations.py:6243:40   - Unknown word (crigsw)                       -- state_forwards("test_crigsw", new_state)
tests/migrations/test_operations.py:6244:49   - Unknown word (crigsw)                       -- new_state.models["test_crigsw", "pony"].name, "Pony
tests/migrations/test_operations.py:6245:53   - Unknown word (crigsw)                       -- new_state.models["test_crigsw", "pony"].fields),
tests/migrations/test_operations.py:6247:41   - Unknown word (crigsw)                       -- assertTableNotExists("test_crigsw_pony")
tests/migrations/test_operations.py:6249:47   - Unknown word (crigsw)                       -- database_forwards("test_crigsw", editor, project_state
tests/migrations/test_operations.py:6264:63   - Unknown word (dligsw)                       -- make_test_state("test_dligsw", operation)
tests/migrations/test_operations.py:6266:41   - Unknown word (dligsw)                       -- assertTableNotExists("test_dligsw_pony")
tests/migrations/test_operations.py:6268:47   - Unknown word (dligsw)                       -- database_forwards("test_dligsw", editor, project_state
tests/migrations/test_operations.py:6269:41   - Unknown word (dligsw)                       -- assertTableNotExists("test_dligsw_pony")
tests/migrations/test_operations.py:6273:23   - Unknown word (dligsw)                       -- "test_dligsw", editor, new_state
tests/migrations/test_operations.py:6288:63   - Unknown word (adfligsw)                     -- make_test_state("test_adfligsw", operation)
tests/migrations/test_operations.py:6290:41   - Unknown word (adfligsw)                     -- assertTableNotExists("test_adfligsw_pony")
tests/migrations/test_operations.py:6293:23   - Unknown word (adfligsw)                     -- "test_adfligsw", editor, project_state
tests/migrations/test_operations.py:6295:41   - Unknown word (adfligsw)                     -- assertTableNotExists("test_adfligsw_pony")
tests/migrations/test_operations.py:6299:23   - Unknown word (adfligsw)                     -- "test_adfligsw", editor, new_state
tests/migrations/test_operations.py:62:47     - Unknown word (crmo)       -- database_forwards("test_crmo", editor, project_state
tests/migrations/test_operations.py:6311:63   - Unknown word (adinigsw)                     -- make_test_state("test_adinigsw", operation)
tests/migrations/test_operations.py:6315:23   - Unknown word (adinigsw)                     -- "test_adinigsw", editor, project_state
tests/migrations/test_operations.py:6318:23   - Unknown word (adinigsw)                     -- "test_adinigsw", editor, new_state
tests/migrations/test_operations.py:6324:63   - Unknown word (rminigsw)                     -- make_test_state("test_rminigsw", operation)
tests/migrations/test_operations.py:6327:23   - Unknown word (rminigsw)                     -- "test_rminigsw", editor, project_state
tests/migrations/test_operations.py:6330:23   - Unknown word (rminigsw)                     -- "test_rminigsw", editor, new_state
tests/migrations/test_operations.py:680:54    - Unknown word (cmoma)        -- up_test_model("test_cmoma")
tests/migrations/test_operations.py:695:40    - Unknown word (cmoma)        -- state_forwards("test_cmoma", new_state)
tests/migrations/test_operations.py:696:30    - Unknown word (cmoma)        -- self.assertIn(("test_cmoma", "food"), new_state
tests/migrations/test_operations.py:697:43    - Unknown word (cmoma)        -- new_state.models["test_cmoma", "food"].managers
tests/migrations/test_operations.py:711:54    - Unknown word (dlmo)         -- up_test_model("test_dlmo")
tests/migrations/test_operations.py:718:40    - Unknown word (dlmo)         -- state_forwards("test_dlmo", new_state)
tests/migrations/test_operations.py:719:33    - Unknown word (dlmo)         -- self.assertNotIn(("test_dlmo", "pony"), new_state
tests/migrations/test_operations.py:721:38    - Unknown word (dlmo)         -- assertTableExists("test_dlmo_pony")
tests/migrations/test_operations.py:723:47    - Unknown word (dlmo)         -- database_forwards("test_dlmo", editor, project_state
tests/migrations/test_operations.py:739:54    - Unknown word (dlprmo)       -- up_test_model("test_dlprmo", proxy_model=True)
tests/migrations/test_operations.py:743:40    - Unknown word (dlprmo)       -- state_forwards("test_dlprmo", new_state)
tests/migrations/test_operations.py:744:30    - Unknown word (dlprmo)       -- self.assertIn(("test_dlprmo", "proxypony"), project
tests/migrations/test_operations.py:744:40    - Unknown word (proxypony)    -- assertIn(("test_dlprmo", "proxypony"), project_state.models
tests/migrations/test_operations.py:745:33    - Unknown word (dlprmo)       -- self.assertNotIn(("test_dlprmo", "proxypony"), new
tests/migrations/test_operations.py:747:38    - Unknown word (dlprmo)       -- assertTableExists("test_dlprmo_pony")
tests/migrations/test_operations.py:762:54    - Unknown word (dlmtimo)      -- up_test_model("test_dlmtimo", mti_model=True)
tests/migrations/test_operations.py:766:40    - Unknown word (dlmtimo)      -- state_forwards("test_dlmtimo", new_state)
tests/migrations/test_operations.py:767:30    - Unknown word (dlmtimo)      -- self.assertIn(("test_dlmtimo", "shetlandpony"), project
tests/migrations/test_operations.py:768:33    - Unknown word (dlmtimo)      -- self.assertNotIn(("test_dlmtimo", "shetlandpony"), new
tests/migrations/test_operations.py:770:38    - Unknown word (dlmtimo)      -- assertTableExists("test_dlmtimo_pony")
tests/migrations/test_operations.py:792:54    - Unknown word (rnmo)         -- up_test_model("test_rnmo", related_model=True
tests/migrations/test_operations.py:801:30    - Unknown word (rnmo)         -- self.assertIn(("test_rnmo", "pony"), project_state
tests/migrations/test_operations.py:802:33    - Unknown word (rnmo)         -- self.assertNotIn(("test_rnmo", "horse"), project
tests/migrations/test_operations.py:803:38    - Unknown word (rnmo)         -- assertTableExists("test_rnmo_pony")
tests/migrations/test_operations.py:804:41    - Unknown word (rnmo)         -- assertTableNotExists("test_rnmo_horse")
tests/migrations/test_operations.py:818:28    - Unknown word (repoints)     -- # RenameModel also repoints all incoming FKs and
tests/migrations/test_operations.py:884:54    - Unknown word (rmwsrf)       -- up_test_model("test_rmwsrf", related_model=True
tests/migrations/test_operations.py:889:40    - Unknown word (rmwsrf)       -- state_forwards("test_rmwsrf", new_state)
tests/migrations/test_operations.py:890:33    - Unknown word (rmwsrf)       -- self.assertNotIn(("test_rmwsrf", "rider"), new_state
tests/migrations/test_operations.py:891:30    - Unknown word (rmwsrf)       -- self.assertIn(("test_rmwsrf", "horserider"), new
tests/migrations/test_operations.py:891:40    - Unknown word (horserider)   -- assertIn(("test_rmwsrf", "horserider"), new_state.models
tests/migrations/test_operations.py:892:38    - Unknown word (repoints)     -- Remember, RenameModel also repoints all incoming FKs and
tests/migrations/test_operations.py:895:36    - Unknown word (rmwsrf)       -- new_state.models["test_rmwsrf", "horserider"]
tests/migrations/test_operations.py:895:46    - Unknown word (horserider)   -- models["test_rmwsrf", "horserider"]
tests/migrations/test_operations.py:899:63    - Unknown word (horserider)   -- model("test_rmwsrf", "horserider")
tests/migrations/test_operations.py:901:41    - Unknown word (horserider)   -- HorseRider._meta.get_field("horserider").remote_field.model
tests/migrations/test_operations.py:905:48    - Unknown word (horserider)   -- rtTableNotExists("test_rmwsrf_horserider")
tests/migrations/test_operations.py:947:19    - Unknown word (rmwsc)        -- "test_rmwsc", related_model=True
tests/migrations/test_operations.py:955:40    - Unknown word (rmwsc)        -- state_forwards("test_rmwsc", new_state)
tests/migrations/test_operations.py:956:33    - Unknown word (rmwsc)        -- self.assertNotIn(("test_rmwsc", "shetlandpony"), new
tests/migrations/test_operations.py:957:30    - Unknown word (rmwsc)        -- self.assertIn(("test_rmwsc", "littlehorse"), new
tests/migrations/test_operations.py:957:39    - Unknown word (littlehorse)  -- assertIn(("test_rmwsc", "littlehorse"), new_state.models
tests/migrations/test_operations.py:960:40    - Unknown word (rmwsc)        -- project_state.models["test_rmwsc", "rider"]
tests/migrations/test_operations.py:968:47    - Unknown word (littlehorse)  -- ertTableNotExists("test_rmwsc_littlehorse")
tests/migrations/test_operations.py:981:44    - Unknown word (littlehorse)  -- assertTableExists("test_rmwsc_littlehorse")
tests/migrations/test_operations.py:988:63    - Unknown word (littlehorse)  -- pony_id"], ("test_rmwsc_littlehorse", "id")
tests/migrations/test_operations.py:992:27    - Unknown word (rmwdbtnoop)   -- app_label = "test_rmwdbtnoop"
tests/migrations/test_optimizer.py:1078:27   - Unknown word (owrt)        -- def test_create_alter_owrt_field(self):
tests/migrations/test_optimizer.py:1100:48   - Unknown word (Phou)        -- RenameModel("Foo", "Phou"),
tests/migrations/test_optimizer.py:1102:41   - Unknown word (Phou)        -- migrations.RenameModel("Phou", "Fou"),
tests/migrations/test_optimizer.py:1110:23   - Unknown word (elidable)    -- def test_optimize_elidable_operation(self):
tests/migrations/test_optimizer.py:1111:9    - Unknown word (elidable)    -- elidable_operation = operations
tests/migrations/test_optimizer.py:1112:28   - Unknown word (elidable)    -- elidable_operation.elidable = True
tests/migrations/test_optimizer.py:1112:9    - Unknown word (elidable)    -- elidable_operation.elidable
tests/migrations/test_optimizer.py:1115:17   - Unknown word (elidable)    -- elidable_operation,
tests/migrations/test_optimizer.py:1122:48   - Unknown word (Phou)        -- RenameModel("Foo", "Phou"),
tests/migrations/test_optimizer.py:1128:22   - Unknown word (Phou)        -- "Phou", [("name", models.CharField
tests/migrations/test_optimizer.py:211:52    - Unknown word (woohoo)     -- AlterModelTable("Foo", "woohoo"),
tests/migrations/test_optimizer.py:228:27    - Unknown word (owrt)       -- def test_create_alter_owrt_delete_model(self):
tests/migrations/test_optimizer.py:266:26    - Unknown word (owrt)       -- def test_alter_alter_owrt_model(self):
tests/migrations/test_optimizer.py:597:40    - Unknown word (parentmodel) -- bases=("migrations.parentmodel",),
tests/migrations/test_optimizer.py:612:40    - Unknown word (parentmodel) -- bases=("migrations.parentmodel",),
tests/migrations/test_optimizer.py:91:66     - Unknown word (Foozes)     -- verbose_name_plural": "Foozes"}
tests/migrations/test_optimizer.py:96:72     - Unknown word (Foozes)     -- verbose_name_plural": "Foozes"}
tests/migrations/test_state.py:1096:14   - Unknown word (modelstate)           -- def test_modelstate_get_field_order_wrt
tests/migrations/test_state.py:1119:14   - Unknown word (modelstate)           -- def test_modelstate_get_field_no_order_wrt
tests/migrations/test_state.py:117:64    - Unknown word (subauthor)  -- models["migrations", "subauthor"]
tests/migrations/test_state.py:120:70    - Unknown word (foodnomanagers) -- models["migrations", "foodnomanagers"]
tests/migrations/test_state.py:122:28    - Unknown word (foodnodefaultmanager) -- "migrations", "foodnodefaultmanager"
tests/migrations/test_state.py:125:28    - Unknown word (foodorderedmanagers)  -- "migrations", "foodorderedmanagers"
tests/migrations/test_state.py:1640:17   - Unknown word (rels)                 -- comment_rels = project_state.relations
tests/migrations/test_state.py:1642:38   - Unknown word (rels)                 -- assertEqual(len(comment_rels), 2)
tests/migrations/test_state.py:1643:34   - Unknown word (rels)                 -- assertEqual(comment_rels["reviewer"], new_field
tests/migrations/test_state.py:1646:38   - Unknown word (rels)                 -- assertEqual(len(comment_rels), 2)
tests/migrations/test_state.py:1647:34   - Unknown word (rels)                 -- assertEqual(comment_rels["supervisor"], new_field
tests/migrations/test_state.py:1807:15   - Unknown word (searchablelocation)   -- ["searchablelocation_ptr", "name", "bus_routes
tests/migrations/test_state.py:1820:60   - Unknown word (searchablelocation)   -- bases, ("migrations.searchablelocation",))
tests/migrations/test_writer.py:1087:47   - Unknown word (keepends)   -- output.splitlines(keepends=True)[0], r"^[^#\s]
tests/migrations/test_writer.py:1116:14   - Unknown word (enumfield)  -- # an enumfield that takes the enum
tests/migrations/test_writer.py:323:37    - Unknown word (föobár)     -- assertSerializedEqual("föobár")
tests/migrations/test_writer.py:331:41    - Unknown word (nbár)       -- assertSerializedEqual("föo\nbár")
tests/migrations/test_writer.py:339:38    - Unknown word (lalalala)   -- assertSerializedEqual({"lalalala": ["yeah", "no", "maybe
tests/migrations/test_writer.py:683:32    - Unknown word (someapp)    -- SettingsReference("someapp.model", "AUTH_USER_MODEL
tests/migrations/test_writer.py:850:24    - Unknown word (frozensets) -- def test_serialize_frozensets(self):
tests/model_fields/models.py:162:5     - Unknown word (nbfield)    -- nbfield = models.BooleanField
tests/model_fields/models.py:444:5     - Unknown word (floatf)     -- floatf = models.FloatField
tests/model_fields/models.py:79:7      - Unknown word (Choiceful)  -- class Choiceful(models.Model):
tests/model_fields/test_booleanfield.py:116:28    - Unknown word (doesnt)     -- def test_boolean_field_doesnt_accept_empty_input(self
tests/model_fields/test_booleanfield.py:126:9     - Unknown word (nullboolean) -- nullboolean = NullBooleanModel(nbfield
tests/model_fields/test_booleanfield.py:127:9     - Unknown word (nullboolean) -- nullboolean.full_clean()
tests/model_fields/test_booleanfield.py:66:46     - Unknown word (nbfield)    -- llBooleanModel.objects.create(nbfield=True)
tests/model_fields/test_booleanfield.py:68:26     - Unknown word (nbfield)    -- self.assertIs(b3.nbfield, True)
tests/model_fields/test_booleanfield.py:70:46     - Unknown word (nbfield)    -- llBooleanModel.objects.create(nbfield=False)
tests/model_fields/test_booleanfield.py:72:26     - Unknown word (nbfield)    -- self.assertIs(b4.nbfield, False)
tests/model_fields/test_booleanfield.py:80:48     - Unknown word (nbfield)    -- llBooleanModel.objects.create(nbfield=True)
tests/model_fields/test_booleanfield.py:80:9      - Unknown word (nbmt)       -- nbmt = NullBooleanModel.objects
tests/model_fields/test_booleanfield.py:81:9      - Unknown word (nbmf)       -- nbmf = NullBooleanModel.objects
tests/model_fields/test_booleanfield.py:82:55     - Unknown word (nbmt)       -- objects.create(bf=bmt, nbf=nbmt)
tests/model_fields/test_booleanfield.py:83:55     - Unknown word (nbmf)       -- objects.create(bf=bmf, nbf=nbmf)
tests/model_fields/test_datetimefield.py:32:9      - Unknown word (datetim)    -- datetim = datetime.datetime
tests/model_fields/test_datetimefield.py:34:48     - Unknown word (datetim)    -- objects.create(d=dat, dt=datetim, t=tim)
tests/model_fields/test_datetimefield.py:38:34     - Unknown word (datetim)    -- assertEqual(obj.dt, datetim)
tests/model_fields/test_durationfield.py:55:70     - Unknown word (durationmodel) -- model": "model_fields.durationmodel", '
tests/model_fields/test_integerfield.py:273:51    - Unknown word (intput)     -- raises_error_on_invalid_intput(self):
tests/model_fields/test_jsonfield.py:170:60    - Unknown word (jsonmodel)  -- model": "model_fields.jsonmodel", "pk": null}]'
tests/model_fields/test_jsonfield.py:197:42    - Unknown word (nullablejsonmodel) -- model="model_fields.nullablejsonmodel">'
tests/model_fields/test_uuid.py:239:33    - Unknown word (uuidmodel)  -- model": "model_fields.uuidmodel", "pk": null}]'
tests/model_fields/test_uuid.py:243:33    - Unknown word (nullableuuidmodel) -- model": "model_fields.nullableuuidmodel", "pk": null}]'
tests/model_fields/test_uuid.py:330:34    - Unknown word (uuidchild)         -- assertIsInstance(gc.uuidchild_ptr_id, uuid.UUID)
tests/model_fields/test_uuid.py:332:34    - Unknown word (uuidchild)         -- assertIsInstance(gc.uuidchild_ptr_id, uuid.UUID)
tests/model_fields/tests.py:12:5      - Unknown word (Choiceful)  -- Choiceful,
tests/model_fields/tests.py:155:26    - Unknown word (Choiceful)  -- cls.no_choices = Choiceful._meta.get_field("no
tests/model_fields/tests.py:156:29    - Unknown word (Choiceful)  -- cls.empty_choices = Choiceful._meta.get_field("empty
tests/model_fields/tests.py:157:34    - Unknown word (Choiceful)  -- empty_choices_bool = Choiceful._meta.get_field("empty
tests/model_fields/tests.py:158:34    - Unknown word (Choiceful)  -- empty_choices_text = Choiceful._meta.get_field("empty
tests/model_fields/tests.py:77:9      - Unknown word (klass)      -- klass = forms.TypedMultipleChoiceFi
tests/model_fields/tests.py:78:66     - Unknown word (klass)      -- formfield(choices_form_class=klass), klass)
tests/model_fields/tests.py:78:74     - Unknown word (klass)      -- choices_form_class=klass), klass)
tests/model_forms/models.py:387:7     - Unknown word (Colourful)  -- class ColourfulItem(models.Model):
tests/model_forms/models.py:389:5     - Unknown word (colours)    -- colours = models.ManyToManyField
tests/model_forms/models.py:470:7     - Unknown word (UUIDPK)     -- class UUIDPK(models.Model):
tests/model_forms/test_modelchoicefield.py:196:14    - Unknown word (deepcopies) -- def test_deepcopies_widget(self):
tests/model_forms/test_modelchoicefield.py:277:23    - Unknown word (multiplemodelchoicefield) -- def test_disabled_multiplemodelchoicefield(self):
tests/model_forms/test_uuid.py:10:17     - Unknown word (UUIDPK)     -- model = UUIDPK
tests/model_forms/test_uuid.py:16:16     - Unknown word (UUIDPK)     -- form = UUIDPKForm({})
tests/model_forms/test_uuid.py:18:20     - Unknown word (UUIDPK)     -- msg = "The UUIDPK could not be created
tests/model_forms/test_uuid.py:5:21      - Unknown word (UUIDPK)     -- from .models import UUIDPK
tests/model_forms/test_uuid.py:8:7       - Unknown word (UUIDPK)     -- class UUIDPKForm(forms.ModelForm
tests/model_forms/tests.py:1064:36   - Unknown word (notblank)      -- notrequired_overrides_notblank(self):
tests/model_forms/tests.py:1076:55   - Unknown word (Royko)         -- objects.create(name="Mike Royko")
tests/model_forms/tests.py:1241:14   - Unknown word (explicitpk)    -- def test_explicitpk_unspecified(self):
tests/model_forms/tests.py:1246:14   - Unknown word (explicitpk)    -- def test_explicitpk_unique(self):
tests/model_forms/tests.py:1478:16   - Unknown word (royko)         -- self.w_royko = Writer.objects.create
tests/model_forms/tests.py:1478:57   - Unknown word (Royko)         -- objects.create(name="Mike Royko")
tests/model_forms/tests.py:1539:37   - Unknown word (Royko)         -- option value="%s">Mike Royko</option>
tests/model_forms/tests.py:1555:43   - Unknown word (royko)         -- woodward.pk, self.w_royko.pk, self.c1.pk, self
tests/model_forms/tests.py:1560:13   - Unknown word (Royko)         -- f = RoykoForm(auto_id=False, instance
tests/model_forms/tests.py:1560:54   - Unknown word (royko)         -- False, instance=self.w_royko)
tests/model_forms/tests.py:1572:27   - Unknown word (royko)         -- writer=self.w_royko,
tests/model_forms/tests.py:1609:43   - Unknown word (royko)         -- woodward.pk, self.w_royko.pk, self.c1.pk, self
tests/model_forms/tests.py:164:7     - Unknown word (Royko)      -- class RoykoForm(forms.ModelForm
tests/model_forms/tests.py:3041:27   - Unknown word (Colourful)     -- multicolor_item = ColourfulItem.objects.create(
tests/model_forms/tests.py:3042:25   - Unknown word (colours)       -- multicolor_item.colours.add(blue, red)
tests/model_forms/tests.py:3043:20   - Unknown word (Colourful)     -- red_item = ColourfulItem.objects.create(
tests/model_forms/tests.py:3044:18   - Unknown word (colours)       -- red_item.colours.add(red)
tests/model_forms/tests.py:3048:54   - Unknown word (colours)       -- c.name for c in obj.colours.all())
tests/model_forms/tests.py:3050:39   - Unknown word (Colourful)     -- ColorModelChoiceField(ColourfulItem.objects.prefetch
tests/model_forms/tests.py:3050:79   - Unknown word (colours)       -- objects.prefetch_related("colours"))
tests/model_forms/tests.py:3131:15   - Unknown word (Colourful)     -- class ColourfulItemForm(forms.ModelForm
tests/model_forms/tests.py:3145:31   - Unknown word (colours)       -- <p><label for="id_colours">Colours:</label>
tests/model_forms/tests.py:3145:40   - Unknown word (Colours)       -- label for="id_colours">Colours:</label>
tests/model_forms/tests.py:3376:13   - Unknown word (threepwood)    -- cls.threepwood = Character.objects
tests/model_forms/tests.py:3377:23   - Unknown word (threepwood)    -- username="threepwood",
tests/model_forms/tests.py:3389:9    - Unknown word (stumpjokeform) -- stumpjokeform = StumpJokeForm()
tests/model_forms/tests.py:3391:13   - Unknown word (stumpjokeform) -- stumpjokeform.fields["most_recently
tests/model_forms/tests.py:3391:74   - Unknown word (threepwood)    -- fooled"].queryset, [self.threepwood]
tests/model_forms/tests.py:3398:9    - Unknown word (stumpjokeform) -- stumpjokeform = StumpJokeForm()
tests/model_forms/tests.py:3400:13   - Unknown word (stumpjokeform) -- stumpjokeform.fields["most_recently
tests/model_forms/tests.py:3400:74   - Unknown word (threepwood)    -- fooled"].queryset, [self.threepwood]
tests/model_forms/tests.py:3413:77   - Unknown word (threepwood)    -- today"].queryset, [self.threepwood])
tests/model_forms/tests.py:3506:14   - Unknown word (baseform)      -- def test_baseform_with_widgets_in_meta
tests/model_forms/tests.py:43:5      - Unknown word (Colourful)  -- ColourfulItem,
tests/model_forms/tests.py:504:43    - Unknown word (Lockridge)  -- WriterForm({"name": "Richard Lockridge"})
tests/model_forms/tests.py:601:14    - Unknown word (mixmodel)   -- def test_mixmodel_form(self):
tests/model_forms/tests.py:687:14    - Unknown word (subclassmeta) -- def test_subclassmeta_form(self):
tests/model_forms/tests.py:713:14    - Unknown word (orderfields)  -- def test_orderfields_form(self):
tests/model_forms/tests.py:728:14    - Unknown word (orderfields)  -- def test_orderfields2_form(self):
tests/model_forms/tests.py:853:22    - Unknown word (splitdatetime) -- def test_default_splitdatetime_field(self):
tests/model_forms/tests.py:966:19    - Unknown word (describedby)   -- 'aria-describedby="id_slug_helptext" required
tests/model_formsets/models.py:225:7     - Unknown word (UUIDPK)     -- class UUIDPKParent(models.Model)
tests/model_formsets/models.py:230:7     - Unknown word (UUIDPK)     -- class UUIDPKChild(models.Model):
tests/model_formsets/models.py:233:32    - Unknown word (UUIDPK)     -- = models.ForeignKey(UUIDPKParent, models.CASCADE
tests/model_formsets/models.py:238:32    - Unknown word (UUIDPK)     -- = models.ForeignKey(UUIDPKParent, models.CASCADE
tests/model_formsets/models.py:241:20    - Unknown word (UUIDPK)     -- class AutoPKChildOfUUIDPKParent(models.Model)
tests/model_formsets/test_uuid.py:107:18    - Unknown word (childrelatedviaak) -- "childrelatedviaak_set-TOTAL_FORMS": 3
tests/model_formsets/test_uuid.py:108:18    - Unknown word (childrelatedviaak) -- "childrelatedviaak_set-INITIAL_FORMS":
tests/model_formsets/test_uuid.py:109:18    - Unknown word (childrelatedviaak) -- "childrelatedviaak_set-MAX_NUM_FORMS":
tests/model_formsets/test_uuid.py:10:5      - Unknown word (UUIDPK)     -- UUIDPKChild,
tests/model_formsets/test_uuid.py:110:18    - Unknown word (childrelatedviaak) -- "childrelatedviaak_set-0-name": "Test"
tests/model_formsets/test_uuid.py:111:18    - Unknown word (childrelatedviaak) -- "childrelatedviaak_set-1-name": "",
tests/model_formsets/test_uuid.py:11:5      - Unknown word (UUIDPK)     -- UUIDPKChildOfAutoPKParent,
tests/model_formsets/test_uuid.py:12:5      - Unknown word (UUIDPK)     -- UUIDPKParent,
tests/model_formsets/test_uuid.py:25:41     - Unknown word (UUIDPK)     -- inlineformset_factory(UUIDPKParent, UUIDPKChild,
tests/model_formsets/test_uuid.py:37:18     - Unknown word (uuidpkchild) -- "uuidpkchild_set-TOTAL_FORMS": 3
tests/model_formsets/test_uuid.py:38:18     - Unknown word (uuidpkchild) -- "uuidpkchild_set-INITIAL_FORMS":
tests/model_formsets/test_uuid.py:39:18     - Unknown word (uuidpkchild) -- "uuidpkchild_set-MAX_NUM_FORMS":
tests/model_formsets/test_uuid.py:40:18     - Unknown word (uuidpkchild) -- "uuidpkchild_set-0-name": "Foo",
tests/model_formsets/test_uuid.py:41:18     - Unknown word (uuidpkchild) -- "uuidpkchild_set-1-name": "",
tests/model_formsets/test_uuid.py:5:18      - Unknown word (UUIDPK)     -- AutoPKChildOfUUIDPKParent,
tests/model_formsets/tests.py:1055:49   - Unknown word (mondes)           -- title": "Revue des deux mondes",
tests/model_formsets/tests.py:1098:49   - Unknown word (mondes)           -- title": "Revue des deux mondes",
tests/model_formsets/tests.py:1165:50   - Unknown word (Giordanos)        -- objects.create(pk=1, name="Giordanos", city="Chicago")
tests/model_formsets/tests.py:1208:46   - Unknown word (Giordanos)        -- owner1.place.name, "Giordanos")
tests/model_formsets/tests.py:1260:46   - Unknown word (Giordanos)        -- owner2.place.name, "Giordanos")
tests/model_formsets/tests.py:1271:46   - Unknown word (Giordanos)        -- value="%d">Joe Perry at Giordanos</option>'
tests/model_formsets/tests.py:1272:47   - Unknown word (Giordanos)        -- value="%d">Jack Berry at Giordanos</option>'
tests/model_formsets/tests.py:1860:33   - Unknown word (rawr)             -- "form-1-subtitle": "rawr",
tests/model_formsets/tests.py:1887:33   - Unknown word (rawr)             -- "form-1-subtitle": "rawr",
tests/model_formsets/tests.py:1906:33   - Unknown word (rawr)             -- "form-0-subtitle": "rawr",
tests/model_formsets/tests.py:1910:33   - Unknown word (rawr)             -- "form-1-subtitle": "rawr",
tests/model_formsets/tests.py:2088:29   - Unknown word (Parth)            -- "form-0-name": "Parth Patil",
tests/model_formsets/tests.py:2088:35   - Unknown word (Patil)            -- form-0-name": "Parth Patil",
tests/model_formsets/tests.py:496:48    - Unknown word (Mayakovsky) -- the name to "Vladimir Mayakovsky" just to be a jerk.
tests/model_formsets/tests.py:498:41    - Unknown word (Mayakovsky) -- author.name = "Vladimir Mayakovsky"
tests/model_formsets/tests.py:521:48    - Unknown word (Mayakovsky) -- poet1.name, "Vladimir Mayakovsky")
tests/model_formsets/tests.py:522:48    - Unknown word (Mayakovsky) -- poet2.name, "Vladimir Mayakovsky")
tests/model_formsets/tests.py:682:38    - Unknown word (Fleurs)     -- book_set-0-title": "Les Fleurs du Mal",
tests/model_formsets/tests.py:693:61    - Unknown word (Fleurs)     -- objects.get(title="Les Fleurs du Mal"))
tests/model_formsets/tests.py:711:25    - Unknown word (Fleurs)     -- 'value="Les Fleurs du Mal" maxlength="
tests/model_formsets/tests.py:747:38    - Unknown word (Fleurs)     -- book_set-0-title": "Les Fleurs du Mal",
tests/model_formsets/tests.py:748:38    - Unknown word (Paradis)    -- book_set-1-title": "Les Paradis Artificiels",
tests/model_formsets/tests.py:748:46    - Unknown word (Artificiels) -- title": "Les Paradis Artificiels",
tests/model_formsets/tests.py:758:61    - Unknown word (Paradis)     -- objects.get(title="Les Paradis Artificiels"))
tests/model_formsets/tests.py:758:69    - Unknown word (Artificiels) -- get(title="Les Paradis Artificiels"))
tests/model_formsets/tests.py:760:32    - Unknown word (Paradis)     -- As you can see, 'Les Paradis Artificiels' is now
tests/model_formsets/tests.py:760:40    - Unknown word (Artificiels) -- can see, 'Les Paradis Artificiels' is now a book belonging
tests/model_formsets/tests.py:780:42    - Unknown word (Fleurs)      -- book_set-0-title": "Les Fleurs du Mal",
tests/model_formsets/tests.py:782:42    - Unknown word (Paradis)     -- book_set-1-title": "Les Paradis Artificiels",
tests/model_formsets/tests.py:782:50    - Unknown word (Artificiels) -- title": "Les Paradis Artificiels",
tests/model_formsets/tests.py:78:46     - Unknown word (unvalid)    -- untouched and two new unvalid forms
tests/model_formsets/tests.py:798:44    - Unknown word (Paradis)     -- assertEqual(book2.title, "Les Paradis Artificiels")
tests/model_formsets/tests.py:798:52    - Unknown word (Artificiels) -- title, "Les Paradis Artificiels")
tests/model_formsets/tests.py:836:32    - Unknown word (bookwithcustompk) -- '<p><label for="id_bookwithcustompk_set-0-my_pk">My pk:
tests/model_formsets/tests.py:837:28    - Unknown word (bookwithcustompk) -- '<input id="id_bookwithcustompk_set-0-my_pk" type="number
tests/model_formsets/tests.py:838:20    - Unknown word (bookwithcustompk) -- 'name="bookwithcustompk_set-0-my_pk" step="
tests/model_formsets/tests.py:839:32    - Unknown word (bookwithcustompk) -- '<p><label for="id_bookwithcustompk_set-0-title">Title:
tests/model_formsets/tests.py:840:28    - Unknown word (bookwithcustompk) -- '<input id="id_bookwithcustompk_set-0-title" type="text
tests/model_formsets/tests.py:981:51    - Unknown word (Mayakovsky)       -- create(name="Vladimir Mayakovsky")
tests/model_formsets_regress/tests.py:122:46    - Unknown word (Rossum)     -- 0-name": "Guido Van Rossum",
tests/model_formsets_regress/tests.py:135:61    - Unknown word (Rossum)     -- "name"], "Guido Van Rossum")
tests/model_formsets_regress/tests.py:162:41    - Unknown word (Cleese)     -- manager_set-1-name": "John Cleese",
tests/model_formsets_regress/tests.py:168:56    - Unknown word (Cleese)     -- manager[0]["name"], "John Cleese")
tests/model_formsets_regress/tests.py:241:9     - Unknown word (efnet)      -- efnet = Network.objects.create
tests/model_formsets_regress/tests.py:242:68    - Unknown word (efnet)      -- irc.he.net", network=efnet)
tests/model_formsets_regress/tests.py:257:9     - Unknown word (dalnet)     -- dalnet = Network.objects.create
tests/model_formsets_regress/tests.py:258:46    - Unknown word (dalnet)     -- HostFormSet(data, instance=dalnet, save_as_new=True)
tests/model_formsets_regress/tests.py:263:13    - Unknown word (dalnet)     -- dalnet.host_set.order_by("hostname
tests/model_formsets_regress/tests.py:273:46    - Unknown word (bibi)       -- objects.create(username="bibi", serial=1)
tests/model_formsets_regress/tests.py:310:39    - Unknown word (bibi)       -- objects.create(username="bibi", serial=1)
tests/model_formsets_regress/tests.py:313:65    - Unknown word (bibi)       -- initial["username"], "bibi")
tests/model_formsets_regress/tests.py:540:7     - Unknown word (Redelete)   -- class RedeleteTests(TestCase):
tests/model_indexes/tests.py:192:36    - Unknown word (suff)       -- field_index.suffix = "suff"
tests/model_indexes/tests.py:299:60    - Unknown word (childmodel) -- idx", "model_indexes_childmodel1_idx"],
tests/model_indexes/tests.py:304:60    - Unknown word (childmodel) -- idx", "model_indexes_childmodel2_idx"],
tests/model_inheritance/test_abstract_inheritance.py:149:52    - Unknown word (concreteparent) -- model 'model_inheritance.concreteparent'.",
tests/model_inheritance/test_abstract_inheritance.py:352:47    - Unknown word (concretebase)   -- model 'model_inheritance.concretebase'.",
tests/model_inheritance/test_abstract_inheritance.py:370:36    - Unknown word (concreteparent) -- Auto-generated field 'concreteparent_ptr' in class 'Descendant
tests/model_inheritance/test_abstract_inheritance.py:377:17    - Unknown word (concreteparent) -- concreteparent_ptr = models.CharField
tests/model_inheritance/test_abstract_inheritance.py:444:19    - Unknown word (concretemodel)  -- ("concretemodel_ptr", models.OneToOneField
tests/model_inheritance/test_abstract_inheritance.py:446:19    - Unknown word (concretemodel)  -- ("concretemodel2_ptr", models.OneToOneField
tests/model_inheritance/tests.py:142:14    - Unknown word (custompk)          -- def test_custompk_m2m(self):
tests/model_inheritance/tests.py:144:50    - Unknown word (foof)              -- objects.create(title="foof"))
tests/model_inheritance/tests.py:150:61    - Unknown word (foof)              -- query values (title foof not
tests/model_inheritance/tests.py:165:23    - Unknown word (Ristorante)        -- name="Ristorante Miron",
tests/model_inheritance/tests.py:165:34    - Unknown word (Miron)             -- name="Ristorante Miron",
tests/model_inheritance/tests.py:170:38    - Unknown word (italianrestaurant) -- italian_restaurant_child.italianrestaurant_ptr.place_ptr,
tests/model_inheritance/tests.py:174:38    - Unknown word (italianrestaurant) -- italian_restaurant_child.italianrestaurant_ptr.restaurant_ptr,
tests/model_inheritance/tests.py:181:58    - Unknown word (Ristorante)        -- restaurant_child.name, "Ristorante Miron")
tests/model_inheritance/tests.py:181:69    - Unknown word (Miron)             -- child.name, "Ristorante Miron")
tests/model_inheritance/tests.py:246:40    - Unknown word (multitable)        -- doesn't transfer in multitable inheritance.
tests/model_inheritance/tests.py:360:19    - Unknown word (Ristorante)        -- name="Ristorante Miron",
tests/model_inheritance/tests.py:360:30    - Unknown word (Miron)             -- name="Ristorante Miron",
tests/model_inheritance/tests.py:373:18    - Unknown word (Ristorante)        -- "Ristorante Miron",
tests/model_inheritance/tests.py:373:29    - Unknown word (Miron)             -- "Ristorante Miron",
tests/model_inheritance/tests.py:384:18    - Unknown word (Ristorante)        -- "Ristorante Miron",
tests/model_inheritance/tests.py:384:29    - Unknown word (Miron)             -- "Ristorante Miron",
tests/model_inheritance/tests.py:420:67    - Unknown word (italianrestaurant) -- Ristorante Miron").restaurant.italianrestaurant,
tests/model_inheritance/tests.py:424:61    - Unknown word (italianrestaurant) -- "Ristorante Miron").italianrestaurant,
tests/model_inheritance/tests.py:428:46    - Unknown word (nonrelated)        -- child_one_to_one_link_on_nonrelated_objects(self):
tests/model_inheritance/tests.py:77:42     - Unknown word (italianrestaurant) -- chef, chef_id, id, italianrestaurant, lot, name, "
tests/model_inheritance_regress/tests.py:305:11    - Unknown word (mchildren)  -- m2mchildren = list(M2MChild.objects
tests/model_inheritance_regress/tests.py:306:28    - Unknown word (mchildren)  -- self.assertEqual(m2mchildren, [])
tests/model_inheritance_regress/tests.py:339:9     - Unknown word (derivedm)   -- derivedm1 = DerivedM.objects
tests/model_inheritance_regress/tests.py:344:26    - Unknown word (derivedm)   -- self.assertEqual(derivedm1.customPK, 44)
tests/model_inheritance_regress/tests.py:345:26    - Unknown word (derivedm)   -- self.assertEqual(derivedm1.base_name, "b1")
tests/model_inheritance_regress/tests.py:346:26    - Unknown word (derivedm)   -- self.assertEqual(derivedm1.derived_name, "d1"
tests/model_inheritance_regress/tests.py:347:9     - Unknown word (derivedms)  -- derivedms = list(DerivedM.objects
tests/model_inheritance_regress/tests.py:348:26    - Unknown word (derivedms)  -- self.assertEqual(derivedms, [derivedm1])
tests/model_inheritance_regress/tests.py:348:38    - Unknown word (derivedm)   -- assertEqual(derivedms, [derivedm1])
tests/model_inheritance_regress/tests.py:399:27    - Unknown word (birthdayparty) -- parties = list(p1.birthdayparty_set.all())
tests/model_inheritance_regress/tests.py:410:39    - Unknown word (messybachelorparty) -- assertFalse(hasattr(p2, "messybachelorparty_set"))
tests/model_inheritance_regress/tests.py:50:63     - Unknown word (CORBA)      -- erialization, but any sort of CORBA style
tests/model_inheritance_regress/tests.py:520:19    - Unknown word (Nobu)               -- name="Nobu", serves_hot_dogs=True
tests/model_inheritance_regress/tests.py:580:41    - Unknown word (italianrestaurant)  -- assertEqual(restaurant.italianrestaurant, italian_restaurant
tests/model_inheritance_regress/tests.py:590:41    - Unknown word (italianrestaurant)  -- assertEqual(restaurant.italianrestaurant, italian_restaurant
tests/model_inheritance_regress/tests.py:600:41    - Unknown word (italianrestaurant)  -- assertEqual(restaurant.italianrestaurant, italian_restaurant
tests/model_meta/results.py:332:15    - Unknown word (personthroughproxysubclass) -- ("personthroughproxysubclass", None),
tests/model_meta/results.py:350:15    - Unknown word (personthroughproxysubclass) -- ("personthroughproxysubclass", Person),
tests/model_meta/results.py:436:15    - Unknown word (personthroughproxysubclass) -- ("personthroughproxysubclass", None),
tests/model_meta/results.py:474:15    - Unknown word (personthroughproxysubclass) -- ("personthroughproxysubclass", Person),
tests/model_meta/results.py:534:15    - Unknown word (personthroughproxysubclass) -- ("personthroughproxysubclass", None),
tests/model_meta/results.py:890:37    - Unknown word (abstractperson)             -- AbstractPerson: "model_meta.abstractperson",
tests/model_meta/tests.py:286:24    - Unknown word (abstractperson) -- all_models_but_abstractperson = (
tests/model_meta/tests.py:289:33    - Unknown word (abstractperson) -- m in all_models_but_abstractperson:
tests/model_options/models/tablespaces.py:28:35     - Unknown word (scientistref) -- table = "model_options_scientistref"
tests/model_options/models/tablespaces.py:42:35     - Unknown word (articleref)   -- table = "model_options_articleref"
tests/model_options/models/tablespaces.py:50:41     - Unknown word (articleref)   -- table = "model_options_articleref_authors"
tests/model_options/models/tablespaces.py:53:43     - Unknown word (articleref)   -- table = "model_options_articleref_reviewers"
tests/model_package/models/__init__.py:1:30      - Unknown word (subpackages) -- all the models from subpackages
tests/model_package/tests.py:17:50     - Unknown word (subpackages) -- : models split into subpackages still get M2M
tests/model_regress/models.py:18:33     - Unknown word (ngstr)      -- verbose_name = "\xc3\x85ngstr\xc3\xb6m's Articles
tests/model_regress/models.py:54:5      - Unknown word (pkey)       -- pkey = models.IntegerField
tests/model_regress/models.py:58:79     - Unknown word (pkey)       -- unique=True, to_field="pkey")
tests/model_regress/tests.py:223:36    - Unknown word (pkey)       -- Model1.objects.create(pkey=1000)
tests/model_regress/tests.py:234:15    - Unknown word (metaclasses) -- Model metaclasses have access to the class
tests/modeladmin/test_checks.py:1755:30   - Unknown word (onetoone)   -- test_autocomplete_is_onetoone(self):
tests/modeladmin/tests.py:1199:30   - Unknown word (anotherapp)   -- ma.opts.app_label = "anotherapp"
tests/modeladmin/tests.py:131:29    - Unknown word (onetoone)   -- test_lookup_allowed_onetoone(self):
tests/modeladmin/tests.py:147:28    - Unknown word (employeeinfo) -- "employee__employeeinfo__description",
tests/modeladmin/tests.py:155:28    - Unknown word (employeeinfo) -- "employee__employeeinfo__description", "test
tests/modeladmin/tests.py:740:9     - Unknown word (cmafa)        -- cmafa = cma.get_form(request
tests/modeladmin/tests.py:742:31    - Unknown word (cmafa)        -- self.assertEqual(type(cmafa.base_fields["main_band
tests/modeladmin/tests.py:744:18    - Unknown word (cmafa)        -- list(cmafa.base_fields["main_band
tests/modeladmin/tests.py:748:31    - Unknown word (cmafa)        -- self.assertEqual(type(cmafa.base_fields["opening
tests/modeladmin/tests.py:750:18    - Unknown word (cmafa)        -- list(cmafa.base_fields["opening
tests/modeladmin/tests.py:883:59    - Unknown word (akash)        -- objects.create(username="akash")
tests/modeladmin/tests.py:891:19    - Unknown word (Mohiner)      -- name="Mohiner Ghoraguli",
tests/modeladmin/tests.py:891:27    - Unknown word (Ghoraguli)    -- name="Mohiner Ghoraguli",
tests/modeladmin/tests.py:951:59    - Unknown word (akash)        -- objects.create(username="akash")
tests/modeladmin/tests.py:959:19    - Unknown word (Mohiner)      -- name="Mohiner Ghoraguli",
tests/modeladmin/tests.py:959:27    - Unknown word (Ghoraguli)    -- name="Mohiner Ghoraguli",
tests/multiple_database/tests.py:162:51    - Unknown word (Alchin)     -- objects.create(name="Marty Alchin")
tests/multiple_database/tests.py:184:46    - Unknown word (Alchin)     -- authors__name="Marty Alchin")
tests/multiple_database/tests.py:192:46    - Unknown word (Alchin)     -- authors__name="Marty Alchin")
tests/multiple_database/tests.py:215:11    - Unknown word (Reget)      -- # Reget the objects to clear
tests/multiple_database/tests.py:428:51    - Unknown word (Alchin)     -- objects.create(name="Marty Alchin")
tests/multiple_database/tests.py:438:44    - Unknown word (Alchin)     -- assign "<Person: Marty Alchin>": the current database
tests/multiple_database/tests.py:541:53    - Unknown word (Vilches)    -- create(name="George Vilches")
tests/multiple_database/tests.py:557:51    - Unknown word (Vilches)    -- editor.name, "George Vilches")
tests/multiple_database/tests.py:569:22    - Unknown word (Vilches)    -- ["George Vilches"],
tests/multiple_database/tests.py:597:11    - Unknown word (Reget)      -- # Reget the objects to clear
tests/multiple_database/tests.py:847:11    - Unknown word (Reget)      -- # Reget the objects to clear
tests/multiple_database/tests.py:982:11    - Unknown word (Reget)      -- # Reget the objects to clear
tests/nested_foreign_keys/tests.py:75:60     - Unknown word (screeningnullfk) -- objects.select_related("screeningnullfk")), 3)
tests/nested_foreign_keys/tests.py:76:60     - Unknown word (screeningnullfk) -- objects.select_related("screeningnullfk__movie")), 3)
tests/nested_foreign_keys/tests.py:79:52     - Unknown word (screeningnullfk) -- Event.objects.values("screeningnullfk__pk")), 3)
tests/nested_foreign_keys/tests.py:80:52     - Unknown word (screeningnullfk) -- Event.objects.values("screeningnullfk__movie__pk")), 3)
tests/nested_foreign_keys/tests.py:81:52     - Unknown word (screeningnullfk) -- Event.objects.values("screeningnullfk__movie__title")), 3
tests/null_queries/tests.py:72:9      - Unknown word (outerb)     -- outerb = OuterB.objects.create
tests/null_queries/tests.py:75:80     - Unknown word (outerb)     -- inner__isnull=False), [outerb])
tests/one_to_one/models.py:68:17     - Unknown word (Multimodel) -- return "Multimodel %s" % self.name
tests/one_to_one/tests.py:146:34    - Unknown word (multimodel) -- assertEqual(repr(o1.multimodel), "<MultiModel: Multimodel
tests/one_to_one/tests.py:146:61    - Unknown word (Multimodel) -- multimodel), "<MultiModel: Multimodel x1>")
tests/order_with_respect_to/base_tests.py:20:25     - Unknown word (Beatle)     -- text="Which Beatle starts with the letter
tests/pagination/tests.py:289:43    - Unknown word (fghijk)     -- assertEqual("".join(page2), "fghijk")
tests/pagination/tests.py:290:53    - Unknown word (kjihgf)     -- join(reversed(page2)), "kjihgf")
tests/postgres_tests/array_default_migrations/0002_integerarraymodel_field_2.py:12:25     - Unknown word (integerarraydefaultmodel) -- model_name="integerarraydefaultmodel",
tests/postgres_tests/migrations/0001_setup_extensions.py:35:31     - Unknown word (ossp)       -- CreateExtension("uuid-ossp"),
tests/postgres_tests/migrations/0002_create_test_models.py:438:19    - Unknown word (bigints)    -- ("bigints", BigIntegerRangeField
tests/postgres_tests/models.py:134:5     - Unknown word (bigints)    -- bigints = BigIntegerRangeField
tests/postgres_tests/test_aggregates.py:255:9     - Unknown word (aggr)       -- aggr1 = AggregateTestModel
tests/postgres_tests/test_aggregates.py:256:9     - Unknown word (aggr)       -- aggr2 = AggregateTestModel
tests/postgres_tests/test_aggregates.py:257:52    - Unknown word (aggr)       -- create(related_field=aggr1, int1=1, int2=0)
tests/postgres_tests/test_aggregates.py:258:52    - Unknown word (aggr)       -- create(related_field=aggr1, int1=2, int2=0)
tests/postgres_tests/test_aggregates.py:259:52    - Unknown word (aggr)       -- create(related_field=aggr2, int1=3, int2=0)
tests/postgres_tests/test_aggregates.py:283:33    - Unknown word (stattestmodel) -- array=ArrayAgg("stattestmodel__int1", filter=Q(stattestmode
tests/postgres_tests/test_aggregates.py:283:64    - Unknown word (stattestmodel) -- tattestmodel__int1", filter=Q(stattestmodel__int2=0))
tests/postgres_tests/test_aggregates.py:305:33    - Unknown word (stattestmodel) -- array=ArrayAgg("stattestmodel__int1", filter=Q(stattestmode
tests/postgres_tests/test_aggregates.py:305:64    - Unknown word (stattestmodel) -- tattestmodel__int1", filter=Q(stattestmodel__int2=0))
tests/postgres_tests/test_aggregates.py:535:22    - Unknown word (hotelreservation) -- "hotelreservation__requirements",
tests/postgres_tests/test_aggregates.py:536:32    - Unknown word (hotelreservation) -- ordering="-hotelreservation__start",
tests/postgres_tests/test_aggregates.py:53:13     - Unknown word (aggs)       -- cls.aggs = AggregateTestModel
tests/postgres_tests/test_aggregates.py:564:27    - Unknown word (stattestmodel)    -- ArrayAgg("stattestmodel__int1", ordering="-stattestmo
tests/postgres_tests/test_aggregates.py:601:50    - Unknown word (aggs)             -- tTestModel(related_field=self.aggs[0], int1=0, int2=5)
tests/postgres_tests/test_aggregates.py:602:50    - Unknown word (aggs)             -- tTestModel(related_field=self.aggs[0], int1=1, int2=4)
tests/postgres_tests/test_aggregates.py:603:50    - Unknown word (aggs)             -- tTestModel(related_field=self.aggs[0], int1=2, int2=3)
tests/postgres_tests/test_aggregates.py:654:19    - Unknown word (aggs)             -- [self.aggs[0]],
tests/postgres_tests/test_aggregates.py:657:23    - Unknown word (isnt)             -- def test_ordering_isnt_cleared_for_array_subquery
tests/postgres_tests/test_aggregates.py:858:19    - Unknown word (avgx)             -- def test_regr_avgx_general(self):
tests/postgres_tests/test_aggregates.py:862:19    - Unknown word (avgy)             -- def test_regr_avgy_general(self):
tests/postgres_tests/test_aggregates.py:905:19    - Unknown word (avgx)             -- def test_regr_avgx_with_related_obj_and
tests/postgres_tests/test_apps.py:17:60     - Unknown word (oids)       -- signals import get_hstore_oids
tests/postgres_tests/test_apps.py:34:20     - Unknown word (oids)       -- get_hstore_oids.cache_clear()
tests/postgres_tests/test_array.py:1118:32   - Unknown word (defg)                     -- field.clean("abc,c,defg")
tests/postgres_tests/test_array.py:1141:34   - Unknown word (defg)                     -- "nth": 3, "value": "defg", "limit_value": 2,
tests/postgres_tests/test_array.py:1331:39   - Unknown word (defg)                     -- clean(["abc", "c", "defg"])
tests/postgres_tests/test_array.py:1358:14   - Unknown word (splitarraywidget)         -- def test_splitarraywidget_value_omitted_from_data
tests/postgres_tests/test_array.py:320:19    - Unknown word (mogrify)    -- # psycopg mogrify method that generates
tests/postgres_tests/test_array.py:627:13    - Unknown word (subarray)   -- subarray=F("field")[:1]
tests/postgres_tests/test_array.py:628:32    - Unknown word (subarray)   -- filter(field__len=F("subarray__len"))
tests/postgres_tests/test_array.py:947:38    - Unknown word (integerarraydefaultmodel) -- name = "postgres_tests_integerarraydefaultmodel"
tests/postgres_tests/test_array.py:966:38    - Unknown word (chartextarrayindexmodel)  -- name = "postgres_tests_chartextarrayindexmodel"
tests/postgres_tests/test_array.py:998:35    - Unknown word (integerarraymodel)        -- model": "postgres_tests.integerarraymodel", "pk": null}]'
tests/postgres_tests/test_constraints.py:1034:29   - Unknown word (spgist)     -- test_range_adjacent_spgist_include(self):
tests/postgres_tests/test_constraints.py:1035:42   - Unknown word (spgist)     -- name = "ints_adjacent_spgist_include"
tests/postgres_tests/test_constraints.py:1042:25   - Unknown word (spgist)     -- index_type="spgist",
tests/postgres_tests/test_constraints.py:1070:29   - Unknown word (spgist)     -- test_range_adjacent_spgist_include_condition(self
tests/postgres_tests/test_constraints.py:1071:42   - Unknown word (spgist)     -- name = "ints_adjacent_spgist_include_condition"
tests/postgres_tests/test_constraints.py:216:48    - Unknown word (Bedemir's)  -- setting__contains="Sir Bedemir's Castle"),
tests/postgres_tests/test_constraints.py:263:65    - Unknown word (Bedemir's)  -- ScEnE 10", setting="Sir Bedemir's Castle")
tests/postgres_tests/test_constraints.py:264:60    - Unknown word (Bedemir's)  -- Scene 5", setting="Sir Bedemir's Castle")
tests/postgres_tests/test_constraints.py:269:61    - Unknown word (Bedemir's)  -- ScEnE 10", setting="Sir Bedemir's Castle")
tests/postgres_tests/test_constraints.py:48:46     - Unknown word (indclass)   -- i on oc.oid = ANY(i.indclass)
tests/postgres_tests/test_constraints.py:610:25    - Unknown word (SPGIST)     -- index_type="SPGIST",
tests/postgres_tests/test_constraints.py:625:32    - Unknown word (SPGIST)     -- "index_type": "SPGIST",
tests/postgres_tests/test_constraints.py:803:25    - Unknown word (TSTZRANGE)  -- function = "TSTZRANGE"
tests/postgres_tests/test_constraints.py:94:31     - Unknown word (daterange)  -- test_check_constraint_daterange_contains(self):
tests/postgres_tests/test_hstore.py:303:42    - Unknown word (hstoremodel) -- model": "postgres_tests.hstoremodel",
tests/postgres_tests/test_hstore.py:416:35    - Unknown word (aira)        -- field.prepare_value({"aira_maplayer": "Αρδευτι
tests/postgres_tests/test_hstore.py:416:40    - Unknown word (maplayer)    -- prepare_value({"aira_maplayer": "Αρδευτικό δίκτυο
tests/postgres_tests/test_hstore.py:416:52    - Unknown word (Αρδευτικό)   -- value({"aira_maplayer": "Αρδευτικό δίκτυο"}),
tests/postgres_tests/test_hstore.py:416:62    - Unknown word (δίκτυο)      -- maplayer": "Αρδευτικό δίκτυο"}),
tests/postgres_tests/test_hstore.py:417:16    - Unknown word (aira)        -- '{"aira_maplayer": "Αρδευτι
tests/postgres_tests/test_hstore.py:417:21    - Unknown word (maplayer)    -- '{"aira_maplayer": "Αρδευτικό δίκτυο
tests/postgres_tests/test_hstore.py:417:33    - Unknown word (Αρδευτικό)   -- '{"aira_maplayer": "Αρδευτικό δίκτυο"}',
tests/postgres_tests/test_hstore.py:417:43    - Unknown word (δίκτυο)      -- maplayer": "Αρδευτικό δίκτυο"}',
tests/postgres_tests/test_hstore.py:81:44     - Unknown word (Tigr)       -- HStoreModel(field={"cat": "TigrOu", "breed": "birman
tests/postgres_tests/test_hstore.py:81:63     - Unknown word (birman)     -- "TigrOu", "breed": "birman"}),
tests/postgres_tests/test_hstore.py:82:44     - Unknown word (minou)      -- HStoreModel(field={"cat": "minou", "breed": "ragdoll
tests/postgres_tests/test_hstore.py:82:62     - Unknown word (ragdoll)    -- "minou", "breed": "ragdoll"}),
tests/postgres_tests/test_indexes.py:240:47    - Unknown word (spgist)     -- SpGistIndex.suffix, "spgist")
tests/postgres_tests/test_indexes.py:243:64    - Unknown word (spgist)     -- ], name="test_title_spgist", fillfactor=80)
tests/postgres_tests/test_indexes.py:248:63    - Unknown word (spgist)     -- "name": "test_title_spgist", "fillfactor": 80}
tests/postgres_tests/test_indexes.py:255:46    - Unknown word (indclass)   -- i on oc.oid = ANY(i.indclass)
tests/postgres_tests/test_indexes.py:369:56    - Unknown word (trgm)       -- "scene"), name="gin_trgm_ops"), name=index_name
tests/postgres_tests/test_indexes.py:374:61    - Unknown word (trgm)       -- cursor.fetchall(), [("gin_trgm_ops", index_name)])
tests/postgres_tests/test_indexes.py:393:26    - Unknown word (tsvector)   -- self.assertIn("::tsvector", str(sql))
tests/postgres_tests/test_indexes.py:539:14    - Unknown word (tsvector)   -- def test_tsvector_op_class_gist_index
tests/postgres_tests/test_indexes.py:540:23    - Unknown word (tsvector)   -- index_name = "tsvector_op_class_gist"
tests/postgres_tests/test_indexes.py:544:23    - Unknown word (tsvector)   -- name="tsvector_ops",
tests/postgres_tests/test_indexes.py:608:14    - Unknown word (spgist)     -- def test_spgist_index(self):
tests/postgres_tests/test_indexes.py:612:46    - Unknown word (spgist)     -- text_field_model_field_spgist"
tests/postgres_tests/test_introspection.py:22:29     - Unknown word (rangesmodel) -- "postgres_tests_rangesmodel",
tests/postgres_tests/test_introspection.py:26:18     - Unknown word (bigints)     -- "bigints = django.contrib.postgres
tests/postgres_tests/test_operations.py:243:36    - Unknown word (extention)  -- "test_allow_create_extention"
tests/postgres_tests/test_operations.py:420:21    - Unknown word (phonebook)  -- "german_phonebook_test",
tests/postgres_tests/test_operations.py:422:29    - Unknown word (phonebk)    -- locale="de-u-co-phonebk",
tests/postgres_tests/test_ranges.py:1023:36   - Unknown word (biginteger)  -- model_field_formfield_biginteger(self):
tests/postgres_tests/test_ranges.py:102:13    - Unknown word (bigints)    -- bigints=NumericRange(10, 20
tests/postgres_tests/test_ranges.py:110:35    - Unknown word (bigints)    -- assertEqual(instance.bigints, loaded.bigints)
tests/postgres_tests/test_ranges.py:110:51    - Unknown word (bigints)    -- instance.bigints, loaded.bigints)
tests/postgres_tests/test_ranges.py:457:14    - Unknown word (biginteger) -- def test_biginteger_range(self):
tests/postgres_tests/test_ranges.py:556:11    - Unknown word (bigints)    -- '"bigints": null, "timestamps
tests/postgres_tests/test_ranges.py:564:35    - Unknown word (rangesmodel) -- model": "postgres_tests.rangesmodel", "pk": null}]'
tests/postgres_tests/test_ranges.py:598:36    - Unknown word (bigints)     -- assertIsNone(instance.bigints)
tests/postgres_tests/test_search.py:100:35    - Unknown word (cadeau)     -- dialogue="Oh. Un beau cadeau. Oui oui.",
tests/postgres_tests/test_search.py:154:49    - Unknown word (cadeaux)    -- vector=SearchQuery("cadeaux", config="french")
tests/postgres_tests/test_search.py:160:21    - Unknown word (cadeaux)    -- search="cadeaux"
tests/postgres_tests/test_search.py:212:26    - Unknown word (minstrelbravely) -- ).filter(search="minstrelbravely")
tests/postgres_tests/test_search.py:245:33    - Unknown word (cadeau)          -- search=SearchQuery("cadeau beau un", search_type
tests/postgres_tests/test_search.py:249:41    - Unknown word (cadeau)          -- SearchQuery("un beau cadeau", search_type="phrase
tests/postgres_tests/test_search.py:268:19    - Unknown word (cadeaux)         -- "'cadeaux' & 'beaux'", search
tests/postgres_tests/test_search.py:303:18    - Unknown word (cadeau)          -- "cadeau -beau", search_type
tests/postgres_tests/test_search.py:308:38    - Unknown word (cadeau)          -- search=SearchQuery("beau cadeau", search_type="websearch
tests/postgres_tests/test_search.py:321:38    - Unknown word (cadeaux)         -- search=SearchQuery("cadeaux", config="french"))
tests/postgres_tests/test_search.py:327:26    - Unknown word (cadeaux)         -- ).filter(search="cadeaux")
tests/postgres_tests/test_search.py:64:43     - Unknown word (Bedemir's)  -- Scene 5", setting="Sir Bedemir's Castle"
tests/postgres_tests/test_search.py:66:50     - Unknown word (Bedemir)    -- objects.create(name="Bedemir")
tests/postgres_tests/test_search.py:66:9      - Unknown word (bedemir)    -- bedemir = Character.objects
tests/postgres_tests/test_search.py:71:13     - Unknown word (bedemir)    -- cls.bedemir0 = Line.objects.create
tests/postgres_tests/test_search.py:73:23     - Unknown word (bedemir)    -- character=bedemir,
tests/postgres_tests/test_search.py:77:13     - Unknown word (bedemir)    -- cls.bedemir1 = Line.objects.create
tests/postgres_tests/test_search.py:79:23     - Unknown word (bedemir)    -- character=bedemir,
tests/postgres_tests/test_search.py:94:79     - Unknown word (Ramper)     -- Master Ruiz' de lu la Ramper"
tests/postgres_tests/test_signals.py:16:26     - Unknown word (oids)       -- def assertOIDs(self, oids):
tests/postgres_tests/test_signals.py:17:31     - Unknown word (oids)       -- self.assertIsInstance(oids, tuple)
tests/postgres_tests/test_signals.py:18:32     - Unknown word (oids)       -- self.assertGreater(len(oids), 0)
tests/postgres_tests/test_signals.py:7:20      - Unknown word (oids)       -- get_citext_oids,
tests/postgres_tests/test_signals.py:8:20      - Unknown word (oids)       -- get_hstore_oids,
tests/postgres_tests/test_trigram.py:42:20     - Unknown word (Gumby)      -- field="Gumby rides on the path of
tests/postgres_tests/test_trigram.py:45:68     - Unknown word (Middlesborough) -- trigram_word_similar="Middlesborough"),
tests/postgres_tests/test_trigram.py:55:20     - Unknown word (Gumby)          -- field="Gumby rides on the path of
tests/postgres_tests/test_trigram.py:59:53     - Unknown word (Middlesborough) -- strict_word_similar="Middlesborough"
tests/prefetch_related/test_prefetch_related_objects.py:156:54    - Unknown word (Wuthering)  -- , # Emily - Poems, Wuthering Heights
tests/prefetch_related/test_prefetch_related_objects.py:17:48     - Unknown word (Wuthering)  -- objects.create(title="Wuthering Heights")
tests/prefetch_related/test_uuid.py:14:68     - Unknown word (Fifi)       -- "people").get(name="Fifi")
tests/prefetch_related/test_uuid.py:31:34     - Unknown word (Fifi)       -- objects.create(name="Fifi").fleas_hosted.add(
tests/prefetch_related/test_uuid.py:32:34     - Unknown word (Bobo)       -- objects.create(name="Bobo").fleas_hosted.add(
tests/prefetch_related/test_uuid.py:35:74     - Unknown word (Fifi)       -- fleas_hosted").get(name="Fifi")
tests/prefetch_related/test_uuid.py:45:40     - Unknown word (Fifi)       -- objects.create(name="Fifi")
tests/prefetch_related/test_uuid.py:59:63     - Unknown word (Arcata)     -- "Redwood", address="Arcata")
tests/prefetch_related/test_uuid.py:8:34      - Unknown word (Fifi)       -- objects.create(name="Fifi").people.add(
tests/prefetch_related/tests.py:1026:22   - Unknown word (doesnt)        -- def test_to_attr_doesnt_cache_through_attr_as
tests/prefetch_related/tests.py:1070:56   - Unknown word (Cleese)        -- objects.create(name="Mr Cleese")
tests/prefetch_related/tests.py:1088:13   - Unknown word (depts)         -- depts = "".join(
tests/prefetch_related/tests.py:1095:17   - Unknown word (depts)         -- depts,
tests/prefetch_related/tests.py:1096:41   - Unknown word (Cleese)        -- English department: Mr Cleese (BA, BSci, MA, PhD)
tests/prefetch_related/tests.py:1097:41   - Unknown word (Cleese)        -- Physics department: Mr Cleese (BA, BSci, MA, PhD)
tests/prefetch_related/tests.py:1131:27   - Unknown word (nonint)        -- def test_prefetch_GFK_nonint_pk(self):
tests/prefetch_related/tests.py:119:14    - Unknown word (onetoone)   -- def test_onetoone_reverse_no_match(self
tests/prefetch_related/tests.py:127:14    - Unknown word (onetoone)   -- def test_onetoone_reverse_with_to_field
tests/prefetch_related/tests.py:130:64    - Unknown word (prefetchable) -- related model (Author) is prefetchable.
tests/prefetch_related/tests.py:1321:19   - Unknown word (authorwithage) -- a.authorwithage
tests/prefetch_related/tests.py:1322:59   - Unknown word (authorwithage) -- objects.prefetch_related("authorwithage")
tests/prefetch_related/tests.py:1328:24   - Unknown word (authorwithage) -- self.assertIn("authorwithage", connection.queries
tests/prefetch_related/tests.py:1331:38   - Unknown word (authorwithage) -- assertEqual(authors, [a.authorwithage for a in Author.objects
tests/prefetch_related/tests.py:1491:33   - Unknown word (Wuthering)     -- book3 = B.create(title="Wuthering Heights")
tests/prefetch_related/tests.py:1644:22   - Unknown word (einfach)       -- (1, "einfach", "simple"),
tests/prefetch_related/tests.py:1645:22   - Unknown word (schwierig)     -- (2, "schwierig", "difficult"),
tests/prefetch_related/tests.py:1651:25   - Unknown word (einfach)       -- (1, 1, "einfach"),
tests/prefetch_related/tests.py:1653:25   - Unknown word (schwierig)     -- (3, 2, "schwierig"),
tests/prefetch_related/tests.py:1661:48   - Unknown word (wordentry)     -- entry", "lesson_entry__wordentry_set"
tests/prefetch_related/tests.py:205:54    - Unknown word (Wuthering)    -- , # Emily - Poems, Wuthering Heights
tests/prefetch_related/tests.py:221:54    - Unknown word (Wuthering)    -- , # Emily - Poems, Wuthering Heights
tests/prefetch_related/tests.py:235:54    - Unknown word (Wuthering)    -- , # Emily - Poems, Wuthering Heights
tests/prefetch_related/tests.py:350:58    - Unknown word (authorwithage) -- prefetch_related("authors__authorwithage"))
tests/prefetch_related/tests.py:439:21    - Unknown word (travelled)     -- recursively travelled and the found objects
tests/prefetch_related/tests.py:53:48     - Unknown word (Wuthering)  -- objects.create(title="Wuthering Heights")
tests/proxy_models/tests.py:100:39    - Unknown word (Bazza)      -- objects.create(name="Bazza del Frob")
tests/proxy_models/tests.py:100:49    - Unknown word (Frob)       -- create(name="Bazza del Frob")
tests/proxy_models/tests.py:103:32    - Unknown word (Bazza)      -- self.assertEqual(pp, ["Bazza del Frob", "Foo McBar
tests/proxy_models/tests.py:103:42    - Unknown word (Frob)       -- assertEqual(pp, ["Bazza del Frob", "Foo McBar", "homer
tests/proxy_models/tests.py:111:39    - Unknown word (Bazza)      -- objects.create(name="Bazza del Frob")
tests/proxy_models/tests.py:111:49    - Unknown word (Frob)       -- create(name="Bazza del Frob")
tests/proxy_models/tests.py:116:45    - Unknown word (Zathras)    -- PersonProxy.objects.get(name="Zathras")
tests/proxy_models/tests.py:120:44    - Unknown word (Zathras)    -- tatusPerson.objects.get(name="Zathras")
tests/proxy_models/tests.py:122:43    - Unknown word (Bazza)      -- objects.create(name="Bazza Jr.")
tests/proxy_models/tests.py:193:14    - Unknown word (myperson)   -- def test_myperson_manager(self):
tests/proxy_models/tests.py:204:14    - Unknown word (otherperson) -- def test_otherperson_manager(self):
tests/proxy_models/tests.py:354:9     - Unknown word (pcontributor) -- pcontributor = ProxyTrackerUser.objects
tests/proxy_models/tests.py:361:22    - Unknown word (pcontributor) -- reporter=pcontributor,
tests/proxy_models/tests.py:379:40    - Unknown word (butor)        -- reporter__name__icontains="butor"
tests/proxy_models/tests.py:394:46    - Unknown word (mypeople)     -- command("loaddata", "mypeople.json", verbosity=0)
tests/proxy_models/tests.py:440:47    - Unknown word (trackeruser)  -- admin_proxy:proxy_models_trackeruser_change", args=(user
tests/proxy_models/tests.py:445:43    - Unknown word (proxytrackeruser) -- admin_proxy:proxy_models_proxytrackeruser_change", args=(proxy
tests/proxy_models/tests.py:452:47    - Unknown word (trackeruser)      -- admin_proxy:proxy_models_trackeruser_delete", args=(user
tests/proxy_models/tests.py:458:43    - Unknown word (proxytrackeruser) -- admin_proxy:proxy_models_proxytrackeruser_delete", args=(proxy
tests/proxy_models/tests.py:87:39     - Unknown word (Bazza)      -- objects.create(name="Bazza del Frob")
tests/proxy_models/tests.py:87:49     - Unknown word (Frob)       -- create(name="Bazza del Frob")
tests/proxy_models/tests.py:92:9      - Unknown word (lsps)       -- lsps = [lsp.name for lsp
tests/proxy_models/tests.py:93:26     - Unknown word (lsps)       -- self.assertEqual(lsps, ["homer"])
tests/queries/models.py:429:5     - Unknown word (objecta)    -- objecta = models.ForeignKey
tests/queries/models.py:443:5     - Unknown word (objecta)    -- objecta = models.ForeignKey
tests/queries/models.py:444:5     - Unknown word (objectb)    -- objectb = models.ForeignKey
tests/queries/models.py:445:5     - Unknown word (childobjecta) -- childobjecta = models.ForeignKey
tests/queries/models.py:680:5     - Unknown word (parentid)     -- parentid = models.AutoField(primary
tests/queries/models.py:686:5     - Unknown word (childid)      -- childid = models.AutoField(primary
tests/queries/models.py:739:5     - Unknown word (modela)       -- modela_fk = models.ForeignKey
tests/queries/models.py:740:5     - Unknown word (modelc)       -- modelc_fk = models.ForeignKey
tests/queries/test_bulk_update.py:200:14    - Unknown word (falsey)     -- def test_falsey_pk_value(self):
tests/queries/test_explain.py:123:14    - Unknown word (o'ption)    -- "o'ption",
tests/queries/test_explain.py:124:17    - Unknown word (tion)       -- "op`tion",
tests/queries/test_explain.py:125:14    - Unknown word (opti)       -- "opti on",
tests/queries/test_explain.py:127:14    - Unknown word (optio)      -- "optio\tn",
tests/queries/test_explain.py:128:16    - Unknown word (nption)     -- "o\nption",
tests/queries/test_qs_combinators.py:626:21    - Unknown word (realiased)  -- # 'num' got realiased to num2
tests/queries/test_qs_combinators.py:637:22    - Unknown word (subcompound) -- def test_qs_with_subcompound_qs(self):
tests/queries/test_query.py:116:37    - Unknown word (objecta)    -- query.build_where(Q(objecta=None) | Q(objectb=None
tests/queries/test_query.py:116:55    - Unknown word (objectb)    -- Q(objecta=None) | Q(objectb=None))
tests/queries/test_query.py:121:72    - Unknown word (objecta)    -- ObjectC._meta.get_field("objecta"))
tests/queries/test_query.py:126:72    - Unknown word (objectb)    -- ObjectC._meta.get_field("objectb"))
tests/queries/tests.py:1060:39   - Unknown word (LOUTER)       -- if x.join_type == LOUTER and q.alias_refcount
tests/queries/tests.py:115:7     - Unknown word (Unpickleable) -- class UnpickleableError(Exception):
tests/queries/tests.py:1166:19   - Unknown word (dumbcategory) -- # join to dumbcategory ptr_id
tests/queries/tests.py:12:44     - Unknown word (LOUTER)     -- sql.constants import LOUTER
tests/queries/tests.py:1300:14   - Unknown word (managedmodel) -- "managedmodel, name, note, parent
tests/queries/tests.py:1541:45   - Unknown word (ANTH)         -- note_set.create(note="ANTH", misc="100")
tests/queries/tests.py:1541:9    - Unknown word (anth)         -- anth100 = tag.note_set.create
tests/queries/tests.py:1545:32   - Unknown word (anth)         -- notes.set([math101, anth100])
tests/queries/tests.py:1548:24   - Unknown word (anth)         -- notes__in=[anth100]
tests/queries/tests.py:1626:9    - Unknown word (otherteachers) -- otherteachers = Teacher.objects.exclude
tests/queries/tests.py:1627:15   - Unknown word (otherteachers) -- qs1 = otherteachers.filter(schools=s1).filter
tests/queries/tests.py:1628:15   - Unknown word (otherteachers) -- qs2 = otherteachers.filter(schools=s1).filter
tests/queries/tests.py:1687:46   - Unknown word (categoryitem)  -- pleCategory.objects.order_by("categoryitem", "pk"), [c1, c2, c
tests/queries/tests.py:1718:52   - Unknown word (specialcategory) -- objects.filter(category__specialcategory__isnull=False)
tests/queries/tests.py:1735:53   - Unknown word (specialcategory) -- objects.exclude(category__specialcategory__isnull=False)
tests/queries/tests.py:1752:52   - Unknown word (specialcategory) -- objects.filter(category__specialcategory__isnull=True)
tests/queries/tests.py:1769:53   - Unknown word (specialcategory) -- objects.exclude(category__specialcategory__isnull=True)
tests/queries/tests.py:1786:23   - Unknown word (onetoonecategory) -- category__onetoonecategory__isnull=False
tests/queries/tests.py:1803:53   - Unknown word (onetoonecategory) -- objects.exclude(category__onetoonecategory__isnull=False)
tests/queries/tests.py:1819:52   - Unknown word (onetoonecategory) -- objects.filter(category__onetoonecategory__isnull=True)
tests/queries/tests.py:1836:23   - Unknown word (onetoonecategory) -- category__onetoonecategory__isnull=True
tests/queries/tests.py:2136:49   - Unknown word (pointerb)         -- objects.filter(connection__pointerb__id=1), []
tests/queries/tests.py:2139:50   - Unknown word (pointerb)         -- exclude(connection__pointerb__id=1), []
tests/queries/tests.py:2251:42   - Unknown word (rvalue)           -- empty iterator as the rvalue for an "__in"
tests/queries/tests.py:226:26    - Unknown word (LOUTER)       -- self.assertNotIn(LOUTER, [x.join_type for x
tests/queries/tests.py:2295:9    - Unknown word (qstr)             -- qstr = captured_queries[
tests/queries/tests.py:2297:30   - Unknown word (qstr)             -- self.assertNotIn(id, qstr)
tests/queries/tests.py:2298:32   - Unknown word (qstr)             -- self.assertNotIn(name, qstr)
tests/queries/tests.py:2382:10   - Unknown word (Subselects)       -- "Subselects honor any manual ordering
tests/queries/tests.py:2582:33   - Unknown word (baseuser)         -- = self.annotation_1.baseuser_set.all()
tests/queries/tests.py:2606:38   - Unknown word (unpickable)       -- one of cached results unpickable.
tests/queries/tests.py:2607:41   - Unknown word (Unpickleable)     -- result_cache[0].error = UnpickleableError()
tests/queries/tests.py:2608:32   - Unknown word (Unpickleable)     -- with self.assertRaises(UnpickleableError):
tests/queries/tests.py:2654:14   - Unknown word (emptyqueryset)    -- def test_emptyqueryset_values(self):
tests/queries/tests.py:2962:20   - Unknown word (resultset)        -- def test_empty_resultset_sql(self):
tests/queries/tests.py:3169:9    - Unknown word (objectas)         -- objectas = []
tests/queries/tests.py:3170:9    - Unknown word (objectbs)         -- objectbs = []
tests/queries/tests.py:3171:9    - Unknown word (objectcs)         -- objectcs = []
tests/queries/tests.py:3176:13   - Unknown word (objectas)         -- objectas.append(o)
tests/queries/tests.py:3178:23   - Unknown word (objectas)         -- ("un", 1, objectas[0]),
tests/queries/tests.py:3179:25   - Unknown word (objectas)         -- ("deux", 2, objectas[0]),
tests/queries/tests.py:3180:26   - Unknown word (objectas)         -- ("trois", 3, objectas[2]),
tests/queries/tests.py:3182:27   - Unknown word (objecta)          -- for name, number, objecta in b_info:
tests/queries/tests.py:3183:48   - Unknown word (objecta)          -- name=name, num=number, objecta=objecta)
tests/queries/tests.py:3183:56   - Unknown word (objecta)          -- num=number, objecta=objecta)
tests/queries/tests.py:3185:13   - Unknown word (objectbs)         -- objectbs.append(o)
tests/queries/tests.py:3186:40   - Unknown word (objectbs)         -- "ein", objectas[2], objectbs[2]), ("zwei", objectas
tests/queries/tests.py:3186:56   - Unknown word (zwei)             -- 2], objectbs[2]), ("zwei", objectas[1], objectbs
tests/queries/tests.py:3186:76   - Unknown word (objectbs)         -- zwei", objectas[1], objectbs[1])]
tests/queries/tests.py:3187:19   - Unknown word (objecta)          -- for name, objecta, objectb in c_info:
tests/queries/tests.py:3187:28   - Unknown word (objectb)          -- for name, objecta, objectb in c_info:
tests/queries/tests.py:3188:36   - Unknown word (objecta)          -- ObjectC(name=name, objecta=objecta, objectb=objectb
tests/queries/tests.py:3188:53   - Unknown word (objectb)          -- name, objecta=objecta, objectb=objectb)
tests/queries/tests.py:3188:61   - Unknown word (objectb)          -- objecta=objecta, objectb=objectb)
tests/queries/tests.py:3190:13   - Unknown word (objectcs)         -- objectcs.append(o)
tests/queries/tests.py:3199:16   - Unknown word (objectb)          -- Q2 = Q(objectb__name="deux")
tests/queries/tests.py:3204:16   - Unknown word (objectb)          -- Q2 = Q(objectb__name="deux", objectb
tests/queries/tests.py:3209:16   - Unknown word (objectc)          -- Q2 = Q(objectc__objectb__name="deux
tests/queries/tests.py:3214:25   - Unknown word (objectc)          -- Q2 = Q(objecta__objectc__name="ein")
tests/queries/tests.py:3217:18   - Unknown word (BACB)             -- def test_BAB_BACB(self):
tests/queries/tests.py:3219:25   - Unknown word (objectc)          -- Q2 = Q(objecta__objectc__objectb__name="trois
tests/queries/tests.py:3223:37   - Unknown word (objectc)          -- objecta__name="one", objectc__objecta__name="two
tests/queries/tests.py:3225:22   - Unknown word (objectc)          -- objecta__objectc__name="ein",
tests/queries/tests.py:3298:14   - Unknown word (nontech)          -- alex_nontech_employers = (
tests/queries/tests.py:3304:43   - Unknown word (nontech)          -- assertSequenceEqual(alex_nontech_employers, [google,
tests/queries/tests.py:3381:10   - Unknown word (regressiontests)  -- Some regressiontests for ticket #17600. Some
tests/queries/tests.py:3490:24   - Unknown word (onetoonecategory) -- first__onetoonecategory=F("second__onetoonecategory
tests/queries/tests.py:3570:42   - Unknown word (namedcategory)    -- DumbCategory.objects.exclude(namedcategory__name__in=["nonexistent
tests/queries/tests.py:3704:9    - Unknown word (qset)             -- qset = ModelA.objects.filter
tests/queries/tests.py:3705:31   - Unknown word (qset)             -- self.assertEqual(list(qset), [self.a1])
tests/queries/tests.py:3709:30   - Unknown word (qset)             -- self.assertEqual(str(qset.query).count("INNER
tests/queries/tests.py:3891:14   - Unknown word (revfk)            -- def test_revfk_noreuse(self):
tests/queries/tests.py:3891:20   - Unknown word (noreuse)          -- def test_revfk_noreuse(self):
tests/queries/tests.py:3897:16   - Unknown word (trimmable)        -- When a trimmable join is specified in
tests/queries/tests.py:3904:9    - Unknown word (hogward)          -- hogward = School.objects.create
tests/queries/tests.py:3906:44   - Unknown word (hogward)          -- objects.create(school=hogward)
tests/queries/tests.py:3907:41   - Unknown word (hogward)          -- objects.create(school=hogward, name="Potion")
tests/queries/tests.py:3921:9    - Unknown word (basea)            -- basea = BaseA.objects.create
tests/queries/tests.py:3928:43   - Unknown word (basea)            -- assertSequenceEqual(qs, [basea])
tests/queries/tests.py:4039:36   - Unknown word (fexpression)      -- disjunction_promotion_fexpression(self):
tests/queries/tests.py:4222:40   - Unknown word (childobjecta)     -- ObjectC.objects.create(childobjecta=cls.coa)
tests/queries/tests.py:4259:37   - Unknown word (childobjecta)     -- ObjectC.objects.exclude(childobjecta__in=[self.coa, self
tests/queries/tests.py:4312:58   - Unknown word (childobjecta)     -- ObjectC.objects.exclude(childobjecta=self.oa), out_c)
tests/queries/tests.py:4348:49   - Unknown word (pointera)         -- Connection.objects.order_by("-pointera__connection", "pk")
tests/queries/tests.py:4355:43   - Unknown word (jackstaff)        -- objects.create(name="jackstaff")
tests/queries/tests.py:4356:9    - Unknown word (jackstaff)        -- jackstaff = StaffUser.objects
tests/queries/tests.py:4357:43   - Unknown word (jillstaff)        -- objects.create(name="jillstaff")
tests/queries/tests.py:4358:9    - Unknown word (jillstaff)        -- jillstaff = StaffUser.objects
tests/queries/tests.py:4359:44   - Unknown word (jackstaff)        -- objects.create(creator=jackstaff, owner=jillstaff, title
tests/queries/tests.py:4359:61   - Unknown word (jillstaff)        -- creator=jackstaff, owner=jillstaff, title="task")
tests/queries/tests.py:4414:9    - Unknown word (tblname)          -- tblname = connection.ops.quote
tests/queries/tests.py:4415:47   - Unknown word (tblname)          -- LEFT OUTER JOIN %s" % tblname, str(qs.query))
tests/queries/tests.py:4426:45   - Unknown word (categoryitem)     -- ecialCategory.objects.exclude(categoryitem__id=c1.pk).order_by
tests/queries/tests.py:4430:44   - Unknown word (categoryitem)     -- pecialCategory.objects.filter(categoryitem__id=c1.pk), [sc1]
tests/queries/tests.py:4438:13   - Unknown word (custompktag)      -- cp1.custompktag_set.add(cpt1)
tests/queries/tests.py:4439:58   - Unknown word (custompktag)      -- CustomPk.objects.filter(custompktag=cpt1), [cp1])
tests/queries/tests.py:4469:46   - Unknown word (modelc)           -- 0.0, field_b1=True, modelc_fk=c1, modela_fk=a1
tests/queries/tests.py:4469:60   - Unknown word (modela)           -- True, modelc_fk=c1, modela_fk=a1
tests/queries/tests.py:4477:40   - Unknown word (modelc)           -- / F("ticket23605b__modelc_fk__field_c0")
tests/queries/tests.py:4489:60   - Unknown word (modelc)           -- b0__gte=1000000 / F("modelc_fk__field_c0"))
tests/queries/tests.py:4554:13   - Unknown word (modela)           -- modela_fk=a1,
tests/queries/tests.py:4557:13   - Unknown word (modelc)           -- modelc_fk=c1,
tests/queries/tests.py:4560:13   - Unknown word (modela)           -- modela_fk=a1,
tests/queries/tests.py:4563:13   - Unknown word (modelc)           -- modelc_fk=c1,
tests/queries/tests.py:4566:13   - Unknown word (modela)           -- modela_fk=a1,
tests/queries/tests.py:4572:13   - Unknown word (modela)           -- modela_fk=a1,
tests/queries/tests.py:496:26    - Unknown word (LOUTER)       -- self.assertNotIn(LOUTER, [x.join_type for x
tests/queries/tests.py:510:39    - Unknown word (LOUTER)       -- if x.join_type == LOUTER and qs.query.alias_refcount
tests/queryset_pickle/models.py:60:9      - Unknown word (somefield)  -- somefield = models.IntegerField
tests/queryset_pickle/tests.py:102:35    - Unknown word (somefield)                 -- assertEqual(original.somefield, reloaded.somefield
tests/queryset_pickle/tests.py:102:55    - Unknown word (somefield)                 -- somefield, reloaded.somefield)
tests/queryset_pickle/tests.py:109:41    - Unknown word (foof)                      -- objects.create(name="foof")
tests/queryset_pickle/tests.py:121:9     - Unknown word (dynclass)                  -- dynclass = type(
tests/queryset_pickle/tests.py:126:20    - Unknown word (dynclass)                  -- original = dynclass(pk=1)
tests/queryset_pickle/tests.py:130:43    - Unknown word (dynclass)                  -- reloaded.__class__, dynclass)
tests/queryset_pickle/tests.py:19:7      - Unknown word (Pickleability) -- class PickleabilityTestCase(TestCase):
tests/queryset_pickle/tests.py:279:11    - Unknown word (mmodel)                    -- m2mmodel = M2MModel.objects.create
tests/queryset_pickle/tests.py:280:11    - Unknown word (mmodel)                    -- m2mmodel.groups.add(group)
tests/queryset_pickle/tests.py:282:21    - Unknown word (mmodels)                   -- first_m2mmodels=models.FilteredRelation
tests/queryset_pickle/tests.py:283:20    - Unknown word (mmodel)                    -- "m2mmodel",
tests/queryset_pickle/tests.py:284:38    - Unknown word (mmodel)                    -- condition=models.Q(m2mmodel__added__year=2020),
tests/queryset_pickle/tests.py:286:55    - Unknown word (mmodels)                   -- models.Count("first_m2mmodels__groups"))
tests/queryset_pickle/tests.py:34:55     - Unknown word (Maybachs)      -- name="Ponies Who Own Maybachs")
tests/queryset_pickle/tests.py:66:9      - Unknown word (klass)         -- klass = Event.DoesNotExist
tests/queryset_pickle/tests.py:67:49     - Unknown word (klass)         -- pickle.loads(pickle.dumps(klass)), klass)
tests/queryset_pickle/tests.py:67:58     - Unknown word (klass)         -- pickle.dumps(klass)), klass)
tests/queryset_pickle/tests.py:70:9      - Unknown word (klass)         -- klass = Event.MultipleObjectsReturn
tests/queryset_pickle/tests.py:71:49     - Unknown word (klass)         -- pickle.loads(pickle.dumps(klass)), klass)
tests/queryset_pickle/tests.py:73:22     - Unknown word (relatedobjectdoesnotexist) -- def test_forward_relatedobjectdoesnotexist_class(self):
tests/queryset_pickle/tests.py:81:33     - Unknown word (relatedobjectdoesnotexist) -- test_reverse_one_to_one_relatedobjectdoesnotexist_class(self):
tests/queryset_pickle/tests.py:97:44     - Unknown word (somefield)                 -- SomeModel.objects.create(somefield=1)
tests/queryset_pickle/tests.py:98:55     - Unknown word (somefield)                 -- SomeModel.objects.defer("somefield")[0]
tests/raw_query/tests.py:126:14    - Unknown word (rawqueryset) -- def test_rawqueryset_repr(self):
tests/raw_query/tests.py:174:42    - Unknown word (mixedcaseidcolumn) -- SELECT * FROM raw_query_mixedcaseidcolumn"
tests/raw_query/tests.py:211:9     - Unknown word (qset)              -- qset = Author.objects.raw
tests/raw_query/tests.py:212:24    - Unknown word (qset)              -- results = list(qset)
tests/raw_query/tests.py:216:36    - Unknown word (qset)              -- assertIsInstance(repr(qset), str)
tests/raw_query/tests.py:220:9     - Unknown word (qset)              -- qset = Author.objects.raw
tests/raw_query/tests.py:221:30    - Unknown word (qset)              -- self.assertEqual(len(qset), 2)
tests/raw_query/tests.py:351:45    - Unknown word (Chun)              -- Wesley", last_name="Chun", dob=date(1962, 10
tests/raw_query/tests.py:353:42    - Unknown word (friendlyauthor)    -- SELECT * FROM raw_query_friendlyauthor"
tests/raw_query/tests.py:381:60    - Unknown word (bookfkaspk)        -- default FROM raw_query_bookfkaspk"
tests/raw_query/tests.py:49:44     - Unknown word (Shaston)    -- walking homeward from Shaston to the village of Marlott
tests/raw_query/tests.py:49:70     - Unknown word (Marlott)    -- Shaston to the village of Marlott, "
tests/raw_query/tests.py:50:43     - Unknown word (Blakemore)  -- the adjoining Vale of Blakemore, or Blackmoor."
tests/raw_query/tests.py:50:57     - Unknown word (Blackmoor)  -- Vale of Blakemore, or Blackmoor."
tests/raw_query/tests.py:65:47     - Unknown word (dunkin)     -- objects.create(brand="dunkin doughnuts")
tests/redirects_tests/tests.py:65:23     - Unknown word (shortcircuits) -- def test_redirect_shortcircuits_non_404_response(self
tests/requests_tests/tests.py:1019:28   - Unknown word (Günter)      -- "Hello Günter",
tests/requests_tests/tests.py:1033:57   - Unknown word (Günter)      -- POST, {"name": ["Hello Günter"]})
tests/requests_tests/tests.py:1037:61   - Unknown word (Œnter)       -- {"name": ["Hello GĂŒnter"]})
tests/requests_tests/tests.py:1045:53   - Unknown word (Cnter)       -- "name=Hello%20G%C3%BCnter",
tests/requests_tests/tests.py:1048:56   - Unknown word (Günter)      -- GET, {"name": ["Hello Günter"]})
tests/requests_tests/tests.py:1050:69   - Unknown word (nter)        -- "Hello G\u0102\u0152nter"]})
tests/requests_tests/tests.py:1092:25   - Unknown word (badpath)     -- "example.com:80/badpath",
tests/requests_tests/tests.py:1093:23   - Unknown word (recovermypassword) -- "example.com: recovermypassword.com",
tests/requests_tests/tests.py:1103:25   - Unknown word (feee)              -- "[2001:19f0:feee::dead:beef:cafe]",
tests/requests_tests/tests.py:1105:15   - Unknown word (multitenant)       -- ".multitenant.com",
tests/requests_tests/tests.py:1152:25   - Unknown word (feee)              -- "[2001:19f0:feee::dead:beef:cafe]",
tests/requests_tests/tests.py:1153:25   - Unknown word (feee)              -- "[2001:19f0:feee::dead:beef:cafe]:80
tests/requests_tests/tests.py:1155:23   - Unknown word (multitenant)       -- "anything.multitenant.com",
tests/requests_tests/tests.py:1156:14   - Unknown word (multitenant)       -- "multitenant.com",
tests/requests_tests/tests.py:119:14    - Unknown word (wsgirequest) -- def test_wsgirequest_with_script_name(self
tests/requests_tests/tests.py:1223:25   - Unknown word (feee)              -- "[2001:19f0:feee::dead:beef:cafe]",
tests/requests_tests/tests.py:1224:25   - Unknown word (feee)              -- "[2001:19f0:feee::dead:beef:cafe]:80
tests/requests_tests/tests.py:127:32    - Unknown word (somepath)    -- "PATH_INFO": "/somepath/",
tests/requests_tests/tests.py:1287:17   - Unknown word (hostnames)         -- # Other hostnames raise a DisallowedHost
tests/requests_tests/tests.py:133:49    - Unknown word (somepath)    -- request.path, "/PREFIX/somepath/")
tests/requests_tests/tests.py:137:32    - Unknown word (somepath)    -- "PATH_INFO": "/somepath/",
tests/requests_tests/tests.py:145:14    - Unknown word (wsgirequest) -- def test_wsgirequest_script_url_double_slashes
tests/requests_tests/tests.py:162:14    - Unknown word (wsgirequest) -- def test_wsgirequest_with_force_script_name
tests/requests_tests/tests.py:178:14    - Unknown word (wsgirequest) -- def test_wsgirequest_path_with_force_script
tests/requests_tests/tests.py:233:41    - Unknown word (سلام)        -- PATH_INFO": wsgi_str("/سلام/"),
tests/requests_tests/tests.py:238:42    - Unknown word (سلام)        -- assertEqual(request.path, "/سلام/")
tests/requests_tests/tests.py:278:59    - Unknown word (nefgh)       -- BytesIO(b"1234\n5678\nabcd\nefgh\nijkl"), 24)
tests/requests_tests/tests.py:278:65    - Unknown word (nijkl)       -- 4\n5678\nabcd\nefgh\nijkl"), 24)
tests/requests_tests/tests.py:288:48    - Unknown word (efgh)        -- stream.readline(4), b"efgh")
tests/requests_tests/tests.py:292:47    - Unknown word (ijkl)        -- stream.readline(), b"ijkl")
tests/requests_tests/tests.py:377:50    - Unknown word (España)      -- akePayload(urlencode({"key": "España"}))
tests/requests_tests/tests.py:386:50    - Unknown word (España)      -- request.POST, {"key": ["España"]})
tests/requests_tests/tests.py:389:50    - Unknown word (España)      -- akePayload(urlencode({"key": "España".encode("latin-1")}
tests/requests_tests/tests.py:410:58    - Unknown word (España)      -- akePayload(urlencode({"key": "España"}))
tests/requests_tests/tests.py:421:58    - Unknown word (España)      -- request.POST, {"key": ["España"]})
tests/requests_tests/tests.py:581:22    - Unknown word (rmless)      -- 'rmless", "author": ["Douglas
tests/requests_tests/tests.py:59:24     - Unknown word (Bsome)      -- expected = "/%3Bsome/%3Fawful/%3Dpath/foo
tests/requests_tests/tests.py:59:32     - Unknown word (Fawful)     -- expected = "/%3Bsome/%3Fawful/%3Dpath/foo:bar/?;some
tests/requests_tests/tests.py:67:45     - Unknown word (quux)       -- QUERY_STRING"] = "baz#quux"
tests/requests_tests/tests.py:68:67     - Unknown word (quux)       -- path(), "/foo%23bar?baz#quux")
tests/requests_tests/tests.py:69:79     - Unknown word (quux)       -- prefix/foo%23bar?baz#quux")
tests/requests_tests/tests.py:73:26     - Unknown word (somepath)   -- request.path = "/somepath/"
tests/requests_tests/tests.py:79:62     - Unknown word (somepath)   -- <HttpRequest: GET '/somepath/'>")
tests/requests_tests/tests.py:91:14     - Unknown word (wsgirequest) -- def test_wsgirequest(self):
tests/responses/test_cookie.py:62:58     - Unknown word (usegmt)     -- 22(future_datetime, usegmt=True),
tests/responses/test_cookie.py:63:76     - Unknown word (usegmt)     -- datetime.replace(second=7), usegmt=True),
tests/responses/test_fileresponse.py:112:26    - Unknown word (nosuchfile) -- (__file__ + "nosuchfile", ["application/octet
tests/responses/test_fileresponse.py:114:33    - Unknown word (pynosuchfile) -- ("test_fileresponse.pynosuchfile", ["application/octet
tests/responses/test_fileresponse.py:237:16    - Unknown word (mkfifo)       -- os.mkfifo(pipe_file)
tests/responses/test_fileresponse.py:238:53    - Unknown word (RDONLY)       -- open(pipe_file, os.O_RDONLY | os.O_NONBLOCK)
tests/responses/test_fileresponse.py:238:67    - Unknown word (NONBLOCK)     -- os.O_RDONLY | os.O_NONBLOCK)
tests/responses/test_fileresponse.py:272:49    - Unknown word (opendocument) -- application/vnd.oasis.opendocument.text",
tests/responses/test_fileresponse.py:276:36    - Unknown word (opendocument) -- application/vnd.oasis.opendocument.text",
tests/responses/tests.py:164:19    - Unknown word (textiowrapper) -- def test_wrap_textiowrapper(self):
tests/responses/tests.py:32:38     - Unknown word (qwer)       -- writelines(["asdf\n", "qwer\n"])
tests/responses/tests.py:94:34     - Unknown word (J'attendrai) -- HttpResponse(status="J'attendrai")
tests/runtests.py:320:25    - Unknown word (DJANGOS)    -- os.environ["RUNNING_DJANGOS_TEST_SUITE"] = "true
tests/runtests.py:328:40    - Unknown word (finalizer)  -- multiprocessing.util finalizer that tries to remove
tests/runtests.py:332:39    - Unknown word (finalizer)  -- multiprocessing.util import _finalizer_registry
tests/runtests.py:334:6     - Unknown word (finalizer)  -- _finalizer_registry.pop((-100,
tests/runtests.py:335:29    - Unknown word (DJANGOS)    -- os.environ["RUNNING_DJANGOS_TEST_SUITE"]
tests/runtests.py:363:5     - Unknown word (keepdb)     -- keepdb,
tests/runtests.py:412:16    - Unknown word (keepdb)     -- keepdb=keepdb,
tests/runtests.py:412:9     - Unknown word (keepdb)     -- keepdb=keepdb,
tests/runtests.py:563:12    - Unknown word (keepdb)     -- "--keepdb",
tests/runtests.py:621:24    - Unknown word (gethostname) -- default=socket.gethostname(),
tests/runtests.py:77:69     - Unknown word (coveragerc) -- join(RUNTESTS_DIR, ".coveragerc")
tests/runtests.py:791:25    - Unknown word (keepdb)      -- options.keepdb,
tests/schema/fields.py:106:17    - Unknown word (MEDIUMBLOB) -- return "MEDIUMBLOB"
tests/schema/models.py:147:21    - Unknown word (INTEGERPK)  -- db_table = "INTEGERPK" # uppercase to ensure
tests/schema/test_logging.py:12:51     - Unknown word (clientside) -- features.schema_editor_uses_clientside_param_binding:
tests/schema/tests.py:1545:31   - Unknown word (charmodel)  -- self.assertIn("schema_charmodel_field_8b338dea_like
tests/schema/tests.py:1548:51   - Unknown word (charmodel)  -- constraint_opclasses("schema_charmodel_field_8b338dea_like
tests/schema/tests.py:1622:31   - Unknown word (charmodel)  -- self.assertIn("schema_charmodel_field_8b338dea_like
tests/schema/tests.py:1625:51   - Unknown word (charmodel)  -- constraint_opclasses("schema_charmodel_field_8b338dea_like
tests/schema/tests.py:1630:31   - Unknown word (relationmodel) -- self.assertIn("schema_relationmodel_field_id_395fbb08_like
tests/schema/tests.py:1634:25   - Unknown word (relationmodel) -- "schema_relationmodel_field_id_395fbb08_like
tests/schema/tests.py:2054:28   - Unknown word (sqls)          -- sequence_reset_sqls = connection.ops.sequence
tests/schema/tests.py:2057:31   - Unknown word (sqls)          -- if sequence_reset_sqls:
tests/schema/tests.py:2058:47   - Unknown word (sqls)          -- execute(sequence_reset_sqls[0])
tests/schema/tests.py:2073:28   - Unknown word (sqls)          -- sequence_reset_sqls = connection.ops.sequence
tests/schema/tests.py:2076:31   - Unknown word (sqls)          -- if sequence_reset_sqls:
tests/schema/tests.py:2190:31   - Unknown word (smallserial)   -- f'("{column}" smallserial NOT NULL PRIMARY KEY
tests/schema/tests.py:2202:63   - Unknown word (sequencename)  -- FROM pg_sequences WHERE sequencename = %s",
tests/schema/tests.py:2217:63   - Unknown word (sequencename)  -- FROM pg_sequences WHERE sequencename = %s",
tests/schema/tests.py:2256:29   - Unknown word (INTEGERPK)     -- db_table = "INTEGERPK"
tests/schema/tests.py:2275:29   - Unknown word (INTEGERPK)     -- db_table = "INTEGERPK"
tests/schema/tests.py:241:54    - Unknown word (indclass)   -- i on oc.oid = ANY(i.indclass)
tests/schema/tests.py:2451:29   - Unknown word (looooooong)    -- field_with_very_looooooong_name = PositiveIntegerField
tests/schema/tests.py:2460:30   - Unknown word (looooooong)    -- "field_with_very_looooooong_name"
tests/schema/tests.py:2504:22   - Unknown word (tagm)          -- columns["tagm2mtest_id"][0],
tests/schema/tests.py:2649:22   - Unknown word (tagm)          -- columns["tagm2mtest_id"][0],
tests/schema/tests.py:2738:15   - Unknown word (repointing)    -- Tests repointing M2M fields
tests/schema/tests.py:2762:18   - Unknown word (tagm)          -- "tagm2mtest_id",
tests/schema/tests.py:2763:25   - Unknown word (tagm)          -- "schema_tagm2mtest",
tests/schema/tests.py:2783:50   - Unknown word (uniquetest)    -- remote_field.through, "uniquetest_id", "schema_uniquetest
tests/schema/tests.py:2783:74   - Unknown word (uniquetest)    -- uniquetest_id", "schema_uniquetest"
tests/schema/tests.py:365:48    - Unknown word (repointing) -- out of FK order, then repointing, works"
tests/schema/tests.py:3746:37   - Unknown word (Celine)        -- objects.create(name="Celine", height=None, weight
tests/schema/tests.py:3877:30   - Unknown word (doesnt)        -- test_remove_db_index_doesnt_remove_custom_indexes
tests/schema/tests.py:4748:34   - Unknown word (doesnt)        -- alter_field_default_doesnt_perform_queries(self
tests/schema/tests.py:5284:27   - Unknown word (dtob)          -- self.assertNotIn("dtob_auto_now", columns)
tests/schema/tests.py:5285:27   - Unknown word (dtob)          -- self.assertNotIn("dtob_auto_now_add", columns
tests/schema/tests.py:5311:9    - Unknown word (dtob)          -- dtob_auto_now = DateTimeField
tests/schema/tests.py:5312:49   - Unknown word (dtob)          -- attributes_from_name("dtob_auto_now")
tests/schema/tests.py:5312:9    - Unknown word (dtob)          -- dtob_auto_now.set_attributes
tests/schema/tests.py:737:38    - Unknown word (TINYINT)    -- BooleanField are stored as TINYINT(1) on MySQL.
tests/schema/tests.py:822:30    - Unknown word (mediumblob) -- test_add_binaryfield_mediumblob(self):
tests/select_for_update/tests.py:157:44    - Unknown word (eucountry)  -- ['select_for_update_eucountry"."country_ptr_id']
tests/select_for_update/tests.py:159:44    - Unknown word (eucountry)  -- ["select_for_update_eucountry"]
tests/select_for_update/tests.py:176:36    - Unknown word (eucountry)  -- 'select_for_update_eucountry"."country_ptr_id',
tests/select_for_update/tests.py:180:44    - Unknown word (eucountry)  -- ["select_for_update_eucountry", "select_for_update
tests/select_for_update/tests.py:194:36    - Unknown word (eucity)     -- 'select_for_update_eucity"."id',
tests/select_for_update/tests.py:195:36    - Unknown word (eucountry)  -- 'select_for_update_eucountry"."country_ptr_id',
tests/select_for_update/tests.py:198:44    - Unknown word (eucity)     -- ["select_for_update_eucity", "select_for_update
tests/select_for_update/tests.py:215:36    - Unknown word (eucity)     -- 'select_for_update_eucity"."id',
tests/select_for_update/tests.py:219:44    - Unknown word (eucity)     -- ["select_for_update_eucity", "select_for_update
tests/select_for_update/tests.py:373:14    - Unknown word (unsuported) -- def test_unsuported_no_key_raises_error
tests/select_for_update/tests.py:43:48     - Unknown word (Liberchies) -- objects.create(name="Liberchies", country=self.country
tests/select_for_update/tests.py:44:48     - Unknown word (Samois)     -- objects.create(name="Samois-sur-Seine", country
tests/select_for_update/tests.py:517:45    - Unknown word (Grappeli)   -- objects.create(name="Grappeli", born=self.city1, died
tests/select_related/models.py:31:7      - Unknown word (Klass)      -- class Klass(models.Model):
tests/select_related/models.py:38:31     - Unknown word (Klass)      -- = models.ForeignKey(Klass, models.CASCADE)
tests/select_related/models.py:38:5      - Unknown word (klass)      -- klass = models.ForeignKey
tests/select_related/tests.py:102:22    - Unknown word (Amanitacae)         -- "Amanitacae",
tests/select_related/tests.py:103:22    - Unknown word (Drosophilidae)      -- "Drosophilidae",
tests/select_related/tests.py:104:22    - Unknown word (Fabaceae)           -- "Fabaceae",
tests/select_related/tests.py:119:35    - Unknown word (Agaricales)         -- sorted(orders), ["Agaricales", "Diptera", "Fabales
tests/select_related/tests.py:119:60    - Unknown word (Fabales)            -- Agaricales", "Diptera", "Fabales", "Primates"]
tests/select_related/tests.py:11:5      - Unknown word (Klass)      -- Klass,
tests/select_related/tests.py:143:19    - Unknown word (Amanitacae)         -- ["Amanitacae", "Drosophilidae",
tests/select_related/tests.py:143:33    - Unknown word (Drosophilidae)      -- ["Amanitacae", "Drosophilidae", "Fabaceae", "Hominidae
tests/select_related/tests.py:143:50    - Unknown word (Fabaceae)           -- , "Drosophilidae", "Fabaceae", "Hominidae"],
tests/select_related/tests.py:156:40    - Unknown word (Agaricales)         -- assertEqual(orders, ["Agaricales"])
tests/select_related/tests.py:188:66    - Unknown word (melanogaster)       -- genus").filter(name="melanogaster").first()
tests/select_related/tests.py:195:71    - Unknown word (melanogaster)       -- species_set.first().name, "melanogaster")
tests/select_related/tests.py:22:26     - Unknown word (stringtree) -- def create_tree(cls, stringtree):
tests/select_related/tests.py:26:17     - Unknown word (stringtree) -- names = stringtree.split()
tests/select_related/tests.py:27:44     - Unknown word (Klass)      -- Domain, Kingdom, Phylum, Klass, Order, Family, Genus
tests/select_related/tests.py:44:14     - Unknown word (Eukaryota)  -- "Eukaryota Animalia Anthropoda
tests/select_related/tests.py:44:24     - Unknown word (Animalia)   -- "Eukaryota Animalia Anthropoda Insecta Diptera
tests/select_related/tests.py:44:33     - Unknown word (Anthropoda) -- "Eukaryota Animalia Anthropoda Insecta Diptera Drosophilidae
tests/select_related/tests.py:44:44     - Unknown word (Insecta)    -- Animalia Anthropoda Insecta Diptera Drosophilidae
tests/select_related/tests.py:44:60     - Unknown word (Drosophilidae) -- Anthropoda Insecta Diptera Drosophilidae Drosophila "
tests/select_related/tests.py:45:14     - Unknown word (melanogaster)  -- "melanogaster"
tests/select_related/tests.py:48:14     - Unknown word (Eukaryota)     -- "Eukaryota Animalia Chordata Mammalia
tests/select_related/tests.py:48:24     - Unknown word (Animalia)      -- "Eukaryota Animalia Chordata Mammalia Primates
tests/select_related/tests.py:48:33     - Unknown word (Chordata)      -- "Eukaryota Animalia Chordata Mammalia Primates Hominidae
tests/select_related/tests.py:51:14     - Unknown word (Eukaryota)     -- "Eukaryota Plantae Magnoliophyta
tests/select_related/tests.py:51:24     - Unknown word (Plantae)       -- "Eukaryota Plantae Magnoliophyta Magnoliopsida
tests/select_related/tests.py:51:32     - Unknown word (Magnoliophyta) -- "Eukaryota Plantae Magnoliophyta Magnoliopsida Fabales
tests/select_related/tests.py:51:46     - Unknown word (Magnoliopsida) -- Plantae Magnoliophyta Magnoliopsida Fabales Fabaceae Pisum
tests/select_related/tests.py:51:60     - Unknown word (Fabales)       -- Magnoliophyta Magnoliopsida Fabales Fabaceae Pisum "
tests/select_related/tests.py:51:68     - Unknown word (Fabaceae)      -- Magnoliopsida Fabales Fabaceae Pisum "
tests/select_related/tests.py:51:77     - Unknown word (Pisum)         -- agnoliopsida Fabales Fabaceae Pisum "
tests/select_related/tests.py:52:14     - Unknown word (sativum)       -- "sativum"
tests/select_related/tests.py:55:14     - Unknown word (Eukaryota)     -- "Eukaryota Fungi Basidiomycota
tests/select_related/tests.py:55:30     - Unknown word (Basidiomycota) -- "Eukaryota Fungi Basidiomycota Homobasidiomycatae Agaricales
tests/select_related/tests.py:55:44     - Unknown word (Homobasidiomycatae) -- Fungi Basidiomycota Homobasidiomycatae Agaricales Amanitacae
tests/select_related/tests.py:55:63     - Unknown word (Agaricales)         -- idiomycota Homobasidiomycatae Agaricales Amanitacae "
tests/select_related/tests.py:55:74     - Unknown word (Amanitacae)         -- Homobasidiomycatae Agaricales Amanitacae "
tests/select_related/tests.py:56:22     - Unknown word (muscaria)           -- "Amanita muscaria"
tests/select_related/tests.py:64:45     - Unknown word (melanogaster)       -- Species.objects.get(name="melanogaster")
tests/select_related/tests.py:65:45     - Unknown word (klass)              -- fly.genus.family.order.klass.phylum.kingdom.domain
tests/select_related/tests.py:66:44     - Unknown word (Eukaryota)          -- assertEqual(domain.name, "Eukaryota")
tests/select_related/tests.py:75:40     - Unknown word (klass)              -- genus__family__order__klass__phylum__kingdom__domain
tests/select_related/tests.py:77:48     - Unknown word (klass)              -- person.genus.family.order.klass.phylum.kingdom.domain
tests/select_related/tests.py:87:22     - Unknown word (Amanitacae)         -- "Amanitacae",
tests/select_related/tests.py:88:22     - Unknown word (Drosophilidae)      -- "Drosophilidae",
tests/select_related/tests.py:89:22     - Unknown word (Fabaceae)           -- "Fabaceae",
tests/select_related_onetoone/tests.py:103:61    - Unknown word (advanceduserstat) -- select_related("user", "advanceduserstat").get(
tests/select_related_onetoone/tests.py:106:35    - Unknown word (advanceduserstat) -- self.assertEqual(stat.advanceduserstat.posts, 200)
tests/select_related_onetoone/tests.py:109:35    - Unknown word (advanceduserstat) -- self.assertEqual(stat.advanceduserstat.user.username, "bob
tests/select_related_onetoone/tests.py:113:50    - Unknown word (Plushie)          -- create(name="Django Plushie", image=im)
tests/select_related_onetoone/tests.py:114:58    - Unknown word (Plushie)          -- name="Talking Django Plushie")
tests/select_related_onetoone/tests.py:121:52    - Unknown word (Plushie)          -- in result], ["Django Plushie", "Talking Django Plushie
tests/select_related_onetoone/tests.py:121:78    - Unknown word (Plushie)          -- Plushie", "Talking Django Plushie"]
tests/select_related_onetoone/tests.py:162:14    - Unknown word (onetoone)         -- def test_onetoone_with_subclass(self)
tests/select_related_onetoone/tests.py:167:14    - Unknown word (onetoone)         -- def test_onetoone_with_two_subclasses
tests/select_related_onetoone/tests.py:188:14    - Unknown word (multiinheritance) -- def test_multiinheritance_two_subclasses(self
tests/select_related_onetoone/tests.py:268:5     - Unknown word (Rverse)           -- Rverse related fields should
tests/select_related_onetoone/tests.py:34:59     - Unknown word (moar)       -- objects.create(results="moar results")
tests/select_related_onetoone/tests.py:35:9      - Unknown word (advstat)    -- advstat = AdvancedUserStat.objects
tests/select_related_onetoone/tests.py:38:47     - Unknown word (advstat)    -- objects.create(base_stats=advstat, comments=250)
tests/select_related_regress/tests.py:161:24    - Unknown word (Buswell)    -- name="Troy Buswell", state=wa, status=active
tests/select_related_regress/tests.py:166:29    - Unknown word (Buswell)    -- .get(name="Troy Buswell")
tests/select_related_regress/tests.py:169:43    - Unknown word (Buswell)    -- assertEqual(troy.name, "Troy Buswell")
tests/select_related_regress/tests.py:177:29    - Unknown word (Buswell)    -- .get(name="Troy Buswell")
tests/select_related_regress/tests.py:180:43    - Unknown word (Buswell)    -- assertEqual(troy.name, "Troy Buswell")
tests/serializers/test_data.py:101:19    - Unknown word (klass)      -- def fk_create(pk, klass, data):
tests/serializers/test_data.py:85:21     - Unknown word (klass)      -- def data_create(pk, klass, data):
tests/serializers/test_data.py:86:16     - Unknown word (klass)      -- instance = klass(id=pk)
tests/serializers/test_data.py:92:24     - Unknown word (klass)      -- def generic_create(pk, klass, data):
tests/serializers/test_data.py:93:16     - Unknown word (klass)      -- instance = klass(id=pk)
tests/serializers/test_deserialization.py:31:9      - Unknown word (deserial)   -- deserial_obj = DeserializedObject
tests/serializers/test_deserialization.py:33:18     - Unknown word (deserial)   -- repr(deserial_obj), "<DeserializedObject
tests/serializers/test_json.py:106:20    - Unknown word (badpk)      -- "pk": "badpk",
tests/serializers/test_json.py:115:59    - Unknown word (badpk)      -- serializers.player:pk=badpk)"
tests/serializers/test_json.py:129:26    - Unknown word (invalidint) -- "rank": "invalidint",
tests/serializers/test_json.py:133:64    - Unknown word (invalidint) -- 1) field_value was 'invalidint'"
tests/serializers/test_jsonl.py:109:48    - Unknown word (invalidint) -- name": "Bob","rank": "invalidint","team": "Team"}}'
tests/serializers/test_jsonl.py:111:64    - Unknown word (invalidint) -- 1) field_value was 'invalidint'"
tests/serializers/test_jsonl.py:94:22     - Unknown word (badpk)      -- '{"pk": "badpk","model": "serializers
tests/serializers/test_jsonl.py:98:59     - Unknown word (badpk)      -- serializers.player:pk=badpk)"
tests/serializers/test_natural.py:24:72     - Unknown word (Anghor)     -- , data="Natural Key Anghor"),
tests/serializers/tests.py:244:25    - Unknown word (יוניקוד)    -- unicode_name = "יוניקוד"
tests/serializers/tests.py:310:9     - Unknown word (deserial)   -- deserial_objs = list(serializers
tests/serializers/tests.py:311:26    - Unknown word (deserial)   -- self.assertEqual(deserial_objs[0].object.score
tests/serializers/tests.py:317:9     - Unknown word (deserial)   -- deserial_objs = list(serializers
tests/serializers/tests.py:318:31    - Unknown word (deserial)   -- self.assertIsInstance(deserial_objs[0].object, Author
tests/serializers/tests.py:322:21    - Unknown word (Spartak)    -- team_str = "Spartak Moskva"
tests/serializers/tests.py:324:24    - Unknown word (Soslan)     -- player.name = "Soslan Djanaev"
tests/serializers/tests.py:324:31    - Unknown word (Djanaev)    -- player.name = "Soslan Djanaev"
tests/serializers/tests.py:333:9     - Unknown word (deserial)   -- deserial_objs = list(serializers
tests/servers/test_basehttp.py:123:17    - Unknown word (Unclosable) -- wfile = UnclosableBytesIO()
tests/servers/test_basehttp.py:149:17    - Unknown word (Unclosable) -- wfile = UnclosableBytesIO()
tests/servers/test_basehttp.py:178:17    - Unknown word (Unclosable) -- wfile = UnclosableBytesIO()
tests/servers/test_basehttp.py:19:7      - Unknown word (Unclosable) -- class UnclosableBytesIO(BytesIO):
tests/servers/test_basehttp.py:50:43     - Unknown word (levelname)  -- cm.records[0].levelname, wrong_level.upper(
tests/servers/test_basehttp.py:90:17     - Unknown word (Unclosable) -- wfile = UnclosableBytesIO()
tests/servers/tests.py:219:49    - Unknown word (Iamastream) -- ssertEqual(response.read(), b"Iamastream")
tests/servers/tests.py:228:49    - Unknown word (Iamastream) -- ssertEqual(response.read(), b"Iamastream")
tests/servers/tests.py:313:66    - Unknown word (тест)       -- % urlencode({"q": "тест"})) as f:
tests/servers/tests.py:374:33    - Unknown word (EADDRINUSE) -- if e.errno == errno.EADDRINUSE:
tests/sessions_tests/tests.py:1005:71   - Unknown word (acache)         -- get(await self.session.acache_key()))
tests/sessions_tests/tests.py:1165:49   - Unknown word (doesnt)         -- without_session_cookie_doesnt_set_cookie(self):
tests/sessions_tests/tests.py:1343:20   - Unknown word (aload)          -- async def test_aload(self):
tests/sessions_tests/tests.py:1346:32   - Unknown word (aload)          -- await self.session.aload()
tests/sessions_tests/tests.py:1365:20   - Unknown word (atest)          -- async def test_atest_cookie(self):
tests/sessions_tests/tests.py:1366:42   - Unknown word (ahas)           -- assertIs(await self.session.ahas_key(self.session.TEST
tests/sessions_tests/tests.py:1368:42   - Unknown word (atest)          -- assertIs(await self.session.atest_cookie_worked(), True
tests/sessions_tests/tests.py:1370:42   - Unknown word (ahas)           -- assertIs(await self.session.ahas_key(self.session.TEST
tests/sessions_tests/tests.py:143:45    - Unknown word (asetdefault) -- ssertEqual(await self.session.asetdefault("foo", "bar"), "bar
tests/sessions_tests/tests.py:144:45    - Unknown word (asetdefault) -- ssertEqual(await self.session.asetdefault("foo", "baz"), "bar
tests/sessions_tests/tests.py:172:42    - Unknown word (ahas)        -- assertIs(await self.session.ahas_key("some key"), True
tests/sessions_tests/tests.py:187:50    - Unknown word (avalues)     -- list(await self.session.avalues()), [])
tests/sessions_tests/tests.py:192:50    - Unknown word (avalues)     -- list(await self.session.avalues()), [1])
tests/sessions_tests/tests.py:208:50    - Unknown word (akeys)       -- list(await self.session.akeys()), ["x"])
tests/sessions_tests/tests.py:224:50    - Unknown word (aitems)      -- list(await self.session.aitems()), [("x", 1)])
tests/sessions_tests/tests.py:271:28    - Unknown word (aflush)      -- await self.session.aflush()
tests/sessions_tests/tests.py:293:45    - Unknown word (aitems)      -- list(await self.session.aitems())
tests/sessions_tests/tests.py:294:28    - Unknown word (acycle)      -- await self.session.acycle_key()
tests/sessions_tests/tests.py:297:50    - Unknown word (aitems)      -- list(await self.session.aitems()), prev_data)
tests/sessions_tests/tests.py:312:40    - Unknown word (aitems)      -- await self.session.aitems()
tests/sessions_tests/tests.py:315:28    - Unknown word (acycle)      -- await self.session.acycle_key()
tests/sessions_tests/tests.py:316:50    - Unknown word (aitems)      -- CountEqual(await self.session.aitems(), prev_data)
tests/sessions_tests/tests.py:318:19    - Unknown word (doesnt)      -- def test_save_doesnt_clear_data(self):
tests/sessions_tests/tests.py:323:25    - Unknown word (doesnt)      -- async def test_save_doesnt_clear_data_async(self
tests/sessions_tests/tests.py:357:12    - Unknown word (Falsey)      -- """Falsey values (Such as an empty
tests/sessions_tests/tests.py:546:32    - Unknown word (flaskdj)     -- base64.b64encode(b"flaskdj:alkdjf").decode("ascii
tests/sessions_tests/tests.py:546:40    - Unknown word (alkdjf)      -- b64encode(b"flaskdj:alkdjf").decode("ascii"),
tests/sessions_tests/tests.py:54:26     - Unknown word (buildbots)  -- # of runs (think buildbots)
tests/sessions_tests/tests.py:590:45    - Unknown word (ahas)        -- assertIs(await new_session.ahas_key("foo"), False)
tests/sessions_tests/tests.py:601:33    - Unknown word (someunknownkey) -- session = self.backend("someunknownkey")
tests/sessions_tests/tests.py:607:51    - Unknown word (someunknownkey) -- session.session_key, "someunknownkey")
tests/sessions_tests/tests.py:610:33    - Unknown word (someunknownkey) -- session = self.backend("someunknownkey")
tests/sessions_tests/tests.py:611:23    - Unknown word (aload)          -- await session.aload()
tests/sessions_tests/tests.py:616:51    - Unknown word (someunknownkey) -- session.session_key, "someunknownkey")
tests/sessions_tests/tests.py:660:35    - Unknown word (aload)          -- assertEqual(await s1.aload(), {})
tests/sessions_tests/tests.py:693:14    - Unknown word (sessionmanager) -- def test_sessionmanager_save(self):
tests/sessions_tests/tests.py:904:26    - Unknown word (forwardslash)   -- def test_invalid_key_forwardslash(self):
tests/settings_tests/tests.py:182:23    - Unknown word (doesnt)     -- def test_override_doesnt_leak(self):
tests/settings_tests/tests.py:324:14    - Unknown word (nonupper)   -- def test_nonupper_settings_prohibited
tests/settings_tests/tests.py:329:14    - Unknown word (nonupper)   -- def test_nonupper_settings_ignored_in
tests/settings_tests/tests.py:374:47    - Unknown word (wrongvalue) -- FORWARDED_PROTO"] = "wrongvalue"
tests/settings_tests/tests.py:400:53    - Unknown word (wrongvalue) -- FORWARDED_PROTO"] = "http ,wrongvalue,http,http"
tests/settings_tests/tests.py:441:26    - Unknown word (lazysettings) -- def test_unevaluated_lazysettings_repr(self):
tests/settings_tests/tests.py:446:24    - Unknown word (lazysettings) -- def test_evaluated_lazysettings_repr(self):
tests/settings_tests/tests.py:454:14    - Unknown word (usersettingsholder) -- def test_usersettingsholder_repr(self):
tests/settings_tests/tests.py:621:43    - Unknown word (somesubpath)        -- for script_name in ["/somesubpath", "/somesubpath/",
tests/settings_tests/tests.py:621:59    - Unknown word (somesubpath)        -- in ["/somesubpath", "/somesubpath/", "/", "", None]:
tests/settings_tests/tests.py:632:16    - Unknown word (somesubpath)        -- ("/somesubpath", "path/", "/somesubpath
tests/settings_tests/tests.py:632:41    - Unknown word (somesubpath)        -- somesubpath", "path/", "/somesubpath/path/"),
tests/settings_tests/tests.py:633:16    - Unknown word (somesubpath)        -- ("/somesubpath/", "path/", "/somesubpath
tests/settings_tests/tests.py:638:24    - Unknown word (myhost)             -- "htp://myhost.com/path/",
tests/settings_tests/tests.py:639:37    - Unknown word (myhost)             -- "/somesubpath/htp://myhost.com/path/",
tests/shell/tests.py:92:14     - Unknown word (bpython)    -- def test_bpython(self):
tests/shell/tests.py:94:14     - Unknown word (bpython)    -- mock_bpython = mock.Mock(embed=mock
tests/shell/tests.py:96:45     - Unknown word (bpython)    -- dict(sys.modules, {"bpython": mock_bpython}):
tests/shell/tests.py:96:60     - Unknown word (bpython)    -- modules, {"bpython": mock_bpython}):
tests/shell/tests.py:97:17     - Unknown word (bpython)    -- cmd.bpython({})
tests/shortcuts/tests.py:23:75     - Unknown word (rendertest) -- Type"], "application/x-rendertest")
tests/shortcuts/views.py:37:37     - Unknown word (rendertest) -- type="application/x-rendertest",
tests/signals/tests.py:205:42    - Unknown word (Rayuela)               -- objects.create(name="Rayuela")
tests/signals/tests.py:243:42    - Unknown word (Rayuela)               -- objects.create(name="Rayuela")
tests/signals/tests.py:285:63    - Unknown word (Passat)                -- Volkswagen", model="Passat")
tests/signals/tests.py:3:26      - Unknown word (markcoroutinefunction) -- asgiref.sync import markcoroutinefunction
tests/signals/tests.py:550:9     - Unknown word (markcoroutinefunction) -- markcoroutinefunction(self)
tests/signals/tests.py:558:20    - Unknown word (asend)                 -- async def test_asend(self):
tests/signals/tests.py:564:31    - Unknown word (asend)                 -- result = await signal.asend(self.__class__)
tests/signals/tests.py:603:20    - Unknown word (asend)                 -- async def test_asend_robust(self):
tests/signals/tests.py:618:31    - Unknown word (asend)                 -- result = await signal.asend_robust(self.__class
tests/signals/tests.py:630:20    - Unknown word (asend)                 -- async def test_asend_only_async_receivers
tests/signing/tests.py:185:18    - Unknown word (newsecret)  -- key="newsecret", fallback_keys=["othersecret
tests/signing/tests.py:185:46    - Unknown word (othersecret) -- newsecret", fallback_keys=["othersecret", "secret"]
tests/signing/tests.py:50:19     - Unknown word (VQOZ)       -- "Usf3uVQOZ9m6uPfVonKR-EBXjPe7bjMbp
tests/signing/tests.py:50:52     - Unknown word (Mfsptgkk)   -- uPfVonKR-EBXjPe7bjMbp3_Fq8MfsptgkkM1ojidN0BxYaT5HAEN1"
tests/signing/tests.py:50:62     - Unknown word (ojid)       -- bjMbp3_Fq8MfsptgkkM1ojidN0BxYaT5HAEN1"
tests/signing/tests.py:50:74     - Unknown word (HAEN)       -- MfsptgkkM1ojidN0BxYaT5HAEN1"
tests/signing/tests.py:51:25     - Unknown word (Vkqkn)      -- "VzO9_jVu7R-VkqknHYNvw",
tests/signing/tests.py:64:16     - Unknown word (wjmbk)      -- "q;wjmbk;wkmb",
tests/signing/tests.py:64:22     - Unknown word (wkmb)       -- "q;wjmbk;wkmb",
tests/signing/tests.py:67:18     - Unknown word (osanteuh)   -- "jkw osanteuh ,rcuh nthu aou oauh
tests/signing/tests.py:67:28     - Unknown word (rcuh)       -- "jkw osanteuh ,rcuh nthu aou oauh ,ud du
tests/signing/tests.py:67:33     - Unknown word (nthu)       -- "jkw osanteuh ,rcuh nthu aou oauh ,ud du",
tests/signing/tests.py:67:42     - Unknown word (oauh)       -- osanteuh ,rcuh nthu aou oauh ,ud du",
tests/sitemaps_tests/test_http.py:143:16    - Unknown word (customised) -- <!-- This is a customised template -->
tests/sitemaps_tests/test_http.py:243:17    - Unknown word (datestamp)  -- lastmod datestamp shows timezones if Sitemap
tests/sitemaps_tests/test_http.py:323:70    - Unknown word (noodp)      -- Robots-Tag"], "noindex, noodp, noarchive")
tests/sitemaps_tests/test_http.py:326:70    - Unknown word (noodp)      -- Robots-Tag"], "noindex, noodp, noarchive")
tests/sitemaps_tests/test_http.py:515:23    - Unknown word (sitemod)    -- def test_callable_sitemod_partial(self):
tests/sitemaps_tests/test_http.py:541:23    - Unknown word (sitemod)    -- def test_callable_sitemod_full(self):
tests/sitemaps_tests/test_http.py:572:23    - Unknown word (sitemod)    -- def test_callable_sitemod_no_items(self):
tests/sitemaps_tests/test_http.py:71:16     - Unknown word (customised) -- <!-- This is a customised template -->
tests/sitemaps_tests/urls/http.py:163:5     - Unknown word (testmodelview) -- def testmodelview(request, id):
tests/sitemaps_tests/urls/http.py:479:38    - Unknown word (testmodelview) -- testmodel/<int:id>/", testmodelview, name="i18n_testmodel
tests/sphinx/test_github_links.py:171:50    - Unknown word (existant)   -- bar.baz.hopefully_non_existant_module",
tests/staticfiles_tests/cases.py:34:45     - Unknown word (asvar)      -- snippet(self, path, asvar=False):
tests/staticfiles_tests/cases.py:35:12     - Unknown word (asvar)      -- if asvar:
tests/staticfiles_tests/cases.py:42:49     - Unknown word (asvar)      -- self, path, result, asvar=False, **kwargs):
tests/staticfiles_tests/cases.py:43:55     - Unknown word (asvar)      -- template_snippet(path, asvar)
tests/staticfiles_tests/cases.py:46:53     - Unknown word (asvar)      -- exc, path, result, asvar=False, **kwargs):
tests/staticfiles_tests/test_finders.py:154:37    - Unknown word (currsize)   -- assertEqual(cache_info.currsize, 1)
tests/staticfiles_tests/test_handlers.py:15:11     - Unknown word (ASGI)       -- class TestASGIStaticFilesHandler(StaticFiles
tests/staticfiles_tests/test_handlers.py:1:49      - Unknown word (ASGI)       -- staticfiles.handlers import ASGIStaticFilesHandler
tests/staticfiles_tests/test_handlers.py:20:19     - Unknown word (ASGI)       -- handler = ASGIStaticFilesHandler(ASGIHandler
tests/staticfiles_tests/test_handlers.py:2:27      - Unknown word (asgi)       -- django.core.handlers.asgi import ASGIHandler
tests/staticfiles_tests/test_handlers.py:2:39      - Unknown word (ASGI)       -- handlers.asgi import ASGIHandler
tests/staticfiles_tests/test_handlers.py:9:8       - Unknown word (ASGI)       -- """ASGI application that returns
tests/staticfiles_tests/test_management.py:186:14    - Unknown word (collectstatis) -- def test_collectstatis_check(self):
tests/staticfiles_tests/test_storage.py:107:58    - Unknown word (iefix)      -- font.b9b105392eb8.eot?#iefix", content)
tests/staticfiles_tests/test_storage.py:108:67    - Unknown word (Zbse)       -- e42714.svg#webfontIyfZbseF", content)
tests/staticfiles_tests/test_storage.py:267:45    - Unknown word (GURL)       -- assertIn(b"/*# sOuRcEMaPpInGURL=source_map.css.map
tests/staticfiles_tests/test_storage.py:317:45    - Unknown word (GURL)       -- assertIn(b"//# sOuRcEMaPpInGURL=source_map.js.map",
tests/staticfiles_tests/test_storage.py:352:63    - Unknown word (nonutf)     -- TEST_ROOT, "project", "nonutf8")],
tests/staticfiles_tests/test_storage.py:355:30    - Unknown word (nonutf)     -- test_post_processing_nonutf8(self):
tests/staticfiles_tests/test_storage.py:360:44    - Unknown word (nonutf)     -- assertEqual("Post-processing 'nonutf8.css' failed!\n\n",
tests/staticfiles_tests/test_storage.py:48:68     - Unknown word (asvar)      -- file.dad0999e4f8f.txt", asvar=True
tests/staticfiles_tests/test_storage.py:618:14    - Unknown word (collectstatistic) -- def test_collectstatistic_no_post_process_replaced
tests/staticfiles_tests/test_templatetags.py:12:60     - Unknown word (Fchars)     -- , "/static/special%3Fchars%26quoted.html"
tests/string_lookup/tests.py:49:24     - Unknown word (Bjorn)      -- fx = Foo(name="Bjorn", friend="François"
tests/string_lookup/tests.py:53:25     - Unknown word (textfields) -- def test_queries_on_textfields(self):
tests/swappable_models/tests.py:34:45     - Unknown word (alternatearticle) -- swappable_models", "alternatearticle"), apps_models)
tests/swappable_models/tests.py:38:45     - Unknown word (alternatearticle) -- swappable_models", "alternatearticle"), apps_models)
tests/syndication_tests/feeds.py:227:18    - Unknown word (sarticle)   -- return "%sarticle/%s/" % (item.entry.get
tests/syndication_tests/feeds.py:230:18    - Unknown word (scomments)  -- return "%scomments" % self.item_link(item
tests/syndication_tests/feeds.py:52:18     - Unknown word (scomments)  -- return "%scomments" % item.get_absolute
tests/syndication_tests/tests.py:714:50    - Unknown word (feedurl)    -- client.get("/syndication/feedurl/")
tests/syndication_tests/urls.py:35:23     - Unknown word (feedurl)    -- path("syndication/feedurl/", feeds.TestFeedUrlFeed
tests/template_backends/test_django.py:110:48    - Unknown word (reraised)   -- tag modules should be reraised with a helpful message
tests/template_tests/broken_tag.py:1:20      - Unknown word (Xtemplate)  -- from django import Xtemplate # NOQA
tests/template_tests/filter_tests/test_add.py:20:33     - Unknown word (napis)      -- "add02": '{{ i|add:"napis" }}'})
tests/template_tests/filter_tests/test_add.py:58:35     - Unknown word (stringlazy) -- assertEqual(output, "stringlazy")
tests/template_tests/filter_tests/test_add.py:66:35     - Unknown word (stringlazy) -- assertEqual(output, "stringlazy")
tests/template_tests/filter_tests/test_cut.py:40:38     - Unknown word (xamp)       -- assertEqual(output, "xy xamp;y")
tests/template_tests/filter_tests/test_cut.py:47:38     - Unknown word (xamp)       -- assertEqual(output, "xy xamp;y")
tests/template_tests/filter_tests/test_cut.py:62:41     - Unknown word (ampy)       -- assertEqual(output, "x&y x&ampy")
tests/template_tests/filter_tests/test_cut.py:69:49     - Unknown word (ampy)       -- output, "x&amp;y x&amp;ampy")
tests/template_tests/filter_tests/test_cut.py:74:77     - Unknown word (mngled)     -- a"), " string to be mngled")
tests/template_tests/filter_tests/test_cut.py:77:66     - Unknown word (stri)       -- mangled", "ng"), "a stri to be maled")
tests/template_tests/filter_tests/test_cut.py:77:77     - Unknown word (maled)      -- ng"), "a stri to be maled")
tests/template_tests/filter_tests/test_date.py:29:37     - Unknown word (janvier)    -- assertEqual(output, "1 janvier 2008")
tests/template_tests/filter_tests/test_date.py:75:14     - Unknown word (datelazy)   -- @setup({"datelazy": '{{ t|date:_("H:i
tests/template_tests/filter_tests/test_date.py:77:48     - Unknown word (datelazy)   -- engine.render_to_string("datelazy", {"t": time(0, 0)}
tests/template_tests/filter_tests/test_dictsort.py:62:27     - Unknown word (Jonny)      -- {"name": "Jonny B Goode", "age": 18
tests/template_tests/filter_tests/test_dictsort.py:70:41     - Unknown word (Jonny)      -- age", 18), ("name", "Jonny B Goode")],
tests/template_tests/filter_tests/test_dictsortreversed.py:11:27     - Unknown word (Jonny)      -- {"name": "Jonny B Goode", "age": 18
tests/template_tests/filter_tests/test_dictsortreversed.py:21:41     - Unknown word (Jonny)      -- age", 18), ("name", "Jonny B Goode")],
tests/template_tests/filter_tests/test_escapejs.py:16:34     - Unknown word (Ajavascript) -- testing\\u000D\\u000Ajavascript "
tests/template_tests/filter_tests/test_escapejs.py:28:34     - Unknown word (Ajavascript) -- testing\\u000D\\u000Ajavascript "
tests/template_tests/filter_tests/test_escapejs.py:55:20     - Unknown word (Cscript)     -- "\\u003Cscript\\u003Eand this\\u00
tests/template_tests/filter_tests/test_escapejs.py:55:33     - Unknown word (Eand)        -- "\\u003Cscript\\u003Eand this\\u003C/script\
tests/template_tests/filter_tests/test_escapejs.py:68:20     - Unknown word (Cscript)     -- "\\u003Cscript\\u003Ethis\\u003C/script
tests/template_tests/filter_tests/test_escapejs.py:68:33     - Unknown word (Ethis)       -- "\\u003Cscript\\u003Ethis\\u003C/script\\u003E
tests/template_tests/filter_tests/test_escapeseq.py:15:14     - Unknown word (escapeseq)  -- "escapeseq_basic": (
tests/template_tests/filter_tests/test_escapeseq.py:16:23     - Unknown word (escapeseq)  -- '{{ a|escapeseq|join:", " }} -- {{ b
tests/template_tests/filter_tests/test_escapeseq.py:16:54     - Unknown word (escapeseq)  -- join:", " }} -- {{ b|escapeseq|join:", " }}'
tests/template_tests/filter_tests/test_escapeseq.py:22:14     - Unknown word (escapeseq)  -- "escapeseq_basic",
tests/template_tests/filter_tests/test_escapeseq.py:7:7       - Unknown word (Escapeseq)  -- class EscapeseqTests(SimpleTestCase
tests/template_tests/filter_tests/test_escapeseq.py:9:10      - Unknown word (escapeseq)  -- The "escapeseq" filter works the same
tests/template_tests/filter_tests/test_floatformat.py:1:30      - Unknown word (localcontext) -- decimal import Decimal, localcontext
tests/template_tests/filter_tests/test_floatformat.py:200:20    - Unknown word (dunder)       -- def test_float_dunder_method(self):
tests/template_tests/filter_tests/test_floatformat.py:214:14    - Unknown word (localcontext) -- with localcontext() as ctx:
tests/template_tests/filter_tests/test_floatformat.py:215:17    - Unknown word (prec)         -- ctx.prec = 2
tests/template_tests/filter_tests/test_floatformat.py:90:15     - Unknown word (Cómo)         -- "¿Cómo esta usted?",
tests/template_tests/filter_tests/test_floatformat.py:90:20     - Unknown word (esta)         -- "¿Cómo esta usted?",
tests/template_tests/filter_tests/test_floatformat.py:90:25     - Unknown word (usted)        -- "¿Cómo esta usted?",
tests/template_tests/filter_tests/test_iriencode.py:44:50     - Unknown word (ndelag)     -- iriencode("S\xf8r-Tr\xf8ndelag"), "S%C3%B8r-Tr%C3%B
tests/template_tests/filter_tests/test_iriencode.py:44:78     - Unknown word (ndelag)     -- , "S%C3%B8r-Tr%C3%B8ndelag")
tests/template_tests/filter_tests/test_json_script.py:16:28     - Unknown word (Eescaping)  -- '\\u003Cb\\u003Eescaping\\u003C/b\\u003E"}'
tests/template_tests/filter_tests/test_linebreaks.py:57:48     - Unknown word (nbuz)       -- filter("foo\n<a>bar</a>\nbuz"),
tests/template_tests/filter_tests/test_linebreaks.py:63:48     - Unknown word (nbuz)       -- filter("foo\n<a>bar</a>\nbuz", autoescape=False)
tests/template_tests/filter_tests/test_linebreaksbr.py:51:43     - Unknown word (nbuz)       -- linebreaksbr("foo\n<a>bar</a>\nbuz"),
tests/template_tests/filter_tests/test_linebreaksbr.py:57:43     - Unknown word (nbuz)       -- linebreaksbr("foo\n<a>bar</a>\nbuz", autoescape=False)
tests/template_tests/filter_tests/test_linenumbers.py:57:42     - Unknown word (nbuz)       -- linenumbers("foo\n<a>bar</a>\nbuz"),
tests/template_tests/filter_tests/test_linenumbers.py:63:42     - Unknown word (nbuz)       -- linenumbers("foo\n<a>bar</a>\nbuz", autoescape=False)
tests/template_tests/filter_tests/test_pluralize.py:24:19     - Unknown word (cand)       -- @setup({"t": 'cand{{ value|pluralize:"y
tests/template_tests/filter_tests/test_slice.py:51:60     - Unknown word (aceg)       -- abcdefg", "0::2"), "aceg")
tests/template_tests/filter_tests/test_slugify.py:47:34     - Unknown word (phant)      -- slugify("Un \xe9l\xe9phant \xe0 l'or\xe9e du bois
tests/template_tests/filter_tests/test_slugify.py:47:58     - Unknown word (bois)       -- phant \xe0 l'or\xe9e du bois"),
tests/template_tests/filter_tests/test_slugify.py:48:28     - Unknown word (loree)      -- "un-elephant-a-loree-du-bois",
tests/template_tests/filter_tests/test_slugify.py:48:37     - Unknown word (bois)       -- elephant-a-loree-du-bois",
tests/template_tests/filter_tests/test_title.py:24:33     - Unknown word (discoth)    -- self.assertEqual(title("discoth\xe8que"), "Discoth\xe
tests/template_tests/filter_tests/test_title.py:24:52     - Unknown word (Discoth)    -- "discoth\xe8que"), "Discoth\xe8que")
tests/template_tests/filter_tests/test_truncatechars_html.py:40:40     - Unknown word (ngstr)      -- truncatechars_html("<b>\xc5ngstr\xf6m</b> was here",
tests/template_tests/filter_tests/test_truncatewords.py:43:14     - Unknown word (overtruncate) -- def test_overtruncate(self):
tests/template_tests/filter_tests/test_truncatewords_html.py:48:37     - Unknown word (ngstr)      -- truncatewords_html("\xc5ngstr\xf6m was here", 1),
tests/template_tests/filter_tests/test_truncatewords_html.py:48:68     - Unknown word (ngstr)      -- was here", 1), "\xc5ngstr\xf6m …"
tests/template_tests/filter_tests/test_truncatewords_html.py:54:30     - Unknown word (iacute)     -- "<i>Buenos d&iacute;as! &#x00bf;C&oacute
tests/template_tests/filter_tests/test_truncatewords_html.py:54:65     - Unknown word (aacute)     -- 0bf;C&oacute;mo est&aacute;?</i>", 3
tests/template_tests/filter_tests/test_truncatewords_html.py:56:24     - Unknown word (días)       -- "<i>Buenos días! ¿Cómo …</i>",
tests/template_tests/filter_tests/test_truncatewords_html.py:56:31     - Unknown word (Cómo)       -- "<i>Buenos días! ¿Cómo …</i>",
tests/template_tests/filter_tests/test_unordered_list.py:122:14    - Unknown word (ulitem)     -- def test_ulitem(self):
tests/template_tests/filter_tests/test_unordered_list.py:128:25    - Unknown word (ulitem)     -- return "ulitem-%s" % str(self.title
tests/template_tests/filter_tests/test_unordered_list.py:135:20    - Unknown word (ulitem)     -- "\t<li>ulitem-a</li>\n\t<li>ulitem
tests/template_tests/filter_tests/test_unordered_list.py:135:41    - Unknown word (ulitem)     -- ulitem-a</li>\n\t<li>ulitem-b</li>\n\t"
tests/template_tests/filter_tests/test_unordered_list.py:136:18    - Unknown word (ulitem)     -- "<li>ulitem-&lt;a&gt;c&lt;/a&gt
tests/template_tests/filter_tests/test_urlencode.py:16:49     - Unknown word (Fslash)     -- output, "/test/escape%2Fslash/")
tests/template_tests/filter_tests/test_urlize.py:124:21    - Unknown word (djangoproject) -- urlize("djangoproject.org"),
tests/template_tests/filter_tests/test_urlize.py:125:64    - Unknown word (djangoproject) -- org" rel="nofollow">djangoproject.org</a>',
tests/template_tests/filter_tests/test_urlize.py:128:21    - Unknown word (djangoproject) -- urlize("djangoproject.org/"),
tests/template_tests/filter_tests/test_urlize.py:129:65    - Unknown word (djangoproject) -- org/" rel="nofollow">djangoproject.org/</a>',
tests/template_tests/filter_tests/test_urlize.py:171:38    - Unknown word (overquote)     -- Check urlize doesn't overquote already quoted urls
tests/template_tests/filter_tests/test_urlize.py:172:27    - Unknown word (urlquoted)     -- teststring is the urlquoted version of 'http://hi
tests/template_tests/filter_tests/test_urlize.py:172:9     - Unknown word (teststring)    -- teststring is the urlquoted version
tests/template_tests/filter_tests/test_urlize.py:183:25    - Unknown word (mystore)       -- urlize("www.mystore.com/30%OffCoupons!"
tests/template_tests/filter_tests/test_urlize.py:185:18    - Unknown word (mystore)       -- "www.mystore.com/30%OffCoupons</a
tests/template_tests/filter_tests/test_urlize.py:252:14    - Unknown word (tlds)          -- def test_tlds(self):
tests/template_tests/filter_tests/test_urlize.py:269:39    - Unknown word (uppercased)    -- Check urlize accepts uppercased URL schemes
tests/template_tests/filter_tests/test_urlize.py:427:27    - Unknown word (djangoproject) -- urlize("Go to djangoproject.com! and enjoy."),
tests/template_tests/filter_tests/test_urlize.py:464:14    - Unknown word (lazystring)    -- def test_lazystring(self):
tests/template_tests/filter_tests/test_urlizetrunc.py:73:14     - Unknown word (overtruncate) -- def test_overtruncate(self):
tests/template_tests/filter_tests/test_wordcount.py:36:37     - Unknown word (oneword)    -- assertEqual(wordcount("oneword"), 1)
tests/template_tests/syntax_tests/i18n/base.py:10:18     - Unknown word (pdir)       -- os.path.join(pdir, "i18n", "other", "locale
tests/template_tests/syntax_tests/i18n/base.py:8:1       - Unknown word (pdir)       -- pdir = os.path.split(os.path
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:103:35    - Unknown word (xxxyyyxxx)  -- assertEqual(output, "xxxyyyxxx")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:119:14    - Unknown word (legacyi)    -- "legacyi18n07": "{% load i18n
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:124:14    - Unknown word (legacyi)    -- def test_legacyi18n07(self):
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:42    - Unknown word (Seite)      -- assertEqual(output, "Error: Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:48    - Unknown word (nicht)      -- output, "Error: Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:374:54    - Unknown word (gefunden)   -- "Error: Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:376:31    - Unknown word (asvar)      -- blocktranslate tag with asvar
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:381:36    - Unknown word (asvar)      -- "{% blocktranslate asvar page_not_found %}Page
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:36    - Unknown word (Seite)      -- assertEqual(output, ">Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:42    - Unknown word (nicht)      -- assertEqual(output, ">Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:389:48    - Unknown word (gefunden)   -- output, ">Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:395:59    - Unknown word (asvar)      -- page_not_found=pg_404 asvar output %}"
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:408:59    - Unknown word (asvar)      -- page_not_found=pg_404 asvar output %}"
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:43    - Unknown word (Seite)      -- assertEqual(output, ">Error: Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:49    - Unknown word (nicht)      -- output, ">Error: Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:417:55    - Unknown word (gefunden)   -- >Error: Seite nicht gefunden<")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:421:19    - Unknown word (asvar)      -- "i18n_asvar_safestring": (
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:590:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:604:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:620:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:630:49    - Unknown word (Ergebnis)   -- ssertEqual(rendered, "1 Super-Ergebnis")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:638:49    - Unknown word (Ergebnisse) -- ssertEqual(rendered, "2 Super-Ergebnisse")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:646:43    - Unknown word (anderen)    -- assertEqual(rendered, "1 anderen Super-Ergebnis")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:646:57    - Unknown word (Ergebnis)   -- rendered, "1 anderen Super-Ergebnis")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:654:43    - Unknown word (andere)     -- assertEqual(rendered, "2 andere Super-Ergebnisse")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:654:56    - Unknown word (Ergebnisse) -- rendered, "2 andere Super-Ergebnisse")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:663:44    - Unknown word (gibt)       -- assertEqual(rendered, "Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:663:51    - Unknown word (Kommentare) -- rendered, "Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:41    - Unknown word (Andere)     -- assertEqual(rendered, "Andere: Es gibt 5 Kommentare
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:52    - Unknown word (gibt)       -- rendered, "Andere: Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:670:59    - Unknown word (Kommentare) -- "Andere: Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:687:44    - Unknown word (gibt)       -- assertEqual(rendered, "Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:687:51    - Unknown word (Kommentare) -- rendered, "Es gibt 5 Kommentare")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:695:43    - Unknown word (andere)     -- assertEqual(rendered, "2 andere Super-Ergebnisse")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:695:56    - Unknown word (Ergebnisse) -- rendered, "2 andere Super-Ergebnisse")
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:722:40    - Unknown word (personne)   -- s is translated as %(personne)s in fr.po).
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:748:23    - Unknown word (Transn)     -- class TranslationBlockTransnTagTests(TranslationBlockTrans
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:777:30    - Unknown word (btrans)     -- test_multiple_locale_btrans(self):
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:785:41    - Unknown word (btrans)     -- multiple_locale_deactivate_btrans(self):
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:793:44    - Unknown word (btrans)     -- locale_direct_switch_btrans(self):
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:80:14     - Unknown word (legacyi)    -- "legacyi18n04": (
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:833:63    - Unknown word (Ergebnis)   -- percent": 42})), "Das Ergebnis war 42%"
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:837:22    - Unknown word (stellt)     -- "42% stellt 1 Objekt dar",
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:837:31    - Unknown word (Objekt)     -- "42% stellt 1 Objekt dar",
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:841:22    - Unknown word (stellt)     -- "42% stellt 4 Objekte dar",
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:841:31    - Unknown word (Objekte)    -- "42% stellt 4 Objekte dar",
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:87:14     - Unknown word (legacyi)    -- def test_legacyi18n04(self):
tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:89:48     - Unknown word (legacyi)    -- engine.render_to_string("legacyi18n04", {"anton": "Å
tests/template_tests/syntax_tests/i18n/test_filters.py:26:62     - Unknown word (maďarsky)   -- Hungarian Magyar False maďarsky")
tests/template_tests/syntax_tests/i18n/test_filters.py:31:17     - Unknown word (langcode)   -- "{{ langcode|language_name }} {{
tests/template_tests/syntax_tests/i18n/test_filters.py:31:46     - Unknown word (langcode)   -- language_name }} {{ langcode|language_name_local
tests/template_tests/syntax_tests/i18n/test_filters.py:32:17     - Unknown word (langcode)   -- "{{ langcode|language_bidi }} {{
tests/template_tests/syntax_tests/i18n/test_filters.py:32:46     - Unknown word (langcode)   -- language_bidi }} {{ langcode|language_name_translated
tests/template_tests/syntax_tests/i18n/test_filters.py:36:59     - Unknown word (langcode)   -- to_string("i18n33", {"langcode": "nl"})
tests/template_tests/syntax_tests/i18n/test_filters.py:37:41     - Unknown word (Nederlands) -- assertEqual(output, "Dutch Nederlands False Dutch")
tests/template_tests/syntax_tests/i18n/test_filters.py:41:45     - Unknown word (Nederlands) -- assertEqual(output, "Dutch Nederlands False nizozemsky")
tests/template_tests/syntax_tests/i18n/test_filters.py:41:62     - Unknown word (nizozemsky) -- Dutch Nederlands False nizozemsky")
tests/template_tests/syntax_tests/i18n/test_filters.py:59:26     - Unknown word (italiano)   -- "it: Italian/italiano/italsky bidi=False;
tests/template_tests/syntax_tests/i18n/test_filters.py:59:35     - Unknown word (italsky)    -- it: Italian/italiano/italsky bidi=False; "
tests/template_tests/syntax_tests/i18n/test_filters.py:60:34     - Unknown word (francouzsky) -- fr: French/français/francouzsky bidi=False; ",
tests/template_tests/syntax_tests/i18n/test_get_language_info.py:24:46     - Unknown word (Deutsch)    -- output, "de: German/Deutsch bidi=False")
tests/template_tests/syntax_tests/i18n/test_get_language_info.py:49:46     - Unknown word (Deutsch)    -- output, "de: German/Deutsch/německy bidi=False"
tests/template_tests/syntax_tests/i18n/test_get_language_info.py:49:54     - Unknown word (německy)    -- "de: German/Deutsch/německy bidi=False")
tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:25:34     - Unknown word (italiano)   -- output, "it: Italian/italiano bidi=False; no: Norwegian
tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:25:69     - Unknown word (norsk)      -- False; no: Norwegian/norsk bidi=False; "
tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:62:26     - Unknown word (italiano)   -- "it: Italian/italiano/italsky bidi=False;
tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:62:35     - Unknown word (italsky)    -- it: Italian/italiano/italsky bidi=False; "
tests/template_tests/syntax_tests/i18n/test_get_language_info_list.py:63:34     - Unknown word (francouzsky) -- fr: French/français/francouzsky bidi=False; ",
tests/template_tests/syntax_tests/i18n/test_translate.py:102:35    - Unknown word (SEITE)      -- assertEqual(output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:102:41    - Unknown word (NICHT)      -- assertEqual(output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:102:47    - Unknown word (GEFUNDEN)   -- output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:104:52    - Unknown word (somevar)    -- i18n %}{% translate somevar|upper %}"})
tests/template_tests/syntax_tests/i18n/test_translate.py:108:29    - Unknown word (somevar)    -- "i18n25", {"somevar": "Page not found"}
tests/template_tests/syntax_tests/i18n/test_translate.py:110:35    - Unknown word (SEITE)      -- assertEqual(output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:110:41    - Unknown word (NICHT)      -- assertEqual(output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:110:47    - Unknown word (GEFUNDEN)   -- output, "SEITE NICHT GEFUNDEN")
tests/template_tests/syntax_tests/i18n/test_translate.py:124:35    - Unknown word (Seite)      -- assertEqual(output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:124:41    - Unknown word (nicht)      -- assertEqual(output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:124:47    - Unknown word (gefunden)   -- output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:145:60    - Unknown word (badoption)  -- }{% translate "Yes" badoption %}'})
tests/template_tests/syntax_tests/i18n/test_translate.py:147:48    - Unknown word (badoption)  -- argument for '{}' tag: 'badoption'".format(tag_name)
tests/template_tests/syntax_tests/i18n/test_translate.py:224:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_translate.py:236:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_translate.py:248:41    - Unknown word (Kann)       -- assertEqual(rendered, "Kann")
tests/template_tests/syntax_tests/i18n/test_translate.py:262:48    - Unknown word (Kann)       -- assertEqual(rendered, "Value: Kann")
tests/template_tests/syntax_tests/i18n/test_translate.py:49:53     - Unknown word (xxxyyyxxx)  -- i18n %}{% translate 'xxxyyyxxx' %}"})
tests/template_tests/syntax_tests/i18n/test_translate.py:53:35     - Unknown word (xxxyyyxxx)  -- assertEqual(output, "xxxyyyxxx")
tests/template_tests/syntax_tests/i18n/test_translate.py:55:53     - Unknown word (xxxyyyxxx)  -- i18n %}{% translate "xxxyyyxxx" %}'})
tests/template_tests/syntax_tests/i18n/test_translate.py:59:35     - Unknown word (xxxyyyxxx)  -- assertEqual(output, "xxxyyyxxx")
tests/template_tests/syntax_tests/i18n/test_translate.py:66:35     - Unknown word (Seite)      -- assertEqual(output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:66:41     - Unknown word (nicht)      -- assertEqual(output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:66:47     - Unknown word (gefunden)   -- output, "Seite nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:96:35     - Unknown word (nicht)      -- assertEqual(output, "nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_translate.py:96:41     - Unknown word (gefunden)   -- assertEqual(output, "nicht gefunden")
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:101:39    - Unknown word (Passwort)   -- assertEqual(output, "foo Passwort Passwort")
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:101:48    - Unknown word (Passwort)   -- output, "foo Passwort Passwort")
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:107:35    - Unknown word (Passwort)   -- assertEqual(output, "Passwort")
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:60:30     - Unknown word (loadi)      -- test_multiple_locale_loadi18n(self):
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:66:30     - Unknown word (loadi)      -- test_multiple_locale_loadi18n_deactivate(self)
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:72:30     - Unknown word (loadi)      -- test_multiple_locale_loadi18n_direct_switch(self
tests/template_tests/syntax_tests/i18n/test_underscore_syntax.py:88:35     - Unknown word (Passwort)   -- assertEqual(output, "Passwort")
tests/template_tests/syntax_tests/test_autoescape.py:100:25    - Unknown word (filtertag)  -- def test_autoescape_filtertag01(self):
tests/template_tests/syntax_tests/test_autoescape.py:107:54    - Unknown word (filtertag)  -- to_string("autoescape-filtertag01", {"first": "<a>"
tests/template_tests/syntax_tests/test_autoescape.py:132:25    - Unknown word (stringiterations) -- @setup({"autoescape-stringiterations01": "{% for l in var
tests/template_tests/syntax_tests/test_autoescape.py:133:25    - Unknown word (stringiterations) -- def test_autoescape_stringiterations01(self):
tests/template_tests/syntax_tests/test_autoescape.py:138:25    - Unknown word (stringiterations) -- "autoescape-stringiterations01", {"var": "K&R"}
tests/template_tests/syntax_tests/test_autoescape.py:95:25     - Unknown word (filtertag)  -- "autoescape-filtertag01": (
tests/template_tests/syntax_tests/test_basic.py:50:41     - Unknown word (INVALI)     -- assertEqual(output, "asINVALIDdf")
tests/template_tests/syntax_tests/test_basic.py:90:39     - Unknown word (otherclass) -- basic-syntax10": "{{ var.otherclass.method }}"})
tests/template_tests/syntax_tests/test_basic.py:98:39     - Unknown word (blech)      -- basic-syntax11": "{{ var.blech }}"})
tests/template_tests/syntax_tests/test_cache.py:122:25    - Unknown word (freddled)   -- "Oh freddled gruntbuggly/Thy micturations
tests/template_tests/syntax_tests/test_cache.py:122:34    - Unknown word (gruntbuggly) -- "Oh freddled gruntbuggly/Thy micturations are
tests/template_tests/syntax_tests/test_cache.py:122:50    - Unknown word (micturations) -- freddled gruntbuggly/Thy micturations are to me/"
tests/template_tests/syntax_tests/test_cache.py:123:25    - Unknown word (plurdled)     -- "As plurdled gabbleblotchits/On a
tests/template_tests/syntax_tests/test_cache.py:123:34    - Unknown word (gabbleblotchits) -- "As plurdled gabbleblotchits/On a lurgid bee/"
tests/template_tests/syntax_tests/test_cache.py:123:55    - Unknown word (lurgid)          -- gabbleblotchits/On a lurgid bee/"
tests/template_tests/syntax_tests/test_cache.py:124:27    - Unknown word (mordiously)      -- "That mordiously hath bitled out/Its
tests/template_tests/syntax_tests/test_cache.py:124:43    - Unknown word (bitled)          -- That mordiously hath bitled out/Its earted jurtles
tests/template_tests/syntax_tests/test_cache.py:124:58    - Unknown word (earted)          -- hath bitled out/Its earted jurtles/"
tests/template_tests/syntax_tests/test_cache.py:124:65    - Unknown word (jurtles)         -- bitled out/Its earted jurtles/"
tests/template_tests/syntax_tests/test_cache.py:126:22    - Unknown word (gobberwarts)     -- "gobberwarts with my blurglecruncheon
tests/template_tests/syntax_tests/test_cache.py:126:42    - Unknown word (blurglecruncheon) -- gobberwarts with my blurglecruncheon/See if I don't."
tests/template_tests/syntax_tests/test_cache.py:173:9     - Unknown word (cachenode)        -- cachenode = t.nodelist[1]
tests/template_tests/syntax_tests/test_cache.py:174:26    - Unknown word (cachenode)        -- self.assertEqual(cachenode.fragment_name, "regression
tests/template_tests/syntax_tests/test_comment.py:27:44     - Unknown word (somerandomtag) -- syntax05": "foo{#  {% somerandomtag %}  #}"})
tests/template_tests/syntax_tests/test_comment.py:92:51     - Unknown word (somerandomtag) -- foo{% comment %} {% somerandomtag %} {% endcomment %}
tests/template_tests/syntax_tests/test_cycle.py:144:35    - Unknown word (abca)       -- assertEqual(output, "abca")
tests/template_tests/syntax_tests/test_cycle.py:193:35    - Unknown word (bcabcabcccaa) -- assertEqual(output, "bcabcabcccaa")
tests/template_tests/syntax_tests/test_cycle.py:199:22    - Unknown word (doesnothing)  -- "{% with doesnothing=irrelevant %}"
tests/template_tests/syntax_tests/test_cycle.py:216:35    - Unknown word (bcabcabcccaa) -- assertEqual(output, "bcabcabcccaa")
tests/template_tests/syntax_tests/test_cycle.py:46:35     - Unknown word (abca)       -- assertEqual(output, "abca")
tests/template_tests/syntax_tests/test_extends.py:28:48     - Unknown word (newblock)   -- inheritance01' %}{% block newblock %}NO DISPLAY{% endblock
tests/template_tests/syntax_tests/test_filter_syntax.py:242:9     - Unknown word (reraised)   -- reraised.
tests/template_tests/syntax_tests/test_filter_tag.py:23:49     - Unknown word (djangospam) -- filter cut:remove %}djangospam{% endfilter %}"})
tests/template_tests/syntax_tests/test_firstof.py:86:34     - Unknown word (asvar)      -- all_false_arguments_asvar(self):
tests/template_tests/syntax_tests/test_for.py:198:18    - Unknown word (loopvar)    -- A single loopvar doesn't truncate the
tests/template_tests/syntax_tests/test_if.py:622:28    - Unknown word (shortcircuited) -- If evaluations are shortcircuited where possible
tests/template_tests/syntax_tests/test_if_changed.py:107:18    - Unknown word (datalist)   -- "datalist": [
tests/template_tests/syntax_tests/test_if_changed.py:113:35    - Unknown word (accd)       -- assertEqual(output, "accd")
tests/template_tests/syntax_tests/test_if_changed.py:86:26     - Unknown word (numy)       -- "{% for y in numy %}{% ifchanged %}{{
tests/template_tests/syntax_tests/test_if_changed.py:92:67     - Unknown word (numy)       -- "numx": (2, 2, 2), "numy": (3, 3, 3)}
tests/template_tests/syntax_tests/test_if_changed.py:98:44     - Unknown word (datalist)   -- 8": "{% for data in datalist %}{% for c,d in data
tests/template_tests/syntax_tests/test_include.py:243:38    - Unknown word (baseloader) -- extends_include_missing_baseloader(self):
tests/template_tests/syntax_tests/test_include.py:254:38    - Unknown word (cachedloader) -- extends_include_missing_cachedloader(self):
tests/template_tests/syntax_tests/test_include.py:283:18    - Unknown word (tmpl)         -- "tmpl": engine.from_string
tests/template_tests/syntax_tests/test_include.py:286:15    - Unknown word (tmpl)         -- outer_tmpl = engine.from_string
tests/template_tests/syntax_tests/test_include.py:286:53    - Unknown word (tmpl)         -- from_string("{% include tmpl %}")
tests/template_tests/syntax_tests/test_include.py:287:24    - Unknown word (tmpl)         -- output = outer_tmpl.render(ctx)
tests/template_tests/syntax_tests/test_include.py:311:9     - Unknown word (tmpl)         -- tmpl = loader.get_template
tests/template_tests/syntax_tests/test_invalid_string.py:10:14     - Unknown word (invalidstr) -- def test_invalidstr01(self):
tests/template_tests/syntax_tests/test_invalid_string.py:11:48     - Unknown word (invalidstr) -- engine.render_to_string("invalidstr01")
tests/template_tests/syntax_tests/test_invalid_string.py:17:14     - Unknown word (invalidstr) -- @setup({"invalidstr02": '{{ var|default
tests/template_tests/syntax_tests/test_invalid_string.py:18:14     - Unknown word (invalidstr) -- def test_invalidstr02(self):
tests/template_tests/syntax_tests/test_invalid_string.py:9:14      - Unknown word (invalidstr) -- @setup({"invalidstr01": '{{ var|default
tests/template_tests/syntax_tests/test_regroup.py:119:50    - Unknown word (thisaintright) -- regroup data by bar thisaintright grouped %}"})
tests/template_tests/syntax_tests/test_regroup.py:124:43    - Unknown word (thisaintright) -- ": "{% regroup data thisaintright bar as grouped %}"}
tests/template_tests/syntax_tests/test_regroup.py:129:61    - Unknown word (toomanyargs)   -- data by bar as grouped toomanyargs %}"})
tests/template_tests/syntax_tests/test_resetcycle.py:87:35     - Unknown word (abaaba)     -- assertEqual(output, "abaaba")
tests/template_tests/syntax_tests/test_simple_tag.py:10:57     - Unknown word (minusone)   -- {% load custom %}{% minusone 7 %}"})
tests/template_tests/syntax_tests/test_static.py:101:60    - Unknown word (Fchars)     -- URL, "/static/special%3Fchars%26quoted.html"),
tests/template_tests/syntax_tests/test_url.py:171:46    - Unknown word (unterminatedstring) -- '{% url "view" id="unterminatedstring %}'})
tests/template_tests/syntax_tests/test_url.py:218:49    - Unknown word (unterminatedstring) -- % url named_url id="unterminatedstring %}'})
tests/template_tests/syntax_tests/test_url.py:229:18    - Unknown word (asvar)              -- @setup({"url-asvar01": '{% url "index"
tests/template_tests/syntax_tests/test_url.py:230:18    - Unknown word (asvar)              -- def test_url_asvar01(self):
tests/template_tests/syntax_tests/test_url.py:231:52    - Unknown word (asvar)              -- render_to_string("url-asvar01")
tests/template_tests/syntax_tests/test_url.py:234:18    - Unknown word (asvar)              -- @setup({"url-asvar02": '{% url "index"
tests/template_tests/syntax_tests/test_url.py:235:18    - Unknown word (asvar)              -- def test_url_asvar02(self):
tests/template_tests/syntax_tests/test_url.py:49:31     - Unknown word (метка)      -- setup({"url05": '{% url "метка_оператора" v %}'})
tests/template_tests/syntax_tests/test_url.py:49:37     - Unknown word (оператора)  -- url05": '{% url "метка_оператора" v %}'})
tests/template_tests/syntax_tests/test_url.py:54:31     - Unknown word (метка)      -- setup({"url06": '{% url "метка_оператора_2" tag=v
tests/template_tests/syntax_tests/test_url.py:54:37     - Unknown word (оператора)  -- url06": '{% url "метка_оператора_2" tag=v %}'})
tests/template_tests/syntax_tests/test_url.py:59:31     - Unknown word (метка)      -- setup({"url08": '{% url "метка_оператора" v %}'})
tests/template_tests/syntax_tests/test_url.py:59:37     - Unknown word (оператора)  -- url08": '{% url "метка_оператора" v %}'})
tests/template_tests/syntax_tests/test_url.py:64:31     - Unknown word (метка)      -- setup({"url09": '{% url "метка_оператора_2" tag=v
tests/template_tests/syntax_tests/test_url.py:64:37     - Unknown word (оператора)  -- url09": '{% url "метка_оператора_2" tag=v %}'})
tests/template_tests/syntax_tests/test_with.py:16:14     - Unknown word (legacywith) -- @setup({"legacywith01": "{% with dict.key
tests/template_tests/syntax_tests/test_with.py:17:14     - Unknown word (legacywith) -- def test_legacywith01(self):
tests/template_tests/syntax_tests/test_with.py:18:48     - Unknown word (legacywith) -- engine.render_to_string("legacywith01", {"dict": {"key"
tests/template_tests/syntax_tests/test_with.py:37:14     - Unknown word (legacywith) -- "legacywith02": "{{ key }}{% with
tests/template_tests/syntax_tests/test_with.py:42:14     - Unknown word (legacywith) -- def test_legacywith02(self):
tests/template_tests/templatetags/bad_tag.py:12:5      - Unknown word (badsimpletag) -- def badsimpletag():
tests/template_tests/templatetags/custom.py:204:44    - Unknown word (minusone)   -- lambda x: x - 1, name="minusone")
tests/template_tests/templatetags/tag_27584.py:8:20      - Unknown word (endbadtag)  -- parser.parse(("endbadtag",))
tests/template_tests/test_base.py:79:14     - Unknown word (nonliterals) -- def test_nonliterals(self):
tests/template_tests/test_custom.py:540:15    - Unknown word (Xtemplate)  -- "'Xtemplate'"
tests/template_tests/test_custom.py:546:24    - Unknown word (tagsegg)    -- egg_name = "%s/tagsegg.egg" % self.egg_dir
tests/template_tests/test_custom.py:549:30    - Unknown word (tagsegg)    -- "trying to load 'tagsegg.templatetags.broken
tests/template_tests/test_custom.py:550:27    - Unknown word (Xtemplate)  -- "import name 'Xtemplate'"
tests/template_tests/test_custom.py:554:50    - Unknown word (tagsegg)    -- libraries={"broken_egg": "tagsegg.templatetags.broken
tests/template_tests/test_custom.py:557:9     - Unknown word (ttext)      -- ttext = "{% load working_egg
tests/template_tests/test_custom.py:558:24    - Unknown word (tagsegg)    -- egg_name = "%s/tagsegg.egg" % self.egg_dir
tests/template_tests/test_custom.py:562:37    - Unknown word (tagsegg)    -- "working_egg": "tagsegg.templatetags.working
tests/template_tests/test_custom.py:565:32    - Unknown word (ttext)      -- engine.from_string(ttext)
tests/template_tests/test_extends_relative.py:21:44     - Unknown word (tmpl)       -- template.render(Context({"tmpl": "./two.html"}))
tests/template_tests/test_extends_relative.py:74:44     - Unknown word (tmpl)       -- template.render(Context({"tmpl": "./include_content
tests/template_tests/test_loaders.py:197:56    - Unknown word (ngstr)      -- template_sources(b"\xc3\x85ngstr\xc3\xb6m"))
tests/template_tests/test_loaders.py:200:37    - Unknown word (Straße)     -- self.source_checker(["/Straße"]) as check_sources
tests/template_tests/test_loaders.py:201:42    - Unknown word (Straße)     -- sources("Ångström", ["/Straße/Ångström"])
tests/template_tests/test_loaders.py:223:13    - Unknown word (tmppath)    -- tmppath = os.path.join(tmpdir
tests/template_tests/test_loaders.py:224:22    - Unknown word (tmppath)    -- os.chmod(tmppath, 0o0222)
tests/template_tests/test_loaders.py:229:14    - Unknown word (notafile)   -- def test_notafile_error(self):
tests/template_tests/test_loaders.py:52:9      - Unknown word (docstrings) -- docstrings in the cached loader
tests/template_tests/test_nodelist.py:29:14     - Unknown word (textnode)   -- def test_textnode_repr(self):
tests/template_tests/test_nodelist.py:31:13     - Unknown word (temptext)   -- for temptext, reprtext in [
tests/template_tests/test_nodelist.py:31:23     - Unknown word (reprtext)   -- for temptext, reprtext in [
tests/template_tests/test_nodelist.py:35:43     - Unknown word (temptext)   -- engine.from_string(temptext)
tests/template_tests/test_nodelist.py:37:46     - Unknown word (reprtext)   -- assertEqual(repr(texts[0]), reprtext)
tests/template_tests/test_nodelist.py:49:59     - Unknown word (badsimpletag) -- for i in range %}{% badsimpletag %}{% endfor %}",
tests/template_tests/test_nodelist.py:54:21     - Unknown word (badsimpletag) -- "{% badsimpletag %}{% endfor %}{% endfor
tests/template_tests/test_nodelist.py:58:59     - Unknown word (badsimpletag) -- for i in range %}{% badsimpletag %}"
tests/template_tests/test_nodelist.py:64:21     - Unknown word (badsimpletag) -- "{% badsimpletag %}{% endfor %}{% endfor
tests/template_tests/test_nodelist.py:68:58     - Unknown word (badsimpletag) -- for j in five %}{% badsimpletag %}{% endfor %}",
tests/template_tests/test_parser.py:25:31     - Unknown word (sometag)    -- TokenType.BLOCK, 'sometag _("Page not found")
tests/template_tests/test_parser.py:29:22     - Unknown word (sometag)    -- split, ["sometag", '_("Page not found
tests/template_tests/test_response.py:207:14    - Unknown word (repickling) -- def test_repickling(self):
tests/template_tests/test_response.py:350:14    - Unknown word (repickling) -- def test_repickling(self):
tests/template_tests/test_response.py:69:11     - Unknown word (rebaking)   -- # rebaking doesn't change the rendered
tests/template_tests/test_smartif.py:3:22      - Unknown word (smartif)    -- from django.template.smartif import IfParser
tests/template_tests/tests.py:34:65     - Unknown word (reraising)  -- original stack trace when reraising
tests/template_tests/tests.py:48:64     - Unknown word (reraising)  -- context was lost when reraising the traceback."
tests/template_tests/urls.py:25:16     - Unknown word (Юникод)     -- re_path(r"^Юникод/(\w+)/$", views.client
tests/template_tests/urls.py:25:54     - Unknown word (метка)      -- views.client2, name="метка_оператора"),
tests/template_tests/urls.py:25:60     - Unknown word (оператора)  -- client2, name="метка_оператора"),
tests/template_tests/urls.py:26:16     - Unknown word (Юникод)     -- re_path(r"^Юникод/(?P<tag>\S+)/$", views
tests/template_tests/urls.py:26:61     - Unknown word (метка)      -- views.client2, name="метка_оператора_2"),
tests/template_tests/urls.py:26:67     - Unknown word (оператора)  -- client2, name="метка_оператора_2"),
tests/template_tests/utils.py:101:14    - Unknown word (otherclass) -- self.otherclass = OtherClass()
tests/template_tests/utils.py:174:20    - Unknown word (Žćžšđ)      -- return "ŠĐĆŽćžšđ"
tests/test_client/tests.py:102:37    - Unknown word (asgi)       -- assertIs(response_copy.asgi_request, response.asgi
tests/test_client/tests.py:102:60    - Unknown word (asgi)       -- asgi_request, response.asgi_request)
tests/test_client/tests.py:106:54    - Unknown word (ufffd)      -- get("/get_view/?var=1\ufffd")
tests/test_client/tests.py:107:54    - Unknown word (ufffd)      -- response.context["var"], "1\ufffd")
tests/test_client/tests.py:1114:42   - Unknown word (faketoken)      -- authorization": "Bearer faketoken",
tests/test_client/tests.py:1118:68   - Unknown word (faketoken)      -- authorization"], "Bearer faketoken")
tests/test_client/tests.py:1125:42   - Unknown word (faketoken)      -- Authorization": "Bearer faketoken",
tests/test_client/tests.py:1129:68   - Unknown word (faketoken)      -- authorization"], "Bearer faketoken")
tests/test_client/tests.py:1140:46   - Unknown word (faketoken)      -- authorization": "Bearer faketoken",
tests/test_client/tests.py:1251:43   - Unknown word (asgi)           -- assertEqual(response.asgi_request.GET["example
tests/test_client/tests.py:208:62    - Unknown word (Slartibartfast) -- headers["X-DJANGO-TEST"], "Slartibartfast")
tests/test_client/tests.py:262:60    - Unknown word (Gladwell)       -- title><author>Malcolm Gladwell</author></book>
tests/test_client/tests.py:270:62    - Unknown word (Gladwell)       -- content, b"Blink - Malcolm Gladwell")
tests/test_client/tests.py:660:45    - Unknown word (otheruser)      -- client.login(username="otheruser", password="nopassword
tests/test_client/tests.py:660:67    - Unknown word (nopassword)     -- otheruser", password="nopassword")
tests/test_client/tests.py:877:49    - Unknown word (descript)       -- ValueError rather than a non-descript AssertionError.
tests/test_client/tests.py:883:23    - Unknown word (djangoproject)  -- "add 'www.djangoproject.com' to ALLOWED_HOSTS
tests/test_client/views.py:131:42    - Unknown word (Slartibartfast) -- "X-DJANGO-TEST"] = "Slartibartfast"
tests/test_client_regress/tests.py:1231:22   - Unknown word (собака)         -- text = "dog: собака"
tests/test_client_regress/tests.py:1239:22   - Unknown word (собака)         -- text = "dog: собака"
tests/test_client_regress/tests.py:1247:22   - Unknown word (собака)         -- text = "dog: собака"
tests/test_client_regress/tests.py:1343:19   - Unknown word (numbytes)       -- def test_read_numbytes_from_empty_request(self
tests/test_client_regress/tests.py:1359:19   - Unknown word (numbytes)       -- def test_read_numbytes_from_nonempty_request
tests/test_client_regress/tests.py:201:15    - Unknown word (exceedes)   -- b"exceedes the max limit of truncation
tests/test_client_regress/tests.py:493:10    - Unknown word (Redirections) -- "Redirections to self are caught and
tests/test_client_regress/tests.py:504:10    - Unknown word (Redirections) -- "Redirections don't loop forever even
tests/test_client_regress/tests.py:728:63    - Unknown word (Slartibartfast) -- reverse("arg_view", args=["Slartibartfast"]))
tests/test_client_regress/tests.py:730:53    - Unknown word (Slartibartfast) -- response.content, b"Howdy, Slartibartfast")
tests/test_client_regress/tests.py:740:64    - Unknown word (Slartibartfast) -- reverse("arg_view", args=["Slartibartfast"]))
tests/test_client_regress/tests.py:742:53    - Unknown word (Slartibartfast) -- response.content, b"Howdy, Slartibartfast")
tests/test_client_regress/tests.py:792:42    - Unknown word (somename)       -- reverse("arg_view", args=["somename"])
tests/test_client_regress/tests.py:793:42    - Unknown word (somename)       -- assertEqual(url, "/arg_view/somename/")
tests/test_client_regress/tests.py:805:40    - Unknown word (somename)       -- reverse("arg_view", args=["somename"])
tests/test_client_regress/tests.py:833:14    - Unknown word (contextlist)    -- def test_contextlist_keys(self):
tests/test_client_regress/tests.py:848:14    - Unknown word (contextlist)    -- def test_contextlist_get(self):
tests/test_runner/test_discover_runner.py:357:22    - Unknown word (Zimple)     -- "TestZimpleTestCase",
tests/test_runner/test_discover_runner.py:358:26    - Unknown word (Zimple)     -- msg="TestZimpleTestCase should be the
tests/test_runner/test_discover_runner.py:360:69    - Unknown word (doctests)   -- unspecified order, including doctests
tests/test_runner/test_discover_runner.py:374:13    - Unknown word (dups)       -- dups = runner.build_suite
tests/test_runner/test_discover_runner.py:375:34    - Unknown word (dups)       -- assertEqual(single, dups)
tests/test_runner/test_discover_runner.py:551:53    - Unknown word (subsuites)  -- processes, len(suite.subsuites))
tests/test_runner/test_discover_runner.py:560:53    - Unknown word (subsuites)  -- processes, len(suite.subsuites))
tests/test_runner/tests.py:317:9     - Unknown word (subsuite)   -- subsuite = list(suite)[0]
tests/test_runner/tests.py:318:23    - Unknown word (subsuite)   -- suite.addTest(subsuite)
tests/test_runner/tests.py:591:44    - Unknown word (sdict)      -- settings("settings.py", sdict=settings)
tests/test_runner/tests.py:61:13     - Unknown word (subsuite)   -- subsuite = suite_class()
tests/test_runner/tests.py:64:17     - Unknown word (subsuite)   -- subsuite.addTest(test)
tests/test_runner/tests.py:65:27     - Unknown word (subsuite)   -- suite.addTest(subsuite)
tests/test_runner/tests.py:751:50    - Unknown word (initargs)   -- pool.call_args.kwargs["initargs"]
tests/test_runner/tests.py:751:9     - Unknown word (initargs)   -- initargs = mocked_pool.call_args
tests/test_runner/tests.py:752:30    - Unknown word (initargs)   -- self.assertEqual(len(initargs), 7)
tests/test_runner/tests.py:753:26    - Unknown word (initargs)   -- self.assertEqual(initargs[5], True)  # debug_mode
tests/test_runner/tests.py:754:26    - Unknown word (initargs)   -- self.assertEqual(initargs[6], {db.DEFAULT_DB_ALIAS
tests/test_runner/tests.py:922:40    - Unknown word (keepdb)     -- old_name, verbosity=0, keepdb=True
tests/test_runner/tests.py:942:61    - Unknown word (keepdb)     -- False, serialize=True, keepdb=False
tests/test_runner_apps/sample/tests_sample.py:20:11     - Unknown word (Zimple)     -- class TestZimpleTestCase(SimpleTestCase
tests/test_runner_apps/sample/tests_sample.py:32:41     - Unknown word (doctests)   -- doctest.DocTestSuite(doctests))
tests/test_runner_apps/sample/tests_sample.py:7:15      - Unknown word (doctests)   -- from . import doctests
tests/test_utils/test_simpletestcase.py:133:30    - Unknown word (teardwn)    -- pre-setup and post-teardwn are called.
tests/test_utils/test_simpletestcase.py:72:30     - Unknown word (teardwn)    -- pre-setup and post-teardwn are called.
tests/test_utils/test_testcase.py:10:8      - Unknown word (pickable)   -- is_pickable,
tests/test_utils/test_testcase.py:142:28    - Unknown word (herbie)     -- self.assertIs(self.herbie.car, self.car)
tests/test_utils/test_testcase.py:143:28    - Unknown word (herbie)     -- self.assertIs(self.herbie.belongs_to, self.jim
tests/test_utils/test_testcase.py:162:24    - Unknown word (deutsh)     -- def test_book_name_deutsh(self):
tests/test_utils/test_testcase.py:164:30    - Unknown word (Käfer)      -- self.car.name = "VW sKäfer"
tests/test_utils/test_testcase.py:169:37    - Unknown word (Coccinelle) -- car.name = "Volkswagen Coccinelle"
tests/test_utils/test_testcase.py:29:29     - Unknown word (pickable)   -- self.assertEqual(is_pickable(unpicklable_obj), False
tests/test_utils/test_testcase.py:97:13     - Unknown word (herbie)     -- cls.herbie = cls.jim_douglas.possessed
tests/test_utils/tests.py:1049:14   - Unknown word (exceedes)   -- "exceedes the max limit of truncation
tests/test_utils/tests.py:1175:13   - Unknown word (unvalid)    -- xml_unvalid = "<elem attr1='a attr
tests/test_utils/tests.py:1178:40   - Unknown word (unvalid)    -- assertXMLNotEqual(xml_unvalid, xml2)
tests/test_utils/tests.py:2002:11   - Unknown word (visualisation) -- A visualisation of the callback tree
tests/test_utils/tests.py:2207:38   - Unknown word (defualt)       -- class__.databases = {"defualt"}
tests/test_utils/tests.py:2209:71   - Unknown word (defualt)       -- databases refers to 'defualt' which "
tests/test_utils/tests.py:2284:39   - Unknown word (reraised)      -- exception is setUp() is reraised after disable() is called
tests/test_utils/tests.py:2288:44   - Unknown word (reraised)      -- NotImplementedError("reraised")
tests/test_utils/tests.py:2293:61   - Unknown word (reraised)      -- NotImplementedError, "reraised"):
tests/test_utils/tests.py:764:26    - Unknown word (attibutes)  -- def test_non_boolean_attibutes(self):
tests/test_utils/tests.py:986:76    - Unknown word (Žćžšđ)      -- title (with Unicode ŠĐĆŽćžšđ)</p>'
tests/test_utils/tests.py:990:76    - Unknown word (Žćžšđ)      -- title (with Unicode ŠĐĆŽćžšđ)</p>',
tests/transaction_hooks/tests.py:222:28    - Unknown word (doesnt)     -- def test_error_in_hook_doesnt_prevent_clearing_hooks
tests/transactions/tests.py:42:56     - Unknown word (Tintin)     -- objects.create(first_name="Tintin")
tests/transactions/tests.py:60:56     - Unknown word (Tintin)     -- objects.create(first_name="Tintin")
tests/transactions/tests.py:77:60     - Unknown word (Tintin)     -- objects.create(first_name="Tintin")
tests/transactions/tests.py:89:61     - Unknown word (Tintin)     -- objects.create(first_name="Tintin")
tests/transactions/tests.py:98:60     - Unknown word (Tintin)     -- objects.create(first_name="Tintin")
tests/update/tests.py:202:62    - Unknown word (relatedpoint) -- related_count=Count("relatedpoint"))
tests/update/tests.py:205:62    - Unknown word (relatedpoint) -- related_count=Count("relatedpoint"))
tests/urlpatterns/path_base64_urls.py:12:53     - Unknown word (subpattern)     -- views.empty_view, name="subpattern-base64"),
tests/urlpatterns/path_base64_urls.py:16:14     - Unknown word (subsubpatterns) -- (subsubpatterns, "second-layer-namespaced
tests/urlpatterns/path_base64_urls.py:7:1       - Unknown word (subsubpatterns) -- subsubpatterns = [
tests/urlpatterns/path_base64_urls.py:8:58      - Unknown word (subsubpattern)  -- views.empty_view, name="subsubpattern-base64"),
tests/urlpatterns/tests.py:182:43    - Unknown word (subsubpattern) -- "instance-ns-base64:subsubpattern-base64", kwargs=kwargs
tests/urlpatterns/tests.py:254:54    - Unknown word (stest)         -- int:num>/extra/<str:%stest>" % whitespace
tests/urlpatterns/tests.py:284:23    - Unknown word (abcxyz)        -- ("str", {"abcxyz"}, no_converter),
tests/urlpatterns/tests.py:286:24    - Unknown word (abcxyz)        -- ("slug", {"abcxyz-ABCXYZ_01234567890"
tests/urlpatterns/tests.py:286:31    - Unknown word (ABCXYZ)        -- ("slug", {"abcxyz-ABCXYZ_01234567890"}, no_converter
tests/urlpatterns/tests.py:30:11     - Unknown word (subpattern) -- ("subpattern-base64", "", included
tests/urlpatterns/tests.py:310:14    - Unknown word (nonmatching)   -- def test_nonmatching_urls(self):
tests/urlpatterns/tests.py:315:34    - Unknown word (notallowed)    -- "slug", {"", "stars*notallowed"}),
tests/urlpatterns/tests.py:34:11     - Unknown word (subpattern) -- ("subpattern-base64", "namespaced
tests/urlpatterns_reverse/included_namespace_urls.py:27:29     - Unknown word (testobj)    -- path("test3/", include(*testobj3.urls)),
tests/urlpatterns_reverse/included_namespace_urls.py:28:29     - Unknown word (testobj)    -- path("test4/", include(*testobj4.urls)),
tests/urlpatterns_reverse/included_namespace_urls.py:6:1       - Unknown word (testobj)    -- testobj3 = URLObject("testapp
tests/urlpatterns_reverse/included_namespace_urls.py:7:1       - Unknown word (testobj)    -- testobj4 = URLObject("testapp
tests/urlpatterns_reverse/namespace_urls.py:13:1      - Unknown word (newappobj)  -- newappobj1 = URLObject("newapp
tests/urlpatterns_reverse/namespace_urls.py:42:29     - Unknown word (testobj)    -- path("test1/", include(*testobj1.urls)),
tests/urlpatterns_reverse/namespace_urls.py:43:29     - Unknown word (testobj)    -- path("test2/", include(*testobj2.urls)),
tests/urlpatterns_reverse/namespace_urls.py:47:30     - Unknown word (newappobj)  -- "newapp1/", include(newappobj1.app_urls, "new-ns1
tests/urlpatterns_reverse/namespace_urls.py:48:34     - Unknown word (newappobj)  -- new-default/", include(newappobj1.app_urls)),
tests/urlpatterns_reverse/namespace_urls.py:6:1       - Unknown word (testobj)    -- testobj1 = URLObject("testapp
tests/urlpatterns_reverse/namespace_urls.py:7:1       - Unknown word (testobj)    -- testobj2 = URLObject("testapp
tests/urlpatterns_reverse/namespace_urls.py:8:9       - Unknown word (testobj)    -- default_testobj = URLObject("testapp
tests/urlpatterns_reverse/test_localeregexdescriptor.py:37:14     - Unknown word (nontranslated) -- def test_nontranslated_regex_compiled_once
tests/urlpatterns_reverse/tests.py:1606:14   - Unknown word (noncallable)  -- def test_noncallable_view(self):
tests/urlpatterns_reverse/tests.py:1609:19   - Unknown word (uncallable)   -- path("uncallable-object/", views.uncallable
tests/urlpatterns_reverse/tests.py:1609:46   - Unknown word (uncallable)   -- uncallable-object/", views.uncallable)
tests/urlpatterns_reverse/tests.py:1776:14   - Unknown word (rereverse)    -- def test_rereverse(self):
tests/urlpatterns_reverse/tests.py:324:14    - Unknown word (backref)    -- ("people_backref", "/people/nate-nate
tests/urlpatterns_reverse/tests.py:325:14    - Unknown word (backref)    -- ("people_backref", "/people/nate-nate
tests/urlpatterns_reverse/tests.py:358:58    - Unknown word (Cspam)      -- CDocuments%20and%20Settings%5Cspam/",
tests/urlpatterns_reverse/tests.py:396:14    - Unknown word (mixedcapture) -- ("nested-mixedcapture", "/nested/capture/mixed
tests/urlpatterns_reverse/tests.py:397:14    - Unknown word (mixedcapture) -- ("nested-mixedcapture", NoReverseMatch, [
tests/urlpatterns_reverse/tests.py:408:22    - Unknown word (Fexample)     -- ("security", "/%2Fexample.com/security/", ["/example
tests/urlpatterns_reverse/tests.py:455:20    - Unknown word (Binvalid)     -- "/%7B%7Binvalid%7D%7D/includes/non_path
tests/urlpatterns_reverse/tests.py:649:81    - Unknown word (blub)         -- reverse.nested_urls.blub"))
tests/urlpatterns_reverse/tests.py:686:55    - Unknown word (testpw)       -- example.com", password="testpw"
tests/urlpatterns_reverse/urls.py:31:76     - Unknown word (backref)    -- empty_view, name="people_backref"),
tests/urlpatterns_reverse/urls.py:48:74     - Unknown word (mixedcapture) -- empty_view, name="nested-mixedcapture"
tests/urlpatterns_reverse/views.py:35:1      - Unknown word (uncallable) -- uncallable = None  # neither a
tests/user_commands/management/commands/required_option.py:7:73      - Unknown word (needme)     -- required=True, dest="needme2")
tests/user_commands/tests.py:108:49    - Unknown word (commandegg) -- settings(INSTALLED_APPS=["commandegg"]):
tests/user_commands/tests.py:110:55    - Unknown word (commandegg) -- apps.get_app_config("commandegg").path, "management
tests/user_commands/tests.py:112:34    - Unknown word (eggcommand) -- assertEqual(cmds, ["eggcommand"])
tests/user_commands/tests.py:248:47    - Unknown word (needme)     -- option", need_me="foo", needme2="bar", stdout=out
tests/user_commands/tests.py:251:24    - Unknown word (needme)     -- self.assertIn("needme2", out.getvalue())
tests/user_commands/tests.py:256:49    - Unknown word (needme)     -- option", "--need-me=foo", needme2="bar", stdout=out
tests/user_commands/tests.py:259:24    - Unknown word (needme)     -- self.assertIn("needme2", out.getvalue())
tests/user_commands/tests.py:422:14    - Unknown word (outputwrapper) -- def test_outputwrapper_flush(self):
tests/user_commands/tests.py:425:38    - Unknown word (outputwrapper) -- management.call_command("outputwrapper", stdout=out)
tests/user_commands/tests.py:439:13    - Unknown word (sdict)         -- sdict={
tests/user_commands/tests.py:462:13    - Unknown word (sdict)         -- sdict={
tests/user_commands/tests.py:499:50    - Unknown word (doesnt)        -- executing a_42_command_that_doesnt_exist_42"
tests/user_commands/tests.py:501:47    - Unknown word (doesnt)        -- ["a_42_command_that_doesnt_exist_42"])
tests/user_commands/tests.py:530:77    - Unknown word (blub)          -- bar/bat", "bar", "flub/blub"]
tests/utils_tests/test_archive.py:64:44     - Unknown word (leadpath)   -- entry.name.startswith("leadpath_")
tests/utils_tests/test_autoreload.py:125:75    - Unknown word (zipf)       -- zipfile.ZIP_DEFLATED) as zipf:
tests/utils_tests/test_autoreload.py:126:13    - Unknown word (zipf)       -- zipf.writestr("test_zipped
tests/utils_tests/test_autoreload.py:218:32    - Unknown word (Werror)     -- [sys.executable, "-Werror", __file__, "runserver
tests/utils_tests/test_autoreload.py:227:32    - Unknown word (Xutf)       -- [sys.executable, "-Xutf8", "-Xa=b", __file_
tests/utils_tests/test_autoreload.py:94:30     - Unknown word (Ceci)       -- filename.write_text("Ceci n'est pas du Python
tests/utils_tests/test_choices.py:368:11    - Unknown word (randomised) -- # randomised order in form fields
tests/utils_tests/test_crypto.py:100:20    - Unknown word (dklen)      -- # "dklen": 20,
tests/utils_tests/test_crypto.py:110:18    - Unknown word (dklen)      -- "dklen": 25,
tests/utils_tests/test_crypto.py:69:18     - Unknown word (dklen)      -- "dklen": 20,
tests/utils_tests/test_crypto.py:79:18     - Unknown word (dklen)      -- "dklen": 20,
tests/utils_tests/test_crypto.py:89:18     - Unknown word (dklen)      -- "dklen": 20,
tests/utils_tests/test_datastructures.py:102:33    - Unknown word (Holovaty)   -- setlist("lastname", ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:102:45    - Unknown word (Willison)   -- lastname", ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:103:51    - Unknown word (Holovaty)   -- getlist("lastname"), ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:103:63    - Unknown word (Willison)   -- lastname"), ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:104:72    - Unknown word (Willison)   -- , "Developer", [], "Willison"])
tests/utils_tests/test_datastructures.py:107:51    - Unknown word (Holovaty)   -- getlist("lastname"), ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:107:63    - Unknown word (Willison)   -- lastname"), ["Holovaty", "Willison"])
tests/utils_tests/test_datastructures.py:108:27    - Unknown word (newkey)     -- d.setlistdefault("newkey", ["Doe"])
tests/utils_tests/test_datastructures.py:109:37    - Unknown word (newkey)     -- assertEqual(d.getlist("newkey"), ["Doe"])
tests/utils_tests/test_datastructures.py:159:22    - Unknown word (doesnt)     -- def test_getlist_doesnt_mutate(self):
tests/utils_tests/test_datastructures.py:244:24    - Unknown word (unpackable) -- # Iterables of unpackable objects with incorrect
tests/utils_tests/test_datastructures.py:274:14    - Unknown word (dictwrapper) -- def test_dictwrapper(self):
tests/utils_tests/test_dateformat.py:147:14    - Unknown word (futuredates) -- def test_futuredates(self):
tests/utils_tests/test_dateparse.py:101:9     - Unknown word (timedeltas) -- timedeltas = [
tests/utils_tests/test_dateparse.py:112:22    - Unknown word (timedeltas) -- for delta in timedeltas:
tests/utils_tests/test_encoding.py:101:28    - Unknown word (Žćžšđ)      -- return "ŠĐĆŽćžšđ"
tests/utils_tests/test_encoding.py:115:14    - Unknown word (repercent)  -- def test_repercent_broken_unicode_recursion
tests/utils_tests/test_encoding.py:121:17    - Unknown word (repercent)  -- repercent_broken_unicode(data
tests/utils_tests/test_encoding.py:126:14    - Unknown word (repercent)  -- def test_repercent_broken_unicode_small
tests/utils_tests/test_encoding.py:127:23    - Unknown word (xfctest)    -- data = b"test\xfctest\xfctest\xfc"
tests/utils_tests/test_encoding.py:127:31    - Unknown word (xfctest)    -- data = b"test\xfctest\xfctest\xfc"
tests/utils_tests/test_encoding.py:131:47    - Unknown word (repercent)  -- frame is the call to repercent_broken_unicode().
tests/utils_tests/test_encoding.py:136:70    - Unknown word (Ctest)      -- unicode(data), b"test%FCtest%FCtest%FC")
tests/utils_tests/test_encoding.py:136:77    - Unknown word (Ctest)      -- data), b"test%FCtest%FCtest%FC")
tests/utils_tests/test_encoding.py:141:21    - Unknown word (xfctest)    -- [b"test\xfctest\xfctest\xfc", b"test
tests/utils_tests/test_encoding.py:141:29    - Unknown word (xfctest)    -- [b"test\xfctest\xfctest\xfc", b"test\xfctest
tests/utils_tests/test_encoding.py:141:50    - Unknown word (xfctest)    -- xfctest\xfc", b"test\xfctest\xfc", b"test\xfc"],
tests/utils_tests/test_encoding.py:149:38    - Unknown word (чубака)     -- filepath_to_uri("upload\\чубака.mp4"),
tests/utils_tests/test_encoding.py:158:21    - Unknown word (rosé)       -- ("red%09rosé#red", "red%09ros%C3
tests/utils_tests/test_encoding.py:159:25    - Unknown word (Jürgen)     -- ("/blog/for/Jürgen Münster/", "/blog/for
tests/utils_tests/test_encoding.py:159:32    - Unknown word (Münster)    -- ("/blog/for/Jürgen Münster/", "/blog/for/J%C3%BCrgen
tests/utils_tests/test_encoding.py:159:60    - Unknown word (Crgen)      -- ", "/blog/for/J%C3%BCrgen%20M%C3%BCnster/"),
tests/utils_tests/test_encoding.py:159:74    - Unknown word (Cnster)     -- J%C3%BCrgen%20M%C3%BCnster/"),
tests/utils_tests/test_encoding.py:18:5      - Unknown word (repercent)  -- repercent_broken_unicode,
tests/utils_tests/test_encoding.py:207:34    - Unknown word (Crgen)      -- "/blog/for/J%C3%BCrgen%20M%C3%BCnster/",
tests/utils_tests/test_encoding.py:207:48    - Unknown word (Cnster)     -- J%C3%BCrgen%20M%C3%BCnster/",
tests/utils_tests/test_encoding.py:208:30    - Unknown word (xfcrgen)    -- "/blog/for/J\xfcrgen%20M\xfcnster/",
tests/utils_tests/test_encoding.py:208:42    - Unknown word (xfcnster)   -- blog/for/J\xfcrgen%20M\xfcnster/",
tests/utils_tests/test_encoding.py:234:21    - Unknown word (Bsome)      -- "/%3Bsome/%3Dawful/%3Fpath/:with
tests/utils_tests/test_encoding.py:234:29    - Unknown word (Dawful)     -- "/%3Bsome/%3Dawful/%3Fpath/:with/@lots
tests/utils_tests/test_encoding.py:237:33    - Unknown word (Fbar)       -- ("/foo?bar", "/foo%3Fbar"),
tests/utils_tests/test_encoding.py:65:37     - Unknown word (voil)       -- This is an exception, voil",
tests/utils_tests/test_encoding.py:75:58     - Unknown word (voil)       -- This is an exception, voil")
tests/utils_tests/test_encoding.py:87:28     - Unknown word (Žćžšđ)      -- return "ŠĐĆŽćžšđ"
tests/utils_tests/test_feedgenerator.py:117:65    - Unknown word (descr)      -- "title", "/link/", "descr")
tests/utils_tests/test_feedgenerator.py:126:33    - Unknown word (descr)      -- "title", "/link/", "descr", feed_url="/feed/"
tests/utils_tests/test_feedgenerator.py:136:60    - Unknown word (descr)      -- "title", "/link/", "descr")
tests/utils_tests/test_functional.py:19:15     - Unknown word (Klazz)      -- class Klazz(Base):
tests/utils_tests/test_functional.py:22:26     - Unknown word (Klazz)      -- t = lazy(lambda: Klazz(), Klazz)()
tests/utils_tests/test_functional.py:22:35     - Unknown word (Klazz)      -- lazy(lambda: Klazz(), Klazz)()
tests/utils_tests/test_functional.py:282:35    - Unknown word (xbcst)      -- original_object = b"J\xc3\xbcst a str\xc3\xadng"
tests/utils_tests/test_functional.py:282:51    - Unknown word (xadng)      -- xc3\xbcst a str\xc3\xadng"
tests/utils_tests/test_functional.py:32:15     - Unknown word (Klazz)      -- class Klazz(Base):
tests/utils_tests/test_functional.py:34:25     - Unknown word (Klazz)      -- return "Klazz"
tests/utils_tests/test_functional.py:42:32     - Unknown word (Ǩlâzz)      -- return "Î am ā Ǩlâzz."
tests/utils_tests/test_functional.py:48:42     - Unknown word (Ǩlâzz)      -- assertEqual(str(t), "Î am ā Ǩlâzz.")
tests/utils_tests/test_html.py:144:26    - Unknown word (ript)       -- ("<sc<!-- -->ript>test<<!-- -->/script
tests/utils_tests/test_html.py:144:56    - Unknown word (ript)       -- <!-- -->/script>", "ript>test"),
tests/utils_tests/test_html.py:17:11     - Unknown word (urlquote)   -- smart_urlquote,
tests/utils_tests/test_html.py:200:24    - Unknown word (Cscript)    -- "\\u003Cscript\\u003Eand this\\u00
tests/utils_tests/test_html.py:200:37    - Unknown word (Eand)       -- "\\u003Cscript\\u003Eand this\\u003C/script\
tests/utils_tests/test_html.py:227:31    - Unknown word (Cscript)    -- '{"a": "\\u003Cscript\\u003Etest\\u0026ing
tests/utils_tests/test_html.py:227:44    - Unknown word (Etest)      -- "\\u003Cscript\\u003Etest\\u0026ing\\u003C/script
tests/utils_tests/test_html.py:239:31    - Unknown word (Cscript)    -- '{"a": "\\u003Cscript\\u003Etest\\u0026ing
tests/utils_tests/test_html.py:239:44    - Unknown word (Etest)      -- "\\u003Cscript\\u003Etest\\u0026ing\\u003C/script
tests/utils_tests/test_html.py:263:20    - Unknown word (urlquote)   -- def test_smart_urlquote(self):
tests/utils_tests/test_html.py:292:40    - Unknown word (urlquote)   -- self.assertEqual(smart_urlquote(value), output)
tests/utils_tests/test_html.py:338:24    - Unknown word (doesnt)     -- def test_html_safe_doesnt_define_str(self):
tests/utils_tests/test_html.py:44:33     - Unknown word (sfdsa)      -- patterns = ("%s", "asdf%sfdsa", "%s1", "1%sb")
tests/utils_tests/test_http.py:39:43     - Unknown word (doseq)      -- containing_sequence_not_doseq(self):
tests/utils_tests/test_http.py:40:51     - Unknown word (doseq)      -- urlencode({"a": [1, 2]}, doseq=False), "a=%5B1%2C+
tests/utils_tests/test_http.py:416:35    - Unknown word (Fexample)   -- //example.com", "/%2Fexample.com"),
tests/utils_tests/test_http.py:42:40     - Unknown word (doseq)      -- containing_tuple_not_doseq(self):
tests/utils_tests/test_http.py:43:51     - Unknown word (doseq)      -- urlencode({"a": (1, 2)}, doseq=False), "a=%281%2C+
tests/utils_tests/test_http.py:45:34     - Unknown word (doseq)      -- custom_iterable_not_doseq(self):
tests/utils_tests/test_http.py:463:60    - Unknown word (Afun)       -- This%20is%20%2A%2A%2Afun%2A%2A%2A",
tests/utils_tests/test_http.py:487:46    - Unknown word (Afun)       -- This%20is%20%2A%2A%2Afun%2A%2A%2A",
tests/utils_tests/test_http.py:488:39    - Unknown word (Afun)       -- This%20is%20%2A%2A%2Afun%2A%2A%2A",
tests/utils_tests/test_http.py:509:22    - Unknown word (espécimen)  -- ((True, "espécimen"), "attachment; filename
tests/utils_tests/test_http.py:509:74    - Unknown word (cimen)      -- filename*=utf-8''esp%C3%A9cimen"),
tests/utils_tests/test_http.py:511:26    - Unknown word (espécimen)  -- (True, '"espécimen" filename'),
tests/utils_tests/test_http.py:512:59    - Unknown word (cimen)      -- =utf-8''%22esp%C3%A9cimen%22%20filename",
tests/utils_tests/test_itercompat.py:11:27     - Unknown word (itercompat) -- "django.utils.itercompat.is_iterable() is deprecated
tests/utils_tests/test_itercompat.py:5:19      - Unknown word (itercompat) -- from django.utils.itercompat import is_iterable
tests/utils_tests/test_lazyobject.py:430:37    - Unknown word (quux)       -- attr in ["bar", "baz", "quux"]:
tests/utils_tests/test_lazyobject.py:448:14    - Unknown word (quux)       -- self.quux = "quux"
tests/utils_tests/test_lazyobject.py:448:22    - Unknown word (quux)       -- self.quux = "quux"
tests/utils_tests/test_lazyobject.py:499:27    - Unknown word (categoryinfo) -- lazy_category.categoryinfo
tests/utils_tests/test_lazyobject.py:62:22     - Unknown word (falsey)     -- def test_getattr_falsey(self):
tests/utils_tests/test_lorem_ipsum.py:107:18    - Unknown word (Exercitationem) -- "Exercitationem perferendis, exercitationem
tests/utils_tests/test_lorem_ipsum.py:108:18    - Unknown word (Exercitationem) -- "Exercitationem perferendis, exercitationem
tests/utils_tests/test_lorem_ipsum.py:118:40    - Unknown word (amet)           -- Lorem ipsum dolor sit amet, consectetur adipisicing
tests/utils_tests/test_lorem_ipsum.py:118:46    - Unknown word (consectetur)    -- ipsum dolor sit amet, consectetur adipisicing elit, "
tests/utils_tests/test_lorem_ipsum.py:118:58    - Unknown word (adipisicing)    -- sit amet, consectetur adipisicing elit, "
tests/utils_tests/test_lorem_ipsum.py:118:70    - Unknown word (elit)           -- consectetur adipisicing elit, "
tests/utils_tests/test_lorem_ipsum.py:119:25    - Unknown word (eiusmod)        -- "sed do eiusmod tempor incididunt ut
tests/utils_tests/test_lorem_ipsum.py:119:33    - Unknown word (tempor)         -- "sed do eiusmod tempor incididunt ut labore
tests/utils_tests/test_lorem_ipsum.py:119:40    - Unknown word (incididunt)     -- sed do eiusmod tempor incididunt ut labore et dolore
tests/utils_tests/test_lorem_ipsum.py:119:54    - Unknown word (labore)         -- tempor incididunt ut labore et dolore magna "
tests/utils_tests/test_lorem_ipsum.py:119:64    - Unknown word (dolore)         -- incididunt ut labore et dolore magna "
tests/utils_tests/test_lorem_ipsum.py:120:18    - Unknown word (aliqua)         -- "aliqua. Ut enim ad minim veniam
tests/utils_tests/test_lorem_ipsum.py:120:29    - Unknown word (enim)           -- "aliqua. Ut enim ad minim veniam, quis
tests/utils_tests/test_lorem_ipsum.py:120:43    - Unknown word (veniam)         -- aliqua. Ut enim ad minim veniam, quis nostrud exercitation
tests/utils_tests/test_lorem_ipsum.py:120:51    - Unknown word (quis)           -- enim ad minim veniam, quis nostrud exercitation
tests/utils_tests/test_lorem_ipsum.py:120:56    - Unknown word (nostrud)        -- ad minim veniam, quis nostrud exercitation "
tests/utils_tests/test_lorem_ipsum.py:121:18    - Unknown word (ullamco)        -- "ullamco laboris nisi ut aliquip
tests/utils_tests/test_lorem_ipsum.py:121:26    - Unknown word (laboris)        -- "ullamco laboris nisi ut aliquip ex ea
tests/utils_tests/test_lorem_ipsum.py:121:42    - Unknown word (aliquip)        -- ullamco laboris nisi ut aliquip ex ea commodo consequat
tests/utils_tests/test_lorem_ipsum.py:121:56    - Unknown word (commodo)        -- nisi ut aliquip ex ea commodo consequat. "
tests/utils_tests/test_lorem_ipsum.py:121:64    - Unknown word (consequat)      -- aliquip ex ea commodo consequat. "
tests/utils_tests/test_lorem_ipsum.py:122:18    - Unknown word (Duis)           -- "Duis aute irure dolor in
tests/utils_tests/test_lorem_ipsum.py:122:23    - Unknown word (aute)           -- "Duis aute irure dolor in reprehenderit
tests/utils_tests/test_lorem_ipsum.py:122:28    - Unknown word (irure)          -- "Duis aute irure dolor in reprehenderit
tests/utils_tests/test_lorem_ipsum.py:122:43    - Unknown word (reprehenderit)  -- aute irure dolor in reprehenderit in voluptate velit
tests/utils_tests/test_lorem_ipsum.py:122:60    - Unknown word (voluptate)      -- in reprehenderit in voluptate velit "
tests/utils_tests/test_lorem_ipsum.py:122:70    - Unknown word (velit)          -- reprehenderit in voluptate velit "
tests/utils_tests/test_lorem_ipsum.py:123:23    - Unknown word (cillum)         -- "esse cillum dolore eu fugiat nulla
tests/utils_tests/test_lorem_ipsum.py:123:30    - Unknown word (dolore)         -- "esse cillum dolore eu fugiat nulla pariatur
tests/utils_tests/test_lorem_ipsum.py:123:40    - Unknown word (fugiat)         -- esse cillum dolore eu fugiat nulla pariatur. Excepteur
tests/utils_tests/test_lorem_ipsum.py:123:47    - Unknown word (nulla)          -- cillum dolore eu fugiat nulla pariatur. Excepteur
tests/utils_tests/test_lorem_ipsum.py:123:53    - Unknown word (pariatur)       -- dolore eu fugiat nulla pariatur. Excepteur sint "
tests/utils_tests/test_lorem_ipsum.py:123:63    - Unknown word (Excepteur)      -- fugiat nulla pariatur. Excepteur sint "
tests/utils_tests/test_lorem_ipsum.py:124:18    - Unknown word (occaecat)       -- "occaecat cupidatat non proident
tests/utils_tests/test_lorem_ipsum.py:124:27    - Unknown word (cupidatat)      -- "occaecat cupidatat non proident, sunt in
tests/utils_tests/test_lorem_ipsum.py:124:41    - Unknown word (proident)       -- occaecat cupidatat non proident, sunt in culpa qui officia
tests/utils_tests/test_lorem_ipsum.py:124:51    - Unknown word (sunt)           -- cupidatat non proident, sunt in culpa qui officia
tests/utils_tests/test_lorem_ipsum.py:124:69    - Unknown word (officia)        -- proident, sunt in culpa qui officia "
tests/utils_tests/test_lorem_ipsum.py:125:18    - Unknown word (deserunt)       -- "deserunt mollit anim id est laborum
tests/utils_tests/test_lorem_ipsum.py:125:27    - Unknown word (mollit)         -- "deserunt mollit anim id est laborum
tests/utils_tests/test_lorem_ipsum.py:125:46    - Unknown word (laborum)        -- deserunt mollit anim id est laborum."
tests/utils_tests/test_lorem_ipsum.py:12:36     - Unknown word (amet)       -- lorem ipsum dolor sit amet consectetur adipisicing
tests/utils_tests/test_lorem_ipsum.py:12:41     - Unknown word (consectetur) -- ipsum dolor sit amet consectetur adipisicing elit sed
tests/utils_tests/test_lorem_ipsum.py:12:53     - Unknown word (adipisicing) -- sit amet consectetur adipisicing elit sed do "
tests/utils_tests/test_lorem_ipsum.py:12:65     - Unknown word (elit)        -- consectetur adipisicing elit sed do "
tests/utils_tests/test_lorem_ipsum.py:13:14     - Unknown word (eiusmod)     -- "eiusmod tempor incididunt ut
tests/utils_tests/test_lorem_ipsum.py:13:22     - Unknown word (tempor)      -- "eiusmod tempor incididunt ut",
tests/utils_tests/test_lorem_ipsum.py:13:29     - Unknown word (incididunt)  -- "eiusmod tempor incididunt ut",
tests/utils_tests/test_lorem_ipsum.py:18:59     - Unknown word (amet)        -- lorem ipsum dolor sit amet consectetur adipisicing
tests/utils_tests/test_lorem_ipsum.py:18:64     - Unknown word (consectetur) -- ipsum dolor sit amet consectetur adipisicing")
tests/utils_tests/test_lorem_ipsum.py:18:76     - Unknown word (adipisicing) -- sit amet consectetur adipisicing")
tests/utils_tests/test_lorem_ipsum.py:24:40     - Unknown word (amet)        -- lorem ipsum dolor sit amet consectetur adipisicing
tests/utils_tests/test_lorem_ipsum.py:24:45     - Unknown word (consectetur) -- ipsum dolor sit amet consectetur adipisicing elit sed
tests/utils_tests/test_lorem_ipsum.py:24:57     - Unknown word (adipisicing) -- sit amet consectetur adipisicing elit sed "
tests/utils_tests/test_lorem_ipsum.py:24:69     - Unknown word (elit)        -- consectetur adipisicing elit sed "
tests/utils_tests/test_lorem_ipsum.py:25:21     - Unknown word (eiusmod)     -- "do eiusmod tempor incididunt ut
tests/utils_tests/test_lorem_ipsum.py:25:29     - Unknown word (tempor)      -- "do eiusmod tempor incididunt ut labore
tests/utils_tests/test_lorem_ipsum.py:25:36     - Unknown word (incididunt)  -- "do eiusmod tempor incididunt ut labore et dolore
tests/utils_tests/test_lorem_ipsum.py:25:50     - Unknown word (labore)      -- tempor incididunt ut labore et dolore magna aliqua
tests/utils_tests/test_lorem_ipsum.py:25:60     - Unknown word (dolore)      -- incididunt ut labore et dolore magna aliqua"
tests/utils_tests/test_lorem_ipsum.py:25:73     - Unknown word (aliqua)      -- labore et dolore magna aliqua"
tests/utils_tests/test_lorem_ipsum.py:40:38     - Unknown word (exercitationem) -- sample.return_value = ["exercitationem", "perferendis"]
tests/utils_tests/test_lorem_ipsum.py:40:56     - Unknown word (perferendis)    -- ["exercitationem", "perferendis"]
tests/utils_tests/test_lorem_ipsum.py:41:51     - Unknown word (exercitationem) -- words(2, common=False), "exercitationem perferendis")
tests/utils_tests/test_lorem_ipsum.py:41:66     - Unknown word (perferendis)    -- False), "exercitationem perferendis")
tests/utils_tests/test_lorem_ipsum.py:55:38     - Unknown word (exercitationem) -- sample.return_value = ["exercitationem", "perferendis"]
tests/utils_tests/test_lorem_ipsum.py:55:56     - Unknown word (perferendis)    -- ["exercitationem", "perferendis"]
tests/utils_tests/test_lorem_ipsum.py:62:21     - Unknown word (Exercitationem) -- value, "Exercitationem perferendis, exercitationem
tests/utils_tests/test_lorem_ipsum.py:62:36     - Unknown word (perferendis)    -- value, "Exercitationem perferendis, exercitationem perferendis
tests/utils_tests/test_lorem_ipsum.py:62:49     - Unknown word (exercitationem) -- Exercitationem perferendis, exercitationem perferendis?"
tests/utils_tests/test_lorem_ipsum.py:62:64     - Unknown word (perferendis)    -- perferendis, exercitationem perferendis?"
tests/utils_tests/test_lorem_ipsum.py:80:38     - Unknown word (exercitationem) -- sample.return_value = ["exercitationem", "perferendis"]
tests/utils_tests/test_lorem_ipsum.py:87:18     - Unknown word (Exercitationem) -- "Exercitationem perferendis, exercitationem
tests/utils_tests/test_lorem_ipsum.py:88:18     - Unknown word (Exercitationem) -- "Exercitationem perferendis, exercitationem
tests/utils_tests/test_module_loading.py:52:18     - Unknown word (sumbodule)  -- def test_has_sumbodule_with_dotted_path(self
tests/utils_tests/test_regex_helper.py:27:20     - Unknown word (noncapturing) -- def test_group_noncapturing(self):
tests/utils_tests/test_safestring.py:128:29    - Unknown word (btest)        -- ("test", "a&amp;btest"),
tests/utils_tests/test_safestring.py:35:44     - Unknown word (dunder)       -- object_implementing_dunder_html(self):
tests/utils_tests/test_safestring.py:36:13     - Unknown word (customescape) -- e = customescape("<a&b>")
tests/utils_tests/test_safestring.py:56:44     - Unknown word (dunder)       -- object_implementing_dunder_str(self):
tests/utils_tests/test_safestring.py:65:42     - Unknown word (dunder)       -- safe_result_implements_dunder_html(self):
tests/utils_tests/test_safestring.py:68:47     - Unknown word (dunder)       -- lazy_result_implements_dunder_html(self):
tests/utils_tests/test_safestring.py:91:50     - Unknown word (dunder)       -- decorator_does_not_affect_dunder_html(self):
tests/utils_tests/test_safestring.py:9:7       - Unknown word (customescape) -- class customescape(str):
tests/utils_tests/test_simplelazyobject.py:10:42     - Unknown word (johndoe)    -- objects.create_user("johndoe", "john@example.com
tests/utils_tests/test_termcolors.py:3:19      - Unknown word (termcolors) -- from django.utils.termcolors import (
tests/utils_tests/test_text.py:158:52    - Unknown word (mylink)      -- href="xyz.html"\n id="mylink">brown fox</a> jumped
tests/utils_tests/test_text.py:162:52    - Unknown word (mylink)      -- href="xyz.html"\n id="mylink">brow…</a></p>',
tests/utils_tests/test_text.py:188:26    - Unknown word (iacute)      -- "<i>Buenos d&iacute;as! &#x00bf;C&oacute
tests/utils_tests/test_text.py:188:61    - Unknown word (aacute)      -- 0bf;C&oacute;mo est&aacute;?</i>"
tests/utils_tests/test_text.py:191:24    - Unknown word (días)        -- "<i>Buenos días! ¿Cómo está?</i>",
tests/utils_tests/test_text.py:191:31    - Unknown word (Cómo)        -- "<i>Buenos días! ¿Cómo está?</i>",
tests/utils_tests/test_text.py:191:36    - Unknown word (está)        -- i>Buenos días! ¿Cómo está?</i>",
tests/utils_tests/test_text.py:195:24    - Unknown word (días)        -- "<i>Buenos días…</i>",
tests/utils_tests/test_text.py:199:24    - Unknown word (días)        -- "<i>Buenos días! ¿Cómo está…</i>",
tests/utils_tests/test_text.py:199:31    - Unknown word (Cómo)        -- "<i>Buenos días! ¿Cómo está…</i>",
tests/utils_tests/test_text.py:199:36    - Unknown word (está)        -- i>Buenos días! ¿Cómo está…</i>",
tests/utils_tests/test_text.py:257:52    - Unknown word (mylink)      -- href="xyz.html"\n id="mylink">brown fox</a> jumped
tests/utils_tests/test_text.py:261:52    - Unknown word (mylink)      -- href="xyz.html"\n id="mylink">brown…</a></p>',
tests/utils_tests/test_text.py:283:26    - Unknown word (iacute)      -- "<i>Buenos d&iacute;as! &#x00bf;C&oacute
tests/utils_tests/test_text.py:283:61    - Unknown word (aacute)      -- 0bf;C&oacute;mo est&aacute;?</i>"
tests/utils_tests/test_text.py:286:24    - Unknown word (días)        -- "<i>Buenos días! ¿Cómo…</i>",
tests/utils_tests/test_text.py:286:31    - Unknown word (Cómo)        -- "<i>Buenos días! ¿Cómo…</i>",
tests/utils_tests/test_text.py:361:47    - Unknown word (rghi)        -- normalize_newlines("abc\ndef\rghi\r\n"), "abc\ndef\nghi
tests/utils_tests/test_text.py:361:69    - Unknown word (nghi)        -- rghi\r\n"), "abc\ndef\nghi\n"
tests/utils_tests/test_text.py:367:55    - Unknown word (rghi)        -- newlines(lazystr("abc\ndef\rghi\r\n")), "abc\ndef\nghi
tests/utils_tests/test_text.py:367:78    - Unknown word (nghi)        -- rghi\r\n")), "abc\ndef\nghi\n"
tests/utils_tests/test_text.py:388:22    - Unknown word (ıçüş)        -- ("spam & ıçüş", "spam-ıçüş", True
tests/utils_tests/test_text.py:388:35    - Unknown word (ıçüş)        -- spam & ıçüş", "spam-ıçüş", True),
tests/utils_tests/test_text.py:392:15    - Unknown word (İstanbul)    -- ("İstanbul", "istanbul", True)
tests/utils_tests/test_text.py:465:31    - Unknown word (Ajout)       -- self.assertEqual("Ajout de article «\xa0My first
tests/utils_tests/test_text.py:61:26     - Unknown word (Truncator)  -- truncator = text.Truncator("The quick brown fox
tests/utils_tests/test_text.py:61:9      - Unknown word (truncator)  -- truncator = text.Truncator("The
tests/utils_tests/test_text.py:63:62     - Unknown word (truncator)  -- over the lazy dog.", truncator.chars(100)
tests/utils_tests/test_text.py:65:51     - Unknown word (truncator)  -- quick brown fox …", truncator.chars(21))
tests/utils_tests/test_text.py:66:53     - Unknown word (truncator)  -- quick brown fo.....", truncator.chars(23, "....."))
tests/utils_tests/test_text.py:67:35     - Unknown word (truncator)  -- assertEqual(".....", truncator.chars(4, "....."))
tests/utils_tests/test_text.py:69:20     - Unknown word (Truncator)  -- nfc = text.Truncator("o\xfco\xfco\xfco\xfc
tests/utils_tests/test_text.py:69:33     - Unknown word (xfco)       -- = text.Truncator("o\xfco\xfco\xfco\xfc")
tests/utils_tests/test_text.py:69:38     - Unknown word (xfco)       -- text.Truncator("o\xfco\xfco\xfco\xfc")
tests/utils_tests/test_text.py:69:43     - Unknown word (xfco)       -- Truncator("o\xfco\xfco\xfco\xfc")
tests/utils_tests/test_text.py:70:20     - Unknown word (Truncator)  -- nfd = text.Truncator("ou\u0308ou\u0308ou
tests/utils_tests/test_text.py:71:27     - Unknown word (oüoüoüoü)   -- self.assertEqual("oüoüoüoü", nfc.chars(8))
tests/utils_tests/test_text.py:72:27     - Unknown word (oüoüoüoü)   -- self.assertEqual("oüoüoüoü", nfd.chars(8))
tests/utils_tests/test_text.py:77:40     - Unknown word (precomposed) -- combining characters with no precomposed form, and that combining
tests/utils_tests/test_text.py:79:26     - Unknown word (Truncator)   -- truncator = text.Truncator("-B\u030AB\u030A---
tests/utils_tests/test_text.py:85:49     - Unknown word (precomposed) -- combining characters with no precomposed form.
tests/utils_tests/test_text.py:86:26     - Unknown word (Truncator)   -- truncator = text.Truncator("-----")
tests/utils_tests/test_timesince.py:121:31    - Unknown word (minut)      -- "0\xa0minut",
tests/utils_tests/test_timesince.py:15:14     - Unknown word (onesecond)  -- self.onesecond = datetime.timedelta
tests/utils_tests/test_timesince.py:253:39    - Unknown word (onesecond)  -- with_zoneinfo - self.onesecond, "0\xa0minutes"),
tests/utils_tests/test_timesince.py:271:39    - Unknown word (onesecond)  -- with_zoneinfo - self.onesecond, "0\xa0minutes"),
tests/utils_tests/test_timesince.py:33:58     - Unknown word (onesecond)  -- self.t, self.t + self.onesecond), "0\xa0minutes")
tests/utils_tests/test_timesince.py:80:58     - Unknown word (onesecond)  -- self.t, self.t - self.onesecond), "0\xa0minutes")
tests/utils_tests/test_timezone.py:249:14    - Unknown word (fixedoffset) -- def test_fixedoffset_timedelta(self):
tests/utils_tests/test_timezone.py:253:14    - Unknown word (fixedoffset) -- def test_fixedoffset_negative_timedelta(self
tests/validation/models.py:60:5      - Unknown word (cfield)     -- cfield = models.CharField(max
tests/validation/models.py:62:5      - Unknown word (efield)     -- efield = models.EmailField
tests/validation/models.py:68:18     - Unknown word (cfield)     -- "cfield",
tests/validation/models.py:70:25     - Unknown word (efield)     -- ["ifield", "efield"],
tests/validation/models.py:88:51     - Unknown word (AAARGH)     -- : "NULL", "not42": "AAARGH", "not_equal": "%s
tests/validation/test_custom_messages.py:10:80     - Unknown word (AAARGH)     -- full_clean, "number", ["AAARGH"])
tests/validation/test_picklable.py:7:7       - Unknown word (Pickable)   -- class PickableValidationErrorTestCase
tests/validation/test_unique.py:42:55     - Unknown word (cfield)     -- queTogetherModel, ("ifield", "cfield")),
tests/validation/test_unique.py:43:55     - Unknown word (efield)     -- queTogetherModel, ("ifield", "efield")),
tests/validation/tests.py:107:57    - Unknown word (Kocherhans) -- create(name="Joseph Kocherhans")
tests/validation/tests.py:148:9     - Unknown word (giptm)      -- giptm = GenericIPAddressTestModel
tests/validation/tests.py:149:27    - Unknown word (giptm)      -- self.assertIsNone(giptm.full_clean())
tests/validation/tests.py:150:9     - Unknown word (giptm)      -- giptm = GenericIPAddressTestModel
tests/validation/tests.py:151:27    - Unknown word (giptm)      -- self.assertIsNone(giptm.full_clean())
tests/validation/tests.py:152:9     - Unknown word (giptm)      -- giptm = GenericIPAddressTestModel
tests/validation/tests.py:215:70    - Unknown word (fsad)       -- 10.10", generic_ip="fsad"
tests/validation/tests.py:82:32     - Unknown word (charfields) -- test_text_greater_that_charfields_max_length_raises_errors
tests/validators/tests.py:202:6     - Unknown word (rdar)       -- "rdar://1234",
tests/validators/tests.py:204:14    - Unknown word (shouldfail) -- "http:// shouldfail.com",
tests/validators/tests.py:206:33    - Unknown word (quux)       -- foo.bar/foo(bar)baz quux",
tests/validators/tests.py:237:6     - Unknown word (xample)     -- "xample.com",
tests/validators/tests.py:289:48    - Unknown word (उदाहरण)     -- domain.with.idn.tld.उदाहरण.परीक्षा", None),
tests/validators/tests.py:289:55    - Unknown word (परीक्षा)    -- with.idn.tld.उदाहरण.परीक्षा", None),
tests/validators/tests.py:291:33    - Unknown word (localdomain) -- EmailValidator(allowlist=["localdomain"]), "email@localdomain
tests/validators/tests.py:291:56    - Unknown word (localdomain) -- localdomain"]), "email@localdomain", None),
tests/validators/tests.py:298:32    - Unknown word (scom)        -- validate_email, "example@%scom" % (("a" * 63 + "."
tests/validators/tests.py:318:36    - Unknown word (alid)        -- email, "example@inv-.alid-.com", ValidationError
tests/validators/tests.py:319:37    - Unknown word (alid)        -- email, "example@inv-.-alid.com", ValidationError
tests/validators/tests.py:336:22    - Unknown word (nohyphensoranything) -- (validate_slug, "nohyphensoranything", None),
tests/validators/tests.py:351:30    - Unknown word (nohyphensoranything) -- validate_unicode_slug, "nohyphensoranything", None),
tests/validators/tests.py:627:49    - Unknown word (उदाहरण)              -- domain.with.idn.tld.उदाहरण.परीक्ष", None),
tests/validators/tests.py:627:56    - Unknown word (परीक्ष)              -- with.idn.tld.उदाहरण.परीक्ष", None),
tests/validators/tests.py:628:29    - Unknown word (ıçğü)                -- validate_domain_name, "ıçğü.com", None),
tests/validators/tests.py:629:37    - Unknown word (byfyc)               -- domain_name, "xn--7ca6byfyc.com", None),
tests/validators/tests.py:632:29    - Unknown word (djangoproject)       -- validate_domain_name, "djangoproject.com", None),
tests/validators/tests.py:633:29    - Unknown word (DJANGOPROJECT)       -- validate_domain_name, "DJANGOPROJECT.COM", None),
tests/validators/tests.py:650:30    - Unknown word (उदाहरण)              -- domain.with.idn.tld.उदाहरण.परीक्ष",
tests/validators/tests.py:650:37    - Unknown word (परीक्ष)              -- with.idn.tld.उदाहरण.परीक्ष",
tests/validators/tests.py:653:47    - Unknown word (ıçğü)                -- accept_idna=False), "ıçğü.com", ValidationError
tests/validators/tests.py:715:32    - Unknown word (djangoproject)       -- ValidationError, '"djangoproject.com" has more than
tests/validators/tests.py:717:16    - Unknown word (djangoproject)       -- v("djangoproject.com")
tests/view_tests/models.py:41:18     - Unknown word (urlarticles) -- return "/urlarticles/%s/" % self.slug
tests/view_tests/tests/test_csrf.py:33:44     - Unknown word (Verboden)   -- assertContains(response, "Verboden", status_code=403)
tests/view_tests/tests/test_csrf.py:36:23     - Unknown word (verificatie) -- "CSRF-verificatie mislukt. Verzoek afgebroken
tests/view_tests/tests/test_csrf.py:36:35     - Unknown word (mislukt)     -- "CSRF-verificatie mislukt. Verzoek afgebroken
tests/view_tests/tests/test_csrf.py:36:44     - Unknown word (Verzoek)     -- verificatie mislukt. Verzoek afgebroken.",
tests/view_tests/tests/test_csrf.py:36:52     - Unknown word (afgebroken)  -- verificatie mislukt. Verzoek afgebroken.",
tests/view_tests/tests/test_csrf.py:41:17     - Unknown word (referer)     -- def test_no_referer(self):
tests/view_tests/tests/test_csrf.py:43:9      - Unknown word (Referer)     -- Referer header is strictly checked
tests/view_tests/tests/test_csrf.py:44:43     - Unknown word (referer)     -- sending an incorrect referer.
tests/view_tests/tests/test_csrf.py:50:15     - Unknown word (Referer)     -- "“Referer header” to be sent by
tests/view_tests/tests/test_csrf.py:56:62     - Unknown word (Referer)     -- browser to disable “Referer” "
tests/view_tests/tests/test_debug.py:1037:13   - Unknown word (somevar)             -- somevar = b"VAL\xe9VAL"  # NOQA
tests/view_tests/tests/test_debug.py:1068:13   - Unknown word (oomvalue)            -- oomvalue = OomOutput()  # NOQA
tests/view_tests/tests/test_debug.py:1086:13   - Unknown word (largevalue)          -- largevalue = LargeOutput()  # NOQA
tests/view_tests/tests/test_debug.py:1103:39   - Unknown word (mnὀp)                -- safe("abcdefghijkl<p>mnὀp</p>qrstuwxyz").encode
tests/view_tests/tests/test_debug.py:1103:47   - Unknown word (qrstuwxyz)           -- abcdefghijkl<p>mnὀp</p>qrstuwxyz").encode("ascii")
tests/view_tests/tests/test_debug.py:1110:41   - Unknown word (mnὀp)                -- assertIn("<strong>&lt;p&gt;mnὀp&lt;/p&gt;</strong>"
tests/view_tests/tests/test_debug.py:1176:24   - Unknown word (filecontent)         -- fp = StringIO("filecontent")
tests/view_tests/tests/test_debug.py:1315:9    - Unknown word (templ)               -- templ_path = Path(
tests/view_tests/tests/test_debug.py:1324:34   - Unknown word (templ)               -- 3 : " % {"path": templ_path},
tests/view_tests/tests/test_debug.py:1344:24   - Unknown word (filecontent)         -- fp = StringIO("filecontent")
tests/view_tests/tests/test_debug.py:1457:53   - Unknown word (fattie)              -- ADMINS=[("Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1457:60   - Unknown word (breakie)             -- Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1493:53   - Unknown word (fattie)              -- ADMINS=[("Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1493:60   - Unknown word (breakie)             -- Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1536:53   - Unknown word (fattie)              -- ADMINS=[("Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1536:60   - Unknown word (breakie)             -- Admin", "admin@fattie-breakie.com")]):
tests/view_tests/tests/test_debug.py:1925:45   - Unknown word (djangosession)       -- SESSION_COOKIE_NAME="djangosession")
tests/view_tests/tests/test_debug.py:1927:36   - Unknown word (djangosession)       -- client.cookies.load({"djangosession": "should not be displayed
tests/view_tests/tests/test_debug.py:596:55    - Unknown word (pasteform)  -- /dpaste.com/" name="pasteform" '
tests/view_tests/tests/test_debug.py:597:18    - Unknown word (pasteform)  -- 'id="pasteform" method="post">',
tests/view_tests/tests/test_debug.py:70:8      - Unknown word (Unittests)  -- """Unittests for CallableSettingWrapper
tests/view_tests/tests/test_debug.py:790:34    - Unknown word (pastebin)   -- one as plain text (for pastebin)
tests/view_tests/tests/test_debug.py:806:28    - Unknown word (PYTHONNODEBUGRANGES) -- or os.environ.get("PYTHONNODEBUGRANGES", False),
tests/view_tests/tests/test_debug.py:842:11    - Unknown word (Pastebin)            -- # Pastebin.
tests/view_tests/tests/test_debug.py:92:68     - Unknown word (haha)       -- loadedFile("file_data.txt", b"haha"),
tests/view_tests/tests/test_debug.py:97:43     - Unknown word (haha)       -- assertNotContains(response, "haha", status_code=500)
tests/view_tests/tests/test_defaults.py:170:50    - Unknown word (urlarticle) -- objects.get(pk=self.urlarticle.pk)
tests/view_tests/tests/test_defaults.py:49:13     - Unknown word (urlarticle) -- cls.urlarticle = UrlArticle.objects
tests/view_tests/tests/test_i18n.py:134:22    - Unknown word (doesnt)     -- def test_setlang_doesnt_perform_a_redirect_to
tests/view_tests/tests/test_i18n.py:141:26    - Unknown word (REFERER)    -- headers = {"HTTP_REFERER": "/", "HTTP_ACCEPT
tests/view_tests/tests/test_i18n.py:148:22    - Unknown word (doesnt)     -- def test_setlang_doesnt_perform_a_default_redirect
tests/view_tests/tests/test_i18n.py:186:38    - Unknown word (mylanguage) -- LANGUAGE_COOKIE_NAME": "mylanguage",
tests/view_tests/tests/test_i18n.py:197:53    - Unknown word (mylanguage) -- response.cookies.get("mylanguage")
tests/view_tests/tests/test_i18n.py:208:48    - Unknown word (REFERER)    -- view decodes the HTTP_REFERER URL and preserves an
tests/view_tests/tests/test_i18n.py:239:45    - Unknown word (vertaald)   -- ssertRedirects(response, "/nl/vertaald/")
tests/view_tests/tests/test_i18n.py:245:38    - Unknown word (vertaald)   -- headers={"referer": "/nl/vertaald/"},
tests/view_tests/tests/test_i18n.py:268:48    - Unknown word (djangojs)   -- gettext.translation("djangojs", locale_dir, [lang
tests/view_tests/tests/test_i18n.py:279:45    - Unknown word (msgctxt)    -- Message with context (msgctxt)
tests/view_tests/tests/test_i18n.py:292:14    - Unknown word (jsoni)      -- def test_jsoni18n(self):
tests/view_tests/tests/test_i18n.py:297:42    - Unknown word (jsoni)      -- = self.client.get("/jsoni18n/")
tests/view_tests/tests/test_i18n.py:323:47    - Unknown word (esto)       -- assertNotContains(response, "esto tiene que ser traducido
tests/view_tests/tests/test_i18n.py:323:52    - Unknown word (tiene)      -- rtNotContains(response, "esto tiene que ser traducido")
tests/view_tests/tests/test_i18n.py:323:66    - Unknown word (traducido)  -- "esto tiene que ser traducido")
tests/view_tests/tests/test_i18n.py:325:14    - Unknown word (jsoni)      -- def test_jsoni18n_with_missing_en_files
tests/view_tests/tests/test_i18n.py:331:42    - Unknown word (jsoni)      -- = self.client.get("/jsoni18n/")
tests/view_tests/tests/test_i18n.py:347:55    - Unknown word (traduire)   -- response, "il faut le traduire")
tests/view_tests/tests/test_i18n.py:364:48    - Unknown word (esto)       -- custom_locale_path: esto tiene que ser traducido
tests/view_tests/tests/test_i18n.py:364:53    - Unknown word (tiene)      -- custom_locale_path: esto tiene que ser traducido"
tests/view_tests/tests/test_i18n.py:364:67    - Unknown word (traducido)  -- esto tiene que ser traducido"
tests/view_tests/tests/test_i18n.py:368:48    - Unknown word (esto)       -- custom_locale_path: esto tiene que ser traducido
tests/view_tests/tests/test_i18n.py:368:53    - Unknown word (tiene)      -- custom_locale_path: esto tiene que ser traducido"
tests/view_tests/tests/test_i18n.py:368:67    - Unknown word (traducido)  -- esto tiene que ser traducido"
tests/view_tests/tests/test_i18n.py:414:47    - Unknown word (Choisir)    -- assertNotContains(response, "Choisir une heure")
tests/view_tests/tests/test_i18n.py:414:59    - Unknown word (heure)      -- response, "Choisir une heure")
tests/view_tests/tests/test_i18n.py:417:42    - Unknown word (userpref)   -- english_default_english_userpref(self):
tests/view_tests/tests/test_i18n.py:42:52     - Unknown word (referer)    -- post_data, headers={"referer": "/i_should_not_be
tests/view_tests/tests/test_i18n.py:434:44    - Unknown word (Choisir)    -- assertContains(response, "Choisir une heure")
tests/view_tests/tests/test_i18n.py:434:56    - Unknown word (heure)      -- response, "Choisir une heure")
tests/view_tests/tests/test_i18n.py:449:53    - Unknown word (udca)       -- response, "\\ud83d\\udca9")
tests/view_tests/tests/test_i18n.py:456:57    - Unknown word (djangojs)   -- catalog composed by djangojs domain
tests/view_tests/tests/test_i18n.py:461:22    - Unknown word (traduire)   -- "il faut traduire cette cha\\u00eene de
tests/view_tests/tests/test_i18n.py:461:31    - Unknown word (cette)      -- "il faut traduire cette cha\\u00eene de caract
tests/view_tests/tests/test_i18n.py:461:45    - Unknown word (eene)       -- traduire cette cha\\u00eene de caract\\u00e8res
tests/view_tests/tests/test_i18n.py:461:53    - Unknown word (caract)     -- cette cha\\u00eene de caract\\u00e8res de "
tests/view_tests/tests/test_i18n.py:486:49    - Unknown word (texto)      -- ssertContains(response, "este texto de app3 debe ser traducido
tests/view_tests/tests/test_i18n.py:486:63    - Unknown word (debe)       -- "este texto de app3 debe ser traducido")
tests/view_tests/tests/test_i18n.py:486:72    - Unknown word (traducido)  -- texto de app3 debe ser traducido")
tests/view_tests/tests/test_i18n.py:499:53    - Unknown word (texto)      -- ssertContains(response, "este texto de app3 debe ser traducido
tests/view_tests/tests/test_i18n.py:499:67    - Unknown word (debe)       -- "este texto de app3 debe ser traducido")
tests/view_tests/tests/test_i18n.py:499:76    - Unknown word (traducido)  -- texto de app3 debe ser traducido")
tests/view_tests/tests/test_i18n.py:542:38    - Unknown word (Entfernen)  -- assertEqual(elem.text, "Entfernen")
tests/view_tests/tests/test_i18n.py:546:42    - Unknown word (Elemente)   -- assertEqual(elem.text, "455 Elemente")
tests/view_tests/tests/test_i18n.py:547:60    - Unknown word (onnonplural) -- element(By.ID, "ngettext_onnonplural")
tests/view_tests/tests/test_i18n.py:548:38    - Unknown word (Bild)        -- assertEqual(elem.text, "Bild")
tests/view_tests/tests/test_i18n.py:550:38    - Unknown word (Kann)        -- assertEqual(elem.text, "Kann")
tests/view_tests/tests/test_i18n.py:552:40    - Unknown word (Resultat)    -- assertEqual(elem.text, "1 Resultat")
tests/view_tests/tests/test_i18n.py:554:42    - Unknown word (Resultate)   -- assertEqual(elem.text, "455 Resultate")
tests/view_tests/tests/test_i18n.py:570:33    - Unknown word (traduire)    -- elem.text, "il faut traduire cette chaîne de caract
tests/view_tests/tests/test_i18n.py:570:42    - Unknown word (cette)       -- text, "il faut traduire cette chaîne de caractères
tests/view_tests/tests/test_i18n.py:570:48    - Unknown word (chaîne)      -- faut traduire cette chaîne de caractères de app
tests/view_tests/tests/test_i18n.py:570:58    - Unknown word (caractères)  -- traduire cette chaîne de caractères de app1"
tests/view_tests/tests/test_i18n.py:574:33    - Unknown word (traduire)    -- elem.text, "il faut traduire cette chaîne de caract
tests/view_tests/tests/test_i18n.py:574:42    - Unknown word (cette)       -- text, "il faut traduire cette chaîne de caractères
tests/view_tests/tests/test_i18n.py:574:48    - Unknown word (chaîne)      -- faut traduire cette chaîne de caractères de app
tests/view_tests/tests/test_i18n.py:574:58    - Unknown word (caractères)  -- traduire cette chaîne de caractères de app2"
tests/view_tests/tests/test_i18n.py:82:32     - Unknown word (referer)    -- Insecure URL in HTTP referer.
tests/view_tests/tests/test_i18n.py:84:54     - Unknown word (referer)    -- secure=True, headers={"referer": non_https_next_url
tests/view_tests/tests/test_i18n.py:91:34     - Unknown word (referer)    -- setlang_redirect_to_referer(self):
tests/view_tests/tests/test_i18n.py:93:59     - Unknown word (referer)    -- redirects to the URL in the referer header when
tests/view_tests/urls.py:56:11     - Unknown word (jsoni)      -- path("jsoni18n/", i18n.JSONCatalog
tests/view_tests/views.py:335:7     - Unknown word (Klass)      -- class Klass:
tests/view_tests/views.py:389:12    - Unknown word (Klass)      -- return Klass().method(request)
tests/view_tests/views.py:393:18    - Unknown word (Klass)      -- return await Klass().async_method(request
tests/view_tests/views.py:397:18    - Unknown word (Klass)      -- return await Klass().async_method_nested
