
Repository: eslint/eslint
Url: "https://github.com/eslint/eslint"
Args: ["**","--exclude=bin/**","--exclude=CHANGELOG.md","--exclude=_data","--exclude=tests/bench/large.js","--exclude=docs/src/_includes","--exclude=docs/src/assets/{fonts,s?css,images}"]
Lines:
 CSpell: Files checked: 1814, Issues found: 5398 in 1226 files
 exit code: 1
./LICENSE:1:58      - Unknown word (openjsf)    -- other contributors, <www.openjsf.org>
./Makefile.js:144:88    - Unknown word (ined)               -- followed by the string "ined".
./Makefile.js:150:48    - Unknown word (blogpost)           -- render(cat("./templates/blogpost.md.ejs"), renderContext
./Makefile.js:286:12    - Unknown word (gensite)            -- target.gensite();
./Makefile.js:319:8     - Unknown word (Premajor)           -- * Premajor release should have
./Makefile.js:320:21    - Unknown word (prepatch)           -- * Preminor and prepatch release will not.
./Makefile.js:320:8     - Unknown word (Preminor)           -- * Preminor and prepatch release
./Makefile.js:328:56    - Unknown word (preminor)           -- a major release (not preminor/prepatch).
./Makefile.js:560:11    - Unknown word (fuzzer)             -- const fuzzerRunner = require("./tools
./Makefile.js:76:88     - Unknown word (markdownlintignore) -- path.join(__dirname, ".markdownlintignore"), "utf-8")),
./Makefile.js:80:10     - Unknown word (MULTIFILES)         -- PERF_MULTIFILES_TARGET_DIR = path.join
./Makefile.js:910:18    - Unknown word (Multifiles)         -- function downloadMultifilesTestTarget(cb) {
./README.md:204:5     - Unknown word (teamstart)  -- <!--teamstart-->
./README.md:223:7     - Unknown word (Djermanovic) -- Milos Djermanovic
./README.md:239:1     - Unknown word (Nitin)       -- Nitin Kumar
./README.md:239:7     - Unknown word (Kumar)       -- Nitin Kumar
./README.md:250:7     - Unknown word (Zamir)       -- Brett Zamir
./README.md:255:7     - Unknown word (Mishkin)     -- Bryan Mishkin
./README.md:260:6     - Unknown word (Soueidan)    -- Sara Soueidan
./README.md:270:1     - Unknown word (Anix)        -- Anix
./README.md:275:1     - Unknown word (Yeon)        -- YeonJuan
./README.md:279:5     - Unknown word (teamend)     -- <!--teamend-->
./README.md:286:5     - Unknown word (sponsorsstart) -- <!--sponsorsstart-->
./README.md:291:252   - Unknown word (Nrwl)          -- logo.png" alt="Nx (by Nrwl)" height="32"></a>
./README.md:292:5     - Unknown word (sponsorsend)   -- <!--sponsorsend-->
./conf/config-schema.js:14:5      - Unknown word (fileoverview) -- * @fileoverview Defines a schema for
./conf/config-schema.js:8:63      - Unknown word (nzakas)     -- file, please contact @nzakas first.
./conf/eslint-recommended.js:49:13     - Unknown word (nonoctal)   -- "no-nonoctal-decimal-escape": "error
./conf/eslint-recommended.js:68:21     - Unknown word (backreference) -- "no-useless-backreference": "error",
./conf/eslint-recommended.js:73:14     - Unknown word (isnan)         -- "use-isnan": "error",
./conf/replacements.json:12:36     - Unknown word (parens)     -- wrap-func": ["no-extra-parens"],
./conf/replacements.json:13:62     - Unknown word (paren)      -- space-before-function-paren"],
./docs/README.md:34:14     - Unknown word (docsjs)     -- npm run lint:docsjs
./docs/README.md:37:4      - Unknown word (autofix)    -- To autofix JS files, run this from
./docs/package.json:19:23     - Unknown word (stylelint)  -- "lint:scss": "stylelint \"**/*.{scss,html}\
./docs/package.json:27:32     - Unknown word (syntaxhighlight) -- 1ty/eleventy-plugin-syntaxhighlight": "^3.1.2",
./docs/package.json:29:10     - Unknown word (algoliasearch)   -- "algoliasearch": "^4.12.1",
./docs/package.json:38:10     - Unknown word (luxon)           -- "luxon": "^2.4.0",
./docs/src/about/index.md:11:146    - Unknown word (pluggable)  -- all rules completely pluggable. The default rules are
./docs/src/about/index.md:7:87      - Unknown word (Zakas)      -- created by Nicholas C. Zakas in June 2013. Code
./docs/src/assets/js/components-index.js:17:14     - Unknown word (toggleindex) -- function toggleindex(e) {
./docs/src/assets/js/css-vars-ponyfill@2.js:2:13      - Unknown word (ponyfill)   -- * css-vars-ponyfill
./docs/src/assets/js/css-vars-ponyfill@2.js:5:23      - Unknown word (Hildenbiddle) -- (c) 2018-2019 John Hildenbiddle <http://hildenbiddle
./docs/src/assets/js/css-vars-ponyfill@2.js:8:10158   - Unknown word (CSSVARSPONYFILL) -- e.comment.indexOf("__CSSVARSPONYFILL")?"/*"+e.comment+"*
./docs/src/assets/js/css-vars-ponyfill@2.js:8:14683   - Unknown word (cssvars)         -- e.hasAttribute("data-cssvars"),n=function(e){return
./docs/src/assets/js/focus-visible.js:26:5      - Unknown word (datetime)   -- datetime: true,
./docs/src/assets/js/focus-visible.js:31:46     - Unknown word (iframes)    -- legacy browsers and iframes which sometimes focus
./docs/src/assets/js/main.js:215:13    - Unknown word (setupindex) -- setupindexToggles(indexToggles
./docs/src/assets/js/main.js:244:27    - Unknown word (labelledby) -- "aria-labelledby",
./docs/src/assets/js/main.js:253:17    - Unknown word (thepanel)   -- var thepanel = toggleButton.nextElementSib
./docs/src/assets/js/main.js:66:51     - Unknown word (togglenav)  -- addEventListener("click", togglenav, false);
./docs/src/assets/js/tabs.js:164:10    - Unknown word (unactivate) -- // unactivate all other tabs
./docs/src/assets/js/tabs.js:167:27    - Unknown word (tabindex)   -- tab.setAttribute('tabindex', '-1');
./docs/src/assets/js/tabs.js:174:11    - Unknown word (Tabpanel)   -- showTabpanel(tab);
./docs/src/assets/js/tabs.js:225:9     - Unknown word (incrementcurrent) -- var incrementcurrentIndex = function ()
./docs/src/assets/js/tabs.js:236:9     - Unknown word (decrementcurrent) -- var decrementcurrentIndex = function ()
./docs/src/assets/js/tabs.js:95:9      - Unknown word (tablist)    -- var tablist = el.querySelector(
./docs/src/assets/js/tabs.js:97:59     - Unknown word (tabpanel)   -- querySelectorAll("[data-tabpanel]"));
./docs/src/assets/js/tabs.js:97:9      - Unknown word (tabpanels)  -- var tabpanels = Array.from(el.querySelector
./docs/src/assets/scss/carbon-ads.scss:7:2       - Unknown word (carbonads)  -- #carbonads * {
./docs/src/assets/scss/carbon-ads.scss:81:20     - Unknown word (poweredby)  -- #carbonads .carbon-poweredby {
./docs/src/assets/scss/components/docs-navigation.scss:27:6      - Unknown word (flexer)     -- .flexer {
./docs/src/assets/scss/components/search.scss:153:10    - Unknown word (docsearch)  -- .algolia-docsearch-suggestion--highlight
./docs/src/assets/scss/docs.scss:120:216   - Unknown word (Cpath)      -- fill='%23ECFDF3'/%3E%3Cpath d='M30.5 16L19.5 27L
./docs/src/assets/scss/docs.scss:120:339   - Unknown word (Crect)      -- linejoin='round'/%3E%3Crect x='1.5' y='1' width
./docs/src/assets/scss/docs.scss:120:44    - Unknown word (Csvg)       -- data:image/svg+xml,%3Csvg width='45' height='
./docs/src/assets/scss/docs.scss:148:6     - Unknown word (anchorjs)   -- .anchorjs-link {
./docs/src/assets/scss/syntax-highlighter.scss:117:35    - Unknown word (nums)       -- variant-numeric: tabular-nums;
./docs/src/assets/scss/syntax-highlighter.scss:84:8      - Unknown word (atrule)     -- .token.atrule,
./docs/src/developer-guide/architecture/index.md:65:264    - Unknown word (espree)     -- the given text with `espree` (or whatever the configured
./docs/src/developer-guide/architecture/index.md:67:29     - Unknown word (estraverse) -- the AST is available, `estraverse` is used to traverse
./docs/src/developer-guide/code-path-analysis.md:362:5     - Unknown word (hoge)       -- hoge();
./docs/src/developer-guide/code-path-analysis.md:407:9     - Unknown word (fuga)       -- fuga();
./docs/src/developer-guide/contributing/new-rules.md:42:149    - Unknown word (roadmap)    -- focus on the overall roadmap. Once a rule is accepted
./docs/src/developer-guide/contributing/working-on-issues.md:13:588    - Unknown word (bikeshedding) -- evaluating`, and/or `needs bikeshedding`, and issues that cannot
./docs/src/developer-guide/nodejs-api.md:121:7     - Unknown word (Autofix)    -- ##### Autofix
./docs/src/developer-guide/nodejs-api.md:169:35    - Unknown word (omittable)  -- parameter `options` is omittable.
./docs/src/developer-guide/nodejs-api.md:436:35    - Unknown word (Fvar)       -- new SourceCode("\uFEFFvar foo = bar;", ast);
./docs/src/developer-guide/nodejs-api.md:46:29     - Unknown word (autofixes)  -- here is an example that autofixes lint problems:
./docs/src/developer-guide/nodejs-api.md:493:8     - Unknown word (preprocess) -- * `preprocess` - (optional) A function
./docs/src/developer-guide/nodejs-api.md:494:8     - Unknown word (postprocess) -- * `postprocess` - (optional) A function
./docs/src/developer-guide/nodejs-api.md:599:161   - Unknown word (autofixed)   -- object will contain the autofixed code, along with any
./docs/src/developer-guide/nodejs-api.md:599:59    - Unknown word (autofixing)  -- except that it also runs autofixing logic, similar to the
./docs/src/developer-guide/package-json-conventions.md:13:38     - Unknown word (EBNF)       -- summary of the proposal in EBNF.
./docs/src/developer-guide/package-json-conventions.md:15:4      - Unknown word (ebnf)       -- ```ebnf
./docs/src/developer-guide/package-json-conventions.md:18:121    - Unknown word (postpack)    -- postprepare | prepack | postpack | prepublishOnly;
./docs/src/developer-guide/package-json-conventions.md:18:24     - Unknown word (preinstall) -- life-cycle = prepare | preinstall | install | postinstall
./docs/src/developer-guide/package-json-conventions.md:18:74     - Unknown word (preprepare) -- postinstall | prepublish | preprepare | prepare | postprepare
./docs/src/developer-guide/package-json-conventions.md:18:97     - Unknown word (postprepare) -- preprepare | prepare | postprepare | prepack | postpack
./docs/src/developer-guide/scope-manager-interface.md:219:100   - Unknown word (redeclared) -- If this variable is redeclared, this array includes
./docs/src/developer-guide/scope-manager-interface.md:7:125     - Unknown word (escope)     -- eslint-scope), a fork of [escope](https://github.com
./docs/src/developer-guide/selectors.md:141:406   - Unknown word (Fpath)      -- `[value=/some\\u002Fpath/]`.
./docs/src/developer-guide/selectors.md:55:58     - Unknown word (esquery)    -- were adapted from the [esquery](https://github.com
./docs/src/developer-guide/shareable-configs.md:16:281    - Unknown word (myconfig)   -- such as `eslint-config-myconfig`.
./docs/src/developer-guide/shareable-configs.md:40:186    - Unknown word (eslintconfig) -- using the `eslint` and `eslintconfig` keywords so others
./docs/src/developer-guide/working-with-custom-formatters.md:250:14    - Unknown word (concat)          -- .concat(summary.warnings)
./docs/src/developer-guide/working-with-custom-formatters.md:390:61    - Unknown word (Guake)           -- www.iterm2.com/) or [Guake](http://guake-project
./docs/src/developer-guide/working-with-custom-formatters.md:57:9      - Unknown word (eslintformatter) -- * `"eslintformatter"`
./docs/src/developer-guide/working-with-custom-formatters.md:95:29     - Unknown word (Gruntfile)       -- filePath: "/path/to/Gruntfile.js",
./docs/src/developer-guide/working-with-custom-parsers.md:58:44     - Unknown word (rewritable) -- of all nodes must be rewritable. ESLint sets each node
./docs/src/developer-guide/working-with-plugins.md:116:107   - Unknown word (autofixable) -- reported problems. All autofixable problems will have a
./docs/src/developer-guide/working-with-plugins.md:243:4     - Unknown word (eslintplugin) -- * `eslintplugin`
./docs/src/developer-guide/working-with-plugins.md:34:162    - Unknown word (myplugin)   -- named `eslint-plugin-myplugin`, then in your configuration
./docs/src/developer-guide/working-with-plugins.md:34:46     - Unknown word (unprefixed) -- ESLint, you would use the unprefixed plugin name, followed
./docs/src/developer-guide/working-with-plugins.md:5:23      - Unknown word (plugings)   -- key: working with plugings
./docs/src/developer-guide/working-with-rules-deprecated.md:154:4     - Unknown word (endraw)     -- {% endraw %}
./docs/src/developer-guide/working-with-rules-deprecated.md:443:36    - Unknown word (doublequote) -- ["Strings must use doublequote."]
./docs/src/developer-guide/working-with-rules-deprecated.md:534:1     - Unknown word (camelcase)   -- camelcase |
./docs/src/developer-guide/working-with-rules-deprecated.md:581:88    - Unknown word (rulesdir)    -- interface) using the `--rulesdir` option to specify the
./docs/src/developer-guide/working-with-rules.md:436:79    - Unknown word (multipass)  -- without triggering multipass fixes. Each suggestion
./docs/src/library/alert.md:9:12      - Unknown word (shortcode)  -- There is a shortcode for each type of alert
./docs/src/maintainer-guide/governance.md:151:64    - Unknown word (Tweetdeck)     -- ESLint Twitter Account on Tweetdeck
./docs/src/maintainer-guide/governance.md:74:35     - Unknown word (committership) -- important to recognize that committership is a privilege, not
./docs/src/maintainer-guide/governance.md:88:106    - Unknown word (triaging)      -- the project through triaging of issues, fixing bugs
./docs/src/maintainer-guide/issues.md:32:4      - Unknown word (Triaging)   -- ## Triaging Process
./docs/src/maintainer-guide/releases.md:15:3      - Unknown word (Prereleases) -- * Prereleases that are not considered
./docs/src/pages/component-library.html:7:45      - Unknown word (shortcodes) -- on the left includes shortcodes, macros and partials
./docs/src/pages/rules.md:49:9      - Unknown word (endfor)     -- {%- endfor -%}
./docs/src/rules/accessor-pairs.md:268:7     - Unknown word (Quux)       -- const Quux = class {
./docs/src/rules/array-bracket-newline.md:23:138    - Unknown word (linebreak)  -- bracket in the pair has a linebreak inside it and the other
./docs/src/rules/array-bracket-newline.md:23:47     - Unknown word (linebreaks) -- consistent usage of linebreaks for each pair of brackets
./docs/src/rules/array-bracket-newline.md:45:5      - Unknown word (dosomething) -- dosomething();
./docs/src/rules/arrow-body-style.md:49:12     - Unknown word (retv)       -- let foo = (retv, name) => {
./docs/src/rules/arrow-parens.md:137:15    - Unknown word (falsey)     -- console.log('falsey value returned');
./docs/src/rules/arrow-parens.md:16:79     - Unknown word (arity)      -- parameters regardless of arity. For example:
./docs/src/rules/brace-style.md:26:54     - Unknown word (Stroustrup) -- brace style is called Stroustrup, in which the `else
./docs/src/rules/brace-style.md:37:26     - Unknown word (Allman)     -- Another style is called [Allman](https://en.wikipedia
./docs/src/rules/brace-style.md:61:5      - Unknown word (stroustrup) -- * `"stroustrup"` enforces Stroustrup
./docs/src/rules/brace-style.md:62:5      - Unknown word (allman)     -- * `"allman"` enforces Allman style
./docs/src/rules/callback-return.md:153:163   - Unknown word (IIFE)       -- function expression (IIFE).
./docs/src/rules/camelcase.md:37:13     - Unknown word (camelcased) -- import { no_camelcased } from "external-module
./docs/src/rules/camelcase.md:53:18     - Unknown word (Camelcased) -- function foo({ isCamelcased: no_camelcased }) {
./docs/src/rules/capitalized-comments.md:273:84    - Unknown word (blockignore) -- { "ignorePattern": "blockignore" } }] */
./docs/src/rules/comma-dangle.md:14:11     - Unknown word (quux)       -- qux: "quux",
./docs/src/rules/complexity.md:22:1      - Unknown word (Cyclomatic) -- Cyclomatic complexity measures
./docs/src/rules/complexity.md:22:133    - Unknown word (cyclomatic) -- rule allows setting a cyclomatic complexity threshold
./docs/src/rules/consistent-return.md:77:16     - Unknown word (instanceof) -- if (!(this instanceof Foo)) {
./docs/src/rules/eqeqeq.md:2:8       - Unknown word (eqeqeq)     -- title: eqeqeq
./docs/src/rules/eqeqeq.md:40:150    - Unknown word (typeof)     -- of the operands is a `typeof` expression, or if both
./docs/src/rules/generator-star-spacing.md:86:40     - Unknown word (configurability) -- rule allows further configurability via overrides per function
./docs/src/rules/guard-for-in.md:6:16      - Unknown word (builtins)   -- - no-prototype-builtins
./docs/src/rules/id-denylist.md:8:102     - Unknown word (Karlton)    -- naming things." — Phil Karlton
./docs/src/rules/indent-legacy.md:29:16     - Unknown word (Crockford)  -- * Four spaces: Crockford
./docs/src/rules/indent-legacy.md:403:8     - Unknown word (boop)        -- qux, boop) {
./docs/src/rules/indent-legacy.md:92:76     - Unknown word (declarators) -- indentation level for `var` declarators; can also take an object
./docs/src/rules/indent-legacy.md:93:76     - Unknown word (IIFEs)       -- level for file-level IIFEs.
./docs/src/rules/key-spacing.md:195:5     - Unknown word (bcde)       -- bcde: 42,
./docs/src/rules/key-spacing.md:217:5     - Unknown word (ijkl)       -- ijkl: 'Non-consecutive lines
./docs/src/rules/max-lines-per-function.md:32:45     - Unknown word (dbname)     -- return m("tr", {key: db.dbname}, [
./docs/src/rules/no-buffer-constructor.md:14:407    - Unknown word (alloc)      -- Buffer.from`, `Buffer.alloc`, and `Buffer.allocUnsafe
./docs/src/rules/no-cond-assign.md:2:11      - Unknown word (cond)       -- title: no-cond-assign
./docs/src/rules/no-confusing-arrow.md:69:21     - Unknown word (Parens)     -- { "allowParens": true, "onlyOneSimpleParam
./docs/src/rules/no-dupe-else-if.md:64:5      - Unknown word (quuux)      -- quuux();
./docs/src/rules/no-dupe-keys.md:56:5      - Unknown word (quxx)       -- quxx: "qux"
./docs/src/rules/no-duplicate-imports.md:56:8      - Unknown word (mergeable)  -- // not mergeable
./docs/src/rules/no-eq-null.md:62:41     - Unknown word (eqnull)     -- rule corresponds to `eqnull` rule of JSHint.
./docs/src/rules/no-extend-native.md:75:34     - Unknown word (muhahaha)   -- prototype.forEach = 'muhahaha'");
./docs/src/rules/no-extra-parens.md:22:172    - Unknown word (iife)       -- conflicts with the [wrap-iife](wrap-iife) rule
./docs/src/rules/no-fallthrough.md:60:12     - Unknown word (fallsthrough) -- // fallsthrough
./docs/src/rules/no-implicit-globals.md:120:26    - Unknown word (redeclarations) -- rule also disallows redeclarations of read-only global
./docs/src/rules/no-implicit-globals.md:25:3      - Unknown word (Redeclarations) -- * Redeclarations of read-only global
./docs/src/rules/no-irregular-whitespace.md:39:2      - Unknown word (ufeff)      -- \ufeff - Zero Width No-Break
./docs/src/rules/no-irregular-whitespace.md:51:30     - Unknown word (ZWSP)       -- Zero Width Space - <ZWSP>
./docs/src/rules/no-loop-func.md:12:5      - Unknown word (funcs)      -- funcs[i] = function() {
./docs/src/rules/no-new-native-nonconstructor.md:2:22      - Unknown word (nonconstructor) -- title: no-new-native-nonconstructor
./docs/src/rules/no-new-native-nonconstructor.md:65:11     - Unknown word (corge)          -- const corge = new BigInt(900719
./docs/src/rules/no-param-reassign.md:165:14    - Unknown word (barrito)    -- function foo(barrito) {
./docs/src/rules/no-plusplus.md:2:11      - Unknown word (plusplus)   -- title: no-plusplus
./docs/src/rules/no-proto.md:2:11      - Unknown word (proto)      -- title: no-proto
./docs/src/rules/no-prototype-builtins.md:11:216    - Unknown word (webserver)  -- would be unsafe for a webserver to parse JSON input
./docs/src/rules/no-redeclare.md:71:41     - Unknown word (redeclaration) -- this rule also checks redeclaration of built-in globals
./docs/src/rules/no-restricted-globals.md:29:54     - Unknown word (fdescribe)  -- ["error", "event", "fdescribe"]
./docs/src/rules/no-restricted-imports.md:126:154   - Unknown word (punycode)   -- ,"net","os","path","punycode","querystring","readline
./docs/src/rules/no-restricted-imports.md:126:165   - Unknown word (querystring) -- ,"path","punycode","querystring","readline","repl",
./docs/src/rules/no-restricted-imports.md:126:179   - Unknown word (readline)    -- punycode","querystring","readline","repl","smalloc","stream
./docs/src/rules/no-restricted-imports.md:126:197   - Unknown word (smalloc)     -- ,"readline","repl","smalloc","stream","string_decoder
./docs/src/rules/no-restricted-imports.md:126:64    - Unknown word (dgram)      -- "cluster","crypto","dgram","dns","domain","events
./docs/src/rules/no-restricted-imports.md:126:96    - Unknown word (freelist)   -- ,"domain","events","freelist","fs","http","https
./docs/src/rules/no-restricted-syntax.md:67:5      - Unknown word (dont)       -- dontMess();
./docs/src/rules/no-return-await.md:11:172    - Unknown word (microtask)  -- the cost of an extra microtask before resolving the
./docs/src/rules/no-script-url.md:30:41     - Unknown word (scripturl)  -- rule corresponds to `scripturl` rule of JSHint.
./docs/src/rules/no-unexpected-multiline.md:15:78     - Unknown word (Schlueter)  -- once described by Isaac Schlueter, a newline character
./docs/src/rules/no-unsafe-finally.md:120:22    - Unknown word (hola)       -- console.log("hola!");
./docs/src/rules/no-unsafe-finally.md:45:69     - Unknown word (rethrown)   -- block is caught and rethrown
./docs/src/rules/no-unused-vars.md:161:67    - Unknown word (gnored)       -- varsIgnorePattern": "[iI]gnored" }` option:
./docs/src/rules/no-unused-vars.md:56:31     - Unknown word (destructures) -- function definition destructures an array, unused entries
./docs/src/rules/no-use-before-define.md:161:21    - Unknown word (nofunc)     -- This rule accepts `"nofunc"` string as an option
./docs/src/rules/no-useless-backreference.md:15:337    - Unknown word (lookaround) -- is inside a negative lookaround. However, by the specificatio
./docs/src/rules/no-useless-backreference.md:17:1      - Unknown word (Backreferences) -- Backreferences that always successfully
./docs/src/rules/no-useless-backreference.md:37:53     - Unknown word (backreferences) -- disallow the following backreferences in regular expression
./docs/src/rules/no-useless-backreference.md:39:3      - Unknown word (Backreference)  -- * Backreference to a group that is in
./docs/src/rules/no-useless-backreference.md:40:178    - Unknown word (lookbehinds)    -- forward references. Inside lookbehinds, which match backward
./docs/src/rules/nonblock-statement-body-position.md:2:8       - Unknown word (nonblock)   -- title: nonblock-statement-body-position
./docs/src/rules/object-property-newline.md:125:24    - Unknown word (colocation) -- The rule prohibits the colocation on any line of at least
./docs/src/rules/object-property-newline.md:129:31    - Unknown word (Europese)   -- Officiële website van de Europese Unie',
./docs/src/rules/object-property-newline.md:129:40    - Unknown word (Unie)       -- website van de Europese Unie',
./docs/src/rules/object-property-newline.md:129:6     - Unknown word (Officiële)  -- 'Officiële website van de Europese
./docs/src/rules/object-property-newline.md:130:16    - Unknown word (уебсайт)    -- 'Официален уебсайт на Европейския съюз
./docs/src/rules/object-property-newline.md:130:27    - Unknown word (Европейския) -- фициален уебсайт на Европейския съюз'
./docs/src/rules/object-property-newline.md:130:39    - Unknown word (съюз)        -- сайт на Европейския съюз'
./docs/src/rules/object-property-newline.md:130:6     - Unknown word (Официален)  -- 'Официален уебсайт на Европейс
./docs/src/rules/object-property-newline.md:213:12    - Unknown word (antidisestablishmentarianistically) -- const a = "antidisestablishmentarianistically";
./docs/src/rules/object-property-newline.md:214:12    - Unknown word (yugoslavyalılaştırabildiklerimizdenmişsiniz) -- const b = "yugoslavyalılaştırabildiklerimizdenmişsiniz";
./docs/src/rules/object-property-newline.md:220:29    - Unknown word (complexdomain)                               -- domain.includes(":") ? "complexdomain" : "simpledomain"
./docs/src/rules/object-property-newline.md:220:47    - Unknown word (simpledomain)                                -- "complexdomain" : "simpledomain"
./docs/src/rules/object-property-newline.md:75:12     - Unknown word (bazz)       -- + bar: "bazz",
./docs/src/rules/one-var.md:722:38    - Unknown word (onevar)     -- This rule maps to the `onevar` JSHint rule, but allows
./docs/src/rules/one-var.md:82:9      - Unknown word (norf)       -- let norf;
./docs/src/rules/padding-line-between-statements.md:38:24     - Unknown word (LINEBREAK)  -- { "blankLine": LINEBREAK_TYPE, "prev": STATEMENT
./docs/src/rules/padding-line-between-statements.md:82:9      - Unknown word (singleline) -- * `"singleline-const"` is single-line
./docs/src/rules/prefer-named-capture-group.md:22:19     - Unknown word (cauli)      -- const regex = /(?:cauli|sun)flower/;
./docs/src/rules/quotes.md:21:6      - Unknown word (codebases)  -- Many codebases require strings to be
./docs/src/rules/radix.md:11:305    - Unknown word (autodetected) -- , `parseInt()` also autodetected octal literals, which
./docs/src/rules/radix.md:25:72     - Unknown word (autodetects)  -- so that it no longer autodetects octal literals and instead
./docs/src/rules/space-unary-ops.md:13:101    - Unknown word (nonwords)   -- operators and after/before `nonwords` unary operators.
./docs/src/rules/spaced-comment.md:40:69     - Unknown word (doxygen)    -- documentation read by doxygen, vsdoc, etc. which must
./docs/src/rules/spaced-comment.md:40:78     - Unknown word (vsdoc)      -- ocumentation read by doxygen, vsdoc, etc. which must have
./docs/src/rules/valid-typeof.md:32:17     - Unknown word (strnig)     -- typeof foo === "strnig"
./docs/src/rules/valid-typeof.md:33:16     - Unknown word (undefimed)  -- typeof foo == "undefimed"
./docs/src/rules/valid-typeof.md:34:16     - Unknown word (nunber)     -- typeof bar != "nunber"
./docs/src/rules/valid-typeof.md:35:17     - Unknown word (fucntion)   -- typeof bar !== "fucntion"
./docs/src/rules/yoda.md:81:22     - Unknown word (substr)     -- if (-1 < str.indexOf(substr)) {
./docs/src/static/feed.njk:30:79     - Unknown word (endset)     -- bsoluteUrl(metadata.url) }}{% endset %}
./docs/src/static/feed.njk:4:4       - Unknown word (eleventy)   -- "eleventyExcludeFromCollections
./docs/src/static/sitemap.njk:10:14     - Unknown word (lastmod)    -- <lastmod>{{ page.date.toISOString
./docs/src/static/sitemap.njk:11:14     - Unknown word (changefreq) -- <changefreq>{{ page.data.changeFreq
./docs/src/static/sitemap.njk:6:2       - Unknown word (urlset)     -- <urlset xmlns="http://www.sitemaps
./docs/src/user-guide/command-line-interface.md:223:267   - Unknown word (levn)       -- multiple times. The [levn](https://github.com
./docs/src/user-guide/command-line-interface.md:341:5     - Unknown word (myfile)     -- cat myfile.js | npx eslint --stdin
./docs/src/user-guide/command-line-interface.md:396:4     - Unknown word (checkstyle) -- * [checkstyle](formatters/#checkstyle
./docs/src/user-guide/command-line-interface.md:418:17    - Unknown word (customformat) -- npx eslint -f ./customformat.js file.js
./docs/src/user-guide/command-line-interface.md:495:11    - Unknown word (Autofixed)    -- **Note:** Autofixed files are not placed
./docs/src/user-guide/configuring/configuration-files-new.md:217:564   - Unknown word (runtimes)   -- example, some older runtimes might only allow ECMAScript
./docs/src/user-guide/configuring/configuration-files.md:40:25     - Unknown word (myfiletotest) -- eslint -c myconfig.json myfiletotest.js
./docs/src/user-guide/configuring/ignoring-code.md:109:186   - Unknown word (globbing)     -- not be used. Note that globbing rules in `.eslintignore
./docs/src/user-guide/configuring/ignoring-code.md:117:14    - Unknown word (mypackage)    -- "name": "mypackage",
./docs/src/user-guide/configuring/ignoring-code.md:169:211   - Unknown word (reinclude)    -- the implicit rule and reinclude this file for linting
./docs/src/user-guide/configuring/ignoring-code.md:29:186    - Unknown word (subdir)     -- foo.js` but not `lib/subdir/foo.js`.
./docs/src/user-guide/configuring/ignoring-code.md:97:200    - Unknown word (jshintignore) -- example, you can use `.jshintignore` file because it has
./docs/src/user-guide/configuring/language-options.md:35:4      - Unknown word (qunit)      -- * `qunit` - QUnit global variables
./docs/src/user-guide/configuring/language-options.md:37:4      - Unknown word (prototypejs) -- * `prototypejs` - Prototype.js global
./docs/src/user-guide/configuring/language-options.md:41:4      - Unknown word (applescript) -- * `applescript` - AppleScript global
./docs/src/user-guide/configuring/language-options.md:42:22     - Unknown word (Nashorn)     -- `nashorn` - Java 8 Nashorn global variables.
./docs/src/user-guide/configuring/language-options.md:42:4      - Unknown word (nashorn)     -- * `nashorn` - Java 8 Nashorn global
./docs/src/user-guide/configuring/language-options.md:43:4      - Unknown word (serviceworker) -- * `serviceworker` - Service Worker global
./docs/src/user-guide/configuring/language-options.md:44:4      - Unknown word (atomtest)      -- * `atomtest` - Atom test helper
./docs/src/user-guide/configuring/language-options.md:45:4      - Unknown word (embertest)     -- * `embertest` - Ember test helper
./docs/src/user-guide/configuring/language-options.md:46:4      - Unknown word (webextensions) -- * `webextensions` - WebExtensions globals
./docs/src/user-guide/configuring/language-options.md:47:4      - Unknown word (greasemonkey)  -- * `greasemonkey` - GreaseMonkey globals
./docs/src/user-guide/configuring/plugins.md:115:156   - Unknown word (pluginname) -- require('eslint-plugin-pluginname')` in the config file
./docs/src/user-guide/configuring/plugins.md:14:26     - Unknown word (Espree)     -- default, ESLint uses [Espree](https://github.com
./docs/src/user-guide/formatters/index.md:111:5     - Unknown word (testsuites) -- &lt;testsuites&gt;
./docs/src/user-guide/formatters/index.md:112:5     - Unknown word (testsuite)  -- &lt;testsuite package=&#34;org.eslint
./docs/src/user-guide/formatters/index.md:113:5     - Unknown word (testcase)   -- &lt;testcase time=&#34;0&#34; name
./docs/src/user-guide/formatters/index.md:113:72    - Unknown word (classname)  -- no-unused-vars&#34; classname=&#34;/var/lib/jenkins
./docs/src/user-guide/getting-started.md:33:12     - Unknown word (yourfile)   -- npx eslint yourfile.js
./docs/src/user-guide/getting-started.md:73:220    - Unknown word (npmjs)      -- "eslint-config" on [npmjs.com](https://www.npmjs
./docs/src/user-guide/integrations.md:19:8      - Unknown word (Syntastic)  -- * [Syntastic](https://github.com
./docs/src/user-guide/integrations.md:20:11     - Unknown word (Flycheck)   -- * Emacs: [Flycheck](http://www.flycheck
./docs/src/user-guide/integrations.md:24:15     - Unknown word (tmbundle)   -- * [eslint.tmbundle](https://github.com
./docs/src/user-guide/integrations.md:29:3      - Unknown word (Intelli)    -- * IntelliJ IDEA, WebStorm, PhpStorm
./docs/src/user-guide/integrations.md:40:16     - Unknown word (eslintify)  -- * Browserify: [eslintify](https://www.npmjs.com
./docs/src/user-guide/integrations.md:56:8      - Unknown word (Precommit)  -- * [Git Precommit Hook](https://coderwall
./docs/src/user-guide/integrations.md:58:4      - Unknown word (overcommit) -- * [overcommit Git hook manager](https
./docs/src/user-guide/migrating-from-jscs.md:13:111    - Unknown word (jscsrs)     -- .jscsrc.yaml`, or `.jscsrs.js`. In ESLint, the
./docs/src/user-guide/migrating-from-jscs.md:16:38     - Unknown word (Polyjuice)  -- Configuration Files Using Polyjuice
./docs/src/user-guide/migrating-from-jscs.md:23:16     - Unknown word (polyjuice)  -- npm install -g polyjuice
./docs/src/user-guide/migrating-from-jscs.md:61:4      - Unknown word (crockford)  -- | `crockford` | (not available
./docs/src/user-guide/migrating-from-jscs.md:66:4      - Unknown word (mdcs)       -- | `mdcs` | [`eslint-config
./docs/src/user-guide/migrating-to-2.0.0.md:348:45    - Unknown word (FEFF)       -- parse(text.replace(/^\uFEFF/, ""), options);
./docs/src/user-guide/migrating-to-3.0.0.md:48:250    - Unknown word (lifed)      -- Explorer 8 was end-of-lifed](https://www.microsoft
./docs/src/user-guide/migrating-to-5.0.0.md:115:68    - Unknown word (lintable)   -- line does not match any lintable files
./docs/src/user-guide/migrating-to-6.0.0.md:21:46     - Unknown word (dotfiles)   -- config file can now match dotfiles](#overrides-dotfiles
./docs/src/user-guide/migrating-to-6.0.0.md:284:21    - Unknown word (regexes)    -- ## <a name="unicode-regexes"></a> User-provided
./docs/src/user-guide/migrating-to-7.0.0.md:120:3     - Unknown word (Dotfiles)   -- * Dotfiles (`.*`)
./docs/src/user-guide/migrating-to-7.0.0.md:211:23    - Unknown word (cliengine)  -- <a name="deprecate-cliengine"></a> The `CLIEngine
./docs/src/user-guide/migrating-to-8.0.0.md:21:13     - Unknown word (codeframe)  -- * [Removed `codeframe` and `table` formatters
./lib/cli-engine/cli-engine.js:47:4      - Unknown word (Typedefs)   -- // Typedefs
./lib/cli-engine/formatters/html.js:247:66    - Unknown word (noopener)   -- target="_blank" rel="noopener noreferrer">${ruleId
./lib/cli-engine/formatters/html.js:247:75    - Unknown word (noreferrer) -- blank" rel="noopener noreferrer">${ruleId ? ruleId
./lib/cli-engine/formatters/html.js:303:9     - Unknown word (colspan)    -- <th colspan="4">
./lib/cli-engine/formatters/html.js:46:48     - Unknown word (Neue)       -- family: Arial, "Helvetica Neue", Helvetica, sans-serif
./lib/cli-engine/hash.js:12:25     - Unknown word (imurmurhash) -- const murmur = require("imurmurhash");
./lib/cli-engine/lint-result-cache.js:14:58     - Unknown word (jsonify)    -- stable-stringify-without-jsonify");
./lib/cli-engine/xml-escape.js:29:26     - Unknown word (apos)       -- return "&apos;";
./lib/cli.js:28:38     - Unknown word (humanwhocodes) -- ModuleImporter } = require("@humanwhocodes/module-importer");
./lib/config/default-config.js:59:61     - Unknown word (globbed)    -- ensure these files are globbed by default
./lib/eslint/eslint-helpers.js:19:26     - Unknown word (nodelib)    -- const fswalk = require("@nodelib/fs.walk");
./lib/eslint/eslint-helpers.js:19:7      - Unknown word (fswalk)     -- const fswalk = require("@nodelib
./lib/eslint/eslint-helpers.js:225:36    - Unknown word (Errror)     -- UnmatchedSearchPatternsErrror} If there is a pattern
./lib/eslint/eslint-helpers.js:402:40    - Unknown word (prepopulated) -- for the cwd, which is prepopulated in the searches map
./lib/eslint/eslint-helpers.js:486:9     - Unknown word (globby)       -- let globbyPatterns = [];
./lib/linter/code-path-analysis/code-path-state.js:159:31    - Unknown word (unflattened) -- {CodePathSegment[]} unflattenedFromSegments Segments
./lib/linter/code-path-analysis/code-path-state.js:913:23    - Unknown word (Segs)        -- const prevSegsOfLeavingSegment = [headOfLeav
./lib/linter/code-path-analysis/code-path.js:138:34    - Unknown word (Omittable)  -- param {Object} [options] Omittable.
./lib/linter/code-path-analysis/debug-helpers.js:105:54    - Unknown word (fillcolor)  -- style=\"rounded,filled\",fillcolor=white];\n" +
./lib/linter/code-path-analysis/debug-helpers.js:109:45    - Unknown word (doublecircle) -- final[label=\"\",shape=doublecircle,style=filled,fillcolor
./lib/linter/code-path-analysis/debug-helpers.js:112:75    - Unknown word (fixedsize)    -- width=0.3,height=0.3,fixedsize];\n";
./lib/linter/code-path-analysis/debug-helpers.js:95:44     - Unknown word (Graphvis)   -- can be visualized with Graphvis.
./lib/linter/config-comment-parser.js:76:22     - Unknown word (commaless)  -- // Also, commaless notations have invalid
./lib/linter/config-comment-parser.js:87:20     - Unknown word (Levn)       -- debug("Levn parsing failed; falling
./lib/linter/config-comment-parser.js:93:12     - Unknown word (Optionator) -- * Optionator cannot parse commaless
./lib/linter/linter.js:110:52    - Unknown word (postprocessor) -- postprocess} [postprocess] postprocessor for report
./lib/linter/linter.js:44:11     - Unknown word (AUTOFIX)    -- const MAX_AUTOFIX_PASSES = 10;
./lib/linter/linter.js:947:18    - Unknown word (SOURCECODE)    -- const DEPRECATED_SOURCECODE_PASSTHROUGHS = {
./lib/linter/linter.js:947:29    - Unknown word (PASSTHROUGHS)  -- DEPRECATED_SOURCECODE_PASSTHROUGHS = {
./lib/options.js:2:44      - Unknown word (optionator) -- Options configuration for optionator.
./lib/rule-tester/flat-rule-tester.js:225:42    - Unknown word (errorize)   -- ast The root node to errorize `start`/`end` properties
./lib/rule-tester/flat-rule-tester.js:717:27    - Unknown word (Didnt)      -- function assertASTDidntChange(beforeAST, afterAST
./lib/rule-tester/rule-tester.js:10:52     - Unknown word (unittests)  -- mocha to allow for DRY unittests for eslint
./lib/rules/array-bracket-newline.js:204:24    - Unknown word (Linebreaks) -- const needsLinebreaks = (
./lib/rules/array-bracket-newline.js:51:30     - Unknown word (Linebreak)  -- unexpectedOpeningLinebreak: "There should be no
./lib/rules/arrow-body-style.js:230:33    - Unknown word (parenthesised) -- let parenthesisedObjectLiteral = null
./lib/rules/arrow-body-style.js:97:32     - Unknown word (Parenthesised) -- while (!astUtils.isParenthesised(sourceCode, nodeToCheck
./lib/rules/dot-notation.js:139:63    - Unknown word (quasis)     -- node, node.property.quasis[0].value.cooked);
./lib/rules/for-direction.js:66:65     - Unknown word (nochange)   -- if sub return -1, if nochange, return 0
./lib/rules/func-name-matching.js:13:7      - Unknown word (esutils)    -- const esutils = require("esutils"
./lib/rules/id-match.js:239:45    - Unknown word (righthand)  -- // prevent checking righthand side of destructured
./lib/rules/indent-legacy.js:4:48      - Unknown word (nodeca)     -- ported and modified from nodeca.
./lib/rules/indent-legacy.js:573:43    - Unknown word (IIEF)       -- that the node is an IIEF
./lib/rules/indent-legacy.js:918:66    - Unknown word (blockless)  -- for indentation for blockless nodes
./lib/rules/indent.js:15:36     - Unknown word (sdsl)       -- OrderedMap } = require("js-sdsl");
./lib/rules/indent.js:911:21    - Unknown word (Blockless)  -- function addBlocklessNodeIndent(node) {
./lib/rules/jsx-quotes.js:21:23     - Unknown word (singlequote) -- description: "singlequote",
./lib/rules/keyword-spacing.js:148:18    - Unknown word (unexpect)   -- function unexpectSpaceBefore(token, pattern
./lib/rules/lines-around-comment.js:22:22     - Unknown word (Nums)       -- function getEmptyLineNums(lines) {
./lib/rules/logical-assignment-operators.js:115:4     - Unknown word (falsyness)  -- * falsyness checks:   !value, !Boolean
./lib/rules/no-caller.js:38:106    - Unknown word (calle)      -- propertyName.match(/^calle[er]$/u)) {
./lib/rules/no-constant-binary-expression.js:18:59     - Unknown word (nullishness) -- statically knowable constant nullishness. Meaning,
./lib/rules/no-constant-binary-expression.js:26:21     - Unknown word (Nullishness) -- function hasConstantNullishness(scope, node) {
./lib/rules/no-constant-binary-expression.js:351:66    - Unknown word (constructures) -- useful for primitive constructures
./lib/rules/no-control-regex.js:8:34      - Unknown word (regexpp)    -- RegExpValidator = require("regexpp").RegExpValidator;
./lib/rules/no-else-return.js:314:50    - Unknown word (codepath)    -- node returns in every codepath.
./lib/rules/no-else-return.js:350:19    - Unknown word (consequents) -- const consequents = [];
./lib/rules/no-else-return.js:78:16     - Unknown word (Redeclaring) -- * Redeclaring any of these would cause
./lib/rules/no-eval.js:75:12     - Unknown word (Pushs)      -- * Pushs a `this` scope (non
./lib/rules/no-extend-native.js:120:87    - Unknown word (Propert)    -- callee, "Object", /^definePropert(?:y|ies)$/u)
./lib/rules/no-extra-parens.js:253:52    - Unknown word (newed)          -- constructor function is newed-up with parens
./lib/rules/no-extra-parens.js:2:27      - Unknown word (parenthesising) -- fileoverview Disallow parenthesising higher precedence subexpressi
./lib/rules/no-extra-parens.js:2:60      - Unknown word (subexpressions) -- enthesising higher precedence subexpressions.
./lib/rules/no-extra-parens.js:513:28    - Unknown word (logicals)       -- * Evaluate binary logicals
./lib/rules/no-extra-parens.js:519:19    - Unknown word (prec)           -- const prec = precedence(node);
./lib/rules/no-implicit-coercion.js:14:39     - Unknown word (ndex)       -- PATTERN = /^(?:i|lastI)ndexOf$/u;
./lib/rules/no-inline-comments.js:61:17     - Unknown word (postamble)  -- postamble = endLine.slice(node
./lib/rules/no-inline-comments.js:63:19     - Unknown word (Postamble)  -- isPostambleEmpty = !postamble;
./lib/rules/no-invalid-regexp.js:13:22     - Unknown word (dgimsuy)    -- const validFlags = /[dgimsuy]/gu;
./lib/rules/no-misleading-character-class.js:15:7      - Unknown word (REGEXPP)    -- const REGEXPP_LATEST_ECMA_VERSION
./lib/rules/no-mixed-requires.js:182:62    - Unknown word (Declarators) -- The list of VariableDeclarators.
./lib/rules/no-mixed-requires.js:78:66     - Unknown word (iojs)       -- per nodejs v0.12.2 and iojs v0.7.1
./lib/rules/no-new-native-nonconstructor.js:32:18     - Unknown word (Nonconstructor) -- noNewNonconstructor: "`{{name}}` cannot
./lib/rules/no-restricted-imports.js:179:57    - Unknown word (ignorecase) -- allowRelativePaths: true, ignorecase: !caseSensitive }).add
./lib/rules/no-trailing-spaces.js:57:13     - Unknown word (NONBLANK)   -- NONBLANK = `${BLANK_CLASS}+$
./lib/rules/no-useless-backreference.js:112:37    - Unknown word (bref's)     -- // group is bref's ancestor => bref is
./lib/rules/no-useless-backreference.js:43:12     - Unknown word (Lookaround) -- function isLookaround(node) {
./lib/rules/no-useless-backreference.js:75:40     - Unknown word (bref)       -- "Backreference '{{ bref }}' will be ignored
./lib/rules/no-useless-escape.js:27:47     - Unknown word (nrvtbfux)   -- ESCAPES = union(new Set("\\nrvtbfux"), astUtils.LINEBREAKS
./lib/rules/no-useless-escape.js:27:68     - Unknown word (LINEBREAKS) -- nrvtbfux"), astUtils.LINEBREAKS);
./lib/rules/no-useless-escape.js:28:45     - Unknown word (Dfnp)       -- ESCAPES = new Set("\\bcdDfnpPrsStvwWxu0123456789
./lib/rules/no-useless-escape.js:28:52     - Unknown word (Stvw)       -- new Set("\\bcdDfnpPrsStvwWxu0123456789]");
./lib/rules/no-useless-escape.js:29:17     - Unknown word (CHARCLASS)  -- const REGEX_NON_CHARCLASS_ESCAPES = union(REGEX
./lib/rules/no-useless-return.js:200:26    - Unknown word (pushs)      -- // Makes and pushs a new scope information
./lib/rules/no-var.js:102:12    - Unknown word (Redeclared) -- function isRedeclared(variable) {
./lib/rules/object-shorthand.js:102:34    - Unknown word (Longform)   -- expectedLiteralMethodLongform: "Expected longform
./lib/rules/object-shorthand.js:102:54    - Unknown word (longform)   -- eralMethodLongform: "Expected longform method syntax for string
./lib/rules/prefer-object-spread.js:129:46    - Unknown word (whitespaces) -- given token and around whitespaces.
./lib/rules/prefer-object-spread.js:174:4     - Unknown word (Autofixes)   -- * Autofixes the Object.assign call
./lib/rules/prefer-object-spread.js:177:24    - Unknown word (autofixer)   -- @returns {Function} autofixer - replaces the Object
./lib/rules/prefer-object-spread.js:62:42     - Unknown word (sourcecode) -- sourceCode in context sourcecode object
./lib/rules/prefer-regex-literals.js:254:21    - Unknown word (Regexpp)    -- function getRegexppEcmaVersion(ecmaVersion
./lib/rules/quotes.js:41:17     - Unknown word (unescaping) -- * escaping and unescaping as necessary.
./lib/rules/sort-vars.js:53:23     - Unknown word (unfixable)  -- const unfixable = idDeclarations.some
./lib/rules/space-unary-ops.js:130:28    - Unknown word (Doesnt)     -- function verifyWordDoesntHaveSpaces(node, firstToken
./lib/rules/space-unary-ops.js:243:32    - Unknown word (Dont)       -- function verifyNonWordsDontHaveSpaces(node, firstToken
./lib/rules/utils/ast-utils.js:1990:17   - Unknown word (hashbang)   -- * If a hashbang comment was passed as
./lib/rules/utils/ast-utils.js:1991:80   - Unknown word (hashbangs)  -- ESLint itself handles hashbangs.
./lib/rules/utils/ast-utils.js:1993:30   - Unknown word (Hashbang)   -- * its type will be "Hashbang" because of the way
./lib/rules/utils/ast-utils.js:1993:66   - Unknown word (tokenizes)  -- because of the way Espree tokenizes hashbangs.
./lib/rules/utils/ast-utils.js:395:40    - Unknown word (samely)     -- a.b` and `a?.b` are samely.
./lib/rules/utils/patterns/letters.js:12:24     - Unknown word (Dulin)      -- Copyright 2013-2016 Dulin Marat and other contributors
./lib/shared/config-validator.js:286:55    - Unknown word (ECMAFEATURES) -- source, "ESLINT_LEGACY_ECMAFEATURES");
./package.json:117:6     - Unknown word (eslump)       -- "eslump": "^3.0.0",
./package.json:134:6     - Unknown word (memfs)        -- "memfs": "^3.0.1",
./package.json:135:6     - Unknown word (metascraper)  -- "metascraper": "^5.25.7",
./package.json:24:15     - Unknown word (alpharelease) -- "generate-alpharelease": "node Makefile.js
./package.json:25:15     - Unknown word (betarelease)  -- "generate-betarelease": "node Makefile.js
./package.json:26:15     - Unknown word (rcrelease)    -- "generate-rcrelease": "node Makefile.js
./packages/eslint-config-eslint/default.yml:23:50     - Unknown word (namepath)   -- Point to a `@callback` namepath or `GenericCallback
./packages/eslint-config-eslint/default.yml:5:15      - Unknown word (jsdoc)      -- - "plugin:jsdoc/recommended"
./templates/blogpost.md.ejs:18:10     - Unknown word (linkify)    -- function linkify(line) {
./templates/blogpost.md.ejs:8:5       - Unknown word (eslintbot)  -- - eslintbot
./templates/formatter-examples.md.ejs:64:2      - Unknown word (iframe)     -- <iframe src="html-formatter
./tests/fixtures/autofix-integration/left-pad-expected-quiet.js:17:18     - Unknown word (leftpad)    -- module.exports = leftpad;
./tests/fixtures/code-path-analysis/try--try-finally-4.js:43:156    - Unknown word (Expressio)  -- Expression\nIdentifier (bar)\nExpressio
./tests/fixtures/config-extends/deep.json:10:26     - Unknown word (subsubdir)  -- extends": "./subdir/subsubdir/deeper.json"
./tests/fixtures/config-extends/subdir/subsubdir/deeper.json:10:19     - Unknown word (subsubsubdir) -- "extends": "./subsubsubdir/deepest.json"
./tests/fixtures/config-hierarchy/file-structure.json:19:10     - Unknown word (subbroken)  -- "subbroken": {
./tests/fixtures/config-hierarchy/file-structure.json:22:14     - Unknown word (subsubbroken) -- "subsubbroken": {
./tests/fixtures/config-hierarchy/file-structure.json:36:6      - Unknown word (fileexts)     -- "fileexts": {
./tests/fixtures/config-hierarchy/file-structure.json:57:6      - Unknown word (packagejson)  -- "packagejson": {
./tests/fixtures/config-rule/schemas.js:37:23     - Unknown word (Bools)      -- objectWithMultipleBools: [{
./tests/fixtures/parsers/arrow-parens/identifier-type.js:323:17    - Unknown word (binop)      -- binop: null,
./tests/fixtures/parsers/enhanced-parser3.js:40:11     - Unknown word (referencer) -- const referencer = new EnhancedReferencer
./tests/fixtures/parsers/enhanced-parser3.js:4:23      - Unknown word (Referencer) -- const { ScopeManager, Referencer } = require("eslint
./tests/fixtures/parsers/typescript-parsers/declare-class.js:4:14      - Unknown word (astexplorer) -- * Parsed on astexplorer.net using @typescript
./tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1.js:440:40    - Unknown word (youll)      -- terribly long description youll ' +
./tests/lib/cli-engine/cli-engine.js:1030:60   - Unknown word (hiddenfolder) -- executeOnFiles(["hidden/.hiddenfolder/*.js"]);
./tests/lib/cli-engine/cli-engine.js:1132:52   - Unknown word (unignored)    -- hidden files if they are unignored with an --ignore-pattern
./tests/lib/cli-engine/cli-engine.js:1603:60   - Unknown word (rulesdirs)    -- etFixturePath("rules", "multi-rulesdirs.json")
./tests/lib/cli-engine/cli-engine.js:1768:51   - Unknown word (autocrlf)     -- workaround for git's autocrlf option on Windows.
./tests/lib/cli-engine/cli-engine.js:1791:95   - Unknown word (fixmode)      -- fixtureDir, `${fixtureDir}/fixmode`)]);
./tests/lib/cli-engine/cli-engine.js:379:37    - Unknown word (layou)      -- fixTypes: ["layou"]
./tests/lib/cli-engine/cli-engine.js:4370:115  - Unknown word (Unignored)    -- , ".eslintignoreWithUnignoredDefaults") });
./tests/lib/cli-engine/cli-engine.js:4455:53   - Unknown word (sampleignorepattern) -- eslintignore` includes `sampleignorepattern`.
./tests/lib/cli-engine/cli-engine.js:4578:21   - Unknown word (globstar)            -- it("two globstar '**' ignore pattern
./tests/lib/cli-engine/cli-engine.js:4627:89   - Unknown word (foobaz)              -- not-a-directory", ".foobaz");
./tests/lib/cli-engine/cli-engine.js:4730:91   - Unknown word (unignore)            -- paths", "negation", "unignore.js")));
./tests/lib/cli-engine/cli-engine.js:4802:51   - Unknown word (somenamespace)       -- engine.getFormatter("@somenamespace/foo");
./tests/lib/cli-engine/cli-engine.js:4818:63   - Unknown word (doesntexist)         -- getFixturePath("formatters", "doesntexist.js"),
./tests/lib/cli-engine/cli-engine.js:589:44    - Unknown word (foothis)    -- output: "var bar = foothis is a syntax error."
./tests/lib/cli-engine/cli-engine.js:6350:87   - Unknown word (myconf)              -- config node_modules/myconf/.eslintrc.json',",
./tests/lib/cli-engine/cli-engine.js:6578:52   - Unknown word (extendees)           -- config file and linear extendees.", () => {
./tests/lib/cli.js:322:56    - Unknown word (fakeformatter) -- await cli.execute(`-f fakeformatter ${filePath}`);
./tests/lib/config/flat-config-array.js:1408:29   - Unknown word (foox)        -- foox: [1, "bar"]
./tests/lib/config/flat-config-array.js:1430:30   - Unknown word (doesnt)      -- "doesnt-exist/match": "error
./tests/lib/config/flat-config-array.js:147:22    - Unknown word (noniterable) -- it("should allow noniterable baseConfig objects"
./tests/lib/config/flat-config-array.js:898:43    - Unknown word (truex)       -- foo: "truex"
./tests/lib/eslint/flat-eslint.js:1268:30   - Unknown word (reignoring)   -- it("should allow reignoring of previously ignored
./tests/lib/eslint/flat-eslint.js:4393:9    - Unknown word (xdescribe)    -- xdescribe("ignorePatterns can
./tests/lib/eslint/flat-eslint.js:5096:48   - Unknown word (intepreted)   -- files' they should be intepreted as relative to the config
./tests/lib/eslint/flat-eslint.js:821:57    - Unknown word (doesnotexist) -- lintFiles(["subdir1", "doesnotexist/*.js"]);
./tests/lib/eslint/flat-eslint.js:871:58    - Unknown word (doesexist)    -- await eslint.lintFiles(["doesexist/*.js"]);
./tests/lib/linter/code-path-analysis/code-path-analyzer.js:30:16     - Unknown word (ESQUERY)    -- const STANDARD_ESQUERY_OPTION = { visitorKeys
./tests/lib/linter/config-comment-parser.js:165:41    - Unknown word (ELEVENTEEN) -- code = "a: seventy, b:ELEVENTEEN";
./tests/lib/linter/linter.js:3229:1    - Unknown word (consolexlog) -- consolexlog("test2");
./tests/lib/linter/linter.js:3354:73   - Unknown word (barfoo)      -- rules: { foobar: 2, barfoo: 1 } });
./tests/lib/linter/linter.js:3373:84   - Unknown word (rulename)    -- this is 2, since the rulename is very likely to be
./tests/lib/linter/linter.js:6690:19   - Unknown word (postprocessors) -- describe("postprocessors", () => {
./tests/lib/linter/linter.js:6743:28   - Unknown word (postprocessed)  -- it("should use postprocessed problem ranges when
./tests/lib/linter/node-event-generator.js:25:7      - Unknown word (ESPREE)     -- const ESPREE_CONFIG = {
./tests/lib/linter/node-event-generator.js:298:68    - Unknown word (pseudoclasses) -- // 0 identifiers, 0 pseudoclasses
./tests/lib/linter/node-event-generator.js:304:66    - Unknown word (pseudoclass)   -- ].expression], // 1 pseudoclass, 0 identifiers
./tests/lib/linter/report-translator.js:337:32    - Unknown word (fooo)       -- text: "fooo\nbar"
./tests/lib/linter/report-translator.js:394:34    - Unknown word (ncdar)      -- text: "o\ncdar"
./tests/lib/linter/rules.js:29:29     - Unknown word (michaelficarra) -- const ruleId = "michaelficarra";
./tests/lib/linter/source-code-fixer.js:63:19     - Unknown word (removestart) -- message: "removestart",
./tests/lib/linter/source-code-fixer.js:70:19     - Unknown word (removemiddle) -- message: "removemiddle",
./tests/lib/linter/source-code-fixer.js:77:19     - Unknown word (removeend)    -- message: "removeend",
./tests/lib/linter/source-code-fixer.js:84:19     - Unknown word (nofix)        -- message: "nofix"
./tests/lib/options.js:359:71    - Unknown word (morerules)  -- trcOptions.parse("--rulesdir /morerules");
./tests/lib/rule-tester/flat-rule-tester.js:1102:36   - Unknown word (somefile)   -- filename: "somefile.js"
./tests/lib/rule-tester/flat-rule-tester.js:2227:33   - Unknown word (outpt)      -- outpt: "var baz;"
./tests/lib/rule-tester/flat-rule-tester.js:2580:15   - Unknown word (Subclassing) -- describe("Subclassing", () => {
./tests/lib/rule-tester/flat-rule-tester.js:987:22    - Unknown word (noeval)     -- "noeval('foo')"
./tests/lib/rules/array-bracket-newline.js:57:50     - Unknown word (ndosomething) -- [\nfunction foo() {\ndosomething();\n}\n];",
./tests/lib/rules/array-bracket-spacing.js:51:47     - Unknown word (n'qux)      -- [{\n'bar': 'baz', \n'qux': [{ 'bar': 'baz' }
./tests/lib/rules/array-bracket-spacing.js:51:76     - Unknown word (n'quxx)     -- { 'bar': 'baz' }], \n'quxx': 1 \n}]", options:
./tests/lib/rules/array-element-newline.js:45:78     - Unknown word (nosomething) -- ,\nfunction bar() {\nosomething();\n}\n];",
./tests/lib/rules/arrow-body-style.js:27:38     - Unknown word (nretv)      -- = (retv, name) => {\nretv[name] = true;\nreturn
./tests/lib/rules/brace-style.js:103:35    - Unknown word (fontstack)  -- code: "if (tag === 1) fontstack.name = pbf.readString
./tests/lib/rules/brace-style.js:32:44     - Unknown word (Varint)     -- glyph.id = pbf.readVarint();\nelse if (tag ==
./tests/lib/rules/capitalized-comments.js:164:29    - Unknown word (Fileoverview) -- code: "/**\n * @Fileoverview This is a file */",
./tests/lib/rules/capitalized-comments.js:344:22    - Unknown word (über)         -- code: "//über",
./tests/lib/rules/capitalized-comments.js:345:24    - Unknown word (Über)         -- output: "//Über",
./tests/lib/rules/comma-spacing.js:22:10     - Unknown word (myfunc)     -- "myfunc(404, true/* bla bla
./tests/lib/rules/comma-style.js:268:38    - Unknown word (fifi)       -- "const arr = [\n ,'fifi' \n]",
./tests/lib/rules/comma-style.js:69:36     - Unknown word (nsnd)       -- code: "var ar ={fst:1,\nsnd: [1,\n2]};",
./tests/lib/rules/getter-return.js:207:70    - Unknown word (getfoo)     -- bar', { get: function getfoo (){}});",
./tests/lib/rules/handle-callback-err.js:52:99     - Unknown word (rror)       -- options: ["^.+(e|E)rror$"] }
./tests/lib/rules/id-blacklist.js:136:41    - Unknown word (mydate)     -- ["array", "date", "mydate", "myarray", "new",
./tests/lib/rules/id-blacklist.js:136:51    - Unknown word (myarray)    -- "date", "mydate", "myarray", "new", "var"]
./tests/lib/rules/id-blacklist.js:189:47    - Unknown word (writability) -- myGlobal } = foo);", // writability doesn't affect the logic
./tests/lib/rules/id-blacklist.js:64:70     - Unknown word (bingg)      -- ba", "barr", "bazz", "bingg"]
./tests/lib/rules/id-length.js:50:22     - Unknown word (lalala)     -- { code: "var lalala = Foo(42)", options
./tests/lib/rules/id-length.js:625:29    - Unknown word (NOTMATCHED) -- code: "function NOTMATCHED_send() {};",
./tests/lib/rules/id-match.js:25:30     - Unknown word (Matthieu)   -- code: "__foo = \"Matthieu\"",
./tests/lib/rules/id-match.js:34:20     - Unknown word (firstname)  -- code: "firstname = \"Matthieu\"",
./tests/lib/rules/id-match.js:46:34     - Unknown word (Larcher)    -- code: "last_Name = \"Larcher\"",
./tests/lib/rules/indent-legacy.js:1661:23   - Unknown word (barbaz)     -- " qux, barbaz,\n" +
./tests/lib/rules/indent-legacy.js:1662:18   - Unknown word (barqux)     -- " barqux, bazqux);",
./tests/lib/rules/indent-legacy.js:1662:26   - Unknown word (bazqux)     -- " barqux, bazqux);",
./tests/lib/rules/indent-legacy.js:324:16    - Unknown word (otherdata)  -- " otherdata.forEach(function(zero
./tests/lib/rules/indent-legacy.js:935:46    - Unknown word (xfilter)    -- function create (id, xfilter, rawType,\n" +
./tests/lib/rules/indent.js:3026:21   - Unknown word (curlies)    -- // Template curlies
./tests/lib/rules/indent.js:3691:30   - Unknown word (foop)       -- var x = function foop(bar)
./tests/lib/rules/indent.js:401:17    - Unknown word (lmnn)       -- lmnn = [{
./tests/lib/rules/indent.js:5255:34   - Unknown word (unindented) -- // Intentionally unindented comment
./tests/lib/rules/key-spacing.js:767:47    - Unknown word (longlonglong) -- 'bar' : 2, baz : 3, longlonglong : 4",
./tests/lib/rules/line-comment-position.js:45:23     - Unknown word (Meep)       -- code: "// Meep\nconsole.log('Meep'
./tests/lib/rules/lines-between-class-members.js:50:37     - Unknown word (nccc)       -- C {\naaa;\n\n#bbb;\n\nccc(){}\n\n#ddd(){}\n}"
./tests/lib/rules/max-len.js:422:22    - Unknown word (fizzbuzz)   -- "var fizzbuzz = 'but this one is matched
./tests/lib/rules/no-cond-assign.js:69:31     - Unknown word (bkufyydt)   -- code: "(((3496.29)).bkufyydt = 2e308) ? foo : bar
./tests/lib/rules/no-console.js:38:33     - Unknown word (myconsole)  -- var console = require('myconsole'); console.log(foo)
./tests/lib/rules/no-constant-condition.js:77:29     - Unknown word (fooa)       -- "if (`foo${a}` === 'fooa');",
./tests/lib/rules/no-constructor-return.js:26:22     - Unknown word (kumiko)     -- "function fn(kumiko) { if (kumiko) { return
./tests/lib/rules/no-constructor-return.js:32:28     - Unknown word (Kumiko)     -- code: "return 'Kumiko Oumae'",
./tests/lib/rules/no-constructor-return.js:32:35     - Unknown word (Oumae)      -- code: "return 'Kumiko Oumae'",
./tests/lib/rules/no-dupe-else-if.js:56:61     - Unknown word (subconditions) -- may contain redundant subconditions, but the branch can
./tests/lib/rules/no-duplicate-imports.js:94:32     - Unknown word (modns)      -- code: "import * as modns from \"lodash-es\";
./tests/lib/rules/no-eval.js:41:29     - Unknown word (noneval)    -- { code: "globalThis.noneval('foo')", env: { es2
./tests/lib/rules/no-implicit-globals.js:26:15     - Unknown word (Redeclaration) -- const readonlyRedeclarationMessage = "Unexpected
./tests/lib/rules/no-inline-comments.js:127:37    - Unknown word (otherthing) -- ignorePattern: "otherthing"
./tests/lib/rules/no-invalid-regexp.js:64:35     - Unknown word (Nandinagari) -- RegExp('\\\\p{Script=Nandinagari}', 'u');",
./tests/lib/rules/no-prototype-builtins.js:44:35     - Unknown word (Enumerabl)  -- code: "foo?.['propertyIsEnumerabl']('bar')", parserOptions
./tests/lib/rules/no-restricted-imports.js:359:84    - Unknown word (subimports) -- message: "some foo subimports are restricted" }]
./tests/lib/rules/no-restricted-imports.js:50:31     - Unknown word (Gitignores) -- code: "import withGitignores from \"foo/bar\";",
./tests/lib/rules/no-script-url.js:25:21     - Unknown word (xjavascript) -- "var url = 'xjavascript:'",
./tests/lib/rules/no-tabs.js:24:17     - Unknown word (sdfdsf)     -- " //   sdfdsf \n" +
./tests/lib/rules/no-tabs.js:60:19     - Unknown word (tsdfdsf)    -- " //\tsdfdsf \n" +
./tests/lib/rules/no-undefined.js:38:10     - Unknown word (ndefined)   -- "ndefined",
./tests/lib/rules/no-unexpected-multiline.js:307:22    - Unknown word (gimuygimuygimuy) -- /bar/gimuygimuygimuy.test(baz)
./tests/lib/rules/no-unsafe-finally.js:42:123    - Unknown word (Hola)       -- static ehm() { return 'Hola!'; } } } };",
./tests/lib/rules/no-unused-vars.js:938:32    - Unknown word (fooz)       -- code: "/* global a$fooz,$foo */\na$fooz;",
./tests/lib/rules/no-use-before-define.js:1129:17   - Unknown word (mdjermanovic) -- * TODO(mdjermanovic): Add the following
./tests/lib/rules/no-warning-comments.js:153:30    - Unknown word (litera)     -- code: "// regex [litera|$]",
./tests/lib/rules/no-warning-comments.js:37:92     - Unknown word (aeiou)      -- options: [{ terms: ["[aeiou]"], location: "anywhere
./tests/lib/rules/object-shorthand.js:222:30    - Unknown word (afoob)      -- code: "var x = { afoob: function() {}  }",
./tests/lib/rules/object-shorthand.js:22:7      - Unknown word (LONGFORM)   -- const LONGFORM_PROPERTY_ERROR = { messageId
./tests/lib/rules/prefer-object-spread.js:213:112   - Unknown word (butwhy)     -- {}, { superNested: 'butwhy' })))",
./tests/lib/rules/prefer-object-spread.js:700:39    - Unknown word (somethingelse) -- import { Something as somethingelse } from 'foo';
./tests/lib/rules/prefer-regex-literals.js:1269:65   - Unknown word (blahblah)   -- instanceof RegExp(String.raw`blahblah`, 'g') ? typeof new
./tests/lib/rules/prefer-regex-literals.js:1301:36   - Unknown word (someregular) -- code: "[   new RegExp(`someregular`)]",
./tests/lib/rules/prefer-regex-literals.js:1329:191  - Unknown word (notregbutstring) -- new RegExp('abc') : 'notregbutstring'",
./tests/lib/rules/prefer-regex-literals.js:2277:62   - Unknown word (avalue)          -- condition2) new RegExp('avalue').test(str);",
./tests/lib/rules/prefer-regex-literals.js:2468:32   - Unknown word (mysafereg)       -- code: "new RegExp('mysafereg' /* comment explaining
./tests/lib/rules/prefer-template.js:168:27    - Unknown word (unescapes)  -- code: "foo + 'unescapes an escaped single quote
./tests/lib/rules/quotes.js:532:24    - Unknown word (notoctal)   -- code: "var notoctal = '\\0'",
./tests/lib/rules/require-unicode-regexp.js:26:15     - Unknown word (gimuy)      -- "/foo/gimuy",
./tests/lib/rules/require-unicode-regexp.js:33:25     - Unknown word (gimu)       -- "const flags = 'gimu'; new RegExp('foo',
./tests/lib/rules/require-unicode-regexp.js:52:25     - Unknown word (gimy)       -- code: "/foo/gimy",
./tests/lib/rules/semi.js:119:66    - Unknown word (mylib)      -- named2 } from 'src/mylib';", parserOptions:
./tests/lib/rules/sort-keys.js:261:24    - Unknown word (abce)       -- // abce
./tests/lib/rules/spaced-comment.js:115:54    - Unknown word (xmldoc)     -- comment\n//----\n/// xmldoc style comment\n//!<
./tests/lib/rules/spaced-comment.js:318:23    - Unknown word (endregion)  -- code: "//#endregion",
./tests/lib/rules/spaced-comment.js:649:23    - Unknown word (endregionfoo) -- code: "//#endregionfoo",
./tests/lib/rules/utils/ast-utils.js:1045:17   - Unknown word (ncde)       -- "ab\ncde\n": [[1, 0], [1, 1]
./tests/lib/rules/utils/ast-utils.js:1504:19   - Unknown word (invalidtoken) -- [["123invalidtoken", "("], false],
./tests/lib/rules/utils/ast-utils.js:670:52    - Unknown word (braceless)  -- empty array if node is a braceless ArrowFunctionExpression
./tests/lib/rules/utils/fix-tracker.js:67:50     - Unknown word (abcdefghij) -- = createSourceCode("abcdefghij");
./tests/lib/rules/valid-jsdoc.js:103:60    - Unknown word (mytest)     -- n* @param {string} p mytest\n*/\nFoo.bar = function
./tests/lib/rules/valid-jsdoc.js:323:21    - Unknown word (Astnode)    -- Astnode: "ASTNode"
./tests/lib/rules/valid-jsdoc.js:353:21    - Unknown word (astnode)    -- astnode: "ASTNode"
./tests/lib/rules/valid-jsdoc.js:544:80    - Unknown word (jsodc)      -- different orders for jsodc tags
./tests/lib/rules/valid-typeof.js:91:40     - Unknown word (umdefined)  -- if (typeof bar === 'umdefined') {}",
./tests/lib/shared/config-validator.js:449:104   - Unknown word (booya)      -- rule"), "mock-rule", "booya", "tests");
./tests/lib/shared/config-validator.js:473:108   - Unknown word (frist)      -- , "mock-rule", [2, "frist"], "tests");
./tests/lib/shared/runtime-info.js:28:25     - Unknown word (Vals)       -- param {Array} returnVals Values to be returned
./tests/lib/shared/string-utils.js:21:9      - Unknown word (uppercases) -- it("uppercases the first letter of
./tests/performance/jshint.js:10050:6   - Unknown word (Fastpath)                -- // Fastpath empty strings
./tests/performance/jshint.js:10714:4   - Unknown word (Whoh)                    -- * Whoh there, Javascript, that
./tests/performance/jshint.js:10871:10  - Unknown word (verifuint)               -- function verifuint(value, max) {
./tests/performance/jshint.js:10983:48  - Unknown word (wuint)                   -- pass that off to the wuint* functions. To do that
./tests/performance/jshint.js:11009:10  - Unknown word (verifsint)               -- function verifsint(value, max, min) {
./tests/performance/jshint.js:11020:10  - Unknown word (verif)                   -- function verifIEEE754(value, max, min
./tests/performance/jshint.js:1125:6    - Unknown word (anonname)      -- var anonname, // The guessed name
./tests/performance/jshint.js:1166:4    - Unknown word (funcscope)     -- funcscope : true, // if only
./tests/performance/jshint.js:1168:4    - Unknown word (globalstrict)  -- globalstrict: true, // if global
./tests/performance/jshint.js:1169:4    - Unknown word (immed)         -- immed : true, // if
./tests/performance/jshint.js:1172:4    - Unknown word (lastsemic)     -- lastsemic : true, // if semicolons
./tests/performance/jshint.js:1174:4    - Unknown word (laxbreak)      -- laxbreak : true, // if line
./tests/performance/jshint.js:1175:4    - Unknown word (laxcomma)      -- laxcomma : true, // if line
./tests/performance/jshint.js:1176:4    - Unknown word (loopfunc)      -- loopfunc : true, // if functions
./tests/performance/jshint.js:1179:4    - Unknown word (multistr)      -- multistr : true, // allow
./tests/performance/jshint.js:1180:4    - Unknown word (newcap)        -- newcap : true, // if constructo
./tests/performance/jshint.js:1181:4    - Unknown word (noarg)         -- noarg : true, // if
./tests/performance/jshint.js:1185:4    - Unknown word (noempty)       -- noempty : true, // if empty
./tests/performance/jshint.js:1186:4    - Unknown word (nonew)         -- nonew : true, // if
./tests/performance/jshint.js:1192:4    - Unknown word (passfail)      -- passfail : true, // if the
./tests/performance/jshint.js:1203:4    - Unknown word (smarttabs)     -- smarttabs : true, // if smarttabs
./tests/performance/jshint.js:1207:4    - Unknown word (supernew)      -- supernew : true, // if `new
./tests/performance/jshint.js:1210:4    - Unknown word (validthis)     -- validthis : true, // if 'this
./tests/performance/jshint.js:1212:4    - Unknown word (withstmt)      -- withstmt : true, // if with
./tests/performance/jshint.js:1220:4    - Unknown word (onecase)       -- onecase : true, // if one
./tests/performance/jshint.js:1222:4    - Unknown word (regexdash)     -- regexdash : true  // if unescaped
./tests/performance/jshint.js:1231:4    - Unknown word (maxerr)        -- maxerr : false,
./tests/performance/jshint.js:1232:4    - Unknown word (predef)        -- predef : false,
./tests/performance/jshint.js:1235:4    - Unknown word (maxstatements) -- maxstatements: false, // {int} max
./tests/performance/jshint.js:1236:4    - Unknown word (maxdepth)      -- maxdepth : false, // {int
./tests/performance/jshint.js:1237:4    - Unknown word (maxparams)     -- maxparams : false, // {int
./tests/performance/jshint.js:1238:4    - Unknown word (maxcomplexity) -- maxcomplexity: false, // {int} max
./tests/performance/jshint.js:1244:4    - Unknown word (latedef)       -- latedef : false  // warn
./tests/performance/jshint.js:1280:3    - Unknown word (functionicity) -- functionicity = [
./tests/performance/jshint.js:1285:3    - Unknown word (funct)         -- funct, // The current function
./tests/performance/jshint.js:1290:3    - Unknown word (inblock)       -- inblock,
./tests/performance/jshint.js:1296:3    - Unknown word (noreach)       -- noreach,
./tests/performance/jshint.js:1301:3    - Unknown word (unuseds)       -- unuseds,
./tests/performance/jshint.js:1501:11   - Unknown word (isundef)       -- function isundef(scope, code, token,
./tests/performance/jshint.js:1502:17   - Unknown word (undefs)        -- return JSHINT.undefs.push([scope, code, token
./tests/performance/jshint.js:1586:11   - Unknown word (addlabel)      -- function addlabel(t, type, tkn, islet
./tests/performance/jshint.js:1606:17   - Unknown word (blockscope)    -- (funct["(blockscope)"].getlabel(t))) {
./tests/performance/jshint.js:1606:31   - Unknown word (getlabel)      -- funct["(blockscope)"].getlabel(t))) {
./tests/performance/jshint.js:1707:7    - Unknown word (numvals)       -- var numvals = [
./tests/performance/jshint.js:1839:30   - Unknown word (Newcap)        -- state.option["(explicitNewcap)"] = true;
./tests/performance/jshint.js:2059:11   - Unknown word (nobreak)       -- function nobreak(left, right) {
./tests/performance/jshint.js:2093:11   - Unknown word (nobreaknonadjacent) -- function nobreaknonadjacent(left, right) {
./tests/performance/jshint.js:2123:11   - Unknown word (nolinebreak)        -- function nolinebreak(t) {
./tests/performance/jshint.js:2130:11   - Unknown word (nobreakcomma)       -- function nobreakcomma(left, right) {
./tests/performance/jshint.js:2235:11   - Unknown word (blockstmt)          -- function blockstmt(s, f) {
./tests/performance/jshint.js:2298:11   - Unknown word (reservevar)         -- function reservevar(s, v) {
./tests/performance/jshint.js:2392:11   - Unknown word (assignop)           -- function assignop(s, f, p) {
./tests/performance/jshint.js:2468:11   - Unknown word (bitwiseassignop)    -- function bitwiseassignop(s) {
./tests/performance/jshint.js:2507:5    - Unknown word (fnparam)            -- // fnparam means that this identifier
./tests/performance/jshint.js:2511:11   - Unknown word (optionalidentifier) -- function optionalidentifier(fnparam, prop) {
./tests/performance/jshint.js:2590:21   - Unknown word (noindent)           -- function statement(noindent) {
./tests/performance/jshint.js:2775:5    - Unknown word (isfunc)             -- * isfunc - true if block is a
./tests/performance/jshint.js:2777:41   - Unknown word (isfatarrow)         -- ordinary, stmt, isfunc, isfatarrow) {
./tests/performance/jshint.js:2875:12   - Unknown word (nolet)              -- funct["(nolet)"] = true;
./tests/performance/jshint.js:3003:20   - Unknown word (comparray)          -- if (!funct["(comparray)"].check(v)) {
./tests/performance/jshint.js:3122:18   - Unknown word (assignadd)          -- assignop("+=", "assignadd", 20);
./tests/performance/jshint.js:3123:18   - Unknown word (assignsub)          -- assignop("-=", "assignsub", 20);
./tests/performance/jshint.js:3124:18   - Unknown word (assignmult)         -- assignop("*=", "assignmult", 20);
./tests/performance/jshint.js:3125:18   - Unknown word (assigndiv)          -- assignop("/=", "assigndiv", 20).nud = function
./tests/performance/jshint.js:3128:18   - Unknown word (assignmod)          -- assignop("%=", "assignmod", 20);
./tests/performance/jshint.js:3130:25   - Unknown word (assignbitand)       -- bitwiseassignop("&=", "assignbitand", 20);
./tests/performance/jshint.js:3131:25   - Unknown word (assignbitor)        -- bitwiseassignop("|=", "assignbitor", 20);
./tests/performance/jshint.js:3132:25   - Unknown word (assignbitxor)       -- bitwiseassignop("^=", "assignbitxor", 20);
./tests/performance/jshint.js:3133:26   - Unknown word (assignshiftleft)    -- bitwiseassignop("<<=", "assignshiftleft", 20);
./tests/performance/jshint.js:3134:26   - Unknown word (assignshiftright)   -- bitwiseassignop(">>=", "assignshiftright", 20);
./tests/performance/jshint.js:3135:27   - Unknown word (assignshiftrightunsigned) -- bitwiseassignop(">>>=", "assignshiftrightunsigned", 20);
./tests/performance/jshint.js:3163:8    - Unknown word (Precendence)              -- var orPrecendence = 40;
./tests/performance/jshint.js:3171:16   - Unknown word (bitor)                    -- bitwise("|", "bitor", 70);
./tests/performance/jshint.js:3172:16   - Unknown word (bitxor)                   -- bitwise("^", "bitxor", 80);
./tests/performance/jshint.js:3173:16   - Unknown word (bitand)                   -- bitwise("&", "bitand", 90);
./tests/performance/jshint.js:3205:17   - Unknown word (shiftleft)                -- bitwise("<<", "shiftleft", 120);
./tests/performance/jshint.js:3206:17   - Unknown word (shiftright)               -- bitwise(">>", "shiftright", 120);
./tests/performance/jshint.js:3207:18   - Unknown word (shiftrightunsigned)       -- bitwise(">>>", "shiftrightunsigned", 120);
./tests/performance/jshint.js:3251:14   - Unknown word (mult)                     -- infix("*", "mult", 140);
./tests/performance/jshint.js:3255:16   - Unknown word (postinc)                  -- suffix("++", "postinc");
./tests/performance/jshint.js:3256:16   - Unknown word (preinc)                   -- prefix("++", "preinc");
./tests/performance/jshint.js:3259:16   - Unknown word (postdec)                  -- suffix("--", "postdec");
./tests/performance/jshint.js:3260:16   - Unknown word (predec)                   -- prefix("--", "predec");
./tests/performance/jshint.js:3593:7    - Unknown word (blocktype)                -- var blocktype = lookupBlockType(true
./tests/performance/jshint.js:3663:11   - Unknown word (functionparams)           -- function functionparams(parsed) {
./tests/performance/jshint.js:3761:50   - Unknown word (fatarrowparams)           -- statement, generator, fatarrowparams) {
./tests/performance/jshint.js:3777:6    - Unknown word (loopage)                  -- "(loopage)" : 0,
./tests/performance/jshint.js:3817:11   - Unknown word (lastcharacter)            -- funct["(lastcharacter)"] = state.tokens.curr
./tests/performance/jshint.js:3896:21   - Unknown word (isclassdef)               -- x.nud = function (isclassdef) {
./tests/performance/jshint.js:3908:17   - Unknown word (basictkn)                 -- props[name].basictkn = tkn;
./tests/performance/jshint.js:4151:6    - Unknown word (conststatement)           -- var conststatement = stmt("const", function
./tests/performance/jshint.js:4220:6    - Unknown word (varstatement)             -- var varstatement = stmt("var", function
./tests/performance/jshint.js:4287:6    - Unknown word (letstatement)             -- var letstatement = stmt("let", function
./tests/performance/jshint.js:4288:28   - Unknown word (letblock)                 -- tokens, lone, value, letblock;
./tests/performance/jshint.js:4376:10   - Unknown word (classdef)                 -- return classdef.call(this, true);
./tests/performance/jshint.js:4392:3    - Unknown word (classtail)                -- classtail(this);
./tests/performance/jshint.js:443:2     - Unknown word (SVGCSS)     -- SVGCSSRule : false
./tests/performance/jshint.js:4747:7    - Unknown word (letscope)                 -- var letscope = false;
./tests/performance/jshint.js:4748:7    - Unknown word (foreachtok)               -- var foreachtok = null;
./tests/performance/jshint.js:4766:7    - Unknown word (nextop)                   -- var nextop; // contains the token
./tests/performance/jshint.js:4768:7    - Unknown word (inof)                     -- var inof = ["in", "of"];
./tests/performance/jshint.js:497:2     - Unknown word (SVGH)       -- SVGHKernElement : false
./tests/performance/jshint.js:498:2     - Unknown word (SVGICC)     -- SVGICCColor : false
./tests/performance/jshint.js:5040:9    - Unknown word (exportee)                 -- this.exportee = expression(10);
./tests/performance/jshint.js:506:2     - Unknown word (SVGM)       -- SVGMPathElement : false
./tests/performance/jshint.js:5119:49   - Unknown word (squarebracket)            -- to determine wether a squarebracket or a curlybracket
./tests/performance/jshint.js:5119:68   - Unknown word (curlybracket)             -- a squarebracket or a curlybracket
./tests/performance/jshint.js:5193:8    - Unknown word (carrays)                  -- var _carrays = [];
./tests/performance/jshint.js:53:9      - Unknown word (shtylman)   -- // TODO(shtylman)
./tests/performance/jshint.js:5670:9    - Unknown word (warnable)                 -- var warnable_types = {
./tests/performance/jshint.js:570:2     - Unknown word (SVGV)       -- SVGVKernElement : false
./tests/performance/jshint.js:5811:7    - Unknown word (implieds)                 -- var implieds = [];
./tests/performance/jshint.js:5928:9    - Unknown word (Unbegun)                  -- E018: "Unbegun comment.",
./tests/performance/jshint.js:593:9     - Unknown word (devel)      -- exports.devel = {
./tests/performance/jshint.js:5975:42   - Unknown word (preferrable)              -- literal notation [] is preferrable.",
./tests/performance/jshint.js:6338:7    - Unknown word (prereg)                   -- this.prereg = true;
./tests/performance/jshint.js:6657:13   - Unknown word (unbegun)                  -- // End of unbegun comment. Raise an error
./tests/performance/jshint.js:674:2     - Unknown word (toint)      -- toint32 : false,
./tests/performance/jshint.js:6754:46   - Unknown word (Titlecase)                -- Lowercase letter (Ll)", "Titlecase letter
./tests/performance/jshint.js:6759:15   - Unknown word (Traceur)                  -- // Google's Traceur.
./tests/performance/jshint.js:696:2     - Unknown word (pushd)      -- pushd : false,
./tests/performance/jshint.js:697:2     - Unknown word (popd)       -- popd : false,
./tests/performance/jshint.js:6984:56   - Unknown word (octals)                   -- the 9) are not valid octals
./tests/performance/jshint.js:703:2     - Unknown word (tempdir)    -- tempdir : false
./tests/performance/jshint.js:724:2     - Unknown word (dijit)      -- dijit : false,
./tests/performance/jshint.js:725:2     - Unknown word (dojox)      -- dojox : false,
./tests/performance/jshint.js:735:9     - Unknown word (mootools)   -- exports.mootools = {
./tests/performance/jshint.js:775:2     - Unknown word (Swiff)      -- Swiff : false,
./tests/performance/jshint.js:7902:29   - Unknown word (Ashkenas)                -- c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
./tests/performance/jshint.js:7919:42   - Unknown word (gzipped)                 -- the minified (but not gzipped) version:
./tests/performance/jshint.js:8006:10   - Unknown word (foldl)                   -- // or `foldl`. Delegates to **ECMAScript
./tests/performance/jshint.js:8026:62   - Unknown word (foldr)                   -- reduce, also known as `foldr`.
./tests/performance/jshint.js:811:2     - Unknown word (Autocompleter) -- Autocompleter : false,
./tests/performance/jshint.js:815:2     - Unknown word (Draggables)    -- Draggables : false,
./tests/performance/jshint.js:816:2     - Unknown word (Droppables)    -- Droppables : false,
./tests/performance/jshint.js:821:2     - Unknown word (Scriptaculous) -- Scriptaculous : false
./tests/performance/jshint.js:837:10    - Unknown word (maxlen)        -- /*jshint maxlen:1000 */
./tests/performance/jshint.js:8506:30   - Unknown word (hasher)                  -- memoize = function(func, hasher) {
./tests/performance/jshint.js:863:41    - Unknown word (jscript)       -- vascriptURL = /^(?:javascript|jscript|ecmascript|vbscript
./tests/performance/jshint.js:863:75    - Unknown word (livescript)    -- ecmascript|vbscript|mocha|livescript)\s*:/i;
./tests/performance/jshint.js:8726:25   - Unknown word (egal)                    -- // See the Harmony `egal` proposal: http://wiki
./tests/performance/jshint.js:8852:22   - Unknown word (inspectable)             -- // there isn't any inspectable "Arguments" type.
./tests/performance/jshint.js:8914:9    - Unknown word (accum)                   -- var accum = Array(n);
./tests/performance/jshint.js:8941:6    - Unknown word (Regexes)                 -- // Regexes containing the keys
./tests/performance/jshint.js:9012:23   - Unknown word (templating)              -- // JavaScript micro-templating, similar to John Resig
./tests/performance/jshint.js:9012:51   - Unknown word (Resig's)                 -- templating, similar to John Resig's implementation.
./tests/performance/jshint.js:9066:66   - Unknown word (precompilation)          -- as a convenience for precompilation.
./tests/performance/jshint.js:9219:44   - Unknown word (shortcutted)             -- without properties can be shortcutted.
./tests/performance/jshint.js:954:7     - Unknown word (quotmark)      -- var quotmark = linter.getOption(
./tests/tools/eslint-fuzzer.js:121:46    - Unknown word (foos)       -- message: "no foos allowed",
./tools/fuzzer-runner.js:50:42     - Unknown word (elapseds)   -- rules [:bar] :percent, :elapseds elapsed, eta :etas,
./tools/update-readme.js:54:60     - Unknown word (valign)     -- `<td align="center" valign="top" width="11%">
./tools/update-rule-types.js:5:6       - Unknown word (jscodeshift) -- * jscodeshift -t tools/update-rule
