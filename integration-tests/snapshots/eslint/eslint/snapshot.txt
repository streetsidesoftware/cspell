
Repository: eslint/eslint
Url: "https://github.com/eslint/eslint"
Args: [".","--config=../../../config/eslint/cspell.config.yaml","--issues-summary-report","--exclude=bin/**","--exclude=CHANGELOG.md","--exclude=_data","--exclude=tests/bench/large.js","--exclude=docs/src/_includes","--exclude=docs/src/assets/{fonts,s?css,images}"]
Lines:
 CSpell: Files checked: 1898, Issues found: 2191 in 401 files
 exit code: 1
./Makefile.js:144:88    - Unknown word (ined)               -- followed by the string "ined".
./Makefile.js:150:48    - Unknown word (blogpost)           -- render(cat("./templates/blogpost.md.ejs"), renderContext
./Makefile.js:284:12    - Unknown word (gensite)            -- target.gensite();
./Makefile.js:317:8     - Unknown word (Premajor)           -- * Premajor release should have
./Makefile.js:318:21    - Unknown word (prepatch)           -- * Preminor and prepatch release will not.
./Makefile.js:318:8     - Unknown word (Preminor)           -- * Preminor and prepatch release
./Makefile.js:326:56    - Unknown word (preminor)           -- a major release (not preminor/prepatch).
./Makefile.js:629:8     - Unknown word (wdio)               -- target.wdio = () => {
./Makefile.js:76:88     - Unknown word (markdownlintignore) -- path.join(__dirname, ".markdownlintignore"), "utf-8")),
./Makefile.js:80:10     - Unknown word (MULTIFILES)         -- PERF_MULTIFILES_TARGET_DIR = path.join
./Makefile.js:920:18    - Unknown word (Multifiles)         -- function downloadMultifilesTestTarget(cb) {
./README.md:204:5     - Unknown word (teamstart)  -- <!--teamstart-->
./README.md:218:7     - Unknown word (Djermanovic) -- Milos Djermanovic
./README.md:234:1     - Unknown word (Nitin)       -- Nitin Kumar
./README.md:234:7     - Unknown word (Kumar)       -- Nitin Kumar
./README.md:245:7     - Unknown word (Mishkin)     -- Bryan Mishkin
./README.md:250:1     - Unknown word (Francesco)   -- Francesco Trotta
./README.md:250:11    - Unknown word (Trotta)      -- Francesco Trotta
./README.md:255:1     - Unknown word (Yosuke)      -- Yosuke Ota
./README.md:260:1     - Unknown word (Tanuj)       -- Tanuj Kanti
./README.md:260:7     - Unknown word (Kanti)       -- Tanuj Kanti
./README.md:271:1     - Unknown word (Amaresh)     -- Amaresh S M
./README.md:276:1     - Unknown word (Strek)       -- Strek
./README.md:285:5     - Unknown word (teamend)     -- <!--teamend-->
./README.md:292:5     - Unknown word (sponsorsstart) -- <!--sponsorsstart-->
./README.md:297:679   - Unknown word (Transloadit)   -- com/u/125754?v=4" alt="Transloadit" height="32"></a> <a
./README.md:298:5     - Unknown word (sponsorsend)   -- <!--sponsorsend-->
./conf/config-schema.js:8:63      - Unknown word (nzakas)     -- file, please contact @nzakas first.
./conf/replacements.json:12:36     - Unknown word (parens)     -- wrap-func": ["no-extra-parens"],
./conf/replacements.json:13:62     - Unknown word (paren)      -- space-before-function-paren"],
./docs/README.md:45:51     - Unknown word (openjsf)    -- ESLint contributors, [www.openjsf.org](https://www.openjsf
./docs/package.json:30:32     - Unknown word (syntaxhighlight) -- 1ty/eleventy-plugin-syntaxhighlight": "^5.0.0",
./docs/package.json:31:11     - Unknown word (munter)          -- "@munter/tap-render": "^0.2.
./docs/package.json:33:10     - Unknown word (algoliasearch)   -- "algoliasearch": "^4.12.1",
./docs/package.json:46:10     - Unknown word (luxon)           -- "luxon": "^2.4.0",
./docs/package.json:54:10     - Unknown word (prismjs)         -- "prismjs": "^1.29.0",
./docs/src/_plugins/md-syntax-highlighter.js:4:29      - Unknown word (Yuxi)       -- Copyright (c) 2019-present, Yuxi (Evan) You
./docs/src/about/index.md:6:87      - Unknown word (Zakas)      -- created by Nicholas C. Zakas in June 2013. Code
./docs/src/assets/js/components-index.js:17:14     - Unknown word (toggleindex) -- function toggleindex(e) {
./docs/src/assets/js/css-vars-ponyfill@2.js:2:13      - Unknown word (ponyfill)   -- * css-vars-ponyfill
./docs/src/assets/js/css-vars-ponyfill@2.js:5:23      - Unknown word (Hildenbiddle) -- (c) 2018-2019 John Hildenbiddle <http://hildenbiddle
./docs/src/assets/js/css-vars-ponyfill@2.js:8:10158   - Unknown word (CSSVARSPONYFILL) -- e.comment.indexOf("__CSSVARSPONYFILL")?"/*"+e.comment+"*
./docs/src/assets/js/css-vars-ponyfill@2.js:8:14683   - Unknown word (cssvars)         -- e.hasAttribute("data-cssvars"),n=function(e){return
./docs/src/assets/js/focus-visible.js:26:5      - Unknown word (datetime)   -- datetime: true,
./docs/src/assets/js/focus-visible.js:31:46     - Unknown word (iframes)    -- legacy browsers and iframes which sometimes focus
./docs/src/assets/js/main.js:105:51    - Unknown word (togglenav)  -- addEventListener("click", togglenav, false);
./docs/src/assets/js/main.js:236:13    - Unknown word (setupindex) -- setupindexToggles(indexToggles
./docs/src/assets/js/main.js:265:27    - Unknown word (labelledby) -- "aria-labelledby",
./docs/src/assets/js/main.js:274:17    - Unknown word (thepanel)   -- var thepanel = toggleButton.nextElementSib
./docs/src/assets/js/tabs.js:164:10    - Unknown word (unactivate) -- // unactivate all other tabs
./docs/src/assets/js/tabs.js:174:11    - Unknown word (Tabpanel)   -- showTabpanel(tab);
./docs/src/assets/js/tabs.js:225:9     - Unknown word (incrementcurrent) -- var incrementcurrentIndex = function ()
./docs/src/assets/js/tabs.js:236:9     - Unknown word (decrementcurrent) -- var decrementcurrentIndex = function ()
./docs/src/assets/js/tabs.js:95:9      - Unknown word (tablist)    -- var tablist = el.querySelector(
./docs/src/assets/js/tabs.js:97:59     - Unknown word (tabpanel)   -- querySelectorAll("[data-tabpanel]"));
./docs/src/assets/js/tabs.js:97:9      - Unknown word (tabpanels)  -- var tabpanels = Array.from(el.querySelector
./docs/src/assets/scss/carbon-ads.scss:7:2       - Unknown word (carbonads)  -- #carbonads * {
./docs/src/assets/scss/carbon-ads.scss:81:20     - Unknown word (poweredby)  -- #carbonads .carbon-poweredby {
./docs/src/assets/scss/components/docs-navigation.scss:27:6      - Unknown word (flexer)     -- .flexer {
./docs/src/assets/scss/components/search.scss:152:10    - Unknown word (docsearch)  -- .algolia-docsearch-suggestion--highlight
./docs/src/assets/scss/docs.scss:123:216   - Unknown word (Cpath)      -- fill='%23ECFDF3'/%3E%3Cpath d='M30.5 16L19.5 27L
./docs/src/assets/scss/docs.scss:123:339   - Unknown word (Crect)      -- linejoin='round'/%3E%3Crect x='1.5' y='1' width
./docs/src/assets/scss/docs.scss:123:44    - Unknown word (Csvg)       -- data:image/svg+xml,%3Csvg width='45' height='
./docs/src/assets/scss/docs.scss:159:6     - Unknown word (anchorjs)   -- .anchorjs-link {
./docs/src/assets/scss/syntax-highlighter.scss:118:39    - Unknown word (nums)       -- variant-numeric: tabular-nums;
./docs/src/assets/scss/syntax-highlighter.scss:83:8      - Unknown word (atrule)     -- .token.atrule,
./docs/src/assets/scss/tokens/typography.scss:63:10     - Unknown word (Twemoji)    -- "Twemoji Country Flags",
./docs/src/contribute/architecture/index.md:68:29     - Unknown word (estraverse) -- the AST is available, `estraverse` is used to traverse
./docs/src/contribute/governance.md:150:64    - Unknown word (Tweetdeck)     -- ESLint Twitter Account on Tweetdeck
./docs/src/contribute/governance.md:73:35     - Unknown word (committership) -- important to recognize that committership is a privilege, not
./docs/src/contribute/governance.md:87:106    - Unknown word (triaging)      -- the project through triaging of issues, fixing bugs
./docs/src/contribute/package-json-conventions.md:17:38     - Unknown word (ABNF)       -- summary of the proposal in ABNF.
./docs/src/contribute/package-json-conventions.md:19:4      - Unknown word (abnf)       -- ```abnf
./docs/src/contribute/package-json-conventions.md:21:114    - Unknown word (postprepare) -- preprepare" / "prepare" / "postprepare" / "prepack" / "postpack
./docs/src/contribute/package-json-conventions.md:21:142    - Unknown word (postpack)    -- postprepare" / "prepack" / "postpack" / "prepublishOnly"
./docs/src/contribute/package-json-conventions.md:21:29     - Unknown word (preinstall) -- cycle = "prepare" / "preinstall" / "install" / "postinstall
./docs/src/contribute/package-json-conventions.md:21:87     - Unknown word (preprepare) -- ostinstall" / "prepublish" / "preprepare" / "prepare" / "postprepare
./docs/src/contribute/work-on-issue.md:16:588    - Unknown word (bikeshedding) -- evaluating`, and/or `needs bikeshedding`, and issues that cannot
./docs/src/extend/code-path-analysis.md:542:5     - Unknown word (hoge)       -- hoge();
./docs/src/extend/code-path-analysis.md:591:9     - Unknown word (fuga)       -- fuga();
./docs/src/extend/custom-formatters.md:251:61    - Unknown word (Guake)      -- www.iterm2.com/) or [Guake](http://guake-project
./docs/src/extend/custom-formatters.md:273:9     - Unknown word (eslintformatter) -- * `"eslintformatter"`
./docs/src/extend/custom-formatters.md:80:29     - Unknown word (Gruntfile)  -- filePath: "/path/to/Gruntfile.js",
./docs/src/extend/custom-parsers.md:121:27    - Unknown word (myparser)   -- install eslint-parser-myparser --save-dev
./docs/src/extend/custom-parsers.md:80:44     - Unknown word (rewritable) -- of all nodes must be rewritable. Before any rules have
./docs/src/extend/custom-rule-tutorial.md:171:4     - Unknown word (endraw)     -- {% endraw %}
./docs/src/extend/custom-rule-tutorial.md:87:127    - Unknown word (fixability) -- documentation, and fixability. In this case, the rule
./docs/src/extend/plugin-migration-flat-config.md:217:17    - Unknown word (xdescribe)  -- xdescribe: true
./docs/src/extend/plugins.md:37:162    - Unknown word (myplugin)   -- named `eslint-plugin-myplugin`, then in your configuration
./docs/src/extend/selectors.md:140:405   - Unknown word (Fpath)      -- so: `[value=/some\u002Fpath/]`.
./docs/src/extend/shareable-configs.md:21:55     - Unknown word (myconfig)   -- such as `eslint-config-myconfig`.
./docs/src/integrate/nodejs-api.md:211:35    - Unknown word (omittable)  -- parameter `options` is omittable.
./docs/src/integrate/nodejs-api.md:478:35    - Unknown word (Fvar)       -- new SourceCode("\uFEFFvar foo = bar;", ast);
./docs/src/library/alert.md:9:12      - Unknown word (shortcode)  -- There is a shortcode for each type of alert
./docs/src/maintain/manage-issues.md:32:4      - Unknown word (Triaging)   -- ## Triaging Process
./docs/src/maintain/manage-releases.md:14:3      - Unknown word (Prereleases) -- * Prereleases that are not considered
./docs/src/maintain/overview.md:33:6      - Unknown word (Stackaid)   -- * [**Stackaid.us**](https://simulation
./docs/src/pages/component-library.html:7:45      - Unknown word (shortcodes) -- on the left includes shortcodes, macros and partials
./docs/src/pages/rules.md:51:9      - Unknown word (endfor)     -- {%- endfor -%}
./docs/src/rules/accessor-pairs.md:267:7     - Unknown word (Quux)       -- const Quux = class {
./docs/src/rules/arrow-body-style.md:52:12     - Unknown word (retv)       -- let bar = (retv, name) => {
./docs/src/rules/arrow-parens.md:15:79     - Unknown word (arity)      -- parameters regardless of arity. For example:
./docs/src/rules/brace-style.md:25:54     - Unknown word (Stroustrup) -- brace style is called Stroustrup, in which the `else
./docs/src/rules/brace-style.md:36:26     - Unknown word (Allman)     -- Another style is called [Allman](https://en.wikipedia
./docs/src/rules/brace-style.md:60:5      - Unknown word (stroustrup) -- * `"stroustrup"` enforces Stroustrup
./docs/src/rules/brace-style.md:61:5      - Unknown word (allman)     -- * `"allman"` enforces Allman style
./docs/src/rules/capitalized-comments.md:272:84    - Unknown word (blockignore) -- { "ignorePattern": "blockignore" } }] */
./docs/src/rules/comma-dangle.md:13:11     - Unknown word (quux)       -- qux: "quux",
./docs/src/rules/complexity.md:21:1      - Unknown word (Cyclomatic) -- Cyclomatic complexity measures
./docs/src/rules/complexity.md:21:133    - Unknown word (cyclomatic) -- rule allows setting a cyclomatic complexity threshold
./docs/src/rules/eqeqeq.md:39:150    - Unknown word (typeof)     -- of the operands is a `typeof` expression, or if both
./docs/src/rules/function-paren-newline.md:338:5     - Unknown word (barbaz)     -- var barbaz = function(
./docs/src/rules/generator-star-spacing.md:85:40     - Unknown word (configurability) -- rule allows further configurability via overrides per function
./docs/src/rules/id-denylist.md:7:102     - Unknown word (Karlton)    -- naming things." — Phil Karlton
./docs/src/rules/id-length.md:93:10     - Unknown word (foobaz)     -- function foobaz({ a: prop }) { }
./docs/src/rules/indent-legacy.md:28:16     - Unknown word (Crockford)  -- * Four spaces: Crockford
./docs/src/rules/indent-legacy.md:405:8     - Unknown word (boop)        -- qux, boop) {
./docs/src/rules/indent-legacy.md:91:76     - Unknown word (declarators) -- indentation level for `var` declarators; can also take an object
./docs/src/rules/key-spacing.md:194:5     - Unknown word (bcde)       -- bcde: 42,
./docs/src/rules/key-spacing.md:216:5     - Unknown word (ijkl)       -- ijkl: 'Non-consecutive lines
./docs/src/rules/max-lines-per-function.md:31:45     - Unknown word (dbname)     -- return m("tr", {key: db.dbname}, [
./docs/src/rules/no-buffer-constructor.md:13:407    - Unknown word (alloc)      -- Buffer.from`, `Buffer.alloc`, and `Buffer.allocUnsafe
./docs/src/rules/no-cond-assign.md:2:11      - Unknown word (cond)       -- title: no-cond-assign
./docs/src/rules/no-confusing-arrow.md:68:21     - Unknown word (Parens)     -- { "allowParens": true, "onlyOneSimpleParam
./docs/src/rules/no-dupe-else-if.md:63:5      - Unknown word (quuux)      -- quuux();
./docs/src/rules/no-dupe-keys.md:56:5      - Unknown word (quxx)       -- quxx: "qux"
./docs/src/rules/no-duplicate-imports.md:55:8      - Unknown word (mergeable)  -- // not mergeable
./docs/src/rules/no-empty-character-class.md:40:13     - Unknown word (abcefg)     -- regex.test("abcefg"); // false, the nested
./docs/src/rules/no-eq-null.md:61:41     - Unknown word (eqnull)     -- rule corresponds to `eqnull` rule of JSHint.
./docs/src/rules/no-extend-native.md:74:34     - Unknown word (muhahaha)   -- prototype.forEach = 'muhahaha'");
./docs/src/rules/no-fallthrough.md:59:12     - Unknown word (fallsthrough) -- // fallsthrough
./docs/src/rules/no-irregular-whitespace.md:45:2      - Unknown word (ufeff)      -- \ufeff - Zero Width No-Break
./docs/src/rules/no-irregular-whitespace.md:57:30     - Unknown word (ZWSP)       -- Zero Width Space - <ZWSP>
./docs/src/rules/no-loop-func.md:11:5      - Unknown word (funcs)      -- funcs[i] = function() {
./docs/src/rules/no-new-native-nonconstructor.md:2:22      - Unknown word (nonconstructor) -- title: no-new-native-nonconstructor
./docs/src/rules/no-new-native-nonconstructor.md:65:11     - Unknown word (corge)          -- const corge = new BigInt(900719
./docs/src/rules/no-nonoctal-decimal-escape.md:2:11      - Unknown word (nonoctal)   -- title: no-nonoctal-decimal-escape
./docs/src/rules/no-param-reassign.md:164:20    - Unknown word (barrito)    -- var foo = function(barrito) {
./docs/src/rules/no-plusplus.md:2:11      - Unknown word (plusplus)   -- title: no-plusplus
./docs/src/rules/no-proto.md:2:11      - Unknown word (proto)      -- title: no-proto
./docs/src/rules/no-prototype-builtins.md:10:216    - Unknown word (webserver)  -- would be unsafe for a webserver to parse JSON input
./docs/src/rules/no-redeclare.md:5:68      - Unknown word (redeclares) -- TypeScript will catch `let` redeclares and `const` redeclares
./docs/src/rules/no-restricted-globals.md:28:54     - Unknown word (fdescribe)  -- ["error", "event", "fdescribe"]
./docs/src/rules/no-restricted-imports.md:125:154   - Unknown word (punycode)   -- ,"net","os","path","punycode","querystring","readline
./docs/src/rules/no-restricted-imports.md:125:165   - Unknown word (querystring) -- ,"path","punycode","querystring","readline","repl",
./docs/src/rules/no-restricted-imports.md:125:179   - Unknown word (readline)    -- punycode","querystring","readline","repl","smalloc","stream
./docs/src/rules/no-restricted-imports.md:125:197   - Unknown word (smalloc)     -- ,"readline","repl","smalloc","stream","string_decoder
./docs/src/rules/no-restricted-imports.md:125:64    - Unknown word (dgram)      -- "cluster","crypto","dgram","dns","domain","events
./docs/src/rules/no-restricted-imports.md:125:96    - Unknown word (freelist)   -- ,"domain","events","freelist","fs","http","https
./docs/src/rules/no-restricted-syntax.md:66:5      - Unknown word (dont)       -- dontMess();
./docs/src/rules/no-return-await.md:12:172    - Unknown word (microtask)  -- the cost of an extra microtask before resolving the
./docs/src/rules/no-script-url.md:29:41     - Unknown word (scripturl)  -- rule corresponds to `scripturl` rule of JSHint.
./docs/src/rules/no-unexpected-multiline.md:14:78     - Unknown word (Schlueter)  -- once described by Isaac Schlueter, a newline character
./docs/src/rules/no-unsafe-finally.md:44:69     - Unknown word (rethrown)   -- block is caught and rethrown
./docs/src/rules/no-unused-vars.md:160:67    - Unknown word (gnored)       -- varsIgnorePattern": "[iI]gnored" }` option:
./docs/src/rules/no-unused-vars.md:55:31     - Unknown word (destructures) -- function definition destructures an array, unused entries
./docs/src/rules/no-use-before-define.md:160:21    - Unknown word (nofunc)     -- This rule accepts `"nofunc"` string as an option
./docs/src/rules/nonblock-statement-body-position.md:2:8       - Unknown word (nonblock)   -- title: nonblock-statement-body-position
./docs/src/rules/object-property-newline.md:124:24    - Unknown word (colocation) -- The rule prohibits the colocation on any line of at least
./docs/src/rules/object-property-newline.md:128:31    - Unknown word (Europese)   -- Officiële website van de Europese Unie',
./docs/src/rules/object-property-newline.md:128:40    - Unknown word (Unie)       -- website van de Europese Unie',
./docs/src/rules/object-property-newline.md:128:6     - Unknown word (Officiële)  -- 'Officiële website van de Europese
./docs/src/rules/object-property-newline.md:129:16    - Unknown word (уебсайт)    -- 'Официален уебсайт на Европейския съюз
./docs/src/rules/object-property-newline.md:129:27    - Unknown word (Европейския) -- фициален уебсайт на Европейския съюз'
./docs/src/rules/object-property-newline.md:129:39    - Unknown word (съюз)        -- сайт на Европейския съюз'
./docs/src/rules/object-property-newline.md:129:6     - Unknown word (Официален)  -- 'Официален уебсайт на Европейс
./docs/src/rules/object-property-newline.md:212:12    - Unknown word (antidisestablishmentarianistically) -- const a = "antidisestablishmentarianistically";
./docs/src/rules/object-property-newline.md:213:12    - Unknown word (yugoslavyalılaştırabildiklerimizdenmişsiniz) -- const b = "yugoslavyalılaştırabildiklerimizdenmişsiniz";
./docs/src/rules/object-property-newline.md:219:29    - Unknown word (complexdomain)                               -- domain.includes(":") ? "complexdomain" : "simpledomain"
./docs/src/rules/object-property-newline.md:219:47    - Unknown word (simpledomain)                                -- "complexdomain" : "simpledomain"
./docs/src/rules/object-property-newline.md:74:12     - Unknown word (bazz)       -- + bar: "bazz",
./docs/src/rules/one-var.md:425:11    - Unknown word (barfoo)     -- const barfoo = 1, bazfoo = 2;
./docs/src/rules/one-var.md:425:23    - Unknown word (bazfoo)     -- const barfoo = 1, bazfoo = 2;
./docs/src/rules/one-var.md:428:17    - Unknown word (foonorf)    -- let fooqux, foonorf;
./docs/src/rules/one-var.md:428:9     - Unknown word (fooqux)     -- let fooqux, foonorf;
./docs/src/rules/one-var.md:725:38    - Unknown word (onevar)     -- This rule maps to the `onevar` JSHint rule, but allows
./docs/src/rules/one-var.md:81:9      - Unknown word (norf)       -- let norf;
./docs/src/rules/padding-line-between-statements.md:81:9      - Unknown word (singleline) -- * `"singleline-const"` is single-line
./docs/src/rules/prefer-named-capture-group.md:21:19     - Unknown word (cauli)      -- const regex = /(?:cauli|sun)flower/;
./docs/src/rules/radix.md:10:305    - Unknown word (autodetected) -- , `parseInt()` also autodetected octal literals, which
./docs/src/rules/radix.md:24:72     - Unknown word (autodetects)  -- so that it no longer autodetects octal literals and instead
./docs/src/rules/space-unary-ops.md:12:101    - Unknown word (nonwords)   -- operators and after/before `nonwords` unary operators.
./docs/src/rules/spaced-comment.md:39:69     - Unknown word (doxygen)    -- documentation read by doxygen, vsdoc, etc. which must
./docs/src/rules/spaced-comment.md:39:78     - Unknown word (vsdoc)      -- ocumentation read by doxygen, vsdoc, etc. which must have
./docs/src/rules/use-isnan.md:2:12      - Unknown word (isnan)      -- title: use-isnan
./docs/src/rules/valid-typeof.md:31:17     - Unknown word (strnig)     -- typeof foo === "strnig"
./docs/src/rules/valid-typeof.md:32:16     - Unknown word (undefimed)  -- typeof foo == "undefimed"
./docs/src/rules/valid-typeof.md:33:16     - Unknown word (nunber)     -- typeof bar != "nunber"
./docs/src/rules/valid-typeof.md:34:17     - Unknown word (fucntion)   -- typeof bar !== "fucntion"
./docs/src/rules/yoda.md:80:22     - Unknown word (substr)     -- if (-1 < str.indexOf(substr)) {
./docs/src/static/feed.njk:31:79     - Unknown word (endset)     -- bsoluteUrl(metadata.url) }}{% endset %}
./docs/src/static/feed.njk:5:4       - Unknown word (eleventy)   -- "eleventyExcludeFromCollections
./docs/src/static/sitemap.njk:11:14     - Unknown word (lastmod)    -- <lastmod>{{ page.date.toISOString
./docs/src/static/sitemap.njk:12:14     - Unknown word (changefreq) -- <changefreq>{{ page.data.changeFreq
./docs/src/static/sitemap.njk:7:2       - Unknown word (urlset)     -- <urlset xmlns="http://www.sitemaps
./docs/src/use/command-line-interface.md:277:68    - Unknown word (levn)       -- configuration specified with [levn](https://github.com
./docs/src/use/command-line-interface.md:428:5     - Unknown word (myfile)     -- cat myfile.js | npx eslint --stdin
./docs/src/use/command-line-interface.md:520:17    - Unknown word (customformat) -- npx eslint -f ./customformat.js file.js
./docs/src/use/configure/configuration-files-new.md:181:136   - Unknown word (mylibrary)  -- unignores `node_modules/mylibrary`:
./docs/src/use/configure/configuration-files-new.md:268:564   - Unknown word (runtimes)   -- example, some older runtimes might only allow ECMAScript
./docs/src/use/configure/configuration-files.md:45:25     - Unknown word (myfiletotest) -- eslint -c myconfig.json myfiletotest.js
./docs/src/use/configure/ignore.md:102:200   - Unknown word (jshintignore) -- example, you can use `.jshintignore` file because it has
./docs/src/use/configure/ignore.md:114:181   - Unknown word (globbing)     -- not used. Note that globbing rules in `.eslintignore
./docs/src/use/configure/ignore.md:122:14    - Unknown word (mypackage)    -- "name": "mypackage",
./docs/src/use/configure/ignore.md:174:211   - Unknown word (reinclude)    -- the implicit rule and reinclude this file for linting
./docs/src/use/configure/ignore.md:34:186    - Unknown word (subdir)     -- foo.js` but not `lib/subdir/foo.js`.
./docs/src/use/configure/language-options.md:38:4      - Unknown word (qunit)      -- * `qunit` - QUnit global variables
./docs/src/use/configure/language-options.md:40:4      - Unknown word (prototypejs) -- * `prototypejs` - Prototype.js global
./docs/src/use/configure/language-options.md:44:4      - Unknown word (applescript) -- * `applescript` - AppleScript global
./docs/src/use/configure/language-options.md:45:22     - Unknown word (Nashorn)     -- `nashorn` - Java 8 Nashorn global variables.
./docs/src/use/configure/language-options.md:45:4      - Unknown word (nashorn)     -- * `nashorn` - Java 8 Nashorn global
./docs/src/use/configure/language-options.md:46:4      - Unknown word (serviceworker) -- * `serviceworker` - Service Worker global
./docs/src/use/configure/language-options.md:47:4      - Unknown word (atomtest)      -- * `atomtest` - Atom test helper
./docs/src/use/configure/language-options.md:48:4      - Unknown word (embertest)     -- * `embertest` - Ember test helper
./docs/src/use/configure/language-options.md:49:4      - Unknown word (webextensions) -- * `webextensions` - WebExtensions globals
./docs/src/use/configure/language-options.md:50:4      - Unknown word (greasemonkey)  -- * `greasemonkey` - GreaseMonkey globals
./docs/src/use/configure/migration-guide.md:126:31    - Unknown word (someplugin) -- modules/eslint-plugin-someplugin/index.js
./docs/src/use/configure/migration-guide.md:482:145   - Unknown word (Compat)     -- you can use the `FlatCompat` utility to translate
./docs/src/use/configure/migration-guide.md:499:7     - Unknown word (compat)     -- const compat = new FlatCompat({
./docs/src/use/configure/migration-guide.md:550:42    - Unknown word (dotfile)    -- config, dotfiles (e.g. `.dotfile.js`) are no longer ignored
./docs/src/use/configure/plugins.md:44:152    - Unknown word (pluginname) -- require('eslint-plugin-pluginname')` in the config file
./docs/src/use/configure/rules.md:25:294    - Unknown word (buildtime)  -- other than a potential buildtime or runtime error (such
./docs/src/use/getting-started.md:30:22     - Unknown word (semistandard) -- use `eslint-config-semistandard` shared config
./docs/src/use/getting-started.md:56:12     - Unknown word (yourfile)     -- npx eslint yourfile.js
./docs/src/use/getting-started.md:94:217    - Unknown word (npmjs)        -- "eslint-config" on [npmjs.com](https://www.npmjs
./docs/src/use/integrations.md:22:8      - Unknown word (Syntastic)  -- * [Syntastic](https://github.com
./docs/src/use/integrations.md:23:11     - Unknown word (Flycheck)   -- * Emacs: [Flycheck](http://www.flycheck
./docs/src/use/integrations.md:27:15     - Unknown word (tmbundle)   -- * [eslint.tmbundle](https://github.com
./docs/src/use/integrations.md:29:3      - Unknown word (Intelli)    -- * IntelliJ IDEA, WebStorm, PhpStorm
./docs/src/use/integrations.md:48:8      - Unknown word (Precommit)  -- * [Git Precommit Hook](https://coderwall
./docs/src/use/integrations.md:50:4      - Unknown word (overcommit) -- * [overcommit Git hook manager](https
./docs/src/use/migrate-to-8.0.0.md:234:20    - Unknown word (cliengine)  -- ## <a name="remove-cliengine"></a> The `CLIEngine
./docs/src/use/migrating-from-jscs.md:12:111    - Unknown word (jscsrs)     -- .jscsrc.yaml`, or `.jscsrs.js`. In ESLint, the
./docs/src/use/migrating-from-jscs.md:15:38     - Unknown word (Polyjuice)  -- Configuration Files Using Polyjuice
./docs/src/use/migrating-from-jscs.md:22:16     - Unknown word (polyjuice)  -- npm install -g polyjuice
./docs/src/use/migrating-from-jscs.md:60:4      - Unknown word (crockford)  -- | `crockford` | (not available
./docs/src/use/migrating-from-jscs.md:65:4      - Unknown word (mdcs)       -- | `mdcs` | [`eslint-config
./docs/src/use/migrating-to-2.0.0.md:347:45    - Unknown word (FEFF)       -- parse(text.replace(/^\uFEFF/, ""), options);
./docs/src/use/migrating-to-3.0.0.md:47:229    - Unknown word (lifed)      -- Explorer 8 was end-of-lifed](https://www.microsoft
./docs/src/use/migrating-to-5.0.0.md:114:68    - Unknown word (lintable)   -- line does not match any lintable files
./lib/cli-engine/formatters/html.js:247:66    - Unknown word (noopener)   -- target="_blank" rel="noopener noreferrer">${ruleId
./lib/cli-engine/formatters/html.js:247:75    - Unknown word (noreferrer) -- blank" rel="noopener noreferrer">${ruleId ? ruleId
./lib/cli-engine/formatters/html.js:303:9     - Unknown word (colspan)    -- <th colspan="4">
./lib/cli-engine/formatters/html.js:46:48     - Unknown word (Neue)       -- family: Arial, "Helvetica Neue", Helvetica, sans-serif
./lib/cli-engine/lint-result-cache.js:14:58     - Unknown word (jsonify)    -- stable-stringify-without-jsonify");
./lib/cli-engine/xml-escape.js:29:26     - Unknown word (apos)       -- return "&apos;";
./lib/cli.js:27:38     - Unknown word (humanwhocodes) -- ModuleImporter } = require("@humanwhocodes/module-importer");
./lib/config/default-config.js:56:61     - Unknown word (globbed)    -- ensure these files are globbed by default
./lib/config/flat-config-schema.js:16:35     - Unknown word (ungap)      -- structuredClone = require("@ungap/structured-clone").default
./lib/config/flat-config-schema.js:233:42    - Unknown word (incompat)   -- messageTemplate = "eslintrc-incompat";
./lib/eslint/eslint-helpers.js:19:26     - Unknown word (nodelib)    -- const fswalk = require("@nodelib/fs.walk");
./lib/eslint/eslint-helpers.js:19:7      - Unknown word (fswalk)     -- const fswalk = require("@nodelib
./lib/eslint/eslint-helpers.js:397:40    - Unknown word (prepopulated) -- for the cwd, which is prepopulated in the searches map
./lib/linter/code-path-analysis/code-path-state.js:1256:46   - Unknown word (circuting)   -- path due to the short-circuting, so we are just seeding
./lib/linter/code-path-analysis/code-path-state.js:1730:23   - Unknown word (Segs)        -- const prevSegsOfLeavingSegment = [headOfLeav
./lib/linter/code-path-analysis/code-path-state.js:351:34    - Unknown word (expresion)  -- The end of the update expresion. This may change during
./lib/linter/code-path-analysis/code-path-state.js:774:31    - Unknown word (unflattened) -- {CodePathSegment[]} unflattenedFromSegments Segments
./lib/linter/code-path-analysis/debug-helpers.js:95:44     - Unknown word (Graphvis)   -- can be visualized with Graphvis.
./lib/linter/config-comment-parser.js:82:22     - Unknown word (commaless)  -- // Also, commaless notations have invalid
./lib/linter/config-comment-parser.js:93:20     - Unknown word (Levn)       -- debug("Levn parsing failed; falling
./lib/linter/config-comment-parser.js:99:12     - Unknown word (Optionator) -- * Optionator cannot parse commaless
./lib/linter/linter.js:113:52    - Unknown word (postprocessor) -- postprocess} [postprocess] postprocessor for report
./lib/linter/linter.js:918:18    - Unknown word (SOURCECODE)    -- const DEPRECATED_SOURCECODE_PASSTHROUGHS = {
./lib/linter/linter.js:918:29    - Unknown word (PASSTHROUGHS)  -- DEPRECATED_SOURCECODE_PASSTHROUGHS = {
./lib/options.js:2:44      - Unknown word (optionator) -- Options configuration for optionator.
./lib/rule-tester/flat-rule-tester.js:236:42    - Unknown word (errorize)   -- ast The root node to errorize `start`/`end` properties
./lib/rule-tester/flat-rule-tester.js:791:27    - Unknown word (Didnt)      -- function assertASTDidntChange(beforeAST, afterAST
./lib/rule-tester/rule-tester.js:10:52     - Unknown word (unittests)  -- mocha to allow for DRY unittests for eslint
./lib/rules/dot-notation.js:138:63    - Unknown word (quasis)     -- node, node.property.quasis[0].value.cooked);
./lib/rules/for-direction.js:73:65     - Unknown word (nochange)   -- if sub return -1, if nochange, return 0
./lib/rules/func-name-matching.js:13:7      - Unknown word (esutils)    -- const esutils = require("esutils"
./lib/rules/id-match.js:240:45    - Unknown word (righthand)  -- // prevent checking righthand side of destructured
./lib/rules/indent-legacy.js:4:48      - Unknown word (nodeca)     -- ported and modified from nodeca.
./lib/rules/indent-legacy.js:573:43    - Unknown word (IIEF)       -- that the node is an IIEF
./lib/rules/indent-legacy.js:918:66    - Unknown word (blockless)  -- for indentation for blockless nodes
./lib/rules/indent.js:902:21    - Unknown word (Blockless)  -- function addBlocklessNodeIndent(node) {
./lib/rules/keyword-spacing.js:151:18    - Unknown word (unexpect)   -- function unexpectSpaceBefore(token, pattern
./lib/rules/lines-around-comment.js:23:22     - Unknown word (Nums)       -- function getEmptyLineNums(lines) {
./lib/rules/logical-assignment-operators.js:115:4     - Unknown word (falsiness)  -- * falsiness checks:   !value, !Boolean
./lib/rules/max-len.js:262:30    - Unknown word (accululated) -- * @returns {Object} accululated AST nodes
./lib/rules/no-caller.js:38:106    - Unknown word (calle)      -- propertyName.match(/^calle[er]$/u)) {
./lib/rules/no-constant-binary-expression.js:35:59     - Unknown word (nullishness) -- statically knowable constant nullishness. Meaning,
./lib/rules/no-constant-binary-expression.js:44:21     - Unknown word (Nullishness) -- function hasConstantNullishness(scope, node, nonNullish
./lib/rules/no-else-return.js:315:50    - Unknown word (codepath)    -- node returns in every codepath.
./lib/rules/no-else-return.js:351:19    - Unknown word (consequents) -- const consequents = [];
./lib/rules/no-else-return.js:80:16     - Unknown word (Redeclaring) -- * Redeclaring any of these would cause
./lib/rules/no-extend-native.js:121:87    - Unknown word (Propert)    -- callee, "Object", /^definePropert(?:y|ies)$/u)
./lib/rules/no-extra-parens.js:260:52    - Unknown word (newed)          -- constructor function is newed-up with parens
./lib/rules/no-extra-parens.js:2:27      - Unknown word (parenthesising) -- fileoverview Disallow parenthesising higher precedence subexpressi
./lib/rules/no-extra-parens.js:2:60      - Unknown word (subexpressions) -- enthesising higher precedence subexpressions.
./lib/rules/no-extra-parens.js:559:28    - Unknown word (logicals)       -- * Evaluate binary logicals
./lib/rules/no-extra-parens.js:565:19    - Unknown word (prec)           -- const prec = precedence(node);
./lib/rules/no-implicit-coercion.js:14:39     - Unknown word (ndex)       -- PATTERN = /^(?:i|lastI)ndexOf$/u;
./lib/rules/no-inline-comments.js:61:17     - Unknown word (postamble)  -- postamble = endLine.slice(node
./lib/rules/no-inline-comments.js:63:19     - Unknown word (Postamble)  -- isPostambleEmpty = !postamble;
./lib/rules/no-invalid-regexp.js:13:22     - Unknown word (dgimsuvy)   -- const validFlags = /[dgimsuvy]/gu;
./lib/rules/no-mixed-requires.js:182:62    - Unknown word (Declarators) -- The list of VariableDeclarators.
./lib/rules/no-mixed-requires.js:78:66     - Unknown word (iojs)       -- per nodejs v0.12.2 and iojs v0.7.1
./lib/rules/no-new-native-nonconstructor.js:32:18     - Unknown word (Nonconstructor) -- noNewNonconstructor: "`{{name}}` cannot
./lib/rules/no-trailing-spaces.js:60:13     - Unknown word (NONBLANK)   -- NONBLANK = `${BLANK_CLASS}+$
./lib/rules/no-useless-backreference.js:114:37    - Unknown word (bref's)     -- // group is bref's ancestor => bref is
./lib/rules/no-useless-backreference.js:75:40     - Unknown word (bref)       -- "Backreference '{{ bref }}' will be ignored
./lib/rules/no-useless-escape.js:32:47     - Unknown word (nrvtbfux)   -- ESCAPES = union(new Set("\\nrvtbfux"), astUtils.LINEBREAKS
./lib/rules/no-useless-escape.js:33:45     - Unknown word (Dfnp)       -- ESCAPES = new Set("\\bcdDfnpPrsStvwWxu0123456789
./lib/rules/no-useless-escape.js:33:52     - Unknown word (Stvw)       -- new Set("\\bcdDfnpPrsStvwWxu0123456789]");
./lib/rules/no-useless-escape.js:34:17     - Unknown word (CHARCLASS)  -- const REGEX_NON_CHARCLASS_ESCAPES = union(REGEX
./lib/rules/no-useless-escape.js:40:13     - Unknown word (CLASSSET)   -- const REGEX_CLASSSET_CHARACTER_ESCAPES =
./lib/rules/object-shorthand.js:102:34    - Unknown word (Longform)   -- expectedLiteralMethodLongform: "Expected longform
./lib/rules/object-shorthand.js:102:54    - Unknown word (longform)   -- eralMethodLongform: "Expected longform method syntax for string
./lib/rules/prefer-object-spread.js:61:42     - Unknown word (sourcecode) -- sourceCode in context sourcecode object
./lib/rules/quotes.js:42:17     - Unknown word (unescaping) -- * escaping and unescaping as necessary.
./lib/rules/sort-vars.js:53:23     - Unknown word (unfixable)  -- const unfixable = idDeclarations.some
./lib/rules/space-unary-ops.js:133:28    - Unknown word (Doesnt)     -- function verifyWordDoesntHaveSpaces(node, firstToken
./lib/rules/space-unary-ops.js:246:32    - Unknown word (Dont)       -- function verifyNonWordsDontHaveSpaces(node, firstToken
./lib/rules/utils/ast-utils.js:1041:89   - Unknown word (braket)     -- opening parenthesis or braket.
./lib/rules/utils/ast-utils.js:396:40    - Unknown word (samely)     -- a.b` and `a?.b` are samely.
./lib/rules/utils/patterns/letters.js:12:24     - Unknown word (Dulin)      -- Copyright 2013-2016 Dulin Marat and other contributors
./lib/shared/config-validator.js:286:55    - Unknown word (ECMAFEATURES) -- source, "ESLINT_LEGACY_ECMAFEATURES");
./lib/shared/string-utils.js:12:28     - Unknown word (graphemer)  -- Graphemer = require("graphemer").default;
./lib/shared/string-utils.js:12:7      - Unknown word (Graphemer)  -- const Graphemer = require("graphemer
./package.json:126:6     - Unknown word (eslump)     -- "eslump": "^3.0.0",
./package.json:138:6     - Unknown word (memfs)      -- "memfs": "^3.0.1",
./package.json:139:6     - Unknown word (metascraper) -- "metascraper": "^5.25.7",
./package.json:159:6     - Unknown word (webdriverio) -- "webdriverio": "^8.14.6",
./templates/blogpost.md.ejs:18:10     - Unknown word (linkify)    -- function linkify(line) {
./templates/blogpost.md.ejs:8:5       - Unknown word (eslintbot)  -- - eslintbot
./templates/formatter-examples.md.ejs:89:2      - Unknown word (iframe)     -- <iframe src="html-formatter
./tests/fixtures/autofix-integration/left-pad-expected-quiet.js:17:18     - Unknown word (leftpad)    -- module.exports = leftpad;
./tests/fixtures/code-path-analysis/try--try-finally-4.js:43:156    - Unknown word (Expressio)  -- Expression\nIdentifier (bar)\nExpressio
./tests/fixtures/config-extends/deep.json:10:26     - Unknown word (subsubdir)  -- extends": "./subdir/subsubdir/deeper.json"
./tests/fixtures/config-extends/subdir/subsubdir/deeper.json:10:19     - Unknown word (subsubsubdir) -- "extends": "./subsubsubdir/deepest.json"
./tests/fixtures/config-hierarchy/file-structure.json:19:10     - Unknown word (subbroken)  -- "subbroken": {
./tests/fixtures/config-hierarchy/file-structure.json:22:14     - Unknown word (subsubbroken) -- "subsubbroken": {
./tests/fixtures/config-hierarchy/file-structure.json:36:6      - Unknown word (fileexts)     -- "fileexts": {
./tests/fixtures/config-hierarchy/file-structure.json:57:6      - Unknown word (packagejson)  -- "packagejson": {
./tests/fixtures/parsers/arrow-parens/identifier-type.js:323:17    - Unknown word (binop)      -- binop: null,
./tests/fixtures/parsers/typescript-parsers/declare-class.js:4:14      - Unknown word (astexplorer) -- * Parsed on astexplorer.net using @typescript
./tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1.js:440:40    - Unknown word (youll)      -- terribly long description youll ' +
./tests/lib/cli-engine/cli-engine.js:1836:95   - Unknown word (fixmode)    -- fixtureDir, `${fixtureDir}/fixmode`)]);
./tests/lib/cli-engine/cli-engine.js:410:37    - Unknown word (layou)      -- fixTypes: ["layou"]
./tests/lib/cli-engine/cli-engine.js:4500:53   - Unknown word (sampleignorepattern) -- eslintignore` includes `sampleignorepattern`.
./tests/lib/cli-engine/cli-engine.js:4847:51   - Unknown word (somenamespace)       -- engine.getFormatter("@somenamespace/foo");
./tests/lib/cli-engine/cli-engine.js:4863:63   - Unknown word (doesntexist)         -- getFixturePath("formatters", "doesntexist.js"),
./tests/lib/cli-engine/cli-engine.js:621:44    - Unknown word (foothis)    -- output: "var bar = foothis is a syntax error."
./tests/lib/cli-engine/cli-engine.js:6450:87   - Unknown word (myconf)              -- config node_modules/myconf/.eslintrc.json',",
./tests/lib/cli-engine/cli-engine.js:6678:52   - Unknown word (extendees)           -- config file and linear extendees.", () => {
./tests/lib/cli.js:333:56    - Unknown word (fakeformatter) -- await cli.execute(`-f fakeformatter ${filePath}`);
./tests/lib/config/flat-config-array.js:1273:43   - Unknown word (truex)       -- foo: "truex"
./tests/lib/config/flat-config-array.js:154:22    - Unknown word (noniterable) -- it("should allow noniterable baseConfig objects"
./tests/lib/config/flat-config-array.js:1756:29   - Unknown word (foox)        -- foox: [1, "bar"]
./tests/lib/config/flat-config-array.js:1778:30   - Unknown word (doesnt)      -- "doesnt-exist/match": "error
./tests/lib/eslint/eslint.js:2797:39   - Unknown word (previos)    -- make sure that the previos assertion checks the
./tests/lib/eslint/eslint.js:2851:59   - Unknown word (intenationally) -- cacheFilePath, "[]"); // intenationally invalid to additionally
./tests/lib/eslint/eslint.js:3025:59   - Unknown word (occured)        -- the previous run that occured after the cache was
./tests/lib/eslint/flat-eslint.js:1130:57   - Unknown word (doesnotexist) -- lintFiles(["subdir1", "doesnotexist/*.js"]);
./tests/lib/eslint/flat-eslint.js:1205:58   - Unknown word (doesexist)    -- await eslint.lintFiles(["doesexist/*.js"]);
./tests/lib/eslint/flat-eslint.js:1687:30   - Unknown word (reignoring)   -- it("should allow reignoring of previously ignored
./tests/lib/eslint/flat-eslint.js:5316:31   - Unknown word (reignore)     -- cwd: `${root}-reignore`,
./tests/lib/eslint/flat-eslint.js:5356:31   - Unknown word (dignore)      -- cwd: `${root}-dignore`,
./tests/lib/linter/config-comment-parser.js:165:41    - Unknown word (ELEVENTEEN) -- code = "a: seventy, b:ELEVENTEEN";
./tests/lib/linter/linter.js:17912:52  - Unknown word (intentionaly)   -- // intentionaly mutates objects and
./tests/lib/linter/linter.js:3550:1    - Unknown word (consolexlog) -- consolexlog("test2");
./tests/lib/linter/linter.js:3696:84   - Unknown word (rulename)    -- this is 2, since the rulename is very likely to be
./tests/lib/linter/linter.js:5692:31   - Unknown word (suppresed)   -- it("should report one suppresed problem when noInlineConfig
./tests/lib/linter/linter.js:7851:19   - Unknown word (postprocessors) -- describe("postprocessors", () => {
./tests/lib/linter/node-event-generator.js:298:68    - Unknown word (pseudoclasses) -- // 0 identifiers, 0 pseudoclasses
./tests/lib/linter/node-event-generator.js:304:66    - Unknown word (pseudoclass)   -- ].expression], // 1 pseudoclass, 0 identifiers
./tests/lib/linter/report-translator.js:337:32    - Unknown word (fooo)       -- text: "fooo\nbar"
./tests/lib/linter/report-translator.js:394:34    - Unknown word (ncdar)      -- text: "o\ncdar"
./tests/lib/linter/rules.js:29:29     - Unknown word (michaelficarra) -- const ruleId = "michaelficarra";
./tests/lib/linter/source-code-fixer.js:63:19     - Unknown word (removestart) -- message: "removestart",
./tests/lib/linter/source-code-fixer.js:70:19     - Unknown word (removemiddle) -- message: "removemiddle",
./tests/lib/linter/source-code-fixer.js:77:19     - Unknown word (removeend)    -- message: "removeend",
./tests/lib/linter/source-code-fixer.js:84:19     - Unknown word (nofix)        -- message: "nofix"
./tests/lib/options.js:359:71    - Unknown word (morerules)  -- trcOptions.parse("--rulesdir /morerules");
./tests/lib/rule-tester/flat-rule-tester.js:1104:36   - Unknown word (somefile)   -- filename: "somefile.js"
./tests/lib/rule-tester/flat-rule-tester.js:2309:33   - Unknown word (outpt)      -- outpt: "var baz;"
./tests/lib/rule-tester/flat-rule-tester.js:2744:15   - Unknown word (Subclassing) -- describe("Subclassing", () => {
./tests/lib/rule-tester/flat-rule-tester.js:989:22    - Unknown word (noeval)     -- "noeval('foo')"
./tests/lib/rules/array-bracket-spacing.js:51:47     - Unknown word (n'qux)      -- [{\n'bar': 'baz', \n'qux': [{ 'bar': 'baz' }
./tests/lib/rules/array-bracket-spacing.js:51:76     - Unknown word (n'quxx)     -- { 'bar': 'baz' }], \n'quxx': 1 \n}]", options:
./tests/lib/rules/array-element-newline.js:45:78     - Unknown word (nosomething) -- ,\nfunction bar() {\nosomething();\n}\n];",
./tests/lib/rules/arrow-body-style.js:27:38     - Unknown word (nretv)      -- = (retv, name) => {\nretv[name] = true;\nreturn
./tests/lib/rules/brace-style.js:103:35    - Unknown word (fontstack)  -- code: "if (tag === 1) fontstack.name = pbf.readString
./tests/lib/rules/brace-style.js:32:44     - Unknown word (Varint)     -- glyph.id = pbf.readVarint();\nelse if (tag ==
./tests/lib/rules/capitalized-comments.js:344:22    - Unknown word (über)       -- code: "//über",
./tests/lib/rules/capitalized-comments.js:345:24    - Unknown word (Über)       -- output: "//Über",
./tests/lib/rules/comma-spacing.js:22:10     - Unknown word (myfunc)     -- "myfunc(404, true/* bla bla
./tests/lib/rules/comma-style.js:268:38    - Unknown word (fifi)       -- "const arr = [\n ,'fifi' \n]",
./tests/lib/rules/comma-style.js:69:36     - Unknown word (nsnd)       -- code: "var ar ={fst:1,\nsnd: [1,\n2]};",
./tests/lib/rules/getter-return.js:207:70    - Unknown word (getfoo)     -- bar', { get: function getfoo (){}});",
./tests/lib/rules/handle-callback-err.js:52:99     - Unknown word (rror)       -- options: ["^.+(e|E)rror$"] }
./tests/lib/rules/id-blacklist.js:136:41    - Unknown word (mydate)     -- ["array", "date", "mydate", "myarray", "new",
./tests/lib/rules/id-blacklist.js:136:51    - Unknown word (myarray)    -- "date", "mydate", "myarray", "new", "var"]
./tests/lib/rules/id-blacklist.js:189:47    - Unknown word (writability) -- myGlobal } = foo);", // writability doesn't affect the logic
./tests/lib/rules/id-blacklist.js:64:70     - Unknown word (bingg)      -- ba", "barr", "bazz", "bingg"]
./tests/lib/rules/id-length.js:50:22     - Unknown word (lalala)     -- { code: "var lalala = Foo(42)", options
./tests/lib/rules/id-length.js:625:29    - Unknown word (NOTMATCHED) -- code: "function NOTMATCHED_send() {};",
./tests/lib/rules/id-match.js:25:30     - Unknown word (Matthieu)   -- code: "__foo = \"Matthieu\"",
./tests/lib/rules/id-match.js:34:20     - Unknown word (firstname)  -- code: "firstname = \"Matthieu\"",
./tests/lib/rules/id-match.js:46:34     - Unknown word (Larcher)    -- code: "last_Name = \"Larcher\"",
./tests/lib/rules/indent-legacy.js:1662:18   - Unknown word (barqux)     -- " barqux, bazqux);",
./tests/lib/rules/indent-legacy.js:1662:26   - Unknown word (bazqux)     -- " barqux, bazqux);",
./tests/lib/rules/indent-legacy.js:324:16    - Unknown word (otherdata)  -- " otherdata.forEach(function(zero
./tests/lib/rules/indent-legacy.js:935:46    - Unknown word (xfilter)    -- function create (id, xfilter, rawType,\n" +
./tests/lib/rules/indent.js:3026:21   - Unknown word (curlies)    -- // Template curlies
./tests/lib/rules/indent.js:3691:30   - Unknown word (foop)       -- var x = function foop(bar)
./tests/lib/rules/indent.js:401:17    - Unknown word (lmnn)       -- lmnn = [{
./tests/lib/rules/indent.js:5255:34   - Unknown word (unindented) -- // Intentionally unindented comment
./tests/lib/rules/key-spacing.js:777:47    - Unknown word (longlonglong) -- 'bar' : 2, baz : 3, longlonglong : 4",
./tests/lib/rules/line-comment-position.js:45:23     - Unknown word (Meep)       -- code: "// Meep\nconsole.log('Meep'
./tests/lib/rules/lines-between-class-members.js:50:37     - Unknown word (nccc)       -- C {\naaa;\n\n#bbb;\n\nccc(){}\n\n#ddd(){}\n}"
./tests/lib/rules/max-len.js:422:22    - Unknown word (fizzbuzz)   -- "var fizzbuzz = 'but this one is matched
./tests/lib/rules/no-cond-assign.js:69:31     - Unknown word (bkufyydt)   -- code: "(((3496.29)).bkufyydt = 2e308) ? foo : bar
./tests/lib/rules/no-console.js:38:33     - Unknown word (myconsole)  -- var console = require('myconsole'); console.log(foo)
./tests/lib/rules/no-constant-condition.js:77:29     - Unknown word (fooa)       -- "if (`foo${a}` === 'fooa');",
./tests/lib/rules/no-constructor-return.js:26:22     - Unknown word (kumiko)     -- "function fn(kumiko) { if (kumiko) { return
./tests/lib/rules/no-constructor-return.js:32:28     - Unknown word (Kumiko)     -- code: "return 'Kumiko Oumae'",
./tests/lib/rules/no-constructor-return.js:32:35     - Unknown word (Oumae)      -- code: "return 'Kumiko Oumae'",
./tests/lib/rules/no-dupe-else-if.js:56:61     - Unknown word (subconditions) -- may contain redundant subconditions, but the branch can
./tests/lib/rules/no-duplicate-imports.js:94:32     - Unknown word (modns)      -- code: "import * as modns from \"lodash-es\";
./tests/lib/rules/no-eval.js:41:29     - Unknown word (noneval)    -- { code: "globalThis.noneval('foo')", env: { es2
./tests/lib/rules/no-extra-parens.js:781:32    - Unknown word (ipaddr)     -- code: "const net = ipaddr.parseCIDR(/** @type
./tests/lib/rules/no-inline-comments.js:127:37    - Unknown word (otherthing) -- ignorePattern: "otherthing"
./tests/lib/rules/no-invalid-regexp.js:70:35     - Unknown word (Nandinagari) -- RegExp('\\\\p{Script=Nandinagari}', 'u');",
./tests/lib/rules/no-invalid-regexp.js:74:35     - Unknown word (Cpmn)        -- RegExp('\\\\p{Script=Cpmn}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:75:35     - Unknown word (Cypro)       -- RegExp('\\\\p{Script=Cypro_Minoan}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:76:39     - Unknown word (Uyghur)      -- RegExp('\\\\p{Script=Old_Uyghur}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:77:35     - Unknown word (Ougr)        -- RegExp('\\\\p{Script=Ougr}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:78:35     - Unknown word (Tangsa)      -- RegExp('\\\\p{Script=Tangsa}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:79:35     - Unknown word (Tnsa)        -- RegExp('\\\\p{Script=Tnsa}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:81:35     - Unknown word (Vith)        -- RegExp('\\\\p{Script=Vith}', 'u')",
./tests/lib/rules/no-invalid-regexp.js:82:35     - Unknown word (Vithkuqi)    -- RegExp('\\\\p{Script=Vithkuqi}', 'u')",
./tests/lib/rules/no-prototype-builtins.js:233:52    - Unknown word (Expresion)  -- OwnProperty is part of a ChainExpresion
./tests/lib/rules/no-prototype-builtins.js:44:35     - Unknown word (Enumerabl)  -- code: "foo?.['propertyIsEnumerabl']('bar')", parserOptions
./tests/lib/rules/no-restricted-imports.js:359:84    - Unknown word (subimports) -- message: "some foo subimports are restricted" }]
./tests/lib/rules/no-script-url.js:25:21     - Unknown word (xjavascript) -- "var url = 'xjavascript:'",
./tests/lib/rules/no-tabs.js:24:17     - Unknown word (sdfdsf)     -- " //   sdfdsf \n" +
./tests/lib/rules/no-tabs.js:60:19     - Unknown word (tsdfdsf)    -- " //\tsdfdsf \n" +
./tests/lib/rules/no-undefined.js:38:10     - Unknown word (ndefined)   -- "ndefined",
./tests/lib/rules/no-unexpected-multiline.js:307:22    - Unknown word (gimuygimuygimuy) -- /bar/gimuygimuygimuy.test(baz)
./tests/lib/rules/no-unused-vars.js:957:32    - Unknown word (fooz)       -- code: "/* global a$fooz,$foo */\na$fooz;",
./tests/lib/rules/no-use-before-define.js:1129:17   - Unknown word (mdjermanovic) -- * TODO(mdjermanovic): Add the following
./tests/lib/rules/no-warning-comments.js:153:30    - Unknown word (litera)     -- code: "// regex [litera|$]",
./tests/lib/rules/no-warning-comments.js:37:92     - Unknown word (aeiou)      -- options: [{ terms: ["[aeiou]"], location: "anywhere
./tests/lib/rules/object-shorthand.js:222:30    - Unknown word (afoob)      -- code: "var x = { afoob: function() {}  }",
./tests/lib/rules/object-shorthand.js:22:7      - Unknown word (LONGFORM)   -- const LONGFORM_PROPERTY_ERROR = { messageId
./tests/lib/rules/prefer-arrow-callback.js:232:27    - Unknown word (amet)       -- dolor sit amet. */ {
./tests/lib/rules/prefer-object-spread.js:212:112   - Unknown word (butwhy)     -- {}, { superNested: 'butwhy' })))",
./tests/lib/rules/prefer-object-spread.js:699:39    - Unknown word (somethingelse) -- import { Something as somethingelse } from 'foo';
./tests/lib/rules/prefer-regex-literals.js:1608:65   - Unknown word (blahblah)   -- instanceof RegExp(String.raw`blahblah`, 'g') ? typeof new
./tests/lib/rules/prefer-regex-literals.js:1640:36   - Unknown word (someregular) -- code: "[   new RegExp(`someregular`)]",
./tests/lib/rules/prefer-regex-literals.js:1668:191  - Unknown word (notregbutstring) -- new RegExp('abc') : 'notregbutstring'",
./tests/lib/rules/prefer-regex-literals.js:2616:62   - Unknown word (avalue)          -- condition2) new RegExp('avalue').test(str);",
./tests/lib/rules/prefer-regex-literals.js:2807:32   - Unknown word (mysafereg)       -- code: "new RegExp('mysafereg' /* comment explaining
./tests/lib/rules/prefer-template.js:168:27    - Unknown word (unescapes)  -- code: "foo + 'unescapes an escaped single quote
./tests/lib/rules/quotes.js:532:24    - Unknown word (notoctal)   -- code: "var notoctal = '\\0'",
./tests/lib/rules/require-unicode-regexp.js:26:15     - Unknown word (gimuy)      -- "/foo/gimuy",
./tests/lib/rules/require-unicode-regexp.js:36:25     - Unknown word (gimu)       -- "const flags = 'gimu'; new RegExp('foo',
./tests/lib/rules/require-unicode-regexp.js:52:23     - Unknown word (gimvy)      -- { code: "/foo/gimvy", parserOptions: { ecmaVersio
./tests/lib/rules/require-unicode-regexp.js:61:33     - Unknown word (gimv)       -- code: "const flags = 'gimv'; new RegExp('foo',
./tests/lib/rules/require-unicode-regexp.js:84:25     - Unknown word (gimy)       -- code: "/foo/gimy",
./tests/lib/rules/require-unicode-regexp.js:90:39     - Unknown word (gimyu)      -- output: "/foo/gimyu"
./tests/lib/rules/semi.js:194:66    - Unknown word (mylib)      -- named2 } from 'src/mylib';", parserOptions:
./tests/lib/rules/sort-keys.js:261:24    - Unknown word (abce)       -- // abce
./tests/lib/rules/spaced-comment.js:115:54    - Unknown word (xmldoc)     -- comment\n//----\n/// xmldoc style comment\n//!<
./tests/lib/rules/spaced-comment.js:318:23    - Unknown word (endregion)  -- code: "//#endregion",
./tests/lib/rules/spaced-comment.js:649:23    - Unknown word (endregionfoo) -- code: "//#endregionfoo",
./tests/lib/rules/utils/ast-utils.js:1065:17   - Unknown word (ncde)       -- "ab\ncde\n": [[1, 0], [1, 1]
./tests/lib/rules/utils/ast-utils.js:1524:19   - Unknown word (invalidtoken) -- [["123invalidtoken", "("], false],
./tests/lib/rules/utils/ast-utils.js:686:52    - Unknown word (braceless)  -- empty array if node is a braceless ArrowFunctionExpression
./tests/lib/rules/valid-jsdoc.js:103:60    - Unknown word (mytest)     -- n* @param {string} p mytest\n*/\nFoo.bar = function
./tests/lib/rules/valid-jsdoc.js:323:21    - Unknown word (Astnode)    -- Astnode: "ASTNode"
./tests/lib/rules/valid-jsdoc.js:353:21    - Unknown word (astnode)    -- astnode: "ASTNode"
./tests/lib/rules/valid-typeof.js:91:40     - Unknown word (umdefined)  -- if (typeof bar === 'umdefined') {}",
./tests/lib/shared/config-validator.js:438:104   - Unknown word (booya)      -- rule"), "mock-rule", "booya", "tests");
./tests/lib/shared/config-validator.js:462:108   - Unknown word (frist)      -- , "mock-rule", [2, "frist"], "tests");
./tests/lib/shared/runtime-info.js:28:25     - Unknown word (Vals)       -- param {Array} returnVals Values to be returned
./tests/lib/shared/string-utils.js:37:9      - Unknown word (uppercases) -- it("uppercases the first letter of
./tests/performance/jshint.js:10050:6   - Unknown word (Fastpath)                -- // Fastpath empty strings
./tests/performance/jshint.js:10714:4   - Unknown word (Whoh)                    -- * Whoh there, Javascript, that
./tests/performance/jshint.js:1078:26   - Unknown word (Kovalyov)      -- Copyright 2012 Anton Kovalyov (http://jshint.com)
./tests/performance/jshint.js:10871:10  - Unknown word (verifuint)               -- function verifuint(value, max) {
./tests/performance/jshint.js:10983:48  - Unknown word (wuint)                   -- pass that off to the wuint* functions. To do that
./tests/performance/jshint.js:11009:10  - Unknown word (verifsint)               -- function verifsint(value, max, min) {
./tests/performance/jshint.js:11020:10  - Unknown word (verif)                   -- function verifIEEE754(value, max, min
./tests/performance/jshint.js:1125:6    - Unknown word (anonname)      -- var anonname, // The guessed name
./tests/performance/jshint.js:1166:4    - Unknown word (funcscope)     -- funcscope : true, // if only
./tests/performance/jshint.js:1169:4    - Unknown word (immed)         -- immed : true, // if
./tests/performance/jshint.js:1172:4    - Unknown word (lastsemic)     -- lastsemic : true, // if semicolons
./tests/performance/jshint.js:1174:4    - Unknown word (laxbreak)      -- laxbreak : true, // if line
./tests/performance/jshint.js:1175:4    - Unknown word (laxcomma)      -- laxcomma : true, // if line
./tests/performance/jshint.js:1176:4    - Unknown word (loopfunc)      -- loopfunc : true, // if functions
./tests/performance/jshint.js:1179:4    - Unknown word (multistr)      -- multistr : true, // allow
./tests/performance/jshint.js:1180:4    - Unknown word (newcap)        -- newcap : true, // if constructo
./tests/performance/jshint.js:1181:4    - Unknown word (noarg)         -- noarg : true, // if
./tests/performance/jshint.js:1185:4    - Unknown word (noempty)       -- noempty : true, // if empty
./tests/performance/jshint.js:1186:4    - Unknown word (nonew)         -- nonew : true, // if
./tests/performance/jshint.js:1192:4    - Unknown word (passfail)      -- passfail : true, // if the
./tests/performance/jshint.js:1203:4    - Unknown word (smarttabs)     -- smarttabs : true, // if smarttabs
./tests/performance/jshint.js:1207:4    - Unknown word (supernew)      -- supernew : true, // if `new
./tests/performance/jshint.js:1210:4    - Unknown word (validthis)     -- validthis : true, // if 'this
./tests/performance/jshint.js:1212:4    - Unknown word (withstmt)      -- withstmt : true, // if with
./tests/performance/jshint.js:1220:4    - Unknown word (onecase)       -- onecase : true, // if one
./tests/performance/jshint.js:1222:4    - Unknown word (regexdash)     -- regexdash : true  // if unescaped
./tests/performance/jshint.js:1231:4    - Unknown word (maxerr)        -- maxerr : false,
./tests/performance/jshint.js:1232:4    - Unknown word (predef)        -- predef : false,
./tests/performance/jshint.js:1235:4    - Unknown word (maxstatements) -- maxstatements: false, // {int} max
./tests/performance/jshint.js:1237:4    - Unknown word (maxparams)     -- maxparams : false, // {int
./tests/performance/jshint.js:1238:4    - Unknown word (maxcomplexity) -- maxcomplexity: false, // {int} max
./tests/performance/jshint.js:1244:4    - Unknown word (latedef)       -- latedef : false  // warn
./tests/performance/jshint.js:1280:3    - Unknown word (functionicity) -- functionicity = [
./tests/performance/jshint.js:1285:3    - Unknown word (funct)         -- funct, // The current function
./tests/performance/jshint.js:1290:3    - Unknown word (inblock)       -- inblock,
./tests/performance/jshint.js:1296:3    - Unknown word (noreach)       -- noreach,
./tests/performance/jshint.js:1301:3    - Unknown word (unuseds)       -- unuseds,
./tests/performance/jshint.js:1501:11   - Unknown word (isundef)       -- function isundef(scope, code, token,
./tests/performance/jshint.js:1502:17   - Unknown word (undefs)        -- return JSHINT.undefs.push([scope, code, token
./tests/performance/jshint.js:1586:11   - Unknown word (addlabel)      -- function addlabel(t, type, tkn, islet
./tests/performance/jshint.js:1606:17   - Unknown word (blockscope)    -- (funct["(blockscope)"].getlabel(t))) {
./tests/performance/jshint.js:1606:31   - Unknown word (getlabel)      -- funct["(blockscope)"].getlabel(t))) {
./tests/performance/jshint.js:1707:7    - Unknown word (numvals)       -- var numvals = [
./tests/performance/jshint.js:1839:30   - Unknown word (Newcap)        -- state.option["(explicitNewcap)"] = true;
./tests/performance/jshint.js:2059:11   - Unknown word (nobreak)       -- function nobreak(left, right) {
./tests/performance/jshint.js:2093:11   - Unknown word (nobreaknonadjacent) -- function nobreaknonadjacent(left, right) {
./tests/performance/jshint.js:2123:11   - Unknown word (nolinebreak)        -- function nolinebreak(t) {
./tests/performance/jshint.js:2130:11   - Unknown word (nobreakcomma)       -- function nobreakcomma(left, right) {
./tests/performance/jshint.js:2235:11   - Unknown word (blockstmt)          -- function blockstmt(s, f) {
./tests/performance/jshint.js:2298:11   - Unknown word (reservevar)         -- function reservevar(s, v) {
./tests/performance/jshint.js:2392:11   - Unknown word (assignop)           -- function assignop(s, f, p) {
./tests/performance/jshint.js:2468:11   - Unknown word (bitwiseassignop)    -- function bitwiseassignop(s) {
./tests/performance/jshint.js:2507:5    - Unknown word (fnparam)            -- // fnparam means that this identifier
./tests/performance/jshint.js:2511:11   - Unknown word (optionalidentifier) -- function optionalidentifier(fnparam, prop) {
./tests/performance/jshint.js:2590:21   - Unknown word (noindent)           -- function statement(noindent) {
./tests/performance/jshint.js:2775:5    - Unknown word (isfunc)             -- * isfunc - true if block is a
./tests/performance/jshint.js:2777:41   - Unknown word (isfatarrow)         -- ordinary, stmt, isfunc, isfatarrow) {
./tests/performance/jshint.js:2875:12   - Unknown word (nolet)              -- funct["(nolet)"] = true;
./tests/performance/jshint.js:3003:20   - Unknown word (comparray)          -- if (!funct["(comparray)"].check(v)) {
./tests/performance/jshint.js:3122:18   - Unknown word (assignadd)          -- assignop("+=", "assignadd", 20);
./tests/performance/jshint.js:3123:18   - Unknown word (assignsub)          -- assignop("-=", "assignsub", 20);
./tests/performance/jshint.js:3124:18   - Unknown word (assignmult)         -- assignop("*=", "assignmult", 20);
./tests/performance/jshint.js:3125:18   - Unknown word (assigndiv)          -- assignop("/=", "assigndiv", 20).nud = function
./tests/performance/jshint.js:3128:18   - Unknown word (assignmod)          -- assignop("%=", "assignmod", 20);
./tests/performance/jshint.js:3130:25   - Unknown word (assignbitand)       -- bitwiseassignop("&=", "assignbitand", 20);
./tests/performance/jshint.js:3131:25   - Unknown word (assignbitor)        -- bitwiseassignop("|=", "assignbitor", 20);
./tests/performance/jshint.js:3132:25   - Unknown word (assignbitxor)       -- bitwiseassignop("^=", "assignbitxor", 20);
./tests/performance/jshint.js:3133:26   - Unknown word (assignshiftleft)    -- bitwiseassignop("<<=", "assignshiftleft", 20);
./tests/performance/jshint.js:3134:26   - Unknown word (assignshiftright)   -- bitwiseassignop(">>=", "assignshiftright", 20);
./tests/performance/jshint.js:3135:27   - Unknown word (assignshiftrightunsigned) -- bitwiseassignop(">>>=", "assignshiftrightunsigned", 20);
./tests/performance/jshint.js:3163:8    - Unknown word (Precendence)              -- var orPrecendence = 40;
./tests/performance/jshint.js:3171:16   - Unknown word (bitor)                    -- bitwise("|", "bitor", 70);
./tests/performance/jshint.js:3172:16   - Unknown word (bitxor)                   -- bitwise("^", "bitxor", 80);
./tests/performance/jshint.js:3173:16   - Unknown word (bitand)                   -- bitwise("&", "bitand", 90);
./tests/performance/jshint.js:3205:17   - Unknown word (shiftleft)                -- bitwise("<<", "shiftleft", 120);
./tests/performance/jshint.js:3206:17   - Unknown word (shiftright)               -- bitwise(">>", "shiftright", 120);
./tests/performance/jshint.js:3207:18   - Unknown word (shiftrightunsigned)       -- bitwise(">>>", "shiftrightunsigned", 120);
./tests/performance/jshint.js:3251:14   - Unknown word (mult)                     -- infix("*", "mult", 140);
./tests/performance/jshint.js:3255:16   - Unknown word (postinc)                  -- suffix("++", "postinc");
./tests/performance/jshint.js:3256:16   - Unknown word (preinc)                   -- prefix("++", "preinc");
./tests/performance/jshint.js:3259:16   - Unknown word (postdec)                  -- suffix("--", "postdec");
./tests/performance/jshint.js:3260:16   - Unknown word (predec)                   -- prefix("--", "predec");
./tests/performance/jshint.js:3593:7    - Unknown word (blocktype)                -- var blocktype = lookupBlockType(true
./tests/performance/jshint.js:3663:11   - Unknown word (functionparams)           -- function functionparams(parsed) {
./tests/performance/jshint.js:3761:50   - Unknown word (fatarrowparams)           -- statement, generator, fatarrowparams) {
./tests/performance/jshint.js:3777:6    - Unknown word (loopage)                  -- "(loopage)" : 0,
./tests/performance/jshint.js:3817:11   - Unknown word (lastcharacter)            -- funct["(lastcharacter)"] = state.tokens.curr
./tests/performance/jshint.js:3896:21   - Unknown word (isclassdef)               -- x.nud = function (isclassdef) {
./tests/performance/jshint.js:3908:17   - Unknown word (basictkn)                 -- props[name].basictkn = tkn;
./tests/performance/jshint.js:4151:6    - Unknown word (conststatement)           -- var conststatement = stmt("const", function
./tests/performance/jshint.js:4220:6    - Unknown word (varstatement)             -- var varstatement = stmt("var", function
./tests/performance/jshint.js:4287:6    - Unknown word (letstatement)             -- var letstatement = stmt("let", function
./tests/performance/jshint.js:4288:28   - Unknown word (letblock)                 -- tokens, lone, value, letblock;
./tests/performance/jshint.js:4376:10   - Unknown word (classdef)                 -- return classdef.call(this, true);
./tests/performance/jshint.js:4392:3    - Unknown word (classtail)                -- classtail(this);
./tests/performance/jshint.js:443:2     - Unknown word (SVGCSS)     -- SVGCSSRule : false
./tests/performance/jshint.js:4747:7    - Unknown word (letscope)                 -- var letscope = false;
./tests/performance/jshint.js:4748:7    - Unknown word (foreachtok)               -- var foreachtok = null;
./tests/performance/jshint.js:4766:7    - Unknown word (nextop)                   -- var nextop; // contains the token
./tests/performance/jshint.js:4768:7    - Unknown word (inof)                     -- var inof = ["in", "of"];
./tests/performance/jshint.js:497:2     - Unknown word (SVGH)       -- SVGHKernElement : false
./tests/performance/jshint.js:498:2     - Unknown word (SVGICC)     -- SVGICCColor : false
./tests/performance/jshint.js:5040:9    - Unknown word (exportee)                 -- this.exportee = expression(10);
./tests/performance/jshint.js:506:2     - Unknown word (SVGM)       -- SVGMPathElement : false
./tests/performance/jshint.js:5119:49   - Unknown word (squarebracket)            -- to determine wether a squarebracket or a curlybracket
./tests/performance/jshint.js:5119:68   - Unknown word (curlybracket)             -- a squarebracket or a curlybracket
./tests/performance/jshint.js:5193:8    - Unknown word (carrays)                  -- var _carrays = [];
./tests/performance/jshint.js:53:9      - Unknown word (shtylman)   -- // TODO(shtylman)
./tests/performance/jshint.js:5670:9    - Unknown word (warnable)                 -- var warnable_types = {
./tests/performance/jshint.js:570:2     - Unknown word (SVGV)       -- SVGVKernElement : false
./tests/performance/jshint.js:5811:7    - Unknown word (implieds)                 -- var implieds = [];
./tests/performance/jshint.js:5928:9    - Unknown word (Unbegun)                  -- E018: "Unbegun comment.",
./tests/performance/jshint.js:593:9     - Unknown word (devel)      -- exports.devel = {
./tests/performance/jshint.js:5975:42   - Unknown word (preferrable)              -- literal notation [] is preferrable.",
./tests/performance/jshint.js:6338:7    - Unknown word (prereg)                   -- this.prereg = true;
./tests/performance/jshint.js:6657:13   - Unknown word (unbegun)                  -- // End of unbegun comment. Raise an error
./tests/performance/jshint.js:674:2     - Unknown word (toint)      -- toint32 : false,
./tests/performance/jshint.js:6754:46   - Unknown word (Titlecase)                -- Lowercase letter (Ll)", "Titlecase letter
./tests/performance/jshint.js:6759:15   - Unknown word (Traceur)                  -- // Google's Traceur.
./tests/performance/jshint.js:696:2     - Unknown word (pushd)      -- pushd : false,
./tests/performance/jshint.js:697:2     - Unknown word (popd)       -- popd : false,
./tests/performance/jshint.js:6984:56   - Unknown word (octals)                   -- the 9) are not valid octals
./tests/performance/jshint.js:703:2     - Unknown word (tempdir)    -- tempdir : false
./tests/performance/jshint.js:724:2     - Unknown word (dijit)      -- dijit : false,
./tests/performance/jshint.js:725:2     - Unknown word (dojox)      -- dojox : false,
./tests/performance/jshint.js:735:9     - Unknown word (mootools)   -- exports.mootools = {
./tests/performance/jshint.js:775:2     - Unknown word (Swiff)      -- Swiff : false,
./tests/performance/jshint.js:7902:29   - Unknown word (Ashkenas)                -- c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
./tests/performance/jshint.js:8006:10   - Unknown word (foldl)                   -- // or `foldl`. Delegates to **ECMAScript
./tests/performance/jshint.js:8026:62   - Unknown word (foldr)                   -- reduce, also known as `foldr`.
./tests/performance/jshint.js:811:2     - Unknown word (Autocompleter) -- Autocompleter : false,
./tests/performance/jshint.js:815:2     - Unknown word (Draggables)    -- Draggables : false,
./tests/performance/jshint.js:816:2     - Unknown word (Droppables)    -- Droppables : false,
./tests/performance/jshint.js:821:2     - Unknown word (Scriptaculous) -- Scriptaculous : false
./tests/performance/jshint.js:837:10    - Unknown word (maxlen)        -- /*jshint maxlen:1000 */
./tests/performance/jshint.js:8506:30   - Unknown word (hasher)                  -- memoize = function(func, hasher) {
./tests/performance/jshint.js:863:41    - Unknown word (jscript)       -- vascriptURL = /^(?:javascript|jscript|ecmascript|vbscript
./tests/performance/jshint.js:863:75    - Unknown word (livescript)    -- ecmascript|vbscript|mocha|livescript)\s*:/i;
./tests/performance/jshint.js:8726:25   - Unknown word (egal)                    -- // See the Harmony `egal` proposal: http://wiki
./tests/performance/jshint.js:8852:22   - Unknown word (inspectable)             -- // there isn't any inspectable "Arguments" type.
./tests/performance/jshint.js:8914:9    - Unknown word (accum)                   -- var accum = Array(n);
./tests/performance/jshint.js:9012:23   - Unknown word (templating)              -- // JavaScript micro-templating, similar to John Resig
./tests/performance/jshint.js:9012:51   - Unknown word (Resig's)                 -- templating, similar to John Resig's implementation.
./tests/performance/jshint.js:9066:66   - Unknown word (precompilation)          -- as a convenience for precompilation.
./tests/performance/jshint.js:9219:44   - Unknown word (shortcutted)             -- without properties can be shortcutted.
./tests/performance/jshint.js:954:7     - Unknown word (quotmark)      -- var quotmark = linter.getOption(
./tests/tools/eslint-fuzzer.js:124:50    - Unknown word (foos)       -- message: "no foos allowed",
./tools/fuzzer-runner.js:50:42     - Unknown word (elapseds)   -- rules [:bar] :percent, :elapseds elapsed, eta :etas,
./tools/update-readme.js:71:60     - Unknown word (valign)     -- `<td align="center" valign="top" width="11%">
./tools/update-rule-types.js:5:6       - Unknown word (jscodeshift) -- * jscodeshift -t tools/update-rule
./wdio.conf.js:121:16    - Unknown word (browserstack) -- * - @wdio/browserstack-service, @wdio/devtools
./wdio.conf.js:124:16    - Unknown word (sumologic)    -- * - @wdio/sumologic-reporter
./wdio.conf.js:129:19    - Unknown word (appium)       -- * '@wdio/appium-service': 'info'
./wdio.conf.js:150:5     - Unknown word (waitfor)      -- waitforTimeout: 10000,
./wdio.conf.js:177:48    - Unknown word (specfile)     -- to retry the entire specfile when it fails as a whole
./wdio.conf.js:183:31    - Unknown word (specfiles)    -- Whether or not retried specfiles should be retried immediately
./wdio.conf.js:224:76    - Unknown word (initialise)   -- spawned and can be used to initialise specific service
./wdio.conf.js:248:34    - Unknown word (initialising) -- executed just before initialising the webdriver session
./wdio.conf.js:318:39    - Unknown word (informations) -- Object} result.retries informations to spec related retries
