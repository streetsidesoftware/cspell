
Repository: caddyserver/caddy
Url: "https://github.com/caddyserver/caddy.git"
Args: ["**/*.go"]
Lines:
 CSpell: Files checked: 237, Issues found: 3443 in 217 files
 exit code: 1
./admin.go:1320:21   - Unknown word (pidfile)     -- // PIDFile writes a pidfile to the file at filename
./admin.go:432:24    - Unknown word (loggable)    -- zap.Array("origins", loggableURLArray(handler.allowedOrigin
./admin.go:43:14     - Unknown word (caddyserver) -- "github.com/caddyserver/certmagic"
./admin.go:43:26     - Unknown word (certmagic)   -- github.com/caddyserver/certmagic"
./admin.go:449:16    - Unknown word (caddytls)    -- // import the caddytls package -- but it works
./admin.go:452:33    - Unknown word (zerossl)     -- RawMessage(`{"module": "zerossl"}`),
./admin.go:50:56     - Unknown word (overidden)   -- DefaultAdminListen` can be overidden
./admin.go:549:23    - Unknown word (stdlib)      -- / convert logger to stdlib so it can be used by
./admin.go:819:23    - Unknown word (Redir)       -- if err == errInternalRedir {
./admin.go:922:29    - Unknown word (hasher)      -- etagHasher returns a the hasher we used on the config
./admin_test.go:108:10    - Unknown word (unsynced)   -- err := unsyncedConfigAccess(tc.method
./admin_test.go:121:23    - Unknown word (Unmarshaling) -- t.Fatalf("Test %d: Unmarshaling expected config: %v
./admin_test.go:170:42    - Unknown word (etag)         -- config with the wrong etag
./admin_test.go:177:14    - Unknown word (Hasher)       -- hash := etagHasher()
./admin_test.go:183:93    - Unknown word (Etag)         -- intField": 1}`), makeEtag(key, hash), false)
./admin_test.go:30:8      - Unknown word (myserver)   -- "myserver": {
./admin_test.go:34:8      - Unknown word (yourserver) -- "yourserver": {
./admin_test.go:44:10     - Unknown word (Unsynced)   -- func TestUnsyncedConfigAccess(t *testing
./caddy.go:706:24    - Unknown word (byeee)      -- logger.Warn("exiting; byeee!! ðŸ‘‹")
./caddy.go:849:47    - Unknown word (ldflags)    -- during `go build` with `-ldflags`:
./caddy.go:865:28    - Unknown word (devel)      -- this function returns "(devel)" because Go uses that
./caddyconfig/caddyfile/adapter.go:100:25    - Unknown word (unmarshaled) -- into JSON. Caddyfile-unmarshaled values
./caddyconfig/caddyfile/adapter.go:134:17    - Unknown word (Errf)        -- return nil, d.Errf("getting module named
./caddyconfig/caddyfile/adapter.go:15:9      - Unknown word (caddyfile)  -- package caddyfile
./caddyconfig/caddyfile/adapter.go:23:35     - Unknown word (caddyconfig) -- caddyserver/caddy/v2/caddyconfig"
./caddyconfig/caddyfile/adapter.go:26:19     - Unknown word (Caddyfile)   -- // Adapter adapts Caddyfile to Caddy JSON.
./caddyconfig/caddyfile/dispenser.go:107:2     - Unknown word (curr)       -- curr := d.tokens[d.cursor
./caddyconfig/caddyfile/dispenser.go:207:40    - Unknown word (unmarshaling) -- not relevant to any unmarshaling logic at this time.
./caddyconfig/caddyfile/dispenser.go:343:2     - Unknown word (tkns)         -- tkns := Segment{d.Token(
./caddyconfig/caddyfile/dispenser_test.go:300:37    - Unknown word (Testfile)   -- Contains(err.Error(), "Testfile:3") {
./caddyconfig/caddyfile/formatter.go:216:8     - Unknown word (Caddyfiles) -- // ...Caddyfiles should, however, end
./caddyconfig/caddyfile/formatter_fuzz.go:15:12     - Unknown word (gofuzz)     -- //go:build gofuzz
./caddyconfig/caddyfile/formatter_test.go:315:18    - Unknown word (redir)      -- input: `redir / /some/#/path`,
./caddyconfig/caddyfile/formatter_test.go:330:18    - Unknown word (matthewpi)  -- description: "matthewpi/vscode-caddyfile-support
./caddyconfig/caddyfile/formatter_test.go:332:10    - Unknown word (ACMEEMAIL)  -- email {$ACMEEMAIL}
./caddyconfig/caddyfile/lexer.go:332:29    - Unknown word (linebreak)  -- heredocs have an extra linebreak because the opening
./caddyconfig/caddyfile/lexer.go:332:6     - Unknown word (heredocs)   -- // heredocs have an extra linebreak
./caddyconfig/caddyfile/lexer_test.go:348:24    - Unknown word (Aheredoc)   -- input: []byte("\u000Aheredoc \u003C\u003C\u0073\u
./caddyconfig/caddyfile/parse.go:656:36    - Unknown word (Curlies)    -- parser) blockTokens(retainCurlies bool) ([]Token, error
./caddyconfig/caddyfile/parse.go:657:21    - Unknown word (curlies)    -- // block must have curlies.
./caddyconfig/caddyfile/parse_test.go:659:13    - Unknown word (foofoobarbar) -- expect: "foofoobarbar",
./caddyconfig/caddyfile/parse_test.go:671:13    - Unknown word (foobarfoobar) -- expect: "foobarfoobar",
./caddyconfig/caddyfile/parse_test.go:683:13    - Unknown word (foobarbaz)    -- expect: "foobarbaz",
./caddyconfig/httpcaddyfile/addresses.go:152:2     - Unknown word (sbaddrs)    -- sbaddrs := make([]sbAddrAssociation
./caddyconfig/httpcaddyfile/addresses.go:153:12    - Unknown word (sblocks)    -- for addr, sblocks := range addrToServerBlocks
./caddyconfig/httpcaddyfile/addresses.go:164:23    - Unknown word (Sblocks)    -- for otherAddr, otherSblocks := range addrToServerBlocks
./caddyconfig/httpcaddyfile/addresses.go:200:5     - Unknown word (hport)      -- if hport, ok := options["http
./caddyconfig/httpcaddyfile/addresses.go:203:5     - Unknown word (hsport)     -- if hsport, ok := options["https
./caddyconfig/httpcaddyfile/addresses.go:29:43     - Unknown word (caddyhttp)  -- caddyserver/caddy/v2/modules/caddyhttp"
./caddyconfig/httpcaddyfile/addresses.go:81:2      - Unknown word (sbmap)      -- sbmap := make(map[string]
./caddyconfig/httpcaddyfile/addresses.go:83:9      - Unknown word (sblock)     -- for i, sblock := range originalServerBlocks
./caddyconfig/httpcaddyfile/addresses_fuzz.go:17:9      - Unknown word (httpcaddyfile) -- package httpcaddyfile
./caddyconfig/httpcaddyfile/builtins.go:217:6     - Unknown word (subdir)     -- subdir := h.Val()
./caddyconfig/httpcaddyfile/builtins.go:261:35    - Unknown word (subdirective) -- nil, h.Errf("unknown subdirective for client_auth: %s
./caddyconfig/httpcaddyfile/builtins.go:270:8     - Unknown word (ALPN)         -- cp.ALPN = args
./caddyconfig/httpcaddyfile/builtins.go:35:14     - Unknown word (mholt)      -- "github.com/mholt/acmez/acme"
./caddyconfig/httpcaddyfile/builtins.go:35:20     - Unknown word (acmez)      -- "github.com/mholt/acmez/acme"
./caddyconfig/httpcaddyfile/builtins.go:493:8     - Unknown word (Vals)         -- configVals := []ConfigValue{}
./caddyconfig/httpcaddyfile/builtins.go:509:14    - Unknown word (subdirectives) -- // some tls subdirectives are shortcuts that implicitly
./caddyconfig/httpcaddyfile/builtins.go:742:35    - Unknown word (Subroute)      -- caddyhttp.Route, caddyhttp.Subroute:
./caddyconfig/httpcaddyfile/builtins.go:744:84    - Unknown word (subroute)      -- than an HTTP route or subroute: %#v (only handler directives
./caddyconfig/httpcaddyfile/builtins.go:80:8      - Unknown word (alpn)       -- // alpn
./caddyconfig/httpcaddyfile/builtins_test.go:175:31    - Unknown word (htlm)       -- /old.html /new.html htlm
./caddyconfig/httpcaddyfile/directives.go:245:58    - Unknown word (vals)       -- caddyhttp.Route type) in vals to the
./caddyconfig/httpcaddyfile/directives.go:474:54    - Unknown word (hostnames)  -- of all the non-empty hostnames found in
./caddyconfig/httpcaddyfile/directives.go:80:7      - Unknown word (fastcgi)    -- "php_fastcgi",
./caddyconfig/httpcaddyfile/httptype.go:1258:3    - Unknown word (hostm)      -- hostm caddyhttp.MatchHost
./caddyconfig/httpcaddyfile/httptype.go:1259:3    - Unknown word (pathm)      -- pathm caddyhttp.MatchPath
./caddyconfig/httpcaddyfile/httptype.go:1429:5    - Unknown word (hostport)   -- "{hostport}", "{http.request.hostport
./caddyconfig/httpcaddyfile/httptype.go:1519:3    - Unknown word (laddrs)     -- laddrs, err := caddy.ParseNetworkAdd
./caddyconfig/httpcaddyfile/httptype.go:185:12    - Unknown word (subroutes)  -- // some subroutes in this directive; we
./caddyconfig/httpcaddyfile/httptype.go:279:5     - Unknown word (annnd)      -- // annnd the top-level config
./caddyconfig/httpcaddyfile/httptype.go:301:12    - Unknown word (Cvtr)       -- if storageCvtr, ok := options["storage
./caddyconfig/httpcaddyfile/httptype.go:30:43     - Unknown word (caddypki)   -- caddyserver/caddy/v2/modules/caddypki"
./caddyconfig/httpcaddyfile/httptype.go:771:11    - Unknown word (cval)       -- for _, cval := range sblock.pile
./caddyconfig/httpcaddyfile/httptype_test.go:17:11     - Unknown word (showdebug)  -- query showdebug=1
./caddyconfig/httpcaddyfile/httptype_test.go:34:12     - Unknown word (somepath)   -- path /somepath*
./caddyconfig/httpcaddyfile/options.go:44:43     - Unknown word (ACMEDNS)    -- "acme_dns", parseOptACMEDNS)
./caddyconfig/httpcaddyfile/options.go:45:43     - Unknown word (ACMEEAB)    -- "acme_eab", parseOptACMEEAB)
./caddyconfig/httpcaddyfile/options_test.go:17:22     - Unknown word (caddytest)  -- // are present in: caddytest/integration/caddyfile
./caddyconfig/httpcaddyfile/pkiapp.go:65:33     - Unknown word (CAID)       -- ID = caddypki.DefaultCAID
./caddyconfig/httpcaddyfile/tlsapp.go:197:38    - Unknown word (Tailscale)  -- as desired (see the Tailscale listener plugin), so
./caddyconfig/httpcaddyfile/tlsapp.go:364:9     - Unknown word (ACMECA)     -- globalACMECA := options["acme_ca
./caddyconfig/httploader.go:71:7      - Unknown word (CAPEM)      -- RootCAPEMFiles []string `json
./caddytest/caddytest.go:24:14     - Unknown word (aryann)     -- "github.com/aryann/difflib"
./caddytest/caddytest.go:24:21     - Unknown word (difflib)    -- "github.com/aryann/difflib"
./caddytest/caddytest.go:256:12    - Unknown word (inprocess)   -- // start inprocess caddy server
./caddytest/caddytest.go:26:2      - Unknown word (caddycmd)   -- caddycmd "github.com/caddyserver
./caddytest/caddytest.go:296:36    - Unknown word (certificatename) -- convention to replace /[certificatename].[crt|key] with the
./caddytest/caddytest.go:329:67    - Unknown word (nolint)          -- InsecureSkipVerify: true}, //nolint:gosec
./caddytest/caddytest.go:329:74    - Unknown word (gosec)           -- reSkipVerify: true}, //nolint:gosec
./caddytest/caddytest.go:37:2      - Unknown word (Certifcates) -- Certifcates []string
./caddytest/caddytest.go:94:53     - Unknown word (configurion) -- configure the server with a configurion of a specific
./caddytest/integration/autohttps_test.go:20:11     - Unknown word (Yahaha)     -- respond "Yahaha! You found me!"
./caddytest/integration/caddyfile_test.go:82:11     - Unknown word (clientname) -- Name: "clientname",
./caddytest/integration/reverseproxy_test.go:43:20     - Unknown word (upstreams)  -- "dynamic_upstreams": {
./caddytest/integration/stream_test.go:155:3     - Unknown word (rstring)    -- rstring, err := httputil.DumpRequest
./caddytest/integration/stream_test.go:339:31    - Unknown word (automaticlly) -- underlying transport will automaticlly add gzip
./cmd/caddy/main.go:27:19     - Unknown word (xcaddy)     -- // Or you can use xcaddy which does it all for
./cmd/commandfuncs.go:127:16    - Unknown word (Pingback)   -- err = handlePingbackConn(conn, expect)
./cmd/commandfuncs.go:261:44    - Unknown word (USERPROFILE) -- == "" && os.Getenv("USERPROFILE") == "" && !hasXDG
./cmd/commandfuncs.go:44:10     - Unknown word (Pidfile)    -- startCmdPidfileFlag := fl.String("pidfile
./cmd/commandfuncs.go:57:30     - Unknown word (pingback)   -- craft the command with a pingback address and with a
./cmd/commandfuncs.go:82:2      - Unknown word (stdinpipe)  -- stdinpipe, err := cmd.StdinPipe
./cmd/commands.go:33:47     - Unknown word (godoc)      -- the RegisterCommand() godoc.
./cmd/commands.go:482:24    - Unknown word (compinit)    -- $ echo "autoload -U compinit; compinit" >> ~/.zshrc
./cmd/commands.go:79:40     - Unknown word (initialised) -- returns a list of commands initialised by
./cmd/main.go:36:20     - Unknown word (pflag)      -- "github.com/spf13/pflag"
./cmd/packagesfuncs.go:197:3     - Unknown word (iface)      -- iface := any(modInfo.New(
./cmd/packagesfuncs.go:39:8      - Unknown word (Pkgs)       -- pluginPkgs, err := getPluginPackages
./cmd/removebinary_windows.go:34:67     - Unknown word (windir)     -- filepath.Join(os.Getenv("windir"), "system32", "cmd
./context.go:230:48    - Unknown word (deallocate) -- raw bytes; allow GC to deallocate
./internal/metrics/metrics_test.go:19:28     - Unknown word (ohno)       -- method: strings.Repeat("ohno", 9999), expected:
./listen.go:101:6     - Unknown word (expliclty)  -- // expliclty assign it to nothing
./listen.go:51:50     - Unknown word (swappable)  -- servers become hot-swappable
./listen.go:77:6      - Unknown word (tconn)      -- if tconn, ok := conn.(canSetKeepAlive
./listen_unix_setopt_freebsd.go:7:11      - Unknown word (SOREUSEPORT) -- const unixSOREUSEPORT = unix.SO_REUSEPORT
./listeners.go:154:8     - Unknown word (Abtract)    -- var isAbtractUnixSocket bool
./listeners.go:317:38    - Unknown word (netw)       -- returns true if the netw is a unix network.
./listeners.go:343:48    - Unknown word (rwxr)       -- returns a string like `-rwxr-xr--` for `u=rwx,g=rx
./listeners.go:512:20    - Unknown word (QUICTLS)    -- sqtc := newSharedQUICTLSConfig(tlsConf)
./listeners.go:512:3     - Unknown word (sqtc)       -- sqtc := newSharedQUICTLSConfig
./listeners.go:574:5     - Unknown word (Confs)      -- tlsConfs map[*tls.Config
./listeners.go:601:5     - Unknown word (cacc)       -- if cacc, ok := sqtc.tlsConfs
./listeners.go:684:113   - Unknown word (assertable) -- net.PacketConn type assertable to a net.Conn,
./listeners.go:689:7     - Unknown word (fcpc)       -- func (fcpc *fakeClosePacketConn
./listeners.go:705:25    - Unknown word (hotswappable) -- someone would need a hotswappable QUIC-only (not http
./listeners.go:709:7     - Unknown word (fcql)         -- func (fcql *fakeCloseQuicListener
./logging.go:258:7     - Unknown word (wdest)      -- func (wdest writerDestructor) Destruct
./logging.go:353:21    - Unknown word (shorcut)    -- // at all, so just shorcut to a nop core instead
./logging.go:425:10    - Unknown word (superspace) -- // be a superspace or subspace of an item
./metrics.go:38:15     - Unknown word (promhttp)   -- // Similar to promhttp.InstrumentHandlerCounter
./metrics.go:9:50      - Unknown word (promauto)   -- client_golang/prometheus/promauto"
./modules.go:312:56    - Unknown word (provisionings) -- cleaning up from partial provisionings.
./modules/caddyevents/app.go:127:12    - Unknown word (Iface)       -- handlersIface, err := ctx.LoadModule
./modules/caddyevents/app.go:15:9      - Unknown word (caddyevents) -- package caddyevents
./modules/caddyevents/app.go:371:41    - Unknown word (specversion) -- string `json:"specversion"`
./modules/caddyevents/app.go:374:41    - Unknown word (datacontenttype) -- string `json:"datacontenttype,omitempty"`
./modules/caddyevents/eventsconfig/caddyfile.go:15:12     - Unknown word (eventsconfig) -- // Package eventsconfig is for configuring caddyevent
./modules/caddyhttp/app.go:529:5     - Unknown word (hrough)     -- // hrough a reload; because if
./modules/caddyhttp/autohttps.go:271:16    - Unknown word (tailscale)  -- var internal, tailscale []string
./modules/caddyhttp/autohttps.go:497:12    - Unknown word (reprovision) -- // must reprovision the automation policy
./modules/caddyhttp/autohttps.go:682:4     - Unknown word (reprovisioned) -- // reprovisioned. acmeIssuer must not
./modules/caddyhttp/autohttps.go:699:28    - Unknown word (TLSALPN)       -- acmeIssuer.Challenges.TLSALPN == nil {
./modules/caddyhttp/caddyauth/basicauth.go:15:9      - Unknown word (caddyauth)  -- package caddyauth
./modules/caddyhttp/caddyauth/basicauth.go:22:2      - Unknown word (weakrand)   -- weakrand "math/rand"
./modules/caddyhttp/caddyauth/caddyauth.go:73:6      - Unknown word (authed)     -- var authed bool
./modules/caddyhttp/caddyauth/hashes.go:140:58    - Unknown word (fakesalt)   -- antitiming" --salt "fakesalt" --algorithm "scrypt
./modules/caddyhttp/caddyauth/hashes.go:62:38     - Unknown word (antitiming) -- password --plaintext "antitiming" --algorithm "bcrypt
./modules/caddyhttp/caddyauth/hashes.go:63:26     - Unknown word (ulqf)       -- return []byte("$2a$14$X3ulqf/iGxnf1k6oMZ.RZeJUoqI
./modules/caddyhttp/caddyauth/hashes.go:63:32     - Unknown word (Gxnf)       -- byte("$2a$14$X3ulqf/iGxnf1k6oMZ.RZeJUoqI9PX2PM
./modules/caddyhttp/caddyauth/hashes.go:63:69     - Unknown word (LGXG)       -- RZeJUoqI9PX2PM4rS5lkIKJXduLGXGPrt6")
./modules/caddyhttp/caddyhttp.go:123:26    - Unknown word (routse)     -- Provision sets up the routse in rh.
./modules/caddyhttp/caddyhttp.go:134:30    - Unknown word (unmarshals) -- WeakString is a type that unmarshals any JSON value
./modules/caddyhttp/caddyhttp_test.go:55:21     - Unknown word (fbar)       -- inputPath: "/..%2fbar",
./modules/caddyhttp/celmatcher.go:365:16    - Unknown word (Libary)     -- type matcherCELLibary struct {
./modules/caddyhttp/celmatcher.go:370:62    - Unknown word (setes)      -- matcherLibrary from option setes.
./modules/caddyhttp/celmatcher.go:41:2      - Unknown word (exprpb)     -- exprpb "google.golang.org/genproto
./modules/caddyhttp/celmatcher.go:41:28     - Unknown word (genproto)   -- exprpb "google.golang.org/genproto/googleapis/api/expr
./modules/caddyhttp/celmatcher.go:41:37     - Unknown word (googleapis) -- golang.org/genproto/googleapis/api/expr/v1alpha1"
./modules/caddyhttp/celmatcher_test.go:57:60     - Unknown word (localdomain) -- subject} == 'CN=client.localdomain'",
./modules/caddyhttp/encode/brotli/brotli_precompressed.go:12:62     - Unknown word (precompressed) -- extension for files precompressed with brotli encoding
./modules/caddyhttp/encode/brotli/brotli_precompressed.go:12:81     - Unknown word (brotli)        -- files precompressed with brotli encoding.
./modules/caddyhttp/encode/brotli/brotli_precompressed.go:1:9       - Unknown word (caddybrotli) -- package caddybrotli
./modules/caddyhttp/encode/brotli/brotli_precompressed.go:9:23      - Unknown word (Brotli)      -- caddy.RegisterModule(BrotliPrecompressed{})
./modules/caddyhttp/encode/brotli/brotli_precompressed.go:9:29      - Unknown word (Precompressed) -- RegisterModule(BrotliPrecompressed{})
./modules/caddyhttp/encode/caddyfile.go:44:8      - Unknown word (zstd)       -- // zstd
./modules/caddyhttp/encode/encode.go:19:65     - Unknown word (Httpgzip)   -- Copyright (c) 2015 The Httpgzip Authors.
./modules/caddyhttp/encode/encode.go:276:4     - Unknown word (deallocates) -- // deallocates any active resources
./modules/caddyhttp/encode/encode.go:335:2     - Unknown word (prefs)       -- prefs := []encodingPreference
./modules/caddyhttp/encode/encode.go:54:59     - Unknown word (Mmatcher)   -- against this ResponseMmatcher.
./modules/caddyhttp/encode/gzip/gzip.go:24:14     - Unknown word (klauspost)  -- "github.com/klauspost/compress/gzip"
./modules/caddyhttp/encode/gzip/gzip_precompressed.go:1:9       - Unknown word (caddygzip)  -- package caddygzip
./modules/caddyhttp/encode/zstd/zstd.go:28:20     - Unknown word (Zstandard)  -- // Zstd can create Zstandard encoders.
./modules/caddyhttp/encode/zstd/zstd_precompressed.go:12:79     - Unknown word (zstandard)  -- files precompressed with zstandard encoding.
./modules/caddyhttp/encode/zstd/zstd_precompressed.go:1:9       - Unknown word (caddyzstd)  -- package caddyzstd
./modules/caddyhttp/encode/zstd/zstd_precompressed.go:9:23      - Unknown word (Zstd)       -- caddy.RegisterModule(ZstdPrecompressed{})
./modules/caddyhttp/errors.go:92:18     - Unknown word (abcdefghijkmnopqrstuvwxyz) -- dict := []byte("abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY
./modules/caddyhttp/errors.go:92:43     - Unknown word (ABCDEFGHJKLMNPQRTUVWXY)    -- abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY23456789")
./modules/caddyhttp/errors.go:94:18     - Unknown word (abcdefghijkmnpqrstuvwxyz)  -- dict = []byte("abcdefghijkmnpqrstuvwxyz0123456789")
./modules/caddyhttp/fileserver/browse.go:47:7      - Unknown word (fsrv)       -- func (fsrv *FileServer) serveBrowse
./modules/caddyhttp/fileserver/browsetplcontext.go:113:37    - Unknown word (browseable) -- parent directory is browseable.
./modules/caddyhttp/fileserver/browsetplcontext.go:149:2     - Unknown word (lpath)      -- lpath := l.Path
./modules/caddyhttp/fileserver/browsetplcontext.go:160:67    - Unknown word (unescaping) -- the loop rather than unescaping the
./modules/caddyhttp/fileserver/browsetplcontext.go:316:24    - Unknown word (namedirfirst) -- sortByNameDirFirst = "namedirfirst"
./modules/caddyhttp/fileserver/browsetplcontext_test.go:72:15     - Unknown word (corge)      -- {"/qux/quux/corge/", []crumb{
./modules/caddyhttp/fileserver/browsetplcontext_test.go:78:6      - Unknown word (Ù…Ø¬Ù„Ø¯)       -- {"/Ù…Ø¬Ù„Ø¯/", []crumb{
./modules/caddyhttp/fileserver/caddyfile.go:119:6     - Unknown word (precompress) -- precompress, ok := inst.(encode
./modules/caddyhttp/fileserver/caddyfile.go:121:46    - Unknown word (precompressor) -- "module %s is not a precompressor; is %T", modID, inst
./modules/caddyhttp/fileserver/caddyfile.go:80:5      - Unknown word (fsys)       -- fsys, ok := unm.(fs.FS)
./modules/caddyhttp/fileserver/command.go:29:2      - Unknown word (caddytpl)   -- caddytpl "github.com/caddyserver
./modules/caddyhttp/fileserver/matcher.go:323:3     - Unknown word (fullpath)   -- fullpath, relative, splitRemainder
./modules/caddyhttp/fileserver/matcher.go:552:2     - Unknown word (nlen)       -- nlen := len(needle)
./modules/caddyhttp/fileserver/matcher_test.go:192:20    - Unknown word (notphp)      -- path: "/notphp.php.txt",
./modules/caddyhttp/fileserver/matcher_test.go:72:20     - Unknown word (foodir)     -- path: "/foodir",
./modules/caddyhttp/fileserver/matcher_test.go:90:15     - Unknown word (missingfile) -- path: "/missingfile.php",
./modules/caddyhttp/fileserver/staticfiles.go:115:51    - Unknown word (explictness)      -- maximum clarity and explictness, use complete,
./modules/caddyhttp/fileserver/staticfiles.go:153:2     - Unknown word (precompressors)   -- precompressors map[string]encode
./modules/caddyhttp/fileserver/staticfiles.go:327:12    - Unknown word (canonicalization) -- // if URL canonicalization is enabled, we need
./modules/caddyhttp/fileserver/staticfiles.go:432:3     - Unknown word (mtyp)             -- mtyp := mime.TypeByExtension
./modules/caddyhttp/fileserver/staticfiles.go:497:3     - Unknown word (backoff)          -- backoff := weakrand.Intn(maxBackoff
./modules/caddyhttp/fileserver/staticfiles.go:497:31    - Unknown word (Backoff)          -- := weakrand.Intn(maxBackoff-minBackoff) + minBackoff
./modules/caddyhttp/fileserver/staticfiles.go:508:74    - Unknown word (Caza)             -- written by Nathaniel Caza.
./modules/caddyhttp/fileserver/staticfiles.go:64:34     - Unknown word (canonicalize) -- default, this handler will canonicalize URIs so that requests
./modules/caddyhttp/fileserver/staticfiles.go:67:4      - Unknown word (Canonicalization) -- // Canonicalization redirects are not issued
./modules/caddyhttp/headers/headers.go:187:27    - Unknown word (Superceded) -- they are written out. Superceded if Require is set.
./modules/caddyhttp/headers/headers_test.go:216:11    - Unknown word (hdrs)       -- for k, hdrs := range tc.respHeader
./modules/caddyhttp/headers/headers_test.go:93:32     - Unknown word (lalala)     -- Header-Suffix": []string{"lalala"},
./modules/caddyhttp/headers/headers_test.go:96:32     - Unknown word (foofoofoo)  -- Me": []string{"foofoofoo"},
./modules/caddyhttp/httpredirectlistener.go:147:44    - Unknown word (OPTIO)      -- "POST ", "PUT /", "OPTIO":
./modules/caddyhttp/ip_matchers.go:302:15    - Unknown word (Adresses)   -- // Some IPv6-Adresses can contain zone identifiers
./modules/caddyhttp/map/caddyfile.go:15:9      - Unknown word (maphandler) -- package maphandler
./modules/caddyhttp/map/map_test.go:53:16     - Unknown word (Cxyz)       -- reqURI: "/ABCxyzDEF",
./modules/caddyhttp/map/map_test.go:93:24     - Unknown word (testvar)    -- Outputs: []any{"{testvar}"},
./modules/caddyhttp/marshalers.go:26:4      - Unknown word (Loggable)   -- // LoggableHTTPRequest makes an
./modules/caddyhttp/marshalers.go:84:49     - Unknown word (marshalable) -- makes a slice of strings marshalable for logging.
./modules/caddyhttp/matchers.go:1246:22   - Unknown word (embedable)  -- / MatchRegexp is an embedable type for matching
./modules/caddyhttp/matchers.go:136:53    - Unknown word (escapings)  -- including those with bad escapings or illegal characters
./modules/caddyhttp/matchers.go:595:22    - Unknown word (rawpath)    -- // we can now treat rawpath globs (%*) as regular
./modules/caddyhttp/matchers.go:800:22    - Unknown word (WHATWG)     -- // Despite the URL WHATWG spec mandating the use
./modules/caddyhttp/matchers.go:801:56    - Unknown word (Filippo)    -- lementation is different, and Filippo Valsorda rightly wrote
./modules/caddyhttp/matchers.go:801:64    - Unknown word (Valsorda)   -- different, and Filippo Valsorda rightly wrote:
./modules/caddyhttp/matchers_test.go:254:14    - Unknown word (FOOOO)      -- input: "/FOOOO",
./modules/caddyhttp/matchers_test.go:289:20    - Unknown word (Fbar)       -- input: "/foo/%2Fbar",
./modules/caddyhttp/matchers_test.go:510:60    - Unknown word (myparam)    -- Pattern: "^/foo/(?P<myparam>.*)/baz$", Name: "name
./modules/caddyhttp/matchers_test.go:590:25    - Unknown word (Alakazam)   -- input: http.Header{"Alakazam": []string{"kapow"}
./modules/caddyhttp/matchers_test.go:590:46    - Unknown word (kapow)      -- Alakazam": []string{"kapow"}},
./modules/caddyhttp/matchers_test.go:719:35    - Unknown word (wildcarded) -- non match against a wildcarded",
./modules/caddyhttp/matchers_test.go:733:17    - Unknown word (someparam)  -- input: "/?someparam",
./modules/caddyhttp/matchers_test.go:763:17    - Unknown word (somekey)    -- input: "/?somekey=1",
./modules/caddyhttp/matchers_test.go:810:43    - Unknown word (barfoo)     -- Header{"Field": []string{"barfoo", "foobar"}},
./modules/caddyhttp/metrics.go:128:26    - Unknown word (behaviour)  -- Effectively the same behaviour as promhttp.InstrumentHandler
./modules/caddyhttp/metrics.go:131:3     - Unknown word (ttfb)       -- ttfb := time.Since(start
./modules/caddyhttp/metrics.go:135:2     - Unknown word (wrec)       -- wrec := NewResponseRecorder
./modules/caddyhttp/metrics_test.go:10:50     - Unknown word (testutil)   -- client_golang/prometheus/testutil"
./modules/caddyhttp/proxyprotocol/listenerwrapper.go:15:9      - Unknown word (proxyprotocol) -- package proxyprotocol
./modules/caddyhttp/proxyprotocol/listenerwrapper.go:23:14     - Unknown word (mastercactapus) -- "github.com/mastercactapus/proxyprotocol"
./modules/caddyhttp/proxyprotocol/module.go:33:44     - Unknown word (Listenerwrapper) -- sets up the listener Listenerwrapper from Caddyfile tokens
./modules/caddyhttp/requestbody/caddyfile.go:15:9      - Unknown word (requestbody) -- package requestbody
./modules/caddyhttp/responsewriter_test.go:23:6      - Unknown word (barebones)  -- // a barebones http.ResponseWriter
./modules/caddyhttp/reverseproxy/addresses.go:69:20     - Unknown word (proxying)   -- // a backend and proxying to it, so we cannot
./modules/caddyhttp/reverseproxy/admin.go:26:28     - Unknown word (Upstreams)  -- RegisterModule(adminUpstreams{})
./modules/caddyhttp/reverseproxy/fastcgi/client.go:113:27    - Unknown word (MPXS)       -- MultiplexConns string = "MPXS_CONNS"
./modules/caddyhttp/reverseproxy/fastcgi/client.go:20:19     - Unknown word (Junqing)    -- // Copyright 2012 Junqing Tan <ivan@mysqlab.net
./modules/caddyhttp/reverseproxy/fastcgi/client.go:45:18     - Unknown word (Fileno)     -- // FCGIListenSockFileno describes listen socket
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:104:35    - Unknown word (filemd)     -- Fprintln(resp, "server:filemd5 ", md5 )
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:185:35    - Unknown word (fcgict)     -- Join(os.TempDir(), "fcgict"+strconv.Itoa(rand.Int
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:50:26     - Unknown word (fcgic)      -- scriptFile = "/tank/www/fcgic_test.php"
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:51:25     - Unknown word (serv)       -- ipPort = "remote-php-serv:59000"
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:55:5      - Unknown word (globalt)    -- var globalt *testing.T
./modules/caddyhttp/reverseproxy/fastcgi/client_test.go:87:34     - Unknown word (filekey)    -- Fprintln(resp, "server:filekey ", kn )
./modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:15:9      - Unknown word (forwardauth) -- package forwardauth
./modules/caddyhttp/reverseproxy/healthchecks.go:114:5     - Unknown word (Canonicalize) -- // Canonicalize the header keys ahead
./modules/caddyhttp/reverseproxy/healthchecks.go:46:35     - Unknown word (proxied)    -- health checks monitor proxied requests for errors
./modules/caddyhttp/reverseproxy/healthchecks.go:471:71    - Unknown word (forgetter)    -- health check failure forgetter panicked",
./modules/caddyhttp/reverseproxy/httptransport.go:211:73    - Unknown word (generelly)  -- and this address is generelly of very
./modules/caddyhttp/reverseproxy/httptransport.go:292:18    - Unknown word (Alives)     -- rt.DisableKeepAlives = !*h.KeepAlive.Enabled
./modules/caddyhttp/reverseproxy/httptransport.go:303:37    - Unknown word (keepalives) -- Logger().Warn("disabling keepalives, they are incompatible
./modules/caddyhttp/reverseproxy/httptransport.go:349:3     - Unknown word (newtransport) -- newtransport := &HTTPTransport{
./modules/caddyhttp/reverseproxy/reverseproxy.go:1317:56   - Unknown word (libcurl)    -- standard but still sent by libcurl and rejected by e.g
./modules/caddyhttp/reverseproxy/reverseproxy.go:1321:16   - Unknown word (canonicalized) -- "Te", // canonicalized version of "TE"
./modules/caddyhttp/reverseproxy/reverseproxy.go:179:22    - Unknown word (roundtrips) -- // after successful roundtrips. The first handler that
./modules/caddyhttp/reverseproxy/reverseproxy.go:537:5     - Unknown word (succ)       -- if succ, ok := proxyErr.(roundtripSuc
./modules/caddyhttp/reverseproxy/reverseproxy.go:575:26    - Unknown word (gunicorn)   -- with "slow clients" (gunicorn, etc.) - this obviously
./modules/caddyhttp/reverseproxy/reverseproxy.go:577:47    - Unknown word (slowloris)  -- more susceptible to slowloris
./modules/caddyhttp/reverseproxy/reverseproxy.go:618:50    - Unknown word (websockets) -- upgrades, such as for websockets.
./modules/caddyhttp/reverseproxy/reverseproxy.go:748:31    - Unknown word (backported) -- Forward 1xx status codes, backported from https://github
./modules/caddyhttp/reverseproxy/selectionpolicies.go:798:65    - Unknown word (hashable)   -- from pool based on a hashable string s.
./modules/caddyhttp/reverseproxy/selectionpolicies_test.go:123:45    - Unknown word (availablity) -- select first host on availablity.")
./modules/caddyhttp/reverseproxy/streaming.go:124:6     - Unknown word (timeoutc)    -- var timeoutc <-chan time.Time
./modules/caddyhttp/reverseproxy/streaming.go:131:2     - Unknown word (errc)        -- errc := make(chan error,
./modules/caddyhttp/reverseproxy/streaming.go:215:7     - Unknown word (rerr)        -- nr, rerr := src.Read(buf)
./modules/caddyhttp/reverseproxy/streaming.go:227:8     - Unknown word (werr)        -- nw, werr := dst.Write(buf[:nr
./modules/caddyhttp/reverseproxy/streaming.go:324:37    - Unknown word (pascaldekloe) -- connection. Thanks to @pascaldekloe who provided inspiration
./modules/caddyhttp/reverseproxy/streaming.go:68:22     - Unknown word (cancelation) -- // Ensure that the cancelation of a request closes
./modules/caddyhttp/reverseproxy/upstreams.go:112:2     - Unknown word (srvs)       -- srvsMu.RLock()
./modules/caddyhttp/reverseproxy/upstreams.go:394:4     - Unknown word (failovers)  -- // failovers, especially in conjunction
./modules/caddyhttp/rewrite/caddyfile.go:126:50    - Unknown word (substr)     -- append(rewr.URISubstring, substrReplacer{
./modules/caddyhttp/rewrite/caddyfile.go:42:6      - Unknown word (rewr)       -- var rewr Rewrite
./modules/caddyhttp/rewrite/rewrite_test.go:311:40    - Unknown word (fsuffix)    -- StripPathSuffix: "%2fsuffix"},
./modules/caddyhttp/rewrite/rewrite_test.go:322:59    - Unknown word (findme)     -- substrReplacer{{Find: "findme", Replace: "replaced
./modules/caddyhttp/rewrite/rewrite_test.go:64:40     - Unknown word (Fbaz)       -- newRequest(t, "GET", "/bar%3Fbaz?c=d"),
./modules/caddyhttp/rewrite/rewrite_test.go:80:49     - Unknown word (Ffoo)       -- GET", "/index.php?p=%2Ffoo%2Fbar"),
./modules/caddyhttp/routes.go:163:9     - Unknown word (midhandler) -- for _, midhandler := range r.Handlers
./modules/caddyhttp/routes.go:342:16    - Unknown word (mset)       -- // matchers in mset or if there are no matchers
./modules/caddyhttp/routes.go:375:19    - Unknown word (Ifaces)     -- for _, matcherSetIfaces := range matcherSets
./modules/caddyhttp/server.go:72:15     - Unknown word (alives)     -- // when keep-alives are enabled. If zero
./modules/caddyhttp/server.go:93:21     - Unknown word (unrouted)   -- // By default, all unrouted requests receive a
./modules/caddyhttp/server_test.go:12:14     - Unknown word (stretchr)   -- "github.com/stretchr/testify/assert"
./modules/caddyhttp/server_test.go:19:9      - Unknown word (Syncer)     -- type nopSyncer writeFunc
./modules/caddyhttp/staticresp.go:270:60    - Unknown word (unflagged)  -- fmt.Errorf("too many unflagged arguments")
./modules/caddyhttp/subroute.go:55:22     - Unknown word (subrouting) -- / Provision sets up subrouting.
./modules/caddyhttp/templates/templates.go:151:18    - Unknown word (mydir)      -- // {{listFiles "/mydir"}}
./modules/caddyhttp/templates/templates.go:157:5     - Unknown word (Goldmark)   -- // [Goldmark](https://github.com
./modules/caddyhttp/templates/templates.go:233:4     - Unknown word (sitename)   -- // sitename = "A Caddy site"
./modules/caddyhttp/templates/templates.go:312:4     - Unknown word (Customfunctions) -- // Customfunctions is the interface for
./modules/caddyhttp/templates/templates.go:394:14    - Unknown word (etags)           -- // and weak etags still cause browsers
./modules/caddyhttp/templates/templates.go:60:15     - Unknown word (cookiename) -- // {{.Cookie "cookiename"}}
./modules/caddyhttp/templates/tplcontext.go:187:2     - Unknown word (virt)       -- virtReq, err := http.NewRequest
./modules/caddyhttp/templates/tplcontext.go:33:2      - Unknown word (chromahtml) -- chromahtml "github.com/alecthomas
./modules/caddyhttp/templates/tplcontext.go:33:25     - Unknown word (alecthomas) -- chromahtml "github.com/alecthomas/chroma/v2/formatters
./modules/caddyhttp/templates/tplcontext.go:37:14     - Unknown word (yuin)       -- "github.com/yuin/goldmark"
./modules/caddyhttp/templates/tplcontext.go:37:19     - Unknown word (goldmark)   -- "github.com/yuin/goldmark"
./modules/caddyhttp/templates/tplcontext.go:41:2      - Unknown word (gmhtml)     -- gmhtml "github.com/yuin/goldmark
./modules/caddyhttp/templates/tplcontext.go:454:12    - Unknown word (dataerr)    -- dataint, dataerr := strconv.ParseUint
./modules/caddyhttp/templates/tplcontext.go:454:3     - Unknown word (dataint)    -- dataint, dataerr := strconv
./modules/caddyhttp/templates/tplcontext.go:461:3     - Unknown word (timelayout) -- timelayout := time.RFC1123Z
./modules/caddyhttp/templates/tplcontext.go:476:24    - Unknown word (niladic)    -- WrappedHeader wraps niladic functions so that they
./modules/caddyhttp/templates/tplcontext_test.go:488:75    - Unknown word (ctxtest)    -- tplContext.Root), "caddy_ctxtest")
./modules/caddyhttp/tracing/module.go:29:21     - Unknown word (opentelemetry) -- // otel implements opentelemetry related logic.
./modules/caddyhttp/tracing/module.go:29:5      - Unknown word (otel)       -- // otel implements opentelemetry
./modules/caddyhttp/tracing/module_test.go:105:3     - Unknown word (traceparent) -- traceparent := request.Header.Get
./modules/caddyhttp/tracing/module_test.go:105:38    - Unknown word (Traceparent) -- request.Header.Get("Traceparent")
./modules/caddyhttp/tracing/tracer.go:10:56     - Unknown word (otelhttp)   -- instrumentation/net/http/otelhttp"
./modules/caddyhttp/tracing/tracer.go:11:43     - Unknown word (autoprop)   -- contrib/propagators/autoprop"
./modules/caddyhttp/tracing/tracer.go:12:38     - Unknown word (otlp)       -- entelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc
./modules/caddyhttp/tracing/tracer.go:12:43     - Unknown word (otlptrace)  -- otel/exporters/otlp/otlptrace/otlptracegrpc"
./modules/caddyhttp/tracing/tracer.go:12:53     - Unknown word (otlptracegrpc) -- exporters/otlp/otlptrace/otlptracegrpc"
./modules/caddyhttp/tracing/tracer.go:15:2      - Unknown word (sdktrace)      -- sdktrace "go.opentelemetry.io
./modules/caddyhttp/tracing/tracer.go:16:2      - Unknown word (semconv)       -- semconv "go.opentelemetry.io
./modules/caddypki/acmeserver/acmeserver.go:15:9      - Unknown word (acmeserver) -- package acmeserver
./modules/caddypki/acmeserver/acmeserver.go:248:17    - Unknown word (bbolt)      -- Type: "bbolt",
./modules/caddypki/acmeserver/acmeserver.go:33:14     - Unknown word (smallstep)  -- "github.com/smallstep/certificates/acme"
./modules/caddypki/acmeserver/acmeserver.go:35:55     - Unknown word (nosql)      -- certificates/acme/db/nosql"
./modules/caddypki/ca.go:192:31    - Unknown word (Smallstep)  -- NewAuthority returns a new Smallstep-powered signing authority
./modules/caddypki/ca.go:32:24     - Unknown word (truststore) -- github.com/smallstep/truststore"
./modules/caddypki/certificates.go:22:21     - Unknown word (keyutil)    -- "go.step.sm/crypto/keyutil"
./modules/caddypki/pki.go:94:69     - Unknown word (unconfigured) -- installation disabled; unconfigured clients may show warnings
./modules/caddytls/acmeissuer.go:142:45    - Unknown word (libdns)     -- implemented for the libdns APIs instead.
./modules/caddytls/acmeissuer.go:260:16    - Unknown word (tlsalpn)    -- // disable_tlsalpn_challenge
./modules/caddytls/acmeissuer.go:55:27     - Unknown word (mothership) -- not sent to any Caddy mothership or used for any purpose
./modules/caddytls/automation.go:98:54     - Unknown word (othewise)   -- public certificates; othewise acme and
./modules/caddytls/certmanagers.go:15:24     - Unknown word (tscert)     -- github.com/tailscale/tscert"
./modules/caddytls/certselection.go:124:34    - Unknown word (interops)   -- a big.Int type that interops with JSON encodings
./modules/caddytls/connpolicy.go:174:20    - Unknown word (SSLKEYLOGFILE) -- // Also known as "SSLKEYLOGFILE", TLS secrets will be
./modules/caddytls/connpolicy.go:176:5     - Unknown word (Wireshark)     -- // Wireshark and other tools. This
./modules/caddytls/connpolicy.go:281:17    - Unknown word (ACMETLS)       -- if a == acmez.ACMETLS1Protocol {
./modules/caddytls/connpolicy.go:320:11    - Unknown word (destructable)  -- return destructableWriter{w}, err
./modules/caddytls/connpolicy.go:401:27    - Unknown word (clientauth)    -- Active returns true if clientauth has an actionable configurati
./modules/caddytls/connpolicy.go:410:46    - Unknown word (clientauth's)  -- sets up cfg to enforce clientauth's configuration.
./modules/caddytls/connpolicy.go:569:33    - Unknown word (unmarshalable) -- PublicKeyAlgorithm is a JSON-unmarshalable wrapper type.
./modules/caddytls/distributedstek/distributedstek.go:15:12     - Unknown word (distributedstek) -- // Package distributedstek provides TLS session
./modules/caddytls/distributedstek/distributedstek.go:229:18    - Unknown word (godocs)          -- // again, see godocs for why timer is stopped
./modules/caddytls/distributedstek/distributedstek.go:45:38     - Unknown word (STEK)            -- implements a distributed STEK provider. This
./modules/caddytls/distributedstek/distributedstek.go:56:2      - Unknown word (stek)            -- stekConfig *caddytls.SessionTicket
./modules/caddytls/distributedstek/distributedstek.go:99:2      - Unknown word (dstek)           -- dstek, err := s.getSTEK()
./modules/caddytls/internalissuer.go:96:4      - Unknown word (confgured)  -- // confgured CA endpoint.
./modules/caddytls/matchers.go:111:37    - Unknown word (addresss)   -- Error("invalid client IP addresss", zap.String("ip", ipStr
./modules/caddytls/standardstek/stek.go:15:9      - Unknown word (standardstek) -- package standardstek
./modules/caddytls/standardstek/stek.go:49:2      - Unknown word (itvl)         -- itvl := time.Duration(s.stekConfig
./modules/caddytls/tls.go:224:25    - Unknown word (unmanaged)  -- load manual/static (unmanaged) certificates - we do
./modules/caddytls/tls.go:244:28    - Unknown word (Unmanaged)  -- hash, err := magic.CacheUnmanagedTLSCertificate(ctx, cert
./modules/caddytls/values.go:23:24     - Unknown word (cpuid)      -- github.com/klauspost/cpuid/v2"
./modules/caddytls/values.go:52:28     - Unknown word (AESNI)      -- defaultCipherSuitesWithAESNI = []uint16{
./modules/caddytls/values.go:88:3      - Unknown word (secp)       -- "secp256r1": tls.CurveP25
./modules/caddytls/zerosslissuer.go:109:82    - Unknown word (compat)     -- preserves backwards-compat, but which black-holes
./modules/caddytls/zerosslissuer.go:141:3     - Unknown word (EABKID)     -- EABKID string `json:"eab
./modules/caddytls/zerosslissuer.go:142:3     - Unknown word (EABHMAC)    -- EABHMACKey string `json:"eab
./modules/filestorage/filestorage.go:15:9      - Unknown word (filestorage) -- package filestorage
./modules/logging/encoders.go:52:25     - Unknown word (milli)      -- ce.TimeFormat = "wall_milli"
./modules/logging/filewriter.go:28:12     - Unknown word (natefinch)  -- "gopkg.in/natefinch/lumberjack.v2"
./modules/logging/filters_test.go:131:2     - Unknown word (outval)     -- outval := out.Interface.(caddyhttp
./modules/logging/filters_test.go:89:20     - Unknown word (notexist)   -- {replaceAction, "notexist", "REDACTED"},
./modules/logging/netwriter.go:94:13     - Unknown word (redialer)   -- reconn := &redialerConn{
./modules/logging/netwriter.go:94:2      - Unknown word (reconn)     -- reconn := &redialerConn{
./modules/metrics/metrics.go:119:14    - Unknown word (quantile)   -- // except quantile/le label values always
./modules/metrics/metrics_test.go:29:52     - Unknown word (openmetrics) -- tDispenser(`metrics { disable_openmetrics }`)
./replacer_test.go:250:14    - Unknown word (NOOO)       -- return "NOOO", false
./replacer_test.go:275:26    - Unknown word (Ã¤Ã¼test)     -- expected: "val1123Ã¶Ã¶_Ã¤Ã¼test-123space value1.2.3
./replacer_test.go:290:17    - Unknown word (teval)      -- expected: "{teval1{as{{dftest-123",
./replacer_test.go:290:28    - Unknown word (dftest)     -- expected: "{teval1{as{{dftest-123",
./replacer_test.go:376:37    - Unknown word (envtest)    -- CADDY_REPLACER_TEST", "envtest")
./sigtrap_posix.go:32:3      - Unknown word (sigchan)    -- sigchan := make(chan os.Signal
./storage.go:38:20     - Unknown word (sdcard)     -- // which returns "/sdcard".
./storage.go:59:23     - Unknown word (HOMEDRIVE)  -- drive := os.Getenv("HOMEDRIVE")
./storage.go:60:22     - Unknown word (HOMEPATH)   -- path := os.Getenv("HOMEPATH")
./usagepool.go:217:10    - Unknown word (deallocated) -- // it is deallocated.
