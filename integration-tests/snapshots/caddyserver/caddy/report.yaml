---
Repository: caddyserver/caddy
Url: https://github.com/caddyserver/caddy.git
Args: '["**/*.go"]'
Summary:
  files: 276
  filesWithIssues: 252
  issues: 3661
  errors: 0
Errors: []

issues:
  - "admin_test.go:30:8          myserver        U       \"myserver\": {"
  - "admin_test.go:34:8          yourserver      U       \"yourserver\": {"
  - "admin_test.go:44:10         Unsynced        U       func TestUnsyncedConfigAccess(t *testing"
  - "admin_test.go:114:10        unsynced        U       err := unsyncedConfigAccess(tc.method"
  - "admin.go:42:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "admin.go:42:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "admin.go:43:14          cespare         U       \"github.com/cespare/xxhash/v2\""
  - "admin.go:43:22          xxhash          U       \"github.com/cespare/xxhash/v2\""
  - "admin.go:164:12         certmagic       U       issuers []certmagic.Issuer"
  - "admin.go:331:29         infosec         U       security checks, the infosec community assures me"
  - "admin.go:457:24         loggable        U       zap.Array(\"origins\", loggableURLArray(handler.allowedOrigin"
  - "admin.go:474:16         caddytls        U       // import the caddytls package -- but it works"
  - "admin.go:488:76         certmagic       U       Identity.issuers, issVal.(certmagic.Issuer))"
  - "admin.go:498:30         certmagic       U       cfg.Admin.Identity.certmagicConfig(logger, true)"
  - "admin.go:501:25         caddytls        U       as explained in the caddytls package, they need access"
  - "admin.go:504:30         caddytls        U       avoid import cycle with caddytls package, so manually"
  - "admin.go:505:56         certmagic       U       interface{ SetConfig(cfg *certmagic.Config) }); ok {"
  - "admin.go:573:23         stdlib          U       / convert logger to stdlib so it can be used by"
  - "admin.go:843:23         Redir           U       if err == errInternalRedir {"
  - "admin.go:948:38         xxhash          U       hash.Hash { return xxhash.New() }"
  - "admin.go:1072:20        Redir           U       return errInternalRedir"
  - "admin.go:1087:4         unsynced        U       // unsyncedConfigAccess traverses"
  - "admin.go:1093:6         unsynced        U       func unsyncedConfigAccess(method,"
  - "admin.go:1348:6         loggable        U       type loggableURLArray []*url.URL"
  - "admin.go:1350:10        loggable        U       func (ua loggableURLArray) MarshalLogArray"
  - "admin.go:1371:21        pidfile         U       // PIDFile writes a pidfile to the file at filename"
  - "admin.go:1379:2         pidfile         U       pidfile = filename"
  - "admin.go:1389:4         pidfile         U       // pidfile is the name of the pidfile"
  - "admin.go:1389:31        pidfile         U       pidfile is the name of the pidfile, if any."
  - "admin.go:1390:5         pidfile         U       var pidfile string"
  - "admin.go:1392:15        Redir           U       // errInternalRedir indicates an internal"
  - "admin.go:1397:16        Redir           U       var errInternalRedir = fmt.Errorf(\"internal"
  - "caddy.go:38:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "caddy.go:38:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "caddy.go:42:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal/filesystems"
  - "caddy.go:43:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/notify\""
  - "caddy.go:85:10          certmagic       U       storage certmagic.Storage"
  - "caddy.go:189:10         unsynced        U       err := unsyncedConfigAccess(http.MethodGet"
  - "caddy.go:202:9          unsynced        U       err := unsyncedConfigAccess(method,"
  - "caddy.go:234:8          unsynced        U       err = unsyncedDecodeAndRun(newCfg,"
  - "caddy.go:268:9          unsynced        U       return unsyncedConfigAccess(http.MethodGet"
  - "caddy.go:309:4          unsynced        U       // unsyncedDecodeAndRun removes"
  - "caddy.go:483:5          certmagic       U       certmagic.Default.Storage = currentCtx"
  - "caddy.go:529:3          certmagic       U       certmagic.Default.Storage = newCfg"
  - "caddy.go:734:24         byeee           U       logger.Warn(\"exiting; byeee!! ðŸ‘‹\")"
  - "caddy.go:745:14         certmagic       U       // clean up certmagic locks"
  - "caddy.go:748:12         pidfile         U       // remove pidfile"
  - "caddy.go:749:5          pidfile         U       if pidfile != \"\" {"
  - "caddy.go:750:20         pidfile         U       err := os.Remove(pidfile)"
  - "caddy.go:753:17         pidfile         U       zap.String(\"pidfile\", pidfile),"
  - "caddy.go:753:27         pidfile         U       zap.String(\"pidfile\", pidfile),"
  - "caddy.go:910:47         ldflags         U       during `go build` with `-ldflags`:"
  - "caddy.go:912:5          ldflags         U       // -ldflags '-X github.com/caddyserver"
  - "caddy.go:912:28         caddyserver     U       ldflags '-X github.com/caddyserver/caddy/v2.CustomVersion"
  - "caddy.go:926:28         devel           U       this function returns \"(devel)\" because Go uses that"
  - "caddy.go:1023:33        devel           U       = \"\" || simple == \"(devel)\" {"
  - "caddy.go:1084:32        caddyserver     U       ImportPath = \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/caddyfile/adapter.go:15:9           caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/adapter.go:22:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/caddyfile/adapter.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/caddyfile/adapter.go:23:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/caddyfile/adapter.go:26:19          Caddyfile       U       // Adapter adapts Caddyfile to Caddy JSON."
  - "caddyconfig/caddyfile/adapter.go:31:23          Caddyfile       U       Adapt converts the Caddyfile config in body to Caddy"
  - "caddyconfig/caddyfile/adapter.go:32:72          caddyconfig     U       string]any) ([]byte, []caddyconfig.Warning, error) {"
  - "caddyconfig/caddyfile/adapter.go:42:15          Caddyfile       U       filename = \"Caddyfile\""
  - "caddyconfig/caddyfile/adapter.go:56:52          Caddyfile       U       logical errors (the Caddyfile is a bad format, I'm"
  - "caddyconfig/caddyfile/adapter.go:69:58          caddyconfig     U       string, body []byte) (caddyconfig.Warning, bool) {"
  - "caddyconfig/caddyfile/adapter.go:75:10          caddyconfig     U       return caddyconfig.Warning{}, false"
  - "caddyconfig/caddyfile/adapter.go:88:9           caddyconfig     U       return caddyconfig.Warning{"
  - "caddyconfig/caddyfile/adapter.go:91:13          Caddyfile       U       Message: \"Caddyfile input is not formatted"
  - "caddyconfig/caddyfile/adapter.go:130:17         Errf            U       return nil, d.Errf(\"getting module named"
  - "caddyconfig/caddyfile/adapter.go:135:17         Errf            U       return nil, d.Errf(\"module %s is not a"
  - "caddyconfig/caddyfile/dispenser_test.go:15:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/dispenser_test.go:309:20      Errf            U       bookingError := d.Errf(\"unable to reserve:"
  - "caddyconfig/caddyfile/dispenser_test.go:311:13      Errf            U       t.Errorf(\"Errf(): should be able to"
  - "caddyconfig/caddyfile/dispenser.go:15:9         caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/dispenser.go:111:2        curr            U       curr := d.tokens[d.cursor"
  - "caddyconfig/caddyfile/dispenser.go:113:22       curr            U       if !isNextOnNewLine(curr, next) {"
  - "caddyconfig/caddyfile/dispenser.go:132:2        curr            U       curr := d.tokens[d.cursor"
  - "caddyconfig/caddyfile/dispenser.go:134:21       curr            U       if isNextOnNewLine(curr, next) {"
  - "caddyconfig/caddyfile/dispenser.go:347:2        tkns            U       tkns := Segment{d.Token("
  - "caddyconfig/caddyfile/dispenser.go:349:3        tkns            U       tkns = append(tkns, d.Token"
  - "caddyconfig/caddyfile/dispenser.go:349:17       tkns            U       tkns = append(tkns, d.Token())"
  - "caddyconfig/caddyfile/dispenser.go:360:4        tkns            U       tkns = append(tkns, d.Token"
  - "caddyconfig/caddyfile/dispenser.go:360:18       tkns            U       tkns = append(tkns, d.Token())"
  - "caddyconfig/caddyfile/dispenser.go:400:11       Errf            U       return d.Errf(\"wrong argument count"
  - "caddyconfig/caddyfile/dispenser.go:413:11       Errf            U       return d.Errf(\"unexpected EOF\")"
  - "caddyconfig/caddyfile/dispenser.go:418:11       Errf            U       return d.Errf(msg)"
  - "caddyconfig/caddyfile/dispenser.go:421:4        Errf            U       // Errf is like Err, but for"
  - "caddyconfig/caddyfile/dispenser.go:422:21       Errf            U       func (d *Dispenser) Errf(format string, args"
  - "caddyconfig/caddyfile/dispenser.go:426:49       Caddyfile       U       existing error and adds the Caddyfile file and line number"
  - "caddyconfig/caddyfile/dispenser.go:501:2        curr            U       curr := d.tokens[d.cursor"
  - "caddyconfig/caddyfile/formatter_fuzz.go:15:12       gofuzz          U       //go:build gofuzz"
  - "caddyconfig/caddyfile/formatter_fuzz.go:17:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/formatter_test.go:15:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/formatter_test.go:315:18      redir           U       input: `redir / /some/#/path`,"
  - "caddyconfig/caddyfile/formatter_test.go:316:18      redir           U       expect: `redir / /some/#/path`,"
  - "caddyconfig/caddyfile/formatter_test.go:330:18      matthewpi       U       description: \"matthewpi/vscode-caddyfile-support"
  - "caddyconfig/caddyfile/formatter_test.go:330:35      caddyfile       U       escription: \"matthewpi/vscode-caddyfile-support#13\","
  - "caddyconfig/caddyfile/formatter_test.go:332:10      ACMEEMAIL       U       email {$ACMEEMAIL}"
  - "caddyconfig/caddyfile/formatter_test.go:340:10      ACMEEMAIL       U       email {$ACMEEMAIL}"
  - "caddyconfig/caddyfile/formatter_test.go:349:18      matthewpi       U       description: \"matthewpi/vscode-caddyfile-support"
  - "caddyconfig/caddyfile/formatter_test.go:349:35      caddyfile       U       escription: \"matthewpi/vscode-caddyfile-support#13 - bad formatting"
  - "caddyconfig/caddyfile/formatter_test.go:351:10      ACMEEMAIL       U       email {$ACMEEMAIL}"
  - "caddyconfig/caddyfile/formatter_test.go:359:10      ACMEEMAIL       U       email {$ACMEEMAIL}"
  - "caddyconfig/caddyfile/formatter.go:15:9         caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/formatter.go:24:29        Caddyfile       U       Format formats the input Caddyfile to a standard, nice"
  - "caddyconfig/caddyfile/formatter.go:292:9        Caddyfile       U       // the Caddyfile does not need any leading"
  - "caddyconfig/caddyfile/formatter.go:295:8        Caddyfiles      U       // ...Caddyfiles should, however, end"
  - "caddyconfig/caddyfile/importargs.go:15:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/importargs.go:24:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/caddyfile/importargs.go:41:22       caddyfile       U       caddy.Log().Named(\"caddyfile\").Warn("
  - "caddyconfig/caddyfile/importargs.go:70:23       caddyfile       U       caddy.Log().Named(\"caddyfile\").Warn("
  - "caddyconfig/caddyfile/importargs.go:79:23       caddyfile       U       caddy.Log().Named(\"caddyfile\").Warn("
  - "caddyconfig/caddyfile/importargs.go:88:22       caddyfile       U       caddy.Log().Named(\"caddyfile\").Warn("
  - "caddyconfig/caddyfile/importgraph.go:15:9           caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/lexer_fuzz.go:15:12       gofuzz          U       //go:build gofuzz"
  - "caddyconfig/caddyfile/lexer_fuzz.go:17:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/lexer_fuzz.go:20:34       Caddyfile       U       := Tokenize(input, \"Caddyfile\")"
  - "caddyconfig/caddyfile/lexer_test.go:15:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/lexer_test.go:81:7        redir           U       redir / /some/#/path"
  - "caddyconfig/caddyfile/lexer_test.go:86:22       redir           U       {Line: 3, Text: \"redir\"},"
  - "caddyconfig/caddyfile/lexer_test.go:404:24      Aheredoc        U       input: []byte(\"\\u000Aheredoc \\u003C\\u003C\\u0073\\u"
  - "caddyconfig/caddyfile/lexer.go:15:9         caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/lexer.go:52:45        Caddyfile       U       that can be parsed as a Caddyfile."
  - "caddyconfig/caddyfile/lexer.go:353:6        heredocs        U       // heredocs have an extra linebreak"
  - "caddyconfig/caddyfile/parse_test.go:15:9        caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/parse_test.go:665:13      foofoobarbar    U       expect: \"foofoobarbar\","
  - "caddyconfig/caddyfile/parse_test.go:677:13      foobarfoobar    U       expect: \"foobarfoobar\","
  - "caddyconfig/caddyfile/parse_test.go:689:13      foobarbaz       U       expect: \"foobarbaz\","
  - "caddyconfig/caddyfile/parse_test.go:693:23      baz             U       expect: \"foo$FOOBARbaz\", // should not chain"
  - "caddyconfig/caddyfile/parse_test.go:827:22      Caddyfile       U       // Make the derived Caddyfile that expects (common"
  - "caddyconfig/caddyfile/parse.go:15:9         caddyfile       U       package caddyfile"
  - "caddyconfig/caddyfile/parse.go:27:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/caddyfile/parse.go:157:26       Caddyfile       U       this happens if the Caddyfile consists of only"
  - "caddyconfig/caddyfile/parse.go:186:13       Errf            U       return p.Errf(\"redeclaration of previously"
  - "caddyconfig/caddyfile/parse.go:219:13       Errf            U       return p.Errf(\"request matchers may"
  - "caddyconfig/caddyfile/parse.go:234:14       Errf            U       return p.Errf(\"Expected another address"
  - "caddyconfig/caddyfile/parse.go:247:13       Errf            U       return p.Errf(\"Site addresses cannot"
  - "caddyconfig/caddyfile/parse.go:264:14       Errf            U       return p.Errf(\"Site addresses cannot"
  - "caddyconfig/caddyfile/parse.go:391:13       elee            U       // TODO(elee1766): we don't enter"
  - "caddyconfig/caddyfile/parse.go:725:36       Curlies         U       parser) blockTokens(retainCurlies bool) ([]Token, error"
  - "caddyconfig/caddyfile/parse.go:726:21       curlies         U       // block must have curlies."
  - "caddyconfig/caddyfile/parse.go:733:11       Curlies         U       if retainCurlies {"
  - "caddyconfig/caddyfile/parse.go:740:14       Curlies         U       if retainCurlies {"
  - "caddyconfig/configadapters.go:15:9          caddyconfig     U       package caddyconfig"
  - "caddyconfig/configadapters.go:21:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/configadapters.go:125:8         caddyserver     U       // See caddyserver/caddy#3132."
  - "caddyconfig/httpcaddyfile/addresses_fuzz.go:15:12       gofuzz              U       //go:build gofuzz"
  - "caddyconfig/httpcaddyfile/addresses_fuzz.go:17:9        httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/addresses_test.go:1:9         httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/addresses.go:15:9         httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/addresses.go:27:14        caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/addresses.go:27:26        certmagic           U       github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/addresses.go:29:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/addresses.go:30:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/addresses.go:30:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/addresses.go:30:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/addresses.go:31:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/addresses.go:31:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/addresses.go:38:52        Caddyfile           U       ecessarily. For example, this Caddyfile:"
  - "caddyconfig/httpcaddyfile/addresses.go:47:63        Caddyfile           U       But expressed in this Caddyfile are"
  - "caddyconfig/httpcaddyfile/addresses.go:83:2         sbmap               U       sbmap := make(map[string]"
  - "caddyconfig/httpcaddyfile/addresses.go:85:9         sblock              U       for i, sblock := range originalServerBlocks"
  - "caddyconfig/httpcaddyfile/addresses.go:91:35        caddyfile           U       = make(map[string][]caddyfile.Token)"
  - "caddyconfig/httpcaddyfile/addresses.go:92:23        sblock              U       for j, key := range sblock.block.Keys {"
  - "caddyconfig/httpcaddyfile/addresses.go:97:52        sblock              U       istenerAddrsForServerBlockKey(sblock, key.Text, options)"
  - "caddyconfig/httpcaddyfile/addresses.go:131:4        sbmap               U       sbmap[addr] = append(sbmap"
  - "caddyconfig/httpcaddyfile/addresses.go:131:25       sbmap               U       sbmap[addr] = append(sbmap[addr], serverBlock{"
  - "caddyconfig/httpcaddyfile/addresses.go:132:12       caddyfile           U       block: caddyfile.ServerBlock{"
  - "caddyconfig/httpcaddyfile/addresses.go:134:16       sblock              U       Segments: sblock.block.Segments,"
  - "caddyconfig/httpcaddyfile/addresses.go:136:11       sblock              U       pile: sblock.pile,"
  - "caddyconfig/httpcaddyfile/addresses.go:142:9        sbmap               U       return sbmap, nil"
  - "caddyconfig/httpcaddyfile/addresses.go:154:2        sbaddrs             U       sbaddrs := make([]sbAddrAssociation"
  - "caddyconfig/httpcaddyfile/addresses.go:155:12       sblocks             U       for addr, sblocks := range addrToServerBlocks"
  - "caddyconfig/httpcaddyfile/addresses.go:160:18       sblocks             U       serverBlocks: sblocks,"
  - "caddyconfig/httpcaddyfile/addresses.go:166:23       Sblocks             U       for otherAddr, otherSblocks := range addrToServerBlocks"
  - "caddyconfig/httpcaddyfile/addresses.go:170:25       sblocks             U       if reflect.DeepEqual(sblocks, otherSblocks) {"
  - "caddyconfig/httpcaddyfile/addresses.go:170:39       Sblocks             U       DeepEqual(sblocks, otherSblocks) {"
  - "caddyconfig/httpcaddyfile/addresses.go:177:3        sbaddrs             U       sbaddrs = append(sbaddrs, a"
  - "caddyconfig/httpcaddyfile/addresses.go:177:20       sbaddrs             U       sbaddrs = append(sbaddrs, a)"
  - "caddyconfig/httpcaddyfile/addresses.go:182:13       sbaddrs             U       sort.Slice(sbaddrs, func(i, j int) bool"
  - "caddyconfig/httpcaddyfile/addresses.go:183:10       sbaddrs             U       return sbaddrs[i].addresses[0] < sbaddrs"
  - "caddyconfig/httpcaddyfile/addresses.go:189:60       Caddyfile           U       essentially converts the Caddyfile"
  - "caddyconfig/httpcaddyfile/addresses.go:213:38       caddyhttp           U       httpsPort := strconv.Itoa(caddyhttp.DefaultHTTPPort), strconv"
  - "caddyconfig/httpcaddyfile/addresses.go:213:79       caddyhttp           U       efaultHTTPPort), strconv.Itoa(caddyhttp.DefaultHTTPSPort)"
  - "caddyconfig/httpcaddyfile/addresses.go:214:5        hport               U       if hport, ok := options[\"http"
  - "caddyconfig/httpcaddyfile/addresses.go:215:27       hport               U       httpPort = strconv.Itoa(hport.(int))"
  - "caddyconfig/httpcaddyfile/addresses.go:217:5        hsport              U       if hsport, ok := options[\"https"
  - "caddyconfig/httpcaddyfile/addresses.go:218:28       hsport              U       httpsPort = strconv.Itoa(hsport.(int))"
  - "caddyconfig/httpcaddyfile/addresses.go:355:29       certmagic           U       Port == strconv.Itoa(certmagic.HTTPSPort) {"
  - "caddyconfig/httpcaddyfile/addresses.go:366:49       caddyhttp           U       Port != strconv.Itoa(caddyhttp.DefaultHTTPSPort))"
  - "caddyconfig/httpcaddyfile/addresses.go:367:48       caddyhttp           U       Port != strconv.Itoa(caddyhttp.DefaultHTTPPort)))"
  - "caddyconfig/httpcaddyfile/builtins_test.go:1:9          httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/builtins_test.go:7:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/builtins_test.go:7:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/builtins_test.go:7:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/builtins_test.go:8:16         caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/logging"
  - "caddyconfig/httpcaddyfile/builtins_test.go:67:14        caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/builtins_test.go:84:10        Redir               U       func TestRedirDirectiveSyntax(t *testing"
  - "caddyconfig/httpcaddyfile/builtins_test.go:91:5         redir               U       redir :8081"
  - "caddyconfig/httpcaddyfile/builtins_test.go:97:5         redir               U       redir * :8081"
  - "caddyconfig/httpcaddyfile/builtins_test.go:103:5        redir               U       redir /api/* :8081 300"
  - "caddyconfig/httpcaddyfile/builtins_test.go:109:5        redir               U       redir :8081 300"
  - "caddyconfig/httpcaddyfile/builtins_test.go:115:5        redir               U       redir /api/* :8081 399"
  - "caddyconfig/httpcaddyfile/builtins_test.go:178:31       htlm                U       /old.html /new.html htlm"
  - "caddyconfig/httpcaddyfile/builtins_test.go:208:14       caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/builtins_test.go:235:57       Caddyfile           U       Contains(err.Error(), \"Caddyfile:6 (import t1)\")"
  - "caddyconfig/httpcaddyfile/builtins_test.go:246:57       Caddyfile           U       Contains(err.Error(), \"Caddyfile:5 (import t1)\")"
  - "caddyconfig/httpcaddyfile/builtins_test.go:271:14       caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/builtins_test.go:344:14       caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/builtins.go:15:9          httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/builtins.go:26:14         caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/builtins.go:26:26         certmagic           U       github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/builtins.go:27:14         mholt               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/builtins.go:27:20         acmez               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/builtins.go:30:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/builtins.go:31:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/builtins.go:31:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/builtins.go:32:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/builtins.go:32:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/builtins.go:32:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/builtins.go:33:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/builtins.go:33:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/builtins.go:34:43         caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "caddyconfig/httpcaddyfile/builtins.go:43:28         redir               U       RegisterHandlerDirective(\"redir\", parseRedir)"
  - "caddyconfig/httpcaddyfile/builtins.go:43:41         Redir               U       andlerDirective(\"redir\", parseRedir)"
  - "caddyconfig/httpcaddyfile/builtins.go:77:8          alpn                U       // alpn"
  - "caddyconfig/httpcaddyfile/builtins.go:98:12         caddytls            U       cp := new(caddytls.ConnectionPolicy)"
  - "caddyconfig/httpcaddyfile/builtins.go:99:17         caddytls            U       var fileLoader caddytls.FileLoader"
  - "caddyconfig/httpcaddyfile/builtins.go:100:19        caddytls            U       var folderLoader caddytls.FolderLoader"
  - "caddyconfig/httpcaddyfile/builtins.go:101:19        caddytls            U       var certSelector caddytls.CustomCertSelectionPolicy"
  - "caddyconfig/httpcaddyfile/builtins.go:105:16        certmagic           U       var issuers []certmagic.Issuer"
  - "caddyconfig/httpcaddyfile/builtins.go:106:21        certmagic           U       var certManagers []certmagic.Manager"
  - "caddyconfig/httpcaddyfile/builtins.go:182:19        Errf                U       return nil, h.Errf(\"protocols requires"
  - "caddyconfig/httpcaddyfile/builtins.go:186:20        Errf                U       return nil, h.Errf(\"wrong protocol name"
  - "caddyconfig/httpcaddyfile/builtins.go:192:20        Errf                U       return nil, h.Errf(\"wrong protocol name"
  - "caddyconfig/httpcaddyfile/builtins.go:200:20        Errf                U       return nil, h.Errf(\"wrong cipher suite"
  - "caddyconfig/httpcaddyfile/builtins.go:208:20        Errf                U       return nil, h.Errf(\"Wrong curve name or"
  - "caddyconfig/httpcaddyfile/builtins.go:215:47        Caddyfile           U       ClientAuthentication.UnmarshalCaddyfile(h.NewFromNextSegment"
  - "caddyconfig/httpcaddyfile/builtins.go:218:9         alpn                U       case \"alpn\":"
  - "caddyconfig/httpcaddyfile/builtins.go:223:7         ALPN                U       cp.ALPN = args"
  - "caddyconfig/httpcaddyfile/builtins.go:264:16        caddyfile           U       unm, err := caddyfile.UnmarshalModule(h.Dispenser"
  - "caddyconfig/httpcaddyfile/builtins.go:268:23        certmagic           U       issuer, ok := unm.(certmagic.Issuer)"
  - "caddyconfig/httpcaddyfile/builtins.go:270:49        certmagic           U       module %s (%T) is not a certmagic.Issuer\", modID, unm"
  - "caddyconfig/httpcaddyfile/builtins.go:280:16        caddyfile           U       unm, err := caddyfile.UnmarshalModule(h.Dispenser"
  - "caddyconfig/httpcaddyfile/builtins.go:305:16        caddyfile           U       unm, err := caddyfile.UnmarshalModule(h.Dispenser"
  - "caddyconfig/httpcaddyfile/builtins.go:309:44        caddyconfig         U       Challenges.DNS.ProviderRaw = caddyconfig.JSONModuleObject(unm"
  - "caddyconfig/httpcaddyfile/builtins.go:441:32        subdirective        U       nil, h.Errf(\"unknown subdirective: %s\", h.Val())"
  - "caddyconfig/httpcaddyfile/builtins.go:451:8         Vals                U       configVals := []ConfigValue{}"
  - "caddyconfig/httpcaddyfile/builtins.go:455:9         Vals                U       configVals = append(configVals"
  - "caddyconfig/httpcaddyfile/builtins.go:455:29        Vals                U       configVals = append(configVals, ConfigValue{"
  - "caddyconfig/httpcaddyfile/builtins.go:461:9         Vals                U       configVals = append(configVals"
  - "caddyconfig/httpcaddyfile/builtins.go:461:29        Vals                U       configVals = append(configVals, ConfigValue{"
  - "caddyconfig/httpcaddyfile/builtins.go:467:14        subdirectives       U       // some tls subdirectives are shortcuts that implicitly"
  - "caddyconfig/httpcaddyfile/builtins.go:468:65        subdirective        U       explicitly using the issuer subdirective; the"
  - "caddyconfig/httpcaddyfile/builtins.go:471:40        subdirective        U       Err(\"cannot mix issuer subdirective (explicit issuers) with"
  - "caddyconfig/httpcaddyfile/builtins.go:471:99        subdirectives       U       other issuer-specific subdirectives (implicit issuers)\""
  - "caddyconfig/httpcaddyfile/builtins.go:489:42        subdirectives       U       issuers (from various subdirectives) - use defaults; there"
  - "caddyconfig/httpcaddyfile/builtins.go:590:26        caddyhttp           U       return h.NewRoute(nil, caddyhttp.VarsMiddleware{\"root"
  - "caddyconfig/httpcaddyfile/builtins.go:605:36        caddyhttp           U       NewRoute(userMatcherSet, caddyhttp.VarsMiddleware{\"root"
  - "caddyconfig/httpcaddyfile/builtins.go:611:33        caddyhttp           U       parseFilesystem(h Helper) (caddyhttp.MiddlewareHandler, error"
  - "caddyconfig/httpcaddyfile/builtins.go:619:9         caddyhttp           U       return caddyhttp.VarsMiddleware{\"fs\""
  - "caddyconfig/httpcaddyfile/builtins.go:622:58        Caddyfile           U       directive. See its UnmarshalCaddyfile method for syntax."
  - "caddyconfig/httpcaddyfile/builtins.go:625:20        Caddyfile           U       err := v.UnmarshalCaddyfile(h.Dispenser)"
  - "caddyconfig/httpcaddyfile/builtins.go:629:9         Redir               U       // parseRedir parses the redir directive"
  - "caddyconfig/httpcaddyfile/builtins.go:629:26        redir               U       parseRedir parses the redir directive. Syntax:"
  - "caddyconfig/httpcaddyfile/builtins.go:631:4         redir               U       // redir [<matcher>] <to> [<code"
  - "caddyconfig/httpcaddyfile/builtins.go:638:11        Redir               U       func parseRedir(h Helper) (caddyhttp"
  - "caddyconfig/httpcaddyfile/builtins.go:662:13        Redir               U       const metaRedir = `<!DOCTYPE html>"
  - "caddyconfig/httpcaddyfile/builtins.go:673:26        Redir               U       body = fmt.Sprintf(metaRedir, safeTo, safeTo, safeTo"
  - "caddyconfig/httpcaddyfile/builtins.go:685:40        redir               U       Errf(\"Not a supported redir code type or not valid"
  - "caddyconfig/httpcaddyfile/builtins.go:714:21        Caddyfile           U       err := sr.UnmarshalCaddyfile(h.Dispenser)"
  - "caddyconfig/httpcaddyfile/builtins.go:730:21        Caddyfile           U       err := se.UnmarshalCaddyfile(h.Dispenser)"
  - "caddyconfig/httpcaddyfile/builtins.go:850:8         hostnames           U       // hostnames <hostnames...>"
  - "caddyconfig/httpcaddyfile/builtins.go:850:19        hostnames           U       // hostnames <hostnames...>"
  - "caddyconfig/httpcaddyfile/builtins.go:915:47        hostnames           U       current site block's hostnames for this logger;"
  - "caddyconfig/httpcaddyfile/builtins.go:918:8         Hostnames           U       customHostnames := []string{}"
  - "caddyconfig/httpcaddyfile/builtins.go:922:9         hostnames           U       case \"hostnames\":"
  - "caddyconfig/httpcaddyfile/builtins.go:924:24        hostnames           U       return nil, h.Err(\"hostnames is not allowed in the"
  - "caddyconfig/httpcaddyfile/builtins.go:930:10        Hostnames           U       customHostnames = append(customHostnames"
  - "caddyconfig/httpcaddyfile/builtins.go:930:35        Hostnames           U       ustomHostnames = append(customHostnames, args...)"
  - "caddyconfig/httpcaddyfile/builtins.go:938:27        caddyfile           U       can't use the usual caddyfile.Unmarshaler flow with"
  - "caddyconfig/httpcaddyfile/builtins.go:962:19        caddyconfig         U       cl.WriterRaw = caddyconfig.JSONModuleObject(wo"
  - "caddyconfig/httpcaddyfile/builtins.go:978:17        caddyconfig         U       cl.CoreRaw = caddyconfig.JSONModuleObject(core"
  - "caddyconfig/httpcaddyfile/builtins.go:1028:37       subdirective        U       h.Errf(\"unrecognized subdirective: %s\", h.Val())"
  - "caddyconfig/httpcaddyfile/builtins.go:1033:24       Hostnames           U       val.hostnames = customHostnames"
  - "caddyconfig/httpcaddyfile/directives_test.go:1:9            httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/directives.go:15:9        httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/directives.go:24:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/directives.go:25:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/directives.go:25:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/directives.go:26:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/directives.go:26:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/directives.go:26:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/directives.go:27:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/directives.go:27:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/directives.go:40:45       redir               U       directive goes before 'redir' so"
  - "caddyconfig/httpcaddyfile/directives.go:62:3        redir               U       \"redir\","
  - "caddyconfig/httpcaddyfile/directives.go:93:7        fastcgi             U       \"php_fastcgi\","
  - "caddyconfig/httpcaddyfile/directives.go:116:24      Caddyfile           U       is encountered in a Caddyfile, setupFunc will be called"
  - "caddyconfig/httpcaddyfile/directives.go:203:35      Caddyfile           U       is encountered in a Caddyfile, setupFunc will be"
  - "caddyconfig/httpcaddyfile/directives.go:213:4       Caddyfile           U       // Caddyfile tokens."
  - "caddyconfig/httpcaddyfile/directives.go:215:3       caddyfile           U       *caddyfile.Dispenser"
  - "caddyconfig/httpcaddyfile/directives.go:216:48      caddyfile           U       intermediate variables during caddyfile adaptation."
  - "caddyconfig/httpcaddyfile/directives.go:219:18      caddyconfig         U       warnings *[]caddyconfig.Warning"
  - "caddyconfig/httpcaddyfile/directives.go:221:15      caddyfile           U       parentBlock caddyfile.ServerBlock"
  - "caddyconfig/httpcaddyfile/directives.go:230:4       Caddyfiles          U       // Caddyfiles returns the list of"
  - "caddyconfig/httpcaddyfile/directives.go:232:17      Caddyfiles          U       func (h Helper) Caddyfiles() []string {"
  - "caddyconfig/httpcaddyfile/directives.go:252:9       caddyconfig         U       return caddyconfig.JSON(val, h.warnings"
  - "caddyconfig/httpcaddyfile/directives.go:290:10      caddyhttp           U       handler caddyhttp.MiddlewareHandler,"
  - "caddyconfig/httpcaddyfile/directives.go:294:37      caddyconfig         U       append(*h.warnings, caddyconfig.Warning{"
  - "caddyconfig/httpcaddyfile/directives.go:308:11      caddyhttp           U       Value: caddyhttp.Route{"
  - "caddyconfig/httpcaddyfile/directives.go:316:33      caddyhttp           U       GroupRoutes adds the routes (caddyhttp.Route type) in vals"
  - "caddyconfig/httpcaddyfile/directives.go:316:58      vals                U       caddyhttp.Route type) in vals to the"
  - "caddyconfig/httpcaddyfile/directives.go:317:51      vals                U       more than one route in vals."
  - "caddyconfig/httpcaddyfile/directives.go:318:29      vals                U       Helper) GroupRoutes(vals []ConfigValue) {"
  - "caddyconfig/httpcaddyfile/directives.go:321:20      vals                U       for _, v := range vals {"
  - "caddyconfig/httpcaddyfile/directives.go:322:24      caddyhttp           U       if _, ok := v.Value.(caddyhttp.Route); ok {"
  - "caddyconfig/httpcaddyfile/directives.go:335:17      vals                U       for i := range vals {"
  - "caddyconfig/httpcaddyfile/directives.go:345:34      caddyfile           U       Helper) WithDispenser(d *caddyfile.Dispenser) Helper {"
  - "caddyconfig/httpcaddyfile/directives.go:350:60      subdirectives       U       segment such that its subdirectives"
  - "caddyconfig/httpcaddyfile/directives.go:362:58      subdirectives       U       segment such that its subdirectives"
  - "caddyconfig/httpcaddyfile/directives.go:407:19      Errf                U       return nil, h.Errf(\"unrecognized directive"
  - "caddyconfig/httpcaddyfile/directives.go:407:72      Caddyfile           U       - are you sure your Caddyfile structure (nesting and"
  - "caddyconfig/httpcaddyfile/directives.go:416:19      Errf                U       return nil, h.Errf(\"parsing caddyfile tokens"
  - "caddyconfig/httpcaddyfile/directives.go:530:24      Caddyfile           U       serverBlock pairs a Caddyfile server block with"
  - "caddyconfig/httpcaddyfile/directives.go:539:54      hostnames           U       of all the non-empty hostnames found in"
  - "caddyconfig/httpcaddyfile/directives.go:546:18      hostnames           U       // joined to the hostnames. This is to effectively"
  - "caddyconfig/httpcaddyfile/directives.go:574:2       sblock              U       sblockHosts := make([]string"
  - "caddyconfig/httpcaddyfile/directives.go:576:3       sblock              U       sblockHosts = append(sblockHosts"
  - "caddyconfig/httpcaddyfile/directives.go:576:24      sblock              U       sblockHosts = append(sblockHosts, host)"
  - "caddyconfig/httpcaddyfile/directives.go:579:9       sblock              U       return sblockHosts"
  - "caddyconfig/httpcaddyfile/directives.go:595:2       sblock              U       sblockHosts := make([]string"
  - "caddyconfig/httpcaddyfile/httptype_test.go:1:9          httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/httptype_test.go:6:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/httptype_test.go:6:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/httptype_test.go:6:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/httptype_test.go:17:11        showdebug           U       query showdebug=1"
  - "caddyconfig/httpcaddyfile/httptype_test.go:34:12        somepath            U       path /somepath*"
  - "caddyconfig/httpcaddyfile/httptype_test.go:43:15        somepath            U       not path /somepath*"
  - "caddyconfig/httpcaddyfile/httptype_test.go:50:21        somepath            U       @debug not path /somepath*"
  - "caddyconfig/httpcaddyfile/httptype_test.go:64:14        caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/httptype_test.go:200:14       caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/httptype.go:15:9          httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/httptype.go:29:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/httptype.go:30:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/httptype.go:30:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/httptype.go:31:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/httptype.go:31:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/httptype.go:31:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/httptype.go:32:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/httptype.go:32:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/httptype.go:33:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "caddyconfig/httpcaddyfile/httptype.go:33:43         caddypki            U       caddyserver/caddy/v2/modules/caddypki\""
  - "caddyconfig/httpcaddyfile/httptype.go:34:43         caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "caddyconfig/httpcaddyfile/httptype.go:38:2          caddyconfig         U       caddyconfig.RegisterAdapter(\"caddyfile"
  - "caddyconfig/httpcaddyfile/httptype.go:38:31         caddyfile           U       caddyconfig.RegisterAdapter(\"caddyfile\", caddyfile.Adapter"
  - "caddyconfig/httpcaddyfile/httptype.go:38:43         caddyfile           U       RegisterAdapter(\"caddyfile\", caddyfile.Adapter{ServerType:"
  - "caddyconfig/httpcaddyfile/httptype.go:52:48         Caddyfile           U       config from an HTTP Caddyfile."
  - "caddyconfig/httpcaddyfile/httptype.go:57:22         caddyfile           U       inputServerBlocks []caddyfile.ServerBlock,"
  - "caddyconfig/httpcaddyfile/httptype.go:59:21         caddyconfig         U       ) (*caddy.Config, []caddyconfig.Warning, error) {"
  - "caddyconfig/httpcaddyfile/httptype.go:60:17         caddyconfig         U       var warnings []caddyconfig.Warning"
  - "caddyconfig/httpcaddyfile/httptype.go:66:9          sblock              U       for _, sblock := range inputServerBlocks"
  - "caddyconfig/httpcaddyfile/httptype.go:67:21         sblock              U       for j, k := range sblock.Keys {"
  - "caddyconfig/httpcaddyfile/httptype.go:76:11         sblock              U       block: sblock,"
  - "caddyconfig/httpcaddyfile/httptype.go:138:19        caddyfile           U       Dispenser: caddyfile.NewDispenser(segment"
  - "caddyconfig/httpcaddyfile/httptype.go:174:2         sbmap               U       sbmap, err := st.mapAddressToServer"
  - "caddyconfig/httpcaddyfile/httptype.go:180:41        sbmap               U       consolidateAddrMappings(sbmap)"
  - "caddyconfig/httpcaddyfile/httptype.go:190:13        caddyhttp           U       httpApp := caddyhttp.App{"
  - "caddyconfig/httpcaddyfile/httptype.go:255:5         annnd               U       // annnd the top-level config"
  - "caddyconfig/httpcaddyfile/httptype.go:259:17        httpcaddyfile       U       // them are an httpcaddyfile App, then we insert"
  - "caddyconfig/httpcaddyfile/httptype.go:271:33        caddytls            U       reflect.DeepEqual(tlsApp, &caddytls.TLS{CertificatesRaw"
  - "caddyconfig/httpcaddyfile/httptype.go:274:33        caddypki            U       reflect.DeepEqual(pkiApp, &caddypki.PKI{CAs: make(map[string"
  - "caddyconfig/httpcaddyfile/httptype.go:274:68        caddypki            U       CAs: make(map[string]*caddypki.CA)}) {"
  - "caddyconfig/httpcaddyfile/httptype.go:283:12        Cvtr                U       if storageCvtr, ok := options[\"storage"
  - "caddyconfig/httpcaddyfile/httptype.go:284:56        Cvtr                U       JSONModuleObject(storageCvtr,"
  - "caddyconfig/httpcaddyfile/httptype.go:286:11        Cvtr                U       storageCvtr.(caddy.Module).CaddyModule"
  - "caddyconfig/httpcaddyfile/httptype.go:437:29        caddyhttp           U       namedRoutes := map[string]*caddyhttp.Route{}"
  - "caddyconfig/httpcaddyfile/httptype.go:485:25        caddyhttp           U       subroute := handler.(*caddyhttp.Subroute)"
  - "caddyconfig/httpcaddyfile/httptype.go:486:12        caddyhttp           U       route := caddyhttp.Route{}"
  - "caddyconfig/httpcaddyfile/httptype.go:533:10        sblock              U       for j, sblock1 := range p.serverBlocks"
  - "caddyconfig/httpcaddyfile/httptype.go:534:24        sblock              U       for _, key := range sblock1.block.GetKeysText("
  - "caddyconfig/httpcaddyfile/httptype.go:557:26        Redir               U       srv.AutoHTTPS.DisableRedir = true"
  - "caddyconfig/httpcaddyfile/httptype.go:677:9         Vals                U       if cpVals, ok := sblock.pile["
  - "caddyconfig/httpcaddyfile/httptype.go:679:29        Vals                U       _, cpVal := range cpVals {"
  - "caddyconfig/httpcaddyfile/httptype.go:680:26        caddytls            U       cp := cpVal.Value.(*caddytls.ConnectionPolicy)"
  - "caddyconfig/httpcaddyfile/httptype.go:682:41        hostnames           U       the policy covers all hostnames from the block"
  - "caddyconfig/httpcaddyfile/httptype.go:776:20        Vals                U       if errorSubrouteVals, ok := sblock.pile["
  - "caddyconfig/httpcaddyfile/httptype.go:780:35        Vals                U       SliceStable(errorSubrouteVals, func(i, j int) bool"
  - "caddyconfig/httpcaddyfile/httptype.go:781:31        Vals                U       srj := errorSubrouteVals[i].Value.(*caddyhttp"
  - "caddyconfig/httpcaddyfile/httptype.go:798:11        cval                U       for _, cval := range sblock.pile"
  - "caddyconfig/httpcaddyfile/httptype.go:799:12        cval                U       ncl := cval.Value.(namedCustomLog"
  - "caddyconfig/httpcaddyfile/httptype.go:802:51        hostnames           U       of the site block's hostnames,"
  - "caddyconfig/httpcaddyfile/httptype.go:809:47        hostnames           U       sHostCatchAllKey() && len(ncl.hostnames) == 0 {"
  - "caddyconfig/httpcaddyfile/httptype.go:813:23        hostnames           U       } else if len(ncl.hostnames) > 0 {"
  - "caddyconfig/httpcaddyfile/httptype.go:814:37        hostnames           U       logger overrides the hostnames, map that to the logger"
  - "caddyconfig/httpcaddyfile/httptype.go:865:16        Caddyfile           U       // using the Caddyfile, user would expect all"
  - "caddyconfig/httpcaddyfile/httptype.go:876:55        caddytls            U       srv.TLSConnPolicies, &caddytls.ConnectionPolicy{DefaultSNI"
  - "caddyconfig/httpcaddyfile/httptype.go:957:34        caddytls            U       consolidateConnPolicies(cps caddytls.ConnectionPolicies)"
  - "caddyconfig/httpcaddyfile/httptype.go:981:19        ALPN                U       if len(cps[i].ALPN) > 0 &&"
  - "caddyconfig/httpcaddyfile/httptype.go:982:17        ALPN                U       len(cps[j].ALPN) > 0 &&"
  - "caddyconfig/httpcaddyfile/httptype.go:983:32        ALPN                U       reflect.DeepEqual(cps[i].ALPN, cps[j].ALPN) {"
  - "caddyconfig/httpcaddyfile/httptype.go:983:45        ALPN                U       cps[i].ALPN, cps[j].ALPN) {"
  - "caddyconfig/httpcaddyfile/httptype.go:984:85        ALPN                U       criteria have conflicting ALPN: %v vs. %v\","
  - "caddyconfig/httpcaddyfile/httptype.go:1119:44       Caddyfile           U       a site block in the Caddyfile dictate"
  - "caddyconfig/httpcaddyfile/httptype.go:1317:3        hostm               U       hostm caddyhttp.MatchHost"
  - "caddyconfig/httpcaddyfile/httptype.go:1318:3        pathm               U       pathm caddyhttp.MatchPath"
  - "caddyconfig/httpcaddyfile/httptype.go:1330:15       pathm               U       if (len(mp.pathm) == 0 && addr.Path"
  - "caddyconfig/httpcaddyfile/httptype.go:1331:13       pathm               U       (len(mp.pathm) == 1 && mp.pathm[0"
  - "caddyconfig/httpcaddyfile/httptype.go:1331:31       pathm               U       mp.pathm) == 1 && mp.pathm[0] == addr.Path) {"
  - "caddyconfig/httpcaddyfile/httptype.go:1339:23       pathm               U       chosenMatcherPair.pathm = []string{addr.Path"
  - "caddyconfig/httpcaddyfile/httptype.go:1348:22       hostm               U       chosenMatcherPair.hostm = nil"
  - "caddyconfig/httpcaddyfile/httptype.go:1359:40       hostm               U       range chosenMatcherPair.hostm {"
  - "caddyconfig/httpcaddyfile/httptype.go:1366:23       hostm               U       chosenMatcherPair.hostm = append(chosenMatcherPair"
  - "caddyconfig/httpcaddyfile/httptype.go:1366:56       hostm               U       append(chosenMatcherPair.hostm, addr.Host)"
  - "caddyconfig/httpcaddyfile/httptype.go:1428:52       Caddyfile           U       module '%s' is not a Caddyfile unmarshaler\", matcherName"
  - "caddyconfig/httpcaddyfile/httptype.go:1430:22       Caddyfile           U       err = unm.UnmarshalCaddyfile(dispenser)"
  - "caddyconfig/httpcaddyfile/options_test.go:1:9           httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/options_test.go:6:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/options_test.go:6:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/options_test.go:6:47          caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/options_test.go:7:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/logging"
  - "caddyconfig/httpcaddyfile/options_test.go:16:48         Caddyfile           U       cases of successful Caddyfile parsing"
  - "caddyconfig/httpcaddyfile/options_test.go:17:22         caddytest           U       // are present in: caddytest/integration/caddyfile"
  - "caddyconfig/httpcaddyfile/options_test.go:17:44         caddyfile           U       caddytest/integration/caddyfile_adapt/"
  - "caddyconfig/httpcaddyfile/options_test.go:49:14         caddyfile           U       adapter := caddyfile.Adapter{"
  - "caddyconfig/httpcaddyfile/options.go:15:9           httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/options.go:20:14          caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/options.go:20:26          certmagic           U       github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/options.go:21:14          mholt               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/options.go:21:20          acmez               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/options.go:23:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/options.go:24:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/options.go:24:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/options.go:25:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/options.go:25:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/options.go:25:47          caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/options.go:26:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "caddyconfig/httpcaddyfile/options.go:26:43          caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "caddyconfig/httpcaddyfile/options.go:45:43          ACMEDNS             U       \"acme_dns\", parseOptACMEDNS)"
  - "caddyconfig/httpcaddyfile/options.go:46:43          ACMEEAB             U       \"acme_eab\", parseOptACMEEAB)"
  - "caddyconfig/httpcaddyfile/options.go:63:22          caddyfile           U       func parseOptTrue(d *caddyfile.Dispenser, _ any) (any"
  - "caddyconfig/httpcaddyfile/options.go:65:26          caddyfile           U       parseOptHTTPPort(d *caddyfile.Dispenser, _ any) (any"
  - "caddyconfig/httpcaddyfile/options.go:75:15          Errf                U       return 0, d.Errf(\"converting port '%s"
  - "caddyconfig/httpcaddyfile/options.go:80:27          caddyfile           U       parseOptHTTPSPort(d *caddyfile.Dispenser, _ any) (any"
  - "caddyconfig/httpcaddyfile/options.go:90:15          Errf                U       return 0, d.Errf(\"converting port '%s"
  - "caddyconfig/httpcaddyfile/options.go:95:23          caddyfile           U       func parseOptOrder(d *caddyfile.Dispenser, _ any) (any"
  - "caddyconfig/httpcaddyfile/options.go:104:17         Errf                U       return nil, d.Errf(\"%s is not a registered"
  - "caddyconfig/httpcaddyfile/options.go:142:17         Errf                U       return nil, d.Errf(\"unknown positional"
  - "caddyconfig/httpcaddyfile/options.go:185:17         Errf                U       return nil, d.Errf(\"module %s is not a"
  - "caddyconfig/httpcaddyfile/options.go:204:14         ACMEDNS             U       func parseOptACMEDNS(d *caddyfile.Dispenser"
  - "caddyconfig/httpcaddyfile/options.go:216:19         certmagic           U       prov, ok := unm.(certmagic.DNSProvider)"
  - "caddyconfig/httpcaddyfile/options.go:218:47         certmagic           U       module %s (%T) is not a certmagic.DNSProvider\", modID"
  - "caddyconfig/httpcaddyfile/options.go:223:14         ACMEEAB             U       func parseOptACMEEAB(d *caddyfile.Dispenser"
  - "caddyconfig/httpcaddyfile/options.go:253:16         certmagic           U       var issuers []certmagic.Issuer"
  - "caddyconfig/httpcaddyfile/options.go:255:25         certmagic           U       issuers = existing.([]certmagic.Issuer)"
  - "caddyconfig/httpcaddyfile/options.go:338:11         caddytls            U       var ond *caddytls.OnDemandConfig"
  - "caddyconfig/httpcaddyfile/options.go:347:15         caddytls            U       ond = new(caddytls.OnDemandConfig)"
  - "caddyconfig/httpcaddyfile/options.go:352:12         caddytls            U       perm := caddytls.PermissionByHTTP{Endpoint"
  - "caddyconfig/httpcaddyfile/options.go:353:24         caddyconfig         U       ond.PermissionRaw = caddyconfig.JSONModuleObject(perm"
  - "caddyconfig/httpcaddyfile/options.go:360:15         caddytls            U       ond = new(caddytls.OnDemandConfig)"
  - "caddyconfig/httpcaddyfile/options.go:375:24         caddyconfig         U       ond.PermissionRaw = caddyconfig.JSONModuleObject(perm"
  - "caddyconfig/httpcaddyfile/options.go:450:18         Caddyfile           U       return unmarshalCaddyfileServerOptions(d)"
  - "caddyconfig/httpcaddyfile/options.go:482:8          Vals                U       innerVals, ok := existingVal."
  - "caddyconfig/httpcaddyfile/options.go:486:31         Vals                U       rawVal := range innerVals {"
  - "caddyconfig/httpcaddyfile/options.go:495:17         caddyconfig         U       var warnings []caddyconfig.Warning"
  - "caddyconfig/httpcaddyfile/options.go:516:23         Caddyfile           U       return caddytls.ParseCaddyfilePreferredChainsOptions"
  - "caddyconfig/httpcaddyfile/pkiapp.go:15:9        httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/pkiapp.go:18:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/pkiapp.go:19:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/pkiapp.go:19:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/pkiapp.go:20:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/pkiapp.go:20:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/pkiapp.go:20:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/pkiapp.go:21:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "caddyconfig/httpcaddyfile/pkiapp.go:21:43       caddypki            U       caddyserver/caddy/v2/modules/caddypki\""
  - "caddyconfig/httpcaddyfile/pkiapp.go:50:21       caddyfile           U       func parsePKIApp(d *caddyfile.Dispenser, existingVal"
  - "caddyconfig/httpcaddyfile/pkiapp.go:53:10       caddypki            U       pki := &caddypki.PKI{"
  - "caddyconfig/httpcaddyfile/pkiapp.go:54:25       caddypki            U       CAs: make(map[string]*caddypki.CA),"
  - "caddyconfig/httpcaddyfile/pkiapp.go:59:17       caddypki            U       pkiCa := new(caddypki.CA)"
  - "caddyconfig/httpcaddyfile/pkiapp.go:67:16       caddypki            U       pkiCa.ID = caddypki.DefaultCAID"
  - "caddyconfig/httpcaddyfile/pkiapp.go:67:32       CAID                U       ID = caddypki.DefaultCAID"
  - "caddyconfig/httpcaddyfile/pkiapp.go:125:22      Errf                U       return nil, d.Errf(\"unrecognized pki ca"
  - "caddyconfig/httpcaddyfile/pkiapp.go:154:22      Errf                U       return nil, d.Errf(\"unrecognized pki ca"
  - "caddyconfig/httpcaddyfile/pkiapp.go:159:20      Errf                U       return nil, d.Errf(\"unrecognized pki ca"
  - "caddyconfig/httpcaddyfile/pkiapp.go:166:18      Errf                U       return nil, d.Errf(\"unrecognized pki option"
  - "caddyconfig/httpcaddyfile/pkiapp.go:175:13      caddyconfig         U       warnings []caddyconfig.Warning,"
  - "caddyconfig/httpcaddyfile/pkiapp.go:176:21      caddyconfig         U       ) (*caddypki.PKI, []caddyconfig.Warning, error) {"
  - "caddyconfig/httpcaddyfile/pkiapp.go:200:10      sblock              U       for _, sblock := range p.serverBlocks"
  - "caddyconfig/httpcaddyfile/pkiapp.go:203:31      sblock              U       caCfgValue := range sblock.pile[\"pki.ca\"] {"
  - "caddyconfig/httpcaddyfile/pkiapp.go:223:27      CAID                U       ID = caddypki.DefaultCAID"
  - "caddyconfig/httpcaddyfile/serveroptions.go:15:9         httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/serveroptions.go:23:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/serveroptions.go:24:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/serveroptions.go:24:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/serveroptions.go:25:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/serveroptions.go:25:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/serveroptions.go:25:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/serveroptions.go:26:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/serveroptions.go:26:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/serveroptions.go:29:63        Caddyfile           U       overrides parsed from Caddyfile global options"
  - "caddyconfig/httpcaddyfile/serveroptions.go:36:35        caddyhttp           U       will all map 1:1 to the caddyhttp.Server struct"
  - "caddyconfig/httpcaddyfile/serveroptions.go:52:24        caddyhttp           U       Metrics *caddyhttp.Metrics"
  - "caddyconfig/httpcaddyfile/serveroptions.go:56:15        Caddyfile           U       func unmarshalCaddyfileServerOptions(d *caddyfile"
  - "caddyconfig/httpcaddyfile/serveroptions.go:56:41        caddyfile           U       shalCaddyfileServerOptions(d *caddyfile.Dispenser) (any, error"
  - "caddyconfig/httpcaddyfile/serveroptions.go:70:19        Errf                U       return nil, d.Errf(\"cannot set a name for"
  - "caddyconfig/httpcaddyfile/serveroptions.go:80:17        caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "caddyconfig/httpcaddyfile/serveroptions.go:88:28        caddyconfig         U       jsonListenerWrapper := caddyconfig.JSONModuleObject("
  - "caddyconfig/httpcaddyfile/serveroptions.go:106:21       Errf                U       return nil, d.Errf(\"parsing read_body timeout"
  - "caddyconfig/httpcaddyfile/serveroptions.go:116:21       Errf                U       return nil, d.Errf(\"parsing read_header"
  - "caddyconfig/httpcaddyfile/serveroptions.go:126:21       Errf                U       return nil, d.Errf(\"parsing write timeout"
  - "caddyconfig/httpcaddyfile/serveroptions.go:136:21       Errf                U       return nil, d.Errf(\"parsing idle timeout"
  - "caddyconfig/httpcaddyfile/serveroptions.go:207:16       caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "caddyconfig/httpcaddyfile/serveroptions.go:211:23       caddyhttp           U       source, ok := unm.(caddyhttp.IPRangeSource)"
  - "caddyconfig/httpcaddyfile/serveroptions.go:215:18       caddyconfig         U       jsonSource := caddyconfig.JSONModuleObject("
  - "caddyconfig/httpcaddyfile/serveroptions.go:248:29       caddyhttp           U       serverOpts.Metrics = new(caddyhttp.Metrics)"
  - "caddyconfig/httpcaddyfile/serveroptions.go:267:7        caddyconfig         U       _ *[]caddyconfig.Warning,"
  - "caddyconfig/httpcaddyfile/shorthands.go:1:9         httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/shorthands.go:7:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/shorthands.go:7:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/shorthands.go:7:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "caddyconfig/httpcaddyfile/shorthands.go:22:20       Caddyfile           U       // when writing a Caddyfile) with their actual placeholde"
  - "caddyconfig/httpcaddyfile/shorthands.go:52:19       Caddyfile           U       // be used in the Caddyfile, and the right is the"
  - "caddyconfig/httpcaddyfile/shorthands.go:58:5        hostport            U       \"{hostport}\", \"{http.request.hostport"
  - "caddyconfig/httpcaddyfile/shorthands.go:58:32       hostport            U       hostport}\", \"{http.request.hostport}\","
  - "caddyconfig/httpcaddyfile/shorthands.go:77:14       hostport            U       \"{upstream_hostport}\", \"{http.reverse_proxy"
  - "caddyconfig/httpcaddyfile/shorthands.go:77:56       hostport            U       reverse_proxy.upstream.hostport}\","
  - "caddyconfig/httpcaddyfile/shorthands.go:83:52       caddyfile           U       ApplyToSegment(segment *caddyfile.Segment) {"
  - "caddyconfig/httpcaddyfile/tlsapp_test.go:1:9            httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/tlsapp_test.go:6:14           caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "caddyconfig/httpcaddyfile/tlsapp_test.go:6:43           caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "caddyconfig/httpcaddyfile/tlsapp_test.go:50:11          caddytls            U       apA := &caddytls.AutomationPolicy{SubjectsRaw"
  - "caddyconfig/httpcaddyfile/tlsapp_test.go:51:11          caddytls            U       apB := &caddytls.AutomationPolicy{SubjectsRaw"
  - "caddyconfig/httpcaddyfile/tlsapp.go:15:9        httpcaddyfile       U       package httpcaddyfile"
  - "caddyconfig/httpcaddyfile/tlsapp.go:26:14       caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:26:26       certmagic           U       github.com/caddyserver/certmagic\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:27:14       mholt               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:27:20       acmez               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:29:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:30:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddyconfig/httpcaddyfile/tlsapp.go:30:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:31:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "caddyconfig/httpcaddyfile/tlsapp.go:31:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:32:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "caddyconfig/httpcaddyfile/tlsapp.go:32:43       caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "caddyconfig/httpcaddyfile/tlsapp.go:38:13       caddyconfig         U       warnings []caddyconfig.Warning,"
  - "caddyconfig/httpcaddyfile/tlsapp.go:39:5        caddytls            U       ) (*caddytls.TLS, []caddyconfig.Warning"
  - "caddyconfig/httpcaddyfile/tlsapp.go:39:21       caddyconfig         U       ) (*caddytls.TLS, []caddyconfig.Warning, error) {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:40:13       caddytls            U       tlsApp := &caddytls.TLS{CertificatesRaw"
  - "caddyconfig/httpcaddyfile/tlsapp.go:41:20       caddytls            U       var certLoaders []caddytls.CertificateLoader"
  - "caddyconfig/httpcaddyfile/tlsapp.go:43:27       caddyhttp           U       httpPort := strconv.Itoa(caddyhttp.DefaultHTTPPort)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:87:28       caddytls            U       tlsApp.Automation = new(caddytls.AutomationConfig)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:98:10       sblock              U       for _, sblock := range p.serverBlocks"
  - "caddyconfig/httpcaddyfile/tlsapp.go:101:7       sblock              U       if sblock.isAllHTTP() {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:111:4       sblock              U       sblockHosts := sblock.hostsFromKeys"
  - "caddyconfig/httpcaddyfile/tlsapp.go:111:19      sblock              U       sblockHosts := sblock.hostsFromKeys(false"
  - "caddyconfig/httpcaddyfile/tlsapp.go:112:11      sblock              U       if len(sblockHosts) == 0 && catchAllAP"
  - "caddyconfig/httpcaddyfile/tlsapp.go:126:14      Vals                U       if keyTypeVals, ok := sblock.pile["
  - "caddyconfig/httpcaddyfile/tlsapp.go:127:25      Vals                U       ap.KeyType = keyTypeVals[0].Value.(string)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:131:13      Vals                U       if issuerVals, ok := sblock.pile["
  - "caddyconfig/httpcaddyfile/tlsapp.go:132:19      certmagic           U       var issuers []certmagic.Issuer"
  - "caddyconfig/httpcaddyfile/tlsapp.go:133:37      Vals                U       issuerVal := range issuerVals {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:134:49      certmagic           U       issuers, issuerVal.Value.(certmagic.Issuer))"
  - "caddyconfig/httpcaddyfile/tlsapp.go:156:18      Vals                U       if certManagerVals, ok := sblock.pile["
  - "caddyconfig/httpcaddyfile/tlsapp.go:159:46      caddyconfig         U       append(ap.ManagersRaw, caddyconfig.JSONModuleObject(certManager"
  - "caddyconfig/httpcaddyfile/tlsapp.go:199:49      Caddyfile           U       a poor mapping from Caddyfile to JSON but that's"
  - "caddyconfig/httpcaddyfile/tlsapp.go:202:38      Tailscale           U       as desired (see the Tailscale listener plugin), so"
  - "caddyconfig/httpcaddyfile/tlsapp.go:226:35      Tailscale           U       not create Issuers for Tailscale domains; they will be"
  - "caddyconfig/httpcaddyfile/tlsapp.go:227:11      Tailscale           U       if isTailscaleDomain(s) {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:230:10      certmagic           U       if !certmagic.SubjectQualifiesForCert"
  - "caddyconfig/httpcaddyfile/tlsapp.go:233:22      certmagic           U       // we don't use certmagic.SubjectQualifiesForPublicCert"
  - "caddyconfig/httpcaddyfile/tlsapp.go:251:41      caddyconfig         U       = []json.RawMessage{caddyconfig.JSONModuleObject(caddytls"
  - "caddyconfig/httpcaddyfile/tlsapp.go:336:12      hostnames           U       // if any hostnames appear on the same server"
  - "caddyconfig/httpcaddyfile/tlsapp.go:369:9       ACMECA              U       globalACMECA := options[\"acme_ca"
  - "caddyconfig/httpcaddyfile/tlsapp.go:370:9       ACMECA              U       globalACMECARoot := options[\"acme"
  - "caddyconfig/httpcaddyfile/tlsapp.go:371:9       ACMEDNS             U       globalACMEDNS := options[\"acme_dns"
  - "caddyconfig/httpcaddyfile/tlsapp.go:372:9       ACMEEAB             U       globalACMEEAB := options[\"acme_eab"
  - "caddyconfig/httpcaddyfile/tlsapp.go:374:56      ACMECA              U       globalEmail != nil || globalACMECA != nil || globalACMECARoot"
  - "caddyconfig/httpcaddyfile/tlsapp.go:374:79      ACMECA              U       globalACMECA != nil || globalACMECARoot != nil || globalACMEDNS"
  - "caddyconfig/httpcaddyfile/tlsapp.go:374:106     ACMEDNS             U       balACMECARoot != nil || globalACMEDNS != nil || globalACMEEAB"
  - "caddyconfig/httpcaddyfile/tlsapp.go:374:130     ACMEEAB             U       globalACMEDNS != nil || globalACMEEAB != nil || globalPreferredChai"
  - "caddyconfig/httpcaddyfile/tlsapp.go:385:15      ACMECA              U       if globalACMECA != nil {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:456:8       ACMEDNS             U       globalACMEDNS := options[\"acme_dns"
  - "caddyconfig/httpcaddyfile/tlsapp.go:457:8       ACMEEAB             U       globalACMEEAB := options[\"acme_eab"
  - "caddyconfig/httpcaddyfile/tlsapp.go:471:11      ACMEDNS             U       if globalACMEDNS != nil && (acmeIssuer"
  - "caddyconfig/httpcaddyfile/tlsapp.go:474:53      ACMEDNS             U       JSONModuleObject(globalACMEDNS, \"name\", globalACMEDNS"
  - "caddyconfig/httpcaddyfile/tlsapp.go:478:11      ACMEEAB             U       if globalACMEEAB != nil && acmeIssuer"
  - "caddyconfig/httpcaddyfile/tlsapp.go:479:38      ACMEEAB             U       ExternalAccount = globalACMEEAB.(*acme.EAB)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:493:86      TLSALPN             U       acmeIssuer.Challenges.TLSALPN == nil || acmeIssuer"
  - "caddyconfig/httpcaddyfile/tlsapp.go:493:126     TLSALPN             U       acmeIssuer.Challenges.TLSALPN.AlternatePort == 0)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:497:28      TLSALPN             U       acmeIssuer.Challenges.TLSALPN == nil {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:498:26      TLSALPN             U       acmeIssuer.Challenges.TLSALPN = new(caddytls.TLSALPNChallen"
  - "caddyconfig/httpcaddyfile/tlsapp.go:498:49      TLSALPN             U       TLSALPN = new(caddytls.TLSALPNChallengeConfig)"
  - "caddyconfig/httpcaddyfile/tlsapp.go:608:60      hostnames           U       if only one has any hostnames"
  - "caddyconfig/httpcaddyfile/tlsapp.go:609:57      hostnames           U       the one without any hostnames,"
  - "caddyconfig/httpcaddyfile/tlsapp.go:710:43      tailscale           U       public certs OR are tailscale domains."
  - "caddyconfig/httpcaddyfile/tlsapp.go:713:52      Tailscale           U       sForPublicCert(ap, subj) || isTailscaleDomain(subj) {"
  - "caddyconfig/httpcaddyfile/tlsapp.go:720:8       Tailscale           U       func isTailscaleDomain(name string) bool"
  - "caddyconfig/httploader.go:15:9          caddyconfig     U       package caddyconfig"
  - "caddyconfig/httploader.go:26:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/httploader.go:71:7          CAPEM           U       RootCAPEMFiles []string `json"
  - "caddyconfig/httploader.go:102:11        vals            U       for key, vals := range hl.Headers"
  - "caddyconfig/httploader.go:103:23        vals            U       for _, val := range vals {"
  - "caddyconfig/httploader.go:185:6         nolint          U       //nolint:gosec"
  - "caddyconfig/httploader.go:185:13        gosec           U       //nolint:gosec"
  - "caddyconfig/httploader.go:192:6         nolint          U       //nolint:gosec"
  - "caddyconfig/httploader.go:192:13        gosec           U       //nolint:gosec"
  - "caddyconfig/httploader.go:197:21        CAPEM           U       if len(hl.TLS.RootCAPEMFiles) > 0 {"
  - "caddyconfig/httploader.go:199:39        CAPEM           U       := range hl.TLS.RootCAPEMFiles {"
  - "caddyconfig/load.go:15:9        caddyconfig     U       package caddyconfig"
  - "caddyconfig/load.go:27:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "caddyconfig/load.go:37:11       caddyconfig     U       // of the caddyconfig package for its GetAdapter"
  - "caddyconfig/load.go:38:40       caddyconfig     U       package depends on the caddyconfig package,"
  - "caddyconfig/load.go:39:13       caddyconfig     U       // then the caddyconfig package will not be"
  - "caddytest/caddytest_test.go:1:9         caddytest       U       package caddytest"
  - "caddytest/caddytest_test.go:14:3        redir           U       redir / https://b.caddy.localhost"
  - "caddytest/caddytest.go:1:9          caddytest           U       package caddytest"
  - "caddytest/caddytest.go:25:14        aryann              U       \"github.com/aryann/difflib\""
  - "caddytest/caddytest.go:25:21        difflib             U       \"github.com/aryann/difflib\""
  - "caddytest/caddytest.go:27:2         caddycmd            U       caddycmd \"github.com/caddyserver"
  - "caddytest/caddytest.go:27:23        caddyserver         U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "caddytest/caddytest.go:29:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "caddytest/caddytest.go:29:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "caddytest/caddytest.go:31:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/standard"
  - "caddytest/caddytest.go:95:53        configurion         U       configure the server with a configurion of a specific"
  - "caddytest/caddytest.go:108:53       configurion         U       configure the server with a configurion of a specific"
  - "caddytest/caddytest.go:174:22       caddytest           U       timeElapsed(start, \"caddytest: config load time\")"
  - "caddytest/caddytest.go:194:14       caddyconfig         U       adapter := caddyconfig.GetAdapter(configType"
  - "caddytest/caddytest.go:267:12       inprocess           U       // start inprocess caddy server"
  - "caddytest/caddytest.go:268:74       caddyfile           U       Name(), \"--adapter\", \"caddyfile\"}"
  - "caddytest/caddytest.go:270:4        caddycmd            U       caddycmd.Main()"
  - "caddytest/caddytest.go:306:36       certificatename     U       convention to replace /[certificatename].[crt|key] with the"
  - "caddytest/caddytest.go:326:15       caddytest           U       log.Printf(\"caddytest: redirecting the dialer"
  - "caddytest/caddytest.go:338:67       nolint              U       InsecureSkipVerify: true}, //nolint:gosec"
  - "caddytest/caddytest.go:338:74       gosec               U       reSkipVerify: true}, //nolint:gosec"
  - "caddytest/caddytest.go:391:16       caddyconfig         U       cfgAdapter := caddyconfig.GetAdapter(adapterName"
  - "caddytest/caddytest.go:419:10       difflib             U       diff := difflib.Diff("
  - "caddytest/caddytest.go:426:17       difflib             U       if d.Delta != difflib.Common {"
  - "caddytest/caddytest.go:435:9        difflib             U       case difflib.Common:"
  - "caddytest/caddytest.go:437:9        difflib             U       case difflib.LeftOnly:"
  - "caddytest/caddytest.go:450:25       Caddyfile           U       := CompareAdapt(t, \"Caddyfile\", rawConfig, adapterName"
  - "caddytest/integration/acme_test.go:14:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "caddytest/integration/acme_test.go:15:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/acme_test.go:15:35        caddytest           U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/acme_test.go:16:14        mholt               U       \"github.com/mholt/acmez/v2\""
  - "caddytest/integration/acme_test.go:16:20        acmez               U       \"github.com/mholt/acmez/v2\""
  - "caddytest/integration/acme_test.go:17:14        mholt               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddytest/integration/acme_test.go:17:20        acmez               U       \"github.com/mholt/acmez/v2/acme\""
  - "caddytest/integration/acme_test.go:18:2         smallstepacme       U       smallstepacme \"github.com/smallstep"
  - "caddytest/integration/acme_test.go:18:28        smallstep           U       smallstepacme \"github.com/smallstep/certificates/acme\""
  - "caddytest/integration/acme_test.go:33:12        caddytest           U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/acme_test.go:45:7         caddyfile           U       `, \"caddyfile\")"
  - "caddytest/integration/acme_test.go:47:12        acmez               U       client := acmez.Client{"
  - "caddytest/integration/acme_test.go:53:32        acmez               U       ChallengeSolvers: map[string]acmez.Solver{"
  - "caddytest/integration/acme_test.go:98:31        acmez               U       caddy.Log().Named(\"acmez\")"
  - "caddytest/integration/acme_test.go:100:12       caddytest           U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/acme_test.go:111:19       alpn                U       challenges tls-alpn-01"
  - "caddytest/integration/acme_test.go:114:7        caddyfile           U       `, \"caddyfile\")"
  - "caddytest/integration/acme_test.go:156:107      alpn                U       http-01] offered=[tls-alpn-01] remaining=[tls-alpn"
  - "caddytest/integration/acme_test.go:156:131      alpn                U       alpn-01] remaining=[tls-alpn-01])\""
  - "caddytest/integration/acme_test.go:169:2        smallstepacme       U       smallstepacme.InsecurePortHTTP01"
  - "caddytest/integration/acme_test.go:200:2        smallstepacme       U       smallstepacme.InsecurePortHTTP01"
  - "caddytest/integration/acmeserver_test.go:11:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/acmeserver_test.go:11:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/acmeserver_test.go:12:14          mholt           U       \"github.com/mholt/acmez/v2\""
  - "caddytest/integration/acmeserver_test.go:12:20          acmez           U       \"github.com/mholt/acmez/v2\""
  - "caddytest/integration/acmeserver_test.go:13:14          mholt           U       \"github.com/mholt/acmez/v2/acme\""
  - "caddytest/integration/acmeserver_test.go:13:20          acmez           U       \"github.com/mholt/acmez/v2/acme\""
  - "caddytest/integration/acmeserver_test.go:18:12          caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/acmeserver_test.go:35:7           caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/acmeserver_test.go:44:12          caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/acmeserver_test.go:66:7           caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/acmeserver_test.go:75:12          acmez           U       client := acmez.Client{"
  - "caddytest/integration/acmeserver_test.go:81:32          acmez           U       ChallengeSolvers: map[string]acmez.Solver{"
  - "caddytest/integration/acmeserver_test.go:134:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/acmeserver_test.go:155:7          caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/acmeserver_test.go:164:12         acmez           U       client := acmez.Client{"
  - "caddytest/integration/autohttps_test.go:7:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/autohttps_test.go:7:35        caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/autohttps_test.go:11:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/autohttps_test.go:20:11       Yahaha          U       respond \"Yahaha! You found me!\""
  - "caddytest/integration/autohttps_test.go:21:7        caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/autohttps_test.go:27:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/autohttps_test.go:36:11       Yahaha          U       respond \"Yahaha! You found me!\""
  - "caddytest/integration/autohttps_test.go:37:7        caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/autohttps_test.go:43:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/autohttps_test.go:52:11       Yahaha          U       respond \"Yahaha! You found me!\""
  - "caddytest/integration/autohttps_test.go:53:7        caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/autohttps_test.go:59:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/autohttps_test.go:119:7       caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/autohttps_test.go:141:7       caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/caddyfile_adapt_test.go:12:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/caddyfile_adapt_test.go:12:35         caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/caddyfile_adapt_test.go:14:16         caddyserver     U       _ \"github.com/caddyserver/caddy/v2/internal/testmocks"
  - "caddytest/integration/caddyfile_adapt_test.go:14:46         testmocks       U       caddyserver/caddy/v2/internal/testmocks\""
  - "caddytest/integration/caddyfile_adapt_test.go:17:10         Caddyfile       U       func TestCaddyfileAdaptToJSON(t *testing"
  - "caddytest/integration/caddyfile_adapt_test.go:19:30         caddyfile       U       err := os.ReadDir(\"./caddyfile_adapt\")"
  - "caddytest/integration/caddyfile_adapt_test.go:21:28         caddyfile       U       Errorf(\"failed to read caddyfile_adapt dir: %s\", err"
  - "caddytest/integration/caddyfile_adapt_test.go:34:31         caddyfile       U       err := os.ReadFile(\"./caddyfile_adapt/\" + filename)"
  - "caddytest/integration/caddyfile_adapt_test.go:39:16         Caddyfile       U       // split the Caddyfile (first) and JSON (second"
  - "caddytest/integration/caddyfile_adapt_test.go:40:25         Caddyfile       U       (append newline to Caddyfile to match formatter expectatio"
  - "caddytest/integration/caddyfile_adapt_test.go:42:3          caddyfile       U       caddyfile, json := strings.TrimSpace"
  - "caddytest/integration/caddyfile_adapt_test.go:48:82         Caddyfile       U       filepath.Separator), \"Caddyfile\"))"
  - "caddytest/integration/caddyfile_adapt_test.go:49:39         Caddyfile       U       ReplaceAll(json, `\"./Caddyfile\"`, string(replacePath"
  - "caddytest/integration/caddyfile_adapt_test.go:52:9          caddytest       U       ok := caddytest.CompareAdapt(t, filename"
  - "caddytest/integration/caddyfile_adapt_test.go:52:45         caddyfile       U       CompareAdapt(t, filename, caddyfile, \"caddyfile\", json)"
  - "caddytest/integration/caddyfile_test.go:8:14        caddyserver             U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/caddyfile_test.go:8:35        caddytest               U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/caddyfile_test.go:13:12       caddytest               U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/caddyfile_test.go:27:7        caddyfile               U       `, \"caddyfile\")"
  - "caddytest/integration/caddyfile_test.go:35:12       caddytest               U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/caddyfile_test.go:46:5        redir                   U       redir / http://localhost:"
  - "caddytest/integration/caddyfile_test.go:52:7        caddyfile               U       `, \"caddyfile\")"
  - "caddytest/integration/caddyfile_test.go:63:2        caddytest               U       caddytest.AssertLoadError(t,"
  - "caddytest/integration/caddyfile_test.go:71:4        caddyfile               U       \"caddyfile\","
  - "caddytest/integration/caddyfile_test.go:78:11       clientname              U       Name: \"clientname\","
  - "caddytest/integration/caddyfile_test.go:79:11       caddytest               U       Value: \"caddytest\","
  - "caddytest/integration/caddyfile_test.go:102:7       caddyfile               U       `, \"caddyfile\")"
  - "caddytest/integration/caddyfile_test.go:128:7       caddyfile               U       `, \"caddyfile\")"
  - "caddytest/integration/caddyfile_test.go:150:43      someinvalidprefix       U       unsupported URL scheme someinvalidprefix://\","
  - "caddytest/integration/caddyfile_test.go:170:43      someinvalidprefix       U       unsupported URL scheme someinvalidprefix://`,"
  - "caddytest/integration/caddyfile_test.go:513:12      changethis              U       uri query changethis>changed"
  - "caddytest/integration/caddyfile_test.go:517:145     Dvalue                  U       foo=bar0&foo=bar&key%3Dvalue=example&taz=test\")"
  - "caddytest/integration/caddyfile_test.go:747:10      internalerr             U       error /internalerr* \"Internal Server Error"
  - "caddytest/integration/caddyfile_test.go:770:10      threehundred            U       error /threehundred* \"Moved Permanently"
  - "caddytest/integration/caddyfile_test.go:771:10      internalerr             U       error /internalerr* \"Internal Server Error"
  - "caddytest/integration/caddyfile_test.go:797:20      Caddyfile               U       expectedError: `Caddyfile:2: parsed 'handle' as"
  - "caddytest/integration/caddyfile_test.go:804:20      Caddyfile               U       expectedError: `Caddyfile:2: parsed 'reverse_proxy"
  - "caddytest/integration/handler_test.go:8:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/handler_test.go:8:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/handler_test.go:12:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/handler_test.go:24:7          caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/handler_test.go:35:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/handler_test.go:47:7          caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/intercept_test.go:6:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/intercept_test.go:6:35        caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/intercept_test.go:10:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/intercept_test.go:32:7        caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/leafcertloaders_test.go:6:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/leafcertloaders_test.go:6:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/leafcertloaders_test.go:10:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/leafcertloaders_test.go:47:28         leafcert        U       \"files\": [\"../leafcert.pem\"]"
  - "caddytest/integration/listener_test.go:12:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/listener_test.go:12:35        caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/listener_test.go:15:76        caddytest       U       andlerFunc http.HandlerFunc) *caddytest.Tester {"
  - "caddytest/integration/listener_test.go:31:12        caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/listener_test.go:49:27        caddyfile       U       l.Addr().String()), \"caddyfile\")"
  - "caddytest/integration/map_test.go:7:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/map_test.go:7:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/map_test.go:12:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/map_test.go:33:6          caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/map_test.go:42:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/map_test.go:61:6          caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/map_test.go:70:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/pki_test.go:6:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/pki_test.go:6:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/pki_test.go:10:2          caddytest       U       caddytest.AssertLoadError(t,"
  - "caddytest/integration/pki_test.go:60:2          caddytest       U       caddytest.AssertLoadError(t,"
  - "caddytest/integration/reverseproxy_test.go:13:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/reverseproxy_test.go:13:35        caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/reverseproxy_test.go:17:12        caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/reverseproxy_test.go:90:12        caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/reverseproxy_test.go:142:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/reverseproxy_test.go:236:12       caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/reverseproxy_test.go:357:6        caddyfile       U       `, \"caddyfile\")"
  - "caddytest/integration/reverseproxy_test.go:416:19       caddyfile       U       `, socketName), \"caddyfile\")"
  - "caddytest/integration/reverseproxy_test.go:473:19       caddyfile       U       `, socketName), \"caddyfile\")"
  - "caddytest/integration/sni_test.go:6:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/sni_test.go:6:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/sni_test.go:11:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/sni_test.go:110:12        caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/sni_test.go:214:12        caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/sni_test.go:289:2         caddytest       U       caddytest.AssertAdapt(t, `"
  - "caddytest/integration/sni_test.go:299:6         caddyfile       U       `, \"caddyfile\", `{"
  - "caddytest/integration/stream_test.go:16:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/stream_test.go:16:35          caddytest       U       caddyserver/caddy/v2/caddytest\""
  - "caddytest/integration/stream_test.go:23:12          caddytest       U       tester := caddytest.NewTester(t)"
  - "caddytest/integration/stream_test.go:155:3          rstring         U       rstring, err := httputil.DumpRequest"
  - "caddytest/integration/stream_test.go:157:42         rstring         U       server received req: %s\", rstring)"
  - "caddytest/integration/stream_test.go:207:12         caddytest       U       tester := caddytest.NewTester(t)"
  - "cmd/caddy/main.go:27:19         xcaddy          U       // Or you can use xcaddy which does it all for"
  - "cmd/caddy/main.go:32:2          caddycmd        U       caddycmd \"github.com/caddyserver"
  - "cmd/caddy/main.go:32:23         caddyserver     U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "cmd/caddy/main.go:35:16         caddyserver     U       _ \"github.com/caddyserver/caddy/v2/modules/standard"
  - "cmd/caddy/main.go:39:2          caddycmd        U       caddycmd.Main()"
  - "cmd/cobra.go:1:9            caddycmd        U       package caddycmd"
  - "cmd/cobra.go:8:14           caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/cobra.go:33:24          Caddyfile       U       its configuration. The Caddyfile is a built-in config"
  - "cmd/cobra.go:40:48          Caddyfile       U       you. If a file named Caddyfile is in the"
  - "cmd/cobra.go:85:5           xcaddy          U       The xcaddy command can be used"
  - "cmd/commandfuncs.go:15:9        caddycmd        U       package caddycmd"
  - "cmd/commandfuncs.go:35:14       aryann          U       \"github.com/aryann/difflib\""
  - "cmd/commandfuncs.go:35:21       difflib         U       \"github.com/aryann/difflib\""
  - "cmd/commandfuncs.go:38:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/commandfuncs.go:39:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "cmd/commandfuncs.go:39:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "cmd/commandfuncs.go:40:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "cmd/commandfuncs.go:40:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "cmd/commandfuncs.go:40:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "cmd/commandfuncs.go:41:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "cmd/commandfuncs.go:47:2        pidfile         U       pidfileFlag := fl.String(\"pidfile"
  - "cmd/commandfuncs.go:47:28       pidfile         U       pidfileFlag := fl.String(\"pidfile\")"
  - "cmd/commandfuncs.go:67:30       pingback        U       craft the command with a pingback address and with a"
  - "cmd/commandfuncs.go:76:44       pingback        U       os.Args[0], \"run\", \"--pingback\", ln.Addr().String("
  - "cmd/commandfuncs.go:94:5        pidfile         U       if pidfileFlag != \"\" {"
  - "cmd/commandfuncs.go:95:34       pidfile         U       append(cmd.Args, \"--pidfile\", pidfileFlag)"
  - "cmd/commandfuncs.go:95:44       pidfile         U       cmd.Args, \"--pidfile\", pidfileFlag)"
  - "cmd/commandfuncs.go:144:16      Pingback        U       err = handlePingbackConn(conn, expect)"
  - "cmd/commandfuncs.go:180:2       pingback        U       pingbackFlag := fl.String(\"pingback"
  - "cmd/commandfuncs.go:180:29      pingback        U       pingbackFlag := fl.String(\"pingback\")"
  - "cmd/commandfuncs.go:243:5       pingback        U       if pingbackFlag != \"\" {"
  - "cmd/commandfuncs.go:274:44      USERPROFILE     U       == \"\" && os.Getenv(\"USERPROFILE\") == \"\" && !hasXDG"
  - "cmd/commandfuncs.go:275:39      USERPROFILE     U       Warn(\"neither HOME nor USERPROFILE environment variables"
  - "cmd/commandfuncs.go:461:16      caddyconfig     U       cfgAdapter := caddyconfig.GetAdapter(adapterFlag"
  - "cmd/commandfuncs.go:536:53      Caddyfile       U       required when there is no Caddyfile in current directory"
  - "cmd/commandfuncs.go:564:17      Caddyfile       U       configFile = \"Caddyfile\""
  - "cmd/commandfuncs.go:574:20      caddyfile       U       fmt.Print(string(caddyfile.Format(input)))"
  - "cmd/commandfuncs.go:584:12      caddyfile       U       output := caddyfile.Format(input)"
  - "cmd/commandfuncs.go:594:11      difflib         U       diff := difflib.Diff("
  - "cmd/commandfuncs.go:599:9       difflib         U       case difflib.Common:"
  - "cmd/commandfuncs.go:601:9       difflib         U       case difflib.LeftOnly:"
  - "cmd/commandfuncs.go:603:9       difflib         U       case difflib.RightOnly:"
  - "cmd/commandfuncs.go:611:22      caddyfile       U       if warning, diff := caddyfile.FormattingDifference"
  - "cmd/commandfuncs.go:612:58      Caddyfile       U       fmt.Errorf(`%s:%d: Caddyfile input is not formatted"
  - "cmd/commandfuncs.go:612:130     Caddyfile       U       overwrite' to update your Caddyfile in-place instead of"
  - "cmd/commandfuncs.go:684:7       srldkjfsd       U       // \"srldkjfsd\"), if for some reason"
  - "cmd/commandfuncs.go:754:87      Caddyfile       U       config flag or ensure Caddyfile exists in current directory"
  - "cmd/commandfuncs.go:783:25      caddyconfig     U       configFile == \"\" && caddyconfig.GetAdapter(\"caddyfile"
  - "cmd/commandfuncs.go:783:49      caddyfile       U       caddyconfig.GetAdapter(\"caddyfile\") != nil {"
  - "cmd/commands.go:15:9        caddycmd        U       package caddycmd"
  - "cmd/commands.go:27:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/commands.go:34:47       godoc           U       the RegisterCommand() godoc."
  - "cmd/commands.go:70:22       caddycmd        U       // this function. A caddycmd.WrapCommandFuncForCobra"
  - "cmd/commands.go:80:40       initialised     U       returns a list of commands initialised by"
  - "cmd/commands.go:91:80       pidfile         U       path>] [--watch] [--pidfile <file>]\","
  - "cmd/commands.go:109:25      pidfile         U       cmd.Flags().StringP(\"pidfile\", \"\", \"\", \"Path of file"
  - "cmd/commands.go:116:103     pidfile         U       resume] [--watch] [--pidfile <file>]\","
  - "cmd/commands.go:132:2       Caddyfile       U       \"Caddyfile\" and the caddyfile config"
  - "cmd/commands.go:132:21      caddyfile       U       \"Caddyfile\" and the caddyfile config adapter is plugged"
  - "cmd/commands.go:157:25      pidfile         U       cmd.Flags().StringP(\"pidfile\", \"\", \"\", \"Path of file"
  - "cmd/commands.go:158:25      pingback        U       cmd.Flags().StringP(\"pingback\", \"\", \"\", \"Echo confirmation"
  - "cmd/commands.go:214:56      xcaddy          U       documentation (or by using xcaddy), more"
  - "cmd/commands.go:292:41      caddyfile       U       StringP(\"adapter\", \"a\", \"caddyfile\", \"Name of config adapter"
  - "cmd/commands.go:327:33      Caddyfile       U       storage export --config Caddyfile.old --output - |"
  - "cmd/commands.go:328:33      Caddyfile       U       storage import --config Caddyfile.new --input -"
  - "cmd/commands.go:373:21      Caddyfile       U       Short: \"Formats a Caddyfile\","
  - "cmd/commands.go:375:13      Caddyfile       U       Formats the Caddyfile by adding proper indentation"
  - "cmd/commands.go:494:24      compinit        U       $ echo \"autoload -U compinit; compinit\" >> ~/.zshrc"
  - "cmd/commands.go:494:34      compinit        U       autoload -U compinit; compinit\" >> ~/.zshrc"
  - "cmd/main_test.go:1:9            caddycmd        U       package caddycmd"
  - "cmd/main_test.go:172:13         Caddyfile       U       func Test_isCaddyfile(t *testing.T) {"
  - "cmd/main_test.go:184:16         Caddyfile       U       name: \"bare Caddyfile without adapter\","
  - "cmd/main_test.go:186:19         Caddyfile       U       configFile: \"Caddyfile\","
  - "cmd/main_test.go:193:17         Caddyfile       U       name: \"local Caddyfile without adapter\","
  - "cmd/main_test.go:195:21         Caddyfile       U       configFile: \"./Caddyfile\","
  - "cmd/main_test.go:202:17         caddyfile       U       name: \"local caddyfile with adapter\","
  - "cmd/main_test.go:205:19         caddyfile       U       adapterName: \"caddyfile\","
  - "cmd/main_test.go:211:22         caddyfile       U       name: \"ends with .caddyfile with adapter\","
  - "cmd/main_test.go:213:26         caddyfile       U       configFile: \"./conf.caddyfile\","
  - "cmd/main_test.go:214:19         caddyfile       U       adapterName: \"caddyfile\","
  - "cmd/main.go:15:9        caddycmd        U       package caddycmd"
  - "cmd/main.go:36:14       caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "cmd/main.go:36:26       certmagic       U       github.com/caddyserver/certmagic\""
  - "cmd/main.go:37:20       pflag           U       \"github.com/spf13/pflag\""
  - "cmd/main.go:38:15       automaxprocs    U       \"go.uber.org/automaxprocs/maxprocs\""
  - "cmd/main.go:38:28       maxprocs        U       uber.org/automaxprocs/maxprocs\""
  - "cmd/main.go:41:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/main.go:42:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "cmd/main.go:42:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "cmd/main.go:53:2        certmagic       U       certmagic.UserAgent = ua"
  - "cmd/main.go:58:2        certmagic       U       certmagic.DefaultACME.Agreed"
  - "cmd/main.go:69:15       maxprocs        U       undo, err := maxprocs.Set()"
  - "cmd/main.go:84:10       Pingback        U       // handlePingbackConn reads from conn"
  - "cmd/main.go:86:12       Pingback        U       func handlePingbackConn(conn net.Conn, expect"
  - "cmd/main.go:110:8       Caddyfile       U       func isCaddyfile(configFile, adapterName"
  - "cmd/main.go:111:21      caddyfile       U       if adapterName == \"caddyfile\" {"
  - "cmd/main.go:115:54      caddyfile       U       config file starts with \"caddyfile\" or"
  - "cmd/main.go:116:13      caddyfile       U       // has a \".caddyfile\" extension, and no adapter"
  - "cmd/main.go:118:5       caddyfile       U       // caddyfile adapter for convenience"
  - "cmd/main.go:121:16      Caddyfile       U       startsOrEndsInCaddyfile := strings.HasPrefix"
  - "cmd/main.go:121:60      caddyfile       U       HasPrefix(baseConfig, \"caddyfile\") || strings.HasSuffix"
  - "cmd/main.go:130:33      Caddyfile       U       t a JSON file (e.g. Caddyfile.yaml),"
  - "cmd/main.go:132:40      Caddyfile       U       \"\" && startsOrEndsInCaddyfile {"
  - "cmd/main.go:140:31      Caddyfile       U       does not start with \"Caddyfile\""
  - "cmd/main.go:158:17      caddyconfig     U       var cfgAdapter caddyconfig.Adapter"
  - "cmd/main.go:177:16      caddyconfig     U       cfgAdapter = caddyconfig.GetAdapter(\"caddyfile"
  - "cmd/main.go:202:16      caddyconfig     U       cfgAdapter = caddyconfig.GetAdapter(adapterName"
  - "cmd/main.go:271:4       nolint          U       //nolint:staticcheck"
  - "cmd/main.go:301:3       pflag           U       *pflag.FlagSet"
  - "cmd/main.go:372:26      certmagic       U       caddy.DefaultStorage = &certmagic.FileStorage{Path: caddy"
  - "cmd/packagesfuncs.go:15:9           caddycmd        U       package caddycmd"
  - "cmd/packagesfuncs.go:33:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/packagesfuncs.go:41:8           Pkgs            U       pluginPkgs, err := getPluginPackages"
  - "cmd/packagesfuncs.go:46:28          Pkgs            U       return upgradeBuild(pluginPkgs, fl)"
  - "cmd/packagesfuncs.go:57:8           Pkgs            U       pluginPkgs, err := getPluginPackages"
  - "cmd/packagesfuncs.go:63:21          Pkgs            U       if _, ok := pluginPkgs[arg]; ok {"
  - "cmd/packagesfuncs.go:66:9           Pkgs            U       pluginPkgs[arg] = struct{}{}"
  - "cmd/packagesfuncs.go:208:3          iface           U       iface := any(modInfo.New("
  - "cmd/packagesfuncs.go:209:28         iface           U       rv := reflect.ValueOf(iface); rv.Kind() == reflect"
  - "cmd/packagesfuncs.go:210:4          iface           U       iface = reflect.New(reflect"
  - "cmd/packagesfuncs.go:210:39         iface           U       reflect.New(reflect.TypeOf(iface).Elem()).Elem().Interface"
  - "cmd/packagesfuncs.go:212:32         iface           U       modPkgPath := reflect.TypeOf(iface).PkgPath()"
  - "cmd/removebinary_windows.go:15:9        caddycmd    U       package caddycmd"
  - "cmd/removebinary_windows.go:34:67       windir      U       filepath.Join(os.Getenv(\"windir\"), \"system32\", \"cmd"
  - "cmd/removebinary.go:17:9        caddycmd    U       package caddycmd"
  - "cmd/storagefuncs.go:15:9        caddycmd        U       package caddycmd"
  - "cmd/storagefuncs.go:26:14       caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "cmd/storagefuncs.go:26:26       certmagic       U       github.com/caddyserver/certmagic\""
  - "cmd/storagefuncs.go:28:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "cmd/storagefuncs.go:81:11       certmagic       U       var stor certmagic.Storage"
  - "cmd/storagefuncs.go:153:11      certmagic       U       var stor certmagic.Storage"
  - "cmd/x509rootsfallback.go:15:9           caddycmd        U       package caddycmd"
  - "cmd/x509rootsfallback.go:30:21          goimports       U       // between gci and goimports when in main.go."
  - "context_test.go:28:11       godoc       U       // This godoc comment will appear"
  - "context_test.go:60:11       godoc       U       // This godoc comment will appear"
  - "context_test.go:93:11       godoc       U       // This godoc comment will appear"
  - "context.go:25:14        caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "context.go:25:26        certmagic           U       github.com/caddyserver/certmagic\""
  - "context.go:27:23        zapslog             U       go.uber.org/zap/exp/zapslog\""
  - "context.go:29:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/internal/filesystems"
  - "context.go:93:46        filesystemmap       U       loaded, we use a default filesystemmap, which includes the"
  - "context.go:93:80        osfs                U       which includes the osfs"
  - "context.go:480:30       certmagic           U       ctx Context) Storage() certmagic.Storage {"
  - "context.go:532:19       zapslog             U       return slog.New(zapslog.NewHandler(l.Core()"
  - "context.go:536:19       zapslog             U       return slog.New(zapslog.NewHandler(Log().Core"
  - "context.go:539:18       zapslog             U       return slog.New(zapslog.NewHandler("
  - "context.go:541:4        zapslog             U       &zapslog.HandlerOptions{"
  - "duration_fuzz.go:15:12          gofuzz      U       //go:build gofuzz"
  - "internal/metrics/metrics_test.go:19:28          ohno    U       method: strings.Repeat(\"ohno\", 9999), expected:"
  - "internal/sockets.go:45:48       rwxr    U       returns a string like `-rwxr-xr--` for `u=rwx,g=rx"
  - "internal/testmocks/dummyverifier.go:1:9         testmocks       U       package testmocks"
  - "internal/testmocks/dummyverifier.go:6:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "internal/testmocks/dummyverifier.go:7:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "internal/testmocks/dummyverifier.go:7:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "internal/testmocks/dummyverifier.go:7:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "internal/testmocks/dummyverifier.go:8:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "internal/testmocks/dummyverifier.go:8:43        caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "internal/testmocks/dummyverifier.go:17:13       Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "internal/testmocks/dummyverifier.go:17:34       caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "internal/testmocks/dummyverifier.go:18:31       Caddyfile       U       dummyVerifier) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "internal/testmocks/dummyverifier.go:18:44       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "internal/testmocks/dummyverifier.go:39:4        caddytls        U       _ caddytls.ClientCertificateVerifier"
  - "internal/testmocks/dummyverifier.go:40:4        caddyfile       U       _ caddyfile.Unmarshaler"
  - "listen_unix_setopt_freebsd.go:7:11          SOREUSEPORT     U       const unixSOREUSEPORT = unix.SO_REUSEPORT"
  - "listen_unix_setopt.go:7:11          SOREUSEPORT     U       const unixSOREUSEPORT = unix.SO_REUSEPORT"
  - "listen_unix.go:154:70       SOREUSEPORT     U       unix.SOL_SOCKET, unixSOREUSEPORT, 1); err != nil {"
  - "listen.go:93:6          tconn       U       if tconn, ok := conn.(canSetKeepAlive"
  - "listen.go:95:11         tconn       U       err = tconn.SetKeepAlivePeriod(fcl"
  - "listen.go:97:11         tconn       U       err = tconn.SetKeepAlive(false)"
  - "listen.go:199:7         fcpc        U       func (fcpc *fakeClosePacketConn"
  - "listen.go:201:23        fcpc        U       if atomic.LoadInt32(&fcpc.closed) == 1 {"
  - "listen.go:203:11        readfrom    U       Op: \"readfrom\","
  - "listen.go:204:10        fcpc        U       Net: fcpc.LocalAddr().Network"
  - "listen.go:205:10        fcpc        U       Addr: fcpc.LocalAddr(),"
  - "listen.go:210:21        readfrom    U       // call underlying readfrom"
  - "listen.go:211:17        fcpc        U       n, addr, err = fcpc.sharedPacketConn.ReadFrom"
  - "listeners_fuzz.go:15:12         gofuzz      U       //go:build gofuzz"
  - "listeners_test.go:21:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "listeners.go:37:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "listeners.go:289:38         netw            U       returns true if the netw is a unix network."
  - "listeners.go:290:20         netw            U       func IsUnixNetwork(netw string) bool {"
  - "listeners.go:291:27         netw            U       return strings.HasPrefix(netw, \"unix\")"
  - "listeners.go:422:7          unwrapper       U       if unwrapper, ok := h3ln.(interface"
  - "listeners.go:423:12         unwrapper       U       h3ln = unwrapper.Unwrap()"
  - "listeners.go:431:5          nolint          U       //nolint:gosec"
  - "listeners.go:431:12         gosec           U       //nolint:gosec"
  - "listeners.go:479:5          Confs           U       tlsConfs map[*tls.Config"
  - "listeners.go:485:2          sqtc            U       sqtc := &sharedQUICState"
  - "listeners.go:486:6          Confs           U       tlsConfs: make(map[*tls"
  - "listeners.go:489:2          sqtc            U       sqtc.addState(tlsConfig)"
  - "listeners.go:490:9          sqtc            U       return sqtc"
  - "listeners.go:506:5          cacc            U       if cacc, ok := sqs.tlsConfs"
  - "listeners.go:506:24         Confs           U       if cacc, ok := sqs.tlsConfs[tlsConfig]; ok {"
  - "listeners.go:507:10         cacc            U       return cacc.Context, cacc.CancelFunc"
  - "listeners.go:507:24         cacc            U       return cacc.Context, cacc.CancelFunc"
  - "listeners.go:517:17         Confs           U       delete(sqs.tlsConfs, tlsConfig)"
  - "listeners.go:521:27         Confs           U       for tc := range sqs.tlsConfs {"
  - "listeners.go:582:7          fcql            U       func (fcql *fakeCloseQuicListener"
  - "listeners.go:583:15         fcql            U       conn, err := fcql.sharedQuicListener.Accept"
  - "listeners.go:583:46         fcql            U       sharedQuicListener.Accept(fcql.context)"
  - "listeners.go:589:23         fcql            U       if atomic.LoadInt32(&fcql.closed) == 1 && errors"
  - "listeners.go:590:29         fcql            U       return nil, fakeClosedErr(fcql)"
  - "logging.go:283:7        wdest       U       func (wdest writerDestructor) Destruct"
  - "logging.go:284:9        wdest       U       return wdest.Close()"
  - "metrics.go:8:50         promauto        U       client_golang/prometheus/promauto\""
  - "metrics.go:10:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/internal/metrics"
  - "metrics.go:19:30        promauto        U       adminMetrics.requestCount = promauto.NewCounterVec(prometheus"
  - "metrics.go:25:31        promauto        U       adminMetrics.requestErrors = promauto.NewCounterVec(prometheus"
  - "metrics.go:39:15        promhttp        U       // Similar to promhttp.InstrumentHandlerCounter"
  - "metrics.go:42:11        promhttp        U       // Unlike promhttp.InstrumentHandlerCounter"
  - "modules.go:49:21        caddyhttp       U       // type-asserted as caddyhttp.MiddlewareHandler values"
  - "modules/caddyevents/app.go:15:9         caddyevents         U       package caddyevents"
  - "modules/caddyevents/app.go:28:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyevents/app.go:128:12       Iface               U       handlersIface, err := ctx.LoadModule"
  - "modules/caddyevents/app.go:132:30       Iface               U       h := range handlersIface.([]any) {"
  - "modules/caddyevents/app.go:385:41       specversion         U       string `json:\"specversion\"`"
  - "modules/caddyevents/app.go:388:41       datacontenttype     U       string `json:\"datacontenttype,omitempty\"`"
  - "modules/caddyevents/eventsconfig/caddyfile.go:15:12         eventsconfig        U       // Package eventsconfig is for configuring caddyevent"
  - "modules/caddyevents/eventsconfig/caddyfile.go:15:44         caddyevents         U       entsconfig is for configuring caddyevents.App with the"
  - "modules/caddyevents/eventsconfig/caddyfile.go:16:4          Caddyfile           U       // Caddyfile. This code can't be"
  - "modules/caddyevents/eventsconfig/caddyfile.go:16:41         caddyevents         U       code can't be in the caddyevents package because"
  - "modules/caddyevents/eventsconfig/caddyfile.go:17:8          httpcaddyfile       U       // the httpcaddyfile package imports caddyhttp"
  - "modules/caddyevents/eventsconfig/caddyfile.go:17:38         caddyhttp           U       httpcaddyfile package imports caddyhttp, which imports"
  - "modules/caddyevents/eventsconfig/caddyfile.go:18:4          caddyevents         U       // caddyevents: hence, it creates an"
  - "modules/caddyevents/eventsconfig/caddyfile.go:19:9          eventsconfig        U       package eventsconfig"
  - "modules/caddyevents/eventsconfig/caddyfile.go:24:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyevents/eventsconfig/caddyfile.go:24:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:25:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyevents/eventsconfig/caddyfile.go:25:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:25:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:26:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyevents/eventsconfig/caddyfile.go:26:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:26:47         httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:27:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/caddyevents/eventsconfig/caddyfile.go:27:43         caddyevents         U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/caddyevents/eventsconfig/caddyfile.go:31:2          httpcaddyfile       U       httpcaddyfile.RegisterGlobalOption"
  - "modules/caddyevents/eventsconfig/caddyfile.go:34:56         Caddyfile           U       global option from Caddyfile to set up the events"
  - "modules/caddyevents/eventsconfig/caddyfile.go:42:18         caddyfile           U       func parseApp(d *caddyfile.Dispenser, _ any) (any"
  - "modules/caddyevents/eventsconfig/caddyfile.go:44:13         caddyevents         U       app := new(caddyevents.App)"
  - "modules/caddyevents/eventsconfig/caddyfile.go:61:16         caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddyevents/eventsconfig/caddyfile.go:69:6          caddyconfig         U       caddyconfig.JSONModuleObject(unm"
  - "modules/caddyevents/eventsconfig/caddyfile.go:78:9          httpcaddyfile       U       return httpcaddyfile.App{"
  - "modules/caddyevents/eventsconfig/caddyfile.go:80:10         caddyconfig         U       Value: caddyconfig.JSON(app, nil),"
  - "modules/caddyfs/filesystem.go:1:9           caddyfs             U       package caddyfs"
  - "modules/caddyfs/filesystem.go:10:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyfs/filesystem.go:11:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyfs/filesystem.go:11:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyfs/filesystem.go:12:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyfs/filesystem.go:12:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyfs/filesystem.go:12:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyfs/filesystem.go:13:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyfs/filesystem.go:13:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyfs/filesystem.go:13:47         httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyfs/filesystem.go:18:2          httpcaddyfile       U       httpcaddyfile.RegisterGlobalOption"
  - "modules/caddyfs/filesystem.go:34:26         caddyfile           U       parseFilesystems(d *caddyfile.Dispenser, existingVal"
  - "modules/caddyfs/filesystem.go:41:20         Caddyfile           U       err := x.UnmarshalCaddyfile(d)"
  - "modules/caddyfs/filesystem.go:89:32         Caddyfile           U       moduleEntry) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyfs/filesystem.go:89:45         caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyfs/filesystem.go:101:15        caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddyfs/filesystem.go:105:3         fsys                U       fsys, ok := unm.(fs.FS)"
  - "modules/caddyfs/filesystem.go:107:13        Errf                U       return d.Errf(\"module %s (%T) is not"
  - "modules/caddyfs/filesystem.go:109:21        caddyconfig         U       f.FileSystemRaw = caddyconfig.JSONModuleObject(fsys"
  - "modules/caddyfs/filesystem.go:109:50        fsys                U       caddyconfig.JSONModuleObject(fsys, \"backend\", name, nil"
  - "modules/caddyhttp/app.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/app.go:31:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/app.go:32:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/caddyhttp/app.go:32:43          caddyevents     U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/caddyhttp/app.go:33:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/app.go:33:43          caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/app.go:60:19          hostport        U       // `{http.request.hostport}` | The host and port"
  - "modules/caddyhttp/app.go:114:26         ALPN            U       solving the ACME TLS-ALPN challenges, or whenever"
  - "modules/caddyhttp/app.go:146:10         caddytls        U       tlsApp *caddytls.TLS"
  - "modules/caddyhttp/app.go:163:8          Iface           U       tlsAppIface, err := ctx.App(\"tls"
  - "modules/caddyhttp/app.go:167:21         Iface           U       app.tlsApp = tlsAppIface.(*caddytls.TLS)"
  - "modules/caddyhttp/app.go:167:29         caddytls        U       tlsApp = tlsAppIface.(*caddytls.TLS)"
  - "modules/caddyhttp/app.go:171:11         Iface           U       eventsAppIface, err := ctx.App(\"events"
  - "modules/caddyhttp/app.go:192:25         Iface           U       srv.events = eventsAppIface.(*caddyevents.App)"
  - "modules/caddyhttp/app.go:192:33         caddyevents     U       events = eventsAppIface.(*caddyevents.App)"
  - "modules/caddyhttp/app.go:258:4          vals            U       vals, err := ctx.LoadModule"
  - "modules/caddyhttp/app.go:263:24         vals            U       for i, val := range vals.([]any) {"
  - "modules/caddyhttp/app.go:371:57         stdlib          U       NewStdLogAt(app.logger.Named(\"stdlib\"), zap.DebugLevel)"
  - "modules/caddyhttp/app.go:403:12         alpn            U       for i, alpn := range cp.ALPN {"
  - "modules/caddyhttp/app.go:403:29         ALPN            U       i, alpn := range cp.ALPN {"
  - "modules/caddyhttp/app.go:404:9          alpn            U       if alpn == \"h2\" {"
  - "modules/caddyhttp/app.go:405:10         ALPN            U       cp.ALPN = append(cp.ALPN[:i"
  - "modules/caddyhttp/app.go:405:27         ALPN            U       cp.ALPN = append(cp.ALPN[:i], cp.ALPN[i+1:]."
  - "modules/caddyhttp/app.go:405:40         ALPN            U       append(cp.ALPN[:i], cp.ALPN[i+1:]...)"
  - "modules/caddyhttp/app.go:411:6          nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/app.go:434:5          hostport        U       hostport := listenAddr.JoinHostPort"
  - "modules/caddyhttp/app.go:467:28         hostport        U       zap.String(\"file\", hostport))"
  - "modules/caddyhttp/app.go:475:71         hostport        U       zap.String(\"addr\", hostport))"
  - "modules/caddyhttp/app.go:516:8          nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/app.go:610:55         stdlib          U       close listeners unlike stdlib for several reasons"
  - "modules/caddyhttp/autohttps.go:15:9         caddyhttp           U       package caddyhttp"
  - "modules/caddyhttp/autohttps.go:23:14        caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/autohttps.go:23:26        certmagic           U       github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/autohttps.go:26:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/autohttps.go:27:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/autohttps.go:27:43        caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/autohttps.go:33:15        hostnames           U       // qualifying hostnames are available from the"
  - "modules/caddyhttp/autohttps.go:42:9         Redir               U       DisableRedir bool `json:\"disable"
  - "modules/caddyhttp/autohttps.go:61:33        hostnames           U       certificates for qualifying hostnames. However, if"
  - "modules/caddyhttp/autohttps.go:97:2         redir               U       redirDomains := make(map[string"
  - "modules/caddyhttp/autohttps.go:144:26       caddytls            U       srv.TLSConnPolicies = caddytls.ConnectionPolicies{new"
  - "modules/caddyhttp/autohttps.go:144:58       caddytls            U       ConnectionPolicies{new(caddytls.ConnectionPolicy)}"
  - "modules/caddyhttp/autohttps.go:188:18       hostnames           U       // for all the hostnames we found, filter them"
  - "modules/caddyhttp/autohttps.go:195:8        certmagic           U       if certmagic.SubjectQualifiesForCert"
  - "modules/caddyhttp/autohttps.go:223:26       caddytls            U       srv.TLSConnPolicies = caddytls.ConnectionPolicies{new"
  - "modules/caddyhttp/autohttps.go:223:58       caddytls            U       ConnectionPolicies{new(caddytls.ConnectionPolicy)}"
  - "modules/caddyhttp/autohttps.go:227:27       Redir               U       srv.AutoHTTPS.DisableRedir {"
  - "modules/caddyhttp/autohttps.go:253:5        redir               U       redirDomains[\"\"] = append"
  - "modules/caddyhttp/autohttps.go:253:31       redir               U       redirDomains[\"\"] = append(redirDomains[\"\"], addr)"
  - "modules/caddyhttp/autohttps.go:261:17       redir               U       if _, ok := redirDomains[d]; !ok ||"
  - "modules/caddyhttp/autohttps.go:263:6        redir               U       redirDomains[d] = append(redirDomai"
  - "modules/caddyhttp/autohttps.go:272:16       tailscale           U       var internal, tailscale []string"
  - "modules/caddyhttp/autohttps.go:275:9        Tailscale           U       if !isTailscaleDomain(d) {"
  - "modules/caddyhttp/autohttps.go:278:21       Tailscale           U       // unless it's a Tailscale domain, because we don"
  - "modules/caddyhttp/autohttps.go:308:8        Tailscale           U       if isTailscaleDomain(d) {"
  - "modules/caddyhttp/autohttps.go:309:4        tailscale           U       tailscale = append(tailscale,"
  - "modules/caddyhttp/autohttps.go:309:23       tailscale           U       tailscale = append(tailscale, d)"
  - "modules/caddyhttp/autohttps.go:310:14       certmagic           U       } else if !certmagic.SubjectQualifiesForPublicCert"
  - "modules/caddyhttp/autohttps.go:316:53       tailscale           U       mationPolicies(ctx, internal, tailscale)"
  - "modules/caddyhttp/autohttps.go:353:25       Redir               U       redirRoute := app.makeRedirRoute(addr.StartPort"
  - "modules/caddyhttp/autohttps.go:365:30       hostnames           U       demand TLS means that hostnames may be used which are"
  - "modules/caddyhttp/autohttps.go:369:39       hostnames           U       handle unexpected/new hostnames... however, it's"
  - "modules/caddyhttp/autohttps.go:381:33       Redir               U       append(routes, app.makeRedirRoute(uint(app.httpsPort"
  - "modules/caddyhttp/autohttps.go:446:21       Redir               U       func (app *App) makeRedirRoute(redirToPort uint"
  - "modules/caddyhttp/autohttps.go:485:76       tailscale           U       Context, internalNames, tailscaleNames []string) error"
  - "modules/caddyhttp/autohttps.go:502:20       Tailscale           U       var ts caddytls.Tailscale"
  - "modules/caddyhttp/autohttps.go:506:20       certmagic           U       ap.Managers = []certmagic.Manager{ts}"
  - "modules/caddyhttp/autohttps.go:508:12       reprovision         U       // must reprovision the automation policy"
  - "modules/caddyhttp/autohttps.go:636:44       Caddyfile           U       consider the case of a Caddyfile"
  - "modules/caddyhttp/autohttps.go:645:25       certmagic           U       newPolicy.Issuers = []certmagic.Issuer{internalIssuer"
  - "modules/caddyhttp/autohttps.go:659:19       Tailscale           U       var ts caddytls.Tailscale"
  - "modules/caddyhttp/autohttps.go:693:4        reprovisioned       U       // reprovisioned. acmeIssuer must not"
  - "modules/caddyhttp/autohttps.go:710:28       TLSALPN             U       acmeIssuer.Challenges.TLSALPN == nil {"
  - "modules/caddyhttp/autohttps.go:711:26       TLSALPN             U       acmeIssuer.Challenges.TLSALPN = new(caddytls.TLSALPNChallen"
  - "modules/caddyhttp/autohttps.go:711:49       TLSALPN             U       TLSALPN = new(caddytls.TLSALPNChallengeConfig)"
  - "modules/caddyhttp/autohttps.go:714:28       TLSALPN             U       acmeIssuer.Challenges.TLSALPN.AlternatePort == 0"
  - "modules/caddyhttp/autohttps.go:715:26       TLSALPN             U       acmeIssuer.Challenges.TLSALPN.AlternatePort = app"
  - "modules/caddyhttp/caddyauth/basicauth.go:15:9           caddyauth       U       package caddyauth"
  - "modules/caddyhttp/caddyauth/basicauth.go:22:2           weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/caddyauth/basicauth.go:29:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyauth/basicauth.go:85:8           Iface           U       hasherIface, err := ctx.LoadModule"
  - "modules/caddyhttp/caddyauth/basicauth.go:89:19          Iface           U       hba.Hash = hasherIface.(Comparer)"
  - "modules/caddyhttp/caddyauth/basicauth.go:249:5          nolint          U       //nolint:gosec"
  - "modules/caddyhttp/caddyauth/basicauth.go:249:12         gosec           U       //nolint:gosec"
  - "modules/caddyhttp/caddyauth/basicauth.go:250:10         weakrand        U       rnd := weakrand.Intn(len(c.cache))"
  - "modules/caddyhttp/caddyauth/caddyauth.go:15:9           caddyauth       U       package caddyauth"
  - "modules/caddyhttp/caddyauth/caddyauth.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyauth/caddyauth.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/caddyauth/caddyauth.go:24:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/caddyauth/caddyauth.go:66:18          Iface           U       for modName, modIface := range mods.(map[string"
  - "modules/caddyhttp/caddyauth/caddyauth.go:67:29          Iface           U       Providers[modName] = modIface.(Authenticator)"
  - "modules/caddyhttp/caddyauth/caddyauth.go:72:80          caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/caddyauth/caddyauth.go:89:10          caddyhttp       U       return caddyhttp.Error(http.StatusUnauthorized"
  - "modules/caddyhttp/caddyauth/caddyauth.go:125:4          caddyhttp       U       _ caddyhttp.MiddlewareHandler ="
  - "modules/caddyhttp/caddyauth/caddyfile.go:15:9           caddyauth           U       package caddyauth"
  - "modules/caddyhttp/caddyauth/caddyfile.go:18:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyauth/caddyfile.go:19:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/caddyauth/caddyfile.go:19:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/caddyauth/caddyfile.go:20:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/caddyauth/caddyfile.go:20:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/caddyauth/caddyfile.go:20:47          httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/caddyauth/caddyfile.go:21:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/caddyauth/caddyfile.go:21:43          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/caddyauth/caddyfile.go:25:2           httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/caddyauth/caddyfile.go:25:59          Caddyfile           U       erDirective(\"basicauth\", parseCaddyfile) // deprecated"
  - "modules/caddyhttp/caddyauth/caddyfile.go:26:2           httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/caddyauth/caddyfile.go:26:60          Caddyfile           U       rDirective(\"basic_auth\", parseCaddyfile)"
  - "modules/caddyhttp/caddyauth/caddyfile.go:29:9           Caddyfile           U       // parseCaddyfile sets up the handler"
  - "modules/caddyhttp/caddyauth/caddyfile.go:29:44          Caddyfile           U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/caddyauth/caddyfile.go:37:11          Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/caddyauth/caddyfile.go:37:23          httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/caddyauth/caddyfile.go:37:46          caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/caddyauth/caddyfile.go:42:37          caddyfile           U       Named(\"config.adapter.caddyfile\").Warn(\"the 'basicauth"
  - "modules/caddyhttp/caddyauth/caddyfile.go:68:17          Errf                U       return nil, h.Errf(\"unrecognized hash algorithm"
  - "modules/caddyhttp/caddyauth/caddyfile.go:71:15          caddyconfig         U       ba.HashRaw = caddyconfig.JSONModuleObject(cmp"
  - "modules/caddyhttp/caddyauth/caddyfile.go:94:18          caddyconfig         U       \"http_basic\": caddyconfig.JSON(ba, nil),"
  - "modules/caddyhttp/caddyauth/command.go:15:9         caddyauth       U       package caddyauth"
  - "modules/caddyhttp/caddyauth/command.go:27:2         caddycmd        U       caddycmd \"github.com/caddyserver"
  - "modules/caddyhttp/caddyauth/command.go:27:23        caddyserver     U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "modules/caddyhttp/caddyauth/command.go:29:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyauth/command.go:33:2         caddycmd        U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddyhttp/caddyauth/command.go:33:27        caddycmd        U       caddycmd.RegisterCommand(caddycmd.Command{"
  - "modules/caddyhttp/caddyauth/command.go:50:15        caddycmd        U       cmd.RunE = caddycmd.WrapCommandFuncForCobra"
  - "modules/caddyhttp/caddyauth/command.go:55:25        caddycmd        U       func cmdHashPassword(fs caddycmd.Flags) (int, error)"
  - "modules/caddyhttp/caddyauth/hashes.go:15:9          caddyauth       U       package caddyauth"
  - "modules/caddyhttp/caddyauth/hashes.go:20:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyauth/hashes.go:58:38         antitiming      U       password --plaintext \"antitiming\" --algorithm \"bcrypt"
  - "modules/caddyhttp/caddyauth/hashes.go:59:26         ulqf            U       return []byte(\"$2a$14$X3ulqf/iGxnf1k6oMZ.RZeJUoqI"
  - "modules/caddyhttp/caddyauth/hashes.go:59:32         Gxnf            U       byte(\"$2a$14$X3ulqf/iGxnf1k6oMZ.RZeJUoqI9PX2PM"
  - "modules/caddyhttp/caddyauth/hashes.go:59:69         LGXG            U       RZeJUoqI9PX2PM4rS5lkIKJXduLGXGPrt6\")"
  - "modules/caddyhttp/caddyhttp_test.go:1:9         caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/caddyhttp_test.go:63:21       fbar            U       inputPath: \"/..%2fbar\","
  - "modules/caddyhttp/caddyhttp_test.go:68:25       fbar            U       inputPath: \"/%2e%2e%2fbar\","
  - "modules/caddyhttp/caddyhttp_test.go:80:22       fbar            U       inputPath: \"/foo%2fbar\","
  - "modules/caddyhttp/caddyhttp_test.go:85:24       fbar            U       inputPath: \"/foo%252fbar\","
  - "modules/caddyhttp/caddyhttp_test.go:86:45       fbar            U       FromSlash(\"/a/b/foo%2fbar\"),"
  - "modules/caddyhttp/caddyhttp_test.go:113:25      cwindows        U       inputPath: `/..%5cwindows%5cwin.ini`,"
  - "modules/caddyhttp/caddyhttp_test.go:113:35      cwin            U       `/..%5cwindows%5cwin.ini`,"
  - "modules/caddyhttp/caddyhttp_test.go:119:70      cwindows        U       c..%5c..%5c..%5c..%5cwindows%5cwin.ini`,"
  - "modules/caddyhttp/caddyhttp_test.go:119:80      cwin            U       c..%5c..%5cwindows%5cwin.ini`,"
  - "modules/caddyhttp/caddyhttp.go:15:9         caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/caddyhttp.go:28:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/caddyhttp.go:29:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/caddyhttp.go:29:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/caddyhttp.go:29:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/caddyhttp.go:137:30       unmarshals      U       WeakString is a type that unmarshals any JSON value"
  - "modules/caddyhttp/caddyhttp.go:309:39       Caddyfile       U       sPlaceholderWrapper) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/caddyhttp.go:309:52       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error { return"
  - "modules/caddyhttp/caddyhttp.go:324:4        caddyfile       U       _ caddyfile.Unmarshaler = (*tlsPlaceholde"
  - "modules/caddyhttp/celmatcher_test.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/celmatcher_test.go:26:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/celmatcher_test.go:57:60          localdomain     U       subject} == 'CN=client.localdomain'\","
  - "modules/caddyhttp/celmatcher.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/celmatcher.go:41:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/celmatcher.go:42:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/celmatcher.go:42:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/celmatcher.go:42:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/celmatcher.go:104:18      unmarshals      U       // UnmarshalJSON unmarshals m's expression."
  - "modules/caddyhttp/celmatcher.go:211:13      Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/celmatcher.go:211:34      caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/celmatcher.go:212:36      Caddyfile       U       MatchExpression) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/celmatcher.go:212:49      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/celmatcher.go:231:48      Caddyfile       U       commonly quotes are used in Caddyfile to"
  - "modules/caddyhttp/celmatcher.go:237:30      caddyfile       U       d.GetContextString(caddyfile.MatcherNameCtxKey)"
  - "modules/caddyhttp/celmatcher.go:428:62      setes           U       matcherLibrary from option setes."
  - "modules/caddyhttp/celmatcher.go:597:8       Iface           U       mapStrIface := mapStrRaw.(map[string"
  - "modules/caddyhttp/celmatcher.go:598:55      Iface           U       []string, len(mapStrIface))"
  - "modules/caddyhttp/celmatcher.go:599:26      Iface           U       k, v := range mapStrIface {"
  - "modules/caddyhttp/celmatcher.go:608:8       Vals            U       convVals := make([]string, len"
  - "modules/caddyhttp/celmatcher.go:614:9       Vals            U       convVals[i] = string(strVal)"
  - "modules/caddyhttp/celmatcher.go:616:27      Vals            U       mapStrListStr[k] = convVals"
  - "modules/caddyhttp/celmatcher.go:721:4       caddyfile       U       _ caddyfile.Unmarshaler = (*MatchExpressi"
  - "modules/caddyhttp/encode/brotli/brotli_precompressed.go:1:9         caddybrotli     U       package caddybrotli"
  - "modules/caddyhttp/encode/brotli/brotli_precompressed.go:4:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/brotli/brotli_precompressed.go:5:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/brotli/brotli_precompressed.go:5:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/encode/caddyfile.go:20:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/caddyfile.go:21:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/encode/caddyfile.go:21:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/encode/caddyfile.go:22:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/encode/caddyfile.go:22:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/caddyfile.go:22:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/caddyfile.go:23:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/encode/caddyfile.go:23:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/encode/caddyfile.go:23:47         httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/encode/caddyfile.go:24:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/caddyfile.go:24:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/encode/caddyfile.go:28:2          httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/encode/caddyfile.go:28:56         Caddyfile           U       ndlerDirective(\"encode\", parseCaddyfile)"
  - "modules/caddyhttp/encode/caddyfile.go:31:11         Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/encode/caddyfile.go:31:23         httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/encode/caddyfile.go:31:46         caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/encode/caddyfile.go:33:22         Caddyfile           U       err := enc.UnmarshalCaddyfile(h.Dispenser)"
  - "modules/caddyhttp/encode/caddyfile.go:40:13         Caddyfile           U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/encode/caddyfile.go:40:48         Caddyfile           U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/encode/caddyfile.go:44:8          zstd                U       // zstd"
  - "modules/caddyhttp/encode/caddyfile.go:56:42         caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/encode/caddyfile.go:63:13         Errf                U       return d.Errf(\"finding encoder module"
  - "modules/caddyhttp/encode/caddyfile.go:67:13         Errf                U       return d.Errf(\"module %s is not an"
  - "modules/caddyhttp/encode/caddyfile.go:72:27         caddyconfig         U       EncodingsRaw[arg] = caddyconfig.JSON(encoding, nil)"
  - "modules/caddyhttp/encode/caddyfile.go:76:38         caddyhttp           U       seMatchers := make(map[string]caddyhttp.ResponseMatcher)"
  - "modules/caddyhttp/encode/caddyfile.go:89:11         caddyhttp           U       err := caddyhttp.ParseNamedResponseMatcher"
  - "modules/caddyhttp/encode/caddyfile.go:98:16         caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddyhttp/encode/caddyfile.go:104:14        Errf                U       return d.Errf(\"module %s is not an"
  - "modules/caddyhttp/encode/caddyfile.go:109:29        caddyconfig         U       EncodingsRaw[name] = caddyconfig.JSON(encoding, nil)"
  - "modules/caddyhttp/encode/caddyfile.go:121:7         caddyfile           U       var _ caddyfile.Unmarshaler = (*Encode"
  - "modules/caddyhttp/encode/encode_test.go:25:34       zstd    U       \"deflate, gzip, br, zstd\","
  - "modules/caddyhttp/encode/encode_test.go:26:24       zstd    U       prefer: []string{\"zstd\", \"br\", \"gzip\"},"
  - "modules/caddyhttp/encode/encode_test.go:27:24       zstd    U       expected: []string{\"zstd\", \"br\", \"gzip\", \"deflate"
  - "modules/caddyhttp/encode/encode_test.go:31:24       zstd    U       accept: \"deflate, zstd\","
  - "modules/caddyhttp/encode/encode_test.go:32:24       zstd    U       prefer: []string{\"zstd\", \"br\", \"gzip\"},"
  - "modules/caddyhttp/encode/encode.go:19:65        Httpgzip        U       Copyright (c) 2015 The Httpgzip Authors."
  - "modules/caddyhttp/encode/encode.go:32:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/encode.go:33:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/encode.go:33:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/encode/encode.go:52:59        Mmatcher        U       against this ResponseMmatcher."
  - "modules/caddyhttp/encode/encode.go:54:11        caddyhttp       U       Matcher *caddyhttp.ResponseMatcher `json"
  - "modules/caddyhttp/encode/encode.go:73:18        Iface           U       for modName, modIface := range mods.(map[string"
  - "modules/caddyhttp/encode/encode.go:74:28        Iface           U       enc.addEncoding(modIface.(Encoding))"
  - "modules/caddyhttp/encode/encode.go:86:18        caddyhttp       U       enc.Matcher = &caddyhttp.ResponseMatcher{"
  - "modules/caddyhttp/encode/encode.go:98:19        opentype        U       \"application/opentype*\","
  - "modules/caddyhttp/encode/encode.go:104:26       fontobject      U       \"application/vnd.ms-fontobject*\","
  - "modules/caddyhttp/encode/encode.go:108:21       opentype        U       \"application/x-opentype*\","
  - "modules/caddyhttp/encode/encode.go:152:75       caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/encode/encode.go:211:28       caddyhttp       U       rww, ok := wrappedRW.(*caddyhttp.ResponseWriterWrapper"
  - "modules/caddyhttp/encode/encode.go:277:4        nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/encode/encode.go:277:11       bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/encode/encode.go:328:4        deallocates     U       // deallocates any active resources"
  - "modules/caddyhttp/encode/encode.go:389:3        vals            U       vals := strings.Split(vary"
  - "modules/caddyhttp/encode/encode.go:390:23       vals            U       for _, val := range vals {"
  - "modules/caddyhttp/encode/encode.go:413:2        prefs           U       prefs := []encodingPreference"
  - "modules/caddyhttp/encode/encode.go:452:3        prefs           U       prefs = append(prefs, encodingPrefe"
  - "modules/caddyhttp/encode/encode.go:452:18       prefs           U       prefs = append(prefs, encodingPreference"
  - "modules/caddyhttp/encode/encode.go:460:13       prefs           U       sort.Slice(prefs, func(i, j int) bool"
  - "modules/caddyhttp/encode/encode.go:461:15       prefs           U       if math.Abs(prefs[i].q-prefs[j].q) <"
  - "modules/caddyhttp/encode/gzip/gzip_precompressed.go:1:9         caddygzip       U       package caddygzip"
  - "modules/caddyhttp/encode/gzip/gzip_precompressed.go:4:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/gzip/gzip_precompressed.go:5:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/gzip/gzip_precompressed.go:5:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/encode/gzip/gzip.go:15:9          caddygzip       U       package caddygzip"
  - "modules/caddyhttp/encode/gzip/gzip.go:21:14         klauspost       U       \"github.com/klauspost/compress/gzip\""
  - "modules/caddyhttp/encode/gzip/gzip.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/gzip/gzip.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/encode/gzip/gzip.go:24:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/gzip/gzip.go:24:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/gzip/gzip.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/gzip/gzip.go:25:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/encode/gzip/gzip.go:45:13         Caddyfile       U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/encode/gzip/gzip.go:45:48         Caddyfile       U       up the handler from Caddyfile tokens."
  - "modules/caddyhttp/encode/gzip/gzip.go:46:25         Caddyfile       U       func (g *Gzip) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/encode/gzip/gzip.go:46:38         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/encode/gzip/gzip.go:97:4          caddyfile       U       _ caddyfile.Unmarshaler = (*Gzip"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:1:9         caddyzstd       U       package caddyzstd"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:4:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:5:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:5:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:9:23        Zstd            U       caddy.RegisterModule(ZstdPrecompressed{})"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:12:4        Zstd            U       // ZstdPrecompressed provides"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:12:79       zstandard       U       files precompressed with zstandard encoding."
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:13:6        Zstd            U       type ZstdPrecompressed struct"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:14:2        Zstd            U       Zstd"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:18:7        Zstd            U       func (ZstdPrecompressed) CaddyModule"
  - "modules/caddyhttp/encode/zstd/zstd_precompressed.go:20:28       zstd            U       \"http.precompressed.zstd\","
  - "modules/caddyhttp/encode/zstd/zstd.go:15:9          caddyzstd       U       package caddyzstd"
  - "modules/caddyhttp/encode/zstd/zstd.go:20:14         klauspost       U       \"github.com/klauspost/compress/zstd\""
  - "modules/caddyhttp/encode/zstd/zstd.go:20:33         zstd            U       com/klauspost/compress/zstd\""
  - "modules/caddyhttp/encode/zstd/zstd.go:22:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/encode/zstd/zstd.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/encode/zstd/zstd.go:23:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/zstd/zstd.go:23:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/encode/zstd/zstd.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/encode/zstd/zstd.go:24:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/encode/zstd/zstd.go:28:23         Zstd            U       caddy.RegisterModule(Zstd{})"
  - "modules/caddyhttp/encode/zstd/zstd.go:31:4          Zstd            U       // Zstd can create Zstandard"
  - "modules/caddyhttp/encode/zstd/zstd.go:31:20         Zstandard       U       // Zstd can create Zstandard encoders."
  - "modules/caddyhttp/encode/zstd/zstd.go:32:6          Zstd            U       type Zstd struct {"
  - "modules/caddyhttp/encode/zstd/zstd.go:36:58         zstd            U       constants value from zstd.SpeedFastest to zstd"
  - "modules/caddyhttp/encode/zstd/zstd.go:36:79         zstd            U       zstd.SpeedFastest to zstd.SpeedBestCompression"
  - "modules/caddyhttp/encode/zstd/zstd.go:37:8          zstd            U       level zstd.EncoderLevel"
  - "modules/caddyhttp/encode/zstd/zstd.go:41:7          Zstd            U       func (Zstd) CaddyModule() caddy"
  - "modules/caddyhttp/encode/zstd/zstd.go:43:23         zstd            U       ID: \"http.encoders.zstd\","
  - "modules/caddyhttp/encode/zstd/zstd.go:44:41         Zstd            U       Module { return new(Zstd) },"
  - "modules/caddyhttp/encode/zstd/zstd.go:48:13         Caddyfile       U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/encode/zstd/zstd.go:48:48         Caddyfile       U       up the handler from Caddyfile tokens."
  - "modules/caddyhttp/encode/zstd/zstd.go:49:25         Caddyfile       U       func (z *Zstd) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/encode/zstd/zstd.go:49:38         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/encode/zstd/zstd.go:56:12         Errf            U       return d.Errf(\"unexpected compression"
  - "modules/caddyhttp/encode/zstd/zstd.go:88:29         Zstandard       U       NewEncoder returns a new Zstandard writer."
  - "modules/caddyhttp/encode/zstd/zstd.go:106:4         caddyfile       U       _ caddyfile.Unmarshaler = (*Zstd"
  - "modules/caddyhttp/errors.go:15:9        caddyhttp                       U       package caddyhttp"
  - "modules/caddyhttp/errors.go:20:2        weakrand                        U       weakrand \"math/rand\""
  - "modules/caddyhttp/errors.go:25:14       caddyserver                     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/errors.go:94:18       abcdefghijkmnopqrstuvwxyz       U       dict := []byte(\"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY"
  - "modules/caddyhttp/errors.go:94:43       ABCDEFGHJKLMNPQRTUVWXY          U       abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRTUVWXY23456789\")"
  - "modules/caddyhttp/errors.go:96:18       abcdefghijkmnpqrstuvwxyz        U       dict = []byte(\"abcdefghijkmnpqrstuvwxyz0123456789\")"
  - "modules/caddyhttp/errors.go:100:5       nolint                          U       //nolint:gosec"
  - "modules/caddyhttp/errors.go:100:12      gosec                           U       //nolint:gosec"
  - "modules/caddyhttp/errors.go:101:15      weakrand                        U       b[i] = dict[weakrand.Int63()%int64(len(dict"
  - "modules/caddyhttp/fileserver/browse.go:37:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/browse.go:38:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/browse.go:38:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/browse.go:39:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/browse.go:39:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/templates\""
  - "modules/caddyhttp/fileserver/browse.go:59:7         fsrv            U       func (fsrv *FileServer) serveBrowse"
  - "modules/caddyhttp/fileserver/browse.go:59:122       caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/fileserver/browse.go:60:2         fsrv            U       fsrv.logger.Debug(\"browse"
  - "modules/caddyhttp/fileserver/browse.go:81:31        caddyhttp       U       = r.Context().Value(caddyhttp.OriginalRequestCtxKey"
  - "modules/caddyhttp/fileserver/browse.go:84:4         fsrv            U       fsrv.logger.Debug(\"redirecting"
  - "modules/caddyhttp/fileserver/browse.go:89:14        fsrv            U       dir, err := fsrv.openFile(fileSystem"
  - "modules/caddyhttp/fileserver/browse.go:98:18        fsrv            U       listing, err := fsrv.loadDirectoryContents"
  - "modules/caddyhttp/fileserver/browse.go:101:10       caddyhttp       U       return caddyhttp.Error(http.StatusForbidden"
  - "modules/caddyhttp/fileserver/browse.go:211:20       Caddyfile       U       // The configs in Caddyfile have lower priority"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:72:15         corge       U       {\"/qux/quux/corge/\", []crumb{"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:76:22         corge       U       {Link: \"\", Text: \"corge\"},"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:78:6          Ù…Ø¬Ù„Ø¯        U       {\"/Ù…Ø¬Ù„Ø¯/\", []crumb{"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:80:22         Ù…Ø¬Ù„Ø¯        U       {Link: \"\", Text: \"Ù…Ø¬Ù„Ø¯\"},"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:82:6          Ù…Ø¬Ù„Ø¯        U       {\"/Ù…Ø¬Ù„Ø¯-1/Ù…Ø¬Ù„Ø¯-2\", []crumb{"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:82:13         Ù…Ø¬Ù„Ø¯        U       {\"/Ù…Ø¬Ù„Ø¯-1/Ù…Ø¬Ù„Ø¯-2\", []crumb{"
  - "modules/caddyhttp/fileserver/browsetplcontext_test.go:84:25         Ù…Ø¬Ù„Ø¯        U       Link: \"../\", Text: \"Ù…Ø¬Ù„Ø¯-1\"},"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:32:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/browsetplcontext.go:33:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:33:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/browsetplcontext.go:36:7           fsrv            U       func (fsrv *FileServer) directoryListing"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:37:17          fsrv            U       filesToHide := fsrv.transformHidePaths(repl"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:60:4           fsrv            U       fsrv.logger.Error(\"could"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:72:29          fsrv            U       := entry.IsDir() || fsrv.isSymlinkTargetDir(fileSystem"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:93:12          caddyhttp       U       path := caddyhttp.SanitizedPathJoin(root"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:99:7           fsrv            U       if fsrv.Browse.RevealSymlinks"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:143:37         browsable       U       parent directory is browsable."
  - "modules/caddyhttp/fileserver/browsetplcontext.go:192:2          lpath           U       lpath := l.Path"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:193:5          lpath           U       if lpath[len(lpath)-1] == '/"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:193:15         lpath           U       if lpath[len(lpath)-1] == '/' {"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:194:3          lpath           U       lpath = lpath[:len(lpath)"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:194:11         lpath           U       lpath = lpath[:len(lpath)-1]"
  - "modules/caddyhttp/fileserver/browsetplcontext.go:373:24         namedirfirst    U       sortByNameDirFirst = \"namedirfirst\""
  - "modules/caddyhttp/fileserver/caddyfile.go:21:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/caddyfile.go:22:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/fileserver/caddyfile.go:22:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/fileserver/caddyfile.go:23:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/fileserver/caddyfile.go:23:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/fileserver/caddyfile.go:23:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/fileserver/caddyfile.go:24:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/fileserver/caddyfile.go:24:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/fileserver/caddyfile.go:24:47         httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/fileserver/caddyfile.go:25:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/caddyfile.go:25:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/caddyfile.go:26:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/fileserver/caddyfile.go:27:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/rewrite\""
  - "modules/caddyhttp/fileserver/caddyfile.go:31:2          httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/fileserver/caddyfile.go:31:61         Caddyfile           U       \"file_server\", parseCaddyfile)"
  - "modules/caddyhttp/fileserver/caddyfile.go:32:2          httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"try"
  - "modules/caddyhttp/fileserver/caddyfile.go:35:9          Caddyfile           U       // parseCaddyfile parses the file_server"
  - "modules/caddyhttp/fileserver/caddyfile.go:36:17         Caddyfile           U       // See UnmarshalCaddyfile for the syntax."
  - "modules/caddyhttp/fileserver/caddyfile.go:37:11         Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/fileserver/caddyfile.go:37:23         httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/fileserver/caddyfile.go:37:46         caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/fileserver/caddyfile.go:38:2          fsrv                U       fsrv := new(FileServer)"
  - "modules/caddyhttp/fileserver/caddyfile.go:39:9          fsrv                U       err := fsrv.UnmarshalCaddyfile(h"
  - "modules/caddyhttp/fileserver/caddyfile.go:39:23         Caddyfile           U       err := fsrv.UnmarshalCaddyfile(h.Dispenser)"
  - "modules/caddyhttp/fileserver/caddyfile.go:41:10         fsrv                U       return fsrv, err"
  - "modules/caddyhttp/fileserver/caddyfile.go:43:8          fsrv                U       err = fsrv.FinalizeUnmarshalCaddyfile"
  - "modules/caddyhttp/fileserver/caddyfile.go:47:9          fsrv                U       return fsrv, err"
  - "modules/caddyhttp/fileserver/caddyfile.go:65:32         Caddyfiles          U       finalize setup of hidden Caddyfiles."
  - "modules/caddyhttp/fileserver/caddyfile.go:66:47         caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/fileserver/caddyfile.go:123:15        Errf                U       return d.Errf(\"unknown subdirective"
  - "modules/caddyhttp/fileserver/caddyfile.go:123:29        subdirective        U       return d.Errf(\"unknown subdirective '%s'\", d.Val())"
  - "modules/caddyhttp/fileserver/caddyfile.go:133:15        Errf                U       return d.Errf(\"getting module named"
  - "modules/caddyhttp/fileserver/caddyfile.go:138:15        Errf                U       return d.Errf(\"module %s is not a"
  - "modules/caddyhttp/fileserver/caddyfile.go:143:38        caddyconfig         U       PrecompressedRaw[d.Val()] = caddyconfig.JSON(precompress, nil"
  - "modules/caddyhttp/fileserver/caddyfile.go:152:22        caddyhttp           U       fsrv.StatusCode = caddyhttp.WeakString(d.Val())"
  - "modules/caddyhttp/fileserver/caddyfile.go:181:15        Errf                U       return d.Errf(\"unknown sort option"
  - "modules/caddyhttp/fileserver/caddyfile.go:186:13        Errf                U       return d.Errf(\"unknown subdirective"
  - "modules/caddyhttp/fileserver/caddyfile.go:186:27        subdirective        U       return d.Errf(\"unknown subdirective '%s'\", d.Val())"
  - "modules/caddyhttp/fileserver/caddyfile.go:194:23        httpcaddyfile       U       requires having an httpcaddyfile.Helper to function,"
  - "modules/caddyhttp/fileserver/caddyfile.go:194:73        Caddyfiles          U       function, to setup hidden Caddyfiles."
  - "modules/caddyhttp/fileserver/caddyfile.go:196:42        Caddyfiles          U       Caddyfile (and any imported Caddyfiles)."
  - "modules/caddyhttp/fileserver/caddyfile.go:200:5         Caddyfiles          U       // Caddyfiles function."
  - "modules/caddyhttp/fileserver/caddyfile.go:201:22        Caddyfiles          U       if configFiles := h.Caddyfiles(); len(configFiles)"
  - "modules/caddyhttp/fileserver/caddyfile.go:317:7         caddyfile           U       var _ caddyfile.Unmarshaler = (*FileServer"
  - "modules/caddyhttp/fileserver/command.go:26:14       caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/fileserver/command.go:26:26       certmagic           U       github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/fileserver/command.go:30:2        caddycmd            U       caddycmd \"github.com/caddyserver"
  - "modules/caddyhttp/fileserver/command.go:30:23       caddyserver         U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "modules/caddyhttp/fileserver/command.go:32:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/command.go:33:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/fileserver/command.go:33:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/fileserver/command.go:34:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/command.go:34:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/command.go:35:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/fileserver/command.go:36:2        caddytpl            U       caddytpl \"github.com/caddyserver"
  - "modules/caddyhttp/fileserver/command.go:36:52       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/templates\""
  - "modules/caddyhttp/fileserver/command.go:40:2        caddycmd            U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddyhttp/fileserver/command.go:40:27       caddycmd            U       caddycmd.RegisterCommand(caddycmd.Command{"
  - "modules/caddyhttp/fileserver/command.go:55:13       Zstandard           U       By default, Zstandard and Gzip compression"
  - "modules/caddyhttp/fileserver/command.go:69:57       Zstandard           U       \"\", false, \"Disable Zstandard and Gzip compression"
  - "modules/caddyhttp/fileserver/command.go:70:72       precompression      U       ]string{}, \"Specify precompression file extensions. Compression"
  - "modules/caddyhttp/fileserver/command.go:71:15       caddycmd            U       cmd.RunE = caddycmd.WrapCommandFuncForCobra"
  - "modules/caddyhttp/fileserver/command.go:85:23       caddycmd            U       func cmdFileServer(fs caddycmd.Flags) (int, error)"
  - "modules/caddyhttp/fileserver/command.go:104:3       zstd                U       zstd, err := caddy.GetModule"
  - "modules/caddyhttp/fileserver/command.go:104:47      zstd                U       GetModule(\"http.encoders.zstd\")"
  - "modules/caddyhttp/fileserver/command.go:114:31      caddyconfig         U       handlers = append(handlers, caddyconfig.JSONModuleObject(encode"
  - "modules/caddyhttp/fileserver/command.go:116:6       zstd                U       \"zstd\": caddyconfig.JSON(zstd"
  - "modules/caddyhttp/fileserver/command.go:116:13      caddyconfig         U       \"zstd\": caddyconfig.JSON(zstd.New(), nil"
  - "modules/caddyhttp/fileserver/command.go:116:30      zstd                U       zstd\": caddyconfig.JSON(zstd.New(), nil),"
  - "modules/caddyhttp/fileserver/command.go:117:13      caddyconfig         U       \"gzip\": caddyconfig.JSON(gzip.New(), nil"
  - "modules/caddyhttp/fileserver/command.go:119:22      zstd                U       Prefer: []string{\"zstd\", \"gzip\"},"
  - "modules/caddyhttp/fileserver/command.go:124:14      caddytpl            U       handler := caddytpl.Templates{FileRoot:"
  - "modules/caddyhttp/fileserver/command.go:125:31      caddyconfig         U       handlers = append(handlers, caddyconfig.JSONModuleObject(handler"
  - "modules/caddyhttp/fileserver/command.go:131:28      caddyhttp           U       logic mirrors modules/caddyhttp/fileserver/caddyfile"
  - "modules/caddyhttp/fileserver/command.go:131:49      caddyfile           U       caddyhttp/fileserver/caddyfile.go case \"precompressed"
  - "modules/caddyhttp/fileserver/command.go:159:11      caddyhttp           U       route := caddyhttp.Route{HandlersRaw: handlers"
  - "modules/caddyhttp/fileserver/command.go:179:32      certmagic           U       \":\" + strconv.Itoa(certmagic.HTTPSPort)"
  - "modules/caddyhttp/fileserver/matcher_test.go:26:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/matcher_test.go:27:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal/filesystems"
  - "modules/caddyhttp/fileserver/matcher_test.go:28:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/matcher_test.go:28:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/matcher_test.go:73:20          foodir          U       path: \"/foodir\","
  - "modules/caddyhttp/fileserver/matcher_test.go:74:20          foodir          U       expectedPath: \"/foodir/\","
  - "modules/caddyhttp/fileserver/matcher_test.go:79:20          foodir          U       path: \"/foodir/\","
  - "modules/caddyhttp/fileserver/matcher_test.go:80:20          foodir          U       expectedPath: \"/foodir/\","
  - "modules/caddyhttp/fileserver/matcher_test.go:85:20          foodir          U       path: \"/foodir/foo.txt\","
  - "modules/caddyhttp/fileserver/matcher_test.go:91:15          missingfile     U       path: \"/missingfile.php\","
  - "modules/caddyhttp/fileserver/matcher_test.go:120:4          fsmap           U       fsmap: &filesystems.FilesystemMa"
  - "modules/caddyhttp/fileserver/matcher_test.go:131:11         caddyhttp       U       repl := caddyhttp.NewTestReplacer(req"
  - "modules/caddyhttp/fileserver/matcher_test.go:189:15         missingfile     U       path: \"/missingfile.php\","
  - "modules/caddyhttp/fileserver/matcher_test.go:193:20         notphp          U       path: \"/notphp.php.txt\","
  - "modules/caddyhttp/fileserver/matcher_test.go:194:20         notphp          U       expectedPath: \"/notphp.php.txt\","
  - "modules/caddyhttp/fileserver/matcher_test.go:199:20         notphp          U       path: \"/notphp.php.txt/\","
  - "modules/caddyhttp/fileserver/matcher_test.go:200:20         notphp          U       expectedPath: \"/notphp.php.txt\","
  - "modules/caddyhttp/fileserver/matcher_test.go:205:15         notphp          U       path: \"/notphp.php.txt.suffixed\","
  - "modules/caddyhttp/fileserver/matcher_test.go:229:4          fsmap           U       fsmap: &filesystems.FilesystemM"
  - "modules/caddyhttp/fileserver/matcher_test.go:241:11         caddyhttp       U       repl := caddyhttp.NewTestReplacer(req"
  - "modules/caddyhttp/fileserver/matcher_test.go:270:3          fsmap           U       fsmap: &filesystems.FilesystemM"
  - "modules/caddyhttp/fileserver/matcher_test.go:285:21         caddyhttp       U       expression *caddyhttp.MatchExpression"
  - "modules/caddyhttp/fileserver/matcher_test.go:295:16         caddyhttp       U       expression: &caddyhttp.MatchExpression{"
  - "modules/caddyhttp/fileserver/matcher.go:37:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/matcher.go:38:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/fileserver/matcher.go:38:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/fileserver/matcher.go:38:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/fileserver/matcher.go:39:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/matcher.go:39:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/matcher.go:110:2       fsmap           U       fsmap caddy.FileSystems"
  - "modules/caddyhttp/fileserver/matcher.go:123:13      Caddyfile       U       // UnmarshalCaddyfile sets up the matcher"
  - "modules/caddyhttp/fileserver/matcher.go:123:48      Caddyfile       U       up the matcher from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/fileserver/matcher.go:130:30      Caddyfile       U       MatchFile) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/fileserver/matcher.go:130:43      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/fileserver/matcher.go:157:14      Errf            U       return d.Errf(\"unrecognized subdirective"
  - "modules/caddyhttp/fileserver/matcher.go:157:33      subdirective    U       d.Errf(\"unrecognized subdirective: %s\", d.Val())"
  - "modules/caddyhttp/fileserver/matcher.go:175:40      caddyhttp       U       func(data ref.Val) (caddyhttp.RequestMatcher, error"
  - "modules/caddyhttp/fileserver/matcher.go:176:18      caddyhttp       U       values, err := caddyhttp.CELValueToMapStrList"
  - "modules/caddyhttp/fileserver/matcher.go:210:82      caddyhttp       U       cel.Type{requestType, caddyhttp.CELTypeJSON}, cel.BoolType"
  - "modules/caddyhttp/fileserver/matcher.go:212:62      caddyhttp       U       cel.Type{requestType, caddyhttp.CELTypeJSON}, cel.BoolType"
  - "modules/caddyhttp/fileserver/matcher.go:275:4       fsmap           U       m.fsmap = ctx.Filesystems()"
  - "modules/caddyhttp/fileserver/matcher.go:327:22      fsmap           U       fileSystem, ok := m.fsmap.Get(fsName)"
  - "modules/caddyhttp/fileserver/matcher.go:333:3       fullpath        U       fullpath, relative, splitRemainder"
  - "modules/caddyhttp/fileserver/matcher.go:390:5       fullpath        U       fullpath: result,"
  - "modules/caddyhttp/fileserver/matcher.go:402:70      fullpath        U       filepath.ToSlash(candidate.fullpath))"
  - "modules/caddyhttp/fileserver/matcher.go:422:57      fullpath        U       trictFileExists(fileSystem, c.fullpath); exists {"
  - "modules/caddyhttp/fileserver/matcher.go:436:40      fullpath        U       fs.Stat(fileSystem, c.fullpath)"
  - "modules/caddyhttp/fileserver/matcher.go:562:2       nlen            U       nlen := len(needle)"
  - "modules/caddyhttp/fileserver/matcher.go:563:16      nlen            U       for i := 0; i+nlen < len(haystack); i+"
  - "modules/caddyhttp/fileserver/matcher.go:564:37      nlen            U       EqualFold(haystack[i:i+nlen], needle) {"
  - "modules/caddyhttp/fileserver/matcher.go:681:40      godoc           U       Note that the filepath godoc states that"
  - "modules/caddyhttp/fileserver/staticfiles.go:23:2        weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/fileserver/staticfiles.go:35:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/fileserver/staticfiles.go:36:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/staticfiles.go:36:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/fileserver/staticfiles.go:37:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/fileserver/staticfiles.go:37:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/fileserver/staticfiles.go:125:51      explictness     U       maximum clarity and explictness, use complete,"
  - "modules/caddyhttp/fileserver/staticfiles.go:149:13      caddyhttp       U       StatusCode caddyhttp.WeakString `json:\"status"
  - "modules/caddyhttp/fileserver/staticfiles.go:158:33      namedirfirst    U       sort_by: name(default), namedirfirst, size, time"
  - "modules/caddyhttp/fileserver/staticfiles.go:181:2       fsmap           U       fsmap caddy.FileSystems"
  - "modules/caddyhttp/fileserver/staticfiles.go:195:7       fsrv            U       func (fsrv *FileServer) Provision"
  - "modules/caddyhttp/fileserver/staticfiles.go:196:2       fsrv            U       fsrv.logger = ctx.Logger"
  - "modules/caddyhttp/fileserver/staticfiles.go:198:2       fsrv            U       fsrv.fsmap = ctx.Filesystems"
  - "modules/caddyhttp/fileserver/staticfiles.go:198:7       fsmap           U       fsrv.fsmap = ctx.Filesystems()"
  - "modules/caddyhttp/fileserver/staticfiles.go:200:5       fsrv            U       if fsrv.FileSystem == \"\" {"
  - "modules/caddyhttp/fileserver/staticfiles.go:201:3       fsrv            U       fsrv.FileSystem = \"{http"
  - "modules/caddyhttp/fileserver/staticfiles.go:227:18      Iface           U       for modName, modIface := range mods.(map[string"
  - "modules/caddyhttp/fileserver/staticfiles.go:228:15      Iface           U       p, ok := modIface.(encode.Precompressed"
  - "modules/caddyhttp/fileserver/staticfiles.go:268:80      caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/fileserver/staticfiles.go:274:11      caddyhttp       U       return caddyhttp.Error(http.StatusBadRequest"
  - "modules/caddyhttp/fileserver/staticfiles.go:289:25      fsmap           U       fileSystem, ok := fsrv.fsmap.Get(fsName)"
  - "modules/caddyhttp/fileserver/staticfiles.go:294:64      stdlib          U       fs.ValidPath() in the stdlib"
  - "modules/caddyhttp/fileserver/staticfiles.go:503:3       mtyp            U       mtyp := mime.TypeByExtension"
  - "modules/caddyhttp/fileserver/staticfiles.go:504:6       mtyp            U       if mtyp == \"\" {"
  - "modules/caddyhttp/fileserver/staticfiles.go:508:35      mtyp            U       Set(\"Content-Type\", mtyp)"
  - "modules/caddyhttp/fileserver/staticfiles.go:567:5       nolint          U       //nolint:gosec"
  - "modules/caddyhttp/fileserver/staticfiles.go:567:12      gosec           U       //nolint:gosec"
  - "modules/caddyhttp/fileserver/staticfiles.go:568:14      weakrand        U       backoff := weakrand.Intn(maxBackoff-minBackoff"
  - "modules/caddyhttp/fileserver/staticfiles.go:579:74      Caza            U       written by Nathaniel Caza."
  - "modules/caddyhttp/fileserver/staticfiles.go:752:40      stdlib          U       intercepts calls by the stdlib to WriteHeader"
  - "modules/caddyhttp/headers/caddyfile.go:23:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/headers/caddyfile.go:23:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/headers/caddyfile.go:23:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/headers/caddyfile.go:24:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/headers/caddyfile.go:24:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/headers/caddyfile.go:28:2         httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"header"
  - "modules/caddyhttp/headers/caddyfile.go:28:49        Caddyfile           U       isterDirective(\"header\", parseCaddyfile)"
  - "modules/caddyhttp/headers/caddyfile.go:29:2         httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"request"
  - "modules/caddyhttp/headers/caddyfile.go:29:63        Caddyfile           U       header\", parseReqHdrCaddyfile)"
  - "modules/caddyhttp/headers/caddyfile.go:32:9         Caddyfile           U       // parseCaddyfile sets up the handler"
  - "modules/caddyhttp/headers/caddyfile.go:33:4         Caddyfile           U       // Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/headers/caddyfile.go:46:12        subdirective        U       // 'defer' subdirective is used. + appends a"
  - "modules/caddyhttp/headers/caddyfile.go:49:11        Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/headers/caddyfile.go:49:23        httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) ([]httpcaddyfile"
  - "modules/caddyhttp/headers/caddyfile.go:49:48        httpcaddyfile       U       httpcaddyfile.Helper) ([]httpcaddyfile.ConfigValue, error)"
  - "modules/caddyhttp/headers/caddyfile.go:236:29       caddyhttp           U       respHeaderOps.Require = &caddyhttp.ResponseMatcher{"
  - "modules/caddyhttp/headers/headers_test.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/headers/headers_test.go:26:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/headers/headers_test.go:26:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/headers/headers_test.go:93:32         lalala          U       Header-Suffix\": []string{\"lalala\"},"
  - "modules/caddyhttp/headers/headers_test.go:96:32         foofoofoo       U       Me\": []string{\"foofoofoo\"},"
  - "modules/caddyhttp/headers/headers_test.go:99:26         foofoofoo       U       Keep-Me\": []string{\"foofoofoo\"},"
  - "modules/caddyhttp/headers/headers_test.go:129:16        caddyhttp       U       Require: &caddyhttp.ResponseMatcher{"
  - "modules/caddyhttp/headers/headers_test.go:149:16        caddyhttp       U       Require: &caddyhttp.ResponseMatcher{"
  - "modules/caddyhttp/headers/headers_test.go:167:16        caddyhttp       U       Require: &caddyhttp.ResponseMatcher{"
  - "modules/caddyhttp/headers/headers_test.go:216:11        hdrs            U       for k, hdrs := range tc.respHeader"
  - "modules/caddyhttp/headers/headers_test.go:217:23        hdrs            U       for _, v := range hdrs {"
  - "modules/caddyhttp/headers/headers.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/headers/headers.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/headers/headers.go:24:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/headers/headers.go:90:73          caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/headers/headers.go:100:29         caddyhttp       U       ResponseWriterWrapper: &caddyhttp.ResponseWriterWrapper"
  - "modules/caddyhttp/headers/headers.go:184:11         caddyhttp       U       Require *caddyhttp.ResponseMatcher `json"
  - "modules/caddyhttp/headers/headers.go:209:17         vals            U       for fieldName, vals := range ops.Add {"
  - "modules/caddyhttp/headers/headers.go:211:21         vals            U       for _, v := range vals {"
  - "modules/caddyhttp/headers/headers.go:217:17         vals            U       for fieldName, vals := range ops.Set {"
  - "modules/caddyhttp/headers/headers.go:219:10         Vals            U       var newVals []string"
  - "modules/caddyhttp/headers/headers.go:220:18         vals            U       for i := range vals {"
  - "modules/caddyhttp/headers/headers.go:223:7          Vals            U       newVals = append(newVals, repl"
  - "modules/caddyhttp/headers/headers.go:223:24         Vals            U       newVals = append(newVals, repl.ReplaceKnown(vals"
  - "modules/caddyhttp/headers/headers.go:223:48         vals            U       newVals, repl.ReplaceKnown(vals[i], \"\"))"
  - "modules/caddyhttp/headers/headers.go:225:38         Vals            U       fieldName, strings.Join(newVals, \",\"))"
  - "modules/caddyhttp/headers/headers.go:340:3          caddyhttp       U       *caddyhttp.ResponseWriterWrapper"
  - "modules/caddyhttp/http2listener.go:1:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/http2listener.go:6:2          weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/http2listener.go:18:60        stdlib          U       logic is copied from stdlib http.Server, it's an"
  - "modules/caddyhttp/http2listener.go:73:5         nolint          U       //nolint:gosec"
  - "modules/caddyhttp/http2listener.go:73:12        gosec           U       //nolint:gosec"
  - "modules/caddyhttp/http2listener.go:74:48        weakrand        U       lIntervalBase + time.Duration(weakrand.Intn(int(pollIntervalBase"
  - "modules/caddyhttp/httpredirectlistener.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/httpredirectlistener.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/httpredirectlistener.go:26:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/httpredirectlistener.go:26:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/httpredirectlistener.go:26:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/httpredirectlistener.go:59:48         Caddyfile       U       rectListenerWrapper) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/httpredirectlistener.go:59:61         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/httpredirectlistener.go:165:44        OPTIO           U       \"POST \", \"PUT /\", \"OPTIO\":"
  - "modules/caddyhttp/httpredirectlistener.go:173:4         caddyfile       U       _ caddyfile.Unmarshaler = (*HTTPRedirectL"
  - "modules/caddyhttp/intercept/intercept.go:27:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/intercept/intercept.go:28:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/intercept/intercept.go:28:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/intercept/intercept.go:28:47          caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/intercept/intercept.go:29:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/intercept/intercept.go:29:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/intercept/intercept.go:29:47          httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/intercept/intercept.go:30:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/intercept/intercept.go:30:43          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/intercept/intercept.go:35:2           httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/intercept/intercept.go:35:59          Caddyfile           U       erDirective(\"intercept\", parseCaddyfile)"
  - "modules/caddyhttp/intercept/intercept.go:40:28          Franken             U       when using modules like FrankenPHP or Caddy Snake."
  - "modules/caddyhttp/intercept/intercept.go:54:19          caddyhttp           U       HandleResponse []caddyhttp.ResponseHandler `json"
  - "modules/caddyhttp/intercept/intercept.go:56:48          Caddyfile           U       response matchers from the Caddyfile while adapting"
  - "modules/caddyhttp/intercept/intercept.go:57:30          caddyhttp           U       responseMatchers map[string]caddyhttp.ResponseMatcher"
  - "modules/caddyhttp/intercept/intercept.go:59:31          Caddyfile           U       the handle_response Caddyfile tokens while adapting"
  - "modules/caddyhttp/intercept/intercept.go:60:28          caddyfile           U       handleResponseSegments []*caddyfile.Dispenser"
  - "modules/caddyhttp/intercept/intercept.go:102:2          caddyhttp           U       caddyhttp.ResponseRecorder"
  - "modules/caddyhttp/intercept/intercept.go:104:15         caddyhttp           U       handler caddyhttp.ResponseHandler"
  - "modules/caddyhttp/intercept/intercept.go:174:13         Caddyfile           U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/intercept/intercept.go:174:48         Caddyfile           U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/intercept/intercept.go:192:43         caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/intercept/intercept.go:193:46         subdirectives       U       matchers defined as subdirectives"
  - "modules/caddyhttp/intercept/intercept.go:199:13         subdirective        U       // if the subdirective has an \"@\" prefix then"
  - "modules/caddyhttp/intercept/intercept.go:212:25         httpcaddyfile       U       / since we need the httpcaddyfile.Helper to parse subroutes"
  - "modules/caddyhttp/intercept/intercept.go:219:14         Errf                U       return d.Errf(\"must have one or two"
  - "modules/caddyhttp/intercept/intercept.go:226:15         Errf                U       return d.Errf(\"must use a named response"
  - "modules/caddyhttp/intercept/intercept.go:230:15         Errf                U       return d.Errf(\"no named response matcher"
  - "modules/caddyhttp/intercept/intercept.go:240:14         Errf                U       return d.Errf(\"cannot define routes"
  - "modules/caddyhttp/intercept/intercept.go:249:13         Errf                U       return d.Errf(\"unrecognized subdirective"
  - "modules/caddyhttp/intercept/intercept.go:249:32         subdirective        U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/caddyhttp/intercept/intercept.go:257:23         httpcaddyfile       U       requires having an httpcaddyfile.Helper to function,"
  - "modules/caddyhttp/intercept/intercept.go:260:55         httpcaddyfile       U       lizeUnmarshalCaddyfile(helper httpcaddyfile.Helper) error {"
  - "modules/caddyhttp/intercept/intercept.go:347:4          caddyfile           U       _ caddyfile.Unmarshaler ="
  - "modules/caddyhttp/invoke.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/invoke.go:21:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/ip_matchers.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/ip_matchers.go:30:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/ip_matchers.go:31:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/ip_matchers.go:31:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/ip_matchers.go:31:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/ip_matchers.go:32:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "modules/caddyhttp/ip_matchers.go:74:13          Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/ip_matchers.go:74:34          caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/ip_matchers.go:75:34          Caddyfile       U       MatchRemoteIP) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/ip_matchers.go:75:47          caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/ip_matchers.go:171:13         Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/ip_matchers.go:171:34         caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/ip_matchers.go:172:34         Caddyfile       U       MatchClientIP) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/ip_matchers.go:172:47         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/ip_range.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/ip_range.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/ip_range.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/ip_range.go:24:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/ip_range.go:24:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/ip_range.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "modules/caddyhttp/ip_range.go:89:13         Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/ip_range.go:89:34         caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/ip_range.go:90:34         Caddyfile       U       StaticIPRange) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/ip_range.go:90:47         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/ip_range.go:128:4         caddyfile       U       _ caddyfile.Unmarshaler = (*StaticIPRange"
  - "modules/caddyhttp/ip_range.go:134:44        mholt           U       is used at least by mholt/caddy-l4."
  - "modules/caddyhttp/logging.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/logging.go:27:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/logging.go:36:5           hostnames       U       // hostnames that are not in the"
  - "modules/caddyhttp/logging.go:39:30          hostnames       U       LoggerNames maps request hostnames to one or more custom"
  - "modules/caddyhttp/logging.go:47:18          hostnames       U       // Keys must be hostnames (without ports), and"
  - "modules/caddyhttp/logging/caddyfile.go:18:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/logging/caddyfile.go:18:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/logging/caddyfile.go:18:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/logging/caddyfile.go:19:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/logging/caddyfile.go:19:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/logging/caddyfile.go:19:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/logging/caddyfile.go:20:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/logging/caddyfile.go:20:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/logging/caddyfile.go:24:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/logging/caddyfile.go:24:60        Caddyfile           U       rDirective(\"log_append\", parseCaddyfile)"
  - "modules/caddyhttp/logging/caddyfile.go:27:9         Caddyfile           U       // parseCaddyfile sets up the log_append"
  - "modules/caddyhttp/logging/caddyfile.go:27:55        Caddyfile           U       append handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/logging/caddyfile.go:30:11        Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/logging/caddyfile.go:30:23        httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/logging/caddyfile.go:30:46        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/logging/caddyfile.go:32:26        Caddyfile           U       := handler.UnmarshalCaddyfile(h.Dispenser)"
  - "modules/caddyhttp/logging/caddyfile.go:36:34        caddyfile           U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/logging/caddyfile.go:37:43        caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/logging/caddyfile.go:52:4         caddyfile           U       _ caddyfile.Unmarshaler = (*LogAppend"
  - "modules/caddyhttp/logging/logadd.go:23:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/logging/logadd.go:24:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/logging/logadd.go:24:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/logging/logadd.go:55:75       caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/logging/logadd.go:65:20       caddyhttp       U       vars := ctx.Value(caddyhttp.VarsCtxKey).(map[string"
  - "modules/caddyhttp/logging/logadd.go:67:21       caddyhttp       U       extra := ctx.Value(caddyhttp.ExtraLogFieldsCtxKey"
  - "modules/caddyhttp/logging/logadd.go:67:55       caddyhttp       U       ExtraLogFieldsCtxKey).(*caddyhttp.ExtraLogFields)"
  - "modules/caddyhttp/map/caddyfile.go:15:9         maphandler          U       package maphandler"
  - "modules/caddyhttp/map/caddyfile.go:20:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/map/caddyfile.go:20:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/map/caddyfile.go:20:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/map/caddyfile.go:21:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/map/caddyfile.go:21:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/map/caddyfile.go:25:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/map/caddyfile.go:25:53        Caddyfile           U       rHandlerDirective(\"map\", parseCaddyfile)"
  - "modules/caddyhttp/map/caddyfile.go:28:9         Caddyfile           U       // parseCaddyfile sets up the map handler"
  - "modules/caddyhttp/map/caddyfile.go:28:48        Caddyfile           U       the map handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/map/caddyfile.go:38:8         Caddyfile           U       // The Caddyfile adapter treats outputs"
  - "modules/caddyhttp/map/caddyfile.go:44:11        Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/map/caddyfile.go:44:23        httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/map/caddyfile.go:44:46        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/map/caddyfile.go:61:19        httpcaddyfile       U       if shorthand := httpcaddyfile.WasReplacedPlaceholderShortha"
  - "modules/caddyhttp/map/caddyfile.go:62:18        Errf                U       return nil, h.Errf(\"destination %s conflicts"
  - "modules/caddyhttp/map/map_test.go:1:9           maphandler      U       package maphandler"
  - "modules/caddyhttp/map/map_test.go:10:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/map/map_test.go:11:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/map/map_test.go:11:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/map/map_test.go:53:16         Cxyz            U       reqURI: \"/ABCxyzDEF\","
  - "modules/caddyhttp/map/map_test.go:93:24         testvar         U       Outputs: []any{\"{testvar}\"},"
  - "modules/caddyhttp/map/map_test.go:117:30        testvar         U       Defaults: []string{\"{testvar}\"},"
  - "modules/caddyhttp/map/map_test.go:132:11        caddyhttp       U       repl := caddyhttp.NewTestReplacer(req"
  - "modules/caddyhttp/map/map_test.go:133:13        testvar         U       repl.Set(\"testvar\", \"testing\")"
  - "modules/caddyhttp/map/map_test.go:138:11        caddyhttp       U       noop := caddyhttp.HandlerFunc(func(_ http"
  - "modules/caddyhttp/map/map.go:15:9           maphandler      U       package maphandler"
  - "modules/caddyhttp/map/map.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/map/map.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/map/map.go:24:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/map/map.go:123:73         caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/map/map.go:205:4          caddyhttp       U       _ caddyhttp.MiddlewareHandler ="
  - "modules/caddyhttp/marshalers.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/marshalers.go:26:4        Loggable        U       // LoggableHTTPRequest makes an"
  - "modules/caddyhttp/marshalers.go:26:46       loggable        U       makes an HTTP request loggable with zap.Object()."
  - "modules/caddyhttp/marshalers.go:27:6        Loggable        U       type LoggableHTTPRequest struct {"
  - "modules/caddyhttp/marshalers.go:34:9        Loggable        U       func (r LoggableHTTPRequest) MarshalLogObject"
  - "modules/caddyhttp/marshalers.go:50:27       Loggable        U       AddObject(\"headers\", LoggableHTTPHeader{"
  - "modules/caddyhttp/marshalers.go:55:24       Loggable        U       enc.AddObject(\"tls\", LoggableTLSConnState(*r.TLS)"
  - "modules/caddyhttp/marshalers.go:60:44       loggable        U       makes an HTTP header loggable with zap.Object()."
  - "modules/caddyhttp/marshalers.go:86:49       marshalable     U       makes a slice of strings marshalable for logging."
  - "modules/caddyhttp/marshalers.go:100:54      loggable        U       TLS connection state loggable with zap.Object()."
  - "modules/caddyhttp/matchers_test.go:15:9         caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/matchers_test.go:27:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/matchers_test.go:82:23        Ã©xÃ mplÃª         U       match: MatchHost{\"Ã©xÃ mplÃª.com\"},"
  - "modules/caddyhttp/matchers_test.go:83:17        xmpl            U       input: \"xn--xmpl-0na6cm.com\","
  - "modules/caddyhttp/matchers_test.go:263:14       FOOOO           U       input: \"/FOOOO\","
  - "modules/caddyhttp/matchers_test.go:298:20       Fbar            U       input: \"/foo/%2Fbar\","
  - "modules/caddyhttp/matchers_test.go:303:20       Fbar            U       input: \"/foo/%2Fbar\","
  - "modules/caddyhttp/matchers_test.go:328:21       Fbar            U       input: \"/foo//%2Fbar\","
  - "modules/caddyhttp/matchers_test.go:398:29       fbar            U       match: MatchPath{\"/foo%2fbar/baz\"},"
  - "modules/caddyhttp/matchers_test.go:399:19       Fbar            U       input: \"/foo%2Fbar/baz\","
  - "modules/caddyhttp/matchers_test.go:403:29       fbar            U       match: MatchPath{\"/foo%2fbar/baz\"},"
  - "modules/caddyhttp/matchers_test.go:409:19       fbar            U       input: \"/foo%2fbar/baz\","
  - "modules/caddyhttp/matchers_test.go:519:60       myparam         U       Pattern: \"^/foo/(?P<myparam>.*)/baz$\", Name: \"name"
  - "modules/caddyhttp/matchers_test.go:522:40       myparam         U       string]string{\"name.myparam\": \"bar\"},"
  - "modules/caddyhttp/matchers_test.go:599:25       Alakazam        U       input: http.Header{\"Alakazam\": []string{\"kapow\"}"
  - "modules/caddyhttp/matchers_test.go:599:46       kapow           U       Alakazam\": []string{\"kapow\"}},"
  - "modules/caddyhttp/matchers_test.go:604:43       kapow           U       Header{\"Field\": []string{\"kapow\"}},"
  - "modules/caddyhttp/matchers_test.go:609:43       kapow           U       Header{\"Field\": []string{\"kapow\", \"foo\"}},"
  - "modules/caddyhttp/matchers_test.go:624:71       kapow           U       \"Field2\": []string{\"kapow\"}},"
  - "modules/caddyhttp/matchers_test.go:661:13       caddyserver     U       host: \"caddyserver.com\","
  - "modules/caddyhttp/matchers_test.go:728:35       wildcarded      U       non match against a wildcarded\","
  - "modules/caddyhttp/matchers_test.go:742:17       someparam       U       input: \"/?someparam\","
  - "modules/caddyhttp/matchers_test.go:772:17       somekey         U       input: \"/?somekey=1\","
  - "modules/caddyhttp/matchers_test.go:819:30       somekey         U       Set(\"http.vars.key\", \"somekey\")"
  - "modules/caddyhttp/matchers_test.go:855:43       barfoo          U       Header{\"Field\": []string{\"barfoo\", \"foobar\"}},"
  - "modules/caddyhttp/matchers.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/matchers.go:39:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/matchers.go:40:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/matchers.go:40:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/matchers.go:40:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/matchers.go:89:41         Fbar            U       a matcher of `/foo%2Fbar` will match a request"
  - "modules/caddyhttp/matchers.go:90:25         Fbar            U       of precisely `/foo%2Fbar`, but not `/foo/bar"
  - "modules/caddyhttp/matchers.go:139:53        escapings       U       including those with bad escapings or illegal characters"
  - "modules/caddyhttp/matchers.go:205:47        unmarshals      U       because of how this type unmarshals JSON in a"
  - "modules/caddyhttp/matchers.go:244:13        Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/matchers.go:244:34        caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/matchers.go:245:30        Caddyfile       U       MatchHost) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/matchers.go:245:43        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/matchers.go:622:22        rawpath         U       // we can now treat rawpath globs (%*) as regular"
  - "modules/caddyhttp/matchers.go:658:13        Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/matchers.go:658:34        caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/matchers.go:659:30        Caddyfile       U       MatchPath) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/matchers.go:659:43        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/matchers.go:753:13        Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/matchers.go:818:14        Errf            U       return d.Errf(\"malformed query matcher"
  - "modules/caddyhttp/matchers.go:846:22        WHATWG          U       // Despite the URL WHATWG spec mandating the use"
  - "modules/caddyhttp/matchers.go:847:56        Filippo         U       lementation is different, and Filippo Valsorda rightly wrote"
  - "modules/caddyhttp/matchers.go:847:64        Valsorda        U       different, and Filippo Valsorda rightly wrote:"
  - "modules/caddyhttp/matchers.go:858:13        vals            U       for param, vals := range m {"
  - "modules/caddyhttp/matchers.go:864:21        vals            U       for _, v := range vals {"
  - "modules/caddyhttp/matchers.go:913:13        Errf            U       return d.Errf(\"malformed header matcher"
  - "modules/caddyhttp/matchers.go:918:14        Errf            U       return d.Errf(\"malformed header matcher"
  - "modules/caddyhttp/matchers.go:926:14        Errf            U       return d.Errf(\"malformed header matcher"
  - "modules/caddyhttp/matchers.go:930:14        Errf            U       return d.Errf(\"malformed header matcher"
  - "modules/caddyhttp/matchers.go:974:18        Vals            U       // getHeaderFieldVals returns the field values"
  - "modules/caddyhttp/matchers.go:977:20        Vals            U       func getHeaderFieldVals(input http.Header, fieldName"
  - "modules/caddyhttp/matchers.go:989:25        Vals            U       for field, allowedFieldVals := range against {"
  - "modules/caddyhttp/matchers.go:990:14        Vals            U       actualFieldVals := getHeaderFieldVals"
  - "modules/caddyhttp/matchers.go:990:36        Vals            U       ualFieldVals := getHeaderFieldVals(input, field, host)"
  - "modules/caddyhttp/matchers.go:1344:13       Iface           U       for _, modIface := range modMap {"
  - "modules/caddyhttp/matchers.go:1345:23       Iface           U       ms = append(ms, modIface.(RequestMatcher))"
  - "modules/caddyhttp/matchers.go:1364:22       embedable       U       / MatchRegexp is an embedable type for matching"
  - "modules/caddyhttp/metrics_test.go:1:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/metrics_test.go:12:50         testutil        U       client_golang/prometheus/testutil\""
  - "modules/caddyhttp/metrics_test.go:33:16         testutil        U       if actual := testutil.ToFloat64(httpMetrics"
  - "modules/caddyhttp/metrics_test.go:54:15         testutil        U       if actual := testutil.ToFloat64(httpMetrics"
  - "modules/caddyhttp/metrics_test.go:186:12        testutil        U       if err := testutil.GatherAndCompare(prometheus"
  - "modules/caddyhttp/metrics.go:1:9            caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/metrics.go:11:50          promauto        U       client_golang/prometheus/promauto\""
  - "modules/caddyhttp/metrics.go:13:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal/metrics"
  - "modules/caddyhttp/metrics.go:37:32          promauto        U       httpMetrics.requestInFlight = promauto.NewGaugeVec(prometheus"
  - "modules/caddyhttp/metrics.go:43:30          promauto        U       httpMetrics.requestErrors = promauto.NewCounterVec(prometheus"
  - "modules/caddyhttp/metrics.go:49:29          promauto        U       httpMetrics.requestCount = promauto.NewCounterVec(prometheus"
  - "modules/caddyhttp/metrics.go:61:32          promauto        U       httpMetrics.requestDuration = promauto.NewHistogramVec(prometheus"
  - "modules/caddyhttp/metrics.go:130:26         behaviour       U       Effectively the same behaviour as promhttp.InstrumentHandler"
  - "modules/caddyhttp/metrics.go:130:39         promhttp        U       the same behaviour as promhttp.InstrumentHandlerTimeToWriteH"
  - "modules/caddyhttp/metrics.go:133:3          ttfb            U       ttfb := time.Since(start"
  - "modules/caddyhttp/metrics.go:134:59         ttfb            U       statusLabels).Observe(ttfb)"
  - "modules/caddyhttp/metrics.go:137:2          wrec            U       wrec := NewResponseRecorder"
  - "modules/caddyhttp/metrics.go:138:24         wrec            U       err := h.mh.ServeHTTP(wrec, r, next)"
  - "modules/caddyhttp/metrics.go:153:63         wrec            U       statusLabels).Observe(float64(wrec.Size()))"
  - "modules/caddyhttp/metrics.go:167:17         wrec            U       observeRequest(wrec.Status())"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:15:9         proxyprotocol       U       package proxyprotocol"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:22:2         goproxy             U       goproxy \"github.com/pires/go"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:22:22        pires               U       goproxy \"github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:22:31        proxyproto          U       github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:24:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:43:5         Denby               U       // Denby is an optional list"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:53:9         goproxy             U       policy goproxy.ConnPolicyFunc"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:59:3         ipnet               U       ipnet, err := netip.ParsePrefix"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:63:31        ipnet               U       allow = append(pp.allow, ipnet)"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:66:3         ipnet               U       ipnet, err := netip.ParsePrefix"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:70:29        ipnet               U       deny = append(pp.deny, ipnet)"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:73:27        goproxy             U       policy = func(options goproxy.ConnPolicyOptions)"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:73:55        goproxy             U       ConnPolicyOptions) (goproxy.Policy, error) {"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:76:11        goproxy             U       return goproxy.USE, nil"
  - "modules/caddyhttp/proxyprotocol/listenerwrapper.go:88:10        ipnet               U       for _, ipnet := range pp.deny {"
  - "modules/caddyhttp/proxyprotocol/module.go:15:9          proxyprotocol       U       package proxyprotocol"
  - "modules/caddyhttp/proxyprotocol/module.go:18:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/proxyprotocol/module.go:19:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/proxyprotocol/module.go:19:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/proxyprotocol/module.go:19:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/proxyprotocol/module.go:33:13         Caddyfile           U       // UnmarshalCaddyfile sets up the listener"
  - "modules/caddyhttp/proxyprotocol/module.go:33:44         Listenerwrapper     U       sets up the listener Listenerwrapper from Caddyfile tokens"
  - "modules/caddyhttp/proxyprotocol/module.go:33:65         Caddyfile           U       Listenerwrapper from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/proxyprotocol/module.go:41:36         Caddyfile           U       ListenerWrapper) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/proxyprotocol/module.go:41:49         caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/proxyprotocol/module.go:57:14         Errf                U       return d.Errf(\"parsing proxy_protocol"
  - "modules/caddyhttp/proxyprotocol/module.go:86:4          caddyfile           U       _ caddyfile.Unmarshaler = (*ListenerWrapp"
  - "modules/caddyhttp/proxyprotocol/policy.go:1:9           proxyprotocol       U       package proxyprotocol"
  - "modules/caddyhttp/proxyprotocol/policy.go:8:2           goproxy             U       goproxy \"github.com/pires/go"
  - "modules/caddyhttp/proxyprotocol/policy.go:8:22          pires               U       goproxy \"github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/proxyprotocol/policy.go:8:31          proxyproto          U       github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/proxyprotocol/policy.go:35:40         goproxy             U       yToGoProxyPolicy = map[Policy]goproxy.Policy{"
  - "modules/caddyhttp/proxyprotocol/policy.go:36:17         goproxy             U       PolicyUSE: goproxy.USE,"
  - "modules/caddyhttp/proxyprotocol/policy.go:37:17         goproxy             U       PolicyIGNORE: goproxy.IGNORE,"
  - "modules/caddyhttp/proxyprotocol/policy.go:38:17         goproxy             U       PolicyREJECT: goproxy.REJECT,"
  - "modules/caddyhttp/proxyprotocol/policy.go:64:38         unmarshaller        U       implements the text unmarshaller method."
  - "modules/caddyhttp/push/caddyfile.go:18:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/push/caddyfile.go:18:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/push/caddyfile.go:18:47       httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/push/caddyfile.go:19:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/push/caddyfile.go:19:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/push/caddyfile.go:20:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/push/caddyfile.go:20:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/push/caddyfile.go:24:2        httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/push/caddyfile.go:24:54       Caddyfile           U       HandlerDirective(\"push\", parseCaddyfile)"
  - "modules/caddyhttp/push/caddyfile.go:27:9        Caddyfile           U       // parseCaddyfile sets up the push handler"
  - "modules/caddyhttp/push/caddyfile.go:41:4        subdirective        U       // subdirective can be used to customize"
  - "modules/caddyhttp/push/caddyfile.go:46:11       Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/push/caddyfile.go:46:23       httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/push/caddyfile.go:46:46       caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/push/caddyfile.go:76:20       Caddyfile           U       err = headers.CaddyfileHeaderOp(&handler.Headers"
  - "modules/caddyhttp/push/caddyfile.go:78:20       Caddyfile           U       err = headers.CaddyfileHeaderOp(&handler.Headers"
  - "modules/caddyhttp/push/handler.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/push/handler.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/push/handler.go:25:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/push/handler.go:26:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/push/handler.go:26:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/push/handler.go:75:73         caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/push/handler.go:87:30         caddyhttp       U       = r.Context().Value(caddyhttp.ServerCtxKey).(*caddyhttp"
  - "modules/caddyhttp/push/handler.go:87:56         caddyhttp       U       caddyhttp.ServerCtxKey).(*caddyhttp.Server)"
  - "modules/caddyhttp/push/handler.go:99:41         Loggable        U       headers\", caddyhttp.LoggableHTTPHeader{"
  - "modules/caddyhttp/push/handler.go:145:6         vals            U       if vals, ok := r.Header[fieldName"
  - "modules/caddyhttp/push/handler.go:146:21        vals            U       hdr[fieldName] = vals"
  - "modules/caddyhttp/replacer_test.go:15:9         caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/replacer_test.go:27:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/replacer_test.go:98:26        hostport        U       get: \"http.request.hostport\","
  - "modules/caddyhttp/replacer_test.go:196:23       localdomain     U       expect: \"CN=client.localdomain\","
  - "modules/caddyhttp/replacer.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/replacer.go:44:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/replacer.go:45:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/replacer.go:45:43         caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/replacer.go:66:5          vals            U       vals := req.URL.Query()[key"
  - "modules/caddyhttp/replacer.go:69:25         vals            U       return strings.Join(vals, \",\"), true"
  - "modules/caddyhttp/replacer.go:75:5          vals            U       vals := req.Header[textproto"
  - "modules/caddyhttp/replacer.go:78:25         vals            U       return strings.Join(vals, \",\"), true"
  - "modules/caddyhttp/replacer.go:120:23        hostport        U       case \"http.request.hostport\":"
  - "modules/caddyhttp/replacer.go:348:5         vals            U       vals := w.Header()[textproto"
  - "modules/caddyhttp/replacer.go:485:10        caddytls        U       return caddytls.ProtocolName(req.TLS"
  - "modules/caddyhttp/requestbody/caddyfile.go:15:9         requestbody         U       package requestbody"
  - "modules/caddyhttp/requestbody/caddyfile.go:22:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/requestbody/caddyfile.go:22:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/requestbody/caddyfile.go:22:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/requestbody/caddyfile.go:23:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/requestbody/caddyfile.go:23:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/requestbody/caddyfile.go:27:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/requestbody/caddyfile.go:27:62        Caddyfile           U       request_body\", parseCaddyfile)"
  - "modules/caddyhttp/requestbody/caddyfile.go:30:11        Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/requestbody/caddyfile.go:30:23        httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/requestbody/caddyfile.go:30:46        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/requestbody/caddyfile.go:45:19        Errf                U       return nil, h.Errf(\"parsing max_size:"
  - "modules/caddyhttp/requestbody/caddyfile.go:56:19        Errf                U       return nil, h.Errf(\"parsing read_timeout"
  - "modules/caddyhttp/requestbody/caddyfile.go:67:19        Errf                U       return nil, h.Errf(\"parsing write_timeout"
  - "modules/caddyhttp/requestbody/caddyfile.go:72:18        Errf                U       return nil, h.Errf(\"unrecognized request"
  - "modules/caddyhttp/requestbody/caddyfile.go:72:50        subdirective        U       unrecognized request_body subdirective '%s'\", h.Val())"
  - "modules/caddyhttp/requestbody/requestbody.go:15:9           requestbody     U       package requestbody"
  - "modules/caddyhttp/requestbody/requestbody.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/requestbody/requestbody.go:25:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/requestbody/requestbody.go:25:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/requestbody/requestbody.go:60:78          caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/requestbody/requestbody.go:68:5           nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/requestbody/requestbody.go:68:12          bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/requestbody/requestbody.go:93:9           caddyhttp       U       err = caddyhttp.Error(http.StatusRequestEntit"
  - "modules/caddyhttp/requestbody/requestbody.go:99:7           caddyhttp       U       var _ caddyhttp.MiddlewareHandler ="
  - "modules/caddyhttp/responsematchers_test.go:15:9         caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/responsematchers.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/responsematchers.go:22:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/responsematchers.go:22:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/responsematchers.go:22:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/responsematchers.go:69:35         caddyfile       U       ParseNamedResponseMatcher(d *caddyfile.Dispenser, matchers"
  - "modules/caddyhttp/responsematchers.go:74:12         Errf            U       return d.Errf(\"matcher is defined"
  - "modules/caddyhttp/responsematchers.go:87:34         Caddyfile       U       headerMatcher.UnmarshalCaddyfile(d.NewFromNextSegment"
  - "modules/caddyhttp/responsematchers.go:109:15        Errf            U       return d.Errf(\"bad status value '"
  - "modules/caddyhttp/responsematchers.go:114:13        Errf            U       return d.Errf(\"unrecognized response"
  - "modules/caddyhttp/responsewriter_test.go:1:9            caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/responsewriter_test.go:22:6           barebones       U       // a barebones http.ResponseWriter"
  - "modules/caddyhttp/responsewriter.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/responsewriter.go:100:11      caddyhttp       U       // rec := caddyhttp.NewResponseRecorder"
  - "modules/caddyhttp/responsewriter.go:239:5       nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/responsewriter.go:239:12      bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/responsewriter.go:252:4       nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/responsewriter.go:252:11      bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/addresses.go:23:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/admin.go:22:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:27:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:28:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:28:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:29:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:29:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:29:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:30:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:30:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:30:47       httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:31:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/internal\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:32:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:33:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:34:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/rewrite\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:35:43       caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/reverseproxy/caddyfile.go:39:2        httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:39:63       Caddyfile           U       reverse_proxy\", parseCaddyfile)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:40:2        httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:40:75       Caddyfile           U       response\", parseCopyResponseCaddyfile)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:41:2        httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:41:90       Caddyfile           U       parseCopyResponseHeadersCaddyfile)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:44:11       Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:44:23       httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:44:46       caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:46:21       Caddyfile           U       err := rp.UnmarshalCaddyfile(h.Dispenser)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:141:41      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:151:46      subdirectives       U       matchers defined as subdirectives"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:153:39      caddyhttp           U       nseMatchers = make(map[string]caddyhttp.ResponseMatcher)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:169:13      Errf                U       return d.Errf(\"the scheme wss:// is"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:171:13      Errf                U       return d.Errf(\"the scheme ws:// is"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:175:13      Errf                U       return d.Errf(\"unsupported URL scheme"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:179:13      Errf                U       return d.Errf(\"for now, all proxy"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:221:13      subdirective        U       // if the subdirective has an \"@\" prefix then"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:253:16      caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:259:14      Errf                U       return d.Errf(\"module %s (%T) is not"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:261:28      caddyconfig         U       DynamicUpstreamsRaw = caddyconfig.JSONModuleObject(source"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:272:16      caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:283:41      caddyconfig         U       SelectionPolicyRaw = caddyconfig.JSONModuleObject(sel"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:357:38      caddyfile           U       Named(\"config.adapter.caddyfile\").Warn(\"the 'health"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:357:74      subdirective        U       Warn(\"the 'health_path' subdirective is deprecated, please"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:390:38      subdirective        U       Errf(\"the 'health_port' subdirective is ignored if 'health"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:646:5       usize               U       usize, err := humanize.ParseBytes"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:650:18      usize               U       size = int64(usize)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:714:60      hostport            U       host\") && (args[1] == \"{hostport}\" || args[1] == \"{http"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:714:100     hostport            U       ] == \"{http.request.hostport}\") {"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:723:131     hostport            U       host}\" || args[1] == \"{hostport}\" || args[1] == \"{http"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:723:171     hostport            U       ] == \"{http.request.hostport}\") {"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:853:32      subdirective        U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:1177:14     CAPEM               U       h.TLS.RootCAPEMFiles = args"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:1302:19     caddytls            U       ca, ok := unm.(caddytls.CA)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:1304:39     caddytls            U       \"module %s is not a caddytls.CA\", modID)"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:1309:21     CAPEM               U       if len(h.TLS.RootCAPEMFiles) != 0 {"
  - "modules/caddyhttp/reverseproxy/caddyfile.go:1318:32     subdirective        U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/caddyhttp/reverseproxy/command.go:27:2          caddycmd            U       caddycmd \"github.com/caddyserver"
  - "modules/caddyhttp/reverseproxy/command.go:27:23         caddyserver         U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "modules/caddyhttp/reverseproxy/command.go:29:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/command.go:30:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/command.go:30:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/command.go:31:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/command.go:31:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/command.go:31:47         httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/command.go:32:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/command.go:32:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/command.go:33:43         caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/reverseproxy/command.go:34:43         caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/reverseproxy/command.go:38:2          caddycmd            U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddyhttp/reverseproxy/command.go:38:27         caddycmd            U       caddycmd.RegisterCommand(caddycmd.Command{"
  - "modules/caddyhttp/reverseproxy/command.go:67:73         hostport            U       reverse_proxy.upstream.hostport}\"."
  - "modules/caddyhttp/reverseproxy/command.go:82:15         caddycmd            U       cmd.RunE = caddycmd.WrapCommandFuncForCobra"
  - "modules/caddyhttp/reverseproxy/command.go:87:25         caddycmd            U       func cmdReverseProxy(fs caddycmd.Flags) (int, error)"
  - "modules/caddyhttp/reverseproxy/command.go:93:9          Redir               U       disableRedir := fs.Bool(\"disable"
  - "modules/caddyhttp/reverseproxy/command.go:98:27         caddyhttp           U       httpPort := strconv.Itoa(caddyhttp.DefaultHTTPPort)"
  - "modules/caddyhttp/reverseproxy/command.go:99:28         caddyhttp           U       httpsPort := strconv.Itoa(caddyhttp.DefaultHTTPSPort)"
  - "modules/caddyhttp/reverseproxy/command.go:110:19        httpcaddyfile       U       fromAddr, err := httpcaddyfile.ParseAddress(from)"
  - "modules/caddyhttp/reverseproxy/command.go:179:17        caddyconfig         U       TransportRaw: caddyconfig.JSONModuleObject(ht"
  - "modules/caddyhttp/reverseproxy/command.go:240:73        hostport            U       reverse_proxy.upstream.hostport}\")"
  - "modules/caddyhttp/reverseproxy/command.go:243:11        caddyhttp           U       route := caddyhttp.Route{"
  - "modules/caddyhttp/reverseproxy/command.go:245:4         caddyconfig         U       caddyconfig.JSONModuleObject(handler"
  - "modules/caddyhttp/reverseproxy/command.go:251:13        caddyconfig         U       \"host\": caddyconfig.JSON(caddyhttp.MatchHost"
  - "modules/caddyhttp/reverseproxy/command.go:266:19        Redir               U       } else if disableRedir {"
  - "modules/caddyhttp/reverseproxy/command.go:267:56        Redir               U       AutoHTTPSConfig{DisableRedir: true}"
  - "modules/caddyhttp/reverseproxy/command.go:278:13        caddytls            U       tlsApp := caddytls.TLS{"
  - "modules/caddyhttp/reverseproxy/command.go:279:17        caddytls            U       Automation: &caddytls.AutomationConfig{"
  - "modules/caddyhttp/reverseproxy/command.go:280:18        caddytls            U       Policies: []*caddytls.AutomationPolicy{{"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:22:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/copyresponse.go:23:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:23:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/copyresponse.go:23:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/copyresponse.go:24:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:24:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/copyresponse.go:38:13        caddyhttp       U       StatusCode caddyhttp.WeakString `json:\"status"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:58:85        caddyhttp       U       req *http.Request, _ caddyhttp.Handler) error {"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:64:10        caddyhttp       U       return caddyhttp.Error(http.StatusInternalServ"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:73:11        caddyhttp       U       return caddyhttp.Error(http.StatusInternalServ"
  - "modules/caddyhttp/reverseproxy/copyresponse.go:183:4        caddyfile       U       _ caddyfile.Unmarshaler ="
  - "modules/caddyhttp/reverseproxy/copyresponse.go:187:4        caddyfile       U       _ caddyfile.Unmarshaler ="
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:15:9        fastcgi             U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:22:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:23:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:23:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:24:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:24:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:24:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:25:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:25:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:25:47       httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:26:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:26:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:27:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/fileserver\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:28:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/reverseproxy\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:29:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/rewrite\""
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:33:2        httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"php"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:33:39       fastcgi             U       RegisterDirective(\"php_fastcgi\", parsePHPFastCGI)"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:36:13       Caddyfile           U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:36:36       Caddyfile           U       marshalCaddyfile deserializes Caddyfile tokens into h."
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:38:14       fastcgi             U       // transport fastcgi {"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:48:30       Caddyfile           U       Transport) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:48:43       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:86:14       Errf                U       return d.Errf(\"bad timeout value"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:96:14       Errf                U       return d.Errf(\"bad timeout value"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:106:14      Errf                U       return d.Errf(\"bad timeout value"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:117:13      Errf                U       return d.Errf(\"unrecognized subdirective"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:117:32      subdirective        U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:123:35      fastcgi             U       arsePHPFastCGI parses the php_fastcgi directive, which has"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:128:8       fastcgi             U       // php_fastcgi localhost:7777"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:137:4       redir               U       // redir @canonicalPath {path"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:167:24      httpcaddyfile       U       func parsePHPFastCGI(h httpcaddyfile.Helper) ([]httpcaddyfile"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:167:49      httpcaddyfile       U       httpcaddyfile.Helper) ([]httpcaddyfile.ConfigValue, error)"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:199:14      subdirectives       U       // read the subdirectives that we allow as overrides"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:202:33      subdirectives       U       unmarshal doesn't see these subdirectives which it cannot handle"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:205:22      subdirectives       U       // ignore any sub-subdirectives that might"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:212:29      subdirectives       U       parse the php_fastcgi subdirectives"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:266:28      Errf                U       return nil, dispenser.Errf(\"bad timeout value"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:306:12      caddyhttp           U       routes := caddyhttp.RouteList{}"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:314:3       redir               U       redirMatcherSet := caddy.ModuleMap"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:326:3       redir               U       redirHandler := caddyhttp"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:330:3       redir               U       redirRoute := caddyhttp.Route"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:331:38      redir               U       herSetsRaw: []caddy.ModuleMap{redirMatcherSet},"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:332:38      caddyconfig         U       []json.RawMessage{caddyconfig.JSONModuleObject(redirHandler"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:352:38      caddyconfig         U       []json.RawMessage{caddyconfig.JSONModuleObject(rewriteHandl"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:376:27      Caddyfile           U       rpHandler.UnmarshalCaddyfile(dispenser)"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:380:35      Caddyfile           U       rpHandler.FinalizeUnmarshalCaddyfile(h)"
  - "modules/caddyhttp/reverseproxy/fastcgi/caddyfile.go:399:12      httpcaddyfile       U       return []httpcaddyfile.ConfigValue{"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:21:9          fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:50:26         fcgic       U       scriptFile = \"/tank/www/fcgic_test.php\""
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:51:26         serv        U       ipPort = \"remote-php-serv:59000\""
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:55:5          globalt     U       var globalt *testing.T"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:86:35         filekey     U       Fprintln(resp, \"server:filekey \", kn )"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:103:36        filemd      U       Fprintln(resp, \"server:filemd5 \", md5 )"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:176:3         globalt     U       globalt.Error(\"Server return"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:183:35        fcgict      U       Join(os.TempDir(), \"fcgict\"+strconv.Itoa(rand.Int"
  - "modules/caddyhttp/reverseproxy/fastcgi/client_test.go:214:2         globalt     U       globalt = t"
  - "modules/caddyhttp/reverseproxy/fastcgi/client.go:20:19          Junqing     U       // Copyright 2012 Junqing Tan <ivan@mysqlab.net"
  - "modules/caddyhttp/reverseproxy/fastcgi/client.go:24:9           fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/client.go:45:18          Fileno      U       // FCGIListenSockFileno describes listen socket"
  - "modules/caddyhttp/reverseproxy/fastcgi/client.go:46:21          Fileno      U       const FCGIListenSockFileno uint8 = 0"
  - "modules/caddyhttp/reverseproxy/fastcgi/client.go:113:27         MPXS        U       MultiplexConns string = \"MPXS_CONNS\""
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:15:9          fastcgi         U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:30:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:31:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:31:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:32:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:32:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/reverseproxy\""
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:33:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:33:43         caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:44:31         fastcgi         U       this directory as the fastcgi root directory. Defaults"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:55:22         fastcgi         U       // that 404s if the fastcgi path info is not found"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:90:38         fastcgi         U       reverse_proxy.transport.fastcgi\","
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:117:30        caddyhttp       U       = r.Context().Value(caddyhttp.ServerCtxKey).(*caddyhttp"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:117:56        caddyhttp       U       caddyhttp.ServerCtxKey).(*caddyhttp.Server)"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:123:15        caddyhttp       U       return nil, caddyhttp.Error(http.StatusBadRequest"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:141:2         loggable        U       loggableReq := caddyhttp.LoggableHTTPR"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:141:27        Loggable        U       loggableReq := caddyhttp.LoggableHTTPRequest{"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:145:2         loggable        U       loggableEnv := loggableEnv{vars"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:145:17        loggable        U       loggableEnv := loggableEnv{vars: env, logCredentials"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:148:25        loggable        U       zap.Object(\"request\", loggableReq),"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:149:21        loggable        U       zap.Object(\"env\", loggableEnv),"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:349:22        caddytls        U       for _, cs := range caddytls.SupportedCipherSuites"
  - "modules/caddyhttp/reverseproxy/fastcgi/fastcgi.go:413:70        caddytls        U       SupportedProtocols in caddytls/config.go"
  - "modules/caddyhttp/reverseproxy/fastcgi/header.go:15:9           fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/pool.go:15:9         fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/reader.go:15:9           fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/record.go:15:9           fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/fastcgi/writer.go:15:9           fastcgi     U       package fastcgi"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:15:9        forwardauth         U       package forwardauth"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:22:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:23:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:23:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:24:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:24:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:24:47       httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:25:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:25:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:26:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:26:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:27:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/reverseproxy\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:28:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/rewrite\""
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:32:2        httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"forward"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:32:55       Caddyfile           U       forward_auth\", parseCaddyfile)"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:35:9        Caddyfile           U       // parseCaddyfile parses the forward_auth"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:63:11       Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:63:23       httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) ([]httpcaddyfile"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:63:48       httpcaddyfile       U       httpcaddyfile.Helper) ([]httpcaddyfile.ConfigValue, error)"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:105:21      caddyhttp           U       HandleResponse: []caddyhttp.ResponseHandler{},"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:113:14      subdirectives       U       // read the subdirectives for configuring the"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:115:33      subdirectives       U       unmarshal doesn't see these subdirectives which it cannot handle"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:118:22      subdirectives       U       // ignore any sub-subdirectives that might"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:125:30      subdirectives       U       parse the forward_auth subdirectives"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:170:25      Errf                U       return nil, dispenser.Errf(\"the 'uri' subdirective"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:170:41      subdirective        U       dispenser.Errf(\"the 'uri' subdirective is required\")"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:201:35      caddyconfig         U       andlersRaw: []json.RawMessage{caddyconfig.JSONModuleObject("
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:211:37      behaviour           U       reverse proxy's default behaviour of copying the response"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:213:35      behaviour           U       specifically for that behaviour; we do need the 2xx"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:220:27      Caddyfile           U       rpHandler.UnmarshalCaddyfile(dispenser)"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:224:35      Caddyfile           U       rpHandler.FinalizeUnmarshalCaddyfile(h)"
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:231:34      caddyconfig         U       andlersRaw: []json.RawMessage{caddyconfig.JSONModuleObject("
  - "modules/caddyhttp/reverseproxy/forwardauth/caddyfile.go:244:11      httpcaddyfile       U       return []httpcaddyfile.ConfigValue{"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:31:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/healthchecks.go:32:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:32:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/healthchecks.go:140:11       hdrs            U       for key, hdrs := range a.Headers"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:141:23       hdrs            U       for _, val := range hdrs {"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:403:31       caddyhttp       U       context.WithValue(ctx, caddyhttp.VarsCtxKey, map[string"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:410:31       caddyhttp       U       context.WithValue(ctx, caddyhttp.OriginalRequestCtxKey"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:416:11       vals            U       for key, vals := range h.HealthChecks"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:422:23       vals            U       for _, val := range vals {"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:485:7        caddyhttp       U       if !caddyhttp.StatusCodeMatches(resp"
  - "modules/caddyhttp/reverseproxy/healthchecks.go:556:71       forgetter       U       health check failure forgetter panicked\","
  - "modules/caddyhttp/reverseproxy/hosts.go:25:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/hosts.go:26:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/hosts.go:26:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/hosts.go:263:18      caddyhttp       U       dialInfo, ok := caddyhttp.GetVar(ctx, dialInfoVarKey"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:9:14           caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:9:35           caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:9:47           caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:15:6           caddyfile       U       d *caddyfile.Dispenser"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:26:8           caddyfile       U       d: caddyfile.NewTestDispenser("
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:36:8           caddyfile       U       d: caddyfile.NewTestDispenser(fmt"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:47:8           caddyfile       U       d: caddyfile.NewTestDispenser(fmt"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:87:26          Caddyfile       U       if err := ht.UnmarshalCaddyfile(tt.args.d); (err !="
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:88:38          Caddyfile       U       HTTPTransport.UnmarshalCaddyfile() error = %v, wantErr"
  - "modules/caddyhttp/reverseproxy/httptransport_test.go:92:38          Caddyfile       U       HTTPTransport.UnmarshalCaddyfile() = %v, want %v\", ht"
  - "modules/caddyhttp/reverseproxy/httptransport.go:24:2        weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:33:14       pires           U       \"github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:33:23       proxyproto      U       github.com/pires/go-proxyproto\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:38:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:39:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/httptransport.go:39:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:40:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/reverseproxy/httptransport.go:40:43       caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/reverseproxy/httptransport.go:51:53       fastcgi         U       other transports (like fastcgi) might be"
  - "modules/caddyhttp/reverseproxy/httptransport.go:55:76       hostnames       U       address of upstream hostnames."
  - "modules/caddyhttp/reverseproxy/httptransport.go:200:7       nolint          U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/httptransport.go:200:14      gosec           U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/httptransport.go:201:33      weakrand        U       h.Resolver.netAddrs[weakrand.Intn(len(h.Resolver"
  - "modules/caddyhttp/reverseproxy/httptransport.go:231:29      caddyhttp       U       proxyProtocolInfo, ok := caddyhttp.GetVar(ctx, proxyProtocolInfo"
  - "modules/caddyhttp/reverseproxy/httptransport.go:235:8       proxyv          U       var proxyv byte"
  - "modules/caddyhttp/reverseproxy/httptransport.go:238:5       proxyv          U       proxyv = 1"
  - "modules/caddyhttp/reverseproxy/httptransport.go:240:5       proxyv          U       proxyv = 2"
  - "modules/caddyhttp/reverseproxy/httptransport.go:266:14      proxyproto      U       header := proxyproto.HeaderProxyFromAddrs"
  - "modules/caddyhttp/reverseproxy/httptransport.go:266:46      proxyv          U       HeaderProxyFromAddrs(proxyv, sourceAddr, destAddr"
  - "modules/caddyhttp/reverseproxy/httptransport.go:335:18      Alives          U       rt.DisableKeepAlives = !*h.KeepAlive.Enabled"
  - "modules/caddyhttp/reverseproxy/httptransport.go:345:20      Alives          U       if !rt.DisableKeepAlives && h.ProxyProtocol"
  - "modules/caddyhttp/reverseproxy/httptransport.go:346:37      keepalives      U       Logger().Warn(\"disabling keepalives, they are incompatible"
  - "modules/caddyhttp/reverseproxy/httptransport.go:347:17      Alives          U       rt.DisableKeepAlives = true"
  - "modules/caddyhttp/reverseproxy/httptransport.go:409:3       newtransport    U       newtransport := &HTTPTransport{"
  - "modules/caddyhttp/reverseproxy/httptransport.go:426:3       newtransport    U       newtransport.Transport.TLSClientConfig"
  - "modules/caddyhttp/reverseproxy/httptransport.go:426:71      newtransport    U       ServerName = repl.ReplaceAll(newtransport.Transport.TLSClientConfig"
  - "modules/caddyhttp/reverseproxy/httptransport.go:427:10      newtransport    U       return newtransport"
  - "modules/caddyhttp/reverseproxy/httptransport.go:449:39      Alives          U       dedicated DisableKeepAlives field in *http2.Transport"
  - "modules/caddyhttp/reverseproxy/httptransport.go:451:38      Alives          U       Transport.DisableKeepAlives"
  - "modules/caddyhttp/reverseproxy/httptransport.go:524:6       CAPEM           U       RootCAPEMFiles []string `json"
  - "modules/caddyhttp/reverseproxy/httptransport.go:595:9       Iface           U       tlsAppIface, err := ctx.App(\"tls"
  - "modules/caddyhttp/reverseproxy/httptransport.go:599:19      Iface           U       tlsApp := tlsAppIface.(*caddytls.TLS)"
  - "modules/caddyhttp/reverseproxy/httptransport.go:599:27      caddytls        U       tlsApp := tlsAppIface.(*caddytls.TLS)"
  - "modules/caddyhttp/reverseproxy/httptransport.go:605:13      caddytls        U       certs := caddytls.AllMatchingCertificates"
  - "modules/caddyhttp/reverseproxy/httptransport.go:608:88      gosec           U       iteration variable (gosec warning)"
  - "modules/caddyhttp/reverseproxy/httptransport.go:622:40      CAPEM           U       RootCAPool) > 0 || len(t.RootCAPEMFiles) > 0 {"
  - "modules/caddyhttp/reverseproxy/httptransport.go:632:33      CAPEM           U       pemFile := range t.RootCAPEMFiles {"
  - "modules/caddyhttp/reverseproxy/httptransport.go:643:41      CAPEM           U       RootCAPool) > 0 || len(t.RootCAPEMFiles) > 0 {"
  - "modules/caddyhttp/reverseproxy/httptransport.go:650:20      caddytls        U       ca, ok := caRaw.(caddytls.CA)"
  - "modules/caddyhttp/reverseproxy/httptransport.go:677:14      caddytls        U       curveID := caddytls.SupportedCurves[curveName"
  - "modules/caddyhttp/reverseproxy/metrics.go:9:50          promauto    U       client_golang/prometheus/promauto\""
  - "modules/caddyhttp/reverseproxy/metrics.go:23:41         promauto    U       oxyMetrics.upstreamsHealthy = promauto.NewGaugeVec(prometheus"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:38:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:39:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:39:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:39:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:40:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:40:43        caddyevents     U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:41:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:41:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:42:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:42:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/headers\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:43:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp/rewrite\""
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:58:34        hostport        U       reverse_proxy.upstream.hostport}` | The host:port of"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:171:22       roundtrips      U       // after successful roundtrips. The first handler that"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:183:19       caddyhttp       U       HandleResponse []caddyhttp.ResponseHandler `json"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:199:48       Caddyfile       U       response matchers from the Caddyfile while adapting"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:200:30       caddyhttp       U       responseMatchers map[string]caddyhttp.ResponseMatcher"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:202:31       Caddyfile       U       the handle_response Caddyfile tokens while adapting"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:203:28       caddyfile       U       handleResponseSegments []*caddyfile.Dispenser"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:212:10       caddyevents     U       events *caddyevents.App"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:225:10       Iface           U       eventAppIface, err := ctx.App(\"events"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:229:21       Iface           U       h.events = eventAppIface.(*caddyevents.App)"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:229:29       caddyevents     U       events = eventAppIface.(*caddyevents.App)"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:513:40       hostport        U       reverse_proxy.upstream.hostport\", dialInfo.Address)"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:543:5        succ            U       if succ, ok := proxyErr.(roundtripSuc"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:544:16       succ            U       return true, succ.error"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:581:26       gunicorn        U       with \"slow clients\" (gunicorn, etc.) - this obviously"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:583:47       slowloris       U       more susceptible to slowloris"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:761:4        nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:805:35       Loggable        U       request\", caddyhttp.LoggableHTTPRequest{"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:815:35       Loggable        U       headers\", caddyhttp.LoggableHTTPHeader{"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:914:48       behaviour       U       default finalize/copy behaviour"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:983:28       stdlib          U       no extra logging from stdlib"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:991:5        nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:991:12       bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:1161:46      stdlib          U       borrowed from the Go stdlib reverse proxy,"
  - "modules/caddyhttp/reverseproxy/reverseproxy.go:1180:30      behaviour       U       breaks reverseproxy behaviour, overriding how the"
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:24:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:25:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:25:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:298:57         caddyhttp       U       WithValue(req.Context(), caddyhttp.VarsCtxKey, make(map"
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:301:2          caddyhttp       U       caddyhttp.SetVar(req.Context("
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:301:34         caddyhttp       U       SetVar(req.Context(), caddyhttp.ClientIPVarKey, \"17"
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:306:2          caddyhttp       U       caddyhttp.SetVar(req.Context("
  - "modules/caddyhttp/reverseproxy/selectionpolicies_test.go:748:16         caddyconfig     U       FallbackRaw: caddyconfig.JSONModuleObject(FirstSelecti"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:23:2        weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:31:14       cespare         U       \"github.com/cespare/xxhash/v2\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:31:22       xxhash          U       \"github.com/cespare/xxhash/v2\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:33:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:34:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:34:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:35:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:35:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:35:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:36:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:36:43       caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:71:13       Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:71:47       Caddyfile       U       sets up the module from Caddyfile tokens."
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:72:36       Caddyfile       U       RandomSelection) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:72:49       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:100:13      Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:100:47      Caddyfile       U       sets up the module from Caddyfile tokens."
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:101:61      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:112:13      Errf            U       return d.Errf(\"invalid weight value"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:115:13      Errf            U       return d.Errf(\"invalid weight value"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:182:55      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:191:12      Errf            U       return d.Errf(\"invalid choice value"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:224:8       weakrand        U       j := weakrand.Intn(i + 1) //nolint"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:224:31      nolint          U       weakrand.Intn(i + 1) //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:224:38      gosec           U       Intn(i + 1) //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:273:22      weakrand        U       if count == 1 || (weakrand.Int()%count) == 0 {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:273:53      nolint          U       Int()%count) == 0 { //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:273:60      gosec           U       count) == 0 { //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:283:52      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:406:13      caddyhttp       U       address := caddyhttp.GetVar(req.Context("
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:406:45      caddyhttp       U       GetVar(req.Context(), caddyhttp.ClientIPVarKey).(string"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:474:19      caddyconfig     U       s.FallbackRaw = caddyconfig.JSONModuleObject(RandomSelect"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:493:2       vals            U       vals := strings.Join(req"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:494:5       vals            U       if vals == \"\" {"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:497:29      vals            U       hostByHashing(pool, vals)"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:524:13      Errf            U       return d.Errf(\"unrecognized option"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:555:19      caddyconfig     U       s.FallbackRaw = caddyconfig.JSONModuleObject(RandomSelect"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:604:13      Errf            U       return d.Errf(\"unrecognized option"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:639:19      caddyconfig     U       s.FallbackRaw = caddyconfig.JSONModuleObject(RandomSelect"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:669:21      caddyhttp       U       if trusted, ok := caddyhttp.GetVar(req.Context("
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:669:53      caddyhttp       U       GetVar(req.Context(), caddyhttp.TrustedProxyVarKey)"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:787:7       weakrand        U       if (weakrand.Int() % count) == 0"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:787:40      nolint          U       ) % count) == 0 { //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:787:47      gosec           U       count) == 0 { //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:826:14      weakrand        U       return best[weakrand.Intn(len(best))] //nolint"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:826:42      nolint          U       weakrand.Intn(len(best))] //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:826:49      gosec           U       len(best))] //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/selectionpolicies.go:853:7       xxhash          U       h := xxhash.New()"
  - "modules/caddyhttp/reverseproxy/streaming_test.go:9:14           caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/streaming.go:26:2        weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/reverseproxy/streaming.go:68:4        nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/streaming.go:68:11       bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/streaming.go:83:22       cancelation     U       // Ensure that the cancelation of a request closes"
  - "modules/caddyhttp/reverseproxy/streaming.go:138:6       timeoutc        U       var timeoutc <-chan time.Time"
  - "modules/caddyhttp/reverseproxy/streaming.go:142:3       timeoutc        U       timeoutc = timer.C"
  - "modules/caddyhttp/reverseproxy/streaming.go:145:2       errc            U       errc := make(chan error,"
  - "modules/caddyhttp/reverseproxy/streaming.go:147:23      errc            U       go spc.copyToBackend(errc)"
  - "modules/caddyhttp/reverseproxy/streaming.go:148:25      errc            U       spc.copyFromBackend(errc)"
  - "modules/caddyhttp/reverseproxy/streaming.go:150:16      errc            U       case err := <-errc:"
  - "modules/caddyhttp/reverseproxy/streaming.go:152:17      timeoutc        U       case time := <-timeoutc:"
  - "modules/caddyhttp/reverseproxy/streaming.go:211:6       nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/streaming.go:211:13      bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/reverseproxy/streaming.go:248:7       rerr            U       nr, rerr := src.Read(buf)"
  - "modules/caddyhttp/reverseproxy/streaming.go:250:48      rerr            U       upstream\", zap.Error(rerr))"
  - "modules/caddyhttp/reverseproxy/streaming.go:251:6       rerr            U       if rerr != nil && rerr != io"
  - "modules/caddyhttp/reverseproxy/streaming.go:251:21      rerr            U       if rerr != nil && rerr != io.EOF && rerr !"
  - "modules/caddyhttp/reverseproxy/streaming.go:251:39      rerr            U       & rerr != io.EOF && rerr != context.Canceled"
  - "modules/caddyhttp/reverseproxy/streaming.go:253:7       fastcgi         U       // fastcgi PoC earlier; but it"
  - "modules/caddyhttp/reverseproxy/streaming.go:263:8       werr            U       nw, werr := dst.Write(buf[:nr"
  - "modules/caddyhttp/reverseproxy/streaming.go:270:15      werr            U       zap.Error(werr))"
  - "modules/caddyhttp/reverseproxy/streaming.go:271:7       werr            U       if werr != nil {"
  - "modules/caddyhttp/reverseproxy/streaming.go:272:47      werr            U       Errorf(\"writing: %w\", werr)"
  - "modules/caddyhttp/reverseproxy/streaming.go:364:37      pascaldekloe    U       connection. Thanks to @pascaldekloe who provided inspiration"
  - "modules/caddyhttp/reverseproxy/streaming.go:366:15      pascaldekloe    U       // github.com/pascaldekloe/websocket. Further work"
  - "modules/caddyhttp/reverseproxy/streaming.go:464:7       weakrand        U       n := weakrand.Uint32()"
  - "modules/caddyhttp/reverseproxy/streaming.go:500:5       nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/reverseproxy/streaming.go:526:4       nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/reverseproxy/streaming.go:547:47      errc            U       otocolCopier) copyFromBackend(errc chan<- error) {"
  - "modules/caddyhttp/reverseproxy/upstreams.go:7:2         weakrand        U       weakrand \"math/rand\""
  - "modules/caddyhttp/reverseproxy/upstreams.go:16:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/reverseproxy/upstreams.go:103:7       nolint          U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/upstreams.go:103:14      gosec           U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/upstreams.go:104:34      weakrand        U       su.Resolver.netAddrs[weakrand.Intn(len(su.Resolver"
  - "modules/caddyhttp/reverseproxy/upstreams.go:120:2       srvs            U       srvsMu.RLock()"
  - "modules/caddyhttp/reverseproxy/upstreams.go:121:12      srvs            U       cached := srvs[suAddr]"
  - "modules/caddyhttp/reverseproxy/upstreams.go:122:2       srvs            U       srvsMu.RUnlock()"
  - "modules/caddyhttp/reverseproxy/upstreams.go:128:2       srvs            U       srvsMu.Lock()"
  - "modules/caddyhttp/reverseproxy/upstreams.go:129:8       srvs            U       defer srvsMu.Unlock()"
  - "modules/caddyhttp/reverseproxy/upstreams.go:313:7       nolint          U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/upstreams.go:313:14      gosec           U       //nolint:gosec"
  - "modules/caddyhttp/reverseproxy/upstreams.go:314:34      weakrand        U       au.Resolver.netAddrs[weakrand.Intn(len(au.Resolver"
  - "modules/caddyhttp/reverseproxy/upstreams.go:420:4       failovers       U       // failovers, especially in conjunction"
  - "modules/caddyhttp/rewrite/caddyfile.go:22:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/rewrite/caddyfile.go:23:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/rewrite/caddyfile.go:23:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/rewrite/caddyfile.go:24:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/rewrite/caddyfile.go:24:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/rewrite/caddyfile.go:24:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/rewrite/caddyfile.go:25:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/rewrite/caddyfile.go:25:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/rewrite/caddyfile.go:29:2         httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"rewrite"
  - "modules/caddyhttp/rewrite/caddyfile.go:29:50        Caddyfile           U       sterDirective(\"rewrite\", parseCaddyfileRewrite)"
  - "modules/caddyhttp/rewrite/caddyfile.go:30:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/rewrite/caddyfile.go:30:56        Caddyfile           U       ndlerDirective(\"method\", parseCaddyfileMethod)"
  - "modules/caddyhttp/rewrite/caddyfile.go:31:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/rewrite/caddyfile.go:31:53        Caddyfile           U       rHandlerDirective(\"uri\", parseCaddyfileURI)"
  - "modules/caddyhttp/rewrite/caddyfile.go:32:2         httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"handle"
  - "modules/caddyhttp/rewrite/caddyfile.go:32:54        Caddyfile           U       \"handle_path\", parseCaddyfileHandlePath)"
  - "modules/caddyhttp/rewrite/caddyfile.go:35:9         Caddyfile           U       // parseCaddyfileRewrite sets up a basic"
  - "modules/caddyhttp/rewrite/caddyfile.go:47:17        Errf                U       return nil, h.Errf(\"too few arguments;"
  - "modules/caddyhttp/rewrite/caddyfile.go:50:17        Errf                U       return nil, h.Errf(\"too many arguments"
  - "modules/caddyhttp/rewrite/caddyfile.go:75:52        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/rewrite/caddyfile.go:97:49        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/rewrite/caddyfile.go:105:6        rewr                U       var rewr Rewrite"
  - "modules/caddyhttp/rewrite/caddyfile.go:112:3        rewr                U       rewr.StripPathPrefix = args"
  - "modules/caddyhttp/rewrite/caddyfile.go:113:25       rewr                U       if !strings.HasPrefix(rewr.StripPathPrefix, \"/"
  - "modules/caddyhttp/rewrite/caddyfile.go:114:4        rewr                U       rewr.StripPathPrefix = \""
  - "modules/caddyhttp/rewrite/caddyfile.go:114:33       rewr                U       StripPathPrefix = \"/\" + rewr.StripPathPrefix"
  - "modules/caddyhttp/rewrite/caddyfile.go:141:19       Errf                U       return nil, h.Errf(\"limit must be an integer"
  - "modules/caddyhttp/rewrite/caddyfile.go:188:17       Errf                U       return nil, h.Errf(\"unrecognized URI manipulatio"
  - "modules/caddyhttp/rewrite/caddyfile.go:247:17       Errf                U       return nil, h.Errf(\"path matcher must begin"
  - "modules/caddyhttp/rewrite/caddyfile.go:272:28       caddyhttp           U       subroute, ok := handler.(*caddyhttp.Subroute)"
  - "modules/caddyhttp/rewrite/caddyfile.go:279:18       caddyhttp           U       \"path\": h.JSON(caddyhttp.MatchPath{path}),"
  - "modules/caddyhttp/rewrite/caddyfile.go:285:4        caddyconfig         U       caddyconfig.JSONModuleObject(Rewrite"
  - "modules/caddyhttp/rewrite/rewrite_test.go:22:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/rewrite/rewrite_test.go:64:40         Fbaz            U       newRequest(t, \"GET\", \"/bar%3Fbaz?c=d\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:65:40         Fbaz            U       newRequest(t, \"GET\", \"/bar%3Fbaz?c=d\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:69:40         Fbaz            U       newRequest(t, \"GET\", \"/bar%3Fbaz\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:70:40         Fbaz            U       newRequest(t, \"GET\", \"/bar%3Fbaz\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:80:49         Ffoo            U       GET\", \"/index.php?p=%2Ffoo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:80:55         Fbar            U       index.php?p=%2Ffoo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:155:53        Ffoo            U       \"/index.php?a=b&p=%2Ffoo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:155:59        Fbar            U       index.php?a=b&p=%2Ffoo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:250:47        Fbar            U       GET\", \"/prefix/foo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:251:40        Fbar            U       newRequest(t, \"GET\", \"/foo%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:307:40        Fbar            U       newRequest(t, \"GET\", \"/foo%2Fbar/suffix\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:311:40        fsuffix         U       StripPathSuffix: \"%2fsuffix\"},"
  - "modules/caddyhttp/rewrite/rewrite_test.go:312:46        fsuffix         U       \"GET\", \"/foo%2Fbar%2fsuffix\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:322:59        findme          U       substrReplacer{{Find: \"findme\", Replace: \"replaced"
  - "modules/caddyhttp/rewrite/rewrite_test.go:327:59        findme          U       substrReplacer{{Find: \"findme\", Replace: \"replaced"
  - "modules/caddyhttp/rewrite/rewrite_test.go:328:39        findme          U       newRequest(t, \"GET\", \"/foo/findme/bar\"),"
  - "modules/caddyhttp/rewrite/rewrite_test.go:332:59        findme          U       substrReplacer{{Find: \"findme\", Replace: \"replaced"
  - "modules/caddyhttp/rewrite/rewrite_test.go:333:39        findme          U       newRequest(t, \"GET\", \"/foo/findme%2Fbar\"),"
  - "modules/caddyhttp/rewrite/rewrite.go:27:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/rewrite/rewrite.go:28:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/rewrite/rewrite.go:28:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/rewrite/rewrite.go:106:22         rewr            U       / Provision sets up rewr."
  - "modules/caddyhttp/rewrite/rewrite.go:107:7          rewr            U       func (rewr *Rewrite) Provision"
  - "modules/caddyhttp/rewrite/rewrite.go:108:2          rewr            U       rewr.logger = ctx.Logger"
  - "modules/caddyhttp/rewrite/rewrite.go:110:22         rewr            U       for i, rep := range rewr.PathRegexp {"
  - "modules/caddyhttp/rewrite/rewrite.go:120:5          rewr            U       if rewr.Query != nil {"
  - "modules/caddyhttp/rewrite/rewrite.go:132:76         caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/rewrite/rewrite.go:136:25         caddyhttp       U       zap.Object(\"request\", caddyhttp.LoggableHTTPRequest"
  - "modules/caddyhttp/rewrite/rewrite.go:136:35         Loggable        U       request\", caddyhttp.LoggableHTTPRequest{Request:"
  - "modules/caddyhttp/rewrite/rewrite.go:260:18         caddyhttp       U       escapedPath = caddyhttp.CleanPath(escapedPath"
  - "modules/caddyhttp/rewrite/rewrite.go:268:18         caddyhttp       U       escapedPath = caddyhttp.CleanPath(escapedPath"
  - "modules/caddyhttp/rewrite/rewrite.go:557:19         vals            U       for fieldName, vals := range query {"
  - "modules/caddyhttp/rewrite/rewrite.go:558:20         vals            U       for i := range vals {"
  - "modules/caddyhttp/rewrite/rewrite.go:569:18         vals            U       for fieldName, vals := range query {"
  - "modules/caddyhttp/rewrite/rewrite.go:570:19         vals            U       for i := range vals {"
  - "modules/caddyhttp/routes.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/routes.go:22:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/routes.go:138:10      Iface           U       matchersIface, err := ctx.LoadModule"
  - "modules/caddyhttp/routes.go:142:44      Iface           U       FromInterface(matchersIface)"
  - "modules/caddyhttp/routes.go:154:10      Iface           U       handlersIface, err := ctx.LoadModule"
  - "modules/caddyhttp/routes.go:158:34      Iface           U       handler := range handlersIface.([]any) {"
  - "modules/caddyhttp/routes.go:163:9       midhandler      U       for _, midhandler := range r.Handlers"
  - "modules/caddyhttp/routes.go:164:59      midhandler      U       wrapMiddleware(ctx, midhandler, metrics))"
  - "modules/caddyhttp/routes.go:344:16      mset            U       // matchers in mset or if there are no matchers"
  - "modules/caddyhttp/routes.go:345:7       mset            U       func (mset MatcherSet) Match(r"
  - "modules/caddyhttp/routes.go:346:20      mset            U       for _, m := range mset {"
  - "modules/caddyhttp/routes.go:377:19      Ifaces          U       for _, matcherSetIfaces := range matcherSets"
  - "modules/caddyhttp/routes.go:379:37      Ifaces          U       matcher := range matcherSetIfaces {"
  - "modules/caddyhttp/server_test.go:1:9            caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/server_test.go:13:14          stretchr        U       \"github.com/stretchr/testify/assert\""
  - "modules/caddyhttp/server_test.go:20:9           Syncer          U       type nopSyncer writeFunc"
  - "modules/caddyhttp/server_test.go:22:12          Syncer          U       func (n nopSyncer) Write(p []byte) (int"
  - "modules/caddyhttp/server_test.go:26:12          Syncer          U       func (n nopSyncer) Sync() error {"
  - "modules/caddyhttp/server_test.go:33:11          Syncer          U       ws := nopSyncer(wf)"
  - "modules/caddyhttp/server_test.go:54:2           wrec            U       wrec := NewResponseRecorder"
  - "modules/caddyhttp/server_test.go:63:28          wrec            U       logRequest(accLog, req, wrec, &duration, repl, bodyReader"
  - "modules/caddyhttp/server_test.go:81:2           wrec            U       wrec := NewResponseRecorder"
  - "modules/caddyhttp/server_test.go:90:28          wrec            U       logRequest(accLog, req, wrec, &duration, repl, bodyReader"
  - "modules/caddyhttp/server_test.go:108:2          wrec            U       wrec := NewResponseRecorder"
  - "modules/caddyhttp/server.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/server.go:32:14       caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/server.go:32:26       certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddyhttp/server.go:38:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/server.go:39:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/caddyhttp/server.go:39:43       caddyevents     U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/caddyhttp/server.go:40:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddyhttp/server.go:40:43       caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddyhttp/server.go:57:45       slowloris       U       zero value can mitigate slowloris attacks, but"
  - "modules/caddyhttp/server.go:70:15       alives          U       // when keep-alives are enabled. If zero"
  - "modules/caddyhttp/server.go:111:21      unrouted        U       // By default, all unrouted requests receive a"
  - "modules/caddyhttp/server.go:136:18      caddytls        U       TLSConnPolicies caddytls.ConnectionPolicies"
  - "modules/caddyhttp/server.go:232:16      caddytls        U       tlsApp *caddytls.TLS"
  - "modules/caddyhttp/server.go:233:16      caddyevents     U       events *caddyevents.App"
  - "modules/caddyhttp/server.go:300:5       nolint          U       //nolint:bodyclose"
  - "modules/caddyhttp/server.go:300:12      bodyclose       U       //nolint:bodyclose"
  - "modules/caddyhttp/server.go:312:2       loggable        U       loggableReq := zap.Object(\"request"
  - "modules/caddyhttp/server.go:312:39      Loggable        U       zap.Object(\"request\", LoggableHTTPRequest{"
  - "modules/caddyhttp/server.go:316:31      loggable        U       s.errorLogger.With(loggableReq)"
  - "modules/caddyhttp/server.go:321:3       wrec            U       wrec := NewResponseRecorder"
  - "modules/caddyhttp/server.go:322:7       wrec            U       w = wrec"
  - "modules/caddyhttp/server.go:332:27      wrec            U       setReadSizer, ok := wrec.(interface{ setReadSize"
  - "modules/caddyhttp/server.go:338:33      loggable        U       s.accessLogger.With(loggableReq)"
  - "modules/caddyhttp/server.go:340:33      wrec            U       logRequest(accLog, r, wrec, &duration, repl, bodyReader"
  - "modules/caddyhttp/server.go:592:9       nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/server.go:612:4       nolint          U       //nolint:errcheck"
  - "modules/caddyhttp/server.go:735:6       certmagic       U       if certmagic.MatchWildcard(hostWithoutPort"
  - "modules/caddyhttp/server.go:754:39      wrec            U       Logger, r *http.Request, wrec ResponseRecorder, duration"
  - "modules/caddyhttp/server.go:784:30      Loggable        U       Object(\"resp_headers\", LoggableHTTPHeader{"
  - "modules/caddyhttp/standard/imports.go:5:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/standard/imports.go:5:45          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/standard/imports.go:6:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/standard/imports.go:6:45          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/caddyauth\""
  - "modules/caddyhttp/standard/imports.go:6:55          caddyauth           U       v2/modules/caddyhttp/caddyauth\""
  - "modules/caddyhttp/standard/imports.go:7:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/standard/imports.go:7:45          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/encode\""
  - "modules/caddyhttp/standard/imports.go:8:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/standard/imports.go:8:45          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/encode/brotli\""
  - "modules/caddyhttp/standard/imports.go:9:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/standard/imports.go:9:45          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/encode/gzip\""
  - "modules/caddyhttp/standard/imports.go:10:62         zstd                U       modules/caddyhttp/encode/zstd\""
  - "modules/caddyhttp/standard/imports.go:16:55         proxyprotocol       U       v2/modules/caddyhttp/proxyprotocol\""
  - "modules/caddyhttp/standard/imports.go:18:55         requestbody         U       v2/modules/caddyhttp/requestbody\""
  - "modules/caddyhttp/standard/imports.go:20:68         fastcgi             U       caddyhttp/reverseproxy/fastcgi\""
  - "modules/caddyhttp/standard/imports.go:21:68         forwardauth         U       caddyhttp/reverseproxy/forwardauth\""
  - "modules/caddyhttp/staticerror.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/staticerror.go:22:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/staticerror.go:23:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/staticerror.go:23:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/staticerror.go:23:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/staticerror.go:54:13          Caddyfile       U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/staticerror.go:54:48          Caddyfile       U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/staticerror.go:62:32          Caddyfile       U       StaticError) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/staticerror.go:62:45          caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/staticerror.go:91:13          Errf            U       return d.Errf(\"unrecognized subdirective"
  - "modules/caddyhttp/staticerror.go:91:32          subdirective    U       d.Errf(\"unrecognized subdirective '%s'\", d.Val())"
  - "modules/caddyhttp/staticerror.go:115:4          caddyfile       U       _ caddyfile.Unmarshaler = (*StaticError"
  - "modules/caddyhttp/staticresp_test.go:15:9           caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/staticresp_test.go:25:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/staticresp.go:15:9        caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/staticresp.go:33:2        caddycmd        U       caddycmd \"github.com/caddyserver"
  - "modules/caddyhttp/staticresp.go:33:23       caddyserver     U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "modules/caddyhttp/staticresp.go:35:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/staticresp.go:36:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/staticresp.go:36:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/staticresp.go:37:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/staticresp.go:37:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/staticresp.go:37:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/staticresp.go:42:2        caddycmd        U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddyhttp/staticresp.go:42:27       caddycmd        U       caddycmd.RegisterCommand(caddycmd.Command{"
  - "modules/caddyhttp/staticresp.go:82:15       caddycmd        U       cmd.RunE = caddycmd.WrapCommandFuncForCobra"
  - "modules/caddyhttp/staticresp.go:131:13      Caddyfile       U       // UnmarshalCaddyfile sets up the handler"
  - "modules/caddyhttp/staticresp.go:131:48      Caddyfile       U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/staticresp.go:140:35      Caddyfile       U       StaticResponse) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/staticresp.go:140:48      caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/staticresp.go:174:13      Errf            U       return d.Errf(\"unrecognized subdirective"
  - "modules/caddyhttp/staticresp.go:174:32      subdirective    U       d.Errf(\"unrecognized subdirective '%s'\", d.Val())"
  - "modules/caddyhttp/staticresp.go:195:13      vals            U       for field, vals := range s.Headers"
  - "modules/caddyhttp/staticresp.go:197:6       Vals            U       newVals := make([]string, len"
  - "modules/caddyhttp/staticresp.go:197:33      vals            U       make([]string, len(vals))"
  - "modules/caddyhttp/staticresp.go:198:18      vals            U       for i := range vals {"
  - "modules/caddyhttp/staticresp.go:199:7       Vals            U       newVals[i] = repl.ReplaceAll"
  - "modules/caddyhttp/staticresp.go:199:33      vals            U       i] = repl.ReplaceAll(vals[i], \"\")"
  - "modules/caddyhttp/staticresp.go:201:26      Vals            U       Header()[field] = newVals"
  - "modules/caddyhttp/staticresp.go:288:30      caddyconfig     U       handlers = append(handlers, caddyconfig.JSONModuleObject(handler"
  - "modules/caddyhttp/staticresp.go:297:46      Redir           U       AutoHTTPSConfig{DisableRedir: true},"
  - "modules/caddyhttp/staticresp.go:306:20      caddycmd        U       func cmdRespond(fl caddycmd.Flags) (int, error)"
  - "modules/caddyhttp/staticresp.go:425:12      caddyconfig     U       \"http\": caddyconfig.JSON(httpApp, nil),"
  - "modules/caddyhttp/staticresp.go:461:4       caddyfile       U       _ caddyfile.Unmarshaler = (*StaticRespons"
  - "modules/caddyhttp/subroute.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/subroute.go:21:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/templates/caddyfile.go:18:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/templates/caddyfile.go:19:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/templates/caddyfile.go:19:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddyhttp/templates/caddyfile.go:20:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/templates/caddyfile.go:20:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/templates/caddyfile.go:20:47          caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/templates/caddyfile.go:21:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/templates/caddyfile.go:21:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/templates/caddyfile.go:21:47          httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/templates/caddyfile.go:22:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/templates/caddyfile.go:22:43          caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/templates/caddyfile.go:26:2           httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/templates/caddyfile.go:26:59          Caddyfile           U       erDirective(\"templates\", parseCaddyfile)"
  - "modules/caddyhttp/templates/caddyfile.go:29:9           Caddyfile           U       // parseCaddyfile sets up the handler"
  - "modules/caddyhttp/templates/caddyfile.go:29:44          Caddyfile           U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/templates/caddyfile.go:36:11          Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/caddyhttp/templates/caddyfile.go:36:23          httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/templates/caddyfile.go:36:46          caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/templates/caddyfile.go:65:17          caddyfile           U       unm, err := caddyfile.UnmarshalModule(h.Dispenser"
  - "modules/caddyhttp/templates/caddyfile.go:71:20          Errf                U       return nil, h.Errf(\"module %s (%T) does"
  - "modules/caddyhttp/templates/caddyfile.go:76:44          caddyconfig         U       extensionModuleName] = caddyconfig.JSON(cf, nil)"
  - "modules/caddyhttp/templates/frontmatter_fuzz.go:15:12       gofuzz      U       //go:build gofuzz"
  - "modules/caddyhttp/templates/templates.go:28:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/templates/templates.go:29:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/templates/templates.go:29:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/templates/templates.go:63:15          cookiename      U       // {{.Cookie \"cookiename\"}}"
  - "modules/caddyhttp/templates/templates.go:156:18         mydir           U       // {{listFiles \"/mydir\"}}"
  - "modules/caddyhttp/templates/templates.go:162:5          Goldmark        U       // [Goldmark](https://github.com"
  - "modules/caddyhttp/templates/templates.go:250:4          sitename        U       // sitename = \"A Caddy site\""
  - "modules/caddyhttp/templates/templates.go:260:4          sitename        U       // sitename: A Caddy site"
  - "modules/caddyhttp/templates/templates.go:270:5          sitename        U       // \"sitename\": \"A Caddy site\""
  - "modules/caddyhttp/templates/templates.go:365:12         Iface           U       for _, modIface := range mods.(map[string"
  - "modules/caddyhttp/templates/templates.go:366:44         Iface           U       append(t.customFuncs, modIface.(CustomFunctions).CustomTempl"
  - "modules/caddyhttp/templates/templates.go:386:76         caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/templates/templates.go:403:9          caddyhttp       U       rec := caddyhttp.NewResponseRecorder"
  - "modules/caddyhttp/templates/templates.go:431:40         caddyhttp       U       executeTemplate(rr caddyhttp.ResponseRecorder, r"
  - "modules/caddyhttp/templates/templates.go:450:18         caddyhttp       U       var handlerErr caddyhttp.HandlerError"
  - "modules/caddyhttp/templates/tplcontext_test.go:32:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/templates/tplcontext_test.go:32:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/templates/tplcontext_test.go:58:54        caddyhttp       U       tplContext.Req.Context(), caddyhttp.ServerCtxKey, test.handler"
  - "modules/caddyhttp/templates/tplcontext_test.go:486:75       ctxtest         U       tplContext.Root), \"caddy_ctxtest\")"
  - "modules/caddyhttp/templates/tplcontext.go:35:2          chromahtml      U       chromahtml \"github.com/alecthomas"
  - "modules/caddyhttp/templates/tplcontext.go:35:25         alecthomas      U       chromahtml \"github.com/alecthomas/chroma/v2/formatters"
  - "modules/caddyhttp/templates/tplcontext.go:37:14         yuin            U       \"github.com/yuin/goldmark\""
  - "modules/caddyhttp/templates/tplcontext.go:37:19         goldmark        U       \"github.com/yuin/goldmark\""
  - "modules/caddyhttp/templates/tplcontext.go:38:27         yuin            U       highlighting \"github.com/yuin/goldmark-highlighting"
  - "modules/caddyhttp/templates/tplcontext.go:38:32         goldmark        U       highlighting \"github.com/yuin/goldmark-highlighting/v2\""
  - "modules/caddyhttp/templates/tplcontext.go:39:14         yuin            U       \"github.com/yuin/goldmark/extension\""
  - "modules/caddyhttp/templates/tplcontext.go:39:19         goldmark        U       \"github.com/yuin/goldmark/extension\""
  - "modules/caddyhttp/templates/tplcontext.go:40:14         yuin            U       \"github.com/yuin/goldmark/parser\""
  - "modules/caddyhttp/templates/tplcontext.go:40:19         goldmark        U       \"github.com/yuin/goldmark/parser\""
  - "modules/caddyhttp/templates/tplcontext.go:41:2          gmhtml          U       gmhtml \"github.com/yuin/goldmark"
  - "modules/caddyhttp/templates/tplcontext.go:41:21         yuin            U       gmhtml \"github.com/yuin/goldmark/renderer/html"
  - "modules/caddyhttp/templates/tplcontext.go:41:26         goldmark        U       gmhtml \"github.com/yuin/goldmark/renderer/html\""
  - "modules/caddyhttp/templates/tplcontext.go:44:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/templates/tplcontext.go:45:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/templates/tplcontext.go:45:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/templates/tplcontext.go:63:40         missingkey      U       New(tplName).Option(\"missingkey=zero\")"
  - "modules/caddyhttp/templates/tplcontext.go:103:33        caddyhttp       U       Req.Context().Value(caddyhttp.OriginalRequestCtxKey"
  - "modules/caddyhttp/templates/tplcontext.go:191:2         virt            U       virtReq, err := http.NewRequest"
  - "modules/caddyhttp/templates/tplcontext.go:195:2         virt            U       virtReq.Host = c.Req.Host"
  - "modules/caddyhttp/templates/tplcontext.go:196:2         virt            U       virtReq.RemoteAddr = \"12"
  - "modules/caddyhttp/templates/tplcontext.go:197:2         virt            U       virtReq.Header = c.Req.Header"
  - "modules/caddyhttp/templates/tplcontext.go:198:2         virt            U       virtReq.Header.Set(\"Accept"
  - "modules/caddyhttp/templates/tplcontext.go:203:34        caddyhttp       U       Req.Context().Value(caddyhttp.ServerCtxKey).(http"
  - "modules/caddyhttp/templates/tplcontext.go:292:13        caddyhttp       U       address := caddyhttp.GetVar(c.Req.Context"
  - "modules/caddyhttp/templates/tplcontext.go:292:47        caddyhttp       U       GetVar(c.Req.Context(), caddyhttp.ClientIPVarKey).(string"
  - "modules/caddyhttp/templates/tplcontext.go:358:6         chromahtml      U       chromahtml.WithClasses(true),"
  - "modules/caddyhttp/templates/tplcontext.go:366:4         gmhtml          U       gmhtml.WithUnsafe(), // TODO"
  - "modules/caddyhttp/templates/tplcontext.go:484:3         dataint         U       dataint, dataerr := strconv"
  - "modules/caddyhttp/templates/tplcontext.go:484:12        dataerr         U       dataint, dataerr := strconv.ParseUint"
  - "modules/caddyhttp/templates/tplcontext.go:485:6         dataerr         U       if dataerr != nil {"
  - "modules/caddyhttp/templates/tplcontext.go:486:65        dataerr         U       cannot be parsed: %s\", dataerr.Error())"
  - "modules/caddyhttp/templates/tplcontext.go:488:25        dataint         U       return humanize.Bytes(dataint), nil"
  - "modules/caddyhttp/templates/tplcontext.go:491:3         timelayout      U       timelayout := time.RFC1123Z"
  - "modules/caddyhttp/templates/tplcontext.go:493:4         timelayout      U       timelayout = parts[1]"
  - "modules/caddyhttp/templates/tplcontext.go:496:3         dataint         U       dataint, dataerr := time.Parse"
  - "modules/caddyhttp/templates/tplcontext.go:496:12        dataerr         U       dataint, dataerr := time.Parse(timelayout"
  - "modules/caddyhttp/templates/tplcontext.go:496:34        timelayout      U       dataerr := time.Parse(timelayout, data)"
  - "modules/caddyhttp/templates/tplcontext.go:497:6         dataerr         U       if dataerr != nil {"
  - "modules/caddyhttp/templates/tplcontext.go:500:24        dataint         U       return humanize.Time(dataint), nil"
  - "modules/caddyhttp/templates/tplcontext.go:526:7         Vals            U       argVals := make([]reflect.Value"
  - "modules/caddyhttp/templates/tplcontext.go:528:8         Vals            U       argVals[i] = reflect.ValueOf"
  - "modules/caddyhttp/templates/tplcontext.go:530:10        Vals            U       returnVals := val.Call(argVals"
  - "modules/caddyhttp/templates/tplcontext.go:530:30        Vals            U       returnVals := val.Call(argVals)"
  - "modules/caddyhttp/templates/tplcontext.go:531:21        Vals            U       switch len(returnVals) {"
  - "modules/caddyhttp/templates/tplcontext.go:551:24        niladic         U       WrappedHeader wraps niladic functions so that they"
  - "modules/caddyhttp/tracing/module_test.go:11:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/tracing/module_test.go:12:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/tracing/module_test.go:12:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/tracing/module_test.go:12:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/tracing/module_test.go:13:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/tracing/module_test.go:13:43          caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/tracing/module_test.go:16:27          Caddyfile       U       TestTracing_UnmarshalCaddyfile(t *testing.T) {"
  - "modules/caddyhttp/tracing/module_test.go:20:13          caddyfile       U       d *caddyfile.Dispenser"
  - "modules/caddyhttp/tracing/module_test.go:26:7           caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/caddyhttp/tracing/module_test.go:35:7           caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/caddyhttp/tracing/module_test.go:43:7           caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/caddyhttp/tracing/module_test.go:52:26          Caddyfile       U       if err := ot.UnmarshalCaddyfile(tt.d); (err != nil)"
  - "modules/caddyhttp/tracing/module_test.go:53:24          Caddyfile       U       t.Errorf(\"UnmarshalCaddyfile() error = %v, wantErrType"
  - "modules/caddyhttp/tracing/module_test.go:57:24          Caddyfile       U       t.Errorf(\"UnmarshalCaddyfile() SpanName = %v, want"
  - "modules/caddyhttp/tracing/module_test.go:63:27          Caddyfile       U       TestTracing_UnmarshalCaddyfile_Error(t *testing.T)"
  - "modules/caddyhttp/tracing/module_test.go:104:14         caddyhttp       U       var handler caddyhttp.HandlerFunc = func(writer"
  - "modules/caddyhttp/tracing/module_test.go:105:3          traceparent     U       traceparent := request.Header.Get"
  - "modules/caddyhttp/tracing/module_test.go:105:38         Traceparent     U       request.Header.Get(\"Traceparent\")"
  - "modules/caddyhttp/tracing/module_test.go:106:6          traceparent     U       if traceparent == \"\" || strings.HasPrefix"
  - "modules/caddyhttp/tracing/module_test.go:106:45         traceparent     U       | strings.HasPrefix(traceparent, \"00-00000000000000"
  - "modules/caddyhttp/tracing/module_test.go:107:22         traceparent     U       t.Errorf(\"Invalid traceparent: %v\", traceparent)"
  - "modules/caddyhttp/tracing/module_test.go:107:40         traceparent     U       Invalid traceparent: %v\", traceparent)"
  - "modules/caddyhttp/tracing/module_test.go:135:14         caddyhttp       U       var handler caddyhttp.HandlerFunc = func(writer"
  - "modules/caddyhttp/tracing/module_test.go:136:38         Traceparent     U       request.Header.Get(\"Traceparent\")"
  - "modules/caddyhttp/tracing/module_test.go:167:14         caddyhttp       U       var handler caddyhttp.HandlerFunc = func(writer"
  - "modules/caddyhttp/tracing/module.go:9:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/tracing/module.go:10:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/tracing/module.go:10:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/tracing/module.go:10:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/tracing/module.go:11:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/tracing/module.go:11:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/tracing/module.go:11:47       httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddyhttp/tracing/module.go:12:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/tracing/module.go:12:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/tracing/module.go:17:2        httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/caddyhttp/tracing/module.go:17:57       Caddyfile           U       dlerDirective(\"tracing\", parseCaddyfile)"
  - "modules/caddyhttp/tracing/module.go:63:25       caddyhttp           U       ServeHTTP implements caddyhttp.MiddlewareHandler."
  - "modules/caddyhttp/tracing/module.go:64:75       caddyhttp           U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddyhttp/tracing/module.go:68:13       Caddyfile           U       // UnmarshalCaddyfile sets up the module from"
  - "modules/caddyhttp/tracing/module.go:68:47       Caddyfile           U       sets up the module from Caddyfile tokens. Syntax:"
  - "modules/caddyhttp/tracing/module.go:73:29       Caddyfile           U       ot *Tracing) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/tracing/module.go:73:42       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/tracing/module.go:74:26       caddyfile           U       setParameter := func(d *caddyfile.Dispenser, val *string"
  - "modules/caddyhttp/tracing/module.go:86:64       Caddyfile           U       parameter from the Caddyfile and its destination"
  - "modules/caddyhttp/tracing/module.go:108:23      httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/caddyhttp/tracing/module.go:108:46      caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/caddyhttp/tracing/module.go:117:4       caddyhttp           U       _ caddyhttp.MiddlewareHandler ="
  - "modules/caddyhttp/tracing/module.go:118:4       caddyfile           U       _ caddyfile.Unmarshaler ="
  - "modules/caddyhttp/tracing/tracer_test.go:7:14           caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/tracing/tracer.go:8:56        otelhttp            U       instrumentation/net/http/otelhttp\""
  - "modules/caddyhttp/tracing/tracer.go:9:43        autoprop            U       contrib/propagators/autoprop\""
  - "modules/caddyhttp/tracing/tracer.go:10:43       otlptrace           U       otel/exporters/otlp/otlptrace/otlptracegrpc\""
  - "modules/caddyhttp/tracing/tracer.go:10:53       otlptracegrpc       U       exporters/otlp/otlptrace/otlptracegrpc\""
  - "modules/caddyhttp/tracing/tracer.go:13:2        sdktrace            U       sdktrace \"go.opentelemetry.io"
  - "modules/caddyhttp/tracing/tracer.go:14:2        semconv             U       semconv \"go.opentelemetry.io"
  - "modules/caddyhttp/tracing/tracer.go:14:36       semconv             U       opentelemetry.io/otel/semconv/v1.17.0\""
  - "modules/caddyhttp/tracing/tracer.go:18:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/tracing/tracer.go:19:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddyhttp/tracing/tracer.go:19:43       caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddyhttp/tracing/tracer.go:30:7        caddyhttp           U       next caddyhttp.Handler"
  - "modules/caddyhttp/tracing/tracer.go:62:24       otlptracegrpc       U       traceExporter, err := otlptracegrpc.New(ctx)"
  - "modules/caddyhttp/tracing/tracer.go:67:19       autoprop            U       ot.propagators = autoprop.NewTextMapPropagator"
  - "modules/caddyhttp/tracing/tracer.go:70:3        sdktrace            U       sdktrace.WithBatcher(traceExporter"
  - "modules/caddyhttp/tracing/tracer.go:71:3        sdktrace            U       sdktrace.WithResource(res),"
  - "modules/caddyhttp/tracing/tracer.go:74:15       otelhttp            U       ot.handler = otelhttp.NewHandler(http.HandlerFunc"
  - "modules/caddyhttp/tracing/tracer.go:76:3        otelhttp            U       otelhttp.WithTracerProvider(tracerProv"
  - "modules/caddyhttp/tracing/tracer.go:77:3        otelhttp            U       otelhttp.WithPropagators(ot.propagator"
  - "modules/caddyhttp/tracing/tracer.go:78:3        otelhttp            U       otelhttp.WithSpanNameFormatter"
  - "modules/caddyhttp/tracing/tracer.go:92:3        caddyhttp           U       caddyhttp.SetVar(ctx, \"trace_id"
  - "modules/caddyhttp/tracing/tracer.go:94:29       caddyhttp           U       extra, ok := ctx.Value(caddyhttp.ExtraLogFieldsCtxKey"
  - "modules/caddyhttp/tracing/tracer.go:94:63       caddyhttp           U       ExtraLogFieldsCtxKey).(*caddyhttp.ExtraLogFields); ok"
  - "modules/caddyhttp/tracing/tracer.go:124:3       semconv             U       semconv.WebEngineName(webEngineName"
  - "modules/caddyhttp/tracing/tracer.go:125:3       semconv             U       semconv.WebEngineVersion(webEngineVer"
  - "modules/caddyhttp/tracing/tracerprovider.go:8:2         sdktrace    U       sdktrace \"go.opentelemetry.io"
  - "modules/caddyhttp/tracing/tracerprovider.go:17:26       sdktrace    U       tracerProvider *sdktrace.TracerProvider"
  - "modules/caddyhttp/tracing/tracerprovider.go:22:52       sdktrace    U       getTracerProvider(opts ...sdktrace.TracerProviderOption"
  - "modules/caddyhttp/tracing/tracerprovider.go:22:84       sdktrace    U       TracerProviderOption) *sdktrace.TracerProvider {"
  - "modules/caddyhttp/tracing/tracerprovider.go:29:22       sdktrace    U       t.tracerProvider = sdktrace.NewTracerProvider("
  - "modules/caddyhttp/vars.go:15:9          caddyhttp       U       package caddyhttp"
  - "modules/caddyhttp/vars.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddyhttp/vars.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddyhttp/vars.go:24:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/vars.go:24:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddyhttp/vars.go:70:13         Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/vars.go:70:34         caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler. Syntax"
  - "modules/caddyhttp/vars.go:76:35         Caddyfile       U       VarsMiddleware) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/vars.go:76:48         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/vars.go:139:13        Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddyhttp/vars.go:139:34        caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddyhttp/vars.go:140:32        Caddyfile       U       VarsMatcher) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddyhttp/vars.go:140:45        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddyhttp/vars.go:148:13        Errf            U       return d.Errf(\"malformed vars matcher"
  - "modules/caddyhttp/vars.go:150:3         vals            U       vals := d.RemainingArgs("
  - "modules/caddyhttp/vars.go:151:10        vals            U       if len(vals) == 0 {"
  - "modules/caddyhttp/vars.go:152:13        Errf            U       return d.Errf(\"malformed vars matcher"
  - "modules/caddyhttp/vars.go:154:37        vals            U       append((*m)[field], vals...)"
  - "modules/caddyhttp/vars.go:172:11        vals            U       for key, vals := range m {"
  - "modules/caddyhttp/vars.go:183:21        vals            U       for _, v := range vals {"
  - "modules/caddyhttp/vars.go:223:13        Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddypki/acmeserver/acmeserver.go:15:9          acmeserver      U       package acmeserver"
  - "modules/caddypki/acmeserver/acmeserver.go:20:2          weakrand        U       weakrand \"math/rand\""
  - "modules/caddypki/acmeserver/acmeserver.go:30:14         smallstep       U       \"github.com/smallstep/certificates/acme\""
  - "modules/caddypki/acmeserver/acmeserver.go:31:14         smallstep       U       \"github.com/smallstep/certificates/acme/api"
  - "modules/caddypki/acmeserver/acmeserver.go:32:24         smallstep       U       acmeNoSQL \"github.com/smallstep/certificates/acme/db"
  - "modules/caddypki/acmeserver/acmeserver.go:33:14         smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/acmeserver.go:34:14         smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/acmeserver.go:39:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/acmeserver/acmeserver.go:40:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/caddypki/acmeserver/acmeserver.go:40:43         caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/caddypki/acmeserver/acmeserver.go:41:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "modules/caddypki/acmeserver/acmeserver.go:41:43         caddypki        U       caddyserver/caddy/v2/modules/caddypki\""
  - "modules/caddypki/acmeserver/acmeserver.go:96:31         alpn            U       01\", \"dns-01\", \"tls-alpn-01\""
  - "modules/caddypki/acmeserver/acmeserver.go:128:12        caddypki        U       ash.CA = caddypki.DefaultCAID"
  - "modules/caddypki/acmeserver/acmeserver.go:128:28        CAID            U       CA = caddypki.DefaultCAID"
  - "modules/caddypki/acmeserver/acmeserver.go:147:24        caddypki        U       pkiApp := appModule.(*caddypki.PKI)"
  - "modules/caddypki/acmeserver/acmeserver.go:164:21        caddypki        U       authorityConfig := caddypki.AuthorityConfig{"
  - "modules/caddypki/acmeserver/acmeserver.go:170:35        Smallstep       U       Challenges: ash.Challenges.toSmallstepType(),"
  - "modules/caddypki/acmeserver/acmeserver.go:216:75        caddyhttp       U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/caddypki/acmeserver/acmeserver.go:266:17        bbolt           U       Type: \"bbolt\","
  - "modules/caddypki/acmeserver/acmeserver.go:302:7         nolint          U       //nolint:gosec"
  - "modules/caddypki/acmeserver/acmeserver.go:302:14        gosec           U       //nolint:gosec"
  - "modules/caddypki/acmeserver/acmeserver.go:303:27        weakrand        U       addr := ash.resolvers[weakrand.Intn(len(ash.resolvers"
  - "modules/caddypki/acmeserver/acmeserver.go:346:4         caddyhttp       U       _ caddyhttp.MiddlewareHandler ="
  - "modules/caddypki/acmeserver/caddyfile.go:15:9           acmeserver          U       package acmeserver"
  - "modules/caddypki/acmeserver/caddyfile.go:20:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/acmeserver/caddyfile.go:21:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddypki/acmeserver/caddyfile.go:21:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddypki/acmeserver/caddyfile.go:21:47          httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/caddypki/acmeserver/caddyfile.go:22:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "modules/caddypki/acmeserver/caddyfile.go:22:43          caddypki            U       caddyserver/caddy/v2/modules/caddypki\""
  - "modules/caddypki/acmeserver/caddyfile.go:26:2           httpcaddyfile       U       httpcaddyfile.RegisterDirective(\"acme"
  - "modules/caddypki/acmeserver/caddyfile.go:29:56          Caddyfile           U       server handler from Caddyfile tokens."
  - "modules/caddypki/acmeserver/caddyfile.go:47:24          httpcaddyfile       U       func parseACMEServer(h httpcaddyfile.Helper) ([]httpcaddyfile"
  - "modules/caddypki/acmeserver/caddyfile.go:47:49          httpcaddyfile       U       httpcaddyfile.Helper) ([]httpcaddyfile.ConfigValue, error)"
  - "modules/caddypki/acmeserver/caddyfile.go:61:10          caddypki            U       var ca *caddypki.CA"
  - "modules/caddypki/acmeserver/caddyfile.go:70:14          caddypki            U       ca = new(caddypki.CA)"
  - "modules/caddypki/acmeserver/caddyfile.go:83:19          Errf                U       return nil, h.Errf(\"certificate lifetime"
  - "modules/caddypki/acmeserver/caddyfile.go:89:19          Errf                U       return nil, h.Errf(\"must specify at least"
  - "modules/caddypki/acmeserver/caddyfile.go:111:21         Errf                U       return nil, h.Errf(\"unrecognized 'allow"
  - "modules/caddypki/acmeserver/caddyfile.go:111:48         subdirective        U       unrecognized 'allow' subdirective: %s\", h.Val())"
  - "modules/caddypki/acmeserver/caddyfile.go:132:21         Errf                U       return nil, h.Errf(\"unrecognized 'deny"
  - "modules/caddypki/acmeserver/caddyfile.go:132:47         subdirective        U       unrecognized 'deny' subdirective: %s\", h.Val())"
  - "modules/caddypki/acmeserver/caddyfile.go:146:18         Errf                U       return nil, h.Errf(\"unrecognized ACME server"
  - "modules/caddypki/acmeserver/caddyfile.go:150:8          Vals                U       configVals := h.NewRoute(matcherSet"
  - "modules/caddypki/acmeserver/caddyfile.go:153:16         Vals                U       return configVals, nil"
  - "modules/caddypki/acmeserver/caddyfile.go:156:22         Vals                U       return append(configVals, httpcaddyfile.ConfigValue"
  - "modules/caddypki/acmeserver/caddyfile.go:156:28         httpcaddyfile       U       return append(configVals, httpcaddyfile.ConfigValue{"
  - "modules/caddypki/acmeserver/challenges.go:1:9           acmeserver      U       package acmeserver"
  - "modules/caddypki/acmeserver/challenges.go:8:14          smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/challenges.go:17:6          ALPN            U       TLS_ALPN_01 ACMEChallenge ="
  - "modules/caddypki/acmeserver/challenges.go:17:35         alpn            U       ACMEChallenge = \"tls-alpn-01\""
  - "modules/caddypki/acmeserver/challenges.go:23:28         ALPN            U       HTTP_01, DNS_01, TLS_ALPN_01:"
  - "modules/caddypki/acmeserver/challenges.go:30:8          unmarshaller    U       // The unmarshaller first marshals the value"
  - "modules/caddypki/acmeserver/challenges.go:31:51         normaliztion    U       and lowercase it for normaliztion. The"
  - "modules/caddypki/acmeserver/challenges.go:60:27         Smallstep       U       c ACMEChallenges) toSmallstepType() []provisioner"
  - "modules/caddypki/acmeserver/policy_test.go:1:9          acmeserver      U       package acmeserver"
  - "modules/caddypki/acmeserver/policy_test.go:7:14         smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/policy_test.go:8:14         smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/policy.go:1:9           acmeserver      U       package acmeserver"
  - "modules/caddypki/acmeserver/policy.go:4:14          smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/policy.go:5:14          smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/acmeserver/policy.go:11:7          Smallstep       U       // on Smallstep website for the evaluation"
  - "modules/caddypki/adminapi.go:15:9           caddypki        U       package caddypki"
  - "modules/caddypki/adminapi.go:25:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/adminapi.go:198:19         CAID            U       if id != DefaultCAID {"
  - "modules/caddypki/ca.go:15:9         caddypki        U       package caddypki"
  - "modules/caddypki/ca.go:28:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddypki/ca.go:28:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddypki/ca.go:29:14        smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddypki/ca.go:30:14        smallstep       U       \"github.com/smallstep/certificates/db\""
  - "modules/caddypki/ca.go:31:14        smallstep       U       \"github.com/smallstep/truststore\""
  - "modules/caddypki/ca.go:31:24        truststore      U       github.com/smallstep/truststore\""
  - "modules/caddypki/ca.go:34:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/ca.go:78:14        certmagic       U       storage certmagic.Storage"
  - "modules/caddypki/ca.go:193:31       Smallstep       U       NewAuthority returns a new Smallstep-powered signing authority"
  - "modules/caddypki/ca.go:279:18       certmagic       U       rootKey, err = certmagic.PEMDecodePrivateKey"
  - "modules/caddypki/ca.go:303:21       certmagic       U       rootKeyPEM, err := certmagic.PEMEncodePrivateKey"
  - "modules/caddypki/ca.go:341:19       certmagic       U       interKey, err = certmagic.PEMDecodePrivateKey"
  - "modules/caddypki/ca.go:417:9        truststore      U       return truststore.Install(ca.root,"
  - "modules/caddypki/ca.go:418:3        truststore      U       truststore.WithDebug(),"
  - "modules/caddypki/ca.go:419:3        truststore      U       truststore.WithFirefox(),"
  - "modules/caddypki/ca.go:420:3        truststore      U       truststore.WithJava(),"
  - "modules/caddypki/ca.go:435:12       CAID            U       // DefaultCAID is the default CA ID"
  - "modules/caddypki/ca.go:436:9        CAID            U       DefaultCAID = \"local\""
  - "modules/caddypki/certificates.go:15:9           caddypki    U       package caddypki"
  - "modules/caddypki/certificates.go:22:21          keyutil     U       \"go.step.sm/crypto/keyutil\""
  - "modules/caddypki/certificates.go:51:16          keyutil     U       signer, err = keyutil.GenerateDefaultSigner"
  - "modules/caddypki/command.go:15:9        caddypki        U       package caddypki"
  - "modules/caddypki/command.go:26:14       smallstep       U       \"github.com/smallstep/truststore\""
  - "modules/caddypki/command.go:26:24       truststore      U       github.com/smallstep/truststore\""
  - "modules/caddypki/command.go:29:2        caddycmd        U       caddycmd \"github.com/caddyserver"
  - "modules/caddypki/command.go:29:23       caddyserver     U       caddycmd \"github.com/caddyserver/caddy/v2/cmd\""
  - "modules/caddypki/command.go:31:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/command.go:35:2        caddycmd        U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddypki/command.go:35:27       caddycmd        U       caddycmd.RegisterCommand(caddycmd.Command{"
  - "modules/caddypki/command.go:62:15       caddycmd        U       cmd.RunE = caddycmd.WrapCommandFuncForCobra"
  - "modules/caddypki/command.go:66:2        caddycmd        U       caddycmd.RegisterCommand(caddycmd"
  - "modules/caddypki/command.go:83:36       behaviour       U       the admin API (default behaviour)."
  - "modules/caddypki/command.go:110:17      CAID            U       caID = DefaultCAID"
  - "modules/caddypki/command.go:166:9       truststore      U       err = truststore.UninstallFile(certFile"
  - "modules/caddypki/command.go:167:4       truststore      U       truststore.WithDebug(),"
  - "modules/caddypki/command.go:168:4       truststore      U       truststore.WithFirefox(),"
  - "modules/caddypki/command.go:169:4       truststore      U       truststore.WithJava())"
  - "modules/caddypki/command.go:179:17      CAID            U       caID = DefaultCAID"
  - "modules/caddypki/crypto.go:15:9         caddypki        U       package caddypki"
  - "modules/caddypki/crypto.go:25:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddypki/crypto.go:25:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddypki/crypto.go:92:15        certmagic       U       key, err = certmagic.PEMDecodePrivateKey"
  - "modules/caddypki/maintain.go:15:9           caddypki    U       package caddypki"
  - "modules/caddypki/pki.go:15:9        caddypki        U       package caddypki"
  - "modules/caddypki/pki.go:22:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddypki/pki.go:73:57       CAID            U       CA '%s': %v\", DefaultCAID, err)"
  - "modules/caddypki/pki.go:86:15       CAID            U       p.CAs[DefaultCAID] = new(CA)"
  - "modules/caddypki/pki.go:87:22       CAID            U       return p.CAs[DefaultCAID].Provision(ctx, DefaultCAID"
  - "modules/caddypki/pki.go:87:50       CAID            U       Provision(ctx, DefaultCAID, p.log)"
  - "modules/caddypki/pki.go:95:69       unconfigured    U       installation disabled; unconfigured clients may show warnings"
  - "modules/caddypki/pki.go:130:19      CAID            U       if id != DefaultCAID {"
  - "modules/caddytls/acmeissuer.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/acmeissuer.go:29:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/acmeissuer.go:29:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/acmeissuer.go:30:14        caddyserver     U       \"github.com/caddyserver/zerossl\""
  - "modules/caddytls/acmeissuer.go:30:26        zerossl         U       github.com/caddyserver/zerossl\""
  - "modules/caddytls/acmeissuer.go:31:14        mholt           U       \"github.com/mholt/acmez/v2/acme\""
  - "modules/caddytls/acmeissuer.go:31:20        acmez           U       \"github.com/mholt/acmez/v2/acme\""
  - "modules/caddytls/acmeissuer.go:34:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/acmeissuer.go:35:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/acmeissuer.go:35:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddytls/acmeissuer.go:36:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/acmeissuer.go:36:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/acmeissuer.go:36:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/acmeissuer.go:58:27        mothership      U       not sent to any Caddy mothership or used for any purpose"
  - "modules/caddytls/acmeissuer.go:103:11       certmagic       U       template certmagic.ACMEIssuer // set at"
  - "modules/caddytls/acmeissuer.go:104:12       certmagic       U       magic *certmagic.Config // set at"
  - "modules/caddytls/acmeissuer.go:105:12       certmagic       U       issuer *certmagic.ACMEIssuer // set at"
  - "modules/caddytls/acmeissuer.go:146:32       certmagic       U       Challenges.DNS.solver = &certmagic.DNS01Solver{"
  - "modules/caddytls/acmeissuer.go:199:21       TLSALPN         U       if iss.Challenges.TLSALPN != nil {"
  - "modules/caddytls/acmeissuer.go:200:20       TLSALPN         U       template.DisableTLSALPNChallenge = iss.Challenges"
  - "modules/caddytls/acmeissuer.go:200:54       TLSALPN         U       LPNChallenge = iss.Challenges.TLSALPN.Disabled"
  - "modules/caddytls/acmeissuer.go:201:16       TLSALPN         U       template.AltTLSALPNPort = iss.Challenges"
  - "modules/caddytls/acmeissuer.go:201:45       TLSALPN         U       tTLSALPNPort = iss.Challenges.TLSALPN.AlternatePort"
  - "modules/caddytls/acmeissuer.go:224:57       SSLEAB          U       err = iss.generateZeroSSLEABCredentials(ctx, acct"
  - "modules/caddytls/acmeissuer.go:273:16       SSLEAB          U       // generateZeroSSLEABCredentials generates"
  - "modules/caddytls/acmeissuer.go:274:37       usedif          U       issuer. It should only be usedif the CA endpoint is ZeroSSL"
  - "modules/caddytls/acmeissuer.go:275:36       SSLEAB          U       ACMEIssuer) generateZeroSSLEABCredentials(ctx context"
  - "modules/caddytls/acmeissuer.go:285:14       zerossl         U       endpoint := zerossl.BaseURL + \"/acme/eab"
  - "modules/caddytls/acmeissuer.go:308:3        EABKID          U       EABKID string `json:\"eab"
  - "modules/caddytls/acmeissuer.go:309:3        EABHMAC         U       EABHMACKey string `json:\"eab"
  - "modules/caddytls/acmeissuer.go:324:75       EABKID          U       String(\"key_id\", result.EABKID))"
  - "modules/caddytls/acmeissuer.go:327:18       EABKID          U       KeyID: result.EABKID,"
  - "modules/caddytls/acmeissuer.go:328:18       EABHMAC         U       MACKey: result.EABHMACKey,"
  - "modules/caddytls/acmeissuer.go:332:13       Caddyfile       U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddytls/acmeissuer.go:332:36       Caddyfile       U       marshalCaddyfile deserializes Caddyfile tokens into iss."
  - "modules/caddytls/acmeissuer.go:340:16       tlsalpn         U       // disable_tlsalpn_challenge"
  - "modules/caddytls/acmeissuer.go:342:12       tlsalpn         U       // alt_tlsalpn_port <port>"
  - "modules/caddytls/acmeissuer.go:356:33       Caddyfile       U       ACMEIssuer) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/acmeissuer.go:356:46       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/acmeissuer.go:375:14       Errf            U       return d.Errf(\"invalid lifetime %s"
  - "modules/caddytls/acmeissuer.go:378:14       Errf            U       return d.Errf(\"lifetime must be >"
  - "modules/caddytls/acmeissuer.go:384:14       Errf            U       return d.Errf(\"directory is already"
  - "modules/caddytls/acmeissuer.go:407:14       Errf            U       return d.Errf(\"invalid timeout duration"
  - "modules/caddytls/acmeissuer.go:423:17       tlsalpn         U       case \"disable_tlsalpn_challenge\":"
  - "modules/caddytls/acmeissuer.go:441:14       Errf            U       return d.Errf(\"invalid port %s: %v"
  - "modules/caddytls/acmeissuer.go:451:13       tlsalpn         U       case \"alt_tlsalpn_port\":"
  - "modules/caddytls/acmeissuer.go:487:16       caddyfile       U       unm, err := caddyfile.UnmarshalModule(d,"
  - "modules/caddytls/acmeissuer.go:491:37       caddyconfig     U       Challenges.DNS.ProviderRaw = caddyconfig.JSONModuleObject(unm"
  - "modules/caddytls/acmeissuer.go:576:27       Caddyfile       U       chainPref, err := ParseCaddyfilePreferredChainsOptions"
  - "modules/caddytls/acmeissuer.go:589:11       Caddyfile       U       func ParseCaddyfilePreferredChainsOptions"
  - "modules/caddytls/acmeissuer.go:589:46       caddyfile       U       filePreferredChainsOptions(d *caddyfile.Dispenser) (*ChainPreference"
  - "modules/caddytls/acmeissuer.go:664:4        caddyfile       U       _ caddyfile.Unmarshaler ="
  - "modules/caddytls/automation.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/automation.go:26:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/automation.go:26:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/automation.go:27:14        mholt           U       \"github.com/mholt/acmez/v2\""
  - "modules/caddytls/automation.go:27:20        acmez           U       \"github.com/mholt/acmez/v2\""
  - "modules/caddytls/automation.go:30:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/automation.go:41:40        hostnames       U       you don't know all the hostnames at"
  - "modules/caddytls/automation.go:89:21        hostnames       U       // Which subjects (hostnames or IP addresses) this"
  - "modules/caddytls/automation.go:101:5        zerossl         U       // zerossl."
  - "modules/caddytls/automation.go:164:50       certmagic       U       populate an underlying certmagic.Config's"
  - "modules/caddytls/automation.go:167:13       certmagic       U       Issuers []certmagic.Issuer `json:\"-\"`"
  - "modules/caddytls/automation.go:168:13       certmagic       U       Managers []certmagic.Manager `json:\"-\"`"
  - "modules/caddytls/automation.go:171:12       certmagic       U       magic *certmagic.Config"
  - "modules/caddytls/automation.go:209:3        vals            U       vals, err := tlsApp.ctx.LoadModule"
  - "modules/caddytls/automation.go:213:30       vals            U       getCertVal := range vals.([]any) {"
  - "modules/caddytls/automation.go:433:5        TLSALPN         U       // TLSALPN configures the ACME"
  - "modules/caddytls/automation.go:433:37       ALPN            U       configures the ACME TLS-ALPN challenge."
  - "modules/caddytls/automation.go:436:2        TLSALPN         U       TLSALPN *TLSALPNChallengeConfig"
  - "modules/caddytls/automation.go:436:11       TLSALPN         U       TLSALPN *TLSALPNChallengeConfig `json"
  - "modules/caddytls/automation.go:436:45       alpn            U       LPNChallengeConfig `json:\"tls-alpn,omitempty\"`"
  - "modules/caddytls/automation.go:468:4        TLSALPN         U       // TLSALPNChallengeConfig configures"
  - "modules/caddytls/automation.go:468:51       ALPN            U       configures the ACME TLS-ALPN challenge."
  - "modules/caddytls/automation.go:469:6        TLSALPN         U       type TLSALPNChallengeConfig struct"
  - "modules/caddytls/automation.go:470:22       ALPN            U       // If true, the TLS-ALPN challenge will be disabled"
  - "modules/caddytls/automation.go:474:34       ALPN            U       challenge. Note that the TLS-ALPN challenge port"
  - "modules/caddytls/automation.go:477:18       ALPN            U       // standard TLS-ALPN challenge port to this"
  - "modules/caddytls/automation.go:511:9        acmez           U       solver acmez.Solver"
  - "modules/caddytls/capools_test.go:1:9            caddytls            U       package caddytls"
  - "modules/caddytls/capools_test.go:10:14          caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/capools_test.go:11:14          caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/capools_test.go:11:35          caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/capools_test.go:11:47          caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/capools_test.go:12:16          caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/filestorage"
  - "modules/caddytls/capools_test.go:12:45          filestorage         U       caddyserver/caddy/v2/modules/filestorage\""
  - "modules/caddytls/capools_test.go:17:28          caddytest           U       cert_file_1 = \"../../caddytest/caddy.ca.cer\""
  - "modules/caddytls/capools_test.go:20:31          Caddyfile           U       TestInlineCAPoolUnmarshalCaddyfile(t *testing.T) {"
  - "modules/caddytls/capools_test.go:22:6           caddyfile           U       d *caddyfile.Dispenser"
  - "modules/caddytls/capools_test.go:31:26          certificatest       U       name: \"configuring no certificatest produces an error\","
  - "modules/caddytls/capools_test.go:33:8           caddyfile           U       d: caddyfile.NewTestDispenser(`"
  - "modules/caddytls/capools_test.go:43:8           caddyfile           U       d: caddyfile.NewTestDispenser(fmt"
  - "modules/caddytls/capools_test.go:52:8           caddyfile           U       d: caddyfile.NewTestDispenser(fmt"
  - "modules/caddytls/capools_test.go:95:27          Caddyfile           U       err := icp.UnmarshalCaddyfile(tt.args.d); (err !="
  - "modules/caddytls/capools_test.go:96:37          Caddyfile           U       InlineCAPool.UnmarshalCaddyfile() error = %v, wantErr"
  - "modules/caddytls/capools_test.go:99:37          Caddyfile           U       InlineCAPool.UnmarshalCaddyfile() = %v, want %v\", icp"
  - "modules/caddytls/capools_test.go:105:29         Caddyfile           U       TestFileCAPoolUnmarshalCaddyfile(t *testing.T) {"
  - "modules/caddytls/capools_test.go:116:26         certificatest       U       name: \"configuring no certificatest produces an error\","
  - "modules/caddytls/capools_test.go:195:4          fcap                U       fcap := &FileCAPool{}"
  - "modules/caddytls/capools_test.go:196:14         fcap                U       if err := fcap.UnmarshalCaddyfile(tt"
  - "modules/caddytls/capools_test.go:199:55         fcap                U       DeepEqual(&tt.expected, fcap) {"
  - "modules/caddytls/capools_test.go:200:63         fcap                U       alCaddyfile() = %v, want %v\", fcap, tt.expected)"
  - "modules/caddytls/capools_test.go:217:26         certificatest       U       name: \"configuring no certificatest produces an error\","
  - "modules/caddytls/capools_test.go:289:4          pkir                U       pkir := &PKIRootCAPool{}"
  - "modules/caddytls/capools_test.go:290:14         pkir                U       if err := pkir.UnmarshalCaddyfile(tt"
  - "modules/caddytls/capools_test.go:293:55         pkir                U       DeepEqual(&tt.expected, pkir) {"
  - "modules/caddytls/capools_test.go:294:66         pkir                U       alCaddyfile() = %v, want %v\", pkir, tt.expected)"
  - "modules/caddytls/capools_test.go:311:26         certificatest       U       name: \"configuring no certificatest produces an error\","
  - "modules/caddytls/capools.go:1:9         caddytls            U       package caddytls"
  - "modules/caddytls/capools.go:15:14       caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/capools.go:15:26       certmagic           U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/capools.go:17:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/capools.go:18:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/capools.go:18:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddytls/capools.go:19:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/capools.go:19:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/capools.go:19:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/capools.go:20:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "modules/caddytls/capools.go:20:43       caddypki            U       caddyserver/caddy/v2/modules/caddypki\""
  - "modules/caddytls/capools.go:82:35       Caddyfile           U       InlineCAPool) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/capools.go:82:48       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/capools.go:92:13       Errf                U       return d.Errf(\"unrecognized directive"
  - "modules/caddytls/capools.go:148:7       fcap                U       func (fcap *FileCAPool) UnmarshalCaddyfi"
  - "modules/caddytls/capools.go:148:34      Caddyfile           U       FileCAPool) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/capools.go:148:47      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/capools.go:150:2       fcap                U       fcap.TrustedCACertPEMFiles"
  - "modules/caddytls/capools.go:150:38      fcap                U       rustedCACertPEMFiles = append(fcap.TrustedCACertPEMFiles"
  - "modules/caddytls/capools.go:154:4       fcap                U       fcap.TrustedCACertPEMFiles"
  - "modules/caddytls/capools.go:154:40      fcap                U       rustedCACertPEMFiles = append(fcap.TrustedCACertPEMFiles"
  - "modules/caddytls/capools.go:156:13      Errf                U       return d.Errf(\"unrecognized directive"
  - "modules/caddytls/capools.go:174:10      caddypki            U       ca []*caddypki.CA"
  - "modules/caddytls/capools.go:194:18      caddypki            U       pki := pkiApp.(*caddypki.PKI)"
  - "modules/caddytls/capools.go:219:7       pkir                U       func (pkir *PKIRootCAPool) UnmarshalCadd"
  - "modules/caddytls/capools.go:219:37      Caddyfile           U       PKIRootCAPool) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/capools.go:219:50      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/capools.go:221:2       pkir                U       pkir.Authority = append(pkir"
  - "modules/caddytls/capools.go:221:26      pkir                U       pkir.Authority = append(pkir.Authority, d.RemainingArgs"
  - "modules/caddytls/capools.go:225:4       pkir                U       pkir.Authority = append(pkir"
  - "modules/caddytls/capools.go:225:28      pkir                U       pkir.Authority = append(pkir.Authority, d.RemainingArgs"
  - "modules/caddytls/capools.go:227:13      Errf                U       return d.Errf(\"unrecognized directive"
  - "modules/caddytls/capools.go:246:10      caddypki            U       ca []*caddypki.CA"
  - "modules/caddytls/capools.go:266:18      caddypki            U       pki := pkiApp.(*caddypki.PKI)"
  - "modules/caddytls/capools.go:290:44      Caddyfile           U       IIntermediateCAPool) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/capools.go:290:57      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/capools.go:298:13      Errf                U       return d.Errf(\"unrecognized directive"
  - "modules/caddytls/capools.go:321:10      certmagic           U       storage certmagic.Storage"
  - "modules/caddytls/capools.go:378:33      Caddyfile           U       StoragePool) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/capools.go:398:14      Errf                U       return d.Errf(\"module %s is not a"
  - "modules/caddytls/capools.go:400:20      caddyconfig         U       sp.StorageRaw = caddyconfig.JSONModuleObject(storage"
  - "modules/caddytls/capools.go:416:50      caddyhttp           U       modifications: modules/caddyhttp/reverseproxy/httptransport"
  - "modules/caddytls/capools.go:416:73      httptransport       U       caddyhttp/reverseproxy/httptransport.go"
  - "modules/caddytls/capools.go:463:39      caddytls            U       \"module %s is not a caddytls.CA\", modID)"
  - "modules/caddytls/capools.go:465:14      caddyconfig         U       t.CARaw = caddyconfig.JSONModuleObject(ca"
  - "modules/caddytls/capools.go:501:50      caddyhttp           U       modifications: modules/caddyhttp/reverseproxy/httptransport"
  - "modules/caddytls/capools.go:501:73      httptransport       U       caddyhttp/reverseproxy/httptransport.go"
  - "modules/caddytls/capools.go:593:3       pembs               U       pembs, err := io.ReadAll(res"
  - "modules/caddytls/capools.go:598:33      pembs               U       caPool.AppendCertsFromPEM(pembs) {"
  - "modules/caddytls/certmanagers.go:1:9            caddytls        U       package caddytls"
  - "modules/caddytls/certmanagers.go:12:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/certmanagers.go:12:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/certmanagers.go:13:14          tailscale       U       \"github.com/tailscale/tscert\""
  - "modules/caddytls/certmanagers.go:13:24          tscert          U       github.com/tailscale/tscert\""
  - "modules/caddytls/certmanagers.go:16:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/certmanagers.go:17:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/certmanagers.go:17:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/certmanagers.go:17:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/certmanagers.go:21:23          Tailscale       U       caddy.RegisterModule(Tailscale{})"
  - "modules/caddytls/certmanagers.go:25:4           Tailscale       U       // Tailscale is a module that can"
  - "modules/caddytls/certmanagers.go:25:67          Tailscale       U       certificates from the local Tailscale process."
  - "modules/caddytls/certmanagers.go:26:6           Tailscale       U       type Tailscale struct {"
  - "modules/caddytls/certmanagers.go:31:7           Tailscale       U       func (Tailscale) CaddyModule() caddy"
  - "modules/caddytls/certmanagers.go:33:29          tailscale       U       tls.get_certificate.tailscale\","
  - "modules/caddytls/certmanagers.go:51:9           tscert          U       return tscert.GetCertificateWithContext"
  - "modules/caddytls/certmanagers.go:56:59          tailscale       U       ToLower(hello.ServerName), tailscaleDomainAliasEnding) {"
  - "modules/caddytls/certmanagers.go:59:17          tscert          U       status, err := tscert.GetStatus(ctx)"
  - "modules/caddytls/certmanagers.go:64:6           certmagic       U       if certmagic.MatchWildcard(hello"
  - "modules/caddytls/certmanagers.go:71:13          Caddyfile       U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddytls/certmanagers.go:71:36          Caddyfile       U       marshalCaddyfile deserializes Caddyfile tokens into ts."
  - "modules/caddytls/certmanagers.go:73:8           tailscale       U       // ... tailscale"
  - "modules/caddytls/certmanagers.go:74:27          Caddyfile       U       Tailscale) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/certmanagers.go:74:40          caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/certmanagers.go:82:4           tailscale       U       // tailscaleDomainAliasEnding is"
  - "modules/caddytls/certmanagers.go:176:13         Caddyfile       U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddytls/certmanagers.go:176:36         Caddyfile       U       marshalCaddyfile deserializes Caddyfile tokens into ts."
  - "modules/caddytls/certmanagers.go:179:50         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/certmanagers.go:198:4          certmagic       U       _ certmagic.Manager = (*Tailscale"
  - "modules/caddytls/certmanagers.go:200:4          caddyfile       U       _ caddyfile.Unmarshaler = (*Tailscale"
  - "modules/caddytls/certmanagers.go:202:4          certmagic       U       _ certmagic.Manager = (*HTTPCertGette"
  - "modules/caddytls/certmanagers.go:204:4          caddyfile       U       _ caddyfile.Unmarshaler = (*HTTPCertGette"
  - "modules/caddytls/certselection.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/certselection.go:24:14         caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/certselection.go:24:26         certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/certselection.go:26:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/certselection.go:26:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/certselection.go:26:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/certselection.go:50:33         certmagic       U       SelectCertificate implements certmagic.CertificateSelector"
  - "modules/caddytls/certselection.go:55:92         certmagic       U       ClientHelloInfo, choices []certmagic.Certificate) (certmagic"
  - "modules/caddytls/certselection.go:55:116        certmagic       U       certmagic.Certificate) (certmagic.Certificate, error)"
  - "modules/caddytls/certselection.go:56:19         certmagic       U       viable := make([]certmagic.Certificate, 0, len"
  - "modules/caddytls/certselection.go:63:68         gosec           U       iteration variable (gosec warning)"
  - "modules/caddytls/certselection.go:127:13        Caddyfile       U       // UnmarshalCaddyfile sets up the CustomCertSelecti"
  - "modules/caddytls/certselection.go:127:66        Caddyfile       U       ustomCertSelectionPolicy from Caddyfile tokens. Syntax:"
  - "modules/caddytls/certselection.go:136:46        Caddyfile       U       CertSelectionPolicy) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/certselection.go:136:59        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/certselection.go:160:14        Errf            U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/certselection.go:167:14        Errf            U       return d.Errf(\"parsing %s option"
  - "modules/caddytls/certselection.go:178:15        Errf            U       return d.Errf(\"parsing %s option"
  - "modules/caddytls/certselection.go:193:13        Errf            U       return d.Errf(\"malformed %s option"
  - "modules/caddytls/certselection.go:224:7         caddyfile       U       var _ caddyfile.Unmarshaler = (*CustomCertSel"
  - "modules/caddytls/cf.go:1:12         cfgo        U       //go:build cfgo"
  - "modules/caddytls/cf.go:3:9          caddytls    U       package caddytls"
  - "modules/caddytls/connpolicy_test.go:15:9        caddytls        U       package caddytls"
  - "modules/caddytls/connpolicy_test.go:23:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/connpolicy_test.go:23:35       caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/connpolicy_test.go:23:47       caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/connpolicy_test.go:26:39       Caddyfile       U       tClientAuthenticationUnmarshalCaddyfileWithDirectiveName(t"
  - "modules/caddytls/connpolicy_test.go:28:34       caddytest       U       cert_file_1 = \"../../caddytest/caddy.ca.cer\""
  - "modules/caddytls/connpolicy_test.go:30:6        caddyfile       U       d *caddyfile.Dispenser"
  - "modules/caddytls/connpolicy_test.go:41:8        caddyfile       U       d: caddyfile.NewTestDispenser("
  - "modules/caddytls/connpolicy_test.go:51:8        caddyfile       U       d: caddyfile.NewTestDispenser("
  - "modules/caddytls/connpolicy_test.go:62:8        caddyfile       U       d: caddyfile.NewTestDispenser("
  - "modules/caddytls/connpolicy_test.go:271:26      Caddyfile       U       if err := ca.UnmarshalCaddyfile(tt.args.d); (err !="
  - "modules/caddytls/connpolicy_test.go:272:45      Caddyfile       U       ClientAuthentication.UnmarshalCaddyfile() error = %v, wantErr"
  - "modules/caddytls/connpolicy_test.go:276:45      Caddyfile       U       ClientAuthentication.UnmarshalCaddyfile() = %v, want %v\", ca"
  - "modules/caddytls/connpolicy.go:15:9         caddytls            U       package caddytls"
  - "modules/caddytls/connpolicy.go:29:14        mholt               U       \"github.com/mholt/acmez/v2\""
  - "modules/caddytls/connpolicy.go:29:20        acmez               U       \"github.com/mholt/acmez/v2\""
  - "modules/caddytls/connpolicy.go:32:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/connpolicy.go:33:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/connpolicy.go:33:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddytls/connpolicy.go:34:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/connpolicy.go:34:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/connpolicy.go:34:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/connpolicy.go:56:13        Iface               U       for _, modIface := range mods.(map[string"
  - "modules/caddytls/connpolicy.go:57:47        Iface               U       append(cp[i].matchers, modIface.(ConnectionMatcher)"
  - "modules/caddytls/connpolicy.go:61:10        ALPN                U       if pol.ALPN == nil {"
  - "modules/caddytls/connpolicy.go:62:8         ALPN                U       pol.ALPN = append(pol.ALPN, defaultALP"
  - "modules/caddytls/connpolicy.go:62:26        ALPN                U       pol.ALPN = append(pol.ALPN, defaultALPN...)"
  - "modules/caddytls/connpolicy.go:62:39        ALPN                U       append(pol.ALPN, defaultALPN...)"
  - "modules/caddytls/connpolicy.go:153:18       ALPN                U       // Negotiation (ALPN) during the handshake"
  - "modules/caddytls/connpolicy.go:154:23       alpn                U       ALPN []string `json:\"alpn,omitempty\"`"
  - "modules/caddytls/connpolicy.go:184:20       SSLKEYLOGFILE       U       // Also known as \"SSLKEYLOGFILE\", TLS secrets will be"
  - "modules/caddytls/connpolicy.go:186:5        Wireshark           U       // Wireshark and other tools. This"
  - "modules/caddytls/connpolicy.go:206:8        Iface               U       tlsAppIface, err := ctx.App(\"tls"
  - "modules/caddytls/connpolicy.go:210:18       Iface               U       tlsApp := tlsAppIface.(*TLS)"
  - "modules/caddytls/connpolicy.go:219:55       certmagic           U       works: we pre-build certmagic configs"
  - "modules/caddytls/connpolicy.go:220:53       certmagic           U       faster. Unfortunately, certmagic configs are"
  - "modules/caddytls/connpolicy.go:223:12       certmagic           U       // of a certmagic config that come from"
  - "modules/caddytls/connpolicy.go:225:23       certmagic           U       // builds the base certmagic config. Since the pre"
  - "modules/caddytls/connpolicy.go:230:9        certmagic           U       // a certmagic config for each combination"
  - "modules/caddytls/connpolicy.go:289:6        alpn                U       var alpnFound bool"
  - "modules/caddytls/connpolicy.go:291:11       acmez               U       if a == acmez.ACMETLS1Protocol {"
  - "modules/caddytls/connpolicy.go:291:17       ACMETLS             U       if a == acmez.ACMETLS1Protocol {"
  - "modules/caddytls/connpolicy.go:292:4        alpn                U       alpnFound = true"
  - "modules/caddytls/connpolicy.go:296:6        alpn                U       if !alpnFound && (cfg.NextProtos"
  - "modules/caddytls/connpolicy.go:297:43       acmez               U       append(cfg.NextProtos, acmez.ACMETLS1Protocol)"
  - "modules/caddytls/connpolicy.go:297:49       ACMETLS             U       cfg.NextProtos, acmez.ACMETLS1Protocol)"
  - "modules/caddytls/connpolicy.go:332:11       destructable        U       return destructableWriter{w}, err"
  - "modules/caddytls/connpolicy.go:366:13       Caddyfile           U       // UnmarshalCaddyfile sets up the ConnectionPolicy"
  - "modules/caddytls/connpolicy.go:366:57       Caddyfile           U       ConnectionPolicy from Caddyfile tokens. Syntax:"
  - "modules/caddytls/connpolicy.go:369:5        alpn                U       // alpn <values"
  - "modules/caddytls/connpolicy.go:388:38       Caddyfile           U       ConnectionPolicy) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/connpolicy.go:388:51       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/connpolicy.go:408:14       Errf                U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/connpolicy.go:411:25       Caddyfile           U       if err := p.UnmarshalCaddyfile(d.NewFromNextSegment"
  - "modules/caddytls/connpolicy.go:417:14       Errf                U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/connpolicy.go:420:26       Caddyfile           U       if err := ca.UnmarshalCaddyfile(d.NewFromNextSegment"
  - "modules/caddytls/connpolicy.go:436:14       Errf                U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/connpolicy.go:444:14       Errf                U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/connpolicy.go:449:14       Errf                U       return d.Errf(\"duplicate %s option"
  - "modules/caddytls/connpolicy.go:567:55       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/connpolicy.go:604:4        ders                U       ders, err := convertPEMFilesToDER"
  - "modules/caddytls/connpolicy.go:608:50       ders                U       append(ca.TrustedCACerts, ders...)"
  - "modules/caddytls/connpolicy.go:614:4        ders                U       ders, err := convertPEMFilesToDER"
  - "modules/caddytls/connpolicy.go:618:54       ders                U       ca.TrustedLeafCerts, ders...)"
  - "modules/caddytls/connpolicy.go:627:16       caddyfile           U       mod, err := caddyfile.UnmarshalModule(d,"
  - "modules/caddytls/connpolicy.go:635:15       caddyconfig         U       ca.CARaw = caddyconfig.JSONModuleObject(caMod"
  - "modules/caddytls/connpolicy.go:643:16       caddyfile           U       unm, err := caddyfile.UnmarshalModule(d, modID"
  - "modules/caddytls/connpolicy.go:650:41       caddytls            U       module '%s' is not a caddytls.ClientCertificateVerifier"
  - "modules/caddytls/connpolicy.go:652:46       caddyconfig         U       append(ca.VerifiersRaw, caddyconfig.JSONModuleObject(unm"
  - "modules/caddytls/connpolicy.go:654:27       subdirective        U       return d.Errf(\"unknown subdirective for client_auth: %s"
  - "modules/caddytls/connpolicy.go:662:14       caddyconfig         U       ca.CARaw = caddyconfig.JSONModuleObject(fileMod"
  - "modules/caddytls/connpolicy.go:673:6        ders                U       var ders []string"
  - "modules/caddytls/connpolicy.go:691:7        clientauth          U       func (clientauth *ClientAuthentication"
  - "modules/caddytls/connpolicy.go:692:9        clientauth          U       if len(clientauth.CARaw) > 0 && (len(clientauth"
  - "modules/caddytls/connpolicy.go:692:39       clientauth          U       clientauth.CARaw) > 0 && (len(clientauth.TrustedCACerts) > 0"
  - "modules/caddytls/connpolicy.go:692:77       clientauth          U       TrustedCACerts) > 0 || len(clientauth.TrustedCACertPEMFiles"
  - "modules/caddytls/connpolicy.go:697:9        clientauth          U       if len(clientauth.TrustedCACertPEMFiles"
  - "modules/caddytls/connpolicy.go:742:46       clientauth's        U       sets up cfg to enforce clientauth's configuration."
  - "modules/caddytls/connpolicy.go:877:13       Certloaders         U       trustedLeafCertloaders := []LeafCertificateLoader"
  - "modules/caddytls/connpolicy.go:879:14       Certloaders         U       trustedLeafCertloaders = append(trustedLeafCertloade"
  - "modules/caddytls/connpolicy.go:879:46       Certloaders         U       = append(trustedLeafCertloaders, loader.(LeafCertificateLoade"
  - "modules/caddytls/connpolicy.go:882:36       Certloaders         U       := range trustedLeafCertloaders {"
  - "modules/caddytls/connpolicy.go:912:33       unmarshalable       U       PublicKeyAlgorithm is a JSON-unmarshalable wrapper type."
  - "modules/caddytls/connpolicy.go:946:6        destructable        U       type destructableWriter struct{ *os.File"
  - "modules/caddytls/connpolicy.go:948:9        destructable        U       func (d destructableWriter) Destruct() error"
  - "modules/caddytls/distributedstek/distributedstek.go:15:12       distributedstek     U       // Package distributedstek provides TLS session"
  - "modules/caddytls/distributedstek/distributedstek.go:23:9        distributedstek     U       package distributedstek"
  - "modules/caddytls/distributedstek/distributedstek.go:36:14       caddyserver         U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/distributedstek/distributedstek.go:36:26       certmagic           U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/distributedstek/distributedstek.go:38:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/distributedstek/distributedstek.go:39:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddytls/distributedstek/distributedstek.go:39:43       caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddytls/distributedstek/distributedstek.go:46:38       STEK                U       implements a distributed STEK provider. This"
  - "modules/caddytls/distributedstek/distributedstek.go:56:13       certmagic           U       storage certmagic.Storage"
  - "modules/caddytls/distributedstek/distributedstek.go:57:2        stek                U       stekConfig *caddytls.SessionTicket"
  - "modules/caddytls/distributedstek/distributedstek.go:57:14       caddytls            U       stekConfig *caddytls.SessionTicketService"
  - "modules/caddytls/distributedstek/distributedstek.go:65:13       stek                U       ID: \"tls.stek.distributed\","
  - "modules/caddytls/distributedstek/distributedstek.go:96:39       caddytls            U       Initialize(config *caddytls.SessionTicketService"
  - "modules/caddytls/distributedstek/distributedstek.go:98:4        stek                U       s.stekConfig = config"
  - "modules/caddytls/distributedstek/distributedstek.go:100:2       dstek               U       dstek, err := s.getSTEK()"
  - "modules/caddytls/distributedstek/distributedstek.go:100:21      STEK                U       dstek, err := s.getSTEK()"
  - "modules/caddytls/distributedstek/distributedstek.go:107:37      dstek               U       NewTimer(time.Until(dstek.NextRotation))"
  - "modules/caddytls/distributedstek/distributedstek.go:109:9       dstek               U       return dstek.Keys, nil"
  - "modules/caddytls/distributedstek/distributedstek.go:119:24      STEK                U       func (s *Provider) loadSTEK() (distributedSTEK,"
  - "modules/caddytls/distributedstek/distributedstek.go:119:43      STEK                U       loadSTEK() (distributedSTEK, error) {"
  - "modules/caddytls/distributedstek/distributedstek.go:120:20      STEK                U       var sg distributedSTEK"
  - "modules/caddytls/distributedstek/distributedstek.go:121:41      stek                U       storage.Load(s.ctx, stekFileName)"
  - "modules/caddytls/distributedstek/distributedstek.go:123:50      certmagic           U       wrap, in case error is certmagic.ErrNotExist"
  - "modules/caddytls/distributedstek/distributedstek.go:133:30      dstek               U       Provider) storeSTEK(dstek distributedSTEK) error"
  - "modules/caddytls/distributedstek/distributedstek.go:135:37      dstek               U       NewEncoder(&buf).Encode(dstek)"
  - "modules/caddytls/distributedstek/distributedstek.go:139:31      stek                U       storage.Store(s.ctx, stekFileName, buf.Bytes("
  - "modules/caddytls/distributedstek/distributedstek.go:156:4       nolint              U       //nolint:errcheck"
  - "modules/caddytls/distributedstek/distributedstek.go:226:64      godoc               U       reset directly (see godoc)"
  - "modules/caddytls/distributedstek/distributedstek.go:230:18      godocs              U       // again, see godocs for why timer is stopped"
  - "modules/caddytls/distributedstek/distributedstek.go:250:7       caddytls            U       var _ caddytls.STEKProvider = (*Provider"
  - "modules/caddytls/fileloader.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/fileloader.go:22:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/folderloader.go:15:9           caddytls        U       package caddytls"
  - "modules/caddytls/folderloader.go:26:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/internalissuer.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/internalissuer.go:24:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/internalissuer.go:24:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/internalissuer.go:25:14        smallstep       U       \"github.com/smallstep/certificates/authority"
  - "modules/caddytls/internalissuer.go:28:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/internalissuer.go:29:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/internalissuer.go:29:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/internalissuer.go:29:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/internalissuer.go:30:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddypki"
  - "modules/caddytls/internalissuer.go:30:43        caddypki        U       caddyserver/caddy/v2/modules/caddypki\""
  - "modules/caddytls/internalissuer.go:55:10        caddypki        U       ca *caddypki.CA"
  - "modules/caddytls/internalissuer.go:73:12        caddypki        U       iss.CA = caddypki.DefaultCAID"
  - "modules/caddytls/internalissuer.go:73:28        CAID            U       CA = caddypki.DefaultCAID"
  - "modules/caddytls/internalissuer.go:81:24        caddypki        U       pkiApp := appModule.(*caddypki.PKI)"
  - "modules/caddytls/internalissuer.go:103:86       certmagic       U       CertificateRequest) (*certmagic.IssuedCertificate, error"
  - "modules/caddytls/internalissuer.go:105:13       caddypki        U       authCfg := caddypki.AuthorityConfig{"
  - "modules/caddytls/internalissuer.go:145:10       certmagic       U       return &certmagic.IssuedCertificate{"
  - "modules/caddytls/internalissuer.go:150:13       Caddyfile       U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddytls/internalissuer.go:150:36       Caddyfile       U       marshalCaddyfile deserializes Caddyfile tokens into iss."
  - "modules/caddytls/internalissuer.go:157:37       Caddyfile       U       InternalIssuer) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/internalissuer.go:157:50       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/internalissuer.go:187:7        Smallstep       U       // by Smallstep libs, particularly the"
  - "modules/caddytls/internalissuer.go:201:4        certmagic       U       _ certmagic.Issuer"
  - "modules/caddytls/leaffileloader_test.go:1:9         caddytls        U       package caddytls"
  - "modules/caddytls/leaffileloader_test.go:10:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leaffileloader_test.go:14:46       caddytest       U       Files: []string{\"../../caddytest/leafcert.pem\"}}"
  - "modules/caddytls/leaffileloader_test.go:14:56       leafcert        U       string{\"../../caddytest/leafcert.pem\"}}"
  - "modules/caddytls/leaffileloader_test.go:27:42       caddytest       U       os.ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leaffileloader_test.go:27:52       leafcert        U       ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leaffileloader.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/leaffileloader.go:23:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leaffileloader.go:59:3         ders            U       ders, err := convertPEMFilesToDERB"
  - "modules/caddytls/leaffileloader.go:63:40        ders            U       9.ParseCertificates(ders)"
  - "modules/caddytls/leaffileloader.go:77:6         ders            U       var ders []byte"
  - "modules/caddytls/leaffileloader.go:83:3         ders            U       ders = append("
  - "modules/caddytls/leaffileloader.go:84:4         ders            U       ders,"
  - "modules/caddytls/leaffolderloader_test.go:1:9           caddytls        U       package caddytls"
  - "modules/caddytls/leaffolderloader_test.go:10:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leaffolderloader_test.go:14:50         caddytest       U       Folders: []string{\"../../caddytest\"}}"
  - "modules/caddytls/leaffolderloader_test.go:26:42         caddytest       U       os.ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leaffolderloader_test.go:26:52         leafcert        U       ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leaffolderloader.go:15:9           caddytls        U       package caddytls"
  - "modules/caddytls/leaffolderloader.go:24:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leafpemloader_test.go:1:9          caddytls        U       package caddytls"
  - "modules/caddytls/leafpemloader_test.go:10:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leafpemloader_test.go:43:42        caddytest       U       os.ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leafpemloader_test.go:43:52        leafcert        U       ReadFile(\"../../caddytest/leafcert.pem\")"
  - "modules/caddytls/leafpemloader.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/leafpemloader.go:21:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leafstorageloader.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/leafstorageloader.go:23:14         caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/leafstorageloader.go:23:26         certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/leafstorageloader.go:25:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/leafstorageloader.go:43:10         certmagic       U       storage certmagic.Storage"
  - "modules/caddytls/leafstorageloader.go:93:3          ders            U       ders, err := convertPEMToDER"
  - "modules/caddytls/leafstorageloader.go:97:40         ders            U       9.ParseCertificates(ders)"
  - "modules/caddytls/leafstorageloader.go:107:6         ders            U       var ders []byte"
  - "modules/caddytls/leafstorageloader.go:113:3         ders            U       ders = append("
  - "modules/caddytls/leafstorageloader.go:114:4         ders            U       ders,"
  - "modules/caddytls/matchers_test.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/matchers_test.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/matchers.go:15:9           caddytls        U       package caddytls"
  - "modules/caddytls/matchers.go:24:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/matchers.go:24:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/matchers.go:27:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/matchers.go:28:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/matchers.go:28:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/matchers.go:28:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/matchers.go:29:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/internal\""
  - "modules/caddytls/matchers.go:54:5           caddytls        U       // caddytls.TestServerNameMatcher"
  - "modules/caddytls/matchers.go:64:6           certmagic       U       if certmagic.MatchWildcard(hello"
  - "modules/caddytls/matchers.go:71:13          Caddyfile       U       // UnmarshalCaddyfile sets up the MatchServerName"
  - "modules/caddytls/matchers.go:71:56          Caddyfile       U       MatchServerName from Caddyfile tokens. Syntax:"
  - "modules/caddytls/matchers.go:74:36          Caddyfile       U       MatchServerName) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/matchers.go:74:49          caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/matchers.go:87:13          Errf            U       return d.Errf(\"malformed TLS handshake"
  - "modules/caddytls/matchers.go:186:13         Caddyfile       U       // UnmarshalCaddyfile sets up the MatchRemoteIP"
  - "modules/caddytls/matchers.go:186:54         Caddyfile       U       the MatchRemoteIP from Caddyfile tokens. Syntax:"
  - "modules/caddytls/matchers.go:191:47         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/matchers.go:219:13         Errf            U       return d.Errf(\"malformed TLS handshake"
  - "modules/caddytls/matchers.go:305:46         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/matchers.go:325:13         Errf            U       return d.Errf(\"malformed TLS handshake"
  - "modules/caddytls/matchers.go:340:4          caddyfile       U       _ caddyfile.Unmarshaler = (*MatchLocalIP"
  - "modules/caddytls/ondemand.go:15:9           caddytls        U       package caddytls"
  - "modules/caddytls/ondemand.go:27:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/ondemand.go:27:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/ondemand.go:30:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/ondemand.go:31:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/ondemand.go:31:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/ondemand.go:31:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/ondemand.go:84:28          certmagic       U       value available at the certmagic.ClientHelloInfoCtxKey"
  - "modules/caddytls/ondemand.go:121:13         Caddyfile       U       // UnmarshalCaddyfile implements caddyfile"
  - "modules/caddytls/ondemand.go:121:34         caddyfile       U       UnmarshalCaddyfile implements caddyfile.Unmarshaler."
  - "modules/caddytls/ondemand.go:122:37         Caddyfile       U       PermissionByHTTP) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/ondemand.go:122:50         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/ondemand.go:155:26         certmagic       U       chi, ok := ctx.Value(certmagic.ClientHelloInfoCtxKey"
  - "modules/caddytls/ondemand.go:191:24         certmagic       U       onDemandRateLimiter = certmagic.NewRateLimiter(0, 0"
  - "modules/caddytls/pemloader.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/pemloader.go:21:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/sessiontickets.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/sessiontickets.go:28:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/sessiontickets.go:36:78        stek            U       caddy:\"namespace=tls.stek inline_key=provider"
  - "modules/caddytls/sessiontickets.go:44:14        STEK            U       // Disables STEK rotation."
  - "modules/caddytls/sessiontickets.go:50:14        STEK            U       keySource STEKProvider"
  - "modules/caddytls/sessiontickets.go:63:46        STEK            U       caddy.Duration(defaultSTEKRotationInterval)"
  - "modules/caddytls/sessiontickets.go:72:14        STEK            U       // load the STEK module, which will provide"
  - "modules/caddytls/sessiontickets.go:77:21        STEK            U       s.keySource = val.(STEKProvider)"
  - "modules/caddytls/standardstek/stek.go:15:9          standardstek    U       package standardstek"
  - "modules/caddytls/standardstek/stek.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/standardstek/stek.go:24:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddytls"
  - "modules/caddytls/standardstek/stek.go:24:43         caddytls        U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/caddytls/standardstek/stek.go:28:31         STEK            U       RegisterModule(standardSTEKProvider{})"
  - "modules/caddytls/standardstek/stek.go:31:14         STEK            U       type standardSTEKProvider struct {"
  - "modules/caddytls/standardstek/stek.go:32:2          stek            U       stekConfig *caddytls.SessionTicket"
  - "modules/caddytls/standardstek/stek.go:32:14         caddytls        U       stekConfig *caddytls.SessionTicketService"
  - "modules/caddytls/standardstek/stek.go:37:15         STEK            U       func (standardSTEKProvider) CaddyModule"
  - "modules/caddytls/standardstek/stek.go:39:13         stek            U       ID: \"tls.stek.standard\","
  - "modules/caddytls/standardstek/stek.go:40:49         STEK            U       return new(standardSTEKProvider) },"
  - "modules/caddytls/standardstek/stek.go:45:18         STEK            U       func (s *standardSTEKProvider) Initialize"
  - "modules/caddytls/standardstek/stek.go:45:51         caddytls        U       Initialize(config *caddytls.SessionTicketService"
  - "modules/caddytls/standardstek/stek.go:47:4          stek            U       s.stekConfig = config"
  - "modules/caddytls/standardstek/stek.go:49:2          itvl            U       itvl := time.Duration(s.stekConfig"
  - "modules/caddytls/standardstek/stek.go:49:26         stek            U       itvl := time.Duration(s.stekConfig.RotationInterval"
  - "modules/caddytls/standardstek/stek.go:58:38         itvl            U       IsZero() || since > itvl {"
  - "modules/caddytls/standardstek/stek.go:60:17         stek            U       keys, err = s.stekConfig.RotateSTEKs(keys"
  - "modules/caddytls/standardstek/stek.go:70:26         itvl            U       timer = time.NewTimer(itvl - since)"
  - "modules/caddytls/standardstek/stek.go:117:64        godoc           U       reset directly (see godoc)"
  - "modules/caddytls/standardstek/stek.go:121:18        godocs          U       // again, see godocs for why timer is stopped"
  - "modules/caddytls/standardstek/stek.go:137:7         caddytls        U       var _ caddytls.STEKProvider = (*standardSTEK"
  - "modules/caddytls/storageloader.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/storageloader.go:21:14         caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/storageloader.go:21:26         certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/storageloader.go:23:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/storageloader.go:38:10         certmagic       U       storage certmagic.Storage"
  - "modules/caddytls/tls.go:15:9        caddytls        U       package caddytls"
  - "modules/caddytls/tls.go:28:14       caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/tls.go:28:26       certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/tls.go:31:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/tls.go:32:14       caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/caddytls/tls.go:32:43       caddyevents     U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/caddytls/tls.go:41:15       certmagic       U       certCache *certmagic.Cache"
  - "modules/caddytls/tls.go:84:24       certmagic       U       Disables checks in certmagic that the configured"
  - "modules/caddytls/tls.go:100:22      caddyevents     U       events *caddyevents.App"
  - "modules/caddytls/tls.go:118:11      Iface           U       eventsAppIface, err := ctx.App(\"events"
  - "modules/caddytls/tls.go:122:22      Iface           U       t.events = eventsAppIface.(*caddyevents.App)"
  - "modules/caddytls/tls.go:122:30      caddyevents     U       events = eventsAppIface.(*caddyevents.App)"
  - "modules/caddytls/tls.go:129:15      certmagic       U       cacheOpts := certmagic.CacheOptions{"
  - "modules/caddytls/tls.go:130:31      certmagic       U       GetConfigForCert: func(cert certmagic.Certificate) (*certmagic"
  - "modules/caddytls/tls.go:159:18      Iface           U       for modName, modIface := range val.(map[string"
  - "modules/caddytls/tls.go:163:31      Iface           U       automateNames, ok := modIface.(*AutomateLoader); ok"
  - "modules/caddytls/tls.go:171:101     Iface           U       strings, got: %T\", modIface)"
  - "modules/caddytls/tls.go:248:36      STEK            U       ticket ephemeral keys (STEK) service and provider"
  - "modules/caddytls/tls.go:256:25      unmanaged       U       load manual/static (unmanaged) certificates - we do"
  - "modules/caddytls/tls.go:277:28      Unmanaged       U       hash, err := magic.CacheUnmanagedTLSCertificate(ctx, cert"
  - "modules/caddytls/tls.go:279:32      unmanaged       U       fmt.Errorf(\"caching unmanaged certificate: %v\", err"
  - "modules/caddytls/tls.go:474:2       zerossl         U       zerosslValidation := certmagic"
  - "modules/caddytls/tls.go:474:46      SSLHTTP         U       certmagic.LooksLikeZeroSSLHTTPValidation(r)"
  - "modules/caddytls/tls.go:477:24      zerossl         U       if !acmeChallenge && !zerosslValidation {"
  - "modules/caddytls/tls.go:503:12      zerossl         U       } else if zerosslValidation {"
  - "modules/caddytls/tls.go:505:7       ziss            U       if ziss, ok := iss.(*ZeroSSLIssuer"
  - "modules/caddytls/tls.go:506:8       ziss            U       if ziss.issuer.HandleZeroSSLHTTPValid"
  - "modules/caddytls/tls.go:506:30      SSLHTTP         U       ziss.issuer.HandleZeroSSLHTTPValidation(w, r) {"
  - "modules/caddytls/tls.go:726:20      hostnames       U       // for the list of hostnames, rather than loading"
  - "modules/caddytls/values.go:15:9         caddytls        U       package caddytls"
  - "modules/caddytls/values.go:22:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/values.go:22:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/values.go:23:14        klauspost       U       \"github.com/klauspost/cpuid/v2\""
  - "modules/caddytls/values.go:23:24        cpuid           U       github.com/klauspost/cpuid/v2\""
  - "modules/caddytls/values.go:52:28        AESNI           U       defaultCipherSuitesWithAESNI = []uint16{"
  - "modules/caddytls/values.go:64:31        AESNI           U       defaultCipherSuitesWithoutAESNI = []uint16{"
  - "modules/caddytls/values.go:78:5         cpuid           U       if cpuid.CPU.Supports(cpuid.AESNI"
  - "modules/caddytls/values.go:78:24        cpuid           U       if cpuid.CPU.Supports(cpuid.AESNI) {"
  - "modules/caddytls/values.go:78:30        AESNI           U       cpuid.CPU.Supports(cpuid.AESNI) {"
  - "modules/caddytls/values.go:79:33        AESNI           U       defaultCipherSuitesWithAESNI"
  - "modules/caddytls/values.go:81:35        AESNI           U       defaultCipherSuitesWithoutAESNI"
  - "modules/caddytls/values.go:88:3         secp            U       \"secp256r1\": tls.CurveP25"
  - "modules/caddytls/values.go:89:3         secp            U       \"secp384r1\": tls.CurveP38"
  - "modules/caddytls/values.go:90:3         secp            U       \"secp521r1\": tls.CurveP52"
  - "modules/caddytls/values.go:95:40        certmagic       U       rtedCertKeyTypes = map[string]certmagic.KeyType{"
  - "modules/caddytls/values.go:96:13        certmagic       U       \"rsa2048\": certmagic.RSA2048,"
  - "modules/caddytls/values.go:97:13        certmagic       U       \"rsa4096\": certmagic.RSA4096,"
  - "modules/caddytls/values.go:98:13        certmagic       U       \"p256\": certmagic.P256,"
  - "modules/caddytls/values.go:125:4        nolint          U       //nolint:staticcheck"
  - "modules/caddytls/zerosslissuer.go:15:9          caddytls        U       package caddytls"
  - "modules/caddytls/zerosslissuer.go:24:14         caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/caddytls/zerosslissuer.go:24:26         certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/caddytls/zerosslissuer.go:27:14         caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/caddytls/zerosslissuer.go:28:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/zerosslissuer.go:28:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/caddytls/zerosslissuer.go:29:14         caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/caddytls/zerosslissuer.go:29:35         caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/zerosslissuer.go:29:47         caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/caddytls/zerosslissuer.go:64:10         certmagic       U       storage certmagic.Storage"
  - "modules/caddytls/zerosslissuer.go:65:11         certmagic       U       issuer *certmagic.ZeroSSLIssuer"
  - "modules/caddytls/zerosslissuer.go:71:22         zerossl         U       ID: \"tls.issuance.zerossl\","
  - "modules/caddytls/zerosslissuer.go:82:18         certmagic       U       var dnsManager *certmagic.DNSManager"
  - "modules/caddytls/zerosslissuer.go:88:17         certmagic       U       dnsManager = &certmagic.DNSManager{"
  - "modules/caddytls/zerosslissuer.go:127:13        Caddyfile       U       // UnmarshalCaddyfile deserializes Caddyfile"
  - "modules/caddytls/zerosslissuer.go:127:36        Caddyfile       U       marshalCaddyfile deserializes Caddyfile tokens into iss."
  - "modules/caddytls/zerosslissuer.go:129:8         zerossl         U       // ... zerossl <api_key> {"
  - "modules/caddytls/zerosslissuer.go:138:36        Caddyfile       U       ZeroSSLIssuer) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/caddytls/zerosslissuer.go:138:49        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/caddytls/zerosslissuer.go:154:14        Errf            U       return d.Errf(\"validity days is already"
  - "modules/caddytls/zerosslissuer.go:158:14        Errf            U       return d.Errf(\"invalid number of days"
  - "modules/caddytls/zerosslissuer.go:168:14        Errf            U       return d.Errf(\"invalid port %s: %v"
  - "modules/caddytls/zerosslissuer.go:180:16        caddyfile       U       unm, err := caddyfile.UnmarshalModule(d,"
  - "modules/caddytls/zerosslissuer.go:184:38        caddyconfig     U       CNAMEValidation.ProviderRaw = caddyconfig.JSONModuleObject(unm"
  - "modules/caddytls/zerosslissuer.go:193:14        Errf            U       return d.Errf(\"invalid propagation"
  - "modules/caddytls/zerosslissuer.go:212:15        Errf            U       return d.Errf(\"invalid propagation"
  - "modules/caddytls/zerosslissuer.go:244:32        zerossl         U       d.Errf(\"unrecognized zerossl issuer property: %s"
  - "modules/filestorage/filestorage.go:15:9         filestorage     U       package filestorage"
  - "modules/filestorage/filestorage.go:18:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "modules/filestorage/filestorage.go:18:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "modules/filestorage/filestorage.go:20:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/filestorage/filestorage.go:21:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/filestorage/filestorage.go:21:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/filestorage/filestorage.go:21:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/filestorage/filestorage.go:28:21        certmagic       U       // FileStorage is a certmagic.Storage wrapper for"
  - "modules/filestorage/filestorage.go:28:51        certmagic       U       Storage wrapper for certmagic.FileStorage."
  - "modules/filestorage/filestorage.go:42:37        certmagic       U       tMagicStorage converts s to a certmagic.Storage instance."
  - "modules/filestorage/filestorage.go:43:42        certmagic       U       CertMagicStorage() (certmagic.Storage, error) {"
  - "modules/filestorage/filestorage.go:47:13        Caddyfile       U       // UnmarshalCaddyfile sets up the storage"
  - "modules/filestorage/filestorage.go:47:55        Caddyfile       U       storage module from Caddyfile tokens."
  - "modules/filestorage/filestorage.go:48:32        Caddyfile       U       FileStorage) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/filestorage/filestorage.go:48:45        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/filestorage/filestorage.go:72:13        Errf            U       return d.Errf(\"unrecognized parameter"
  - "modules/filestorage/filestorage.go:84:4         caddyfile       U       _ caddyfile.Unmarshaler = (*FileStorage"
  - "modules/logging/appendencoder.go:29:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/appendencoder.go:30:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/appendencoder.go:30:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/logging/appendencoder.go:31:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/appendencoder.go:31:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/appendencoder.go:31:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/appendencoder.go:121:13         Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/appendencoder.go:121:47         Caddyfile       U       sets up the module from Caddyfile tokens. Syntax:"
  - "modules/logging/appendencoder.go:130:35         Caddyfile       U       AppendEncoder) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/appendencoder.go:130:48         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/appendencoder.go:157:16         caddyfile       U       unm, err := caddyfile.UnmarshalModule(d, moduleID"
  - "modules/logging/appendencoder.go:163:14         Errf            U       return d.Errf(\"module %s (%T) is not"
  - "modules/logging/appendencoder.go:165:20         caddyconfig     U       fe.WrappedRaw = caddyconfig.JSONModuleObject(enc"
  - "modules/logging/appendencoder.go:355:4          caddyfile       U       _ caddyfile.Unmarshaler"
  - "modules/logging/cores.go:6:14           caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/cores.go:7:14           caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/cores.go:7:35           caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/cores.go:7:47           caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/cores.go:27:31          Caddyfile       U       *MockCore) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/cores.go:27:44          caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/cores.go:35:4           caddyfile       U       _ caddyfile.Unmarshaler = (*MockCore"
  - "modules/logging/encoders.go:24:14       caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/encoders.go:25:14       caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/encoders.go:25:35       caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/encoders.go:25:47       caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/encoders.go:53:25       milli               U       ce.TimeFormat = \"wall_milli\""
  - "modules/logging/encoders.go:59:13       Caddyfile           U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/encoders.go:59:47       Caddyfile           U       sets up the module from Caddyfile tokens. Syntax:"
  - "modules/logging/encoders.go:62:31       subdirectives       U       common encoder config subdirectives...>"
  - "modules/logging/encoders.go:65:12       godoc               U       // See the godoc on the LogEncoderConfig"
  - "modules/logging/encoders.go:66:4        subdirectives       U       // subdirectives that are common to most"
  - "modules/logging/encoders.go:67:36       Caddyfile           U       ConsoleEncoder) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/encoders.go:67:49       caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/encoders.go:72:38       Caddyfile           U       LogEncoderConfig.UnmarshalCaddyfile(d)"
  - "modules/logging/encoders.go:99:13       Caddyfile           U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/encoders.go:102:31      subdirectives       U       common encoder config subdirectives...>"
  - "modules/logging/encoders.go:105:12      godoc               U       // See the godoc on the LogEncoderConfig"
  - "modules/logging/encoders.go:106:4       subdirectives       U       // subdirectives that are common to most"
  - "modules/logging/encoders.go:107:46      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/encoders.go:129:53      milli               U       seconds_float, unix_milli_float, unix_nano, iso"
  - "modules/logging/encoders.go:129:120     milli               U       39_nano, wall, wall_milli, wall_nano, common_log"
  - "modules/logging/encoders.go:134:64      milli               U       seconds, ns/nano/nanos, ms/milli/millis, string."
  - "modules/logging/encoders.go:158:52      caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/encoders.go:195:13      Errf                U       return d.Errf(\"unrecognized subdirective"
  - "modules/logging/encoders.go:195:32      subdirective        U       d.Errf(\"unrecognized subdirective %s\", subdir)"
  - "modules/logging/encoders.go:235:13      milli               U       case \"unix_milli_float\":"
  - "modules/logging/encoders.go:307:4       caddyfile           U       _ caddyfile.Unmarshaler = (*ConsoleEncode"
  - "modules/logging/filewriter_test_windows.go:31:32        caddytest       U       = os.MkdirTemp(\"\", \"caddytest\")"
  - "modules/logging/filewriter_test.go:26:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/filewriter_test.go:26:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filewriter_test.go:26:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filewriter_test.go:75:34        caddytest       U       = os.MkdirTemp(\"\", \"caddytest\")"
  - "modules/logging/filewriter_test.go:105:32       caddytest       U       = os.MkdirTemp(\"\", \"caddytest\")"
  - "modules/logging/filewriter_test.go:179:12       caddyfile       U       d *caddyfile.Dispenser"
  - "modules/logging/filewriter_test.go:185:7        caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/logging/filewriter_test.go:197:7        caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/logging/filewriter_test.go:209:7        caddyfile       U       d: caddyfile.NewTestDispenser(`"
  - "modules/logging/filewriter_test.go:246:26       Caddyfile       U       if err := fw.UnmarshalCaddyfile(tt.d); (err != nil)"
  - "modules/logging/filewriter_test.go:247:24       Caddyfile       U       t.Fatalf(\"UnmarshalCaddyfile() error = %v, want"
  - "modules/logging/filewriter_test.go:353:32       caddytest       U       = os.MkdirTemp(\"\", \"caddytest\")"
  - "modules/logging/filewriter.go:27:12         natefinch           U       \"gopkg.in/natefinch/lumberjack.v2\""
  - "modules/logging/filewriter.go:29:14         caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/filewriter.go:30:14         caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/filewriter.go:30:35         caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filewriter.go:30:47         caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filewriter.go:197:13        Caddyfile           U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/filewriter.go:197:47        Caddyfile           U       sets up the module from Caddyfile tokens. Syntax:"
  - "modules/logging/filewriter.go:218:63        subdirectives       U       keep, or roll_keep_for subdirectives are"
  - "modules/logging/filewriter.go:220:4         subdirective        U       // subdirective is used."
  - "modules/logging/filewriter.go:221:32        Caddyfile           U       FileWriter) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/filewriter.go:221:45        caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filewriter.go:240:14        Errf                U       return d.Errf(\"parsing mode: %v\","
  - "modules/logging/filewriter.go:258:14        Errf                U       return d.Errf(\"parsing size: %v\","
  - "modules/logging/filewriter.go:282:14        Errf                U       return d.Errf(\"parsing roll_keep number"
  - "modules/logging/filewriter.go:293:14        Errf                U       return d.Errf(\"parsing roll_keep_for"
  - "modules/logging/filewriter.go:296:14        Errf                U       return d.Errf(\"negative roll_keep"
  - "modules/logging/filewriter.go:308:4         caddyfile           U       _ caddyfile.Unmarshaler = (*FileWriter"
  - "modules/logging/filterencoder.go:28:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/filterencoder.go:29:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/filterencoder.go:29:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig\""
  - "modules/logging/filterencoder.go:30:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/filterencoder.go:30:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filterencoder.go:30:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filterencoder.go:105:2          vals            U       vals, err := ctx.LoadModule"
  - "modules/logging/filterencoder.go:109:20         Iface           U       for fieldName, modIface := range vals.(map[string"
  - "modules/logging/filterencoder.go:109:35         vals            U       fieldName, modIface := range vals.(map[string]any) {"
  - "modules/logging/filterencoder.go:110:29         Iface           U       Fields[fieldName] = modIface.(LogFieldFilter)"
  - "modules/logging/filterencoder.go:139:13         Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/filterencoder.go:139:47         Caddyfile       U       sets up the module from Caddyfile tokens. Syntax:"
  - "modules/logging/filterencoder.go:152:35         Caddyfile       U       FilterEncoder) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/filterencoder.go:152:48         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filterencoder.go:166:15         caddyfile       U       unm, err := caddyfile.UnmarshalModule(d, moduleID"
  - "modules/logging/filterencoder.go:172:13         Errf            U       return d.Errf(\"module %s (%T) is not"
  - "modules/logging/filterencoder.go:174:25         caddyconfig     U       fe.FieldsRaw[field] = caddyconfig.JSONModuleObject(filter"
  - "modules/logging/filterencoder.go:186:16         caddyfile       U       unm, err := caddyfile.UnmarshalModule(d, moduleID"
  - "modules/logging/filterencoder.go:192:14         Errf            U       return d.Errf(\"module %s (%T) is not"
  - "modules/logging/filterencoder.go:194:20         caddyconfig     U       fe.WrappedRaw = caddyconfig.JSONModuleObject(enc"
  - "modules/logging/filterencoder.go:452:4          caddyfile       U       _ caddyfile.Unmarshaler"
  - "modules/logging/filters_test.go:6:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/filters_test.go:7:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/logging/filters_test.go:7:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/logging/filters_test.go:55:43       caddyhttp       U       zapcore.Field{Interface: caddyhttp.LoggableStringArray"
  - "modules/logging/filters_test.go:55:53       Loggable        U       Interface: caddyhttp.LoggableStringArray{"
  - "modules/logging/filters_test.go:59:28       caddyhttp       U       ok := out.Interface.(caddyhttp.LoggableStringArray"
  - "modules/logging/filters_test.go:59:38       Loggable        U       Interface.(caddyhttp.LoggableStringArray)"
  - "modules/logging/filters_test.go:70:42       caddyhttp       U       zapcore.Field{Interface: caddyhttp.LoggableStringArray"
  - "modules/logging/filters_test.go:70:52       Loggable        U       Interface: caddyhttp.LoggableStringArray{"
  - "modules/logging/filters_test.go:74:27       caddyhttp       U       ok = out.Interface.(caddyhttp.LoggableStringArray"
  - "modules/logging/filters_test.go:74:37       Loggable        U       Interface.(caddyhttp.LoggableStringArray)"
  - "modules/logging/filters_test.go:89:20       notexist        U       {replaceAction, \"notexist\", \"REDACTED\"},"
  - "modules/logging/filters_test.go:91:19       notexist        U       {deleteAction, \"notexist\", \"\"},"
  - "modules/logging/filters_test.go:109:38      notexist        U       replaceAction, Parameter: \"notexist\", Value: \"REDACTED\""
  - "modules/logging/filters_test.go:111:37      notexist        U       deleteAction, Parameter: \"notexist\"},"
  - "modules/logging/filters_test.go:120:53      Loggable        U       Interface: caddyhttp.LoggableStringArray{"
  - "modules/logging/filters_test.go:165:2       outval          U       outval := out.Interface.(caddyhttp"
  - "modules/logging/filters_test.go:169:5       outval          U       if outval[0] != expected[0] {"
  - "modules/logging/filters.go:30:14        caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/filters.go:31:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/filters.go:31:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filters.go:31:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/filters.go:32:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/logging/filters.go:32:43        caddyhttp       U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/logging/filters.go:64:13        Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/filters.go:64:47        Caddyfile       U       sets up the module from Caddyfile tokens."
  - "modules/logging/filters.go:65:30        Caddyfile       U       DeleteFilter) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/filters.go:65:43        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filters.go:95:13        Caddyfile       U       // UnmarshalCaddyfile sets up the module from"
  - "modules/logging/filters.go:95:47        Caddyfile       U       sets up the module from Caddyfile tokens."
  - "modules/logging/filters.go:96:44        caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filters.go:102:32       caddyhttp       U       ok := in.Interface.(caddyhttp.LoggableStringArray"
  - "modules/logging/filters.go:102:42       Loggable        U       Interface.(caddyhttp.LoggableStringArray); ok {"
  - "modules/logging/filters.go:103:20       caddyhttp       U       newArray := make(caddyhttp.LoggableStringArray"
  - "modules/logging/filters.go:103:30       Loggable        U       newArray := make(caddyhttp.LoggableStringArray, len(array"
  - "modules/logging/filters.go:130:47       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filters.go:170:46       caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/filters.go:175:12       Errf            U       return d.Errf(\"too many arguments"
  - "modules/logging/filters.go:180:13       Errf            U       return d.Errf(\"error parsing %s:"
  - "modules/logging/filters.go:187:14       Errf            U       return d.Errf(\"error parsing %s:"
  - "modules/logging/filters.go:201:14       Errf            U       return d.Errf(\"error parsing %s:"
  - "modules/logging/filters.go:211:14       Errf            U       return d.Errf(\"error parsing %s:"
  - "modules/logging/filters.go:216:32       subdirective    U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/logging/filters.go:243:32       caddyhttp       U       ok := in.Interface.(caddyhttp.LoggableStringArray"
  - "modules/logging/filters.go:243:42       Loggable        U       Interface.(caddyhttp.LoggableStringArray); ok {"
  - "modules/logging/filters.go:244:20       caddyhttp       U       newArray := make(caddyhttp.LoggableStringArray"
  - "modules/logging/filters.go:244:30       Loggable        U       newArray := make(caddyhttp.LoggableStringArray, len(array"
  - "modules/logging/filters.go:384:32       subdirective    U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/logging/filters.go:394:42       Loggable        U       Interface.(caddyhttp.LoggableStringArray); ok {"
  - "modules/logging/filters.go:515:32       subdirective    U       d.Errf(\"unrecognized subdirective %s\", d.Val())"
  - "modules/logging/netwriter.go:25:14          caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/logging/netwriter.go:26:14          caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/logging/netwriter.go:26:35          caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/netwriter.go:26:47          caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/logging/netwriter.go:94:2           reconn          U       reconn := &redialerConn{"
  - "modules/logging/netwriter.go:94:13          redialer        U       reconn := &redialerConn{"
  - "modules/logging/netwriter.go:98:15          reconn          U       conn, err := reconn.dial()"
  - "modules/logging/netwriter.go:107:2          reconn          U       reconn.connMu.Lock()"
  - "modules/logging/netwriter.go:108:2          reconn          U       reconn.Conn = conn"
  - "modules/logging/netwriter.go:109:2          reconn          U       reconn.connMu.Unlock()"
  - "modules/logging/netwriter.go:113:13         Caddyfile       U       // UnmarshalCaddyfile sets up the handler"
  - "modules/logging/netwriter.go:113:48         Caddyfile       U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/logging/netwriter.go:119:31         Caddyfile       U       NetWriter) UnmarshalCaddyfile(d *caddyfile.Dispenser"
  - "modules/logging/netwriter.go:119:44         caddyfile       U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/logging/netwriter.go:136:14         Errf            U       return d.Errf(\"invalid duration:"
  - "modules/logging/netwriter.go:153:4          redialer        U       // redialerConn wraps an underlying"
  - "modules/logging/netwriter.go:156:6          redialer        U       type redialerConn struct {"
  - "modules/logging/netwriter.go:166:15         redialer        U       func (reconn *redialerConn) Write(b []byte"
  - "modules/logging/netwriter.go:214:15         redialer        U       func (reconn *redialerConn) dial() (net.Conn"
  - "modules/logging/netwriter.go:222:4          caddyfile       U       _ caddyfile.Unmarshaler = (*NetWriter"
  - "modules/metrics/adminmetrics.go:20:14       caddyserver     U       \"github.com/caddyserver/caddy/v2\""
  - "modules/metrics/metrics_test.go:6:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/metrics/metrics_test.go:6:35        caddyconfig     U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/metrics/metrics_test.go:6:47        caddyfile       U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/metrics/metrics_test.go:9:26        Caddyfile       U       TestMetricsUnmarshalCaddyfile(t *testing.T) {"
  - "modules/metrics/metrics_test.go:11:7        caddyfile       U       d := caddyfile.NewTestDispenser(`metrics"
  - "modules/metrics/metrics_test.go:12:20       Caddyfile       U       err := m.UnmarshalCaddyfile(d)"
  - "modules/metrics/metrics_test.go:18:6        caddyfile       U       d = caddyfile.NewTestDispenser(`metrics"
  - "modules/metrics/metrics_test.go:19:19       Caddyfile       U       err = m.UnmarshalCaddyfile(d)"
  - "modules/metrics/metrics_test.go:29:6        caddyfile       U       d = caddyfile.NewTestDispenser(`metrics"
  - "modules/metrics/metrics_test.go:29:52       openmetrics     U       tDispenser(`metrics { disable_openmetrics }`)"
  - "modules/metrics/metrics_test.go:30:19       Caddyfile       U       err = m.UnmarshalCaddyfile(d)"
  - "modules/metrics/metrics_test.go:40:6        caddyfile       U       d = caddyfile.NewTestDispenser(`metrics"
  - "modules/metrics/metrics_test.go:41:19       Caddyfile       U       err = m.UnmarshalCaddyfile(d)"
  - "modules/metrics/metrics.go:21:50        promhttp            U       client_golang/prometheus/promhttp\""
  - "modules/metrics/metrics.go:24:14        caddyserver         U       \"github.com/caddyserver/caddy/v2\""
  - "modules/metrics/metrics.go:25:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/metrics/metrics.go:25:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/metrics/metrics.go:25:47        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/metrics/metrics.go:26:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/metrics/metrics.go:26:35        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/metrics/metrics.go:26:47        httpcaddyfile       U       caddy/v2/caddyconfig/httpcaddyfile\""
  - "modules/metrics/metrics.go:27:14        caddyserver         U       \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/metrics/metrics.go:27:43        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp\""
  - "modules/metrics/metrics.go:32:2         httpcaddyfile       U       httpcaddyfile.RegisterHandlerDirective"
  - "modules/metrics/metrics.go:32:57        Caddyfile           U       dlerDirective(\"metrics\", parseCaddyfile)"
  - "modules/metrics/metrics.go:43:41        openmetrics         U       bool `json:\"disable_openmetrics,omitempty\"`"
  - "modules/metrics/metrics.go:69:11        Caddyfile           U       func parseCaddyfile(h httpcaddyfile.Helper"
  - "modules/metrics/metrics.go:69:23        httpcaddyfile       U       func parseCaddyfile(h httpcaddyfile.Helper) (caddyhttp.Middleware"
  - "modules/metrics/metrics.go:69:46        caddyhttp           U       httpcaddyfile.Helper) (caddyhttp.MiddlewareHandler, error"
  - "modules/metrics/metrics.go:71:20        Caddyfile           U       err := m.UnmarshalCaddyfile(h.Dispenser)"
  - "modules/metrics/metrics.go:75:13        Caddyfile           U       // UnmarshalCaddyfile sets up the handler"
  - "modules/metrics/metrics.go:75:48        Caddyfile           U       up the handler from Caddyfile tokens. Syntax:"
  - "modules/metrics/metrics.go:78:16        openmetrics         U       // disable_openmetrics"
  - "modules/metrics/metrics.go:80:41        caddyfile           U       UnmarshalCaddyfile(d *caddyfile.Dispenser) error {"
  - "modules/metrics/metrics.go:89:17        openmetrics         U       case \"disable_openmetrics\":"
  - "modules/metrics/metrics.go:92:13        Errf                U       return d.Errf(\"unrecognized subdirective"
  - "modules/metrics/metrics.go:92:32        subdirective        U       d.Errf(\"unrecognized subdirective %q\", d.Val())"
  - "modules/metrics/metrics.go:98:73        caddyhttp           U       *http.Request, next caddyhttp.Handler) error {"
  - "modules/metrics/metrics.go:106:4        caddyhttp           U       _ caddyhttp.MiddlewareHandler ="
  - "modules/metrics/metrics.go:107:4        caddyfile           U       _ caddyfile.Unmarshaler ="
  - "modules/metrics/metrics.go:110:34       promhttp            U       createMetricsHandler(logger promhttp.Logger, enableOpenMetrics"
  - "modules/metrics/metrics.go:111:9        promhttp            U       return promhttp.InstrumentMetricHandler"
  - "modules/metrics/metrics.go:112:3        promhttp            U       promhttp.HandlerFor(prometheus"
  - "modules/metrics/metrics.go:112:51       promhttp            U       prometheus.DefaultGatherer, promhttp.HandlerOpts{"
  - "modules/standard/imports.go:5:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/caddyconfig"
  - "modules/standard/imports.go:5:37        caddyconfig         U       caddyserver/caddy/v2/caddyconfig/caddyfile\""
  - "modules/standard/imports.go:5:49        caddyfile           U       caddy/v2/caddyconfig/caddyfile\""
  - "modules/standard/imports.go:6:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/standard/imports.go:6:45        caddyevents         U       caddyserver/caddy/v2/modules/caddyevents\""
  - "modules/standard/imports.go:7:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyevents"
  - "modules/standard/imports.go:7:45        caddyevents         U       caddyserver/caddy/v2/modules/caddyevents/eventsconfig\""
  - "modules/standard/imports.go:7:57        eventsconfig        U       modules/caddyevents/eventsconfig\""
  - "modules/standard/imports.go:8:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyfs"
  - "modules/standard/imports.go:8:45        caddyfs             U       caddyserver/caddy/v2/modules/caddyfs\""
  - "modules/standard/imports.go:9:16        caddyserver         U       _ \"github.com/caddyserver/caddy/v2/modules/caddyhttp"
  - "modules/standard/imports.go:9:45        caddyhttp           U       caddyserver/caddy/v2/modules/caddyhttp/standard\""
  - "modules/standard/imports.go:10:45       caddypki            U       caddyserver/caddy/v2/modules/caddypki\""
  - "modules/standard/imports.go:11:45       caddypki            U       caddyserver/caddy/v2/modules/caddypki/acmeserver\""
  - "modules/standard/imports.go:11:54       acmeserver          U       v2/modules/caddypki/acmeserver\""
  - "modules/standard/imports.go:12:45       caddytls            U       caddyserver/caddy/v2/modules/caddytls\""
  - "modules/standard/imports.go:13:45       caddytls            U       caddyserver/caddy/v2/modules/caddytls/distributedstek\""
  - "modules/standard/imports.go:13:54       distributedstek     U       v2/modules/caddytls/distributedstek\""
  - "modules/standard/imports.go:14:45       caddytls            U       caddyserver/caddy/v2/modules/caddytls/standardstek\""
  - "modules/standard/imports.go:14:54       standardstek        U       v2/modules/caddytls/standardstek\""
  - "modules/standard/imports.go:15:45       filestorage         U       caddyserver/caddy/v2/modules/filestorage\""
  - "replacer_fuzz.go:15:12          gofuzz      U       //go:build gofuzz"
  - "replacer_test.go:256:14         NOOO            U       return \"NOOO\", false"
  - "replacer_test.go:268:14         NOOO            U       return \"NOOO\", false"
  - "replacer_test.go:281:26         Ã¤Ã¼test          U       expected: \"val1123Ã¶Ã¶_Ã¤Ã¼test-123space value1.2.3"
  - "replacer_test.go:296:17         teval           U       expected: \"{teval1{as{{dftest-123\","
  - "replacer_test.go:296:28         dftest          U       expected: \"{teval1{as{{dftest-123\","
  - "replacer_test.go:384:36         envtest         U       CADDY_REPLACER_TEST\", \"envtest\")"
  - "replacer_test.go:413:15         envtest         U       value: \"envtest\","
  - "replacer_test.go:431:20         caddytest       U       variable: \"file.caddytest/integration/testdata"
  - "replacer_test.go:435:20         caddytest       U       variable: \"file.caddytest/integration/testdata"
  - "replacer_test.go:439:20         caddytest       U       variable: \"file.caddytest/integration/testdata"
  - "replacer_test.go:469:20         caddytest       U       variable: \"file.caddytest/integration/testdata"
  - "service_windows.go:23:14        caddyserver     U       \"github.com/caddyserver/caddy/v2/notify\""
  - "sigtrap_posix.go:25:14          caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "sigtrap_posix.go:25:26          certmagic       U       github.com/caddyserver/certmagic\""
  - "sigtrap_posix.go:32:3           sigchan         U       sigchan := make(chan os.Signal"
  - "sigtrap_posix.go:33:17          sigchan         U       signal.Notify(sigchan, syscall.SIGTERM, syscall"
  - "sigtrap_posix.go:35:20          sigchan         U       for sig := range sigchan {"
  - "sigtrap_posix.go:39:5           certmagic       U       certmagic.CleanUpOwnLocks(context"
  - "storage.go:22:14        caddyserver     U       \"github.com/caddyserver/certmagic\""
  - "storage.go:22:26        certmagic       U       github.com/caddyserver/certmagic\""
  - "storage.go:27:23        certmagic       U       to a valid, usable certmagic.Storage value. (The"
  - "storage.go:32:22        certmagic       U       CertMagicStorage() (certmagic.Storage, error)"
  - "storage.go:38:20        sdcard          U       // which returns \"/sdcard\"."
  - "storage.go:42:12        sdcard          U       home = \"/sdcard\""
  - "storage.go:63:22        USERPROFILE     U       home = os.Getenv(\"USERPROFILE\")"
  - "storage.go:160:23       certmagic       U       var DefaultStorage = &certmagic.FileStorage{Path: AppDataDir"
