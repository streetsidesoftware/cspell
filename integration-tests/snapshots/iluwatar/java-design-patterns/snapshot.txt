
Repository: iluwatar/java-design-patterns
Url: "https://github.com/iluwatar/java-design-patterns.git"
Args: ["**/*.md","**/*.java"]
Lines:
 CSpell: Files checked: 1722, Issues found: 9920 in 1674 files
 exit code: 1
./LICENSE.md:23:19     - Unknown word (viewmodel)  -- Module Model-view-viewmodel is using ZK framework
./LICENSE.md:3:23      - Unknown word (Ilkka)      -- Copyright � 2014-2021 Ilkka Sepp�l�
./LICENSE.md:3:29      - Unknown word (Sepp)       -- Copyright � 2014-2021 Ilkka Sepp�l�
./README.md:100:168   - Unknown word (Conville)     -- 100px;" alt="TylerMcConville"/><br /><sub><b>TylerMcConvil
./README.md:101:156   - Unknown word (saksham)      -- width="100px;" alt="saksham93"/><br /><sub><b>saksham
./README.md:102:158   - Unknown word (nikhilbarar)  -- width="100px;" alt="nikhilbarar"/><br /><sub><b>nikhilbarar
./README.md:106:154   - Unknown word (Ruslan)       -- width="100px;" alt="Ruslan"/><br /><sub><b>Ruslan
./README.md:107:154   - Unknown word (Juho)         -- width="100px;" alt="Juho Kang"/><br /><sub><b
./README.md:107:159   - Unknown word (Kang)         -- width="100px;" alt="Juho Kang"/><br /><sub><b>Juho
./README.md:108:164   - Unknown word (Dheeraj)      -- width="100px;" alt="Dheeraj Mummareddy"/><br />
./README.md:108:172   - Unknown word (Mummareddy)   -- 00px;" alt="Dheeraj Mummareddy"/><br /><sub><b>Dheeraj
./README.md:109:168   - Unknown word (Sulzbach)     -- 0px;" alt="Bernardo Sulzbach"/><br /><sub><b>Bernardo
./README.md:110:153   - Unknown word (Aleksandar)   -- width="100px;" alt="Aleksandar Dudukovic"/><br /><sub
./README.md:110:164   - Unknown word (Dudukovic)    -- px;" alt="Aleksandar Dudukovic"/><br /><sub><b>Aleksandar
./README.md:111:153   - Unknown word (Yusuf)        -- width="100px;" alt="Yusuf Aytaş"/><br /><sub>
./README.md:111:159   - Unknown word (Aytaş)        -- "100px;" alt="Yusuf Aytaş"/><br /><sub><b>Yusuf
./README.md:112:148   - Unknown word (Mihály)       -- width="100px;" alt="Mihály Kuprivecz"/><br /><sub
./README.md:115:155   - Unknown word (Stanislav)    -- width="100px;" alt="Stanislav Kapinus"/><br /><sub
./README.md:115:165   - Unknown word (Kapinus)      -- px;" alt="Stanislav Kapinus"/><br /><sub><b>Stanislav
./README.md:116:156   - Unknown word (Sharma)       -- width="100px;" alt="GVSharma"/><br /><sub><b>GVSharma
./README.md:117:161   - Unknown word (Srđan)        -- width="100px;" alt="Srđan Paunović"/><br /><sub
./README.md:117:167   - Unknown word (Paunović)     -- "100px;" alt="Srđan Paunović"/><br /><sub><b>Srđan
./README.md:118:147   - Unknown word (Petros)       -- width="100px;" alt="Petros G. Sideris"/><br />
./README.md:118:157   - Unknown word (Sideris)      -- px;" alt="Petros G. Sideris"/><br /><sub><b>Petros
./README.md:119:168   - Unknown word (Pramod)       -- width="100px;" alt="Pramod Gupta"/><br /><sub>
./README.md:120:166   - Unknown word (Amarnath)     -- width="100px;" alt="Amarnath Chandana"/><br /><sub
./README.md:120:175   - Unknown word (Chandana)     -- 0px;" alt="Amarnath Chandana"/><br /><sub><b>Amarnath
./README.md:124:151   - Unknown word (Gilleland)    -- width="100px;" alt="Wes Gilleland"/><br /><sub><b>Wes
./README.md:125:159   - Unknown word (Harshraj)     -- width="100px;" alt="Harshraj Thakor"/><br /><sub
./README.md:125:168   - Unknown word (Thakor)       -- 0px;" alt="Harshraj Thakor"/><br /><sub><b>Harshraj
./README.md:126:165   - Unknown word (Vandenbussche) -- 100px;" alt="Martin Vandenbussche"/><br /><sub><b>Martin
./README.md:127:148   - Unknown word (Alexandru)     -- width="100px;" alt="Alexandru Somai"/><br /><sub>
./README.md:127:158   - Unknown word (Somai)         -- px;" alt="Alexandru Somai"/><br /><sub><b>Alexandru
./README.md:128:154   - Unknown word (Artur)         -- width="100px;" alt="Artur Mogozov"/><br /><sub
./README.md:128:160   - Unknown word (Mogozov)       -- "100px;" alt="Artur Mogozov"/><br /><sub><b>Artur
./README.md:133:152   - Unknown word (Dima)          -- width="100px;" alt="Dima Gubin"/><br /><sub>
./README.md:133:157   - Unknown word (Gubin)         -- width="100px;" alt="Dima Gubin"/><br /><sub><b>Dima
./README.md:136:151   - Unknown word (lbroman)       -- width="100px;" alt="lbroman"/><br /><sub><b>lbroman
./README.md:137:151   - Unknown word (Przemek)       -- width="100px;" alt="Przemek"/><br /><sub><b>Przemek
./README.md:138:155   - Unknown word (Prafful)       -- width="100px;" alt="Prafful Agarwal"/><br /><sub
./README.md:138:240   - Unknown word (prafful)       -- /><a href="#content-prafful1" title="Content">�
./README.md:139:158   - Unknown word (Sanket)        -- width="100px;" alt="Sanket Panhale"/><br /><sub
./README.md:139:165   - Unknown word (Panhale)       -- 100px;" alt="Sanket Panhale"/><br /><sub><b>Sanket
./README.md:139:241   - Unknown word (sankypanhale)  -- /><a href="#content-sankypanhale" title="Content">🖋
./README.md:142:158   - Unknown word (staillebois)   -- width="100px;" alt="staillebois"/><br /><sub><b>staillebois
./README.md:143:156   - Unknown word (Krisztián)     -- width="100px;" alt="Krisztián Nagy"/><br /><sub><b
./README.md:144:161   - Unknown word (Ivanov)        -- px;" alt="Alexander Ivanov"/><br /><sub><b>Alexander
./README.md:145:152   - Unknown word (Yosfik)        -- width="100px;" alt="Yosfik Alqadri"/><br /><sub
./README.md:145:159   - Unknown word (Alqadri)       -- 100px;" alt="Yosfik Alqadri"/><br /><sub><b>Yosfik
./README.md:146:155   - Unknown word (Agustí)        -- width="100px;" alt="Agustí Becerra Milà"/><br
./README.md:146:162   - Unknown word (Becerra)       -- 100px;" alt="Agustí Becerra Milà"/><br /><sub><b
./README.md:146:170   - Unknown word (Milà)          -- alt="Agustí Becerra Milà"/><br /><sub><b>Agust
./README.md:147:165   - Unknown word (Suárez)        -- px;" alt="Juan Manuel Suárez"/><br /><sub><b>Juan
./README.md:148:157   - Unknown word (Cortese)       -- "100px;" alt="Luigi Cortese"/><br /><sub><b>Luigi
./README.md:151:156   - Unknown word (Katarzyna)     -- width="100px;" alt="Katarzyna Rzepecka"/><br /><sub
./README.md:151:166   - Unknown word (Rzepecka)      -- px;" alt="Katarzyna Rzepecka"/><br /><sub><b>Katarzyna
./README.md:152:145   - Unknown word (adamski)       -- width="100px;" alt="adamski.pro"/><br /><sub><b
./README.md:153:154   - Unknown word (Shengli)       -- width="100px;" alt="Shengli Bai"/><br /><sub><b
./README.md:155:155   - Unknown word (Dmitry)        -- width="100px;" alt="Dmitry Avershin"/><br /><sub
./README.md:155:162   - Unknown word (Avershin)      -- 100px;" alt="Dmitry Avershin"/><br /><sub><b>Dmitry
./README.md:157:159   - Unknown word (hoangnam)      -- width="100px;" alt="hoangnam2261"/><br /><sub><b
./README.md:160:155   - Unknown word (Arpit)         -- width="100px;" alt="Arpit Jain"/><br /><sub><b
./README.md:161:149   - Unknown word (Ingi)          -- width="100px;" alt="Jón Ingi Sveinbjörnsson"/><br
./README.md:161:154   - Unknown word (Sveinbjörnsson) -- 0px;" alt="Jón Ingi Sveinbjörnsson"/><br /><sub><b>Jón
./README.md:162:160   - Unknown word (Kirill)         -- width="100px;" alt="Kirill Vlasov"/><br /><sub
./README.md:162:167   - Unknown word (Vlasov)         -- 100px;" alt="Kirill Vlasov"/><br /><sub><b>Kirill
./README.md:164:158   - Unknown word (Ranjeet)        -- width="100px;" alt="Ranjeet"/><br /><sub><b>Ranjeet
./README.md:166:157   - Unknown word (Saif)           -- width="100px;" alt="M Saif Asif"/><br /><sub><b
./README.md:166:162   - Unknown word (Asif)           -- 100px;" alt="M Saif Asif"/><br /><sub><b>M Saif
./README.md:169:160   - Unknown word (kanwarpreet)    -- width="100px;" alt="kanwarpreet25"/><br /><sub><b>kanwarpreet
./README.md:171:155   - Unknown word (Wramdemark)     -- width="100px;" alt="Per Wramdemark"/><br /><sub><b>Per
./README.md:172:167   - Unknown word (Suan)           -- " alt="Evan Sia Wai Suan"/><br /><sub><b>Evan
./README.md:173:162   - Unknown word (Anagha)         -- width="100px;" alt="AnaghaSasikumar"/><br /><sub
./README.md:173:168   - Unknown word (Sasikumar)      -- "100px;" alt="AnaghaSasikumar"/><br /><sub><b>AnaghaSasikum
./README.md:174:150   - Unknown word (Christoffer)    -- width="100px;" alt="Christoffer Hamberg"/><br /><sub
./README.md:174:162   - Unknown word (Hamberg)        -- px;" alt="Christoffer Hamberg"/><br /><sub><b>Christoffer
./README.md:175:153   - Unknown word (Dominik)        -- width="100px;" alt="Dominik Gruntz"/><br /><sub
./README.md:175:161   - Unknown word (Gruntz)         -- 00px;" alt="Dominik Gruntz"/><br /><sub><b>Dominik
./README.md:178:168   - Unknown word (Hannes)         -- width="100px;" alt="Hannes"/><br /><sub><b>Hannes
./README.md:179:157   - Unknown word (Gutiérrez)      -- width="100px;" alt="Leo Gutiérrez Ramírez"/><br /><sub
./README.md:179:167   - Unknown word (Ramírez)        -- alt="Leo Gutiérrez Ramírez"/><br /><sub><b>Leo
./README.md:180:153   - Unknown word (Zhang)          -- width="100px;" alt="Zhang WH"/><br /><sub><b>Zhang
./README.md:182:166   - Unknown word (Mavroeidis)     -- 100px;" alt="George Mavroeidis"/><br /><sub><b>George
./README.md:183:155   - Unknown word (Hemant)         -- width="100px;" alt="Hemant Bothra"/><br /><sub
./README.md:183:162   - Unknown word (Bothra)         -- 100px;" alt="Hemant Bothra"/><br /><sub><b>Hemant
./README.md:183:339   - Unknown word (hbothra)        -- a> <a href="#design-hbothra15" title="Design">�
./README.md:187:162   - Unknown word (Aristy)         -- 100px;" alt="George Aristy"/><br /><sub><b>George
./README.md:188:154   - Unknown word (Mahendran)      -- width="100px;" alt="Mahendran Mookkiah"/><br /><sub
./README.md:188:164   - Unknown word (Mookkiah)       -- px;" alt="Mahendran Mookkiah"/><br /><sub><b>Mahendran
./README.md:189:155   - Unknown word (Azureyjt)       -- width="100px;" alt="Azureyjt"/><br /><sub><b>Azureyjt
./README.md:190:152   - Unknown word (gans)           -- width="100px;" alt="gans"/><br /><sub><b>gans
./README.md:192:172   - Unknown word (Gopinath)       -- width="100px;" alt="Gopinath Langote"/><br /><sub
./README.md:192:181   - Unknown word (Langote)        -- 0px;" alt="Gopinath Langote"/><br /><sub><b>Gopinath
./README.md:193:152   - Unknown word (Hoswey)         -- width="100px;" alt="Hoswey"/><br /><sub><b>Hoswey
./README.md:196:159   - Unknown word (Pandey)         -- width="100px;" alt="Amit Pandey"/><br /><sub><b>Amit
./README.md:197:156   - Unknown word (gwildor)        -- width="100px;" alt="gwildor28"/><br /><sub><b>gwildor
./README.md:198:210   - Unknown word (llitfkitfk)     -- /><a href="#content-llitfkitfk" title="Content">🖋
./README.md:199:156   - Unknown word (Stamatis)       -- width="100px;" alt="Stamatis Pitsios"/><br /><sub
./README.md:199:165   - Unknown word (Pitsios)        -- 0px;" alt="Stamatis Pitsios"/><br /><sub><b>Stamatis
./README.md:1:72      - Unknown word (isnt)       -- its because kramdown isnt
./README.md:201:232   - Unknown word (Tschis)         -- /><a href="#content-Tschis" title="Content">🖋
./README.md:202:158   - Unknown word (Ankur)          -- width="100px;" alt="Ankur Kaushal"/><br /><sub
./README.md:202:164   - Unknown word (Kaushal)        -- "100px;" alt="Ankur Kaushal"/><br /><sub><b>Ankur
./README.md:205:174   - Unknown word (Ovidijus)       -- width="100px;" alt="Ovidijus Okinskas"/><br /><sub
./README.md:205:183   - Unknown word (Okinskas)       -- 0px;" alt="Ovidijus Okinskas"/><br /><sub><b>Ovidijus
./README.md:206:163   - Unknown word (Kasperczyk)     -- 100px;" alt="Robert Kasperczyk"/><br /><sub><b>Robert
./README.md:207:155   - Unknown word (Tapio)          -- width="100px;" alt="Tapio Rautonen"/><br /><sub
./README.md:207:161   - Unknown word (Rautonen)       -- "100px;" alt="Tapio Rautonen"/><br /><sub><b>Tapio
./README.md:208:156   - Unknown word (Orlov)          -- width="100px;" alt="Yuri Orlov"/><br /><sub><b>Yuri
./README.md:209:164   - Unknown word (Varun)          -- width="100px;" alt="Varun Upadhyay"/><br /><sub
./README.md:209:170   - Unknown word (Upadhyay)       -- "100px;" alt="Varun Upadhyay"/><br /><sub><b>Varun
./README.md:210:156   - Unknown word (Aditya)         -- width="100px;" alt="Aditya Pal"/><br /><sub><b
./README.md:211:162   - Unknown word (grzesiekkedzior) -- width="100px;" alt="grzesiekkedzior"/><br /><sub><b>grzesiekkedzi
./README.md:214:161   - Unknown word (Sivasubramani)   -- width="100px;" alt="Sivasubramani M"/><br /><sub><b>Sivasubrama
./README.md:215:150   - Unknown word (Sami)            -- width="100px;" alt="Sami Airaksinen"/><br />
./README.md:215:155   - Unknown word (Airaksinen)      -- width="100px;" alt="Sami Airaksinen"/><br /><sub><b>Sami
./README.md:216:151   - Unknown word (Janne)           -- width="100px;" alt="Janne Sinivirta"/><br /><sub
./README.md:216:157   - Unknown word (Sinivirta)       -- "100px;" alt="Janne Sinivirta"/><br /><sub><b>Janne
./README.md:217:160   - Unknown word (Chengbiao)       -- "100px;" alt="Boris-Chengbiao Zhou"/><br /><sub><b
./README.md:217:170   - Unknown word (Zhou)            -- alt="Boris-Chengbiao Zhou"/><br /><sub><b>Boris
./README.md:217:249   - Unknown word (Bobo)            -- /><a href="#content-Bobo1239" title="Content
./README.md:218:159   - Unknown word (Hein)            -- "100px;" alt="Jacob Hein"/><br /><sub><b>Jacob
./README.md:218:228   - Unknown word (Jahhein)         -- /><a href="#content-Jahhein" title="Content">🖋
./README.md:219:243   - Unknown word (iamrichardjones) -- /><a href="#content-iamrichardjones" title="Content">🖋
./README.md:220:169   - Unknown word (Carmena)         -- px;" alt="Rachel M. Carmena"/><br /><sub><b>Rachel
./README.md:220:248   - Unknown word (rachelcarmena)   -- /><a href="#content-rachelcarmena" title="Content">🖋
./README.md:223:153   - Unknown word (Zaerald)         -- width="100px;" alt="Zaerald Denze Lungos"/><br
./README.md:223:161   - Unknown word (Denze)           -- 00px;" alt="Zaerald Denze Lungos"/><br /><sub
./README.md:223:167   - Unknown word (Lungos)          -- alt="Zaerald Denze Lungos"/><br /><sub><b>Zaerald
./README.md:224:148   - Unknown word (Kappert)         -- width="100px;" alt="Lars Kappert"/><br /><sub><b>Lars
./README.md:224:222   - Unknown word (webpro)          -- /><a href="#content-webpro" title="Content">🖋
./README.md:225:221   - Unknown word (xiaod)           -- a href="#translation-xiaod-dev" title="Translation
./README.md:226:164   - Unknown word (Dolan)           -- width="100px;" alt="Matt Dolan"/><br /><sub><b>Matt
./README.md:227:155   - Unknown word (Manan)           -- width="100px;" alt="Manan"/><br /><sub><b>Manan
./README.md:228:154   - Unknown word (Nishant)         -- width="100px;" alt="Nishant Arora"/><br /><sub>
./README.md:228:162   - Unknown word (Arora)           -- 00px;" alt="Nishant Arora"/><br /><sub><b>Nishant
./README.md:229:170   - Unknown word (Peeyush)         -- width="100px;" alt="Peeyush"/><br /><sub><b>Peeyush
./README.md:232:155   - Unknown word (Rakesh)          -- width="100px;" alt="Rakesh"/><br /><sub><b>Rakesh
./README.md:233:164   - Unknown word (Seng)            -- width="100px;" alt="Wei Seng"/><br /><sub><b>Wei
./README.md:234:181   - Unknown word (Ashish)          -- width="100px;" alt="Ashish Trivedi"/><br /><sub
./README.md:234:188   - Unknown word (Trivedi)         -- 100px;" alt="Ashish Trivedi"/><br /><sub><b>Ashish
./README.md:236:153   - Unknown word (xdvrx)           -- width="100px;" alt="xdvrx1"/><br /><sub><b>xdvrx
./README.md:237:153   - Unknown word (Bethan)          -- width="100px;" alt="Bethan Palmer"/><br /><sub
./README.md:238:164   - Unknown word (Dreamz)          -- "100px;" alt="Toxic Dreamz"/><br /><sub><b>Toxic
./README.md:241:159   - Unknown word (Tjong)           -- 100px;" alt="Edy Cu Tjong"/><br /><sub><b>Edy
./README.md:242:158   - Unknown word (Michał)          -- width="100px;" alt="Michał Krzywański"/><br />
./README.md:242:165   - Unknown word (Krzywański)      -- 100px;" alt="Michał Krzywański"/><br /><sub><b>Micha
./README.md:243:162   - Unknown word (Birkner)         -- 100px;" alt="Stefan Birkner"/><br /><sub><b>Stefan
./README.md:244:160   - Unknown word (Fedor)           -- width="100px;" alt="Fedor Skvorcov"/><br /><sub
./README.md:244:166   - Unknown word (Skvorcov)        -- "100px;" alt="Fedor Skvorcov"/><br /><sub><b>Fedor
./README.md:245:157   - Unknown word (samil)           -- width="100px;" alt="samilAyoub"/><br /><sub><b
./README.md:245:162   - Unknown word (Ayoub)           -- width="100px;" alt="samilAyoub"/><br /><sub><b>samilAyoub
./README.md:246:153   - Unknown word (Vladislav)       -- width="100px;" alt="Vladislav Golubinov"/><br /><sub
./README.md:246:163   - Unknown word (Golubinov)       -- px;" alt="Vladislav Golubinov"/><br /><sub><b>Vladislav
./README.md:251:153   - Unknown word (Ascênio)         -- width="100px;" alt="Ascênio"/><br /><sub><b>Asc
./README.md:252:173   - Unknown word (Domenico)        -- width="100px;" alt="Domenico Sibilio"/><br /><sub
./README.md:252:182   - Unknown word (Sibilio)         -- 0px;" alt="Domenico Sibilio"/><br /><sub><b>Domenico
./README.md:253:160   - Unknown word (Akash)           -- width="100px;" alt="Akash Chandwani"/><br /><sub
./README.md:253:166   - Unknown word (Chandwani)       -- "100px;" alt="Akash Chandwani"/><br /><sub><b>Akash
./README.md:254:164   - Unknown word (Pavlo)           -- width="100px;" alt="Pavlo Manannikov"/><br />
./README.md:254:170   - Unknown word (Manannikov)      -- "100px;" alt="Pavlo Manannikov"/><br /><sub><b>Pavlo
./README.md:255:154   - Unknown word (Eiman)           -- width="100px;" alt="Eiman"/><br /><sub><b>Eiman
./README.md:259:158   - Unknown word (Ibrahim)         -- width="100px;" alt="Ibrahim ali abdelghany"/><br
./README.md:259:170   - Unknown word (abdelghany)      -- px;" alt="Ibrahim ali abdelghany"/><br /><sub><b>Ibrahim
./README.md:260:159   - Unknown word (Girish)          -- width="100px;" alt="Girish Kulkarni"/><br /><sub
./README.md:260:166   - Unknown word (Kulkarni)        -- 100px;" alt="Girish Kulkarni"/><br /><sub><b>Girish
./README.md:261:157   - Unknown word (Karazoun)        -- width="100px;" alt="Omar Karazoun"/><br /><sub><b>Omar
./README.md:263:156   - Unknown word (Vivek)           -- width="100px;" alt="Vivek Singh"/><br /><sub>
./README.md:264:163   - Unknown word (siavash)         -- width="100px;" alt="siavash"/><br /><sub><b>siavash
./README.md:265:158   - Unknown word (ruchpeanuts)     -- width="100px;" alt="ruchpeanuts"/><br /><sub><b>ruchpeanuts
./README.md:269:147   - Unknown word (KHADIR)          -- width="100px;" alt="KHADIR Tayeb"/><br /><sub>
./README.md:269:154   - Unknown word (Tayeb)           -- 100px;" alt="KHADIR Tayeb"/><br /><sub><b>KHADIR
./README.md:269:230   - Unknown word (tkhadir)         -- a href="#translation-tkhadir" title="Translation
./README.md:271:157   - Unknown word (Halil)           -- width="100px;" alt="Halil Demir"/><br /><sub>
./README.md:271:163   - Unknown word (Demir)           -- "100px;" alt="Halil Demir"/><br /><sub><b>Halil
./README.md:271:238   - Unknown word (demirhalil)      -- a href="#translation-demirhalil" title="Translation
./README.md:272:156   - Unknown word (Rohit)           -- width="100px;" alt="Rohit Singh"/><br /><sub>
./README.md:273:156   - Unknown word (byoungju)        -- width="100px;" alt="byoungju94"/><br /><sub><b>byoungju
./README.md:274:160   - Unknown word (Moustafa)        -- width="100px;" alt="Moustafa Farhat"/><br /><sub
./README.md:274:169   - Unknown word (Farhat)          -- 0px;" alt="Moustafa Farhat"/><br /><sub><b>Moustafa
./README.md:274:249   - Unknown word (moustafafarhat)  -- a href="#translation-moustafafarhat" title="Translation
./README.md:279:156   - Unknown word (Noam)            -- width="100px;" alt="Noam Greenshtain"/><br /
./README.md:279:161   - Unknown word (Greenshtain)     -- width="100px;" alt="Noam Greenshtain"/><br /><sub><b>Noam
./README.md:280:149   - Unknown word (yonghong)        -- width="100px;" alt="yonghong Xu"/><br /><sub><b>yonghong
./README.md:281:167   - Unknown word (jinishavora)     -- width="100px;" alt="jinishavora"/><br /><sub><b>jinishavora
./README.md:282:150   - Unknown word (Elvys)           -- width="100px;" alt="Elvys Soares"/><br /><sub
./README.md:282:156   - Unknown word (Soares)          -- "100px;" alt="Elvys Soares"/><br /><sub><b>Elvys
./README.md:287:153   - Unknown word (Alain)           -- width="100px;" alt="Alain"/><br /><sub><b>Alain
./README.md:295:155   - Unknown word (Xenilo)          -- width="100px;" alt="Xenilo137"/><br /><sub><b>Xenilo
./README.md:296:174   - Unknown word (Souza)           -- 100px;" alt="Samuel Souza"/><br /><sub><b>Samuel
./README.md:297:155   - Unknown word (Marlo)           -- width="100px;" alt="Marlo Henrique"/><br /><sub
./README.md:297:161   - Unknown word (Henrique)        -- "100px;" alt="Marlo Henrique"/><br /><sub><b>Marlo
./README.md:297:242   - Unknown word (marlo)          -- a href="#translation-marlo2222" title="Translation
./README.md:298:156   - Unknown word (Andriy)         -- width="100px;" alt="AndriyPyzh"/><br /><sub><b
./README.md:298:162   - Unknown word (Pyzh)           -- "100px;" alt="AndriyPyzh"/><br /><sub><b>AndriyPyzh
./README.md:299:159   - Unknown word (karthikbhat)    -- width="100px;" alt="karthikbhat13"/><br /><sub><b>karthikbhat
./README.md:300:155   - Unknown word (Morteza)        -- width="100px;" alt="Morteza Adigozalpour"/><br
./README.md:300:163   - Unknown word (Adigozalpour)   -- 00px;" alt="Morteza Adigozalpour"/><br /><sub><b>Morteza
./README.md:301:179   - Unknown word (Nagaraj)        -- width="100px;" alt="Nagaraj Tantri"/><br /><sub
./README.md:301:187   - Unknown word (Tantri)         -- 00px;" alt="Nagaraj Tantri"/><br /><sub><b>Nagaraj
./README.md:304:151   - Unknown word (Francesco)      -- width="100px;" alt="Francesco Scuccimarri"/><br /
./README.md:304:161   - Unknown word (Scuccimarri)    -- px;" alt="Francesco Scuccimarri"/><br /><sub><b>Francesco
./README.md:305:154   - Unknown word (Conny)          -- width="100px;" alt="Conny Hansson"/><br /><sub
./README.md:305:160   - Unknown word (Hansson)        -- "100px;" alt="Conny Hansson"/><br /><sub><b>Conny
./README.md:306:152   - Unknown word (Muklas)         -- width="100px;" alt="Muklas Rahmanto"/><br /><sub
./README.md:306:159   - Unknown word (Rahmanto)       -- 100px;" alt="Muklas Rahmanto"/><br /><sub><b>Muklas
./README.md:306:241   - Unknown word (muklasr)        -- a href="#translation-muklasr" title="Translation
./README.md:307:151   - Unknown word (Vadim)          -- width="100px;" alt="Vadim"/><br /><sub><b>Vadim
./README.md:308:157   - Unknown word (Simran)         -- width="100px;" alt="Simran Keshri"/><br /><sub
./README.md:308:164   - Unknown word (Keshri)         -- 100px;" alt="Simran Keshri"/><br /><sub><b>Simran
./README.md:310:155   - Unknown word (Ghasemi)        -- width="100px;" alt="Ali Ghasemi"/><br /><sub><b>Ali
./README.md:314:155   - Unknown word (Mozartus)       -- width="100px;" alt="Mozartus"/><br /><sub><b>Mozartus
./README.md:314:230   - Unknown word (Mozartuss)      -- a href="#translation-Mozartuss" title="Translation
./README.md:315:157   - Unknown word (Manvi)          -- width="100px;" alt="Manvi Goel"/><br /><sub><b
./README.md:315:163   - Unknown word (Goel)           -- "100px;" alt="Manvi Goel"/><br /><sub><b>Manvi
./README.md:316:158   - Unknown word (Anum)           -- width="100px;" alt="Anum Amin"/><br /><sub><b
./README.md:317:160   - Unknown word (Uehara)         -- width="100px;" alt="Reo Uehara"/><br /><sub><b>Reo
./README.md:318:152   - Unknown word (Fiordy)         -- width="100px;" alt="Fiordy"/><br /><sub><b>Fiordy
./README.md:319:155   - Unknown word (Harshal)        -- width="100px;" alt="Harshal"/><br /><sub><b>Harshal
./README.md:322:182   - Unknown word (Abhinav)        -- width="100px;" alt="Abhinav Vashisth"/><br /><sub
./README.md:322:190   - Unknown word (Vashisth)       -- 00px;" alt="Abhinav Vashisth"/><br /><sub><b>Abhinav
./README.md:324:156   - Unknown word (Shrirang)       -- width="100px;" alt="Shrirang"/><br /><sub><b>Shrirang
./README.md:325:164   - Unknown word (interactwithankush) -- width="100px;" alt="interactwithankush"/><br /><sub><b>interactwitha
./README.md:327:159   - Unknown word (Leisterbecker)      -- width="100px;" alt="Leisterbecker"/><br /><sub><b>Leisterbecker
./README.md:331:160   - Unknown word (Shivansh)           -- width="100px;" alt="ShivanshCharak"/><br /><sub>
./README.md:331:168   - Unknown word (Charak)             -- 00px;" alt="ShivanshCharak"/><br /><sub><b>ShivanshChara
./README.md:332:157   - Unknown word (Hattori)            -- width="100px;" alt="HattoriHenzo"/><br /><sub><b
./README.md:332:164   - Unknown word (Henzo)              -- 100px;" alt="HattoriHenzo"/><br /><sub><b>HattoriHenzo
./README.md:333:151   - Unknown word (Arnab)              -- width="100px;" alt="Arnab Sen"/><br /><sub><b
./README.md:334:160   - Unknown word (Mohana)             -- width="100px;" alt="MohanaRao SV"/><br /><sub>
./README.md:335:157   - Unknown word (Yonatan)            -- width="100px;" alt="Yonatan Karp-Rudin"/><br />
./README.md:335:165   - Unknown word (Karp)               -- 00px;" alt="Yonatan Karp-Rudin"/><br /><sub>
./README.md:335:170   - Unknown word (Rudin)              -- " alt="Yonatan Karp-Rudin"/><br /><sub><b>Yonatan
./README.md:336:159   - Unknown word (Oliani)             -- width="100px;" alt="Oliani"/><br /><sub><b>Oliani
./README.md:337:152   - Unknown word (Renjie)             -- width="100px;" alt="Renjie LIU"/><br /><sub><b
./README.md:341:154   - Unknown word (xyllq)              -- width="100px;" alt="xyllq999"/><br /><sub><b>xyllq
./README.md:342:162   - Unknown word (Bilal)              -- 00px;" alt="Mohamed Bilal"/><br /><sub><b>Mohamed
./README.md:343:168   - Unknown word (Karshil)            -- width="100px;" alt="Karshil sheth"/><br /><sub>
./README.md:343:176   - Unknown word (sheth)              -- 00px;" alt="Karshil sheth"/><br /><sub><b>Karshil
./README.md:344:156   - Unknown word (kongleong)          -- width="100px;" alt="kongleong86"/><br /><sub><b>kongleong
./README.md:345:153   - Unknown word (Aitor)              -- width="100px;" alt="Aitor Fidalgo Sánchez"/><br
./README.md:345:159   - Unknown word (Fidalgo)            -- "100px;" alt="Aitor Fidalgo Sánchez"/><br /><sub
./README.md:345:167   - Unknown word (Sánchez)            -- alt="Aitor Fidalgo Sánchez"/><br /><sub><b>Aitor
./README.md:345:254   - Unknown word (aitorfi)            -- a href="#translation-aitorfi" title="Translation
./README.md:349:150   - Unknown word (Minh)               -- width="100px;" alt="Minh Nguyen"/><br /><sub
./README.md:350:156   - Unknown word (yiichan)            -- width="100px;" alt="yiichan"/><br /><sub><b>yiichan
./README.md:352:158   - Unknown word (zhoumengyks)        -- width="100px;" alt="zhoumengyks"/><br /><sub><b>zhoumengyks
./README.md:358:171   - Unknown word (Faizan)             -- 0px;" alt="Mohammed Faizan Ahmed"/><br /><sub>
./README.md:359:158   - Unknown word (Fernandes)          -- "100px;" alt="Bruno Fernandes"/><br /><sub><b>Bruno
./README.md:360:157   - Unknown word (Samman)             -- width="100px;" alt="SammanPali"/><br /><sub><b
./README.md:361:153   - Unknown word (Qixiang)            -- width="100px;" alt="Qixiang Chen"/><br /><sub><b
./README.md:362:160   - Unknown word (Shourya)            -- width="100px;" alt="Shourya Manekar"/><br /><sub
./README.md:362:168   - Unknown word (Manekar)            -- 00px;" alt="Shourya Manekar"/><br /><sub><b>Shourya
./README.md:362:249   - Unknown word (shouryamanekar)     -- a href="#translation-shouryamanekar" title="Translation
./README.md:363:230   - Unknown word (seongkyu)           -- a href="#translation-seongkyu-lim" title="Translation
./README.md:364:157   - Unknown word (Fidor)              -- width="100px;" alt="JanFidor"/><br /><sub><b>JanFidor
./README.md:367:161   - Unknown word (Yakutovich)         -- "100px;" alt="Anton Yakutovich"/><br /><sub><b>Anton
./README.md:368:156   - Unknown word (steph)              -- width="100px;" alt="steph88ss"/><br /><sub><b
./README.md:369:155   - Unknown word (Yujan)              -- width="100px;" alt="Yujan Ranjitkar"/><br /><sub
./README.md:369:161   - Unknown word (Ranjitkar)          -- "100px;" alt="Yujan Ranjitkar"/><br /><sub><b>Yujan
./README.md:370:154   - Unknown word (yusha)              -- width="100px;" alt="yusha-g"/><br /><sub><b>yusha
./README.md:371:167   - Unknown word (Volkmann)           -- 100px;" alt="Robert Volkmann"/><br /><sub><b>Robert
./README.md:372:153   - Unknown word (Bipin)              -- width="100px;" alt="Bipin Kumar Chaurasia"/><br
./README.md:372:159   - Unknown word (Kumar)              -- "100px;" alt="Bipin Kumar Chaurasia"/><br /><sub
./README.md:372:165   - Unknown word (Chaurasia)          -- px;" alt="Bipin Kumar Chaurasia"/><br /><sub><b>Bipin
./README.md:377:161   - Unknown word (harshalkhachane)    -- width="100px;" alt="harshalkhachane"/><br /><sub><b>harshalkhacha
./README.md:378:152   - Unknown word (Tejas)              -- width="100px;" alt="Tejas Singh"/><br /><sub>
./README.md:379:155   - Unknown word (Sudarsan)           -- width="100px;" alt="Sudarsan Balaji"/><br /><sub
./README.md:379:164   - Unknown word (Balaji)             -- 0px;" alt="Sudarsan Balaji"/><br /><sub><b>Sudarsan
./README.md:380:167   - Unknown word (Vaibhav)            -- width="100px;" alt="Vaibhav Agrawal"/><br /><sub
./README.md:380:175   - Unknown word (Agrawal)            -- 00px;" alt="Vaibhav Agrawal"/><br /><sub><b>Vaibhav
./README.md:382:161   - Unknown word (prasad)             -- width="100px;" alt="prasad-333"/><br /><sub><b
./README.md:385:154   - Unknown word (Juren)              -- width="100px;" alt="JurenXu"/><br /><sub><b>JurenXu
./README.md:386:156   - Unknown word (murph)              -- width="100px;" alt="murphShaw"/><br /><sub><b
./README.md:388:168   - Unknown word (Singla)             -- "100px;" alt="JoshuaSinglaANU"/><br /><sub><b>JoshuaSing
./README.md:389:272   - Unknown word (moura)              -- translation-ricardo-ramos-moura" title="Translation
./README.md:390:165   - Unknown word (Farid)              -- width="100px;" alt="Farid Zouheir"/><br /><sub
./README.md:390:171   - Unknown word (Zouheir)            -- "100px;" alt="Farid Zouheir"/><br /><sub><b>Farid
./README.md:390:250   - Unknown word (zhrfrd)             -- a href="#translation-zhrfrd" title="Translation
./README.md:391:172   - Unknown word (Vinícius)           -- width="100px;" alt="Vinícius A. B."/><br /><sub>
./README.md:391:259   - Unknown word (Viniberaldo)       -- a href="#translation-Viniberaldo" title="Translation
./README.md:394:168   - Unknown word (Stefanel)          -- width="100px;" alt="Stefanel Stan"/><br /><sub><b
./README.md:395:160   - Unknown word (bhati)             -- 100px;" alt="Prince bhati"/><br /><sub><b>Prince
./README.md:65:39     - Unknown word (Gitter)     -- your questions in the [Gitter chatroom](https://gitter
./README.md:79:159    - Unknown word (Seppälä)    -- "100px;" alt="Ilkka Seppälä"/><br /><sub><b>Ilkka
./README.md:80:144    - Unknown word (Subhrodip)  -- width="100px;" alt="Subhrodip Mohanta"/><br /><sub
./README.md:80:154    - Unknown word (Mohanta)    -- px;" alt="Subhrodip Mohanta"/><br /><sub><b>Subhrodip
./README.md:80:470    - Unknown word (ohbus)      -- a href="#maintenance-ohbus" title="Maintenance
./README.md:81:155    - Unknown word (amit)       -- width="100px;" alt="amit1307"/><br /><sub><b
./README.md:82:153    - Unknown word (Narendra)   -- width="100px;" alt="Narendra Pathai"/><br /><sub
./README.md:82:162    - Unknown word (Pathai)     -- 0px;" alt="Narendra Pathai"/><br /><sub><b>Narendra
./README.md:82:338    - Unknown word (npathai)    -- /a> <a href="#ideas-npathai" title="Ideas, Planning
./README.md:83:153    - Unknown word (Jeroen)     -- width="100px;" alt="Jeroen Meulemeester"/><br
./README.md:83:160    - Unknown word (Meulemeester) -- 100px;" alt="Jeroen Meulemeester"/><br /><sub><b>Jeroen
./README.md:88:165    - Unknown word (Anurag)       -- width="100px;" alt="Anurag Agarwal"/><br /><sub
./README.md:88:172    - Unknown word (Agarwal)      -- 100px;" alt="Anurag Agarwal"/><br /><sub><b>Anurag
./README.md:89:154    - Unknown word (Markus)       -- width="100px;" alt="Markus Moser"/><br /><sub>
./README.md:89:161    - Unknown word (Moser)        -- 100px;" alt="Markus Moser"/><br /><sub><b>Markus
./README.md:89:232    - Unknown word (markusmo)     -- br /><a href="#design-markusmo3" title="Design">🎨
./README.md:90:155    - Unknown word (Sabiq)        -- width="100px;" alt="Sabiq Ihab"/><br /><sub><b
./README.md:90:161    - Unknown word (Ihab)         -- "100px;" alt="Sabiq Ihab"/><br /><sub><b>Sabiq
./README.md:91:151    - Unknown word (Amit)         -- width="100px;" alt="Amit Dixit"/><br /><sub>
./README.md:92:164    - Unknown word (Piyush)       -- width="100px;" alt="Piyush Kailash Chaudhari"/
./README.md:92:171    - Unknown word (Kailash)      -- 100px;" alt="Piyush Kailash Chaudhari"/><br /><sub
./README.md:92:179    - Unknown word (Chaudhari)    -- alt="Piyush Kailash Chaudhari"/><br /><sub><b>Piyush
./README.md:93:158    - Unknown word (joshzambales) -- width="100px;" alt="joshzambales"/><br /><sub><b>joshzambales
./README.md:94:155    - Unknown word (Kamil)        -- width="100px;" alt="Kamil Pietruszka"/><br />
./README.md:94:161    - Unknown word (Pietruszka)   -- "100px;" alt="Kamil Pietruszka"/><br /><sub><b>Kamil
./README.md:97:155    - Unknown word (Zafar)        -- width="100px;" alt="Zafar Khaydarov"/><br /><sub
./README.md:97:161    - Unknown word (Khaydarov)    -- "100px;" alt="Zafar Khaydarov"/><br /><sub><b>Zafar
./README.md:99:161    - Unknown word (Argyro)       -- width="100px;" alt="Argyro Sioziou"/><br /><sub
./README.md:99:168    - Unknown word (Sioziou)      -- 100px;" alt="Argyro Sioziou"/><br /><sub><b>Argyro
./abstract-document/README.md:143:37    - Unknown word (Lambo)      -- Property.MODEL.toString(), "Lambo",
./abstract-factory/README.md:22:140    - Unknown word (orcish)     -- elven army whereas the orcish kingdom needs an orcish
./abstract-factory/README.md:22:64     - Unknown word (elven)      -- a common theme. The elven kingdom needs an elven
./abstract-factory/README.md:3:11      - Unknown word (Creational) -- category: Creational
./abstract-factory/README.md:50:4      - Unknown word (Elven)      -- // Elven implementations ->
./abstract-factory/README.md:73:4      - Unknown word (Orcish)     -- // Orcish implementations similarly
./abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java:25:22     - Unknown word (abstractfactory) -- package com.iluwatar.abstractfactory;
./active-object/README.md:19:44     - Unknown word (untameable) -- for their wildness and untameable soul. It seems like
./acyclic-visitor/README.md:152:13    - Unknown word (Liskov's)     -- * Violates [Liskov's Substitution Principle
./acyclic-visitor/README.md:85:41     - Unknown word (configurator) -- hayes + " used with Dos configurator.");
./acyclic-visitor/src/main/java/com/iluwatar/acyclicvisitor/AllModemVisitor.java:25:22     - Unknown word (acyclicvisitor) -- package com.iluwatar.acyclicvisitor;
./acyclic-visitor/src/test/java/com/iluwatar/acyclicvisitor/ConfigureForDosVisitorTest.java:28:22     - Unknown word (lidalia)    -- import static uk.org.lidalia.slf4jext.Level.INFO
./acyclic-visitor/src/test/java/com/iluwatar/acyclicvisitor/ConfigureForDosVisitorTest.java:28:34     - Unknown word (jext)       -- static uk.org.lidalia.slf4jext.Level.INFO;
./adapter/README.md:102:97    - Unknown word (subclassing) -- adapt their interface by subclassing everyone. An object
./adapter/README.md:107:4     - Unknown word (Dzone)       -- * [Dzone](https://dzone.com/articles
./adapter/README.md:109:4     - Unknown word (Baeldung)    -- * [Baeldung](https://www.baeldung
./adapter/README.md:114:10    - Unknown word (Adaptee)     -- * Adapts Adaptee to Target by committing
./adapter/README.md:115:33    - Unknown word (Adaptee’s)   -- Adapter override some of Adaptee’s behavior since Adapter
./adapter/README.md:116:93    - Unknown word (adaptee)     -- needed to get to the adaptee.
./adapter/README.md:120:40    - Unknown word (Adaptees)    -- Adapter work with many Adaptees, that is, the Adaptee
./adapter/src/main/java/com/iluwatar/adapter/App.java:33:89     - Unknown word (adaptee's)  -- adapter implements the adaptee's
./aggregator-microservices/information-microservice/src/main/java/com/iluwatar/information/microservice/InformationController.java:37:39     - Unknown word (informations) -- retrieve a product's informations.
./api-gateway/price-microservice/src/test/java/com/iluwatar/price/microservice/PriceControllerTest.java:37:8      - Unknown word (testget)    -- void testgetPrice() {
./arrange-act-assert/src/main/java/com/iluwatar/arrangeactassert/Cash.java:25:22     - Unknown word (arrangeactassert) -- package com.iluwatar.arrangeactassert;
./async-method-invocation/README.md:112:50    - Unknown word (lazyval)    -- executor.startProcess(lazyval(10, 500));
./async-method-invocation/README.md:140:36    - Unknown word (iluwatar)   -- executor-2] INFO com.iluwatar.async.method.invocation
./bridge/README.md:143:35    - Unknown word (bloodlust)  -- info("The item spreads bloodlust.");
./bridge/README.md:153:18    - Unknown word (Bloodlust)  -- LOGGER.info("Bloodlust slowly disappears."
./bridge/README.md:204:122   - Unknown word (Rumbaugh)   -- object into two parts. Rumbaugh uses the term "nested
./bridge/README.md:205:166   - Unknown word (Coplien's)  -- A simple example is Coplien's String class, in which
./bridge/README.md:43:8      - Unknown word (unwield)    -- void unwield();
./bridge/README.md:69:31     - Unknown word (unwielded)  -- LOGGER.info("The sword is unwielded.");
./builder/README.md:120:47    - Unknown word (Riobard)    -- Builder(Profession.MAGE, "Riobard").withHairColor(HairColor
./builder/src/main/java/com/iluwatar/builder/App.java:67:57     - Unknown word (Amberjill)  -- Profession.WARRIOR, "Amberjill")
./builder/src/main/java/com/iluwatar/builder/Weapon.java:32:23     - Unknown word (WARHAMMER)  -- DAGGER, SWORD, AXE, WARHAMMER, BOW;
./business-delegate/README.md:128:27    - Unknown word (Maradona)   -- client.playbackMovie("Maradona: The Greatest Ever"
./bytecode/README.md:18:73     - Unknown word (playtesting) -- hundreds of times through playtesting. It's not
./bytecode/README.md:26:2      - Unknown word (Gameprogrammingpatterns) -- [Gameprogrammingpatterns.com](https://gameprogrammingp
./bytecode/src/main/java/com/iluwatar/bytecode/App.java:37:81     - Unknown word (behaviours) -- define high number of behaviours and
./bytecode/src/main/java/com/iluwatar/bytecode/util/InstructionConverterUtil.java:44:9      - Unknown word (splited)    -- var splitedInstructions = instructions
./caching/README.md:295:22    - Unknown word (Stategy)    -- app.useCacheAsideStategy();
./caching/README.md:65:15     - Unknown word (upsert)     -- UserAccount upsertDb(UserAccount userAccount
./caching/src/main/java/com/iluwatar/caching/App.java:216:14    - Unknown word (Yasha)               -- "Yasha",
./caching/src/main/java/com/iluwatar/caching/App.java:50:7      - Unknown word (maintainconsistency) -- * to maintainconsistency between data held in
./caching/src/main/java/com/iluwatar/caching/database/DbManagerFactory.java:28:36     - Unknown word (accroding)  -- database connection accroding the input parameter
./caching/src/main/java/com/iluwatar/caching/database/MongoDb.java:52:49     - Unknown word (rootpassword) -- String MONGO_PASSWORD = "rootpassword";
./caching/src/main/java/com/iluwatar/caching/database/VirtualDb.java:82:13     - Unknown word (reecord)    -- * Update reecord in DB.
./chain-of-responsibility/README.md:176:10    - Unknown word (servlet)    -- * [javax.servlet.Filter#doFilter()](http
./chain-of-responsibility/src/main/java/com/iluwatar/chain/Request.java:47:34     - Unknown word (unhandle)   -- there's no way to 'unhandle' a request.
./circuit-breaker/README.md:320:12    - Unknown word (Hystrix)    -- * [Netflix Hystrix API](https://github
./circuit-breaker/src/main/java/com/iluwatar/circuitbreaker/App.java:25:22     - Unknown word (circuitbreaker) -- package com.iluwatar.circuitbreaker;
./circuit-breaker/src/test/java/com/iluwatar/circuitbreaker/DefaultCircuitBreakerTest.java:53:47     - Unknown word (idempotency) -- again to closed to test idempotency
./circuit-breaker/src/test/java/com/iluwatar/circuitbreaker/DefaultCircuitBreakerTest.java:77:21     - Unknown word (paramater)   -- //Call with the paramater start_time set to huge
./cloud-claim-check-pattern/README.md:74:64     - Unknown word (callusageapp) -- storage in the container `callusageapp`. For every trigger
./cloud-claim-check-pattern/call-usage-app/src/main/java/com/iluwatar/claimcheckpattern/consumer/callcostprocessor/functions/UsageCostProcessorFunction.java:25:22     - Unknown word (claimcheckpattern) -- package com.iluwatar.claimcheckpattern.consumer.callcostprocessor
./cloud-claim-check-pattern/call-usage-app/src/main/java/com/iluwatar/claimcheckpattern/consumer/callcostprocessor/functions/UsageCostProcessorFunction.java:25:49     - Unknown word (callcostprocessor) -- claimcheckpattern.consumer.callcostprocessor.functions;
./cloud-claim-check-pattern/call-usage-app/src/main/java/com/iluwatar/claimcheckpattern/producer/calldetails/functions/UsageDetailPublisherFunction.java:118:35    - Unknown word (usagecostprocessorfunction) -- messageHeader.setTopic("usagecostprocessorfunction-topic");
./cloud-claim-check-pattern/call-usage-app/src/main/java/com/iluwatar/claimcheckpattern/producer/calldetails/functions/UsageDetailPublisherFunction.java:25:49     - Unknown word (calldetails) -- claimcheckpattern.producer.calldetails.functions;
./cloud-claim-check-pattern/call-usage-app/src/main/java/com/iluwatar/claimcheckpattern/utility/MessageHandlerUtility.java:70:29     - Unknown word (Persistant) -- public Message<T> readFromPersistantStorage(MessageReference
./cloud-static-content-hosting/README.md:116:157   - Unknown word (xwnaqa)     -- for testing e.g. `d2k3xwnaqa8nqx.cloudfront.net`
./cloud-static-content-hosting/README.md:64:128    - Unknown word (programmic) -- cliv1.html) to gain programmic access to AWS cloud
./cloud-static-content-hosting/README.md:66:54     - Unknown word (desribed)   -- command `aws configure` as desribed in the [instructions
./cloud-static-content-hosting/README.md:71:56     - Unknown word (jsjmg)      -- my-static-website-jh34jsjmg`
./collecting-parameter/README.md:168:90    - Unknown word (Kerivsky)            -- ingToPatterns.pdf) by Joshua Kerivsky
./collecting-parameter/README.md:26:5      - Unknown word (localised)  -- are localised to the smaller functions
./collecting-parameter/README.md:39:22     - Unknown word (collectingparameter) -- package com.iluwatar.collectingparameter;
./collecting-parameter/README.md:52:7      - Unknown word (Initialising)        -- Initialising the printer queue with
./collecting-parameter/README.md:92:51     - Unknown word (Colour)              -- edAndSingleSided = nextItem.isColour && !nextItem.isDoubleSided
./collection-pipeline/src/main/java/com/iluwatar/collectionpipeline/App.java:25:22     - Unknown word (collectionpipeline) -- package com.iluwatar.collectionpipeline;
./collection-pipeline/src/main/java/com/iluwatar/collectionpipeline/CarFactory.java:45:27     - Unknown word (Cascada)    -- new Car("Buick", "Cascada", 2016, Category.CONVERTIBLE
./combinator/README.md:113:25    - Unknown word (Mult)        -- var finder = identMult();
./combinator/README.md:16:114    - Unknown word (combinators) -- of type T, and some “combinators” which can combine values
./combinator/README.md:208:4     - Unknown word (Combinatory) -- - [Combinatory logic](https://wiki
./combinator/README.md:22:24     - Unknown word (combinatory) -- In computer science, combinatory logic is used as a simplified
./command/README.md:142:19    - Unknown word (unshrink)   -- // casts shrink/unshrink spell
./command/README.md:16:46     - Unknown word (undoable)   -- requests, and support undoable operations.
./commander/README.md:21:260    - Unknown word (databses)   -- payment), since two databses cannot be updated atomically
./commander/README.md:21:532    - Unknown word (idempotence) -- retries while ensuring idempotence (even if the request
./commander/src/main/java/com/iluwatar/commander/AppEmployeeDbFailCases.java:95:9      - Unknown word (aefc)       -- var aefc = new AppEmployeeDbFailCases
./commander/src/main/java/com/iluwatar/commander/AppMessagingFailCases.java:143:9     - Unknown word (amfc)       -- var amfc = new AppMessagingFailCases
./commander/src/main/java/com/iluwatar/commander/AppPaymentFailCases.java:106:9     - Unknown word (apfc)       -- var apfc = new AppPaymentFailCases
./commander/src/main/java/com/iluwatar/commander/AppQueueFailCases.java:141:9     - Unknown word (aqfc)       -- var aqfc = new AppQueueFailCases
./commander/src/main/java/com/iluwatar/commander/AppShippingFailCases.java:119:9     - Unknown word (asfc)       -- var asfc = new AppShippingFailCases
./commander/src/main/java/com/iluwatar/commander/Commander.java:244:44    - Unknown word (queuetime)  -- time is lesser than queuetime it would have already
./commander/src/main/java/com/iluwatar/commander/Retry.java:85:59     - Unknown word (Isuue)      -- be passed into handleIsuue method
./commander/src/main/java/com/iluwatar/commander/employeehandle/EmployeeDatabase.java:25:32     - Unknown word (employeehandle) -- com.iluwatar.commander.employeehandle;
./commander/src/main/java/com/iluwatar/commander/employeehandle/EmployeeHandle.java:50:27     - Unknown word (rcvd)       -- return o.id; //true rcvd - change addedToEmployeeHandl
./commander/src/main/java/com/iluwatar/commander/employeehandle/EmployeeHandle.java:50:76     - Unknown word (dont)       -- ToEmployeeHandle to true else dont do anything
./commander/src/main/java/com/iluwatar/commander/messagingservice/MessagingDatabase.java:25:32     - Unknown word (messagingservice) -- com.iluwatar.commander.messagingservice;
./commander/src/main/java/com/iluwatar/commander/messagingservice/MessagingService.java:96:48     - Unknown word (NUBER)      -- us on CUSTOMER-CARE-NUBER in case of any queries
./commander/src/main/java/com/iluwatar/commander/paymentservice/PaymentDatabase.java:25:32     - Unknown word (paymentservice) -- com.iluwatar.commander.paymentservice;
./commander/src/main/java/com/iluwatar/commander/paymentservice/PaymentService.java:54:34     - Unknown word (userid)     -- could also be sending a userid, payment details here
./commander/src/main/java/com/iluwatar/commander/shippingservice/ShippingDatabase.java:25:32     - Unknown word (shippingservice) -- com.iluwatar.commander.shippingservice;
./commander/src/main/java/com/iluwatar/commander/shippingservice/ShippingDatabase.java:45:37     - Unknown word (trasnaction)     -- ShippingRequest get(String trasnactionId) {
./component/README.md:160:50    - Unknown word (Tutemic)    -- programming series - Tutemic] (https://www.youtube
./component/src/main/java/com/iluwatar/component/component/graphiccomponent/GraphicComponent.java:1:42      - Unknown word (graphiccomponent) -- component.component.graphiccomponent;
./component/src/main/java/com/iluwatar/component/component/inputcomponent/DemoInputComponent.java:1:42      - Unknown word (inputcomponent) -- component.component.inputcomponent;
./component/src/main/java/com/iluwatar/component/component/physiccomponent/ObjectPhysicComponent.java:1:42      - Unknown word (physiccomponent) -- component.component.physiccomponent;
./component/src/test/java/com/iluwatar/component/GameObjectTest.java:20:50     - Unknown word (initialised) -- and coordinates are initialised to 0 in GameObject.java
./composite-entity/src/main/java/com/iluwatar/compositeentity/App.java:25:22     - Unknown word (compositeentity) -- package com.iluwatar.compositeentity;
./composite-view/README.md:14:120    - Unknown word (webapps)    -- creating views for websites/webapps.
./composite-view/README.md:201:5     - Unknown word (scriplets)  -- The scriplets in the file are part
./composite-view/README.md:25:74     - Unknown word (subviews)   -- composed of smaller subviews.
./composite-view/README.md:274:1     - Unknown word (Intelli)    -- IntelliJ:
./composite-view/README.md:41:22     - Unknown word (Servlet)    -- Firstly there is `AppServlet` which is an `HttpServlet
./composite-view/src/main/java/com/iluwatar/compositeview/AppServlet.java:25:22     - Unknown word (compositeview) -- package com.iluwatar.compositeview;
./converter/README.md:52:34     - Unknown word (Dtos)       -- final List<U> createFromDtos(final Collection<T>
./converter/README.md:52:59     - Unknown word (dtos)       -- final Collection<T> dtos) {
./converter/src/main/java/com/iluwatar/converter/App.java:52:19     - Unknown word (Camile)     -- new User("Camile", "Tough", false, "
./cqrs/README.md:2:8       - Unknown word (CQRS)       -- title: CQRS
./cqrs/src/main/java/com/iluwatar/cqrs/app/App.java:25:22     - Unknown word (cqrs)       -- package com.iluwatar.cqrs.app;
./cqrs/src/main/java/com/iluwatar/cqrs/app/App.java:42:71     - Unknown word (DTOs)       -- and return objects as DTOs (Data transfer Objects
./cqrs/src/main/java/com/iluwatar/cqrs/commandes/CommandServiceImpl.java:25:27     - Unknown word (commandes)  -- package com.iluwatar.cqrs.commandes;
./cqrs/src/main/java/com/iluwatar/cqrs/queries/QueryServiceImpl.java:86:16     - Unknown word (bookcount)  -- BigInteger bookcount;
./cqrs/src/main/java/com/iluwatar/cqrs/queries/QueryServiceImpl.java:99:16     - Unknown word (authorcount) -- BigInteger authorcount;
./cqrs/src/main/java/com/iluwatar/cqrs/util/HibernateUtil.java:39:39     - Unknown word (SESSIONFACTORY) -- final SessionFactory SESSIONFACTORY = buildSessionFactory
./dao/README.md:101:50    - Unknown word (Danson)     -- Customer(4, "Dan", "Danson");
./dao/README.md:105:27    - Unknown word (Danielson)  -- customer.setLastName("Danielson");
./dao/README.md:109:31    - Unknown word (cust)       -- customerStream.forEach((cust) -> log.info(cust.toString
./dao/README.md:121:44    - Unknown word (Adamson)    -- firstName='Adam', lastName='Adamson'}
./dao/README.md:122:43    - Unknown word (Bobson)     -- firstName='Bob', lastName='Bobson'}
./dao/README.md:51:77     - Unknown word (RDBMS)      -- DBCustomerDao` is the real RDBMS implementation.
./dao/src/main/java/com/iluwatar/dao/DbCustomerDao.java:61:82     - Unknown word (NOSONAR)    -- FROM CUSTOMERS"); // NOSONAR
./dao/src/test/java/com/iluwatar/dao/CustomerTest.java:40:31     - Unknown word (FIRSTNAME)  -- static final String FIRSTNAME = "Winston";
./dao/src/test/java/com/iluwatar/dao/CustomerTest.java:41:31     - Unknown word (LASTNAME)   -- static final String LASTNAME = "Churchill";
./dao/src/test/java/com/iluwatar/dao/CustomerTest.java:56:17     - Unknown word (Firstname)  -- void getAndSetFirstname() {
./dao/src/test/java/com/iluwatar/dao/CustomerTest.java:63:17     - Unknown word (Lastname)   -- void getAndSetLastname() {
./dao/src/test/java/com/iluwatar/dao/DbCustomerDaoTest.java:101:68    - Unknown word (Englund)    -- Customer(2, "Robert", "Englund");
./dao/src/test/java/com/iluwatar/dao/DbCustomerDaoTest.java:119:12    - Unknown word (updation)   -- void updationShouldBeFailureAndNotAffectExi
./dao/src/test/java/com/iluwatar/dao/DbCustomerDaoTest.java:54:72     - Unknown word (Krueger)    -- Customer(1, "Freddy", "Krueger");
./dao/src/test/java/com/iluwatar/dao/InMemoryCustomerDaoTest.java:139:10    - Unknown word (retrive)    -- void retriveShouldReturnTheCustomer
./data-bus/README.md:19:207    - Unknown word (organisation) -- of the community or organisation holding the events.
./data-bus/README.md:19:343    - Unknown word (organisers)   -- event administrators or organisers but you desire to send
./data-bus/README.md:36:16     - Unknown word (databus)      -- Then we have a databus to subscribe someone
./data-bus/README.md:36:63     - Unknown word (unsubcribe)   -- someone to be a member or unsubcribe, and also to publish
./data-mapper/README.md:145:40    - Unknown word (datamapper) -- DEBUG com.iluwatar.datamapper.App - App.main(), student
./data-mapper/README.md:35:70     - Unknown word (behaviour)  -- lists out the possible behaviour for all possible student
./data-mapper/src/main/java/com/iluwatar/datamapper/App.java:57:23     - Unknown word (respectibe) -- /* Add student in respectibe store */
./data-mapper/src/main/java/com/iluwatar/datamapper/DataMapperException.java:28:41     - Unknown word (dependancy) -- Exception for avoiding dependancy on implementation exceptions
./data-transfer-object/src/main/java/com/iluwatar/datatransfer/App.java:103:24    - Unknown word (Botsch)       -- .supplier("Botsch")
./data-transfer-object/src/main/java/com/iluwatar/datatransfer/App.java:25:22     - Unknown word (datatransfer) -- package com.iluwatar.datatransfer;
./data-transfer-object/src/main/java/com/iluwatar/datatransfer/App.java:96:24     - Unknown word (Delonghi)     -- .supplier("Delonghi")
./data-transfer-object/src/main/java/com/iluwatar/datatransfer/product/ProductDto.java:38:73     - Unknown word (DTO's)      -- or any other request DTO's
./data-transfer-object/src/main/java/com/iluwatar/datatransfer/product/ProductResource.java:38:6      - Unknown word (Initialise) -- * Initialise resource with existing
./decorator/src/test/java/com/iluwatar/decorator/SimpleTrollTest.java:44:19     - Unknown word (Appender)   -- private InMemoryAppender appender;
./decorator/src/test/java/com/iluwatar/decorator/SimpleTrollTest.java:44:28     - Unknown word (appender)   -- private InMemoryAppender appender;
./delegation/src/main/java/com/iluwatar/delegation/simple/printers/CanonPrinter.java:31:4      - Unknown word (Specialised) -- * Specialised Implementation of {
./dependency-injection/README.md:102:78    - Unknown word (Guice)      -- code with Spring 5 and Guice](https://www.amazon
./dependency-injection/README.md:50:14     - Unknown word (Rivendell)  -- public class RivendellTobacco extends Tobacco
./dependency-injection/src/main/java/com/iluwatar/dependency/injection/App.java:69:9      - Unknown word (guice)      -- var guiceWizard = injector.getInstance
./dirty-flag/src/main/java/com/iluwatar/dirtyflag/App.java:25:22     - Unknown word (dirtyflag)  -- package com.iluwatar.dirtyflag;
./dirty-flag/src/main/java/com/iluwatar/dirtyflag/DataFetcher.java:38:12     - Unknown word (swaisuan)   -- * @author swaisuan
./domain-model/README.md:283:39    - Unknown word (domainmodel) -- main] INFO com.iluwatar.domainmodel.Customer - Tom balance
./double-checked-locking/src/main/java/com/iluwatar/doublechecked/locking/App.java:25:22     - Unknown word (doublechecked) -- package com.iluwatar.doublechecked.locking;
./double-dispatch/src/main/java/com/iluwatar/doubledispatch/App.java:25:22     - Unknown word (doubledispatch) -- package com.iluwatar.doubledispatch;
./eip-aggregator/README.md:28:11     - Unknown word (Hohpe)      -- * [Gregor Hohpe, Bobby Woolf - Enterprise
./eip-aggregator/README.md:28:4      - Unknown word (Gregor)     -- * [Gregor Hohpe, Bobby Woolf
./eip-message-channel/README.md:23:4      - Unknown word (akka)       -- * [akka-camel](http://doc.akka
./event-aggregator/README.md:120:9     - Unknown word (varys)      -- var varys = new LordVarys();
./event-aggregator/README.md:128:9     - Unknown word (baelish)    -- var baelish = new LordBaelish(kingsHand
./event-aggregator/README.md:25:72     - Unknown word (Westeros)   -- the seven kingdoms of Westeros. He receives most
./event-aggregator/README.md:25:8      - Unknown word (Joffrey)    -- > King Joffrey sits on the iron throne
./event-aggregator/README.md:75:63     - Unknown word (Baelish)    -- his subordinates `LordBaelish`, `LordVarys`, and
./event-aggregator/README.md:75:78     - Unknown word (Varys)      -- `LordBaelish`, `LordVarys`, and `Scout`.
./event-asynchronous/src/main/java/com/iluwatar/event/asynchronous/EventManager.java:168:22    - Unknown word (rawtypes)   -- @SuppressWarnings("rawtypes")
./event-asynchronous/src/main/java/com/iluwatar/event/asynchronous/EventManager.java:33:23     - Unknown word (Thre)       -- upon user request. Thre are two types of events
./event-driven-architecture/README.md:24:3      - Unknown word (Chargify)   -- * Chargify, a billing API, exposes
./event-queue/README.md:173:1     - Unknown word (summarised)   -- summarised below.
./event-queue/README.md:17:54     - Unknown word (Visualised) -- model.png "Event Queue Visualised")
./event-queue/README.md:193:11    - Unknown word (Kuprivecz)    -- * [Mihaly Kuprivecz - Event Queue] (http
./event-queue/README.md:193:4     - Unknown word (Mihaly)       -- * [Mihaly Kuprivecz - Event Queue
./event-queue/README.md:32:11     - Unknown word (organise)   -- > used to organise and carry out interprocess
./event-queue/README.md:32:34     - Unknown word (interprocess) -- organise and carry out interprocess communication (IPC)
./event-queue/README.md:48:62     - Unknown word (utilised)     -- here's the app which utilised an event queue system
./event-queue/src/main/java/com/iluwatar/event/queue/Audio.java:147:27    - Unknown word (occoured)   -- LOGGER.trace("Error occoured while loading the audio
./event-queue/src/main/java/com/iluwatar/event/queue/Audio.java:38:12     - Unknown word (mkuprivecz) -- * @author mkuprivecz
./event-sourcing/README.md:25:8      - Unknown word (Lmax)       -- * [The Lmax Architecture](https
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/app/App.java:51:18     - Unknown word (Serdar)     -- * <p>Created by Serdar Hamzaogullari on 06
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/app/App.java:51:25     - Unknown word (Hamzaogullari) -- p>Created by Serdar Hamzaogullari on 06.08.2017.
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/app/App.java:56:30     - Unknown word (DAENERYS)      -- constant ACCOUNT OF DAENERYS.
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/app/App.java:80:56     - Unknown word (Daenerys)      -- ACCOUNT_OF_DAENERYS, "Daenerys Targaryen"));
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/app/App.java:80:65     - Unknown word (Targaryen)     -- DAENERYS, "Daenerys Targaryen"));
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/processor/JsonFileJournal.java:85:20     - Unknown word (Gson)       -- var gson = new Gson();
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/processor/JsonFileJournal.java:85:9      - Unknown word (gson)       -- var gson = new Gson();
./event-sourcing/src/main/java/com/iluwatar/event/sourcing/processor/JsonFileJournal.java:94:53     - Unknown word (recegnized) -- eException("Journal Event not recegnized");
./event-sourcing/src/test/java/IntegrationTest.java:40:4      - Unknown word (Intergartion) -- * Intergartion Test for Event Sourcing
./execute-around/README.md:12:78     - Unknown word (deallocation) -- resource allocation and deallocation leaving
./execute-around/README.md:64:23     - Unknown word (testfile)     -- new SimpleFileWriter("testfile.txt", writeHello);
./execute-around/README.md:89:80     - Unknown word (deallocate)   -- open/close or allocate/deallocate.
./extension-objects/src/main/java/abstractextensions/CommanderExtension.java:25:9      - Unknown word (abstractextensions) -- package abstractextensions;
./extension-objects/src/main/java/concreteextensions/Commander.java:25:9      - Unknown word (concreteextensions) -- package concreteextensions;
./extension-objects/src/test/java/AppTest.java:30:15     - Unknown word (Srdjan)     -- * Created by Srdjan on 03-May-17.
./facade/README.md:35:62     - Unknown word (dwarven)    -- above. Here we have the dwarven mine worker hierarchy
./facade/README.md:36:23     - Unknown word (Dwarven)    -- there's a base class `DwarvenMineWorker`:
./factory-kit/README.md:116:59    - Unknown word (customisation) -- applications that have user customisation
./factory-kit/README.md:130:31    - Unknown word (Remi)          -- Pattern Reloaded by Remi Forax](https://www.youtube
./factory-kit/README.md:130:36    - Unknown word (Forax)         -- Pattern Reloaded by Remi Forax](https://www.youtube
./factory-kit/README.md:98:39     - Unknown word (factorykit) -- main] INFO com.iluwatar.factorykit.App - Axe
./factory-method/README.md:107:19    - Unknown word (JAXB)       -- * [javax.xml.bind.JAXBContext](https://docs
./factory-method/README.md:32:63     - Unknown word (creational) -- method pattern is a creational pattern that uses factory
./factory-method/README.md:50:12     - Unknown word (ELFARSENAL) -- return ELFARSENAL.get(weaponType);
./factory-method/README.md:56:12     - Unknown word (ORCARSENAL) -- return ORCARSENAL.get(weaponType);
./factory/README.md:119:122   - Unknown word (swappable)  -- to-understand code, swappable components, scalability
./fanout-fanin/README.md:21:44     - Unknown word (everytime)  -- a callback service everytime is called that transforms
./fanout-fanin/src/main/java/com/iluwatar/fanout/fanin/App.java:25:22     - Unknown word (fanout)     -- package com.iluwatar.fanout.fanin;
./fanout-fanin/src/main/java/com/iluwatar/fanout/fanin/App.java:25:29     - Unknown word (fanin)      -- com.iluwatar.fanout.fanin;
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:25:22     - Unknown word (featuretoggle) -- package com.iluwatar.featuretoggle;
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:40:4      - Unknown word (personalised)  -- * personalised is turned either on
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:42:83     - Unknown word (memeber)       -- So if the user is a memeber of the
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:43:52     - Unknown word (ehanced)       -- User)} then they get an ehanced version of the welcome
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:60:41     - Unknown word (tieredversion) -- featuretoggle.pattern.tieredversion.TieredFeatureToggleVersion
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/App.java:85:22     - Unknown word (Messageturned) -- final var welcomeMessageturnedOff =
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java:25:44     - Unknown word (propertiesversion) -- featuretoggle.pattern.propertiesversion;
./feature-toggle/src/main/java/com/iluwatar/featuretoggle/pattern/propertiesversion/PropertiesFeatureToggleVersion.java:33:32     - Unknown word (Toogle)            -- example of the Feature Toogle pattern is less dynamic
./filterer/README.md:193:23    - Unknown word (Troyan)      -- ProbableThreat malwareTroyan = new SimpleProbableThreat
./filterer/README.md:209:71    - Unknown word (subtyping)   -- like objects that use subtyping, instead of
./filterer/README.md:210:1     - Unknown word (parametrizing) -- parametrizing (generics) for extensible
./filterer/README.md:235:28    - Unknown word (Tomasz)        -- Author of the pattern : [Tomasz Linkowski](https://tlinkowski
./filterer/README.md:235:35    - Unknown word (Linkowski)     -- the pattern : [Tomasz Linkowski](https://tlinkowski
./filterer/README.md:64:75     - Unknown word (covariantly) -- interface gives ability to covariantly specify a
./fluentinterface/README.md:168:4     - Unknown word (JOOQ)       -- * [JOOQ](http://www.jooq.org
./fluentinterface/README.md:170:9     - Unknown word (Hamcrest)   -- * [Java Hamcrest](http://code.google
./fluentinterface/src/main/java/com/iluwatar/fluentinterface/app/App.java:25:22     - Unknown word (fluentinterface) -- package com.iluwatar.fluentinterface.app;
./fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/FluentIterable.java:25:38     - Unknown word (fluentiterable) -- iluwatar.fluentinterface.fluentiterable;
./fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/lazy/DecoratingIterator.java:49:6      - Unknown word (Precomputes) -- * Precomputes and saves the next element
./flyweight/README.md:174:1     - Unknown word (Urgh)       -- Urgh! This is poisonous.
./game-loop/README.md:11:38     - Unknown word (gameplay)   -- continuously during gameplay. Each turn of the loop
./game-loop/src/main/java/com/iluwatar/gameloop/App.java:25:22     - Unknown word (gameloop)   -- package com.iluwatar.gameloop;
./guarded-suspension/src/main/java/com/iluwatar/guarded/suspension/App.java:31:15     - Unknown word (robertt)    -- * Created by robertt240 on 1/26/17.
./half-sync-half-async/README.md:29:14     - Unknown word (CORBA)      -- * [Real Time CORBA](http://www.omg.org
./half-sync-half-async/README.md:34:38     - Unknown word (Cranor)     -- Schmidt and Charles D. Cranor - Half Sync/Half Async
./half-sync-half-async/src/main/java/com/iluwatar/halfsynchalfasync/App.java:25:22     - Unknown word (halfsynchalfasync) -- package com.iluwatar.halfsynchalfasync;
./hexagonal/README.md:37:13     - Unknown word (Cockburn)   -- * [Alistair Cockburn - Hexagonal Architecture
./hexagonal/src/main/java/com/iluwatar/hexagonal/App.java:55:27     - Unknown word (eventlog)   -- com.iluwatar.hexagonal.eventlog.LotteryEventLog} that
./hexagonal/src/main/java/com/iluwatar/hexagonal/sampledata/SampleData.java:25:32     - Unknown word (sampledata) -- com.iluwatar.hexagonal.sampledata;
./identity-map/src/main/java/com/iluwatar/identitymap/App.java:25:22     - Unknown word (identitymap) -- package com.iluwatar.identitymap;
./intercepting-filter/README.md:10:9      - Unknown word (pluggable)  -- Provide pluggable filters to conduct necessary
./intercepting-filter/src/main/java/com/iluwatar/intercepting/filter/Target.java:44:12     - Unknown word (mjoshzambales) -- * @author mjoshzambales
./interpreter/README.md:18:7      - Unknown word (halfling)   -- > The halfling kids are learning basic
./interpreter/README.md:29:3      - Unknown word (nonterminal) -- > nonterminal) in a specialized computer
./iterator/src/main/java/com/iluwatar/iterator/bst/TreeNode.java:88:9      - Unknown word (curr)       -- var curr = this;
./layers/README.md:30:28     - Unknown word (multitier)  -- software engineering, multitier architecture (often
./leader-election/src/main/java/com/iluwatar/leaderelection/AbstractInstance.java:25:22     - Unknown word (leaderelection) -- package com.iluwatar.leaderelection;
./leader-election/src/main/java/com/iluwatar/leaderelection/AbstractMessageManager.java:42:6      - Unknown word (Construtor) -- * Construtor of AbstractMessageManager
./leader-election/src/main/java/com/iluwatar/leaderelection/MessageType.java:38:6      - Unknown word (Nodify)     -- * Nodify the new leader. The
./leader-election/src/main/java/com/iluwatar/leaderelection/bully/BullyApp.java:35:89     - Unknown word (clould)     -- instances is created in the clould
./leader-election/src/main/java/com/iluwatar/leaderelection/bully/BullyInstance.java:33:4      - Unknown word (Impelemetation) -- * Impelemetation with bully algorithm
./leader-election/src/test/java/com/iluwatar/leaderelection/bully/BullyinstanceTest.java:40:7      - Unknown word (Bullyinstance) -- class BullyinstanceTest {
./leader-election/src/test/java/com/iluwatar/leaderelection/bully/BullyinstanceTest.java:53:28     - Unknown word (messasge)      -- fail("fail to access messasge queue.");
./leader-followers/src/main/java/com/iluwatar/leaderfollowers/App.java:25:22     - Unknown word (leaderfollowers) -- package com.iluwatar.leaderfollowers;
./lockable-object/README.md:19:15     - Unknown word (Aragorn)    -- >The Sword Of Aragorn is a legendary object
./lockable-object/README.md:252:26    - Unknown word (Feind)      -- service.submit(new Feind(creatures.get(i), sword
./lockable-object/README.md:27:12     - Unknown word (Aaragorn)   -- The SwordOfAaragorn.java has an Object property
./lockable-object/src/main/java/com/iluwatar/lockableobject/App.java:25:22     - Unknown word (lockableobject) -- package com.iluwatar.lockableobject;
./lockable-object/src/main/java/com/iluwatar/lockableobject/domain/Feind.java:44:13     - Unknown word (feind)      -- * @param feind as the creature to lock
./lockable-object/src/test/java/com/iluwatar/lockableobject/CreatureTest.java:83:12     - Unknown word (Acqusition) -- void testAcqusition() throws InterruptedException
./lockable-object/src/test/java/com/iluwatar/lockableobject/FeindTest.java:43:20     - Unknown word (Nagdil)     -- elf = new Elf("Nagdil");
./lockable-object/src/test/java/com/iluwatar/lockableobject/FeindTest.java:44:20     - Unknown word (Ghandar)    -- orc = new Orc("Ghandar");
./lockable-object/src/test/java/com/iluwatar/lockableobject/SubCreaturesTests.java:38:24     - Unknown word (Limbar)     -- var elf = new Elf("Limbar");
./lockable-object/src/test/java/com/iluwatar/lockableobject/SubCreaturesTests.java:39:24     - Unknown word (Dargal)     -- var orc = new Orc("Dargal");
./lockable-object/src/test/java/com/iluwatar/lockableobject/TheSwordOfAragornTest.java:39:28     - Unknown word (Tupac)      -- var human = new Human("Tupac");
./marker/README.md:23:4      - Unknown word (javase)     -- * [javase.8.docs.api.java.io.Serializab
./marker/src/test/java/GuardTest.java:25:19     - Unknown word (hamcrest)   -- import static org.hamcrest.CoreMatchers.instanceOf
./master-worker-pattern/README.md:15:12     - Unknown word (centralised) -- > Used for centralised parallel processing
./master-worker-pattern/src/main/java/com/iluwatar/masterworker/App.java:25:22     - Unknown word (masterworker) -- package com.iluwatar.masterworker;
./master-worker-pattern/src/main/java/com/iluwatar/masterworker/system/systemmaster/ArrayTransposeMaster.java:25:42     - Unknown word (systemmaster) -- masterworker.system.systemmaster;
./master-worker-pattern/src/main/java/com/iluwatar/masterworker/system/systemworkers/ArrayTransposeWorker.java:25:42     - Unknown word (systemworkers) -- masterworker.system.systemworkers;
./master-worker-pattern/src/test/java/com/iluwatar/masterworker/system/ArrayTransposeMasterWorkerTest.java:42:9      - Unknown word (atmw)       -- var atmw = new ArrayTransposeMasterWor
./metadata-mapping/README.md:110:10    - Unknown word (JDBC)        -- <!-- JDBC Database connection
./metadata-mapping/README.md:174:94    - Unknown word (Batis)       -- org/eclipselink/), [MyBatis](https://blog.mybatis
./metadata-mapping/README.md:34:41     - Unknown word (jdbc)       -- final String DB_URL = "jdbc:h2:mem:metamapping"
./metadata-mapping/README.md:34:53     - Unknown word (metamapping) -- DB_URL = "jdbc:h2:mem:metamapping";
./metadata-mapping/README.md:48:22     - Unknown word (Jdbc)        -- var source = new JdbcDataSource();
./model-view-controller/README.md:156:11    - Unknown word (Reenskaug)  -- * [Trygve Reenskaug - Model-view-controller
./model-view-controller/README.md:156:4     - Unknown word (Trygve)     -- * [Trygve Reenskaug - Model-view
./model-view-viewmodel/README.md:103:19    - Unknown word (Djetty)     -- * `mvn jetty:run -Djetty.http.port=9911`
./model-view-viewmodel/README.md:129:15    - Unknown word (knockoutjs) -- * KnockoutJS [knockoutjs.com](https://knockoutjs
./model-view-viewmodel/README.md:133:8     - Unknown word (Gossman)    -- * John Gossman has criticized the MVVM
./model-view-viewmodel/README.md:136:15    - Unknown word (databinding) -- * For complex databinding, debugging can be difficult
./model-view-viewmodel/README.md:141:4     - Unknown word (Geeksfor)    -- * [GeeksforGeeks MVVM Intro](https
./model-view-viewmodel/README.md:21:25     - Unknown word (MVVM)       -- Model–view–viewmodel (MVVM) is a software architectural
./model-view-viewmodel/README.md:25:1      - Unknown word (Zkoss)      -- Zkoss implementation:
./model-view-viewmodel/README.md:65:72     - Unknown word (zkoss)      -- width="600px" apply="org.zkoss.bind.BindComposer" viewModel
./model-view-viewmodel/README.md:66:11     - Unknown word (hflex)      -- <vbox hflex="true">
./model-view-viewmodel/README.md:68:14     - Unknown word (listhead)   -- <listhead>
./model-view-viewmodel/README.md:69:18     - Unknown word (listheader) -- <listheader label="Book Name"/>
./model-view-viewmodel/README.md:74:22     - Unknown word (listcell)   -- <listcell label="@bind(book.name
./model-view-viewmodel/README.md:83:6      - Unknown word (hbox)       -- <hbox style="margin-top:2
./model-view-viewmodel/README.md:85:5      - Unknown word (hlayout)    -- <hlayout>
./model-view-viewmodel/src/main/java/com/iluwatar/model/view/viewmodel/BookServiceImpl.java:44:61     - Unknown word (Vlissides)  -- Ralph Johnson, and John Vlissides",
./model-view-viewmodel/src/main/java/com/iluwatar/model/view/viewmodel/BookServiceImpl.java:50:44     - Unknown word (Shalloway)  -- Patterns Explained", "Alan Shalloway, James Trott",
./model-view-viewmodel/src/main/java/com/iluwatar/model/view/viewmodel/BookServiceImpl.java:50:61     - Unknown word (Trott)      -- Alan Shalloway, James Trott",
./model-view-viewmodel/src/main/java/com/iluwatar/model/view/viewmodel/BookServiceImpl.java:55:16     - Unknown word (Larman)     -- "Craig Larman", "Applying UML and
./module/src/main/java/com/iluwatar/module/App.java:62:22     - Unknown word (unprepare)  -- public static void unprepare() {
./module/src/test/java/com/iluwatar/module/FileLoggerModuleTest.java:77:8      - Unknown word (Unprepare)  -- /* Unprepare to cleanup the modules
./monostate/README.md:19:9      - Unknown word (Monostate)  -- Use the Monostate pattern when
./monostate/src/main/java/com/iluwatar/monostate/App.java:25:22     - Unknown word (monostate)  -- package com.iluwatar.monostate;
./monostate/src/test/java/com/iluwatar/monostate/LoadBalancerTest.java:59:40     - Unknown word (testhost)   -- getHost()).thenReturn("testhost");
./multiton/README.md:21:27     - Unknown word (ringwraiths) -- Nazgûl, also called ringwraiths or the Nine Riders,
./multiton/README.md:21:63     - Unknown word (Sauron's)    -- the Nine Riders, are Sauron's most terrible servants
./multiton/README.md:21:7      - Unknown word (Nazgûl)     -- > The Nazgûl, also called ringwraiths
./multiton/README.md:2:8       - Unknown word (Multiton)   -- title: Multiton
./multiton/README.md:30:32     - Unknown word (multiton)    -- software engineering, the multiton pattern is a design
./multiton/README.md:37:2      - Unknown word (Nazgul)      -- `Nazgul` is the multiton class
./multiton/README.md:42:11     - Unknown word (MURAZOR)     -- KHAMUL, MURAZOR, DWAR, JI_INDUR, AKHORAHIL
./multiton/README.md:42:20     - Unknown word (DWAR)        -- KHAMUL, MURAZOR, DWAR, JI_INDUR, AKHORAHIL
./multiton/README.md:42:29     - Unknown word (INDUR)       -- KHAMUL, MURAZOR, DWAR, JI_INDUR, AKHORAHIL, HOARMURATH
./multiton/README.md:42:3      - Unknown word (KHAMUL)      -- KHAMUL, MURAZOR, DWAR, JI_INDUR
./multiton/README.md:42:36     - Unknown word (AKHORAHIL)   -- MURAZOR, DWAR, JI_INDUR, AKHORAHIL, HOARMURATH, ADUNAPHEL
./multiton/README.md:42:47     - Unknown word (HOARMURATH)  -- JI_INDUR, AKHORAHIL, HOARMURATH, ADUNAPHEL, REN, UVATHA
./multiton/README.md:42:59     - Unknown word (ADUNAPHEL)   -- AKHORAHIL, HOARMURATH, ADUNAPHEL, REN, UVATHA
./multiton/README.md:42:75     - Unknown word (UVATHA)      -- HOARMURATH, ADUNAPHEL, REN, UVATHA
./multiton/README.md:47:48     - Unknown word (nazguls)     -- NazgulName, Nazgul> nazguls;
./multiton/src/test/java/com/iluwatar/multiton/NazgulEnumTest.java:44:64     - Unknown word (nazgul)     -- dWithMultipleCalls(NazgulEnum nazgulEnum) {
./naked-objects/README.md:27:12     - Unknown word (Pawson)     -- * [Richard Pawson - Naked Objects](http
./null-object/src/main/java/com/iluwatar/nullobject/App.java:25:22     - Unknown word (nullobject) -- package com.iluwatar.nullobject;
./object-mother/README.md:24:101    - Unknown word (stackoverflow) -- objectmother) to the stackoverflow question: [What is an
./object-mother/README.md:26:8      - Unknown word (Pryce)         -- * [Nat Pryce - Test Data Builders
./object-mother/src/main/java/com/iluwatar/objectmother/King.java:25:22     - Unknown word (objectmother) -- package com.iluwatar.objectmother;
./object-mother/src/main/java/com/iluwatar/objectmother/Queen.java:59:18     - Unknown word (Flirtiness) -- public void setFlirtiness(boolean flirtiness)
./object-mother/src/main/java/com/iluwatar/objectmother/Queen.java:59:37     - Unknown word (flirtiness) -- setFlirtiness(boolean flirtiness) {
./object-mother/src/main/java/com/iluwatar/objectmother/Royalty.java:28:34     - Unknown word (Behaviour)  -- contracting Royalty Behaviour.
./object-mother/src/test/java/com/iluwatar/objectmother/test/RoyaltyObjectMotherTest.java:66:8      - Unknown word (successfull) -- void successfullKingFlirt() {
./object-pool/README.md:112:9     - Unknown word (oliphaunt)  -- var oliphaunt1 = pool.checkOut();
./object-pool/README.md:24:34     - Unknown word (oliphaunts) -- game we need to use oliphaunts, massive and mythic
./object-pool/README.md:39:19     - Unknown word (Oliphaunt)  -- Here's the basic `Oliphaunt` class. These giants
./object-pool/src/main/java/com/iluwatar/object/pool/Oliphaunt.java:30:4      - Unknown word (Oliphaunts) -- * Oliphaunts are expensive to create
./object-pool/src/test/java/com/iluwatar/object/pool/OliphauntPoolTest.java:49:22     - Unknown word (Checkin)    -- void testSubsequentCheckinCheckout() {
./observer/src/main/java/com/iluwatar/observer/App.java:38:73     - Unknown word (toolkits)   -- including almost all GUI toolkits.
./observer/src/main/java/com/iluwatar/observer/App.java:62:70     - Unknown word (Naftalin)   -- Generics and Collections by Naftalin & Wadler
./observer/src/main/java/com/iluwatar/observer/App.java:62:81     - Unknown word (Wadler)     -- Collections by Naftalin & Wadler
./page-object/README.md:11:59     - Unknown word (widgetry)   -- hiding the underlying UI widgetry of an application (commonly
./page-object/sample-application/src/main/java/com/iluwatar/pageobject/App.java:25:22     - Unknown word (pageobject) -- package com.iluwatar.pageobject;
./page-object/sample-application/src/main/java/com/iluwatar/pageobject/App.java:86:30     - Unknown word (occured)    -- LOGGER.error("An error occured.", ex);
./partial-response/src/main/java/com/iluwatar/partialresponse/App.java:25:22     - Unknown word (partialresponse) -- package com.iluwatar.partialresponse;
./partial-response/src/main/java/com/iluwatar/partialresponse/App.java:51:14     - Unknown word (Hideaki)         -- "Hideaki Anno", "Japanese"),
./partial-response/src/main/java/com/iluwatar/partialresponse/Video.java:60:19     - Unknown word (representaion) -- * @return json representaion of video
./presentation-model/README.md:72:49     - Unknown word (listenser)  -- information like size, listenser and so on.
./presentation-model/README.md:94:8      - Unknown word (Displated)  -- Class `DisplatedAlbums` is store the
./presentation-model/src/main/java/com/iluwatar/presentationmodel/Album.java:25:22     - Unknown word (presentationmodel) -- package com.iluwatar.presentationmodel;
./presentation-model/src/main/java/com/iluwatar/presentationmodel/PresentationModel.java:55:56     - Unknown word (Piazzola)   -- Roy Harper", "Astor Piazzola",
./presentation-model/src/main/java/com/iluwatar/presentationmodel/PresentationModel.java:56:55     - Unknown word (CBSO)       -- "The Black Light", "CBSO"};
./priority-queue/README.md:80:8      - Unknown word (Heapify)    -- maxHeapifyDown();
./priority-queue/src/main/java/com/iluwatar/priority/queue/PriorityMessageQueue.java:155:25    - Unknown word (fpos)       -- private void swap(int fpos, int tpos) {
./priority-queue/src/main/java/com/iluwatar/priority/queue/PriorityMessageQueue.java:155:35    - Unknown word (tpos)       -- void swap(int fpos, int tpos) {
./priority-queue/src/test/java/com/iluwatar/priority/queue/QueueManagerTest.java:41:9      - Unknown word (recived)    -- var recivedMessage = queueManager
./private-class-data/src/main/java/com/iluwatar/privateclassdata/App.java:25:22     - Unknown word (privateclassdata) -- package com.iluwatar.privateclassdata;
./producer-consumer/README.md:95:108    - Unknown word (clasess)    -- Producer` and `Consumer` clasess as they produce and
./property/src/main/java/com/iluwatar/property/App.java:51:13     - Unknown word (Proto)      -- var charProto = new Character();
./proxy/README.md:159:2     - Unknown word (Powermock)  -- [Powermock](https://powermock.github
./proxy/src/main/java/com/iluwatar/proxy/IvoryTower.java:30:21     - Unknown word (proxied)    -- * The object to be proxied.
./queue-load-leveling/src/main/java/com/iluwatar/queue/load/leveling/ServiceExecutor.java:30:11     - Unknown word (Execuotr)   -- * ServiceExecuotr class. This class will
./reactor/README.md:11:354    - Unknown word (Demultiplexing) -- registered event handlers. Demultiplexing of service requests
./reactor/README.md:11:425    - Unknown word (demultiplexer)  -- a synchronous event demultiplexer.
./reactor/src/main/java/com/iluwatar/reactor/app/LoggingHandler.java:56:11     - Unknown word (datagram)   -- var datagram = (DatagramPacket) readObject
./reactor/src/main/java/com/iluwatar/reactor/framework/NioReactor.java:61:9      - Unknown word (writability) -- * or writability, a new command is added
./reader-writer-lock/README.md:36:102    - Unknown word (MRSW)       -- a push lock, or an MRSW lock)
./repository/README.md:121:29    - Unknown word (Nasta)      -- nasta = new Person("Nasta", "Kuzminova", 25);
./repository/README.md:121:38    - Unknown word (Kuzminova)  -- new Person("Nasta", "Kuzminova", 25);
./repository/README.md:121:9     - Unknown word (nasta)      -- var nasta = new Person("Nasta
./repository/README.md:135:20    - Unknown word (Barbora)    -- nasta.setName("Barbora");
./repository/README.md:136:23    - Unknown word (Spotakova)  -- nasta.setSurname("Spotakova");
./repository/README.md:192:50    - Unknown word (Querydsl)   -- Specifications and Querydsl](https://spring.io/blog
./repository/src/main/java/com/iluwatar/repository/App.java:42:50     - Unknown word (springframework) -- query by {@link org.springframework.data.jpa.domain.Specification
./repository/src/main/java/com/iluwatar/repository/AppConfig.java:64:26     - Unknown word (especific)  -- Factory to create a especific instance of Entity Manager
./repository/src/test/java/com/iluwatar/repository/AnnotationBasedRepositoryTest.java:69:9      - Unknown word (actuals)    -- var actuals = Lists.newArrayList
./repository/src/test/java/com/iluwatar/repository/RepositoryTest.java:46:42     - Unknown word (classpath)  -- properties = {"locations=classpath:applicationContext.xml
./resource-acquisition-is-initialization/src/main/java/com/iluwatar/resource/acquisition/is/initialization/App.java:31:30     - Unknown word (Bjarne)     -- management by C++ creator Bjarne Stroustrup.
./resource-acquisition-is-initialization/src/main/java/com/iluwatar/resource/acquisition/is/initialization/App.java:31:37     - Unknown word (Stroustrup) -- by C++ creator Bjarne Stroustrup.
./resource-acquisition-is-initialization/src/main/java/com/iluwatar/resource/acquisition/is/initialization/App.java:33:10     - Unknown word (RAII)       -- * <p>In RAII resource is tied to
./retry/src/main/java/com/iluwatar/retry/App.java:76:30     - Unknown word (Backoff)    -- errorWithRetryExponentialBackoff();
./role-object/README.md:25:106    - Unknown word (resultingobject) -- object identity of the resultingobject conglomerate.
./role-object/src/main/java/com/iluwatar/roleobject/ApplicationRoleObject.java:25:22     - Unknown word (roleobject) -- package com.iluwatar.roleobject;
./role-object/src/main/java/com/iluwatar/roleobject/ApplicationRoleObject.java:83:40     - Unknown word (Johny)      -- inv -> inv.setName("Johny"));
./role-object/src/test/java/com/iluwatar/roleobject/CustomerCoreTest.java:59:9      - Unknown word (empt)       -- var empt = core.getRole(Role
./saga/src/main/java/com/iluwatar/saga/choreography/Saga.java:154:6     - Unknown word (outcoming)  -- * outcoming parameter).
./saga/src/main/java/com/iluwatar/saga/choreography/Saga.java:48:10     - Unknown word (resuzlt)    -- * get resuzlt of saga.
./saga/src/main/java/com/iluwatar/saga/choreography/Saga.java:56:24     - Unknown word (ROLLBACKED) -- : SagaResult.ROLLBACKED;
./saga/src/main/java/com/iluwatar/saga/choreography/Saga.java:76:19     - Unknown word (invalue)    -- * @param value invalue
./saga/src/main/java/com/iluwatar/saga/choreography/Service.java:97:37     - Unknown word (rollbacked) -- The data {} has been rollbacked successfully",
./saga/src/main/java/com/iluwatar/saga/orchestration/SagaOrchestrator.java:47:30     - Unknown word (orchetrate) -- Create a new service to orchetrate sagas.
./separated-interface/src/main/java/com/iluwatar/separatedinterface/App.java:25:22     - Unknown word (separatedinterface) -- package com.iluwatar.separatedinterface;
./serialized-entity/README.md:220:55    - Unknown word (Kaplan)     -- William Crawford, Jonathan Kaplan](https://www.oreilly
./serialized-entity/README.md:221:4     - Unknown word (komminen)   -- * [komminen](https://github.com
./serialized-entity/README.md:79:32     - Unknown word (baos)       -- ByteArrayOutputStream baos = new ByteArrayOutputStream
./serialized-entity/src/main/java/com/iluwatar/serializedentity/App.java:23:22     - Unknown word (serializedentity) -- package com.iluwatar.serializedentity;
./serialized-entity/src/main/java/com/iluwatar/serializedentity/Country.java:32:19     - Unknown word (taht)       -- * A Country POJO taht represents the data
./servant/src/test/java/com/iluwatar/servant/KingTest.java:40:23     - Unknown word (Uncomplimented) -- void testHungrySoberUncomplimentedKing() {
./servant/src/test/java/com/iluwatar/servant/QueenTest.java:41:21     - Unknown word (Uncomplemented) -- void testNotFlirtyUncomplemented() {
./serverless/README.md:14:28     - Unknown word (katas)      -- Following are optimization katas you should be aware
./serverless/README.md:161:50    - Unknown word (endpoin)    -- tBucketName: lambda-info-http-endpoin-serverlessdeploymentbuck
./serverless/README.md:161:58    - Unknown word (serverlessdeploymentbuck) -- lambda-info-http-endpoin-serverlessdeploymentbuck-2u8uz2i7cap2
./serverless/README.md:180:15    - Unknown word (Odinson)                  -- "lastName": "Odinson",
./serverless/README.md:41:3      - Unknown word (Serviceful) -- * Serviceful operations
./serverless/README.md:77:90     - Unknown word (openwhisk)  -- openwhisk-black.png "openwhisk")
./serverless/README.md:79:94     - Unknown word (kubeless)   -- kubeless-logos-black.png "kubeless")
./serverless/README.md:80:100    - Unknown word (spotinst)   -- logos-black-small.png "spotinst")
./serverless/README.md:81:97     - Unknown word (webtask)    -- small-grayscale.png "webtask")
./serverless/src/main/java/com/iluwatar/serverless/baas/api/FindPersonApiHandler.java:36:51     - Unknown word (dheeraj)    -- collection Created by dheeraj.mummar on 3/5/18.
./serverless/src/main/java/com/iluwatar/serverless/baas/api/FindPersonApiHandler.java:36:59     - Unknown word (mummar)     -- collection Created by dheeraj.mummar on 3/5/18.
./serverless/src/main/java/com/iluwatar/serverless/baas/model/Address.java:36:37     - Unknown word (mummarareddy) -- class Created by dheeraj.mummarareddy on 3/4/18.
./serverless/src/main/java/com/iluwatar/serverless/faas/api/LambdaInfoApiHandler.java:25:33     - Unknown word (faas)       -- iluwatar.serverless.faas.api;
./service-layer/README.md:206:55    - Unknown word (Idores)     -- with spellbook 'Book of Idores'");
./service-layer/README.md:24:54     - Unknown word (spellbooks) -- that tracks wizards, spellbooks and spells. Wizards
./service-layer/README.md:45:52     - Unknown word (Spellbook)  -- not shown here are `Spellbook` and `Spell`.
./service-layer/README.md:87:28     - Unknown word (Spellbooks) -- public Set<Spellbook> getSpellbooks() {
./service-layer/README.md:95:38     - Unknown word (spellbook)  -- addSpellbook(Spellbook spellbook) {
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:114:45    - Unknown word (Orgymon)      -- new Spellbook("Book of Orgymon");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:126:45    - Unknown word (Kritior)      -- new Spellbook("Book of Kritior");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:132:45    - Unknown word (Tamaex)       -- new Spellbook("Book of Tamaex");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:142:45    - Unknown word (Opaen)        -- new Spellbook("Book of Opaen");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:147:45    - Unknown word (Kihione)      -- new Spellbook("Book of Kihione");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:155:31    - Unknown word (Aderlard)     -- wizard1 = new Wizard("Aderlard Boud");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:155:40    - Unknown word (Boud)         -- new Wizard("Aderlard Boud");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:160:31    - Unknown word (Anaxis)       -- wizard2 = new Wizard("Anaxis Bajraktari");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:160:38    - Unknown word (Bajraktari)   -- new Wizard("Anaxis Bajraktari");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:165:31    - Unknown word (Xuban)        -- wizard3 = new Wizard("Xuban Munoa");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:165:37    - Unknown word (Munoa)        -- = new Wizard("Xuban Munoa");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:170:31    - Unknown word (Blasius)      -- wizard4 = new Wizard("Blasius Dehooge");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:170:39    - Unknown word (Dehooge)      -- new Wizard("Blasius Dehooge");
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:25:22     - Unknown word (servicelayer) -- package com.iluwatar.servicelayer.app;
./service-layer/src/main/java/com/iluwatar/servicelayer/app/App.java:57:38     - Unknown word (IDORES)       -- final String BOOK_OF_IDORES = "Book of Idores";
./service-layer/src/main/java/com/iluwatar/servicelayer/spell/Spell.java:52:23     - Unknown word (SPELLBOOK)  -- @JoinColumn(name = "SPELLBOOK_ID_FK", referencedColumnName
./service-layer/src/test/java/com/iluwatar/servicelayer/magic/MagicServiceImplTest.java:140:28    - Unknown word (spellname)  -- final var spellName = "spellname";
./service-layer/src/test/java/com/iluwatar/servicelayer/magic/MagicServiceImplTest.java:95:15     - Unknown word (bookname)   -- final var bookname = "bookname";
./service-locator/README.md:19:40     - Unknown word (JNDI)       -- various services using JNDI which, typically, is
./service-locator/src/main/java/com/iluwatar/servicelocator/App.java:25:22     - Unknown word (servicelocator) -- package com.iluwatar.servicelocator;
./service-locator/src/main/java/com/iluwatar/servicelocator/App.java:37:12     - Unknown word (saifasif)       -- * @author saifasif
./service-locator/src/main/java/com/iluwatar/servicelocator/App.java:41:48     - Unknown word (jndi)           -- String JNDI_SERVICE_A = "jndi/serviceA";
./service-locator/src/main/java/com/iluwatar/servicelocator/ServiceLocator.java:45:20     - Unknown word (Jndi)       -- * @param serviceJndiName a string
./service-to-worker/src/main/java/com/iluwatar/servicetoworker/Action.java:1:22      - Unknown word (servicetoworker) -- package com.iluwatar.servicetoworker;
./service-to-worker/src/test/java/com/iluwatar/servicetoworker/GiantViewTest.java:16:11     - Unknown word (dispaly)    -- * Test dispaly giant.
./service-to-worker/src/test/java/com/iluwatar/servicetoworker/GiantViewTest.java:19:12     - Unknown word (Dispaly)    -- void testDispalyGiant() {
./sharding/src/main/java/com/iluwatar/sharding/Data.java:41:24     - Unknown word (vlue)       -- * @param value data vlue
./singleton/README.md:85:117    - Unknown word (deallocated) -- this object from being deallocated.
./singleton/src/main/java/com/iluwatar/singleton/App.java:47:30     - Unknown word (serializability) -- extending the enum class, serializability, and restrictions to
./spatial-partition/README.md:13:8      - Unknown word (Nystrom)    -- by Bob Nystrom, spatial partition pattern
./spatial-partition/README.md:42:19     - Unknown word (organised)  -- structure that is organised by their positions,
./spatial-partition/README.md:55:35     - Unknown word (Quadtree)   -- implementation, we use the Quadtree data structure which
./spatial-partition/README.md:56:61     - Unknown word (nlogn)      -- range from O(n^2) to O(nlogn), decreasing the computations
./spatial-partition/README.md:73:78     - Unknown word (Schiffman)  -- OJxEcs0w_kE) by Daniel Schiffman
./spatial-partition/src/main/java/com/iluwatar/spatialpartition/App.java:25:22     - Unknown word (spatialpartition) -- package com.iluwatar.spatialpartition;
./spatial-partition/src/main/java/com/iluwatar/spatialpartition/App.java:44:60     - Unknown word (quadtree)         -- the boundary of the quadtree. We use an abstract
./special-case/README.md:28:24     - Unknown word (unresistable) -- If you’ll pardon the unresistable pun, I see Null Object
./special-case/README.md:364:18    - Unknown word (Cyclomatic)   -- * [How to Reduce Cyclomatic Complexity Part 2: Special
./special-case/src/main/java/com/iluwatar/specialcase/App.java:25:22     - Unknown word (specialcase) -- package com.iluwatar.specialcase;
./step-builder/README.md:21:10     - Unknown word (Castigliego) -- * [Marco Castigliego - Step Builder](http
./step-builder/src/main/java/com/iluwatar/stepbuilder/App.java:25:22     - Unknown word (stepbuilder) -- package com.iluwatar.stepbuilder;
./step-builder/src/test/java/com/iluwatar/stepbuilder/CharacterStepBuilderTest.java:114:16    - Unknown word (Cuauhtemoc) -- .name("Cuauhtemoc")
./strangler/src/main/java/com/iluwatar/strangler/App.java:54:15     - Unknown word (nums)       -- final var nums = new int[]{1, 2, 3
./strangler/src/main/java/com/iluwatar/strangler/HalfArithmetic.java:66:6      - Unknown word (Chech)      -- * Chech if has any zero.
./strategy/README.md:23:3      - Unknown word (dragonslayers) -- > dragonslayers have developed different
./strategy/README.md:73:24     - Unknown word (dragonslayer)  -- And here is the mighty dragonslayer, who can pick his fighting
./subclass-sandbox/README.md:102:82    - Unknown word (codebases)  -- pattern lurking in lots of codebases, even outside of games
./subclass-sandbox/README.md:20:177    - Unknown word (sandboxed)  -- classes. Each derived sandboxed subclass implements
./subclass-sandbox/README.md:35:50     - Unknown word (volumn)     -- String soundName, int volumn) {
./subclass-sandbox/README.md:56:16     - Unknown word (SKYLAUNCH)  -- playSound("SKYLAUNCH_SOUND", 1);
./subclass-sandbox/README.md:73:16     - Unknown word (GROUNDDIVE) -- playSound("GROUNDDIVE_SOUND", 5);
./subclass-sandbox/src/main/java/com/iluwatar/subclasssandbox/App.java:25:22     - Unknown word (subclasssandbox) -- package com.iluwatar.subclasssandbox;
./subclass-sandbox/src/test/java/com/iluwatar/subclasssandbox/GroundDiveTest.java:27:26     - Unknown word (stefanbirkner) -- import static com.github.stefanbirkner.systemlambda.SystemLambda
./subclass-sandbox/src/test/java/com/iluwatar/subclasssandbox/GroundDiveTest.java:27:40     - Unknown word (systemlambda)  -- github.stefanbirkner.systemlambda.SystemLambda.tapSystemOutNorm
./table-module/README.md:105:39    - Unknown word (tablemodule) -- main] INFO com.iluwatar.tablemodule.UserTableModule - Register
./table-module/src/main/java/com/iluwatar/tablemodule/App.java:44:16     - Unknown word (initialise) -- * method will initialise an instance of {@link
./table-module/src/test/java/com/iluwatar/tablemodule/UserTest.java:34:31     - Unknown word (janedoe)    -- assertFalse((new User(1, "janedoe", "iloveyou"))
./table-module/src/test/java/com/iluwatar/tablemodule/UserTest.java:34:42     - Unknown word (iloveyou)   -- User(1, "janedoe", "iloveyou"))
./template-method/README.md:104:14    - Unknown word (Halfling)   -- public class HalflingThief {
./template-method/README.md:140:189   - Unknown word (Opdyke)     -- generalize" as described by Opdyke and Johnson. You first
./template-method/README.md:150:62    - Unknown word (parameterless) -- vletConfig config)` calls the parameterless method `GenericServlet
./template-method/src/main/java/com/iluwatar/templatemethod/App.java:25:22     - Unknown word (templatemethod) -- package com.iluwatar.templatemethod;
./thread-pool/src/main/java/com/iluwatar/threadpool/App.java:25:22     - Unknown word (threadpool) -- package com.iluwatar.threadpool;
./thread-pool/src/test/java/com/iluwatar/threadpool/AppTest.java:34:12     - Unknown word (ilkka)      -- * @author ilkka
./thread-pool/src/test/java/com/iluwatar/threadpool/TaskTest.java:67:65     - Unknown word (milli)      -- task 1 single time, in milli seconds
./throttling/src/main/java/com/iluwatar/throttling/CallsCount.java:35:12     - Unknown word (drastogi)   -- * @author drastogi
./tls/src/main/java/com/iluwatar/tls/App.java:51:28     - Unknown word (TLTL)       -- variant (marked with "//TLTL") and comment in the
./tls/src/main/java/com/iluwatar/tls/App.java:52:7      - Unknown word (NTLNTL)     -- * "//NTLNTL") you can see what will
./tls/src/main/java/com/iluwatar/tls/Result.java:26:4      - Unknown word (Fiducia)    -- * Fiducia IT AG, All rights reserved
./tls/src/test/java/com/iluwatar/tls/DateFormatCallableTest.java:62:57     - Unknown word (Runnalbe)   -- run of of DateFormatRunnalbe. List will be filled
./tls/src/test/java/com/iluwatar/tls/DateFormatCallableTestIncorrectDateFormat.java:70:40     - Unknown word (Unparseable) -- text.ParseException: Unparseable date: \"15.12.2015\
./tolerant-reader/README.md:19:21     - Unknown word (rainbowfish) -- > We are persisting rainbowfish objects to file and
./tolerant-reader/src/main/java/com/iluwatar/tolerantreader/App.java:25:22     - Unknown word (tolerantreader) -- package com.iluwatar.tolerantreader;
./trampoline/README.md:135:81    - Unknown word (stackless)  -- allows to switch on a stackless operation.
./trampoline/README.md:146:27    - Unknown word (monoids)    -- Laziness, trampolines, monoids and other functional
./transaction-script/src/main/java/com/iluwatar/transactionscript/App.java:25:22     - Unknown word (transactionscript) -- package com.iluwatar.transactionscript;
./transaction-script/src/main/java/com/iluwatar/transactionscript/App.java:54:6      - Unknown word (Initialises)       -- * Initialises an instance of Hotel
./transaction-script/src/test/java/com/iluwatar/transactionscript/RoomTest.java:40:31     - Unknown word (ROOMTYPE)   -- static final String ROOMTYPE = "Single";
./typeobjectpattern/README.md:16:318    - Unknown word (overriden)  -- methods, which may be overriden by subclasses like the
./typeobjectpattern/src/main/java/com/iluwatar/typeobject/App.java:25:22     - Unknown word (typeobject) -- package com.iluwatar.typeobject;
./typeobjectpattern/src/main/java/com/iluwatar/typeobject/CellPool.java:52:37     - Unknown word (Candytypes) -- randomCode = assignRandomCandytypes();
./typeobjectpattern/src/main/java/com/iluwatar/typeobject/CellPool.java:55:18     - Unknown word (initialising) -- //manually initialising this.randomCode
./typeobjectpattern/src/main/java/com/iluwatar/typeobject/CellPool.java:78:73     - Unknown word (candytype)    -- length)]; //changing candytype to new
./unit-of-work/README.md:170:39    - Unknown word (unitofwork) -- main] INFO com.iluwatar.unitofwork.ArmsDealer - Registering
./update-method/src/main/java/com/iluwatar/updatemethod/App.java:25:22     - Unknown word (updatemethod) -- package com.iluwatar.updatemethod;
./update-method/src/main/java/com/iluwatar/updatemethod/World.java:77:63     - Unknown word (udpate)     -- method pattern invoke udpate method for
./value-object/README.md:87:4      - Unknown word (joda)       -- * [joda-time, money, beans]
./value-object/README.md:93:4      - Unknown word (VALJOs)     -- * [VALJOs - Value Java Objects
./value-object/README.md:93:42     - Unknown word (Colebourne's) -- Java Objects : Stephen Colebourne's blog](http://blog.joda
./value-object/src/main/java/com/iluwatar/value/object/App.java:41:22     - Unknown word (VALJO)      -- * Colebourne's term VALJO : http://blog.joda.org
./version-number/README.md:115:20    - Unknown word (Vatsyayana) -- bobBook.setAuthor("Vatsyayana Mallanaga"); // Bob
./version-number/README.md:115:31    - Unknown word (Mallanaga)  -- setAuthor("Vatsyayana Mallanaga"); // Bob updates the
./version-number/src/main/java/com/iluwatar/versionnumber/App.java:25:22     - Unknown word (versionnumber) -- package com.iluwatar.versionnumber;
./visitor/README.md:218:4     - Unknown word (Sourcemaking) -- * [Sourcemaking](https://sourcemaking
