---
Repository: RustPython/RustPython
Url: https://github.com/RustPython/RustPython.git
Args: '["**"]'
Summary:
  files: 621
  filesWithIssues: 326
  issues: 2960
  errors: 0
Errors: []

issues:
  - "architecture/architecture.md:1:1\tNo issues found"
  - "benches/benchmarks/fannkuch.py:5:16         Sokolov     U       Contributed by Sokolov Yura, modified by Tupteq"
  - "benches/benchmarks/fannkuch.py:5:24         Yura        U       Contributed by Sokolov Yura, modified by Tupteq"
  - "benches/benchmarks/fannkuch.py:5:42         Tupteq      U       Sokolov Yura, modified by Tupteq."
  - "benches/benchmarks/fannkuch.py:8:10         pyperf      U       # import pyperf"
  - "benches/benchmarks/fannkuch.py:14:5         fannkuch    U       def fannkuch(n):"
  - "benches/benchmarks/fannkuch.py:52:15        pyperf      U       #runner = pyperf.Runner()"
  - "benches/benchmarks/fannkuch.py:54:25        fannkuch    U       #runner.bench_func('fannkuch', fannkuch, arg)"
  - "benches/benchmarks/fannkuch.py:54:36        fannkuch    U       bench_func('fannkuch', fannkuch, arg)"
  - "benches/benchmarks/fannkuch.py:55:5         fannkuch    U       fannkuch(arg)"
  - "benches/benchmarks/mandelbrot.py:1:1\tNo issues found"
  - "benches/benchmarks/nbody.py:5:15        Tupteq          U       # modified by Tupteq, Fredrik Johansson,"
  - "benches/benchmarks/nbody.py:5:23        Fredrik         U       modified by Tupteq, Fredrik Johansson, and Daniel"
  - "benches/benchmarks/nbody.py:5:31        Johansson       U       modified by Tupteq, Fredrik Johansson, and Daniel Nanz"
  - "benches/benchmarks/nbody.py:5:53        Nanz            U       Johansson, and Daniel Nanz"
  - "benches/benchmarks/pystone.py:5:2           PYSTONE         U       \"PYSTONE\" Benchmark Program"
  - "benches/benchmarks/pystone.py:7:57          Pystone         U       corresponds to C/1.1 plus 2 Pystone fixes)"
  - "benches/benchmarks/pystone.py:9:29          Weicker         U       Reinhold P. Weicker, CACM Vol 27, No 1"
  - "benches/benchmarks/pystone.py:9:39          CACM            U       Reinhold P. Weicker, CACM Vol 27, No 10, 10/8"
  - "benches/benchmarks/pystone.py:19:51         Arndt           U       version 1.1.1 by Chris Arndt:"
  - "benches/benchmarks/pystone.py:52:40         Discr           U       self, PtrComp = None, Discr = 0, EnumComp = 0,"
  - "benches/benchmarks/pystone.py:55:14         Discr           U       self.Discr = Discr"
  - "benches/benchmarks/pystone.py:55:22         Discr           U       self.Discr = Discr"
  - "benches/benchmarks/pystone.py:61:42         Discr           U       Record(self.PtrComp, self.Discr, self.EnumComp,"
  - "benches/benchmarks/pystone.py:90:5          nulltime        U       nulltime = clock() - starttime"
  - "benches/benchmarks/pystone.py:95:12         Discr           U       PtrGlb.Discr = Ident1"
  - "benches/benchmarks/pystone.py:98:26         DHRYSTONE       U       PtrGlb.StringComp = \"DHRYSTONE PROGRAM, SOME STRING"
  - "benches/benchmarks/pystone.py:99:19         DHRYSTONE       U       String1Loc = \"DHRYSTONE PROGRAM, 1'ST STRING"
  - "benches/benchmarks/pystone.py:109:23        DHRYSTONE       U       String2Loc = \"DHRYSTONE PROGRAM, 2'ND STRING"
  - "benches/benchmarks/pystone.py:128:5         benchtime       U       benchtime = clock() - starttime"
  - "benches/benchmarks/pystone.py:128:39        nulltime        U       clock() - starttime - nulltime"
  - "benches/benchmarks/pystone.py:129:8         benchtime       U       if benchtime == 0.0:"
  - "benches/benchmarks/pystone.py:130:17        Benchtime       U       loopsPerBenchtime = 0.0"
  - "benches/benchmarks/pystone.py:132:17        Benchtime       U       loopsPerBenchtime = (loops / benchtime"
  - "benches/benchmarks/pystone.py:132:38        benchtime       U       loopsPerBenchtime = (loops / benchtime)"
  - "benches/benchmarks/pystone.py:133:12        benchtime       U       return benchtime, loopsPerBenchtime"
  - "benches/benchmarks/pystone.py:133:31        Benchtime       U       return benchtime, loopsPerBenchtime"
  - "benches/execution.rs:23:10          rustpy      U       fn bench_rustpy_code(b: &mut Bencher"
  - "benches/execution.rs:46:15          rustpy      U       bench_rustpy_code(b, name, contents"
  - "benches/execution.rs:71:18          pystone     U       pub fn benchmark_pystone(group: &mut BenchmarkGroup"
  - "benches/execution.rs:82:19          rustpy      U       bench_rustpy_code(b, \"pystone\", code"
  - "benches/execution.rs:82:35          pystone     U       bench_rustpy_code(b, \"pystone\", code_str)"
  - "benches/execution.rs:109:17         pystone     U       if let Some(pystone_contents) = benches"
  - "benches/execution.rs:109:53         pystone     U       contents) = benches.remove(\"pystone.py\") {"
  - "benches/execution.rs:110:17         pystone     U       let mut pystone_group = c.benchmark"
  - "benches/microbenchmarks.rs:13:12        microbenchmarks     U       // List of microbenchmarks to skip."
  - "benches/microbenchmarks.rs:21:12        MICROBENCHMARKS     U       const SKIP_MICROBENCHMARKS: [&str; 8] = ["
  - "benches/microbenchmarks.rs:58:39        microbenchmark      U       panic!(\"Error running microbenchmark\")"
  - "benches/microbenchmarks.rs:72:39        microbenchmark      U       panic!(\"Error running microbenchmark setup code\")"
  - "benches/microbenchmarks.rs:107:10       rustpy              U       fn bench_rustpy_code(group: &mut BenchmarkGro"
  - "benches/microbenchmarks.rs:169:40       microbenchmarks     U       c.benchmark_group(\"microbenchmarks\");"
  - "benches/microbenchmarks.rs:172:11       rustpy              U       bench_rustpy_code(&mut group, &benchmark"
  - "benches/microbenchmarks.rs:178:46       microbenchmarks     U       Path::new(\"./benches/microbenchmarks/\");"
  - "benches/microbenchmarks.rs:210:17       MICROBENCHMARKS     U       if SKIP_MICROBENCHMARKS.contains(&benchmark"
  - "benches/microbenchmarks/addition.py:1:1\tNo issues found"
  - "benches/microbenchmarks/call_kwargs.py:1:1\tNo issues found"
  - "benches/microbenchmarks/call_simple.py:1:1\tNo issues found"
  - "benches/microbenchmarks/cmp.py:1:1\tNo issues found"
  - "benches/microbenchmarks/complex_class.py:1:1\tNo issues found"
  - "benches/microbenchmarks/comprehension_dict.py:1:1\tNo issues found"
  - "benches/microbenchmarks/comprehension_list.py:1:1\tNo issues found"
  - "benches/microbenchmarks/comprehension_set.py:1:1\tNo issues found"
  - "benches/microbenchmarks/construct_object.py:1:1\tNo issues found"
  - "benches/microbenchmarks/define_class.py:1:1\tNo issues found"
  - "benches/microbenchmarks/define_function.py:1:1\tNo issues found"
  - "benches/microbenchmarks/exception_context.py:1:1\tNo issues found"
  - "benches/microbenchmarks/exception_nested.py:1:1\tNo issues found"
  - "benches/microbenchmarks/exception_simple.py:1:1\tNo issues found"
  - "benches/microbenchmarks/frozenset.py:1:1\tNo issues found"
  - "benches/microbenchmarks/list_count_builtins.py:1:1\tNo issues found"
  - "benches/microbenchmarks/list_count_custom_eq.py:1:1\tNo issues found"
  - "benches/microbenchmarks/loop_append.py:1:1\tNo issues found"
  - "benches/microbenchmarks/loop_string.py:1:1\tNo issues found"
  - "benches/microbenchmarks/strings.py:1:1\tNo issues found"
  - "benches/README.md:27:62         microbenchmarks     U       code added under the `microbenchmarks/` directory. A microbenchmark"
  - "benches/README.md:27:93         microbenchmark      U       icrobenchmarks/` directory. A microbenchmark file has"
  - "benches/README.md:58:1          rustflags           U       rustflags = ["
  - "benches/test_benchmarks.py:19:18        nbody       U       ['benchmarks/nbody.py'],"
  - "Cargo.toml:16:44        pylib               U       stdlib\", \"rustpython-pylib\", \"encodings\"]"
  - "Cargo.toml:17:49        flamescope          U       flame-it\", \"flame\", \"flamescope\"]"
  - "Cargo.toml:18:71        pylib               U       stdlib\", \"rustpython-pylib?/freeze-stdlib\"]"
  - "Cargo.toml:29:12        pylib               U       rustpython-pylib = { workspace = true"
  - "Cargo.toml:42:1         flamescope          U       flamescope = { version = \"0.1."
  - "Cargo.toml:48:1         rustyline           U       rustyline = { workspace = true"
  - "Cargo.toml:59:9         microbenchmarks     U       name = \"microbenchmarks\""
  - "Cargo.toml:83:62        redoxer             U       to compile/check with redoxer"
  - "Cargo.toml:86:37        vcpkg               U       Windows to build the vcpkg dependencies"
  - "Cargo.toml:87:19        vcpkg               U       [package.metadata.vcpkg]"
  - "Cargo.toml:89:23        vcpkg               U       The revision of the vcpkg repository to use"
  - "Cargo.toml:93:19        vcpkg               U       [package.metadata.vcpkg.target]"
  - "Cargo.toml:100:61       pylib               U       , \"vm/sre_engine\", \"pylib\", \"stdlib\", \"derive"
  - "Cargo.toml:121:12       pylib               U       rustpython-pylib = { path = \"pylib\","
  - "Cargo.toml:151:1        getrandom           U       getrandom = \"0.2.12\""
  - "Cargo.toml:161:119      zerocopy            U       \"socket\", \"sched\", \"zerocopy\", \"dir\", \"hostname\""
  - "Cargo.toml:174:1        rustix              U       rustix = { version = \"0.38"
  - "Cargo.toml:175:1        rustyline           U       rustyline = \"14.0.0\""
  - "Cargo.toml:182:1        thiserror           U       thiserror = \"1.0\""
  - "Cargo.toml:185:1        widestring          U       widestring = \"1.1.0\""
  - "code-of-conduct.md:1:1\tNo issues found"
  - "common/Cargo.toml:33:1          siphasher       U       siphasher = \"0.3\""
  - "common/Cargo.toml:37:1          widestring      U       widestring = { workspace = true"
  - "common/src/atomic.rs:1:1\tNo issues found"
  - "common/src/borrow.rs:1:1\tNo issues found"
  - "common/src/boxvec.rs:1:8            unresizable         U       //! An unresizable vector backed by a"
  - "common/src/boxvec.rs:264:23         nonoverlapping      U       ptr::copy_nonoverlapping(other.as_ptr(), dst"
  - "common/src/boxvec.rs:582:5          Rawptr              U       /// Rawptr add but uses arithmetic"
  - "common/src/boxvec.rs:703:7          CAPERROR            U       const CAPERROR: &str = \"insufficient"
  - "common/src/boxvec.rs:709:21         CAPERROR            U       write!(f, \"{CAPERROR}\")"
  - "common/src/boxvec.rs:715:37         CAPERROR            U       f, \"capacity error: {CAPERROR}\")"
  - "common/src/cmp.rs:1:1\tNo issues found"
  - "common/src/crt_fd.rs:48:25          widestring      U       pub fn wopen(path: &widestring::WideCStr, flags: i"
  - "common/src/encodings.rs:1:1\tNo issues found"
  - "common/src/fileutils.rs:31:28       PCWSTR      U       use windows_sys::core::PCWSTR;"
  - "common/src/fileutils.rs:110:18      noraise     U       // _Py_fstat_noraise in cpython"
  - "common/src/fileutils.rs:262:44      IFEXEC      U       S_IFDIR | 0o111; // IFEXEC for user,group,other"
  - "common/src/fileutils.rs:311:21      PCWSTR      U       PCWSTR,"
  - "common/src/fileutils.rs:402:34      DATALINK    U       Ioctl::FILE_DEVICE_DATALINK => {}"
  - "common/src/float_ops.rs:5:8         ufrexp      U       pub fn ufrexp(value: f64) -> (f64"
  - "common/src/hash.rs:3:5          siphasher       U       use siphasher::sip::SipHasher24;"
  - "common/src/hash.rs:21:25        siphash         U       const ALGO: &str = \"siphash24\";"
  - "common/src/hash.rs:65:58        hashf           U       E>(&self, iter: I, hashf: F) -> Result<PyHash"
  - "common/src/hash.rs:72:29        hashf           U       let item_hash = hashf(element)?;"
  - "common/src/hash.rs:109:35       ufrexp          U       = super::float_ops::ufrexp(value);"
  - "common/src/int.rs:1:1\tNo issues found"
  - "common/src/lib.rs:11:9          boxvec      U       pub mod boxvec;"
  - "common/src/linked_list.rs:97:45         noalias     U       compiler to put the `noalias` attribute on mutable"
  - "common/src/linked_list.rs:104:25        noalias     U       hence be given the `noalias` attribute if we were"
  - "common/src/lock.rs:18:28        unsync      U       pub use once_cell::unsync::{Lazy, OnceCell};"
  - "common/src/lock/cell_lock.rs:72:23          sharedly        U       deadlock(\"sharedly \", \"RwLock\")"
  - "common/src/lock/cell_lock.rs:131:23         upgradably      U       deadlock(\"upgradably+sharedly \", \"RwLock"
  - "common/src/lock/cell_lock.rs:131:34         sharedly        U       deadlock(\"upgradably+sharedly \", \"RwLock\")"
  - "common/src/lock/cell_lock.rs:180:35         sharedly        U       deadlock(\"recursively+sharedly \", \"RwLock\")"
  - "common/src/lock/immutable_mutex.rs:1:1\tNo issues found"
  - "common/src/lock/thread_mutex.rs:1:1\tNo issues found"
  - "common/src/macros.rs:1:1\tNo issues found"
  - "common/src/os.rs:16:13          winerror        U       let winerror = self.raw_os_error"
  - "common/src/os.rs:17:9           winerror        U       winerror_to_errno(winerror)"
  - "common/src/os.rs:17:27          winerror        U       winerror_to_errno(winerror)"
  - "common/src/os.rs:31:30          winerror        U       let errno = errno_to_winerror(errno);"
  - "common/src/os.rs:64:17          osstr           U       pub fn bytes_as_osstr(b: &[u8]) -> Result"
  - "common/src/os.rs:70:17          osstr           U       pub fn bytes_as_osstr(b: &[u8]) -> Result"
  - "common/src/os.rs:80:17          winerror        U       pub fn errno_to_winerror(errno: i32) -> i32"
  - "common/src/os.rs:113:31         WSAEACCES       U       Networking::WinSock::{WSAEACCES, WSAEBADF, WSAEFAULT"
  - "common/src/os.rs:113:42         WSAEBADF        U       WinSock::{WSAEACCES, WSAEBADF, WSAEFAULT, WSAEINTR"
  - "common/src/os.rs:113:52         WSAEFAULT       U       WSAEACCES, WSAEBADF, WSAEFAULT, WSAEINTR, WSAEINVAL"
  - "common/src/os.rs:113:73         WSAEINVAL       U       WSAEFAULT, WSAEINTR, WSAEINVAL, WSAEMFILE},"
  - "common/src/os.rs:113:84         WSAEMFILE       U       WSAEINTR, WSAEINVAL, WSAEMFILE},"
  - "common/src/os.rs:115:30         HRESULT         U       Unwrap FACILITY_WIN32 HRESULT errors."
  - "common/src/os.rs:123:24         WSAEBADF        U       WSAEINTR | WSAEBADF | WSAEACCES | WSAEFAULT"
  - "common/src/os.rs:123:35         WSAEACCES       U       WSAEINTR | WSAEBADF | WSAEACCES | WSAEFAULT | WSAEINVAL"
  - "common/src/os.rs:123:47         WSAEFAULT       U       WSAEBADF | WSAEACCES | WSAEFAULT | WSAEINVAL | WSAEMFILE"
  - "common/src/os.rs:123:59         WSAEINVAL       U       WSAEACCES | WSAEFAULT | WSAEINVAL | WSAEMFILE => {"
  - "common/src/os.rs:123:71         WSAEMFILE       U       WSAEFAULT | WSAEINVAL | WSAEMFILE => {"
  - "common/src/os.rs:143:34         CODESEG         U       ERROR_INVALID_STARTING_CODESEG"
  - "common/src/os.rs:144:25         STACKSEG        U       | ERROR_INVALID_STACKSEG"
  - "common/src/os.rs:150:25         MINALLOCSIZE    U       | ERROR_INVALID_MINALLOCSIZE"
  - "common/src/os.rs:151:17         DYNLINK         U       | ERROR_DYNLINK_FROM_INVALID_RING"
  - "common/src/os.rs:152:17         IOPL            U       | ERROR_IOPL_NOT_ENABLED"
  - "common/src/os.rs:153:25         SEGDPL          U       | ERROR_INVALID_SEGDPL"
  - "common/src/os.rs:154:17         AUTODATASEG     U       | ERROR_AUTODATASEG_EXCEEDS_64k"
  - "common/src/os.rs:156:29         XEEDS           U       | ERROR_RELOC_CHAIN_XEEDS_SEGLIM"
  - "common/src/os.rs:156:35         SEGLIM          U       ERROR_RELOC_CHAIN_XEEDS_SEGLIM"
  - "common/src/os.rs:157:17         INFLOOP         U       | ERROR_INFLOOP_IN_RELOC_CHAIN => ENOEXEC"
  - "common/src/rc.rs:6:28           newtypes    U       type aliases instead of newtypes because you can't do"
  - "common/src/refcount.rs:1:1\tNo issues found"
  - "common/src/static_cell.rs:16:28         localkey    U       pub const fn _from_localkey(inner: &'static LocalKey"
  - "common/src/static_cell.rs:25:43         unsync      U       safe because it's a unsync::OnceCell"
  - "common/src/static_cell.rs:61:56         localkey    U       cell::StaticCell::_from_localkey(&$name)"
  - "common/src/static_cell.rs:79:28         oncecell    U       pub const fn _from_oncecell(inner: OnceCell<T>)"
  - "common/src/static_cell.rs:111:56        oncecell    U       cell::StaticCell::_from_oncecell($crate::lock::OnceCell"
  - "common/src/str.rs:46:43         uncomputed      U       MAX as a sentinel for \"uncomputed\""
  - "common/src/str.rs:202:52        unicodes        U       compatible, escaping unicodes into escape"
  - "common/src/windows.rs:1:1\tNo issues found"
  - "compiler/Cargo.toml:1:1\tNo issues found"
  - "compiler/codegen/Cargo.toml:1:1\tNo issues found"
  - "compiler/codegen/src/compile.rs:1:1\tNo issues found"
  - "compiler/codegen/src/error.rs:1:1\tNo issues found"
  - "compiler/codegen/src/ir.rs:1:1\tNo issues found"
  - "compiler/codegen/src/lib.rs:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_codegen__compile__tests__if_ands.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_codegen__compile__tests__if_mixed.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_codegen__compile__tests__if_ors.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_codegen__compile__tests__nested_double_async_with.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__if_ands.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__if_mixed.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__if_ors.snap:1:1\tNo issues found"
  - "compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__nested_double_async_with.snap:3:184        woohoo      U       async with woohoo():\\n"
  - "compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__nested_double_async_with.snap:29:42        woohoo      U       LoadNameAny (6, woohoo)"
  - "compiler/codegen/src/symboltable.rs:1:1\tNo issues found"
  - "compiler/core/Cargo.toml:1:1\tNo issues found"
  - "compiler/core/src/bytecode.rs:1:1\tNo issues found"
  - "compiler/core/src/frozen.rs:1:1\tNo issues found"
  - "compiler/core/src/lib.rs:1:1\tNo issues found"
  - "compiler/core/src/marshal.rs:1:1\tNo issues found"
  - "compiler/core/src/mode.rs:1:1\tNo issues found"
  - "compiler/src/lib.rs:1:1\tNo issues found"
  - "crawl_sourcecode.py:1:1\tNo issues found"
  - "demo_closures.py:1:1\tNo issues found"
  - "deny.toml:73:7          RUSTSEC         U       #\"RUSTSEC-0000-0000\","
  - "deny.toml:74:14         RUSTSEC         U       #{ id = \"RUSTSEC-0000-0000\", reason"
  - "deny.toml:156:45        dotgraphs       U       ghlighting used when creating dotgraphs for crates"
  - "deny.toml:188:11        reqwest         U       #crate = \"reqwest\""
  - "deny.toml:193:7         rustls          U       # \"rustls\","
  - "deny.toml:194:9         rustls          U       # \"__rustls\","
  - "deny.toml:196:13        rustls          U       # \"hyper-rustls\","
  - "deny.toml:197:7         rustls          U       # \"rustls\","
  - "deny.toml:198:7         rustls          U       # \"rustls-pemfile\","
  - "deny.toml:198:14        pemfile         U       # \"rustls-pemfile\","
  - "deny.toml:199:18        webpki          U       # \"rustls-tls-webpki-roots\","
  - "deny.toml:201:7         webpki          U       # \"webpki-roots\","
  - "deny.toml:210:21        gnullvm         U       \"windows_x86_64_gnullvm\","
  - "deny.toml:215:22        gnullvm         U       \"windows_aarch64_gnullvm\","
  - "derive-impl/Cargo.toml:1:1\tNo issues found"
  - "derive-impl/src/compile_bytecode.rs:1:1\tNo issues found"
  - "derive-impl/src/error.rs:1:1\tNo issues found"
  - "derive-impl/src/from_args.rs:1:1\tNo issues found"
  - "derive-impl/src/lib.rs:21:5         pytraverse      U       mod pytraverse;"
  - "derive-impl/src/lib.rs:81:8         pytraverse      U       pub fn pytraverse(item: DeriveInput)"
  - "derive-impl/src/lib.rs:82:22        pytraverse      U       result_to_tokens(pytraverse::impl_pytraverse(item"
  - "derive-impl/src/lib.rs:82:39        pytraverse      U       tokens(pytraverse::impl_pytraverse(item))"
  - "derive-impl/src/pyclass.rs:1:1\tNo issues found"
  - "derive-impl/src/pymodule.rs:1:1\tNo issues found"
  - "derive-impl/src/pypayload.rs:1:1\tNo issues found"
  - "derive-impl/src/pystructseq.rs:1:1\tNo issues found"
  - "derive-impl/src/pytraverse.rs:6:46          pytraverse      U       the attribute is `#[pytraverse(skip)]`"
  - "derive-impl/src/pytraverse.rs:10:30         pytraverse      U       ATTR_TRAVERSE: &str = \"pytraverse\";"
  - "derive-impl/src/pytraverse.rs:12:16         pytraverse      U       /// get the `#[pytraverse(..)]` attribute from"
  - "derive-impl/src/pytraverse.rs:34:37         pytraverse      U       only support attr is #[pytraverse(skip)], got arguments"
  - "derive-impl/src/pytraverse.rs:41:20         pytraverse      U       /// only accept `#[pytraverse(skip)]` for now"
  - "derive-impl/src/util.rs:1:1\tNo issues found"
  - "derive/Cargo.toml:1:1\tNo issues found"
  - "derive/src/lib.rs:87:12         pytraverse      U       /// use `#[pytraverse(skip)]` on fields you"
  - "derive/src/lib.rs:97:11         pytraverse      U       /// #[pytraverse(skip)]"
  - "derive/src/lib.rs:103:42        pytraverse      U       Traverse, attributes(pytraverse))]"
  - "derive/src/lib.rs:104:8         pytraverse      U       pub fn pytraverse(item: proc_macro::TokenStream"
  - "derive/src/lib.rs:106:18        pytraverse      U       derive_impl::pytraverse(item).into()"
  - "DEVELOPMENT.md:101:28       flamescope      U       will generate a file `flamescope.json`, which can be"
  - "DEVELOPMENT.md:106:7        flamescope      U       $ cat flamescope.json"
  - "DEVELOPMENT.md:113:5        speedscope      U       The speedscope json format (default"
  - "DEVELOPMENT.md:131:26       subcrates       U       src`: using the other subcrates to bring rustpython"
  - "Dockerfile.bin:13:5         RUSTPYTHONPATH      U       ENV RUSTPYTHONPATH /usr/lib/rustpython"
  - "Dockerfile.wasm:1:1\tNo issues found"
  - "example_projects/aheui-rust.md:1:3          aheui           U       # aheui-rust"
  - "example_projects/aheui-rust.md:4:14         frozenlib       U       - Creating a frozenlib: https://github.com"
  - "example_projects/barebone/Cargo.toml:2:17           barebone    U       name = \"example-barebone\""
  - "example_projects/barebone/src/main.rs:1:1\tNo issues found"
  - "example_projects/frozen_stdlib/Cargo.toml:9:12          pylib       U       rustpython-pylib = { path = \"../../pylib"
  - "example_projects/frozen_stdlib/Cargo.toml:9:36          pylib       U       pylib = { path = \"../../pylib\", default-features"
  - "example_projects/frozen_stdlib/src/main.rs:4:16         aheui       U       /// See also: `aheui-rust.md` for freezing"
  - "example_projects/frozen_stdlib/src/main.rs:30:34        pylib       U       add_frozen(rustpython_pylib::FROZEN_STDLIB);"
  - "examples/atexit_example.py:4:5          myexit      U       def myexit():"
  - "examples/atexit_example.py:7:17         myexit      U       atexit.register(myexit)"
  - "examples/call_between_rust_and_python.py:1:1\tNo issues found"
  - "examples/call_between_rust_and_python.rs:1:1\tNo issues found"
  - "examples/dis.rs:1:1\tNo issues found"
  - "examples/freeze/freeze.py:1:1\tNo issues found"
  - "examples/freeze/main.rs:1:1\tNo issues found"
  - "examples/generator.rs:1:1\tNo issues found"
  - "examples/hello_embed.rs:1:1\tNo issues found"
  - "examples/mini_repl.rs:1:1\tNo issues found"
  - "examples/package_embed.py:1:1\tNo issues found"
  - "examples/package_embed.rs:1:1\tNo issues found"
  - "examples/parse_folder.rs:68:35          Erreur      U       Err(y) => error!(\"Erreur in file {:?} {:?}\","
  - "extra_tests/benchmarks/perf_add.py:1:1\tNo issues found"
  - "extra_tests/benchmarks/perf_fib.py:1:1\tNo issues found"
  - "extra_tests/custom_text_test_runner.py:7:22         Abtin           U       Copyright (c) 2015 Abtin Gramian"
  - "extra_tests/custom_text_test_runner.py:7:28         Gramian         U       Copyright (c) 2015 Abtin Gramian"
  - "extra_tests/custom_text_test_runner.py:88:36        getargspec      U       [p for p in inspect.getargspec(func_ref).args if p"
  - "extra_tests/jsontests.py:3:11           libregrtest     U       from test.libregrtest.runtest import findtests"
  - "extra_tests/jsontests.py:3:38           findtests       U       libregrtest.runtest import findtests"
  - "extra_tests/jsontests.py:7:1            testnames       U       testnames = findtests()"
  - "extra_tests/jsontests.py:7:13           findtests       U       testnames = findtests()"
  - "extra_tests/jsontests.py:9:1            testnames       U       testnames.remove('test_importlib"
  - "extra_tests/jsontests.py:10:1           testnames       U       testnames.insert(0, 'test_importlib"
  - "extra_tests/jsontests.py:25:80          testnames       U       + name) for name in testnames])"
  - "extra_tests/jsontests.py:27:1           resultsfile     U       resultsfile = os.path.join(os.path"
  - "extra_tests/jsontests.py:28:19          resultsfile     U       if os.path.exists(resultsfile):"
  - "extra_tests/jsontests.py:29:15          resultsfile     U       os.remove(resultsfile)"
  - "extra_tests/jsontests.py:31:35          resultsfile     U       Runner(results_file_path=resultsfile, verbosity=2)"
  - "extra_tests/jsontests.py:34:41          resultsfile     U       results are available in\", resultsfile)"
  - "extra_tests/README.md:1:1\tNo issues found"
  - "extra_tests/requirements.txt:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.2.13.py:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.2.16.py:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.2.18.py:3:9            Jython      U       assert \"Jython\" == \"J\" + word[1:]"
  - "extra_tests/snippets/3.1.2.19.py:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.3.2.py:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.3.4.py:1:1\tNo issues found"
  - "extra_tests/snippets/3.1.3.5.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_abs.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_all.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_all.py:2:6         testutils       U       from testutils import TestFailingBool"
  - "extra_tests/snippets/builtin_any.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_any.py:2:6         testutils       U       from testutils import TestFailingBool"
  - "extra_tests/snippets/builtin_ascii.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_bin.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_bool.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_bool.py:33:7           Falsey          U       class Falsey:"
  - "extra_tests/snippets/builtin_bool.py:37:12          Falsey          U       assert not Falsey()"
  - "extra_tests/snippets/builtin_bytearray.py:1:6           testutils               U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_bytearray.py:17:33         jilj                    U       bytearray(\"bla\", encoding=b\"jilj\")"
  - "extra_tests/snippets/builtin_bytearray.py:25:20         omkmok                  U       assert bytearray(b\"omkmok\\Xaa\") == bytearray("
  - "extra_tests/snippets/builtin_bytearray.py:54:23         abcdé                   U       assert len(bytearray(\"abcdé\", \"utf8\")) == 6"
  - "extra_tests/snippets/builtin_bytearray.py:72:33         unashable               U       bytearray(b\"abcd\")) # unashable"
  - "extra_tests/snippets/builtin_bytearray.py:79:29         abcdab                  U       a + b == bytearray(b\"abcdab\")"
  - "extra_tests/snippets/builtin_bytearray.py:99:30         cdef                    U       2:6] == bytearray(b\"cdef\")"
  - "extra_tests/snippets/builtin_bytearray.py:100:30        efghij                  U       -6:] == bytearray(b\"efghij\")"
  - "extra_tests/snippets/builtin_bytearray.py:101:32        bdfh                    U       8:2] == bytearray(b\"bdfh\")"
  - "extra_tests/snippets/builtin_bytearray.py:102:33        igec                    U       :-2] == bytearray(b\"igec\")"
  - "extra_tests/snippets/builtin_bytearray.py:163:25        hhjjk                   U       bytearray.fromhex(b\"hhjjk\")"
  - "extra_tests/snippets/builtin_bytearray.py:165:21        koki                    U       assert [bytearray(b\"koki\").center(i, b\"|\") for"
  - "extra_tests/snippets/builtin_bytearray.py:166:7         koki                    U       b\"koki\","
  - "extra_tests/snippets/builtin_bytearray.py:167:7         koki                    U       b\"koki\","
  - "extra_tests/snippets/builtin_bytearray.py:168:8         koki                    U       b\"|koki\","
  - "extra_tests/snippets/builtin_bytearray.py:169:8         koki                    U       b\"|koki|\","
  - "extra_tests/snippets/builtin_bytearray.py:192:58        xkokx                   U       bytearray(b\"x\")) == b\"xkokx\""
  - "extra_tests/snippets/builtin_bytearray.py:224:57        kokxx                   U       bytearray(b\"x\")) == b\"kokxx\""
  - "extra_tests/snippets/builtin_bytearray.py:256:57        xxkok                   U       bytearray(b\"x\")) == b\"xxkok\""
  - "extra_tests/snippets/builtin_bytearray.py:261:20        azeazerazeazopia        U       assert bytearray(b\"azeazerazeazopia\").count(b\"aze\") =="
  - "extra_tests/snippets/builtin_bytearray.py:262:20        azeazerazeazopia        U       assert bytearray(b\"azeazerazeazopia\").count(b\"az\") == 4"
  - "extra_tests/snippets/builtin_bytearray.py:263:20        azeazerazeazopia        U       assert bytearray(b\"azeazerazeazopia\").count(b\"a\") == 5"
  - "extra_tests/snippets/builtin_bytearray.py:265:20        azeazerazeazopia        U       assert bytearray(b\"azeazerazeazopia\").count(bytearray(b"
  - "extra_tests/snippets/builtin_bytearray.py:266:20        azeazerazeazopia        U       assert bytearray(b\"azeazerazeazopia\").count(memoryview(b"
  - "extra_tests/snippets/builtin_bytearray.py:282:8         jiljl                   U       (b\"jiljl\", bytearray(b\"kmoomk"
  - "extra_tests/snippets/builtin_bytearray.py:282:28        kmoomk                  U       jiljl\", bytearray(b\"kmoomk\"), memoryview(b\"aaaa"
  - "extra_tests/snippets/builtin_bytearray.py:283:18        jiljlkmoomkaaaa         U       ) == bytearray(b\"jiljlkmoomkaaaa\")"
  - "extra_tests/snippets/builtin_bytearray.py:288:22        abcxyz                  U       ) == bytearray(b\"123abcxyz\")"
  - "extra_tests/snippets/builtin_bytearray.py:315:32        cdaaaaa                 U       bytearray(b\"abcd\").index(b\"cdaaaaa\")"
  - "extra_tests/snippets/builtin_bytearray.py:326:34        cdaaaaa                 U       bytearray(b\"abcd\").find(b\"cdaaaaa\") == -1"
  - "extra_tests/snippets/builtin_bytearray.py:331:20        abcdabcda               U       assert bytearray(b\"abcdabcda\").find(b\"a\") == 0"
  - "extra_tests/snippets/builtin_bytearray.py:332:20        abcdabcda               U       assert bytearray(b\"abcdabcda\").rfind(b\"a\") == 8"
  - "extra_tests/snippets/builtin_bytearray.py:333:20        abcdabcda               U       assert bytearray(b\"abcdabcda\").rfind(b\"a\", 2, 6)"
  - "extra_tests/snippets/builtin_bytearray.py:334:20        abcdabcda               U       assert bytearray(b\"abcdabcda\").rfind(b\"a\", None,"
  - "extra_tests/snippets/builtin_bytearray.py:335:20        abcdabcda               U       assert bytearray(b\"abcdabcda\").rfind(b\"a\", 2, None"
  - "extra_tests/snippets/builtin_bytearray.py:349:20        hjhtuyjyujuyj           U       assert bytearray(b\"hjhtuyjyujuyj\").translate("
  - "extra_tests/snippets/builtin_bytearray.py:351:18        btuybyubuyb             U       ) == bytearray(b\"btuybyubuyb\")"
  - "extra_tests/snippets/builtin_bytearray.py:352:20        hjhtuyjyujuyj           U       assert bytearray(b\"hjhtuyjyujuyj\").translate("
  - "extra_tests/snippets/builtin_bytearray.py:354:18        abatuybyubuyb           U       ) == bytearray(b\"abatuybyubuyb\")"
  - "extra_tests/snippets/builtin_bytearray.py:355:20        hjhtuyjyujuyj           U       assert bytearray(b\"hjhtuyjyujuyj\").translate("
  - "extra_tests/snippets/builtin_bytearray.py:357:18        abatuybyubuyb           U       ) == bytearray(b\"abatuybyubuyb\")"
  - "extra_tests/snippets/builtin_bytearray.py:358:20        hjhtuyfjtyhuhjuyj       U       assert bytearray(b\"hjhtuyfjtyhuhjuyj\").translate(None, bytearray"
  - "extra_tests/snippets/builtin_bytearray.py:359:7         juyfjyujuyj             U       b\"juyfjyujuyj\""
  - "extra_tests/snippets/builtin_bytearray.py:361:20        hjhtuyfjtyhuhjuyj       U       assert bytearray(b\"hjhtuyfjtyhuhjuyj\").translate(None, delete"
  - "extra_tests/snippets/builtin_bytearray.py:362:7         juyfjyujuyj             U       b\"juyfjyujuyj\""
  - "extra_tests/snippets/builtin_bytearray.py:368:46        cmowz                   U       example.com\").strip(b\"cmowz.\") == bytearray(b\"example"
  - "extra_tests/snippets/builtin_bytearray.py:370:47        cmowz                   U       example.com\").lstrip(b\"cmowz.\") == bytearray(b\"example"
  - "extra_tests/snippets/builtin_bytearray.py:372:64        mississ                 U       ipz\") == bytearray(b\"mississ\")"
  - "extra_tests/snippets/builtin_bytearray.py:588:55        keepends                U       rkl\\r\\n\").splitlines(keepends=True) == ["
  - "extra_tests/snippets/builtin_bytearray.py:636:17        appen                   U       a = bytearray(b\"appen\")"
  - "extra_tests/snippets/builtin_bytearray.py:656:29        abcdabcdabcd            U       a * 3 == bytearray(b'abcdabcdabcd')"
  - "extra_tests/snippets/builtin_bytearray.py:657:29        abcdabcdabcd            U       * a == bytearray(b'abcdabcdabcd')"
  - "extra_tests/snippets/builtin_bytearray.py:661:25        abcdabcdabcd            U       assert a == bytearray(b'abcdabcdabcd')"
  - "extra_tests/snippets/builtin_bytearray.py:686:25        whello                  U       assert a == bytearray(b\"whello, world\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:689:25        whello                  U       assert a == bytearray(b\"whello, worlwd\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:689:33        worlwd                  U       bytearray(b\"whello, worlwd\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:692:25        owhello                 U       assert a == bytearray(b\"owhello, worlwd\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:692:34        worlwd                  U       bytearray(b\"owhello, worlwd\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:695:25        owhello                 U       assert a == bytearray(b\"owhello, worlwdo\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:695:34        worlwdo                 U       bytearray(b\"owhello, worlwdo\"), a"
  - "extra_tests/snippets/builtin_bytearray.py:699:17        abcdabcd                U       a = bytearray(b'abcdabcd')"
  - "extra_tests/snippets/builtin_bytearray.py:702:25        abdabcd                 U       assert a == bytearray(b'abdabcd')"
  - "extra_tests/snippets/builtin_bytearray.py:708:25        dlrow                   U       assert a == bytearray(b'dlrow ,olleh')"
  - "extra_tests/snippets/builtin_bytearray.py:708:32        olleh                   U       bytearray(b'dlrow ,olleh')"
  - "extra_tests/snippets/builtin_bytearray.py:726:24        bpython                 U       assert bytearray('rust%bpython%b', 'utf-8') % (b'"
  - "extra_tests/snippets/builtin_bytearray.py:737:18        xffab                   U       a = bytearray(b'\\xffab\\x80\\0\\0\\370\\0\\0')"
  - "extra_tests/snippets/builtin_bytearray.py:738:87        xffab                   U       codecs\\nencode\\np1\\n(V\\xffab\\x80\\\\u0000\\\\u0000\\xf"
  - "extra_tests/snippets/builtin_bytearray.py:738:134       Vlatin                  U       \\\\u0000\\\\u0000\\np2\\nVlatin1\\np3\\ntp4\\nRp5\\ntp6"
  - "extra_tests/snippets/builtin_bytearray.py:739:109       xbfab                   U       x0c\\x00\\x00\\x00\\xc3\\xbfab\\xc2\\x80\\x00\\x00\\xc3"
  - "extra_tests/snippets/builtin_bytearray.py:740:115       xbfab                   U       x0c\\x00\\x00\\x00\\xc3\\xbfab\\xc2\\x80\\x00\\x00\\xc3"
  - "extra_tests/snippets/builtin_bytearray.py:741:40        cbuiltins               U       dumps(a, 3) == b'\\x80\\x03cbuiltins\\nbytearray\\nq\\x00C\\t"
  - "extra_tests/snippets/builtin_bytearray.py:741:71        xffab                   U       nbytearray\\nq\\x00C\\t\\xffab\\x80\\x00\\x00\\xf8\\x00"
  - "extra_tests/snippets/builtin_bytearray.py:742:124       xffab                   U       tbytearray\\x94\\x93\\x94C\\t\\xffab\\x80\\x00\\x00\\xf8\\x00"
  - "extra_tests/snippets/builtin_bytes.py:1:6           testutils               U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_bytes.py:13:29         jilj                    U       bytes(\"bla\", encoding=b\"jilj\")"
  - "extra_tests/snippets/builtin_bytes.py:23:10         omkmok                  U       assert b\"omkmok\\Xaa\" == bytes([111,"
  - "extra_tests/snippets/builtin_bytes.py:40:19         abcdé                   U       assert len(bytes(\"abcdé\", \"utf8\")) == 6"
  - "extra_tests/snippets/builtin_bytes.py:64:19         abcdab                  U       assert a + b == b\"abcdab\""
  - "extra_tests/snippets/builtin_bytes.py:84:20         cdef                    U       assert d[2:6] == b\"cdef\""
  - "extra_tests/snippets/builtin_bytes.py:85:20         efghij                  U       assert d[-6:] == b\"efghij\""
  - "extra_tests/snippets/builtin_bytes.py:86:22         bdfh                    U       assert d[1:8:2] == b\"bdfh\""
  - "extra_tests/snippets/builtin_bytes.py:87:23         igec                    U       assert d[8:1:-2] == b\"igec\""
  - "extra_tests/snippets/builtin_bytes.py:148:21        hhjjk                   U       bytes.fromhex(b\"hhjjk\")"
  - "extra_tests/snippets/builtin_bytes.py:150:11        koki                    U       assert [b\"koki\".center(i, b\"|\") for"
  - "extra_tests/snippets/builtin_bytes.py:151:7         koki                    U       b\"koki\","
  - "extra_tests/snippets/builtin_bytes.py:152:7         koki                    U       b\"koki\","
  - "extra_tests/snippets/builtin_bytes.py:153:8         koki                    U       b\"|koki\","
  - "extra_tests/snippets/builtin_bytes.py:154:8         koki                    U       b\"|koki|\","
  - "extra_tests/snippets/builtin_bytes.py:177:47        xkokx                   U       bytearray(b\"x\")) == b\"xkokx\""
  - "extra_tests/snippets/builtin_bytes.py:209:46        kokxx                   U       bytearray(b\"x\")) == b\"kokxx\""
  - "extra_tests/snippets/builtin_bytes.py:241:46        xxkok                   U       bytearray(b\"x\")) == b\"xxkok\""
  - "extra_tests/snippets/builtin_bytes.py:246:10        azeazerazeazopia        U       assert b\"azeazerazeazopia\".count(b\"aze\") == 3"
  - "extra_tests/snippets/builtin_bytes.py:247:10        azeazerazeazopia        U       assert b\"azeazerazeazopia\".count(b\"az\") == 4"
  - "extra_tests/snippets/builtin_bytes.py:248:10        azeazerazeazopia        U       assert b\"azeazerazeazopia\".count(b\"a\") == 5"
  - "extra_tests/snippets/builtin_bytes.py:250:10        azeazerazeazopia        U       assert b\"azeazerazeazopia\".count(bytearray(b\"aze"
  - "extra_tests/snippets/builtin_bytes.py:251:10        azeazerazeazopia        U       assert b\"azeazerazeazopia\".count(memoryview(b"
  - "extra_tests/snippets/builtin_bytes.py:267:17        jiljl                   U       b\"\".join((b\"jiljl\", bytearray(b\"kmoomk"
  - "extra_tests/snippets/builtin_bytes.py:267:37        kmoomk                  U       jiljl\", bytearray(b\"kmoomk\"), memoryview(b\"aaaa"
  - "extra_tests/snippets/builtin_bytes.py:268:10        jiljlkmoomkaaaa         U       == b\"jiljlkmoomkaaaa\""
  - "extra_tests/snippets/builtin_bytes.py:273:46        abcxyz                  U       \", b\"xyz\")) == b\"123abcxyz\""
  - "extra_tests/snippets/builtin_bytes.py:300:21        cdaaaaa                 U       b\"abcd\".index(b\"cdaaaaa\")"
  - "extra_tests/snippets/builtin_bytes.py:311:23        cdaaaaa                 U       assert b\"abcd\".find(b\"cdaaaaa\") == -1"
  - "extra_tests/snippets/builtin_bytes.py:316:10        abcdabcda               U       assert b\"abcdabcda\".find(b\"a\") == 0"
  - "extra_tests/snippets/builtin_bytes.py:317:10        abcdabcda               U       assert b\"abcdabcda\".rfind(b\"a\") == 8"
  - "extra_tests/snippets/builtin_bytes.py:318:10        abcdabcda               U       assert b\"abcdabcda\".rfind(b\"a\", 2, 6)"
  - "extra_tests/snippets/builtin_bytes.py:319:10        abcdabcda               U       assert b\"abcdabcda\".rfind(b\"a\", None,"
  - "extra_tests/snippets/builtin_bytes.py:320:10        abcdabcda               U       assert b\"abcdabcda\".rfind(b\"a\", 2, None"
  - "extra_tests/snippets/builtin_bytes.py:334:10        hjhtuyjyujuyj           U       assert b\"hjhtuyjyujuyj\".translate(bytes.maketrans"
  - "extra_tests/snippets/builtin_bytes.py:334:77        btuybyubuyb             U       b\"ab\"), b\"h\") == b\"btuybyubuyb\""
  - "extra_tests/snippets/builtin_bytes.py:336:7         hjhtuyjyujuyj           U       b\"hjhtuyjyujuyj\".translate(bytes.maketrans"
  - "extra_tests/snippets/builtin_bytes.py:336:74        abatuybyubuyb           U       b\"ab\"), b\"a\") == b\"abatuybyubuyb\""
  - "extra_tests/snippets/builtin_bytes.py:338:10        hjhtuyjyujuyj           U       assert b\"hjhtuyjyujuyj\".translate(bytes.maketrans"
  - "extra_tests/snippets/builtin_bytes.py:338:71        abatuybyubuyb           U       b\"hj\", b\"ab\")) == b\"abatuybyubuyb\""
  - "extra_tests/snippets/builtin_bytes.py:339:10        hjhtuyfjtyhuhjuyj       U       assert b\"hjhtuyfjtyhuhjuyj\".translate(None, b\"ht"
  - "extra_tests/snippets/builtin_bytes.py:339:57        juyfjyujuyj             U       translate(None, b\"ht\") == b\"juyfjyujuyj\""
  - "extra_tests/snippets/builtin_bytes.py:340:10        hjhtuyfjtyhuhjuyj       U       assert b\"hjhtuyfjtyhuhjuyj\".translate(None, delete"
  - "extra_tests/snippets/builtin_bytes.py:340:64        juyfjyujuyj             U       delete=b\"ht\") == b\"juyfjyujuyj\""
  - "extra_tests/snippets/builtin_bytes.py:345:35        cmowz                   U       example.com\".strip(b\"cmowz.\") == b\"example\""
  - "extra_tests/snippets/builtin_bytes.py:347:36        cmowz                   U       example.com\".lstrip(b\"cmowz.\") == b\"example.com"
  - "extra_tests/snippets/builtin_bytes.py:349:43        mississ                 U       rstrip(b\"ipz\") == b\"mississ\""
  - "extra_tests/snippets/builtin_bytes.py:564:44        keepends                U       rkl\\r\\n\".splitlines(keepends=True) == ["
  - "extra_tests/snippets/builtin_bytes.py:603:19        abcdabcdabcd            U       assert a * 3 == b'abcdabcdabcd'"
  - "extra_tests/snippets/builtin_bytes.py:604:19        abcdabcdabcd            U       assert 3 * a == b'abcdabcdabcd'"
  - "extra_tests/snippets/builtin_bytes.py:615:15        bpython                 U       assert b'rust%bpython%b' % (b' ', b'!') ="
  - "extra_tests/snippets/builtin_bytes.py:631:18        bytess                  U       return b\"bytess\""
  - "extra_tests/snippets/builtin_bytes.py:633:24        bytess                  U       assert bytes(A()) == b\"bytess\""
  - "extra_tests/snippets/builtin_callable.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_chr.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_complex.py:1:8         testutils       U       import testutils"
  - "extra_tests/snippets/builtin_complex.py:2:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_dict_union.py:2:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_dict_union.py:4:10         dunion          U       def test_dunion_ior0():"
  - "extra_tests/snippets/builtin_dict_union.py:12:10        dunion          U       def test_dunion_or0():"
  - "extra_tests/snippets/builtin_dict_union.py:22:10        dunion          U       def test_dunion_or1():"
  - "extra_tests/snippets/builtin_dict_union.py:32:10        dunion          U       def test_dunion_ror0():"
  - "extra_tests/snippets/builtin_dict_union.py:42:10        dunion          U       def test_dunion_other_types():"
  - "extra_tests/snippets/builtin_dict.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_dir.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_divmod.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_ellipsis.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_enumerate.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_eval.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_exceptions.py:95:9         excepthook      U       sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:105:9        excepthook      U       sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:105:77       excs            U       ok, will print two excs"
  - "extra_tests/snippets/builtin_exceptions.py:126:9        excepthook      U       sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:142:9        excepthook      U       sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:158:9        excepthook      U       sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:272:48       winerror        U       startswith(\"win\") or w.winerror == None"
  - "extra_tests/snippets/builtin_exceptions.py:280:48       winerror        U       startswith(\"win\") or x.winerror == None"
  - "extra_tests/snippets/builtin_exceptions.py:288:48       winerror        U       startswith(\"win\") or w.winerror == None"
  - "extra_tests/snippets/builtin_exceptions.py:296:48       winerror        U       startswith(\"win\") or x.winerror == None"
  - "extra_tests/snippets/builtin_exceptions.py:304:48       winerror        U       startswith(\"win\") or w.winerror == None"
  - "extra_tests/snippets/builtin_exec.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_exit.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_file.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_filter.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_float.py:3:6           testutils               U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_float.py:7:1           NINF                    U       NINF = float(\"-inf\")"
  - "extra_tests/snippets/builtin_float.py:267:6         infi                    U       \"infi\", # misspelt infinities"
  - "extra_tests/snippets/builtin_float.py:268:7         Infinit (Infinite)      U       \"-Infinit\","
  - "extra_tests/snippets/builtin_float.py:273:6         snan                    U       \"snan\","
  - "extra_tests/snippets/builtin_float.py:278:6         nfinity                 U       \"nfinity\","
  - "extra_tests/snippets/builtin_float.py:279:6         inity                   U       \"inity\","
  - "extra_tests/snippets/builtin_float.py:280:6         iinity                  U       \"iinity\","
  - "extra_tests/snippets/builtin_float.py:281:7         xnan                    U       \"0xnan\","
  - "extra_tests/snippets/builtin_float.py:393:21        xbep                    U       identical(fromHex(\"0xbep0\"), 190.0)"
  - "extra_tests/snippets/builtin_format.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_hash.py:2:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_hex.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_int.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_int.py:365:1       subint          U       subint = int.__new__(SubInt"
  - "extra_tests/snippets/builtin_int.py:366:8       subint          U       assert subint.real is not subint"
  - "extra_tests/snippets/builtin_int.py:366:27      subint          U       assert subint.real is not subint"
  - "extra_tests/snippets/builtin_int.py:367:13      subint          U       assert type(subint.real) is int"
  - "extra_tests/snippets/builtin_isinstance.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_issubclass.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_len.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_list.py:1:6            testutils                   U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_list.py:253:13         refrences (references)      U       # make sure refrences are assigned correctly"
  - "extra_tests/snippets/builtin_list.py:358:13         refrences (references)      U       # make sure refrences are assigned correctly"
  - "extra_tests/snippets/builtin_list.py:639:26         daedlock                    U       Test for list entering daedlock or not (https://github"
  - "extra_tests/snippets/builtin_locals.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_map.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_mappingproxy.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_max.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_memoryview.py:3:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_memoryview.py:39:14        tobytes         U       assert m.tobytes() == b'123456789'"
  - "extra_tests/snippets/builtin_memoryview.py:41:19        tobytes         U       assert m[::2].tobytes() == b'13579'"
  - "extra_tests/snippets/builtin_memoryview.py:43:20        tobytes         U       assert m[1::2].tobytes() == b'2468'"
  - "extra_tests/snippets/builtin_memoryview.py:44:23        tobytes         U       assert m[::2][1:].tobytes() == b'3579'"
  - "extra_tests/snippets/builtin_memoryview.py:45:25        tobytes         U       assert m[::2][1:-1].tobytes() == b'357'"
  - "extra_tests/snippets/builtin_min.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_none.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_object.py:6:1          myobj       U       myobj = MyObject()"
  - "extra_tests/snippets/builtin_object.py:7:8          myobj       U       assert myobj == myobj"
  - "extra_tests/snippets/builtin_object.py:7:17         myobj       U       assert myobj == myobj"
  - "extra_tests/snippets/builtin_object.py:8:12         myobj       U       assert not myobj != myobj"
  - "extra_tests/snippets/builtin_object.py:8:21         myobj       U       assert not myobj != myobj"
  - "extra_tests/snippets/builtin_open.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_ord.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_pow.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_pow.py:29:5        powtest         U       def powtest(type):"
  - "extra_tests/snippets/builtin_pow.py:46:13       othertype       U       for othertype in (int,):"
  - "extra_tests/snippets/builtin_pow.py:50:27       othertype       U       jj = -othertype(j)"
  - "extra_tests/snippets/builtin_pow.py:53:9        othertype       U       for othertype in int, float:"
  - "extra_tests/snippets/builtin_pow.py:56:20       othertype       U       exp = -othertype(i / 10.0)"
  - "extra_tests/snippets/builtin_pow.py:64:5        asseq           U       asseq = assert_equal"
  - "extra_tests/snippets/builtin_pow.py:67:9        asseq           U       asseq = assert_almost_equal"
  - "extra_tests/snippets/builtin_pow.py:79:21       asseq           U       asseq("
  - "extra_tests/snippets/builtin_pow.py:85:10       powint          U       def test_powint():"
  - "extra_tests/snippets/builtin_pow.py:86:5        powtest         U       powtest(int)"
  - "extra_tests/snippets/builtin_pow.py:89:10       powfloat        U       def test_powfloat():"
  - "extra_tests/snippets/builtin_pow.py:90:5        powtest         U       powtest(float)"
  - "extra_tests/snippets/builtin_pow.py:144:9       fiveto          U       fiveto = float(5 ** n)"
  - "extra_tests/snippets/builtin_pow.py:145:24      fiveto          U       # For small n, fiveto will be odd. Eventually"
  - "extra_tests/snippets/builtin_pow.py:146:38      thereafer       U       mantissa bits, though, and thereafer fiveto will be even"
  - "extra_tests/snippets/builtin_pow.py:146:48      fiveto          U       though, and thereafer fiveto will be even."
  - "extra_tests/snippets/builtin_pow.py:147:20      fiveto          U       expected = fiveto % 2.0 and -1.0 or 1"
  - "extra_tests/snippets/builtin_pow.py:148:19      fiveto          U       eq(pow(a, fiveto), expected)"
  - "extra_tests/snippets/builtin_print.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_property.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_property.py:4:7            Fubar           U       class Fubar:"
  - "extra_tests/snippets/builtin_property.py:15:5           Fubar           U       f = Fubar()"
  - "extra_tests/snippets/builtin_property.py:19:13          Fubar           U       assert type(Fubar.foo) is property"
  - "extra_tests/snippets/builtin_range.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_reversed.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_round.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_set.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_set.py:384:27      aruguments      U       TODO: Assert that empty aruguments raises exception."
  - "extra_tests/snippets/builtin_slice.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_str_encode.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_str_encode.py:11:42        estás          U       UnicodeEncodeError, \"¿como estás?\".encode, \"ascii\")"
  - "extra_tests/snippets/builtin_str_encode.py:19:25        𝕐𝕥            U       round_trip(\"☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣\")"
  - "extra_tests/snippets/builtin_str_encode.py:20:19        ק𝔂t            U       round_trip(\"💀👌 ק𝔂tℍⓞ𝓷 ３ 🔥👤\")"
  - "extra_tests/snippets/builtin_str_subclass.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:19         רֵאשִ           U       hebrew_text = \"בְּרֵאשִׁית, בָּרָא אֱלֹהִים"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:36         אֱלֹהִים        U       בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, ו"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:50         הַשָּׁמַיִם     U       ָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:63         וְאֵת           U       ם, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:69         הָאָרֶץ         U       הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:47:32         מַיִם           U       hebrew_text[-20:50] == 'מַיִם, וְא'"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:49:35         רֵאשִ           U       text[:-30:1] == 'בְּרֵאשִׁית, בָּרָא אֱלֹהִים"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:49:52         אֱלֹהִים        U       בְּרֵאשִׁית, בָּרָא אֱלֹהִים, '"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:51:42         אֱלֹהִים        U       :-30] == 'ת, בָּרָא אֱלֹהִים, '"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:56:34         אםהֱאּ          U       hebrew_text[30:10:-3] == 'אםהֱאּ '"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:58:37         םיִהֹלֱא        U       text[30:10:-1] == 'א ,םיִהֹלֱא אָרָּב ,'"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:58:46         אָרּ            U       -1] == 'א ,םיִהֹלֱא אָרָּב ,'"
  - "extra_tests/snippets/builtin_str_unicode.py:26:40       abcij       U       encode(\"idna\") == b'xn--abcij-zb5f'"
  - "extra_tests/snippets/builtin_str_unicode.py:31:48       pythn       U       encode(\"idna\") == b\"xn--pythn-mua.org\""
  - "extra_tests/snippets/builtin_str_unicode.py:32:49       pythn       U       encode(\"idna\") == b\"xn--pythn-mua.org.\""
  - "extra_tests/snippets/builtin_str_unicode.py:35:14       pythn       U       assert b\"xn--pythn-mua.org\".decode(\"idna"
  - "extra_tests/snippets/builtin_str_unicode.py:36:14       pythn       U       assert b\"xn--pythn-mua.org.\".decode(\"idna"
  - "extra_tests/snippets/builtin_str.py:1:6         testutils           U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_str.py:37:21       xyxyxy              U       assert \"xy\" * 3 == \"xyxyxy\""
  - "extra_tests/snippets/builtin_str.py:41:21       xyxyxy              U       assert 3 * \"xy\" == \"xyxyxy\""
  - "extra_tests/snippets/builtin_str.py:96:10       koki                U       assert [\"koki\".center(i, \"|\") for"
  - "extra_tests/snippets/builtin_str.py:97:6        koki                U       \"koki\","
  - "extra_tests/snippets/builtin_str.py:98:6        koki                U       \"koki\","
  - "extra_tests/snippets/builtin_str.py:99:7        koki                U       \"|koki\","
  - "extra_tests/snippets/builtin_str.py:100:7       koki                U       \"|koki|\","
  - "extra_tests/snippets/builtin_str.py:172:41      keepends            U       nhallo\\nHallo'.splitlines(keepends=True) == ['hello\\n'"
  - "extra_tests/snippets/builtin_str.py:173:43      keepends            U       nHallo\\n'.splitlines(keepends=True) == ['hello\\n'"
  - "extra_tests/snippets/builtin_str.py:174:42      dhoho               U       x0cHallo\\x1cHELLO\\x1dhoho\\x1ehaha\\x85another\\u"
  - "extra_tests/snippets/builtin_str.py:174:50      ehaha               U       cHallo\\x1cHELLO\\x1dhoho\\x1ehaha\\x85another\\u2028yetanother"
  - "extra_tests/snippets/builtin_str.py:174:72      yetanother          U       ehaha\\x85another\\u2028yetanother\\u2029last\\r\\n.'.splitlines"
  - "extra_tests/snippets/builtin_str.py:174:153     hoho                U       'Hallo', 'HELLO', 'hoho', 'haha', 'another'"
  - "extra_tests/snippets/builtin_str.py:174:161     haha                U       , 'HELLO', 'hoho', 'haha', 'another', 'yetanother"
  - "extra_tests/snippets/builtin_str.py:174:180     yetanother          U       'haha', 'another', 'yetanother', 'last', '.']"
  - "extra_tests/snippets/builtin_str.py:175:42      dhoho               U       x0cHallo\\x1cHELLO\\x1dhoho\\x1ehaha\\x85another\\u"
  - "extra_tests/snippets/builtin_str.py:175:50      ehaha               U       cHallo\\x1cHELLO\\x1dhoho\\x1ehaha\\x85another\\u2028yetanother"
  - "extra_tests/snippets/builtin_str.py:175:72      yetanother          U       ehaha\\x85another\\u2028yetanother\\u2029last\\r\\n.'.splitlines"
  - "extra_tests/snippets/builtin_str.py:175:110     keepends            U       last\\r\\n.'.splitlines(keepends=True) == ['hello\\x0b"
  - "extra_tests/snippets/builtin_str.py:175:182     hoho                U       x1c', 'HELLO\\x1d', 'hoho\\x1e', 'haha\\x85', 'another"
  - "extra_tests/snippets/builtin_str.py:175:194     haha                U       HELLO\\x1d', 'hoho\\x1e', 'haha\\x85', 'another\\u202"
  - "extra_tests/snippets/builtin_str.py:175:223     yetanother          U       , 'another\\u2028', 'yetanother\\u2029', 'last\\r\\n',"
  - "extra_tests/snippets/builtin_str.py:340:7       isisprintable       U       # str.isisprintable"
  - "extra_tests/snippets/builtin_str.py:645:10      foobarfoo           U       s = 'foobarfoo'"
  - "extra_tests/snippets/builtin_str.py:646:12      foobarfoo           U       s_ref='foobarfoo'"
  - "extra_tests/snippets/builtin_str.py:656:28      afoo                U       assert s.removeprefix('afoo') == s_ref"
  - "extra_tests/snippets/builtin_str.py:661:15      foobarfoo           U       s_uc = '😱foobarfoo🖖'"
  - "extra_tests/snippets/builtin_str.py:662:19      foobarfoo           U       s_ref_uc = '😱foobarfoo🖖'"
  - "extra_tests/snippets/builtin_str.py:689:8       foobarfoo           U       s='foobarfoo'"
  - "extra_tests/snippets/builtin_str.py:701:28      fooa                U       assert s.removesuffix('fooa') == s_ref"
  - "extra_tests/snippets/builtin_super.py:4:26          thisclass       U       assert test_super_list.__thisclass__ == list"
  - "extra_tests/snippets/builtin_super.py:16:17         thisclass       U       assert superB.__thisclass__ == testB"
  - "extra_tests/snippets/builtin_thread.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_tuple.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_type_mro.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtin_type.py:2:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_type.py:114:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/builtin_type.py:269:9          clsmethod       U       def clsmethod(cls):"
  - "extra_tests/snippets/builtin_type.py:273:9          stmethod        U       def stmethod():"
  - "extra_tests/snippets/builtin_type.py:290:25         clsmethod       U       assert MyTypeWithMethod.clsmethod.__name__ == 'clsmethod"
  - "extra_tests/snippets/builtin_type.py:290:48         clsmethod       U       clsmethod.__name__ == 'clsmethod'"
  - "extra_tests/snippets/builtin_type.py:291:27         clsmethod       U       assert MyTypeWithMethod().clsmethod.__name__ == 'clsmethod"
  - "extra_tests/snippets/builtin_type.py:291:50         clsmethod       U       clsmethod.__name__ == 'clsmethod'"
  - "extra_tests/snippets/builtin_type.py:292:25         stmethod        U       assert MyTypeWithMethod.stmethod.__name__ == 'stmethod"
  - "extra_tests/snippets/builtin_type.py:292:47         stmethod        U       stmethod.__name__ == 'stmethod'"
  - "extra_tests/snippets/builtin_type.py:293:27         stmethod        U       assert MyTypeWithMethod().stmethod.__name__ == 'stmethod"
  - "extra_tests/snippets/builtin_type.py:293:49         stmethod        U       stmethod.__name__ == 'stmethod'"
  - "extra_tests/snippets/builtin_type.py:331:3          Regresesion     U       # Regresesion to"
  - "extra_tests/snippets/builtin_zip.py:1:1\tNo issues found"
  - "extra_tests/snippets/builtins_module.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/code_co_consts.py:1:1\tNo issues found"
  - "extra_tests/snippets/dir_main/__main__.py:1:1\tNo issues found"
  - "extra_tests/snippets/dir_module/__init__.py:1:1\tNo issues found"
  - "extra_tests/snippets/dir_module/dir_module_inner/__init__.py:1:1\tNo issues found"
  - "extra_tests/snippets/dir_module/relative.py:1:1\tNo issues found"
  - "extra_tests/snippets/example_fizzbuzz.py:1:1\tNo issues found"
  - "extra_tests/snippets/example_interactive.py:15:14       argcount            U       assert c2.co_argcount == 2"
  - "extra_tests/snippets/example_interactive.py:22:14       firstlineno         U       assert c2.co_firstlineno == 5, str(c2.co_firstlineno"
  - "extra_tests/snippets/example_interactive.py:22:42       firstlineno         U       firstlineno == 5, str(c2.co_firstlineno)"
  - "extra_tests/snippets/example_interactive.py:23:53       NEWLOCALS           U       int) # 'OPTIMIZED, NEWLOCALS, NOFREE'"
  - "extra_tests/snippets/example_interactive.py:23:64       NOFREE              U       OPTIMIZED, NEWLOCALS, NOFREE'"
  - "extra_tests/snippets/example_interactive.py:25:14       kwonlyargcount      U       assert c2.co_kwonlyargcount == 1, (c2.co_kwonlyargcount"
  - "extra_tests/snippets/example_interactive.py:25:42       kwonlyargcount      U       kwonlyargcount == 1, (c2.co_kwonlyargcount)"
  - "extra_tests/snippets/example_interactive.py:26:16       lnotab              U       # assert c2.co_lnotab == 0, c2.co_lnotab"
  - "extra_tests/snippets/example_interactive.py:26:35       lnotab              U       co_lnotab == 0, c2.co_lnotab # b'\\x00\\x01' # Line"
  - "extra_tests/snippets/example_interactive.py:29:16       nlocals             U       # assert c2.co_nlocals == 4, c2.co_nlocals"
  - "extra_tests/snippets/example_interactive.py:29:36       nlocals             U       nlocals == 4, c2.co_nlocals #"
  - "extra_tests/snippets/forbidden_instantiation.py:7:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/forbidden_instantiation.py:18:1        reviter         U       reviter_types = [list, dict"
  - "extra_tests/snippets/forbidden_instantiation.py:37:12       reviter         U       for typ in reviter_types:"
  - "extra_tests/snippets/frozen.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_file.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_mutual1.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_mutual2.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_name.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_star.py:1:1\tNo issues found"
  - "extra_tests/snippets/import_target.py:1:1\tNo issues found"
  - "extra_tests/snippets/import.py:68:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/index_overflow.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.1.1.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.1.2.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.1.3.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.1.4.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.1.6.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.2.1.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.2.10.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.2.3.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.2.4.py:1:1\tNo issues found"
  - "extra_tests/snippets/intro/3.1.2.5.py:1:9           unununium       U       assert 'unununium' == 3 * 'un' + 'ium"
  - "extra_tests/snippets/intro/3.1.2.6.py:1:26          thon    U       assert 'Python' == 'Py' 'thon'"
  - "extra_tests/snippets/jit.py:1:1\tNo issues found"
  - "extra_tests/snippets/name.py:1:1\tNo issues found"
  - "extra_tests/snippets/non_utf8.txt:1:1\tNo issues found"
  - "extra_tests/snippets/operator_arithmetic.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/operator_cast.py:1:1\tNo issues found"
  - "extra_tests/snippets/operator_comparison.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/operator_div.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/operator_inplace.py:1:1\tNo issues found"
  - "extra_tests/snippets/operator_membership.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/protocol_callable.py:1:1\tNo issues found"
  - "extra_tests/snippets/protocol_index_bad.py:3:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/protocol_index_bad.py:15:9         setslice        U       def run_setslice():"
  - "extra_tests/snippets/protocol_index_bad.py:23:9         delslice        U       def run_delslice():"
  - "extra_tests/snippets/protocol_index_bad.py:31:9         setslice        U       run_setslice()"
  - "extra_tests/snippets/protocol_index_bad.py:32:9         delslice        U       run_delslice()"
  - "extra_tests/snippets/protocol_iterable.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/protocol_iternext.py:1:1\tNo issues found"
  - "extra_tests/snippets/recursion.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/scope_lambda.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_abc_number.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_abc.py:3:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_array.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_array.py:7:11           tobytes         U       assert a1.tobytes() == b\"\\x00\\x01\\x02"
  - "extra_tests/snippets/stdlib_array.py:87:21          tobytes         U       b = bytearray(a.tobytes())"
  - "extra_tests/snippets/stdlib_array.py:116:3          teset           U       # teset array.__contains__"
  - "extra_tests/snippets/stdlib_ast.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_binascii.py:2:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_binascii.py:5:3         hexlify         U       # hexlify tests"
  - "extra_tests/snippets/stdlib_binascii.py:6:14        hexlify         U       h = binascii.hexlify"
  - "extra_tests/snippets/stdlib_binascii.py:18:3        unhexlify       U       # unhexlify tests"
  - "extra_tests/snippets/stdlib_binascii.py:19:15       unhexlify       U       uh = binascii.unhexlify"
  - "extra_tests/snippets/stdlib_binascii.py:47:33       Ghvbg           U       equal(dec_b64(b\"UnVzdFB5dGhvbg==\\n\"), b\"RustPython"
  - "extra_tests/snippets/stdlib_binascii.py:50:18       𝕐𝕥            U       \"☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣\".encode(),"
  - "extra_tests/snippets/stdlib_collections_deque.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_collections_deque.py:7:5            klass           U       klass = type(iter(deque()"
  - "extra_tests/snippets/stdlib_collections_deque.py:9:9            klass           U       d = klass(deque(s))"
  - "extra_tests/snippets/stdlib_collections_deque.py:17:5           klass           U       klass = type(iter(deque()"
  - "extra_tests/snippets/stdlib_collections_deque.py:22:17          klass           U       d = klass(deque(s), i)"
  - "extra_tests/snippets/stdlib_collections_deque.py:28:17          klass           U       d = klass(deque(s), i)"
  - "extra_tests/snippets/stdlib_collections.py:7:3          appendleft      U       d.appendleft(3)"
  - "extra_tests/snippets/stdlib_csv.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_datetime.py:21:6        testutils               U       from testutils import ("
  - "extra_tests/snippets/stdlib_datetime.py:27:1        OTHERSTUFF              U       OTHERSTUFF = (10, 34.5, \"abc\","
  - "extra_tests/snippets/stdlib_datetime.py:73:38       dstoffset               U       self, offset, name, dstoffset=42):"
  - "extra_tests/snippets/stdlib_datetime.py:76:23       dstoffset               U       if isinstance(dstoffset, int):"
  - "extra_tests/snippets/stdlib_datetime.py:77:13       dstoffset               U       dstoffset = timedelta(minutes"
  - "extra_tests/snippets/stdlib_datetime.py:77:43       dstoffset               U       = timedelta(minutes=dstoffset)"
  - "extra_tests/snippets/stdlib_datetime.py:80:16       dstoffset               U       self.__dstoffset = dstoffset"
  - "extra_tests/snippets/stdlib_datetime.py:134:3       unsupport               U       # unsupport format in strptime returns"
  - "extra_tests/snippets/stdlib_datetime.py:152:14      ACDT                    U       self.ACDT = timezone(timedelta"
  - "extra_tests/snippets/stdlib_datetime.py:152:53      ACDT                    U       timedelta(hours=9.5), 'ACDT')"
  - "extra_tests/snippets/stdlib_datetime.py:157:25      ACDT                    U       for tz in [self.ACDT, self.EST, timezone"
  - "extra_tests/snippets/stdlib_datetime.py:163:25      ACDT                    U       for tz in [self.ACDT, self.EST, timezone"
  - "extra_tests/snippets/stdlib_datetime.py:166:13      tzrep                   U       tzrep = repr(tz)"
  - "extra_tests/snippets/stdlib_datetime.py:167:35      tzrep                   U       assert_equal(tz, eval(tzrep))"
  - "extra_tests/snippets/stdlib_datetime.py:228:35      ACDT                    U       tz in [self.EST, self.ACDT, Eastern]:"
  - "extra_tests/snippets/stdlib_datetime.py:229:13      utctime                 U       utctime = self.DT.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:230:32      utctime                 U       local = tz.fromutc(utctime)"
  - "extra_tests/snippets/stdlib_datetime.py:231:34      utctime                 U       assert_equal(local - utctime, tz.utcoffset(local"
  - "extra_tests/snippets/stdlib_datetime.py:257:17      pickler                 U       for pickler, unpickler, proto in"
  - "extra_tests/snippets/stdlib_datetime.py:257:26      unpickler               U       for pickler, unpickler, proto in pickle_choices"
  - "extra_tests/snippets/stdlib_datetime.py:258:27      unpickler               U       tz_copy = unpickler.loads(pickler.dumps"
  - "extra_tests/snippets/stdlib_datetime.py:258:43      pickler                 U       copy = unpickler.loads(pickler.dumps(tz, proto))"
  - "extra_tests/snippets/stdlib_datetime.py:261:13      pickler                 U       for pickler, unpickler, proto in"
  - "extra_tests/snippets/stdlib_datetime.py:261:22      unpickler               U       for pickler, unpickler, proto in pickle_choices"
  - "extra_tests/snippets/stdlib_datetime.py:262:23      unpickler               U       tz_copy = unpickler.loads(pickler.dumps"
  - "extra_tests/snippets/stdlib_datetime.py:262:39      pickler                 U       copy = unpickler.loads(pickler.dumps(tz, proto))"
  - "extra_tests/snippets/stdlib_datetime.py:289:31      theclass                U       Subclasses must define 'theclass', and theclass(1, 1"
  - "extra_tests/snippets/stdlib_datetime.py:289:46      theclass                U       define 'theclass', and theclass(1, 1, 1) must be a"
  - "extra_tests/snippets/stdlib_datetime.py:292:5       theclass                U       for theclass in timedelta, date,"
  - "extra_tests/snippets/stdlib_datetime.py:294:10      theclass                U       me = theclass(1, 1, 1)"
  - "extra_tests/snippets/stdlib_datetime.py:305:10      theclass                U       me = theclass(1, 1, 1)"
  - "extra_tests/snippets/stdlib_datetime.py:509:13      pickler                 U       for pickler, unpickler, proto in"
  - "extra_tests/snippets/stdlib_datetime.py:509:22      unpickler               U       for pickler, unpickler, proto in pickle_choices"
  - "extra_tests/snippets/stdlib_datetime.py:539:23      OTHERSTUFF              U       for badarg in OTHERSTUFF:"
  - "extra_tests/snippets/stdlib_datetime.py:726:9       zerotd                  U       zerotd = timedelta(0)"
  - "extra_tests/snippets/stdlib_datetime.py:727:54      zerotd                  U       eroDivisionError, truediv, t, zerotd)"
  - "extra_tests/snippets/stdlib_datetime.py:728:55      zerotd                  U       roDivisionError, floordiv, t, zerotd)"
  - "extra_tests/snippets/stdlib_datetime.py:744:9       zerotd                  U       zerotd = timedelta(0)"
  - "extra_tests/snippets/stdlib_datetime.py:745:50      zerotd                  U       ZeroDivisionError, mod, t, zerotd)"
  - "extra_tests/snippets/stdlib_datetime.py:841:13      fromord                 U       fromord = self.theclass.fromordinal"
  - "extra_tests/snippets/stdlib_datetime.py:842:29      fromord                 U       assert_equal(d, fromord)"
  - "extra_tests/snippets/stdlib_datetime.py:843:24      fromord                 U       if hasattr(fromord, \"hour\"):"
  - "extra_tests/snippets/stdlib_datetime.py:846:30      fromord                 U       assert_equal(fromord.hour, 0)"
  - "extra_tests/snippets/stdlib_datetime.py:847:30      fromord                 U       assert_equal(fromord.minute, 0)"
  - "extra_tests/snippets/stdlib_datetime.py:870:24      maxday                  U       for month, maxday in zip(range(1, 13)"
  - "extra_tests/snippets/stdlib_datetime.py:872:21      maxday                  U       maxday += 1"
  - "extra_tests/snippets/stdlib_datetime.py:873:37      maxday                  U       for day in range(1, maxday+1):"
  - "extra_tests/snippets/stdlib_datetime.py:882:9       aord                    U       aord = a.toordinal()"
  - "extra_tests/snippets/stdlib_datetime.py:883:27      aord                    U       b = a.fromordinal(aord)"
  - "extra_tests/snippets/stdlib_datetime.py:886:57      aord                    U       lambda: a.fromordinal(aord - 1))"
  - "extra_tests/snippets/stdlib_datetime.py:889:37      aord                    U       equal(b.toordinal(), aord + 1)"
  - "extra_tests/snippets/stdlib_datetime.py:890:51      aord                    U       theclass.fromordinal(aord + 1))"
  - "extra_tests/snippets/stdlib_datetime.py:1043:13     todayagain              U       todayagain = self.theclass.fromtimestamp"
  - "extra_tests/snippets/stdlib_datetime.py:1044:25     todayagain              U       if today == todayagain:"
  - "extra_tests/snippets/stdlib_datetime.py:1060:21     todayagain              U       if today != todayagain:"
  - "extra_tests/snippets/stdlib_datetime.py:1061:36     todayagain              U       self.assertAlmostEqual(todayagain, today,"
  - "extra_tests/snippets/stdlib_datetime.py:1158:20     excercise (exercise)    U       #at least, excercise them to make sure that"
  - "extra_tests/snippets/stdlib_datetime.py:1212:9      justasbig               U       justasbig = timedelta(0, 0, n"
  - "extra_tests/snippets/stdlib_datetime.py:1213:27     justasbig               U       assert_equal(big, justasbig)"
  - "extra_tests/snippets/stdlib_datetime.py:1275:23     OTHERSTUFF              U       for badarg in OTHERSTUFF:"
  - "extra_tests/snippets/stdlib_datetime.py:1365:19     newval                  U       for name, newval in ((\"year\", 2),"
  - "extra_tests/snippets/stdlib_datetime.py:1368:13     newargs                 U       newargs = args[:]"
  - "extra_tests/snippets/stdlib_datetime.py:1369:13     newargs                 U       newargs[i] = newval"
  - "extra_tests/snippets/stdlib_datetime.py:1369:26     newval                  U       newargs[i] = newval"
  - "extra_tests/snippets/stdlib_datetime.py:1370:29     newargs                 U       expected = cls(*newargs)"
  - "extra_tests/snippets/stdlib_datetime.py:1371:41     newval                  U       base.replace(**{name: newval})"
  - "extra_tests/snippets/stdlib_datetime.py:1391:17     newmeth                 U       def newmeth(self, start):"
  - "extra_tests/snippets/stdlib_datetime.py:1403:26     newmeth                 U       assert_equal(dt2.newmeth(-7), dt1.year + dt1"
  - "extra_tests/snippets/stdlib_datetime.py:1750:13     newargs                 U       newargs = args[:]"
  - "extra_tests/snippets/stdlib_datetime.py:1751:13     newargs                 U       newargs[i] = args[i] + 1"
  - "extra_tests/snippets/stdlib_datetime.py:1975:19     newval                  U       for name, newval in ((\"year\", 2),"
  - "extra_tests/snippets/stdlib_datetime.py:1983:26     newval                  U       newargs[i] = newval"
  - "extra_tests/snippets/stdlib_datetime.py:2015:9      alsobog                 U       alsobog = AlsoBogus()"
  - "extra_tests/snippets/stdlib_datetime.py:2016:50     alsobog                 U       ValueError, dt.astimezone, alsobog) # also naive"
  - "extra_tests/snippets/stdlib_datetime.py:2030:17     newmeth                 U       def newmeth(self, start):"
  - "extra_tests/snippets/stdlib_datetime.py:2042:26     newmeth                 U       assert_equal(dt2.newmeth(-7), dt1.year + dt1"
  - "extra_tests/snippets/stdlib_datetime.py:2118:23     OTHERSTUFF              U       for badarg in OTHERSTUFF:"
  - "extra_tests/snippets/stdlib_datetime.py:2334:17     newmeth                 U       def newmeth(self, start):"
  - "extra_tests/snippets/stdlib_datetime.py:2356:23     atribute (attribute)    U       theclass as a class atribute, and theclass(1, 1,"
  - "extra_tests/snippets/stdlib_datetime.py:2413:17     aofs                    U       aofs = abs(offset)"
  - "extra_tests/snippets/stdlib_datetime.py:2414:31     aofs                    U       h, m = divmod(aofs, 60)"
  - "extra_tests/snippets/stdlib_datetime.py:2438:43     aname                   U       tzname(self, dt): return \"aname\""
  - "extra_tests/snippets/stdlib_datetime.py:2442:35     aname                   U       assert_equal(t.tzname(), \"aname\")"
  - "extra_tests/snippets/stdlib_datetime.py:2446:46     aname                   U       utcoffset(self, dt): return \"aname\""
  - "extra_tests/snippets/stdlib_datetime.py:2473:55     comparands              U       gets ignored if the comparands have"
  - "extra_tests/snippets/stdlib_datetime.py:2495:50     uctoffset               U       re different members, uctoffset is not ignored."
  - "extra_tests/snippets/stdlib_datetime.py:2496:59     depedent                U       actually have an operand-depedent offset,"
  - "extra_tests/snippets/stdlib_datetime.py:2605:15     Badtzname               U       class Badtzname(tzinfo):"
  - "extra_tests/snippets/stdlib_datetime.py:2608:34     Badtzname               U       time(2, 3, 4, tzinfo=Badtzname())"
  - "extra_tests/snippets/stdlib_datetime.py:2614:13     Badtzname               U       Badtzname.tz = '\\ud800'"
  - "extra_tests/snippets/stdlib_datetime.py:2805:17     afer                    U       # Equal afer adjustment."
  - "extra_tests/snippets/stdlib_datetime.py:2845:23     uctoffset               U       # Try a bogus uctoffset."
  - "extra_tests/snippets/stdlib_datetime.py:2938:9      timeaware               U       timeaware = now.time().replace"
  - "extra_tests/snippets/stdlib_datetime.py:2939:9      nowaware                U       nowaware = self.theclass.combine"
  - "extra_tests/snippets/stdlib_datetime.py:2939:54     timeaware               U       combine(now.date(), timeaware)"
  - "extra_tests/snippets/stdlib_datetime.py:2940:23     nowaware                U       self.assertIs(nowaware.tzinfo, tz55)"
  - "extra_tests/snippets/stdlib_datetime.py:2941:22     nowaware                U       assert_equal(nowaware.timetz(), timeaware"
  - "extra_tests/snippets/stdlib_datetime.py:2941:41     timeaware               U       equal(nowaware.timetz(), timeaware)"
  - "extra_tests/snippets/stdlib_datetime.py:2944:48     nowaware                U       TypeError, lambda: now - nowaware)"
  - "extra_tests/snippets/stdlib_datetime.py:2945:42     nowaware                U       raises(TypeError, lambda: nowaware - now)"
  - "extra_tests/snippets/stdlib_datetime.py:2958:9      nowawareplus            U       nowawareplus = nowaware + delta"
  - "extra_tests/snippets/stdlib_datetime.py:2960:9      nowawareplus            U       nowawareplus2 = delta + nowaware"
  - "extra_tests/snippets/stdlib_datetime.py:2961:23     nowawareplus            U       self.assertIs(nowawareplus2.tzinfo, tz55)"
  - "extra_tests/snippets/stdlib_datetime.py:2962:22     nowawareplus            U       assert_equal(nowawareplus, nowawareplus2)"
  - "extra_tests/snippets/stdlib_datetime.py:2962:36     nowawareplus            U       equal(nowawareplus, nowawareplus2)"
  - "extra_tests/snippets/stdlib_datetime.py:2973:59     randomtimezone          U       randrange(-1439, 1440), \"randomtimezone\")"
  - "extra_tests/snippets/stdlib_datetime.py:3022:13     weirdtz                 U       for weirdtz in [FixedOffset(timedelta"
  - "extra_tests/snippets/stdlib_datetime.py:3022:71     weirdtz                 U       hours=15, minutes=58), \"weirdtz\", 0),"
  - "extra_tests/snippets/stdlib_datetime.py:3023:68     weirdtz                 U       hours=15, minutes=58), \"weirdtz\"),]:"
  - "extra_tests/snippets/stdlib_datetime.py:3025:36     weirdtz                 U       now = datetime.now(weirdtz)"
  - "extra_tests/snippets/stdlib_datetime.py:3026:43     weirdtz                 U       assertIs(now.tzinfo, weirdtz)"
  - "extra_tests/snippets/stdlib_datetime.py:3061:9      utcdatetime             U       utcdatetime = datetime.utcfromtimestamp"
  - "extra_tests/snippets/stdlib_datetime.py:3068:20     utcdatetime             U       expected = utcdatetime + utcoffset"
  - "extra_tests/snippets/stdlib_datetime.py:3098:32     dstvalue                U       def __init__(self, dstvalue):"
  - "extra_tests/snippets/stdlib_datetime.py:3099:31     dstvalue                U       if isinstance(dstvalue, int):"
  - "extra_tests/snippets/stdlib_datetime.py:3100:21     dstvalue                U       dstvalue = timedelta(minutes"
  - "extra_tests/snippets/stdlib_datetime.py:3100:50     dstvalue                U       = timedelta(minutes=dstvalue)"
  - "extra_tests/snippets/stdlib_datetime.py:3101:22     dstvalue                U       self.dstvalue = dstvalue"
  - "extra_tests/snippets/stdlib_datetime.py:3144:15     UOFS                    U       class UOFS(DST):"
  - "extra_tests/snippets/stdlib_datetime.py:3145:32     uofs                    U       def __init__(self, uofs, dofs=None):"
  - "extra_tests/snippets/stdlib_datetime.py:3145:38     dofs                    U       _init__(self, uofs, dofs=None):"
  - "extra_tests/snippets/stdlib_datetime.py:3146:36     dofs                    U       DST.__init__(self, dofs)"
  - "extra_tests/snippets/stdlib_datetime.py:3147:22     uofs                    U       self.uofs = timedelta(minutes"
  - "extra_tests/snippets/stdlib_datetime.py:3147:47     uofs                    U       = timedelta(minutes=uofs)"
  - "extra_tests/snippets/stdlib_datetime.py:3149:29     uofs                    U       return self.uofs"
  - "extra_tests/snippets/stdlib_datetime.py:3152:53     UOFS                    U       20, 30, 40, tzinfo=UOFS(-53, dstvalue))"
  - "extra_tests/snippets/stdlib_datetime.py:3173:15     NOFS                    U       class NOFS(DST):"
  - "extra_tests/snippets/stdlib_datetime.py:3176:49     NOFS                    U       20, 30, 40, tzinfo=NOFS())"
  - "extra_tests/snippets/stdlib_datetime.py:3181:15     BOFS                    U       class BOFS(DST):"
  - "extra_tests/snippets/stdlib_datetime.py:3184:49     BOFS                    U       20, 30, 40, tzinfo=BOFS())"
  - "extra_tests/snippets/stdlib_datetime.py:3197:52     UOFS                    U       1, 0, 0, 37, tzinfo=UOFS(1439))"
  - "extra_tests/snippets/stdlib_datetime.py:3201:64     UOFS                    U       37, 999999, tzinfo=UOFS(-1439))"
  - "extra_tests/snippets/stdlib_datetime.py:3221:17     timestr                 U       timestr = '04:05:59' + (us and"
  - "extra_tests/snippets/stdlib_datetime.py:3222:17     ofsstr                  U       ofsstr = ofs is not None and"
  - "extra_tests/snippets/stdlib_datetime.py:3223:17     tailstr                 U       tailstr = timestr + ofsstr"
  - "extra_tests/snippets/stdlib_datetime.py:3223:27     timestr                 U       tailstr = timestr + ofsstr"
  - "extra_tests/snippets/stdlib_datetime.py:3223:37     ofsstr                  U       tailstr = timestr + ofsstr"
  - "extra_tests/snippets/stdlib_datetime.py:3225:51     tailstr                 U       iso, datestr + 'T' + tailstr)"
  - "extra_tests/snippets/stdlib_datetime.py:3227:64     tailstr                 U       k'), datestr + 'k' + tailstr)"
  - "extra_tests/snippets/stdlib_datetime.py:3228:74     tailstr                 U       datestr + '\\u1234' + tailstr)"
  - "extra_tests/snippets/stdlib_datetime.py:3229:54     tailstr                 U       d), datestr + ' ' + tailstr)"
  - "extra_tests/snippets/stdlib_datetime.py:3272:9      fnone                   U       fnone = FixedOffset(None,"
  - "extra_tests/snippets/stdlib_datetime.py:3279:50     fnone                   U       ValueError, dt.astimezone, fnone)"
  - "extra_tests/snippets/stdlib_datetime.py:3342:53     utcoffsets              U       members are distinct, utcoffsets aren't"
  - "extra_tests/snippets/stdlib_datetime.py:3392:23     datetimetz              U       def test_subclass_datetimetz(self):"
  - "extra_tests/snippets/stdlib_datetime.py:3431:1      DSTSTART                U       DSTSTART = datetime(1, 4, 1,"
  - "extra_tests/snippets/stdlib_datetime.py:3436:1      DSTEND                  U       DSTEND = datetime(1, 10, 2"
  - "extra_tests/snippets/stdlib_datetime.py:3440:31     reprname                U       init__(self, hours, reprname, stdname, dstname):"
  - "extra_tests/snippets/stdlib_datetime.py:3440:50     dstname                 U       reprname, stdname, dstname):"
  - "extra_tests/snippets/stdlib_datetime.py:3441:14     stdoffset               U       self.stdoffset = timedelta(hours=hours"
  - "extra_tests/snippets/stdlib_datetime.py:3442:14     reprname                U       self.reprname = reprname"
  - "extra_tests/snippets/stdlib_datetime.py:3442:25     reprname                U       self.reprname = reprname"
  - "extra_tests/snippets/stdlib_datetime.py:3444:14     dstname                 U       self.dstname = dstname"
  - "extra_tests/snippets/stdlib_datetime.py:3444:24     dstname                 U       self.dstname = dstname"
  - "extra_tests/snippets/stdlib_datetime.py:3447:21     reprname                U       return self.reprname"
  - "extra_tests/snippets/stdlib_datetime.py:3451:25     dstname                 U       return self.dstname"
  - "extra_tests/snippets/stdlib_datetime.py:3456:21     stdoffset               U       return self.stdoffset + self.dst(dt)"
  - "extra_tests/snippets/stdlib_datetime.py:3466:42     DSTSTART                U       first_sunday_on_or_after(DSTSTART.replace(year=dt.year"
  - "extra_tests/snippets/stdlib_datetime.py:3470:40     DSTEND                  U       first_sunday_on_or_after(DSTEND.replace(year=dt.year"
  - "extra_tests/snippets/stdlib_datetime.py:3491:5      dston                   U       dston = datetime(2002, 4,"
  - "extra_tests/snippets/stdlib_datetime.py:3492:5      dstoff                  U       dstoff = datetime(2002, 10"
  - "extra_tests/snippets/stdlib_datetime.py:3497:9      checkinside             U       def checkinside(self, dt, tz, utc, dston"
  - "extra_tests/snippets/stdlib_datetime.py:3497:40     dston                   U       heckinside(self, dt, tz, utc, dston, dstoff):"
  - "extra_tests/snippets/stdlib_datetime.py:3497:47     dstoff                  U       dt, tz, utc, dston, dstoff):"
  - "extra_tests/snippets/stdlib_datetime.py:3503:9      asutc                   U       asutc = dt.astimezone(utc"
  - "extra_tests/snippets/stdlib_datetime.py:3504:26     asutc                   U       there_and_back = asutc.astimezone(tz)"
  - "extra_tests/snippets/stdlib_datetime.py:3514:25     dston                   U       if dt.date() == dston.date() and dt.hour"
  - "extra_tests/snippets/stdlib_datetime.py:3536:9      nexthour                U       nexthour_utc = asutc + HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3536:24     asutc                   U       nexthour_utc = asutc + HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3537:9      nexthour                U       nexthour_tz = nexthour_utc.astimezone"
  - "extra_tests/snippets/stdlib_datetime.py:3537:23     nexthour                U       nexthour_tz = nexthour_utc.astimezone(tz)"
  - "extra_tests/snippets/stdlib_datetime.py:3538:25     dstoff                  U       if dt.date() == dstoff.date() and dt.hour"
  - "extra_tests/snippets/stdlib_datetime.py:3541:26     nexthour                U       assert_equal(nexthour_tz, dt.replace(hour"
  - "extra_tests/snippets/stdlib_datetime.py:3542:13     nexthour                U       nexthour_utc += HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3549:9      checkoutside            U       def checkoutside(self, dt, tz, utc):"
  - "extra_tests/snippets/stdlib_datetime.py:3556:9      asutc                   U       asutc = dt.astimezone(utc"
  - "extra_tests/snippets/stdlib_datetime.py:3557:26     asutc                   U       there_and_back = asutc.astimezone(tz)"
  - "extra_tests/snippets/stdlib_datetime.py:3561:9      dston                   U       dston = self.dston.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3561:22     dston                   U       dston = self.dston.replace(tzinfo=tz)"
  - "extra_tests/snippets/stdlib_datetime.py:3567:9      dstoff                  U       dstoff = self.dstoff.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3567:23     dstoff                  U       dstoff = self.dstoff.replace(tzinfo=tz)"
  - "extra_tests/snippets/stdlib_datetime.py:3574:18     checkinside             U       self.checkinside(dston, tz, utc, dston"
  - "extra_tests/snippets/stdlib_datetime.py:3576:22     checkinside             U       self.checkinside(during, tz, utc, dston"
  - "extra_tests/snippets/stdlib_datetime.py:3578:18     checkoutside            U       self.checkoutside(dstoff, tz, utc)"
  - "extra_tests/snippets/stdlib_datetime.py:3580:22     checkoutside            U       self.checkoutside(outside, tz, utc)"
  - "extra_tests/snippets/stdlib_datetime.py:3583:46     endcases                U       name of this test, the endcases are excruciating."
  - "extra_tests/snippets/stdlib_datetime.py:3608:9      fourback                U       fourback = self.dston - timedelta"
  - "extra_tests/snippets/stdlib_datetime.py:3609:9      ninewest                U       ninewest = FixedOffset(-9*60"
  - "extra_tests/snippets/stdlib_datetime.py:3610:9      fourback                U       fourback = fourback.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:3610:20     fourback                U       fourback = fourback.replace(tzinfo=ninewest"
  - "extra_tests/snippets/stdlib_datetime.py:3610:44     ninewest                U       fourback.replace(tzinfo=ninewest)"
  - "extra_tests/snippets/stdlib_datetime.py:3619:15     fourback                U       got = fourback.astimezone(Eastern)"
  - "extra_tests/snippets/stdlib_datetime.py:3624:9      sixutc                  U       sixutc = self.dston.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3629:15     sixutc                  U       got = sixutc.astimezone(Eastern)"
  - "extra_tests/snippets/stdlib_datetime.py:3646:17     asutcbase               U       asutcbase = asutc.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:3647:21     tzhour                  U       for tzhour in (0, 1, 1, 2):"
  - "extra_tests/snippets/stdlib_datetime.py:3648:21     expectedbase            U       expectedbase = self.dstoff.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3648:61     tzhour                  U       dstoff.replace(hour=tzhour)"
  - "extra_tests/snippets/stdlib_datetime.py:3650:36     expectedbase            U       expected = expectedbase.replace(minute=minute"
  - "extra_tests/snippets/stdlib_datetime.py:3651:33     asutcbase               U       asutc = asutcbase.replace(minute=minute"
  - "extra_tests/snippets/stdlib_datetime.py:3652:25     astz                    U       astz = asutc.astimezone(tz"
  - "extra_tests/snippets/stdlib_datetime.py:3653:38     astz                    U       assert_equal(astz.replace(tzinfo=None"
  - "extra_tests/snippets/stdlib_datetime.py:3654:21     asutcbase               U       asutcbase += HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3667:15     notok                   U       class notok(ok):"
  - "extra_tests/snippets/stdlib_datetime.py:3669:51     notok                   U       ValueError, now.astimezone, notok())"
  - "extra_tests/snippets/stdlib_datetime.py:3675:22     notok                   U       class tricky_notok(ok):"
  - "extra_tests/snippets/stdlib_datetime.py:3682:57     notok                   U       dt.astimezone, tricky_notok())"
  - "extra_tests/snippets/stdlib_datetime.py:3697:34     stdoffset               U       return dt + self.stdoffset"
  - "extra_tests/snippets/stdlib_datetime.py:3698:62     FEDT                    U       FEastern\", \"FEST\", \"FEDT\")"
  - "extra_tests/snippets/stdlib_datetime.py:3706:9      fstart                  U       fstart = start.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:3714:24     fstart                  U       expected = fstart + FEastern.stdoffset"
  - "extra_tests/snippets/stdlib_datetime.py:3714:42     stdoffset               U       = fstart + FEastern.stdoffset"
  - "extra_tests/snippets/stdlib_datetime.py:3715:36     fstart                  U       got = FEastern.fromutc(fstart)"
  - "extra_tests/snippets/stdlib_datetime.py:3719:19     fstart                  U       got = fstart.replace(tzinfo=utc_real"
  - "extra_tests/snippets/stdlib_datetime.py:3723:13     fstart                  U       fstart += HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3733:42     stdoffset               U       = fstart + FEastern.stdoffset"
  - "extra_tests/snippets/stdlib_datetime.py:3768:3      Neverthelss             U       # Neverthelss, comparison should work"
  - "extra_tests/snippets/stdlib_dir_module.py:1:6           testutils       U       from testutils import assert_equal"
  - "extra_tests/snippets/stdlib_dis.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_functools.py:2:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_hashlib.py:34:30        fubar       U       hashlib.new(\"blake2s\", b\"fubar\")"
  - "extra_tests/snippets/stdlib_imghdr.py:15:21         rast            U       ('python.ras', 'rast'),"
  - "extra_tests/snippets/stdlib_imghdr.py:23:57         imghdrdata      U       dirname(__file__), 'imghdrdata')"
  - "extra_tests/snippets/stdlib_imp.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_io_bytesio.py:49:37         accpets     U       that the write method accpets bytearray"
  - "extra_tests/snippets/stdlib_io_stringio.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_io.py:3:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_io.py:31:11         closefd         U       assert fi.closefd"
  - "extra_tests/snippets/stdlib_io.py:38:2          nres            U       nres = fio.read(1)"
  - "extra_tests/snippets/stdlib_io.py:39:13         nres            U       assert len(nres) == 1"
  - "extra_tests/snippets/stdlib_io.py:40:2          nres            U       nres = fio.read(2)"
  - "extra_tests/snippets/stdlib_io.py:41:13         nres            U       assert len(nres) == 2"
  - "extra_tests/snippets/stdlib_itertools.py:3:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_itertools.py:54:24          evaluted        U       iterables are lazily evaluted"
  - "extra_tests/snippets/stdlib_itertools.py:185:5          underten        U       def underten(x):"
  - "extra_tests/snippets/stdlib_itertools.py:229:9          underten        U       it = tw(underten, [1, 3, 5, 20, 2, 4"
  - "extra_tests/snippets/stdlib_itertools.py:230:33         citertools      U       pickle.dumps(it, 0) == b'citertools\\ntakewhile\\np0\\n(c_"
  - "extra_tests/snippets/stdlib_itertools.py:230:71         nunderten       U       ntakewhile\\np0\\n(c__main__\\nunderten\\np1\\nc__builtin__\\niter"
  - "extra_tests/snippets/stdlib_itertools.py:230:171        nbtp            U       naI8\\natp4\\nRp5\\nI0\\nbtp6\\nRp7\\nI0\\nb.'"
  - "extra_tests/snippets/stdlib_itertools.py:231:33         citertools      U       pickle.dumps(it, 1) == b'citertools\\ntakewhile\\nq\\x00(c"
  - "extra_tests/snippets/stdlib_itertools.py:231:72         nunderten       U       ntakewhile\\nq\\x00(c__main__\\nunderten\\nq\\x01c__builtin__\\niter"
  - "extra_tests/snippets/stdlib_itertools.py:232:41         citertools      U       it, 2) == b'\\x80\\x02citertools\\ntakewhile\\nq\\x00c_"
  - "extra_tests/snippets/stdlib_itertools.py:232:79         nunderten       U       ntakewhile\\nq\\x00c__main__\\nunderten\\nq\\x01c__builtin__\\niter"
  - "extra_tests/snippets/stdlib_itertools.py:233:41         citertools      U       it, 3) == b'\\x80\\x03citertools\\ntakewhile\\nq\\x00c_"
  - "extra_tests/snippets/stdlib_itertools.py:233:79         nunderten       U       ntakewhile\\nq\\x00c__main__\\nunderten\\nq\\x01cbuiltins\\niter"
  - "extra_tests/snippets/stdlib_itertools.py:233:95         cbuiltins       U       main__\\nunderten\\nq\\x01cbuiltins\\niter\\nq\\x02]q\\x03(K"
  - "extra_tests/snippets/stdlib_itertools.py:234:148        underten        U       __main__\\x94\\x8c\\x08underten\\x94\\x93\\x94\\x8c\\x08builtins"
  - "extra_tests/snippets/stdlib_itertools.py:235:148        underten        U       __main__\\x94\\x8c\\x08underten\\x94\\x93\\x94\\x8c\\x08builtins"
  - "extra_tests/snippets/stdlib_itertools.py:243:33         citertools      U       pickle.dumps(it, 0) == b'citertools\\ntakewhile\\np0\\n(c_"
  - "extra_tests/snippets/stdlib_itertools.py:243:71         nunderten       U       ntakewhile\\np0\\n(c__main__\\nunderten\\np1\\nc__builtin__\\niter"
  - "extra_tests/snippets/stdlib_itertools.py:243:171        nbtp            U       naI8\\natp4\\nRp5\\nI4\\nbtp6\\nRp7\\nI1\\nb.'"
  - "extra_tests/snippets/stdlib_itertools.py:246:95         cbuiltins       U       main__\\nunderten\\nq\\x01cbuiltins\\niter\\nq\\x02]q\\x03(K"
  - "extra_tests/snippets/stdlib_itertools.py:247:148        underten        U       __main__\\x94\\x8c\\x08underten\\x94\\x93\\x94\\x8c\\x08builtins"
  - "extra_tests/snippets/stdlib_itertools.py:325:171        nbtp            U       naI8\\natp4\\nRp5\\nI0\\nbtp6\\nRp7\\nI0\\nb.'"
  - "extra_tests/snippets/stdlib_itertools.py:328:95         cbuiltins       U       main__\\nunderten\\nq\\x01cbuiltins\\niter\\nq\\x02]q\\x03(K"
  - "extra_tests/snippets/stdlib_itertools.py:332:171        nbtp            U       naI8\\natp4\\nRp5\\nI4\\nbtp6\\nRp7\\nI1\\nb.'"
  - "extra_tests/snippets/stdlib_itertools.py:335:95         cbuiltins       U       main__\\nunderten\\nq\\x01cbuiltins\\niter\\nq\\x02]q\\x03(K"
  - "extra_tests/snippets/stdlib_itertools.py:367:67         ACEF            U       1,0,1,1])) == list(\"ACEF\")"
  - "extra_tests/snippets/stdlib_itertools.py:372:77         ACEF            U       ,\"\",1,9])) == list(\"ACEF\")"
  - "extra_tests/snippets/stdlib_itertools.py:537:58         fillvalue       U       range(3), [9, 8, 7, 99], fillvalue='d')) \\"
  - "extra_tests/snippets/stdlib_itertools.py:547:50         fillvalue       U       'c'], range(1, 5), fillvalue=100))) \\"
  - "extra_tests/snippets/stdlib_json.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_json.py:65:33       jsons           U       reject non-str keys in jsons"
  - "extra_tests/snippets/stdlib_logging.py:10:16        WOOT    U       logging.error('WOOT')"
  - "extra_tests/snippets/stdlib_logging.py:15:10        WOOT    U       assert 'WOOT' in res"
  - "extra_tests/snippets/stdlib_marshal.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_math.py:2:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_math.py:6:1         NINF            U       NINF = float('-inf')"
  - "extra_tests/snippets/stdlib_math.py:11:9        Conversible     U       # class Conversible():"
  - "extra_tests/snippets/stdlib_math.py:16:39       Conversible     U       1.1111) == math.log(Conversible())"
  - "extra_tests/snippets/stdlib_math.py:18:3        roundings       U       # roundings"
  - "extra_tests/snippets/stdlib_math.py:146:15      NINF            U       assertIsClose(NINF, NINF)"
  - "extra_tests/snippets/stdlib_math.py:146:21      NINF            U       assertIsClose(NINF, NINF)"
  - "extra_tests/snippets/stdlib_math.py:147:15      NINF            U       assertIsClose(NINF, NINF, abs_tol=0.0)"
  - "extra_tests/snippets/stdlib_math.py:147:21      NINF            U       assertIsClose(NINF, NINF, abs_tol=0.0)"
  - "extra_tests/snippets/stdlib_math.py:149:12      ninf            U       # test_inf_ninf_nan(self): these should"
  - "extra_tests/snippets/stdlib_operator.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_os.py:6:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_os.py:121:14        BOYA            U       CONTENT3 = b\"BOYA\""
  - "extra_tests/snippets/stdlib_os.py:290:48        getpwall        U       pw_uid for u in pwd.getpwall()]"
  - "extra_tests/snippets/stdlib_os.py:388:51        setresuid       U       PermissionError, lambda: os.setresuid(42, 42, 42))"
  - "extra_tests/snippets/stdlib_os.py:519:63        VDISABLE        U       \"PC_MAX_INPUT\", \"PC_VDISABLE\"]:"
  - "extra_tests/snippets/stdlib_random.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_re.py:5:11          ello            U       needle = 'ello'"
  - "extra_tests/snippets/stdlib_re.py:18:17         abcabca         U       s = p.sub('x', 'abcabca')"
  - "extra_tests/snippets/stdlib_re.py:20:14         xcxca           U       assert s == 'xcxca'"
  - "extra_tests/snippets/stdlib_re.py:34:11         bigcharset      U       # test op bigcharset"
  - "extra_tests/snippets/stdlib_re.py:40:35         abcdddd         U       compile('abcd*').match('abcdddd').group() == 'abcdddd"
  - "extra_tests/snippets/stdlib_re.py:40:57         abcdddd         U       abcdddd').group() == 'abcdddd'"
  - "extra_tests/snippets/stdlib_re.py:42:36         abce            U       compile('abcd*e').match('abce').group() == 'abce'"
  - "extra_tests/snippets/stdlib_re.py:42:55         abce            U       'abce').group() == 'abce'"
  - "extra_tests/snippets/stdlib_re.py:43:37         abcddeee        U       compile('abcd*e+').match('abcddeee').group() == 'abcddeee"
  - "extra_tests/snippets/stdlib_re.py:43:60         abcddeee        U       abcddeee').group() == 'abcddeee'"
  - "extra_tests/snippets/stdlib_re.py:44:35         abcddd          U       compile('abcd+').match('abcddd').group() == 'abcddd"
  - "extra_tests/snippets/stdlib_re.py:44:56         abcddd          U       abcddd').group() == 'abcddd'"
  - "extra_tests/snippets/stdlib_re.py:52:41         abcdcdcd        U       a)(b)(cd)*').match('abcdcdcd').group(0, 1, 2, 3)"
  - "extra_tests/snippets/stdlib_re.py:52:75         abcdcdcd        U       group(0, 1, 2, 3) == ('abcdcdcd', 'a', 'b', 'cd')"
  - "extra_tests/snippets/stdlib_re.py:64:41         Xtest           U       ', 'X', 'test') == 'Xtest'"
  - "extra_tests/snippets/stdlib_select.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_select.py:26:1          recvr           U       recvr = socket.socket()"
  - "extra_tests/snippets/stdlib_select.py:28:1          recvr           U       recvr.bind((\"127.0.0.1\","
  - "extra_tests/snippets/stdlib_select.py:30:1          recvr           U       recvr.listen()"
  - "extra_tests/snippets/stdlib_select.py:32:1          recvr           U       recvr.settimeout(10.0)"
  - "extra_tests/snippets/stdlib_select.py:34:1          sendr           U       sendr = socket.socket()"
  - "extra_tests/snippets/stdlib_select.py:36:1          sendr           U       sendr.connect((\"127.0.0.1"
  - "extra_tests/snippets/stdlib_select.py:37:1          sendr           U       sendr.send(b\"aaaa\")"
  - "extra_tests/snippets/stdlib_select.py:39:1          rres            U       rres, wres, xres = select"
  - "extra_tests/snippets/stdlib_select.py:39:35         recvr           U       xres = select.select([recvr], [sendr], [])"
  - "extra_tests/snippets/stdlib_select.py:39:44         sendr           U       select.select([recvr], [sendr], [])"
  - "extra_tests/snippets/stdlib_select.py:42:21         rres            U       assert recvr in rres"
  - "extra_tests/snippets/stdlib_select.py:44:8          sendr           U       assert sendr in wres"
  - "extra_tests/snippets/stdlib_signal.py:4:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_socket.py:4:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_socket.py:164:13        gaierror        U       (socket.gaierror, \"gaierror\"),"
  - "extra_tests/snippets/stdlib_socket.py:164:24        gaierror        U       (socket.gaierror, \"gaierror\"),"
  - "extra_tests/snippets/stdlib_sqlite.py:7:4           executescript       U       cx.executescript(\";\")"
  - "extra_tests/snippets/stdlib_sqlite.py:9:4           executemany         U       cx.executemany(\"INSERT INTO foo(key"
  - "extra_tests/snippets/stdlib_sqlite.py:15:4          executescript       U       cx.executescript(\"\"\""
  - "extra_tests/snippets/stdlib_sqlite.py:21:7          Aggr                U       class AggrSum:"
  - "extra_tests/snippets/stdlib_sqlite.py:31:22         mysum               U       cx.create_aggregate(\"mysum\", 1, AggrSum)"
  - "extra_tests/snippets/stdlib_sqlite.py:31:33         Aggr                U       aggregate(\"mysum\", 1, AggrSum)"
  - "extra_tests/snippets/stdlib_sqlite.py:32:21         mysum               U       cur.execute(\"select mysum(key) from foo\")"
  - "extra_tests/snippets/stdlib_sqlite.py:38:7          Aggr                U       class AggrText:"
  - "extra_tests/snippets/stdlib_sqlite.py:47:22         aggtxt              U       cx.create_aggregate(\"aggtxt\", 1, AggrText)"
  - "extra_tests/snippets/stdlib_sqlite.py:47:34         Aggr                U       aggregate(\"aggtxt\", 1, AggrText)"
  - "extra_tests/snippets/stdlib_sqlite.py:48:21         aggtxt              U       cur.execute(\"select aggtxt(key) from foo\")"
  - "extra_tests/snippets/stdlib_string.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_struct.py:2:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_struct.py:45:15         calcsize        U       assert struct.calcsize(\"B\") == 1"
  - "extra_tests/snippets/stdlib_struct.py:46:17         calcsize        U       # assert struct.calcsize(\"<L4B\") == 12"
  - "extra_tests/snippets/stdlib_subprocess.py:6:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_subprocess.py:18:36         unixy           U       make work in a non-unixy environment (something"
  - "extra_tests/snippets/stdlib_sys_getframe.py:4:20        getframe    U       locals_dict = sys._getframe().f_locals"
  - "extra_tests/snippets/stdlib_sys_getframe.py:11:17       getframe    U       assert sys._getframe().f_locals is not locals"
  - "extra_tests/snippets/stdlib_sys_getframe.py:12:17       getframe    U       assert sys._getframe().f_locals['x'] =="
  - "extra_tests/snippets/stdlib_sys_getframe.py:13:17       getframe    U       assert sys._getframe(1).f_locals['foo']"
  - "extra_tests/snippets/stdlib_sys_getframe.py:19:21       getframe    U       assert sys._getframe().f_locals['self']"
  - "extra_tests/snippets/stdlib_sys.py:5:6          testutils                       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_sys.py:22:12        getfilesystemencoding           U       assert sys.getfilesystemencoding() == 'utf-8'"
  - "extra_tests/snippets/stdlib_sys.py:23:12        getfilesystemencodeerrors       U       assert sys.getfilesystemencodeerrors().startswith('surrogate"
  - "extra_tests/snippets/stdlib_sys.py:31:12        maxunicode                      U       assert sys.maxunicode == 1114111"
  - "extra_tests/snippets/stdlib_sys.py:69:5         setrecursionlimit               U       sys.setrecursionlimit(200)"
  - "extra_tests/snippets/stdlib_sys.py:76:18        getwindowsversion               U       winver = sys.getwindowsversion()"
  - "extra_tests/snippets/stdlib_sys.py:92:74        compatiblity (compatibility)    U       correctly, this'll break on compatiblity mode or a build without"
  - "extra_tests/snippets/stdlib_sys.py:112:12       PYTHONSAFEPATH                  U       # Test the PYTHONSAFEPATH environment variable"
  - "extra_tests/snippets/stdlib_sys.py:115:10       PYTHONSAFEPATH                  U       env.pop('PYTHONSAFEPATH', None)"
  - "extra_tests/snippets/stdlib_sys.py:124:6        PYTHONSAFEPATH                  U       env['PYTHONSAFEPATH'] = '1'"
  - "extra_tests/snippets/stdlib_termios.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_time.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_traceback.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_types.py:3:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_warnings.py:1:1\tNo issues found"
  - "extra_tests/snippets/stdlib_weakref.py:2:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_xdrlib.py:1:25          superceeded (superseded)    U       This probably will be superceeded by the python unittests"
  - "extra_tests/snippets/stdlib_xdrlib.py:1:51          unittests                   U       superceeded by the python unittests when that works."
  - "extra_tests/snippets/stdlib_zlib.py:2:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/stdlib_zlib.py:36:38       amet            U       Lorem ipsum dolor sit amet\", \"utf-8\")"
  - "extra_tests/snippets/stdlib_zlib.py:39:54       amet            U       xffLorem ipsum dolor sit amet\\x83\\xd5\\t\\xc5\","
  - "extra_tests/snippets/syntax_assignment.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_async_comprehension.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_async.py:8:16           Entrada     U       print(\"Entrada\")"
  - "extra_tests/snippets/syntax_attr.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_call_nested.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_class.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_class.py:42:9           fubar           U       def fubar(cls, x):"
  - "extra_tests/snippets/syntax_class.py:48:9           kungfu          U       def kungfu(x):"
  - "extra_tests/snippets/syntax_class.py:59:5           fubar           U       bar.fubar(2)"
  - "extra_tests/snippets/syntax_class.py:60:5           fubar           U       Bar.fubar(2)"
  - "extra_tests/snippets/syntax_class.py:62:5           kungfu          U       bar.kungfu(3)"
  - "extra_tests/snippets/syntax_class.py:63:5           kungfu          U       Bar.kungfu(3)"
  - "extra_tests/snippets/syntax_class.py:229:20         dbca            U       assert D().f() == 'dbca', \"Mro resolution using"
  - "extra_tests/snippets/syntax_class.py:269:17         mcls            U       def __new__(mcls):"
  - "extra_tests/snippets/syntax_class.py:270:21         mcls            U       assert type(mcls.__new__).__name__ ="
  - "extra_tests/snippets/syntax_class.py:271:21         mcls            U       assert type(mcls.mro).__name__ == 'method"
  - "extra_tests/snippets/syntax_comma.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_comment.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_comprehension.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_decimal.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_decorator.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_del.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_del.py:30:5         mytest          U       mytest = MyTest()"
  - "extra_tests/snippets/syntax_del.py:31:9         mytest          U       del mytest"
  - "extra_tests/snippets/syntax_for.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_forbidden_name.py:1:6           testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_fstring.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_fstring.py:16:14        tersing         U       # lets start tersing"
  - "extra_tests/snippets/syntax_fstring.py:22:24        barfoo          U       assert f\"{foo}foo\" == 'barfoo'"
  - "extra_tests/snippets/syntax_fstring.py:23:27        foobarfoo       U       assert f\"foo{foo}foo\" == 'foobarfoo'"
  - "extra_tests/snippets/syntax_fstring.py:29:36        barbarfoo       U       f\"{foo}\" 'foo' == 'barbarfoo'"
  - "extra_tests/snippets/syntax_fstring.py:97:32        unicodes        U       ascii representation of unicodes:"
  - "extra_tests/snippets/syntax_fstring.py:144:1        tenπ            U       tenπ = 31.4"
  - "extra_tests/snippets/syntax_fstring.py:145:21       tenπ            U       self.assertEqual(f'{tenπ=:.2f}', 'tenπ=31.40"
  - "extra_tests/snippets/syntax_fstring.py:145:35       tenπ            U       assertEqual(f'{tenπ=:.2f}', 'tenπ=31.40')"
  - "extra_tests/snippets/syntax_function_args.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_function_args.py:37:13          kwdefaults      U       assert va.__kwdefaults__ is None"
  - "extra_tests/snippets/syntax_function_args.py:65:21          kwdefaults      U       kw_defaults = va3.__kwdefaults__"
  - "extra_tests/snippets/syntax_function_args.py:66:16          kwdefaults      U       # assert va3.__kwdefaults__ == {'b': 2, 'c':"
  - "extra_tests/snippets/syntax_function_args.py:76:5           fubar           U       def fubar(x, y, obj=None):"
  - "extra_tests/snippets/syntax_function_args.py:82:1           fubar           U       fubar(obj=6, *rest)"
  - "extra_tests/snippets/syntax_function.py:1:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_function2.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_function2.py:23:5           fubar           U       def fubar():"
  - "extra_tests/snippets/syntax_function2.py:26:8           fubar           U       assert fubar() == (42,)"
  - "extra_tests/snippets/syntax_function2.py:56:5           revdocstr       U       def revdocstr(f):"
  - "extra_tests/snippets/syntax_function2.py:62:2           revdocstr       U       @revdocstr"
  - "extra_tests/snippets/syntax_function2.py:66:23          abcw            U       assert f5.__doc__ == 'abcw00t', f5.__doc__"
  - "extra_tests/snippets/syntax_funky.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_generator.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_generator.py:124:13         coro            U       def wrapper(coro):"
  - "extra_tests/snippets/syntax_generator.py:125:16         coro            U       yield from coro"
  - "extra_tests/snippets/syntax_generator.py:171:13         yieldfrom       U       assert g.gi_yieldfrom is it"
  - "extra_tests/snippets/syntax_generator.py:173:13         yieldfrom       U       assert g.gi_yieldfrom is None"
  - "extra_tests/snippets/syntax_global_nonlocal.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_global_nonlocal.py:3:28         funkyness       U       global and nonlocal funkyness"
  - "extra_tests/snippets/syntax_if_expression.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_if.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_indent.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_invalid.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_literal.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_metaclass.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_nested_control_flow.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_non_utf8.py:3:6         testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_short_circuit_bool.py:14:14         booled      U       self.booled = False"
  - "extra_tests/snippets/syntax_short_circuit_bool.py:17:25         booled      U       assert not self.booled"
  - "extra_tests/snippets/syntax_short_circuit_bool.py:18:14         booled      U       self.booled = True"
  - "extra_tests/snippets/syntax_short_circuit_evaluations.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_slice.py:1:6            testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_statement.py:4:15           seperated (separated)       U       # small ones, seperated by ';':"
  - "extra_tests/snippets/syntax_try.py:1:6          testutils       U       from testutils import assert_raises"
  - "extra_tests/snippets/syntax_try.py:35:12        kablam          U       print('kablam')"
  - "extra_tests/snippets/syntax_try.py:49:12        kablam          U       print('kablam')"
  - "extra_tests/snippets/syntax_try.py:62:12        kablam          U       print('kablam')"
  - "extra_tests/snippets/syntax_try.py:73:16        kablam          U       print('kablam')"
  - "extra_tests/snippets/syntax_try.py:82:5         fubar           U       fubar"
  - "extra_tests/snippets/syntax_type_hint.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_while.py:1:1\tNo issues found"
  - "extra_tests/snippets/syntax_with.py:5:16        Entrada     U       print('Entrada')"
  - "extra_tests/snippets/syntax_with.py:30:16       Ajuus       U       print('Ajuus')"
  - "extra_tests/snippets/test_threading.py:1:1\tNo issues found"
  - "extra_tests/snippets/testutils.py:18:14         failmsg         U       self.failmsg = msg"
  - "extra_tests/snippets/testutils.py:25:13         failmsg         U       failmsg = self.failmsg or \\"
  - "extra_tests/snippets/testutils.py:25:28         failmsg         U       failmsg = self.failmsg or \\"
  - "extra_tests/snippets/testutils.py:27:27         failmsg         U       assert False, failmsg"
  - "extra_tests/snippets/testutils.py:68:28         klass           U       assert_isinstance(obj, klass):"
  - "extra_tests/snippets/testutils.py:69:43         klass           U       lambda: isinstance(obj, klass), ['isisntance(', _typed"
  - "extra_tests/snippets/testutils.py:69:53         isisntance      U       isinstance(obj, klass), ['isisntance(', _typed(obj), ','"
  - "extra_tests/snippets/testutils.py:69:85         klass           U       , _typed(obj), ',', klass, ')'])"
  - "extra_tests/snippets/xfail_assert.py:1:1\tNo issues found"
  - "extra_tests/test_snippets.py:27:5           pushd           U       def pushd(path):"
  - "extra_tests/test_snippets.py:54:41          jobserver       U       = 'info,cargo=error,jobserver=error'"
  - "jit/Cargo.toml:11:1         autotests       U       autotests = false"
  - "jit/Cargo.toml:17:1         thiserror       U       thiserror = { workspace = true"
  - "jit/Cargo.toml:19:1         cranelift       U       cranelift = \"0.88.0\""
  - "jit/Cargo.toml:20:1         cranelift       U       cranelift-jit = \"0.88.0\""
  - "jit/Cargo.toml:21:1         cranelift       U       cranelift-module = \"0.88.0\""
  - "jit/src/instructions.rs:1:5         cranelift       U       use cranelift::prelude::*;"
  - "jit/src/instructions.rs:110:44      cranelift       U       declare_var(var, ty.to_cranelift());"
  - "jit/src/instructions.rs:125:46      fcmp            U       self.builder.ins().fcmp(FloatCC::NotEqual, val"
  - "jit/src/instructions.rs:126:39      bint            U       Ok(self.builder.ins().bint(types::I8, val))"
  - "jit/src/instructions.rs:129:47      iconst          U       self.builder.ins().iconst(types::I64, 0);"
  - "jit/src/instructions.rs:131:39      bint            U       Ok(self.builder.ins().bint(types::I8, val))"
  - "jit/src/instructions.rs:134:53      iconst          U       Ok(self.builder.ins().iconst(types::I8, 0)),"
  - "jit/src/instructions.rs:192:46      iconst          U       self.builder.ins().iconst("
  - "jit/src/instructions.rs:203:46      iconst          U       self.builder.ins().iconst(types::I8, value as"
  - "jit/src/instructions.rs:224:43      cranelift       U       AbiParam::new(ty.to_cranelift()));"
  - "jit/src/instructions.rs:256:36      brnz            U       self.builder.ins().brnz(val, then_block, &["
  - "jit/src/instructions.rs:332:65      uextend         U       self.builder.ins().uextend(types::I64, a),"
  - "jit/src/instructions.rs:337:65      uextend         U       self.builder.ins().uextend(types::I64, b),"
  - "jit/src/instructions.rs:351:47      bint            U       TODO: Remove this `bint` in cranelift 0.90 as"
  - "jit/src/instructions.rs:351:56      cranelift       U       Remove this `bint` in cranelift 0.90 as icmp now returns"
  - "jit/src/instructions.rs:353:69      bint            U       Bool(self.builder.ins().bint(types::I8, val)));"
  - "jit/src/instructions.rs:366:54      fcmp            U       self.builder.ins().fcmp(cond, a, b);"
  - "jit/src/instructions.rs:367:47      bint            U       TODO: Remove this `bint` in cranelift 0.90 as"
  - "jit/src/instructions.rs:367:56      cranelift       U       Remove this `bint` in cranelift 0.90 as fcmp now returns"
  - "jit/src/instructions.rs:367:74      fcmp            U       in cranelift 0.90 as fcmp now returns i8"
  - "jit/src/instructions.rs:381:55      iconst          U       self.builder.ins().iconst(types::I64, 0);"
  - "jit/src/instructions.rs:411:68      ifcout          U       self.builder.ins().iadd_ifcout(a, b);"
  - "jit/src/instructions.rs:412:44      trapif          U       self.builder.ins().trapif("
  - "jit/src/instructions.rs:435:55      ushr            U       self.builder.ins().ushr_imm(b, 63);"
  - "jit/src/instructions.rs:436:44      trapnz          U       self.builder.ins().trapnz("
  - "jit/src/instructions.rs:442:48      ishl            U       self.builder.ins().ishl(a, b)"
  - "jit/src/instructions.rs:444:48      sshr            U       self.builder.ins().sshr(a, b)"
  - "jit/src/instructions.rs:460:60      fadd            U       Float(self.builder.ins().fadd(a, b))"
  - "jit/src/instructions.rs:463:60      fsub            U       Float(self.builder.ins().fsub(a, b))"
  - "jit/src/instructions.rs:466:60      fmul            U       Float(self.builder.ins().fmul(a, b))"
  - "jit/src/instructions.rs:469:60      fdiv            U       Float(self.builder.ins().fdiv(a, b))"
  - "jit/src/instructions.rs:487:68      fadd            U       Float(self.builder.ins().fadd(operand_one, operand"
  - "jit/src/instructions.rs:490:68      fsub            U       Float(self.builder.ins().fsub(operand_one, operand"
  - "jit/src/instructions.rs:493:68      fmul            U       Float(self.builder.ins().fmul(operand_one, operand"
  - "jit/src/instructions.rs:496:68      fdiv            U       Float(self.builder.ins().fdiv(operand_one, operand"
  - "jit/src/instructions.rs:516:79      ifbout          U       t special-case isub_ifbout"
  - "jit/src/instructions.rs:517:55      ifbout          U       self.builder.ins().isub_ifbout(a, b);"
  - "jit/src/instructions.rs:520:17      trapif          U       // .trapif(IntCC::Overflow, carry"
  - "jit/src/instructions.rs:522:40      ineg            U       self.builder.ins().ineg(b);"
  - "jit/src/instructions.rs:523:52      ifcout          U       self.builder.ins().iadd_ifcout(a, neg_b);"
  - "jit/src/instructions.rs:526:14      trapif          U       .trapif(IntCC::Overflow, carry"
  - "jit/src/lib.rs:3:5          cranelift       U       use cranelift::prelude::*;"
  - "jit/src/lib.rs:4:5          cranelift       U       use cranelift_jit::{JITBuilder, JITModule"
  - "jit/src/lib.rs:5:5          cranelift       U       use cranelift_module::{FuncId, Linkage"
  - "jit/src/lib.rs:10:17        thiserror       U       #[derive(Debug, thiserror::Error)]"
  - "jit/src/lib.rs:13:32        jitted          U       error(\"function can't be jitted\")]"
  - "jit/src/lib.rs:18:5         Cranelift       U       CraneliftError(#[from] ModuleError"
  - "jit/src/lib.rs:21:17        thiserror       U       #[derive(Debug, thiserror::Error, Eq, PartialEq"
  - "jit/src/lib.rs:38:39        cranelift       U       builder = JITBuilder::new(cranelift_module::default_libcall"
  - "jit/src/lib.rs:38:65        libcall         U       cranelift_module::default_libcall_names())"
  - "jit/src/lib.rs:58:44        cranelift       U       AbiParam::new(arg.to_cranelift()));"
  - "jit/src/lib.rs:285:23       wasmtime        U       TODO: confirm with wasmtime ppl that it's not unsound"
  - "jit/tests/bool_tests.rs:1:1\tNo issues found"
  - "jit/tests/common.rs:68:17       oparg       U       let mut oparg_state = OpArgState:"
  - "jit/tests/common.rs:70:38       oparg       U       instruction, arg) = oparg_state.get(word);"
  - "jit/tests/float_tests.rs:1:1\tNo issues found"
  - "jit/tests/int_tests.rs:1:1\tNo issues found"
  - "jit/tests/lib.rs:1:1\tNo issues found"
  - "jit/tests/misc_tests.rs:1:1\tNo issues found"
  - "jit/tests/none_tests.rs:1:1\tNo issues found"
  - "LICENSE:1:1\tNo issues found"
  - "LICENSE-logo:36:7           creativecommons     U       wiki.creativecommons.org/Considerations_for"
  - "LICENSE-logo:53:7           creativecommons     U       wiki.creativecommons.org/Considerations_for"
  - "LICENSE-logo:139:15         sublicensable       U       non-sublicensable, non-exclusive, irrevocable"
  - "LICENSE-logo:205:34         waivable            U       under any voluntary or waivable statutory or compulsory"
  - "LICENSE-logo:386:1          creativecommons     U       creativecommons.org/policies, Creative"
  - "LICENSE-logo:395:38         creativecommons     U       may be contacted at creativecommons.org."
  - "pdc.sh:26:90        Dwarnings           U       cargo clippy --all -- -Dwarnings\" \"cargo test --all\""
  - "pdc.sh:33:1         RUSTPYTHONPATH      U       RUSTPYTHONPATH=Lib"
  - "pdc.sh:34:8         RUSTPYTHONPATH      U       export RUSTPYTHONPATH"
  - "pylib/build.rs:15:44        RUSTPYTHONPATH      U       expect(\"failed to resolve RUSTPYTHONPATH during build time\")"
  - "pylib/Cargo.toml:2:20           pylib       U       name = \"rustpython-pylib\""
  - "pylib/src/lib.rs:1:1\tNo issues found"
  - "README.md:16:4          WAPM                U       [![WAPM package](https://wapm"
  - "README.md:53:38         RUSTPYTHONPATH      U       windows users, please set `RUSTPYTHONPATH` environment variable"
  - "README.md:54:58         RUSTPYTHONPATH      U       C:\\RustPython`, set `RUSTPYTHONPATH` as `C:\\RustPython\\Lib"
  - "README.md:97:8          wasmer              U       Run by wasmer"
  - "README.md:100:1         wasmer              U       wasmer run --dir `pwd` -- target"
  - "README.md:103:8         wapm                U       Run by wapm"
  - "README.md:106:3         wapm                U       $ wapm install rustpython"
  - "README.md:107:3         wapm                U       $ wapm run rustpython"
  - "README.md:168:4         FOSDEM              U       - [FOSDEM 2019](https://www.youtube"
  - "README.md:176:4         Greptime            U       - [GreptimeDB](https://github.com"
  - "README.md:177:4         pyckitup            U       - [pyckitup](https://github.com"
  - "README.md:245:2         windelbouwman       U       [windelbouwman/rspython](https://github"
  - "README.md:245:16        rspython            U       [windelbouwman/rspython](https://github.com"
  - "README.md:246:2         shinglyu            U       [shinglyu/RustPython](https:/"
  - "rust-toolchain.toml:1:1\tNo issues found"
  - "rustfmt.toml:1:1\tNo issues found"
  - "scripts/bench.sh:1:21           nbody       U       for BENCH in \"int\" \"nbody\" \"fannkuch\" \"scimark"
  - "scripts/bench.sh:1:29           fannkuch    U       BENCH in \"int\" \"nbody\" \"fannkuch\" \"scimark\"; do"
  - "scripts/bench.sh:1:40           scimark     U       \"nbody\" \"fannkuch\" \"scimark\"; do"
  - "scripts/bench.sh:3:75           pyperf      U       BENCH}_cpython${CPYTHON}.pyperf\""
  - "scripts/bench.sh:9:107          pyperf      U       rustpython_${RUSTPYTHON}.pyperf\""
  - "scripts/cargo-llvm-cov.py:1:1\tNo issues found"
  - "scripts/install-openssl.ps1:1:12        Actix       U       # From the Actix Web windows workflow"
  - "scripts/install-openssl.ps1:3:1         vcpkg       U       vcpkg integrate install"
  - "scripts/install-openssl.ps1:4:1         vcpkg       U       vcpkg install openssl:x64"
  - "scripts/install-openssl.ps1:5:14        vcpkg       U       Copy-Item C:\\vcpkg\\installed\\x64-windows"
  - "scripts/install-openssl.ps1:5:71        vcpkg       U       libcrypto-1_1-x64.dll C:\\vcpkg\\installed\\x64-windows"
  - "scripts/install-openssl.ps1:6:14        vcpkg       U       Copy-Item C:\\vcpkg\\installed\\x64-windows"
  - "scripts/redox/comment-cargo.sh:1:1\tNo issues found"
  - "scripts/redox/install.sh:1:1\tNo issues found"
  - "scripts/redox/recipe.sh:3:1         CARGOFLAGS          U       CARGOFLAGS=--no-default-features"
  - "scripts/redox/recipe.sh:4:18        RUSTPYTHONPATH      U       export BUILDTIME_RUSTPYTHONPATH=/lib/rustpython/"
  - "scripts/redox/run-redoxer.sh:12:11          RUSTPYTHONPATH      U       BUILDTIME_RUSTPYTHONPATH=/root/rustpython-lib"
  - "scripts/redox/run-redoxer.sh:12:47          redoxer             U       root/rustpython-lib redoxer build --release"
  - "scripts/redox/run-redoxer.sh:17:1           redoxer             U       redoxer exec -f \"$DIR\" -- ."
  - "scripts/redox/uncomment-cargo.sh:1:1\tNo issues found"
  - "scripts/release-wapm.sh:6:14        WAPM                U       FEATURES_FOR_WAPM=(stdlib zlib)"
  - "scripts/release-wapm.sh:8:18        RUSTPYTHONPATH      U       export BUILDTIME_RUSTPYTHONPATH=\"/lib/rustpython\""
  - "scripts/release-wapm.sh:10:93       WAPM                U       features=\"${FEATURES_FOR_WAPM[*]}\""
  - "scripts/release-wapm.sh:12:1        wapm                U       wapm publish"
  - "src/interpreter.rs:88:34        pylib               U       add_frozen(rustpython_pylib::FROZEN_STDLIB);"
  - "src/interpreter.rs:95:41        pylib               U       new_pyobj(rustpython_pylib::LIB_PATH.to_owned("
  - "src/interpreter.rs:110:22       RUSTPYTHONPATH      U       // BUILDTIME_RUSTPYTHONPATH should be set when distributi"
  - "src/interpreter.rs:111:53       RUSTPYTHONPATH      U       option_env!(\"BUILDTIME_RUSTPYTHONPATH\") {"
  - "src/interpreter.rs:117:41       pylib               U       feature = \"rustpython-pylib\")]"
  - "src/interpreter.rs:120:34       pylib               U       .push(rustpython_pylib::LIB_PATH.to_owned("
  - "src/lib.rs:12:35        mymod               U       vm.add_native_module(\"mymod\".to_owned(), Box::new"
  - "src/lib.rs:12:63        mymod               U       to_owned(), Box::new(mymod::make_module));"
  - "src/lib.rs:13:81        otherthing          U       pass\", module_name = \"otherthing\"));"
  - "src/lib.rs:18:9         mymod               U       //! mod mymod {"
  - "src/lib.rs:122:13       getpip              U       let get_getpip = rustpython_vm::py"
  - "src/lib.rs:131:9        getpip              U       let getpip_code = vm.run_code_obj"
  - "src/lib.rs:131:59       getpip              U       vm.ctx.new_code(get_getpip), scope.clone())?;"
  - "src/lib.rs:132:9        getpip              U       let getpip_code: rustpython_vm"
  - "src/lib.rs:132:58       getpip              U       builtins::PyStrRef = getpip_code"
  - "src/lib.rs:181:79       RUSTPYTHONPATH      U       Lib directory to your RUSTPYTHONPATH \\"
  - "src/lib.rs:230:9        Speedscope          U       Speedscope,"
  - "src/lib.rs:237:15       speedscope          U       Some(\"speedscope\") | None => ProfileFormat"
  - "src/lib.rs:237:53       Speedscope          U       None => ProfileFormat::Speedscope,"
  - "src/lib.rs:248:24       Speedscope          U       ProfileFormat::Speedscope => \"flamescope.json"
  - "src/lib.rs:248:39       flamescope          U       ProfileFormat::Speedscope => \"flamescope.json\".as_ref(),"
  - "src/lib.rs:262:24       Speedscope          U       ProfileFormat::Speedscope => flamescope::dump"
  - "src/lib.rs:262:38       flamescope          U       ProfileFormat::Speedscope => flamescope::dump(profile_output"
  - "src/main.rs:1:1\tNo issues found"
  - "src/settings.rs:135:46      pycs                            U       name(\"check-hash-based-pycs\")"
  - "src/settings.rs:136:41      pycs                            U       long(\"check-hash-based-pycs\")"
  - "src/settings.rs:152:66      PYTHONUNBUFFERED                U       effect on stdin; also PYTHONUNBUFFERED=x\","
  - "src/settings.rs:187:46      RUSTPYTHONPATH                  U       list.extend(get_paths(\"RUSTPYTHONPATH\"));"
  - "src/settings.rs:221:49      PYTHONNOUSERSITE                U       environment && env::var_os(\"PYTHONNOUSERSITE\").is_some())"
  - "src/settings.rs:231:49      PYTHONDONTWRITEBYTECODE         U       environment && env::var_os(\"PYTHONDONTWRITEBYTECODE\").is_some())"
  - "src/settings.rs:235:44      PYTHONINTMAXSTRDIGITS           U       environment && env::var_os(\"PYTHONINTMAXSTRDIGITS\").is_some() {"
  - "src/settings.rs:236:55      PYTHONINTMAXSTRDIGITS           U       digits = match env::var(\"PYTHONINTMAXSTRDIGITS\").unwrap().parse()"
  - "src/settings.rs:239:77      PYTHONINTMAXSTRDIGITS           U       int_max_str_digits: PYTHONINTMAXSTRDIGITS: invalid limit; must"
  - "src/settings.rs:239:173     preinitialized                  U       nPython runtime state: preinitialized\");"
  - "src/settings.rs:246:49      PYTHONSAFEPATH                  U       environment && env::var_os(\"PYTHONSAFEPATH\").is_some())"
  - "src/settings.rs:252:37      pycs                            U       of(\"check-hash-based-pycs\")"
  - "src/settings.rs:254:46      pycs                            U       settings.check_hash_pycs_mode);"
  - "src/settings.rs:259:18      xoptions                        U       settings.xoptions.extend(xopts.map(|s"
  - "src/settings.rs:277:177     preinitialized                  U       nPython runtime state: preinitialized\");"
  - "src/settings.rs:287:49      PYTHONWARNDEFAULTENCODING       U       environment && env::var_os(\"PYTHONWARNDEFAULTENCODING\").is_some())"
  - "src/settings.rs:293:18      warnoptions                     U       settings.warnoptions.push(\"default\".to_owned"
  - "src/settings.rs:301:18      warnoptions                     U       settings.warnoptions.push(warn.to_owned("
  - "src/settings.rs:304:18      warnoptions                     U       settings.warnoptions.extend(warnings.map"
  - "src/settings.rs:344:37      PYTHONHASHSEED                  U       seed = match env::var(\"PYTHONHASHSEED\") {"
  - "src/settings.rs:350:42      PYTHONHASHSEED                  U       Fatal Python init error: PYTHONHASHSEED must be \\\"random\\\" or"
  - "src/shell.rs:1:1\tNo issues found"
  - "src/shell/helper.rs:20:13       startpos        U       let mut startpos = 0;"
  - "src/shell/helper.rs:30:21       startpos        U       startpos = line.len() - i;"
  - "src/shell/helper.rs:40:21       startpos        U       startpos = line.len() - i;"
  - "src/shell/helper.rs:52:11       startpos        U       Some((startpos, words))"
  - "src/shell/helper.rs:102:14      startpos        U       let (startpos, words) = split_idents"
  - "src/shell/helper.rs:150:13      rustyline       U       use rustyline::{"
  - "src/shell/helper.rs:162:18      rustyline       U       ) -> rustyline::Result<(usize, Vec"
  - "stdlib/build.rs:2:44        osslconf    U       rustc-check-cfg=cfg(osslconf, values(\"OPENSSL_NO"
  - "stdlib/build.rs:5:9         ossl        U       let ossl_vers = ["
  - "stdlib/build.rs:6:27        ossl        U       (0x1_00_01_00_0, \"ossl101\"),"
  - "stdlib/build.rs:7:27        ossl        U       (0x1_00_02_00_0, \"ossl102\"),"
  - "stdlib/build.rs:8:27        ossl        U       (0x1_01_00_00_0, \"ossl110\"),"
  - "stdlib/build.rs:9:27        ossl        U       (0x1_01_00_07_0, \"ossl110g\"),"
  - "stdlib/build.rs:36:39       osslconf    U       println!(\"cargo:rustc-cfg=osslconf=\\\"{conf}\\\"\");"
  - "stdlib/Cargo.toml:52:1          puruspe         U       puruspe = \"0.2.4\""
  - "stdlib/Cargo.toml:102:1         rustix          U       rustix = { workspace = true"
  - "stdlib/Cargo.toml:120:1         widestring      U       widestring = { workspace = true"
  - "stdlib/Cargo.toml:125:25        netioapi        U       winsock2\", \"ifdef\", \"netioapi\", \"ws2tcpip\","
  - "stdlib/Cargo.toml:133:28        Ndis            U       2_NetworkManagement_Ndis\","
  - "stdlib/src/array.rs:75:43       scode       U       $t:ty, $c:literal, $scode:literal)),*$(,)?) ="
  - "stdlib/src/array.rs:99:55       scode       U       ArrayContentType::$n(_) => $scode,)*"
  - "stdlib/src/array.rs:948:23      tobytes     U       pub(crate) fn tobytes(&self) -> Vec<u8> {"
  - "stdlib/src/array.rs:1442:9      mformat     U       mformat_code: MachineFormatCode"
  - "stdlib/src/array.rs:1620:27     mformat     U       let format = args.mformat_code;"
  - "stdlib/src/binascii.rs:105:15       CRCTAB          U       const CRCTAB_HQX: [u16; 256] = ["
  - "stdlib/src/binascii.rs:137:45       CRCTAB          U       crc << 8) & 0xFF00) ^ CRCTAB_HQX[((crc >> 8) as u"
  - "stdlib/src/binascii.rs:331:28       roken           U       // roken case from broken python"
  - "stdlib/src/binascii.rs:342:28       hexval          U       // hexval"
  - "stdlib/src/binascii.rs:370:9        quotetabs       U       quotetabs: bool,"
  - "stdlib/src/binascii.rs:372:9        istext          U       istext: bool,"
  - "stdlib/src/binascii.rs:380:13       quotetabs       U       let quotetabs = args.quotetabs;"
  - "stdlib/src/binascii.rs:380:30       quotetabs       U       let quotetabs = args.quotetabs;"
  - "stdlib/src/binascii.rs:381:13       istext          U       let istext = args.istext;"
  - "stdlib/src/binascii.rs:381:27       istext          U       let istext = args.istext;"
  - "stdlib/src/binascii.rs:385:21       linelen         U       let mut linelen = 0;"
  - "stdlib/src/binascii.rs:386:21       odatalen        U       let mut odatalen = 0;"
  - "stdlib/src/binascii.rs:390:21       inidx           U       let mut inidx;"
  - "stdlib/src/binascii.rs:391:21       outidx          U       let mut outidx;"
  - "stdlib/src/binascii.rs:393:13       inidx           U       inidx = 0;"
  - "stdlib/src/binascii.rs:394:19       inidx           U       while inidx < buflen {"
  - "stdlib/src/binascii.rs:395:24       inidx           U       if buf[inidx] == b'\\n' {"
  - "stdlib/src/binascii.rs:398:17       inidx           U       inidx += 1;"
  - "stdlib/src/binascii.rs:411:28       linelen         U       && linelen == 0"
  - "stdlib/src/binascii.rs:416:26       istext          U       || (!istext && ((buf[inidx] == b"
  - "stdlib/src/binascii.rs:421:29       quotetabs       U       && (quotetabs || ((buf[inidx] != b"
  - "stdlib/src/binascii.rs:423:25       linelen         U       if (linelen + 3) >= MAXLINESIZE"
  - "stdlib/src/binascii.rs:424:25       linelen         U       linelen = 0;"
  - "stdlib/src/binascii.rs:427:21       linelen         U       linelen += 3;"
  - "stdlib/src/binascii.rs:430:27       istext          U       } else if istext"
  - "stdlib/src/binascii.rs:455:17       odatalen        U       odatalen += delta;"
  - "stdlib/src/binascii.rs:458:51       odatalen        U       Vec::with_capacity(odatalen);"
  - "stdlib/src/binascii.rs:460:13       outidx          U       outidx = 0;"
  - "stdlib/src/binascii.rs:478:29       quotetabs       U       && (quotetabs || ((buf[inidx] != b"
  - "stdlib/src/binascii.rs:483:25       outidx          U       outidx += 1;"
  - "stdlib/src/binascii.rs:486:29       outidx          U       outidx += 1;"
  - "stdlib/src/binascii.rs:489:25       outidx          U       outidx += 1;"
  - "stdlib/src/binascii.rs:570:8        rlecode         U       fn rlecode_hqx(s: ArgAsciiBuffer"
  - "stdlib/src/binascii.rs:571:15       RUNCHAR         U       const RUNCHAR: u8 = 0x90; // b'\\x"
  - "stdlib/src/binascii.rs:580:26       RUNCHAR         U       if ch == RUNCHAR {"
  - "stdlib/src/binascii.rs:581:35       RUNCHAR         U       out_data.push(RUNCHAR);"
  - "stdlib/src/binascii.rs:591:39       RUNCHAR         U       out_data.push(RUNCHAR);"
  - "stdlib/src/binascii.rs:605:8        rledecode       U       fn rledecode_hqx(s: ArgAsciiBuffer"
  - "stdlib/src/binascii.rs:606:15       RUNCHAR         U       const RUNCHAR: u8 = 0x90; //b'\\x9"
  - "stdlib/src/bisect.rs:1:1\tNo issues found"
  - "stdlib/src/blake2.rs:1:1\tNo issues found"
  - "stdlib/src/bz2.rs:1:1\tNo issues found"
  - "stdlib/src/cmath.rs:1:1\tNo issues found"
  - "stdlib/src/contextvars.rs:43:19         hamt            U       // TODO: Real hamt implementation"
  - "stdlib/src/contextvars.rs:44:10         Hamt            U       type Hamt = IndexMap<PyRef<ContextVar"
  - "stdlib/src/contextvars.rs:46:32         Hamt            U       pyclass(no_attr, name = \"Hamt\", module = \"contextvars"
  - "stdlib/src/contextvars.rs:48:23         Hamt            U       pub(crate) struct HamtObject {"
  - "stdlib/src/contextvars.rs:49:9          hamt            U       hamt: RefCell<Hamt>,"
  - "stdlib/src/contextvars.rs:49:23         Hamt            U       hamt: RefCell<Hamt>,"
  - "stdlib/src/contextvars.rs:53:10         Hamt            U       impl HamtObject {}"
  - "stdlib/src/contextvars.rs:58:17         hamt            U       hamt: RefCell::new(Hamt:"
  - "stdlib/src/contextvars.rs:69:26         weakreflist     U       // PyObject *ctx_weakreflist;"
  - "stdlib/src/contextvars.rs:95:29         hamt            U       self.inner.vars.hamt.borrow()"
  - "stdlib/src/contextvars.rs:99:29         hamt            U       self.inner.vars.hamt.borrow_mut()"
  - "stdlib/src/contextvars.rs:295:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/contextvars.rs:298:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/contextvars.rs:300:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/contextvars.rs:301:62        tsid            U       AtomicUsize, // cached_tsid in CPython"
  - "stdlib/src/contextvars.rs:302:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/contextvars.rs:324:55        tsver           U       Context index; cached_tsver in CPython"
  - "stdlib/src/contextvars.rs:344:12        contextvar      U       // contextvar_set in CPython"
  - "stdlib/src/contextvars.rs:547:48        oldval          U       PyObjectRef>, // tok_oldval in CPython"
  - "stdlib/src/csv.rs:31:17         NOTNULL         U       const QUOTE_NOTNULL: i32 = QuoteStyle::Notnull"
  - "stdlib/src/csv.rs:31:44         Notnull         U       NOTNULL: i32 = QuoteStyle::Notnull as i32;"
  - "stdlib/src/csv.rs:280:21        pydialect       U       opts.update_pydialect(&mut dialect);"
  - "stdlib/src/csv.rs:427:9         Notnull         U       Notnull = 5,"
  - "stdlib/src/csv.rs:437:29        Notnull         U       QuoteStyle::Notnull => todo!(),"
  - "stdlib/src/csv.rs:460:37        Notnull         U       5 => Ok(QuoteStyle::Notnull),"
  - "stdlib/src/csv.rs:473:29        Notnull         U       QuoteStyle::Notnull => 5,"
  - "stdlib/src/csv.rs:668:19        pydialect       U       fn update_pydialect<'b>(&self, res: &'b"
  - "stdlib/src/csv.rs:703:37        pydialect       U       self.update_pydialect(&mut dialect);"
  - "stdlib/src/csv.rs:706:66        registed        U       format!(\"{} is not registed.\", name)))"
  - "stdlib/src/csv.rs:712:33        pydialect       U       self.update_pydialect(&mut o);"
  - "stdlib/src/csv.rs:718:33        pydialect       U       self.update_pydialect(&mut res);"
  - "stdlib/src/csv.rs:912:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/csv.rs:914:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/csv.rs:974:22        rposition       U       .rposition(|&x| x != b' ')"
  - "stdlib/src/csv.rs:990:34        nwritten        U       let (res, nread, nwritten, nends) = reader.read"
  - "stdlib/src/csv.rs:990:44        nends           U       res, nread, nwritten, nends) = reader.read_record"
  - "stdlib/src/csv.rs:996:34        nwritten        U       output_offset += nwritten;"
  - "stdlib/src/csv.rs:997:39        nends           U       output_ends_offset += nends;"
  - "stdlib/src/csv.rs:1066:11       pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/csv.rs:1068:11       pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/csv.rs:1093:31       nwritten        U       let (res, nwritten) = $x;"
  - "stdlib/src/csv.rs:1094:38       nwritten        U       buffer_offset += nwritten;"
  - "stdlib/src/csv.rs:1127:38       nwritten        U       let (res, nread, nwritten) ="
  - "stdlib/src/dis.rs:1:1\tNo issues found"
  - "stdlib/src/faulthandler.rs:1:1\tNo issues found"
  - "stdlib/src/fcntl.rs:12:45       fnctl           U       these from <asm-generic/fnctl.h> (please file an issue"
  - "stdlib/src/fcntl.rs:13:19       MAND            U       // LOCK_MAND, LOCK_READ, LOCK_WRITE"
  - "stdlib/src/fcntl.rs:14:36       EXLCK           U       SETLKW64, FASYNC, F_EXLCK, F_SHLCK, DN_ACCESS"
  - "stdlib/src/fcntl.rs:14:45       SHLCK           U       FASYNC, F_EXLCK, F_SHLCK, DN_ACCESS, DN_MODIFY"
  - "stdlib/src/fcntl.rs:15:39       MULTISHOT       U       RENAME, DN_ATTRIB, DN_MULTISHOT"
  - "stdlib/src/fcntl.rs:16:35       stropts         U       these are/were from <stropts.h>, which may not be"
  - "stdlib/src/fcntl.rs:17:48       FLUSHBAND       U       I_LOOK, I_FLUSH, I_FLUSHBAND, I_SETSIG, I_GETSIG"
  - "stdlib/src/fcntl.rs:18:16       SRDOPT          U       // I_SRDOPT, I_GRDOPT, I_NREAD,"
  - "stdlib/src/fcntl.rs:18:26       GRDOPT          U       / I_SRDOPT, I_GRDOPT, I_NREAD, I_FDINSERT"
  - "stdlib/src/fcntl.rs:18:45       FDINSERT        U       I_GRDOPT, I_NREAD, I_FDINSERT, I_STR, I_SWROPT, I"
  - "stdlib/src/fcntl.rs:18:64       SWROPT          U       I_FDINSERT, I_STR, I_SWROPT, I_GWROPT, I_SENDFD"
  - "stdlib/src/fcntl.rs:18:74       GWROPT          U       I_STR, I_SWROPT, I_GWROPT, I_SENDFD,"
  - "stdlib/src/fcntl.rs:18:84       SENDFD          U       SWROPT, I_GWROPT, I_SENDFD,"
  - "stdlib/src/fcntl.rs:19:16       RECVFD          U       // I_RECVFD, I_LIST, I_ATMARK, I"
  - "stdlib/src/fcntl.rs:19:44       CKBAND          U       I_LIST, I_ATMARK, I_CKBAND, I_GETBAND, I_CANPUT"
  - "stdlib/src/fcntl.rs:19:54       GETBAND         U       ATMARK, I_CKBAND, I_GETBAND, I_CANPUT, I_SETCLTIME"
  - "stdlib/src/fcntl.rs:19:65       CANPUT          U       CKBAND, I_GETBAND, I_CANPUT, I_SETCLTIME, I_GETCLTIME"
  - "stdlib/src/fcntl.rs:19:75       SETCLTIME       U       GETBAND, I_CANPUT, I_SETCLTIME, I_GETCLTIME,"
  - "stdlib/src/fcntl.rs:19:88       GETCLTIME       U       CANPUT, I_SETCLTIME, I_GETCLTIME,"
  - "stdlib/src/fcntl.rs:20:43       PUNLINK         U       I_UNLINK, I_PLINK, I_PUNLINK"
  - "stdlib/src/fcntl.rs:48:24       GETLEASE        U       F_ADD_SEALS, F_GETLEASE, F_GETPIPE_SZ, F_GET"
  - "stdlib/src/fcntl.rs:48:36       GETPIPE         U       SEALS, F_GETLEASE, F_GETPIPE_SZ, F_GET_SEALS, F_NOTIFY"
  - "stdlib/src/fcntl.rs:49:40       SETLEASE        U       SHRINK, F_SEAL_WRITE, F_SETLEASE, F_SETPIPE_SZ,"
  - "stdlib/src/fcntl.rs:49:52       SETPIPE         U       WRITE, F_SETLEASE, F_SETPIPE_SZ,"
  - "stdlib/src/gc.rs:13:8           isenabled       U       fn isenabled(_args: FuncArgs, _vm"
  - "stdlib/src/gc.rs:43:12          refererts       U       fn get_refererts(_args: FuncArgs, vm"
  - "stdlib/src/grp.rs:19:11         pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/grp.rs:21:11         pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/grp.rs:23:11         pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/grp.rs:84:8          getgrall        U       fn getgrall(vm: &VirtualMachine"
  - "stdlib/src/grp.rs:85:67         fgetgrent       U       thread safe. Could use fgetgrent_r, but this is easier"
  - "stdlib/src/grp.rs:86:16         GETGRALL        U       static GETGRALL: parking_lot::Mutex"
  - "stdlib/src/grp.rs:87:22         GETGRALL        U       let _guard = GETGRALL.lock();"
  - "stdlib/src/hashlib.rs:335:9         digestmod       U       digestmod: bool, // TODO: RUSTPYTHON"
  - "stdlib/src/json.rs:22:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/json/machinery.rs:5:30           LOJKINE     U       Copyright (c) 2018, Ophir LOJKINE"
  - "stdlib/src/json/machinery.rs:44:7           fedcba      U       //fedcba9876543210_fedcba987"
  - "stdlib/src/json/machinery.rs:44:24          fedcba      U       //fedcba9876543210_fedcba9876543210_fedcba987"
  - "stdlib/src/json/machinery.rs:44:41          fedcba      U       10_fedcba9876543210_fedcba9876543210_fedcba987"
  - "stdlib/src/json/machinery.rs:44:58          fedcba      U       10_fedcba9876543210_fedcba9876543210"
  - "stdlib/src/lib.rs:132:27        sysmodule           U       // crate::vm::sysmodule::sysconfigdata_name"
  - "stdlib/src/lib.rs:132:38        sysconfigdata       U       crate::vm::sysmodule::sysconfigdata_name() => sysconfigdata"
  - "stdlib/src/lib.rs:132:62        sysconfigdata       U       sysconfigdata_name() => sysconfigdata::make_module,"
  - "stdlib/src/locale.rs:59:72          ABMON       U       , ABDAY_6, ABDAY_7, ABMON_1, ABMON_10, ABMON_"
  - "stdlib/src/locale.rs:59:81          ABMON       U       , ABDAY_7, ABMON_1, ABMON_10, ABMON_11,"
  - "stdlib/src/locale.rs:59:91          ABMON       U       ABMON_1, ABMON_10, ABMON_11,"
  - "stdlib/src/locale.rs:60:9           ABMON       U       ABMON_12, ABMON_2, ABMON_"
  - "stdlib/src/locale.rs:60:19          ABMON       U       ABMON_12, ABMON_2, ABMON_3, ABMON_4"
  - "stdlib/src/math.rs:135:26       logx            U       log2(x, vm).map(|logx| logx / base.log2()"
  - "stdlib/src/math.rs:135:32       logx            U       log2(x, vm).map(|logx| logx / base.log2())"
  - "stdlib/src/math.rs:187:26       logx            U       log2(x, vm).map(|logx| logx / 10f64.log2("
  - "stdlib/src/math.rs:187:32       logx            U       log2(x, vm).map(|logx| logx / 10f64.log2())"
  - "stdlib/src/math.rs:464:13       puruspe         U       puruspe::erf(x)"
  - "stdlib/src/math.rs:474:13       puruspe         U       puruspe::erfc(x)"
  - "stdlib/src/math.rs:482:13       puruspe         U       puruspe::gamma(x)"
  - "stdlib/src/math.rs:494:13       puruspe         U       puruspe::ln_gamma(x)"
  - "stdlib/src/math.rs:550:39       ufrexp          U       m, exp) = float_ops::ufrexp(value);"
  - "stdlib/src/math.rs:581:13       argvec          U       let argvec = args.into_vec();"
  - "stdlib/src/math.rs:583:12       argvec          U       if argvec.is_empty() {"
  - "stdlib/src/math.rs:585:19       argvec          U       } else if argvec.len() == 1 {"
  - "stdlib/src/math.rs:586:23       argvec          U       return op(argvec[0].as_bigint(), &argvec"
  - "stdlib/src/math.rs:586:47       argvec          U       argvec[0].as_bigint(), &argvec[0]);"
  - "stdlib/src/math.rs:622:17       xsave           U       let xsave = x;"
  - "stdlib/src/math.rs:643:22       nonfinite       U       // a nonfinite x could arise either"
  - "stdlib/src/math.rs:646:20       summands        U       // summands"
  - "stdlib/src/math.rs:647:20       xsave           U       if xsave.is_finite() {"
  - "stdlib/src/math.rs:650:20       xsave           U       if xsave.is_infinite() {"
  - "stdlib/src/math.rs:651:32       xsave           U       inf_sum += xsave;"
  - "stdlib/src/math.rs:653:32       xsave           U       special_sum += xsave;"
  - "stdlib/src/math.rs:859:17       absx            U       let absx = x.abs();"
  - "stdlib/src/math.rs:860:17       absy            U       let absy = y.abs();"
  - "stdlib/src/math.rs:861:27       absx            U       let modulus = absx % absy;"
  - "stdlib/src/math.rs:861:34       absy            U       let modulus = absx % absy;"
  - "stdlib/src/math.rs:863:21       absy            U       let c = absy - modulus;"
  - "stdlib/src/math.rs:867:50       absx            U       - 2.0 * fmod(0.5 * (absx - modulus), absy),"
  - "stdlib/src/math.rs:867:67       absy            U       * (absx - modulus), absy),"
  - "stdlib/src/md5.rs:1:1\tNo issues found"
  - "stdlib/src/mmap.rs:44:19        MADV                        U       libc::MADV_DONTFORK => Advice:"
  - "stdlib/src/mmap.rs:44:24        DONTFORK                    U       libc::MADV_DONTFORK => Advice::DontFork"
  - "stdlib/src/mmap.rs:46:19        MADV                        U       libc::MADV_DOFORK => Advice::DoFork"
  - "stdlib/src/mmap.rs:46:24        DOFORK                      U       libc::MADV_DOFORK => Advice::DoFork,"
  - "stdlib/src/mmap.rs:48:19        MADV                        U       libc::MADV_MERGEABLE => Advice"
  - "stdlib/src/mmap.rs:50:19        MADV                        U       libc::MADV_UNMERGEABLE => Advice"
  - "stdlib/src/mmap.rs:52:19        MADV                        U       libc::MADV_HUGEPAGE => Advice:"
  - "stdlib/src/mmap.rs:52:24        HUGEPAGE                    U       libc::MADV_HUGEPAGE => Advice::HugePage"
  - "stdlib/src/mmap.rs:54:24        NOHUGEPAGE                  U       libc::MADV_NOHUGEPAGE => Advice::NoHugePage"
  - "stdlib/src/mmap.rs:58:24        DONTDUMP                    U       libc::MADV_DONTDUMP => Advice::DontDump"
  - "stdlib/src/mmap.rs:60:24        DODUMP                      U       libc::MADV_DODUMP => Advice::DoDump,"
  - "stdlib/src/mmap.rs:62:24        HWPOISON                    U       libc::MADV_HWPOISON => Advice::HwPoison"
  - "stdlib/src/mmap.rs:115:14       DODUMP                      U       MADV_DODUMP, MADV_DOFORK, MADV_DONTDUMP"
  - "stdlib/src/mmap.rs:115:27       DOFORK                      U       MADV_DODUMP, MADV_DOFORK, MADV_DONTDUMP, MADV"
  - "stdlib/src/mmap.rs:115:40       DONTDUMP                    U       DODUMP, MADV_DOFORK, MADV_DONTDUMP, MADV_DONTFORK, MADV"
  - "stdlib/src/mmap.rs:115:55       DONTFORK                    U       MADV_DONTDUMP, MADV_DONTFORK, MADV_HUGEPAGE, MADV"
  - "stdlib/src/mmap.rs:115:70       HUGEPAGE                    U       MADV_DONTFORK, MADV_HUGEPAGE, MADV_HWPOISON,"
  - "stdlib/src/mmap.rs:115:85       HWPOISON                    U       MADV_HUGEPAGE, MADV_HWPOISON,"
  - "stdlib/src/mmap.rs:116:30       NOHUGEPAGE                  U       MADV_MERGEABLE, MADV_NOHUGEPAGE, MADV_REMOVE, MADV_UNMERGEABL"
  - "stdlib/src/mmap.rs:140:20       DENYWRITE                   U       use libc::{MAP_DENYWRITE, MAP_EXECUTABLE, MAP"
  - "stdlib/src/mmap.rs:158:22       ALLOCATIONGRANULARITY       U       #[pyattr(name = \"ALLOCATIONGRANULARITY\", once)]"
  - "stdlib/src/mmap.rs:552:18       resizeable                  U       fn check_resizeable(&self, vm: &VirtualMachine"
  - "stdlib/src/mmap.rs:636:46       rposition                   U       buf.windows(sub.len()).rposition(|window| window == sub"
  - "stdlib/src/mmap.rs:816:24       resizeable                  U       self.check_resizeable(vm)?;"
  - "stdlib/src/multiprocessing.rs:1:1\tNo issues found"
  - "stdlib/src/overlapped.rs:142:32         winerror    U       TODO: set errno and winerror"
  - "stdlib/src/posixsubprocess.rs:4:5           ospath          U       ospath::OsPath,"
  - "stdlib/src/posixsubprocess.rs:35:17         preexec         U       if args.preexec_fn.is_some() {"
  - "stdlib/src/posixsubprocess.rs:36:54         preexec         U       not_implemented_error(\"preexec_fn not supported yet"
  - "stdlib/src/posixsubprocess.rs:130:7         cwrite          U       p2cwrite: i32,"
  - "stdlib/src/posixsubprocess.rs:133:5         errread         U       errread: i32,"
  - "stdlib/src/posixsubprocess.rs:134:5         errwrite        U       errwrite: i32,"
  - "stdlib/src/posixsubprocess.rs:135:5         errpipe         U       errpipe_read: i32,"
  - "stdlib/src/posixsubprocess.rs:136:5         errpipe         U       errpipe_write: i32,"
  - "stdlib/src/posixsubprocess.rs:144:5         preexec         U       preexec_fn: Option<PyObjectRef"
  - "stdlib/src/posixsubprocess.rs:161:77        errpipe         U       File::from_raw_fd(args.errpipe_write) });"
  - "stdlib/src/posixsubprocess.rs:177:42        noexec          U       ExecErrorContext::NoExec => \"noexec\","
  - "stdlib/src/posixsubprocess.rs:178:41        noexec          U       ExecErrorContext::ChDir => \"noexec:chdir\","
  - "stdlib/src/posixsubprocess.rs:190:23        errpipe         U       if fd != args.errpipe_write {"
  - "stdlib/src/posixsubprocess.rs:195:25        cwrite          U       for &fd in &[args.p2cwrite, args.c2pread, args"
  - "stdlib/src/posixsubprocess.rs:195:52        errread         U       args.c2pread, args.errread] {"
  - "stdlib/src/posixsubprocess.rs:200:24        errpipe         U       unistd::close(args.errpipe_read)?;"
  - "stdlib/src/posixsubprocess.rs:210:13        errwrite        U       let mut errwrite = args.errwrite;"
  - "stdlib/src/posixsubprocess.rs:210:29        errwrite        U       mut errwrite = args.errwrite;"
  - "stdlib/src/posixsubprocess.rs:211:11        errwrite        U       while errwrite == 0 || errwrite =="
  - "stdlib/src/posixsubprocess.rs:211:28        errwrite        U       while errwrite == 0 || errwrite == 1 {"
  - "stdlib/src/posixsubprocess.rs:238:43        SIGXFZ          U       restore signals SIGPIPE, SIGXFZ, SIGXFSZ to SIG_DFL"
  - "stdlib/src/posixsubprocess.rs:308:14        filetable       U       if close_filetable_fds(keep).is_ok() {"
  - "stdlib/src/posixsubprocess.rs:353:10        filetable       U       fn close_filetable_fds(keep: KeepFds<'"
  - "stdlib/src/posixsubprocess.rs:357:19        thisproc        U       c\"/scheme/thisproc/current/filetable\","
  - "stdlib/src/posixsubprocess.rs:357:36        filetable       U       scheme/thisproc/current/filetable\","
  - "stdlib/src/posixsubprocess.rs:361:9         filetable       U       let filetable = unsafe { OwnedFd:"
  - "stdlib/src/posixsubprocess.rs:364:35        filetable       U       = nix::unistd::read(filetable.as_raw_fd(), std::slice"
  - "stdlib/src/pyexpat.rs:138:42        isfinal     U       self, data: PyStrRef, _isfinal: OptionalArg<bool>,"
  - "stdlib/src/pystruct.rs:161:11       pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/pystruct.rs:164:11       pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/pystruct.rs:232:8        calcsize        U       fn calcsize(fmt: IntoStructFormatBytes"
  - "stdlib/src/pystruct.rs:240:11       pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/random.rs:16:16          rngs            U       use rand::{rngs::StdRng, RngCore, SeedableRng"
  - "stdlib/src/random.rs:16:39          Seedable        U       rngs::StdRng, RngCore, SeedableRng};"
  - "stdlib/src/random.rs:135:25         wordarray       U       let wordarray = (0..words)"
  - "stdlib/src/random.rs:143:45         wordarray       U       uint = BigUint::new(wordarray);"
  - "stdlib/src/re.rs:83:11          pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/resource.rs:24:21        OFILE           U       // TODO: RLIMIT_OFILE,"
  - "stdlib/src/resource.rs:31:72        emscripten      U       android\", target_os = \"emscripten\"))]"
  - "stdlib/src/resource.rs:33:23        MSGQUEUE        U       use libc::{RLIMIT_MSGQUEUE, RLIMIT_NICE, RLIMIT"
  - "stdlib/src/resource.rs:33:53        RTPRIO          U       RLIMIT_NICE, RLIMIT_RTPRIO, RLIMIT_SIGPENDING}"
  - "stdlib/src/resource.rs:37:22        RTTIME          U       use libc::RLIMIT_RTTIME;"
  - "stdlib/src/resource.rs:43:22        illumos         U       target_os = \"illumos\""
  - "stdlib/src/resource.rs:46:22        SBSIZE          U       use libc::RLIMIT_SBSIZE;"
  - "stdlib/src/resource.rs:48:74        illumos         U       solaris\", target_os = \"illumos\"))]"
  - "stdlib/src/resource.rs:50:23        NPTS            U       use libc::{RLIMIT_NPTS, RLIMIT_SWAP};"
  - "stdlib/src/resource.rs:52:51        illumos         U       solaris\", target_os = \"illumos\"))]"
  - "stdlib/src/resource.rs:56:49        emscripten      U       linux\", target_os = \"emscripten\", target_os = \"freebsd"
  - "stdlib/src/scproxy.rs:1:1\tNo issues found"
  - "stdlib/src/select.rs:59:24          WSAFDIs             U       use WinSock::__WSAFDIsSet;"
  - "stdlib/src/select.rs:60:11          WSAFDIs             U       __WSAFDIsSet(fd as _, set) !="
  - "stdlib/src/select.rs:119:13         errorfds            U       errorfds: *mut fd_set,"
  - "stdlib/src/select.rs:131:7          pytraverse          U       #[pytraverse(skip)]"
  - "stdlib/src/select.rs:185:5          errfds              U       errfds: &mut FdSet,"
  - "stdlib/src/select.rs:197:13         errfds              U       errfds.0.as_mut_ptr(),"
  - "stdlib/src/select.rs:234:9          wlist               U       wlist: PyObjectRef,"
  - "stdlib/src/select.rs:235:9          xlist               U       xlist: PyObjectRef,"
  - "stdlib/src/select.rs:260:14         wlist               U       let (wlist, mut w) = seq2set(&wlist"
  - "stdlib/src/select.rs:260:39         wlist               U       wlist, mut w) = seq2set(&wlist)?;"
  - "stdlib/src/select.rs:261:14         xlist               U       let (xlist, mut x) = seq2set(&xlist"
  - "stdlib/src/select.rs:261:39         xlist               U       xlist, mut x) = seq2set(&xlist)?;"
  - "stdlib/src/select.rs:263:32         wlist               U       rlist.is_empty() && wlist.is_empty() && xlist"
  - "stdlib/src/select.rs:263:52         xlist               U       wlist.is_empty() && xlist.is_empty() {"
  - "stdlib/src/select.rs:308:13         wlist               U       let wlist = set2list(wlist, w"
  - "stdlib/src/select.rs:309:13         xlist               U       let xlist = set2list(xlist, x"
  - "stdlib/src/select.rs:495:9          EPOLLERR            U       EPOLLERR, EPOLLEXCLUSIVE, EPOLLHUP"
  - "stdlib/src/select.rs:495:19         EPOLLEXCLUSIVE      U       EPOLLERR, EPOLLEXCLUSIVE, EPOLLHUP, EPOLLIN,"
  - "stdlib/src/select.rs:495:35         EPOLLHUP            U       EPOLLERR, EPOLLEXCLUSIVE, EPOLLHUP, EPOLLIN, EPOLLMSG,"
  - "stdlib/src/select.rs:495:45         EPOLLIN             U       EPOLLEXCLUSIVE, EPOLLHUP, EPOLLIN, EPOLLMSG, EPOLLONESHOT"
  - "stdlib/src/select.rs:495:54         EPOLLMSG            U       EPOLLHUP, EPOLLIN, EPOLLMSG, EPOLLONESHOT, EPOLLOUT"
  - "stdlib/src/select.rs:495:64         EPOLLONESHOT        U       EPOLLIN, EPOLLMSG, EPOLLONESHOT, EPOLLOUT, EPOLLPRI"
  - "stdlib/src/select.rs:495:78         EPOLLOUT            U       EPOLLMSG, EPOLLONESHOT, EPOLLOUT, EPOLLPRI,"
  - "stdlib/src/select.rs:495:88         EPOLLPRI            U       EPOLLONESHOT, EPOLLOUT, EPOLLPRI,"
  - "stdlib/src/select.rs:496:9          EPOLLRDBAND         U       EPOLLRDBAND, EPOLLRDHUP, EPOLLRDNORM"
  - "stdlib/src/select.rs:496:22         EPOLLRDHUP          U       EPOLLRDBAND, EPOLLRDHUP, EPOLLRDNORM, EPOLLWAKEUP"
  - "stdlib/src/select.rs:496:34         EPOLLRDNORM         U       EPOLLRDBAND, EPOLLRDHUP, EPOLLRDNORM, EPOLLWAKEUP, EPOLLWRBAND"
  - "stdlib/src/select.rs:496:47         EPOLLWAKEUP         U       EPOLLRDHUP, EPOLLRDNORM, EPOLLWAKEUP, EPOLLWRBAND, EPOLLWRNORM"
  - "stdlib/src/select.rs:496:60         EPOLLWRBAND         U       EPOLLRDNORM, EPOLLWAKEUP, EPOLLWRBAND, EPOLLWRNORM, EPOLL"
  - "stdlib/src/select.rs:496:73         EPOLLWRNORM         U       EPOLLWAKEUP, EPOLLWRBAND, EPOLLWRNORM, EPOLL_CLOEXEC,"
  - "stdlib/src/select.rs:496:92         CLOEXEC             U       EPOLLWRNORM, EPOLL_CLOEXEC,"
  - "stdlib/src/select.rs:500:11         EPOLLET             U       const EPOLLET: u32 = libc::EPOLLET"
  - "stdlib/src/select.rs:500:32         EPOLLET             U       EPOLLET: u32 = libc::EPOLLET as u32;"
  - "stdlib/src/select.rs:514:13         rustix              U       use rustix::event::epoll::{self"
  - "stdlib/src/select.rs:539:58         CLOEXEC             U       flags, 0 | libc::EPOLL_CLOEXEC) {"
  - "stdlib/src/select.rs:554:13         maxevents           U       maxevents: i32,"
  - "stdlib/src/select.rs:560:66         CLOEXEC             U       epoll::CreateFlags::CLOEXEC)?;"
  - "stdlib/src/select.rs:632:21         maxevents           U       let maxevents = args.maxevents;"
  - "stdlib/src/select.rs:632:38         maxevents           U       let maxevents = args.maxevents;"
  - "stdlib/src/select.rs:642:21         maxevents           U       let maxevents = match maxevents {"
  - "stdlib/src/select.rs:642:39         maxevents           U       let maxevents = match maxevents {"
  - "stdlib/src/select.rs:659:29         rustix              U       Err(rustix::io::Errno::INTR) ="
  - "stdlib/src/sha1.rs:1:1\tNo issues found"
  - "stdlib/src/sha256.rs:1:1\tNo issues found"
  - "stdlib/src/sha3.rs:1:1\tNo issues found"
  - "stdlib/src/sha512.rs:1:1\tNo issues found"
  - "stdlib/src/socket.rs:38:33          netioapi                U       use winapi::shared::netioapi::{if_indextoname, if"
  - "stdlib/src/socket.rs:44:16          EXCLUSIVEADDRUSE        U       SO_EXCLUSIVEADDRUSE,"
  - "stdlib/src/socket.rs:63:69          RCVALL                  U       NUMERICHOST, NI_NUMERICSERV, RCVALL_IPLEVEL, RCVALL_OFF"
  - "stdlib/src/socket.rs:63:76          IPLEVEL                 U       NUMERICSERV, RCVALL_IPLEVEL, RCVALL_OFF,"
  - "stdlib/src/socket.rs:63:85          RCVALL                  U       NUMERICSERV, RCVALL_IPLEVEL, RCVALL_OFF,"
  - "stdlib/src/socket.rs:64:13          RCVALL                  U       RCVALL_ON, RCVALL_SOCKETLEVELONLY"
  - "stdlib/src/socket.rs:64:24          RCVALL                  U       RCVALL_ON, RCVALL_SOCKETLEVELONLY, SD"
  - "stdlib/src/socket.rs:64:31          SOCKETLEVELONLY         U       RCVALL_ON, RCVALL_SOCKETLEVELONLY, SD_BOTH as SHUT_RDWR"
  - "stdlib/src/socket.rs:65:81          RCVALL                  U       LOOPBACK_FAST_PATH, SIO_RCVALL, SOCK_DGRAM,"
  - "stdlib/src/socket.rs:68:13          WSAEBADF                U       WSAEBADF, WSAECONNRESET, WSAENOTSOCK"
  - "stdlib/src/socket.rs:71:52          Ndis                    U       :NetworkManagement::Ndis::IF_MAX_STRING_SIZE"
  - "stdlib/src/socket.rs:114:17         ATALK                   U       use c::{SOL_ATALK, SOL_AX25, SOL_IPX,"
  - "stdlib/src/socket.rs:114:47         NETROM                  U       SOL_AX25, SOL_IPX, SOL_NETROM, SOL_ROSE};"
  - "stdlib/src/socket.rs:118:15         SETFIB                  U       use c::SO_SETFIB;"
  - "stdlib/src/socket.rs:123:78         ISOTP                   U       FLAG, CAN_ERR_MASK, CAN_ISOTP, CAN_J1939,"
  - "stdlib/src/socket.rs:129:61         ERRQUEUE                U       DEST_NAME, SCM_J1939_ERRQUEUE, SCM_J1939_PRIO, SOL"
  - "stdlib/src/socket.rs:130:31         ERRQUEUE                U       SOL_CAN_RAW, SO_J1939_ERRQUEUE, SO_J1939_FILTER, SO"
  - "stdlib/src/socket.rs:130:67         PROMISC                 U       39_FILTER, SO_J1939_PROMISC, SO_J1939_SEND_PRIO"
  - "stdlib/src/socket.rs:139:20         VRRP                    U       use c::IPPROTO_VRRP;"
  - "stdlib/src/socket.rs:148:47         IPLEVEL                 U       IPPROTO_IPV4, RCVALL_IPLEVEL, RCVALL_OFF, RCVALL"
  - "stdlib/src/socket.rs:149:16         SOCKETLEVELONLY         U       RCVALL_SOCKETLEVELONLY, SIO_KEEPALIVE_VALS"
  - "stdlib/src/socket.rs:150:12         EXCLUSIVEADDRUSE        U       SO_EXCLUSIVEADDRUSE,"
  - "stdlib/src/socket.rs:170:54         ASSOCLEN                U       ENCRYPT, ALG_SET_AEAD_ASSOCLEN, ALG_SET_AEAD_AUTHSIZE"
  - "stdlib/src/socket.rs:173:85         DNRTMSG                 U       NETLINK_CRYPTO, NETLINK_DNRTMSG,"
  - "stdlib/src/socket.rs:174:51         NFLOG                   U       NETLINK_IP6_FW, NETLINK_NFLOG, NETLINK_ROUTE, NETLINK"
  - "stdlib/src/socket.rs:174:81         USERSOCK                U       NETLINK_ROUTE, NETLINK_USERSOCK,"
  - "stdlib/src/socket.rs:175:17         XFRM                    U       NETLINK_XFRM, SOL_ALG, SO_PASSSEC"
  - "stdlib/src/socket.rs:175:35         PASSSEC                 U       NETLINK_XFRM, SOL_ALG, SO_PASSSEC, SO_PEERSEC,"
  - "stdlib/src/socket.rs:175:47         PEERSEC                 U       ALG, SO_PASSSEC, SO_PEERSEC,"
  - "stdlib/src/socket.rs:213:28         ATMPVC                  U       AF_ALG, AF_ASH, AF_ATMPVC, AF_ATMSVC, AF_AX25"
  - "stdlib/src/socket.rs:214:44         NETROM                  U       NETBEUI, AF_NETLINK, AF_NETROM, AF_PACKET, AF_PPPOX"
  - "stdlib/src/socket.rs:215:81         ERRQUEUE                U       TRANSPARENT, MSG_CONFIRM, MSG_ERRQUEUE,"
  - "stdlib/src/socket.rs:217:21         BINDTODEVICE            U       SOL_UDP, SO_BINDTODEVICE, SO_MARK, TCP_CORK,"
  - "stdlib/src/socket.rs:217:89         QUICKACK                U       ACCEPT, TCP_LINGER2, TCP_QUICKACK,"
  - "stdlib/src/socket.rs:218:13         SYNCNT                  U       TCP_SYNCNT, TCP_WINDOW_CLAMP,"
  - "stdlib/src/socket.rs:295:21         UDPLITE                 U       use c::{IPPROTO_UDPLITE, TCP_CONGESTION};"
  - "stdlib/src/socket.rs:304:11         UDPLITE                 U       const UDPLITE_SEND_CSCOV: i32 = 1"
  - "stdlib/src/socket.rs:304:24         CSCOV                   U       const UDPLITE_SEND_CSCOV: i32 = 10;"
  - "stdlib/src/socket.rs:313:11         UDPLITE                 U       const UDPLITE_RECV_CSCOV: i32 = 1"
  - "stdlib/src/socket.rs:313:24         CSCOV                   U       const UDPLITE_RECV_CSCOV: i32 = 11;"
  - "stdlib/src/socket.rs:341:32         loongarch               U       target_arch = \"loongarch64\","
  - "stdlib/src/socket.rs:345:32         riscv                   U       target_arch = \"riscv64\","
  - "stdlib/src/socket.rs:391:32         loongarch               U       target_arch = \"loongarch64\","
  - "stdlib/src/socket.rs:395:32         riscv                   U       target_arch = \"riscv64\","
  - "stdlib/src/socket.rs:423:16         PASSCRED                U       use c::{SO_PASSCRED, SO_PEERCRED};"
  - "stdlib/src/socket.rs:443:15         RECVTOS                 U       use c::IP_RECVTOS;"
  - "stdlib/src/socket.rs:541:22         CLOEXEC                 U       use c::{MSG_CMSG_CLOEXEC, MSG_NOSIGNAL};"
  - "stdlib/src/socket.rs:578:18         CLOEXEC                 U       use c::{SOCK_CLOEXEC, SOCK_NONBLOCK};"
  - "stdlib/src/socket.rs:674:11         BDADDR                  U       const BDADDR_ANY: &str = \"00:00:"
  - "stdlib/src/socket.rs:683:11         BDADDR                  U       const BDADDR_LOCAL: &str = \"00:0"
  - "stdlib/src/socket.rs:689:30         ICLFXBM                 U       IPPROTO_CBT, IPPROTO_ICLFXBM, IPPROTO_IGP, IPPROTO"
  - "stdlib/src/socket.rs:712:8          gaierror                U       fn gaierror(vm: &VirtualMachine"
  - "stdlib/src/socket.rs:715:14         gaierror                U       \"gaierror\","
  - "stdlib/src/socket.rs:756:25         netioapi                U       use winapi::shared::netioapi;"
  - "stdlib/src/socket.rs:969:88         scopeid                 U       host, port[, flowinfo[, scopeid]])\""
  - "stdlib/src/socket.rs:973:42         scopeid                 U       let (addr, flowinfo, scopeid) = Address::from_tuple"
  - "stdlib/src/socket.rs:979:48         scopeid                 U       addr6.set_scope_id(scopeid);"
  - "stdlib/src/socket.rs:1016:67        errorfds                U       SelectKind::Connect fills the errorfds fd_set, so if we wake"
  - "stdlib/src/socket.rs:1285:25        subbuf                  U       let subbuf = &buf[buf_offset.."
  - "stdlib/src/socket.rs:1286:64        subbuf                  U       sock()?.send_with_flags(subbuf, flags)?;"
  - "stdlib/src/socket.rs:1327:13        ancdata                 U       ancdata: OptionalArg,"
  - "stdlib/src/socket.rs:1354:41        ancdata                 U       OptionalArg::Present(ancdata) = ancdata {"
  - "stdlib/src/socket.rs:1354:52        ancdata                 U       :Present(ancdata) = ancdata {"
  - "stdlib/src/socket.rs:1355:21        cmsgs                   U       let cmsgs = vm.extract_elements"
  - "stdlib/src/socket.rs:1356:22        ancdata                 U       &ancdata,"
  - "stdlib/src/socket.rs:1369:42        cmsgs                   U       control_buf = Self::pack_cmsgs_to_send(&cmsgs, vm)"
  - "stdlib/src/socket.rs:1369:57        cmsgs                   U       pack_cmsgs_to_send(&cmsgs, vm)?;"
  - "stdlib/src/socket.rs:1384:17        cmsgs                   U       fn pack_cmsgs_to_send("
  - "stdlib/src/socket.rs:1385:13        cmsgs                   U       cmsgs: &[(i32, i32, ArgBytesLike"
  - "stdlib/src/socket.rs:1412:21        pmhdr                   U       let mut pmhdr: *mut libc::cmsghdr"
  - "stdlib/src/socket.rs:1414:20        pmhdr                   U       if pmhdr.is_null() {"
  - "stdlib/src/socket.rs:1421:46        pmhdr                   U       because we know that pmhdr is valid, and we initialized"
  - "stdlib/src/socket.rs:1424:23        pmhdr                   U       (*pmhdr).cmsg_level = *lvl;"
  - "stdlib/src/socket.rs:1425:23        pmhdr                   U       (*pmhdr).cmsg_type = *typ;"
  - "stdlib/src/socket.rs:1427:31        nonoverlapping          U       ptr::copy_nonoverlapping(data.as_ptr(), libc"
  - "stdlib/src/socket.rs:1490:12        getblocking             U       fn getblocking(&self) -> bool {"
  - "stdlib/src/socket.rs:1516:25        flagsize                U       let mut flagsize = std::mem::size_of"
  - "stdlib/src/socket.rs:1523:30        flagsize                U       &mut flagsize,"
  - "stdlib/src/socket.rs:1561:13        optlen                  U       optlen: OptionalArg<u32>,"
  - "stdlib/src/socket.rs:1566:37        optlen                  U       ret = match (value, optlen) {"
  - "stdlib/src/socket.rs:1579:45        optlen                  U       OptionalArg::Present(optlen)) => unsafe {"
  - "stdlib/src/socket.rs:1580:75        optlen                  U       name, std::ptr::null(), optlen as _)"
  - "stdlib/src/socket.rs:1584:73        optlen                  U       the value arg xor the optlen arg\".to_owned())"
  - "stdlib/src/socket.rs:1666:17        scopeid                 U       let scopeid = tuple"
  - "stdlib/src/socket.rs:1674:33        scopeid                 U       Ok((addr, flowinfo, scopeid))"
  - "stdlib/src/socket.rs:1698:25        abstractpath            U       if let Some(abstractpath) = addr.as_abstract"
  - "stdlib/src/socket.rs:1699:49        abstractpath            U       ctx.new_bytes([b\"\\0\", abstractpath].concat()).into();"
  - "stdlib/src/socket.rs:1760:13        serv                    U       let serv = unsafe { c::getservbyname"
  - "stdlib/src/socket.rs:1761:12        serv                    U       if serv.is_null() {"
  - "stdlib/src/socket.rs:1764:31        serv                    U       let port = unsafe { (*serv).s_port };"
  - "stdlib/src/socket.rs:1782:13        serv                    U       let serv = unsafe { c::getservbyport"
  - "stdlib/src/socket.rs:1783:12        serv                    U       if serv.is_null() {"
  - "stdlib/src/socket.rs:1943:28        canonname               U       ai.canonname,"
  - "stdlib/src/socket.rs:2072:17        ainfo                   U       let mut ainfo = res.next().unwrap"
  - "stdlib/src/socket.rs:2078:20        ainfo                   U       match &mut ainfo.sockaddr {"
  - "stdlib/src/socket.rs:2091:34        ainfo                   U       lookup::getnameinfo(&ainfo.sockaddr, flags)"
  - "stdlib/src/socket.rs:2179:46        Luid                    U       name(&entry.InterfaceLuid).map_err(|err| err.into"
  - "stdlib/src/socket.rs:2187:17        luid                    U       luid: &winapi::shared::ifdef"
  - "stdlib/src/socket.rs:2187:51        LUID                    U       :shared::ifdef::NET_LUID,"
  - "stdlib/src/socket.rs:2188:29        widestring              U       ) -> io::Result<widestring::WideCString> {"
  - "stdlib/src/socket.rs:2191:21        netioapi                U       netioapi::ConvertInterfaceLuidToNameW"
  - "stdlib/src/socket.rs:2191:47        Luid                    U       netioapi::ConvertInterfaceLuidToNameW(luid, buf.as"
  - "stdlib/src/socket.rs:2191:59        luid                    U       ConvertInterfaceLuidToNameW(luid, buf.as_mut_ptr(), buf"
  - "stdlib/src/socket.rs:2194:24        widestring              U       Ok(widestring::WideCString::from_ustr"
  - "stdlib/src/socket.rs:2194:54        ustr                    U       widestring::WideCString::from_ustr_truncate("
  - "stdlib/src/socket.rs:2195:25        widestring              U       widestring::WideStr::from_slice"
  - "stdlib/src/socket.rs:2202:35        netioapi                U       ptr: ptr::NonNull<netioapi::MIB_IF_TABLE2>,"
  - "stdlib/src/socket.rs:2207:40        netioapi                U       let ret = unsafe { netioapi::GetIfTable2Ex(netioapi"
  - "stdlib/src/socket.rs:2248:17        ainfo                   U       let ainfo = res.next().unwrap"
  - "stdlib/src/socket.rs:2254:23        ainfo                   U       return Ok(ainfo.sockaddr);"
  - "stdlib/src/socket.rs:2367:13        strerr                  U       let strerr = {"
  - "stdlib/src/socket.rs:2386:38        gaierror                U       SocketError::GaiError => gaierror(vm),"
  - "stdlib/src/socket.rs:2391:64        strerr                  U       num()), vm.ctx.new_str(strerr).into()],"
  - "stdlib/src/socket.rs:2434:8         getdefaulttimeout       U       fn getdefaulttimeout() -> Option<f64> {"
  - "stdlib/src/socket.rs:2444:8         setdefaulttimeout       U       fn setdefaulttimeout(timeout: Option<Duration"
  - "stdlib/src/sqlite.rs:1404:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/sqlite.rs:1406:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/sqlite.rs:1415:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/sqlite.rs:1417:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/sqlite.rs:1992:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/ssl.rs:14:17         ossl            U       #[pymodule(with(ossl101, windows))]"
  - "stdlib/src/ssl.rs:72:33         ECDH            U       ifdef SSL_OP_SINGLE_ECDH_USE"
  - "stdlib/src/ssl.rs:73:26         ECDH            U       // SSL_OP_SINGLE_ECDH_USE as OP_SINGLE_ECDH"
  - "stdlib/src/ssl.rs:73:48         ECDH            U       ECDH_USE as OP_SINGLE_ECDH_USE"
  - "stdlib/src/ssl.rs:131:15        ECDH            U       const HAS_ECDH: bool = false;"
  - "stdlib/src/ssl.rs:147:36        ossl            U       TLSv1_3: bool = cfg!(ossl111);"
  - "stdlib/src/ssl.rs:222:22        SSLEOF          U       #[pyattr(name = \"SSLEOFError\", once)]"
  - "stdlib/src/ssl.rs:224:38        SSLEOF          U       new_simple_heap(\"ssl.SSLEOFError\", &ssl_error(vm"
  - "stdlib/src/ssl.rs:261:15        ossl            U       #[cfg(ossl111)]"
  - "stdlib/src/ssl.rs:263:19        ossl            U       #[cfg(not(ossl111))]"
  - "stdlib/src/ssl.rs:461:43        SSLV            U       options |= SslOptions::NO_SSLV2;"
  - "stdlib/src/ssl.rs:469:43        ECDH            U       SslOptions::SINGLE_ECDH_USE;"
  - "stdlib/src/ssl.rs:475:19        ossl            U       #[cfg(ossl111)]"
  - "stdlib/src/ssl.rs:521:31        cipherlist      U       fn set_ciphers(&self, cipherlist: PyStrRef, vm: &VirtualMachin"
  - "stdlib/src/ssl.rs:522:27        cipherlist      U       let ciphers = cipherlist.as_str();"
  - "stdlib/src/ssl.rs:633:76        cadata          U       &args.capath, &args.cadata) {"
  - "stdlib/src/ssl.rs:635:59        cadata          U       \"cafile, capath and cadata cannot be all omitted"
  - "stdlib/src/ssl.rs:640:24        cadata          U       fn invalid_cadata(vm: &VirtualMachine"
  - "stdlib/src/ssl.rs:642:22        cadata          U       \"cadata should be an ASCII string"
  - "stdlib/src/ssl.rs:646:25        cadata          U       // validate cadata type and load cadata"
  - "stdlib/src/ssl.rs:909:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/ssl.rs:911:11        pytraverse      U       #[pytraverse(skip)]"
  - "stdlib/src/ssl.rs:986:15        osslconf        U       #[cfg(osslconf = \"OPENSSL_NO_COMP\""
  - "stdlib/src/ssl.rs:991:19        osslconf        U       #[cfg(not(osslconf = \"OPENSSL_NO_COMP\""
  - "stdlib/src/ssl.rs:1360:63       cacerts         U       system/etc/security/cacerts\";"
  - "stdlib/src/statistics.rs:1:1\tNo issues found"
  - "stdlib/src/syslog.rs:132:19         maskpri     U       fn setlogmask(maskpri: i32) -> i32 {"
  - "stdlib/src/syslog.rs:133:35         maskpri     U       unsafe { libc::setlogmask(maskpri) }"
  - "stdlib/src/termios.rs:14:58         CIBAUD              U       0000, B4000000, and CIBAUD"
  - "stdlib/src/termios.rs:17:14         CDEL                U       // CDEL, CDSUSP, CEOF, CEOL"
  - "stdlib/src/termios.rs:17:61         CESC                U       CEOL2, CEOT, CERASE, CESC, CFLUSH, CINTR, CKILL"
  - "stdlib/src/termios.rs:18:14         CNUL                U       // CNUL, COMMON, CQUIT, CRPRNT"
  - "stdlib/src/termios.rs:18:65         CSWTCH              U       CSTART, CSTOP, CSUSP, CSWTCH, CWERASE"
  - "stdlib/src/termios.rs:21:14         IOCSIZE             U       // IOCSIZE_MASK, IOCSIZE_SHIFT"
  - "stdlib/src/termios.rs:21:28         IOCSIZE             U       IOCSIZE_MASK, IOCSIZE_SHIFT"
  - "stdlib/src/termios.rs:23:32         NSWTCH              U       NOTE: I have only found NSWTCH on cygwin, so please"
  - "stdlib/src/termios.rs:30:14         TCSBRKP             U       // TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS"
  - "stdlib/src/termios.rs:30:23         TIOCGICOUNT         U       // TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFI"
  - "stdlib/src/termios.rs:30:36         TIOCGLCKTRMIOS      U       TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR"
  - "stdlib/src/termios.rs:30:52         TIOCSERCONFIG       U       TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMUL"
  - "stdlib/src/termios.rs:30:67         TIOCSERGETLSR       U       IOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMULTI,"
  - "stdlib/src/termios.rs:30:82         TIOCSERGETMULTI     U       TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMULTI,"
  - "stdlib/src/termios.rs:31:14         TIOCSERGSTRUCT      U       // TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULT"
  - "stdlib/src/termios.rs:31:30         TIOCSERGWILD        U       TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWIL"
  - "stdlib/src/termios.rs:31:44         TIOCSERSETMULTI     U       TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWILD, TIOCSER"
  - "stdlib/src/termios.rs:31:61         TIOCSERSWILD        U       IOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWILD, TIOCSER_TEMT,"
  - "stdlib/src/termios.rs:31:75         TIOCSER             U       IOCSERSETMULTI, TIOCSERSWILD, TIOCSER_TEMT,"
  - "stdlib/src/termios.rs:31:83         TEMT                U       TIOCSERSWILD, TIOCSER_TEMT,"
  - "stdlib/src/termios.rs:32:14         TIOCSLCKTRMIOS      U       // TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT"
  - "stdlib/src/termios.rs:32:30         TIOCSSERIAL         U       TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT"
  - "stdlib/src/termios.rs:32:43         TIOCTTYGSTRUCT      U       TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT"
  - "stdlib/src/termios.rs:33:28         illumos             U       cfg(any(target_os = \"illumos\", target_os = \"solaris"
  - "stdlib/src/termios.rs:35:31         CSWTCH              U       libc::{CSTART, CSTOP, CSWTCH};"
  - "stdlib/src/termios.rs:65:9          IBSHIFT             U       IBSHIFT, TCFLSH, TCGETA, TCGETS"
  - "stdlib/src/termios.rs:65:34         TCGETS              U       IBSHIFT, TCFLSH, TCGETA, TCGETS, TCSBRK, TCSETA, TCSETAF"
  - "stdlib/src/termios.rs:65:42         TCSBRK              U       TCFLSH, TCGETA, TCGETS, TCSBRK, TCSETA, TCSETAF, TCSETAW"
  - "stdlib/src/termios.rs:65:76         TCSETS              U       TCSETA, TCSETAF, TCSETAW, TCSETS, TCSETSF,"
  - "stdlib/src/termios.rs:65:84         TCSETSF             U       TCSETAF, TCSETAW, TCSETS, TCSETSF,"
  - "stdlib/src/termios.rs:66:9          TCSETSW             U       TCSETSW, TCXONC, TIOCGSERIAL"
  - "stdlib/src/termios.rs:66:18         TCXONC              U       TCSETSW, TCXONC, TIOCGSERIAL, TIOCGSOFTCAR"
  - "stdlib/src/termios.rs:66:26         TIOCGSERIAL         U       TCSETSW, TCXONC, TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ"
  - "stdlib/src/termios.rs:66:39         TIOCGSOFTCAR        U       TCXONC, TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ, TIOCLINUX"
  - "stdlib/src/termios.rs:66:53         TIOCINQ             U       TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ, TIOCLINUX, TIOCSSOFTCAR"
  - "stdlib/src/termios.rs:66:62         TIOCLINUX           U       TIOCGSOFTCAR, TIOCINQ, TIOCLINUX, TIOCSSOFTCAR, XTABS"
  - "stdlib/src/termios.rs:66:73         TIOCSSOFTCAR        U       TIOCINQ, TIOCLINUX, TIOCSSOFTCAR, XTABS,"
  - "stdlib/src/termios.rs:86:22         illumos             U       target_os = \"illumos\","
  - "stdlib/src/termios.rs:107:18        CBAUDEX             U       B576000, CBAUDEX,"
  - "stdlib/src/termios.rs:112:22        illumos             U       target_os = \"illumos\","
  - "stdlib/src/termios.rs:121:22        illumos             U       target_os = \"illumos\","
  - "stdlib/src/termios.rs:133:22        illumos             U       target_os = \"illumos\","
  - "stdlib/src/termios.rs:138:38        CIBAUD              U       os::target::{CBAUD, CIBAUD, IUCLC, OLCUC, XCASE"
  - "stdlib/src/termios.rs:138:46        IUCLC               U       target::{CBAUD, CIBAUD, IUCLC, OLCUC, XCASE};"
  - "stdlib/src/termios.rs:138:53        OLCUC               U       CBAUD, CIBAUD, IUCLC, OLCUC, XCASE};"
  - "stdlib/src/termios.rs:138:60        XCASE               U       CIBAUD, IUCLC, OLCUC, XCASE};"
  - "stdlib/src/termios.rs:151:31        VSWTC               U       termios::os::target::{VSWTC, VSWTC as VSWTCH};"
  - "stdlib/src/termios.rs:151:38        VSWTC               U       os::target::{VSWTC, VSWTC as VSWTCH};"
  - "stdlib/src/termios.rs:151:47        VSWTCH              U       target::{VSWTC, VSWTC as VSWTCH};"
  - "stdlib/src/termios.rs:154:31        VSWTCH              U       termios::os::target::{VSWTCH, VSWTCH as VSWTC};"
  - "stdlib/src/termios.rs:154:39        VSWTCH              U       os::target::{VSWTCH, VSWTCH as VSWTC};"
  - "stdlib/src/termios.rs:154:49        VSWTC               U       :{VSWTCH, VSWTCH as VSWTC};"
  - "stdlib/src/termios.rs:172:13        noncanon            U       let noncanon = (termios.c_lflag"
  - "stdlib/src/termios.rs:178:51        noncanon            U       | termios::VTIME if noncanon => vm.ctx.new_int(c"
  - "stdlib/src/unicodedata.rs:1:1\tNo issues found"
  - "stdlib/src/uuid.rs:1:1\tNo issues found"
  - "stdlib/src/zlib.rs:1:1\tNo issues found"
  - "vm/build.rs:38:10       sysvars     U       \"sysvars! {{ {} }}\","
  - "vm/Cargo.toml:13:25         wasmbind        U       default = [\"compiler\", \"wasmbind\"]"
  - "vm/Cargo.toml:26:1          wasmbind        U       wasmbind = [\"chrono/wasmbind"
  - "vm/Cargo.toml:26:21         wasmbind        U       wasmbind = [\"chrono/wasmbind\", \"getrandom/js\", \"wasm"
  - "vm/Cargo.toml:26:33         getrandom       U       \"chrono/wasmbind\", \"getrandom/js\", \"wasm-bindgen\""
  - "vm/Cargo.toml:50:43         wasmbind        U       true, features = [\"wasmbind\"] }"
  - "vm/Cargo.toml:52:1          getrandom       U       getrandom = { workspace = true"
  - "vm/Cargo.toml:71:1          thiserror       U       thiserror = { workspace = true"
  - "vm/Cargo.toml:75:1          caseless        U       caseless = \"0.2.1\""
  - "vm/Cargo.toml:78:1          memoffset       U       memoffset = \"0.9.1\""
  - "vm/Cargo.toml:94:1          rustix          U       rustix = { workspace = true"
  - "vm/Cargo.toml:101:1         rustyline       U       rustyline = { workspace = true"
  - "vm/Cargo.toml:110:1         widestring      U       widestring = { workspace = true"
  - "vm/Cargo.toml:147:1         getrandom       U       getrandom = { workspace = true"
  - "vm/Lib/python_builtins/__reducelib.py:50:17         slotnames       U       names = slotnames(cls) # not checking"
  - "vm/Lib/python_builtins/__reducelib.py:74:5          slotnames       U       def slotnames(cls):"
  - "vm/Lib/python_builtins/__reducelib.py:79:32         slotnames       U       return cls.__dict__[\"__slotnames__\"]"
  - "vm/Lib/python_builtins/__reducelib.py:83:5          slotnames       U       slotnames = copyreg._slotnames"
  - "vm/Lib/python_builtins/__reducelib.py:83:26         slotnames       U       slotnames = copyreg._slotnames(cls)"
  - "vm/Lib/README.md:1:1\tNo issues found"
  - "vm/src/anystr.rs:36:9           keepends            U       pub keepends: bool,"
  - "vm/src/anystr.rs:183:9          splitw              U       splitw: SW,"
  - "vm/src/anystr.rs:199:13         splitw              U       splitw(self, maxsplit, vm)"
  - "vm/src/anystr.rs:211:11         startsendswith      U       fn py_startsendswith<'a, T, F>("
  - "vm/src/anystr.rs:380:28         keepends            U       let keep = options.keepends as usize;"
  - "vm/src/buffer.rs:456:24         primint     U       macro_rules! make_pack_primint {"
  - "vm/src/buffer.rs:505:11         primint     U       make_pack_primint!(i8);"
  - "vm/src/buffer.rs:506:11         primint     U       make_pack_primint!(u8);"
  - "vm/src/buffer.rs:507:11         primint     U       make_pack_primint!(i16);"
  - "vm/src/buffer.rs:508:11         primint     U       make_pack_primint!(u16);"
  - "vm/src/builtins/asyncgenerator.rs:5:16          Coro    U       coroutine::Coro,"
  - "vm/src/builtins/asyncgenerator.rs:18:12         Coro    U       inner: Coro,"
  - "vm/src/builtins/asyncgenerator.rs:31:15         coro    U       pub fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/asyncgenerator.rs:31:31         Coro    U       fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/asyncgenerator.rs:37:20         Coro    U       inner: Coro::new(frame, name),"
  - "vm/src/builtins/bool.rs:1:1\tNo issues found"
  - "vm/src/builtins/builtin_func.rs:1:1\tNo issues found"
  - "vm/src/builtins/bytearray.rs:10:5           bytesinner          U       bytesinner::{"
  - "vm/src/builtins/bytearray.rs:151:8          irepeat             U       fn irepeat(zelf: &Py<Self>, n:"
  - "vm/src/builtins/bytearray.rs:378:19         startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/bytearray.rs:399:19         startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/bytearray.rs:551:15         irepeat             U       Self::irepeat(&zelf, value.into()"
  - "vm/src/builtins/bytearray.rs:623:26         irepeat             U       PyByteArray::irepeat(self, 2, vm)"
  - "vm/src/builtins/bytearray.rs:828:30         irepeat             U       PyByteArray::irepeat(&zelf, n, vm)?;"
  - "vm/src/builtins/bytes.rs:7:5            bytesinner          U       bytesinner::{"
  - "vm/src/builtins/bytes.rs:302:19         startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/bytes.rs:322:19         startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/bytes.rs:544:45         emplemented         U       'utf-8' and 'ascii' emplemented"
  - "vm/src/builtins/classmethod.rs:1:1\tNo issues found"
  - "vm/src/builtins/code.rs:24:8        posonlyargcount     U       co_posonlyargcount: OptionalArg<u32>,"
  - "vm/src/builtins/code.rs:26:8        argcount            U       co_argcount: OptionalArg<u32>,"
  - "vm/src/builtins/code.rs:28:8        kwonlyargcount      U       co_kwonlyargcount: OptionalArg<u32>,"
  - "vm/src/builtins/code.rs:32:8        firstlineno         U       co_firstlineno: OptionalArg<u32>,"
  - "vm/src/builtins/code.rs:244:11      posonlyargcount     U       fn co_posonlyargcount(&self) -> usize {"
  - "vm/src/builtins/code.rs:249:11      argcount            U       fn co_argcount(&self) -> usize {"
  - "vm/src/builtins/code.rs:276:11      nlocals             U       fn co_nlocals(&self) -> usize {"
  - "vm/src/builtins/code.rs:281:11      firstlineno         U       fn co_firstlineno(&self) -> u32 {"
  - "vm/src/builtins/code.rs:286:11      kwonlyargcount      U       fn co_kwonlyargcount(&self) -> usize {"
  - "vm/src/builtins/code.rs:338:46      posonlyargcount     U       count = match args.co_posonlyargcount {"
  - "vm/src/builtins/code.rs:343:39      argcount            U       count = match args.co_argcount {"
  - "vm/src/builtins/code.rs:353:47      firstlineno         U       number = match args.co_firstlineno {"
  - "vm/src/builtins/code.rs:358:45      kwonlyargcount      U       count = match args.co_kwonlyargcount {"
  - "vm/src/builtins/complex.rs:56:61        coereced    U       complex originally or coereced into one"
  - "vm/src/builtins/complex.rs:119:11       fdiv        U       Ok(v1.fdiv(v2))"
  - "vm/src/builtins/coroutine.rs:4:16           Coro    U       coroutine::Coro,"
  - "vm/src/builtins/coroutine.rs:14:6           Coro    U       // PyCoro_Type in CPython"
  - "vm/src/builtins/coroutine.rs:16:12          Coro    U       inner: Coro,"
  - "vm/src/builtins/coroutine.rs:27:15          coro    U       pub fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/coroutine.rs:27:31          Coro    U       fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/coroutine.rs:33:20          Coro    U       inner: Coro::new(frame, name),"
  - "vm/src/builtins/coroutine.rs:49:30          coro    U       PyCoroutineWrapper { coro: zelf }"
  - "vm/src/builtins/coroutine.rs:126:5          coro    U       coro: PyRef<PyCoroutine>"
  - "vm/src/builtins/coroutine.rs:139:14         coro    U       self.coro.send(val, vm)"
  - "vm/src/builtins/coroutine.rs:150:14         coro    U       self.coro.throw(exc_type, exc"
  - "vm/src/builtins/descriptor.rs:29:8          vectorcall          U       // vectorcall: vectorcallfunc,"
  - "vm/src/builtins/descriptor.rs:29:20         vectorcallfunc      U       // vectorcall: vectorcallfunc,"
  - "vm/src/builtins/dict.rs:14:5        dictdatatype            U       dictdatatype::{self, DictKey},"
  - "vm/src/builtins/dict.rs:31:28       dictdatatype            U       type DictContentType = dictdatatype::Dict;"
  - "vm/src/builtins/dict.rs:158:27      dictdatatype            U       pub fn size(&self) -> dictdatatype::DictSize {"
  - "vm/src/builtins/dict.rs:285:13      dicted                  U       let dicted: Result<PyDictRef,"
  - "vm/src/builtins/dict.rs:286:28      dicted                  U       if let Ok(other) = dicted {"
  - "vm/src/builtins/dict.rs:401:13      dicted                  U       let dicted: Result<PyDictRef,"
  - "vm/src/builtins/dict.rs:402:28      dicted                  U       if let Ok(other) = dicted {"
  - "vm/src/builtins/dict.rs:818:23      dictdatatype            U       pub size: dictdatatype::DictSize,"
  - "vm/src/builtins/dict.rs:891:23      dictdatatype            U       pub size: dictdatatype::DictSize,"
  - "vm/src/builtins/dict.rs:978:10      reversekeyiterator      U       dict_reversekeyiterator_type,"
  - "vm/src/builtins/dict.rs:981:11      reversekeyiterator      U       \"dict_reversekeyiterator\","
  - "vm/src/builtins/dict.rs:1004:10     reverseitemiterator     U       dict_reverseitemiterator_type,"
  - "vm/src/builtins/dict.rs:1007:11     reverseitemiterator     U       \"dict_reverseitemiterator\","
  - "vm/src/builtins/dict.rs:1293:72     reversekeyiterator      U       context.types.dict_reversekeyiterator_type);"
  - "vm/src/builtins/dict.rs:1299:73     reverseitemiterator     U       context.types.dict_reverseitemiterator_type);"
  - "vm/src/builtins/enumerate.rs:19:7           pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/builtins/filter.rs:1:1\tNo issues found"
  - "vm/src/builtins/float.rs:1:1\tNo issues found"
  - "vm/src/builtins/frame.rs:57:10          lasti       U       fn f_lasti(&self) -> u32 {"
  - "vm/src/builtins/frame.rs:58:14          lasti       U       self.lasti()"
  - "vm/src/builtins/function.rs:2:5         jitfunc         U       mod jitfunc;"
  - "vm/src/builtins/function.rs:35:18       kwdefaults      U       defaults_and_kwdefaults: PyMutex<(Option<PyTupleRef"
  - "vm/src/builtins/function.rs:40:5        jitted          U       jitted_code: OnceCell<CompiledCode"
  - "vm/src/builtins/function.rs:50:27       kwdefaults      U       self.defaults_and_kwdefaults.traverse(tracer_fn)"
  - "vm/src/builtins/function.rs:73:26       kwdefaults      U       defaults_and_kwdefaults: PyMutex::new((defaults"
  - "vm/src/builtins/function.rs:78:13       jitted          U       jitted_code: OnceCell::new"
  - "vm/src/builtins/function.rs:93:13       nexpected       U       let nexpected_args = code.arg_count"
  - "vm/src/builtins/function.rs:99:16       starargs        U       // and starargs and kwargs."
  - "vm/src/builtins/function.rs:103:17      fastlocals      U       let mut fastlocals = frame.fastlocals.lock"
  - "vm/src/builtins/function.rs:103:36      fastlocals      U       mut fastlocals = frame.fastlocals.lock();"
  - "vm/src/builtins/function.rs:111:13      fastlocals      U       fastlocals.iter_mut().take(nexpected"
  - "vm/src/builtins/function.rs:111:40      nexpected       U       fastlocals.iter_mut().take(nexpected_args),"
  - "vm/src/builtins/function.rs:121:13      fastlocals      U       fastlocals[vararg_offset] = Some"
  - "vm/src/builtins/function.rs:125:24      nexpected       U       if nargs > nexpected_args {"
  - "vm/src/builtins/function.rs:129:21      nexpected       U       nexpected_args,"
  - "vm/src/builtins/function.rs:138:13      fastlocals      U       fastlocals[vararg_offset] = Some"
  - "vm/src/builtins/function.rs:144:13      argpos          U       let argpos = |range: std::ops:"
  - "vm/src/builtins/function.rs:154:17      posonly         U       let mut posonly_passed_as_kwarg = Vec"
  - "vm/src/builtins/function.rs:158:32      argpos          U       if let Some(pos) = argpos(code.posonlyarg_count"
  - "vm/src/builtins/function.rs:170:23      argpos          U       } else if argpos(0..code.posonlyarg_count"
  - "vm/src/builtins/function.rs:171:17      posonly         U       posonly_passed_as_kwarg.push"
  - "vm/src/builtins/function.rs:180:13      posonly         U       if !posonly_passed_as_kwarg.is_empty"
  - "vm/src/builtins/function.rs:184:17      posonly         U       posonly_passed_as_kwarg.into"
  - "vm/src/builtins/function.rs:188:30      kwdefaults      U       let mut defaults_and_kwdefaults = None;"
  - "vm/src/builtins/function.rs:192:30      kwdefaults      U       defaults_and_kwdefaults"
  - "vm/src/builtins/function.rs:199:20      nexpected       U       if nargs < nexpected_args {"
  - "vm/src/builtins/function.rs:201:17      ndefs           U       let ndefs = defaults.map_or(0"
  - "vm/src/builtins/function.rs:203:17      nrequired       U       let nrequired = code.arg_count as"
  - "vm/src/builtins/function.rs:203:55      ndefs           U       arg_count as usize - ndefs;"
  - "vm/src/builtins/function.rs:207:47      nrequired       U       missing: Vec<_> = (nargs..nrequired)"
  - "vm/src/builtins/function.rs:251:42      nrequired       U       i = n.saturating_sub(nrequired);"
  - "vm/src/builtins/function.rs:256:48      nrequired       U       slot = &mut fastlocals[nrequired + i];"
  - "vm/src/builtins/function.rs:306:21      jitted          U       if let Some(jitted_code) = self.jitted"
  - "vm/src/builtins/function.rs:306:41      jitted          U       jitted_code) = self.jitted_code.get() {"
  - "vm/src/builtins/function.rs:307:19      jitfunc         U       match jitfunc::get_jit_args(self,"
  - "vm/src/builtins/function.rs:307:59      jitted          U       args(self, &func_args, jitted_code, vm) {"
  - "vm/src/builtins/function.rs:343:16      coro            U       let is_coro = code.flags.contains"
  - "vm/src/builtins/function.rs:344:27      coro            U       match (is_gen, is_coro) {"
  - "vm/src/builtins/function.rs:508:33      jitfunc         U       let arg_types = jitfunc::get_jit_arg_types("
  - "vm/src/builtins/function.rs:510:36      jitfunc         U       .map_err(|err| jitfunc::new_jit_error(err.to"
  - "vm/src/builtins/function.rs:644:13      funcself        U       let funcself = self.object.clone"
  - "vm/src/builtins/function.rs:646:29      funcself        U       (builtins_getattr, (funcself, funcname))"
  - "vm/src/builtins/function/jitfunc.rs:11:17       thiserror       U       #[derive(Debug, thiserror::Error)]"
  - "vm/src/builtins/function/jitfunc.rs:89:14       Jitting         U       \"Jitting function requires arguments"
  - "vm/src/builtins/function/jitfunc.rs:110:82      jitted          U       float can't be passed to jitted functions"
  - "vm/src/builtins/function/jitfunc.rs:136:5       jitted          U       jitted_code: &'a CompiledCode"
  - "vm/src/builtins/function/jitfunc.rs:139:24      jitted          U       let mut jit_args = jitted_code.args_builder()"
  - "vm/src/builtins/function/jitfunc.rs:172:20      kwdefaults      U       let (defaults, kwdefaults) = func.defaults_and"
  - "vm/src/builtins/function/jitfunc.rs:172:52      kwdefaults      U       = func.defaults_and_kwdefaults.lock().clone();"
  - "vm/src/builtins/function/jitfunc.rs:185:37      kwdefaults      U       kw_only_defaults) = kwdefaults {"
  - "vm/src/builtins/generator.rs:8:16           Coro            U       coroutine::Coro,"
  - "vm/src/builtins/generator.rs:19:12          Coro            U       inner: Coro,"
  - "vm/src/builtins/generator.rs:30:15          coro            U       pub fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/generator.rs:30:31          Coro            U       fn as_coro(&self) -> &Coro {"
  - "vm/src/builtins/generator.rs:36:20          Coro            U       inner: Coro::new(frame, name),"
  - "vm/src/builtins/generator.rs:63:11          yieldfrom       U       fn gi_yieldfrom(&self, _vm: &VirtualMachine"
  - "vm/src/builtins/genericalias.rs:254:9       tvars       U       fn subs_tvars("
  - "vm/src/builtins/genericalias.rs:257:5       argitems    U       argitems: &[PyObjectRef],"
  - "vm/src/builtins/genericalias.rs:271:37      argitems    U       argitems[idx].clone()"
  - "vm/src/builtins/genericalias.rs:322:22      tvars       U       subs_tvars(arg.clone(), &parameters"
  - "vm/src/builtins/getset.rs:1:1\tNo issues found"
  - "vm/src/builtins/int.rs:4:5          bytesinner      U       bytesinner::PyBytesInner,"
  - "vm/src/builtins/int.rs:535:25       halfpow         U       let halfpow10 = &pow10 / BigInt"
  - "vm/src/builtins/int.rs:537:40       halfpow         U       if remainder > halfpow10 || (remainder == halfpow"
  - "vm/src/builtins/int.rs:537:67       halfpow         U       halfpow10 || (remainder == halfpow10 && quotient.is_odd"
  - "vm/src/builtins/iter.rs:181:7       pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/builtins/list.rs:83:8        irepeat             U       fn irepeat(zelf: PyRef<Self>, n"
  - "vm/src/builtins/list.rs:93:7        pytraverse          U       #[pytraverse(skip)]"
  - "vm/src/builtins/list.rs:245:15      irepeat             U       Self::irepeat(zelf, n.into(), vm)"
  - "vm/src/builtins/list.rs:319:26      keyfunc             U       // this prevents keyfunc from messing with the"
  - "vm/src/builtins/list.rs:454:28      irepeat             U       Ok(PyList::irepeat(zelf.to_owned(), n,"
  - "vm/src/builtins/list.rs:575:40      reverseiterator     U       false, name = \"list_reverseiterator\", traverse)]"
  - "vm/src/builtins/list.rs:583:24      reverseiterator     U       ctx.types.list_reverseiterator_type"
  - "vm/src/builtins/list.rs:625:69      reverseiterator     U       context.types.list_reverseiterator_type);"
  - "vm/src/builtins/map.rs:1:1\tNo issues found"
  - "vm/src/builtins/mappingproxy.rs:1:1\tNo issues found"
  - "vm/src/builtins/memory.rs:8:5           bytesinner      U       bytesinner::bytes_to_hex,"
  - "vm/src/builtins/memory.rs:47:37         memeoryview     U       the possible another memeoryview is viewing from it"
  - "vm/src/builtins/memory.rs:107:47        memeoryview     U       function to create the memeoryview if the buffer is exporting"
  - "vm/src/builtins/memory.rs:150:29        suboffset       U       let (shape, stride, suboffset) = self.desc.dim_desc"
  - "vm/src/builtins/memory.rs:154:47        suboffset       U       as isize * stride + suboffset;"
  - "vm/src/builtins/memory.rs:177:29        suboffset       U       let (shape, stride, suboffset) = self.desc.dim_desc"
  - "vm/src/builtins/memory.rs:181:47        suboffset       U       as isize * stride + suboffset;"
  - "vm/src/builtins/memory.rs:253:20        suboffset       U       for (_, _, suboffset) in self.desc.dim_desc"
  - "vm/src/builtins/memory.rs:615:8         suboffsets      U       fn suboffsets(&self, vm: &VirtualMachine"
  - "vm/src/builtins/memory.rs:644:18        fortain         U       // TODO: fortain order"
  - "vm/src/builtins/memory.rs:702:8         tobytes         U       fn tobytes(&self, vm: &VirtualMachine"
  - "vm/src/builtins/memory.rs:710:8         tolist          U       fn tolist(&self, vm: &VirtualMachine"
  - "vm/src/builtins/memory.rs:724:8         toreadonly      U       fn toreadonly(&self, vm: &VirtualMachine"
  - "vm/src/builtins/mod.rs:1:1\tNo issues found"
  - "vm/src/builtins/module.rs:20:18         traverseproc    U       // traverse: traverseproc"
  - "vm/src/builtins/module.rs:22:14         freefunc        U       // free: freefunc"
  - "vm/src/builtins/module.rs:51:8          weaklist        U       // weaklist"
  - "vm/src/builtins/module.rs:125:73        dictoffsets     U       dict method above once dictoffsets land"
  - "vm/src/builtins/namespace.rs:1:1\tNo issues found"
  - "vm/src/builtins/object.rs:80:71         slotnames           U       identifier!(vm.ctx, __slotnames__)) {"
  - "vm/src/builtins/object.rs:85:31         slotnames           U       \"{:.200}.__slotnames__ should be a list or"
  - "vm/src/builtins/object.rs:93:17         slotnames           U       let copyreg_slotnames = copyreg.get_attr("
  - "vm/src/builtins/object.rs:93:48         slotnames           U       copyreg.get_attr(\"_slotnames\", vm)?;"
  - "vm/src/builtins/object.rs:94:30         slotnames           U       slot_names = copyreg_slotnames.call((typ.to_owned("
  - "vm/src/builtins/object.rs:136:33        weaklistoffset      U       if obj.class().slots.weaklistoffset > 0 {"
  - "vm/src/builtins/property.rs:1:1\tNo issues found"
  - "vm/src/builtins/range.rs:527:35         longrange       U       module = false, name = \"longrange_iterator\")]"
  - "vm/src/builtins/set.rs:13:5         dictdatatype    U       dictdatatype::{self, DictSize},"
  - "vm/src/builtins/set.rs:33:27        dictdatatype    U       type SetContentType = dictdatatype::Dict<()>;"
  - "vm/src/builtins/set.rs:463:48       frozensets      U       patterns arising in nested frozensets"
  - "vm/src/builtins/singletons.rs:1:1\tNo issues found"
  - "vm/src/builtins/slice.rs:204:15         XXPRIME     U       const XXPRIME_1: PyUHash = if cfg"
  - "vm/src/builtins/slice.rs:209:15         XXPRIME     U       const XXPRIME_2: PyUHash = if cfg"
  - "vm/src/builtins/slice.rs:214:15         XXPRIME     U       const XXPRIME_5: PyUHash = if cfg"
  - "vm/src/builtins/slice.rs:225:23         XXPRIME     U       let mut acc = XXPRIME_5;"
  - "vm/src/builtins/slice.rs:231:54         XXPRIME     U       add(lane.wrapping_mul(XXPRIME_2));"
  - "vm/src/builtins/staticmethod.rs:1:1\tNo issues found"
  - "vm/src/builtins/str.rs:454:48       cmpxchg             U       len, we don't need a cmpxchg loop, since it'll always"
  - "vm/src/builtins/str.rs:515:9        caseless            U       caseless::default_case_fold_str"
  - "vm/src/builtins/str.rs:650:19       startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/str.rs:670:19       startsendswith      U       substr.py_startsendswith("
  - "vm/src/builtins/str.rs:775:18       titlecased          U       /// Return a titlecased version of the string"
  - "vm/src/builtins/str.rs:784:39       titlecase           U       title.extend(c.to_titlecase());"
  - "vm/src/builtins/str.rs:789:48       titlecase           U       uppercase() || c.is_titlecase() {"
  - "vm/src/builtins/str.rs:844:27       Nonprintable        U       / false otherwise. Nonprintable characters are those"
  - "vm/src/builtins/str.rs:920:33       keepends            U       let range = if args.keepends {"
  - "vm/src/builtins/str.rs:1032:48      titlecase           U       the sequence is ASCII titlecase and the sequence is"
  - "vm/src/builtins/str.rs:1043:41      titlecase           U       uppercase() || c.is_titlecase() {"
  - "vm/src/builtins/str.rs:1611:21      Ωppercases          U       (\"Greek Ωppercases ...\", \"greek ωppercases"
  - "vm/src/builtins/str.rs:1611:45      ωppercases          U       ppercases ...\", \"greek ωppercases ...\"),"
  - "vm/src/builtins/str.rs:1612:21      ῼitlecases          U       (\"Greek ῼitlecases ...\", \"greek ῳitlecases"
  - "vm/src/builtins/str.rs:1612:45      ῳitlecases          U       itlecases ...\", \"greek ῳitlecases ...\"),"
  - "vm/src/builtins/str.rs:1623:16      Titlecased          U       \"A Titlecased Line\","
  - "vm/src/builtins/str.rs:1624:17      Titlecased          U       \"A\\nTitlecased Line\","
  - "vm/src/builtins/str.rs:1625:16      Titlecased          U       \"A Titlecased, Line\","
  - "vm/src/builtins/str.rs:1626:20      Ωppercases          U       \"Greek Ωppercases ...\","
  - "vm/src/builtins/str.rs:1627:20      ῼitlecases          U       \"Greek ῼitlecases ...\","
  - "vm/src/builtins/str.rs:1639:21      Titlecase           U       \"Not\\ta Titlecase String\","
  - "vm/src/builtins/str.rs:1640:21      Titlecase           U       \"Not--a Titlecase String\","
  - "vm/src/builtins/str.rs:1770:33      rmatch              U       (offset, _) in self.rmatch_indices(|c: char| c"
  - "vm/src/builtins/super.rs:32:28          supercheck      U       let obj_type = supercheck(typ.clone(), obj.clone"
  - "vm/src/builtins/super.rs:88:29          fastlocals      U       let obj = frame.fastlocals.lock()[0]"
  - "vm/src/builtins/super.rs:138:8          thisclass       U       fn thisclass(&self) -> PyTypeRef"
  - "vm/src/builtins/super.rs:239:4          supercheck      U       fn supercheck(ty: PyTypeRef, obj:"
  - "vm/src/builtins/super.rs:273:26         cmeth           U       def cmeth(cls, arg):\\n"
  - "vm/src/builtins/super.rs:274:30         cmeth           U       super().cmeth(arg)\\n\";"
  - "vm/src/builtins/traceback.rs:13:7           pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/builtins/traceback.rs:14:9           lasti           U       pub lasti: u32,"
  - "vm/src/builtins/traceback.rs:15:7           pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/builtins/traceback.rs:29:60          lasti           U       >, frame: FrameRef, lasti: u32, lineno: LineNumber"
  - "vm/src/builtins/traceback.rs:33:13          lasti           U       lasti,"
  - "vm/src/builtins/traceback.rs:44:11          lasti           U       fn tb_lasti(&self) -> u32 {"
  - "vm/src/builtins/traceback.rs:45:14          lasti           U       self.lasti"
  - "vm/src/builtins/tuple.rs:307:39         tuplesubclass       U       just return tup, or tuplesubclass(tup), which'll copy"
  - "vm/src/builtins/tuple.rs:308:12         structseq           U       // structseq)"
  - "vm/src/builtins/type.rs:454:51      stablized       U       intrinsics::likely once it is stablized"
  - "vm/src/builtins/union.rs:1:1\tNo issues found"
  - "vm/src/builtins/weakproxy.rs:1:1\tNo issues found"
  - "vm/src/builtins/weakref.rs:1:1\tNo issues found"
  - "vm/src/builtins/zip.rs:16:7         pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/byte.rs:1:1\tNo issues found"
  - "vm/src/bytesinner.rs:872:12         stringlib       U       // stringlib_replace in CPython"
  - "vm/src/bytesinner.rs:1075:48        byteset         U       offset) = haystack.find_byteset(ASCII_WHITESPACES)"
  - "vm/src/bytesinner.rs:1098:49        byteset         U       offset) = haystack.rfind_byteset(ASCII_WHITESPACES)"
  - "vm/src/bytesinner.rs:1150:13        unchunked       U       let unchunked = len - chunked;"
  - "vm/src/bytesinner.rs:1163:65        unchunked       U       .], &mut buf[j..j + unchunked * 2]).unwrap();"
  - "vm/src/bytesinner.rs:1169:13        unchunked       U       let unchunked = len - chunked;"
  - "vm/src/bytesinner.rs:1171:39        unchunked       U       encode_to_slice(&bytes[..unchunked], &mut buf[..unchunked"
  - "vm/src/bytesinner.rs:1171:62        unchunked       U       unchunked], &mut buf[..unchunked * 2]).unwrap();"
  - "vm/src/cformat.rs:90:24         formatfloat     U       // formatfloat in bytesobject.c generates"
  - "vm/src/cformat.rs:90:39         bytesobject     U       // formatfloat in bytesobject.c generates its own"
  - "vm/src/class.rs:1:1\tNo issues found"
  - "vm/src/codecs.rs:155:18         xmlcharrefreplace       U       \"xmlcharrefreplace_errors\" => xmlcharrefreplace"
  - "vm/src/codecs.rs:155:47         xmlcharrefreplace       U       xmlcharrefreplace_errors\" => xmlcharrefreplace_errors as EMPTY,"
  - "vm/src/codecs.rs:156:18         backslashreplace        U       \"backslashreplace_errors\" => backslashreplace"
  - "vm/src/codecs.rs:156:46         backslashreplace        U       backslashreplace_errors\" => backslashreplace_errors as EMPTY,"
  - "vm/src/codecs.rs:157:18         namereplace             U       \"namereplace_errors\" => namereplace"
  - "vm/src/codecs.rs:157:41         namereplace             U       namereplace_errors\" => namereplace_errors as EMPTY,"
  - "vm/src/codecs.rs:158:18         surrogatepass           U       \"surrogatepass_errors\" => surrogatepass"
  - "vm/src/codecs.rs:158:43         surrogatepass           U       surrogatepass_errors\" => surrogatepass_errors as EMPTY,"
  - "vm/src/codecs.rs:159:18         surrogateescape         U       \"surrogateescape_errors\" => surrogateescape"
  - "vm/src/codecs.rs:159:45         surrogateescape         U       surrogateescape_errors\" => surrogateescape_errors as EMPTY"
  - "vm/src/codecs.rs:168:15         xmlcharrefreplace       U       (\"xmlcharrefreplace\", methods[3].build_function"
  - "vm/src/codecs.rs:169:15         backslashreplace        U       (\"backslashreplace\", methods[4].build_function"
  - "vm/src/codecs.rs:170:15         namereplace             U       (\"namereplace\", methods[5].build_function"
  - "vm/src/codecs.rs:171:15         surrogatepass           U       (\"surrogatepass\", methods[6].build_function"
  - "vm/src/codecs.rs:172:15         surrogateescape         U       (\"surrogateescape\", methods[7].build_function"
  - "vm/src/codecs.rs:421:4          xmlcharrefreplace       U       fn xmlcharrefreplace_errors(err: PyObjectRef"
  - "vm/src/codecs.rs:437:4          backslashreplace        U       fn backslashreplace_errors(err: PyObjectRef"
  - "vm/src/codecs.rs:468:4          namereplace             U       fn namereplace_errors(err: PyObjectRef"
  - "vm/src/codecs.rs:562:4          surrogatepass           U       fn surrogatepass_errors(err: PyObjectRef"
  - "vm/src/codecs.rs:677:4          surrogateescape         U       fn surrogateescape_errors(err: PyObjectRef"
  - "vm/src/compiler.rs:19:21        thiserror       U       #[derive(Debug, thiserror::Error)]"
  - "vm/src/convert/into_object.rs:1:1\tNo issues found"
  - "vm/src/convert/mod.rs:1:1\tNo issues found"
  - "vm/src/convert/to_pyobject.rs:1:1\tNo issues found"
  - "vm/src/convert/transmute_from.rs:1:1\tNo issues found"
  - "vm/src/convert/try_from.rs:1:1\tNo issues found"
  - "vm/src/coroutine.rs:28:12       Coro            U       pub struct Coro {"
  - "vm/src/coroutine.rs:33:9        weakreflist     U       // _weakreflist"
  - "vm/src/coroutine.rs:50:6        Coro            U       impl Coro {"
  - "vm/src/coroutine.rs:52:9        Coro            U       Coro {"
  - "vm/src/coroutine.rs:100:35      lasti           U       value = if self.frame.lasti() > 0 {"
  - "vm/src/dictdatatype.rs:22:62        pyhash      U       compatible with actual pyhash value"
  - "vm/src/dictdatatype.rs:172:25       idxs        U       let mut idxs = GenIndexes::new(entry"
  - "vm/src/dictdatatype.rs:174:39       idxs        U       let index_index = idxs.next();"
  - "vm/src/dictdatatype.rs:177:56       idxs        U       index is generated by idxs"
  - "vm/src/dictdatatype.rs:553:17       idxs        U       let mut idxs = None;"
  - "vm/src/dictdatatype.rs:558:21       idxs        U       let idxs = idxs.get_or_insert"
  - "vm/src/dictdatatype.rs:693:29       usecases    U       dictionary. Typical usecases are:"
  - "vm/src/eval.rs:1:1\tNo issues found"
  - "vm/src/exceptions.rs:50:46          excepthook      U       chain by calling sys.excepthook"
  - "vm/src/exceptions.rs:64:19          excepthook      U       if let Ok(excepthook) = vm.sys_module.get"
  - "vm/src/exceptions.rs:64:57          excepthook      U       sys_module.get_attr(\"excepthook\", vm) {"
  - "vm/src/exceptions.rs:66:34          excepthook      U       if let Err(eh_exc) = excepthook.call((exc_type, exc"
  - "vm/src/exceptions.rs:67:55          excepthook      U       eh_exc, \"Error in sys.excepthook:\");"
  - "vm/src/exceptions.rs:214:17         rtext           U       let rtext = text.as_str().trim"
  - "vm/src/exceptions.rs:215:17         ltext           U       let ltext = rtext.trim_start_matches"
  - "vm/src/exceptions.rs:215:25         rtext           U       let ltext = rtext.trim_start_matches("
  - "vm/src/exceptions.rs:216:27         rtext           U       let spaces = (rtext.len() - ltext.len()"
  - "vm/src/exceptions.rs:216:41         ltext           U       spaces = (rtext.len() - ltext.len()) as isize;"
  - "vm/src/exceptions.rs:218:40         ltext           U       writeln!(output, \" {}\", ltext)?;"
  - "vm/src/exceptions.rs:240:25         caretspace      U       let caretspace = ltext.chars().collect"
  - "vm/src/exceptions.rs:240:38         ltext           U       let caretspace = ltext.chars().collect::<Vec"
  - "vm/src/exceptions.rs:253:25         caretspace      U       caretspace,"
  - "vm/src/exceptions.rs:846:48         winerror        U       after fixing `errno` / `winerror` problem"
  - "vm/src/exceptions.rs:851:13         excs            U       let excs = &ctx.exceptions;"
  - "vm/src/exceptions.rs:853:44         excs            U       eException::extend_class(ctx, excs.base_exception_type"
  - "vm/src/exceptions.rs:856:54         excs            U       PyBaseExceptionGroup, ctx, excs.base_exception_group"
  - "vm/src/exceptions.rs:857:61         excs            U       readonly_getset(\"message\", excs.base_exception_group"
  - "vm/src/exceptions.rs:858:67         excs            U       getset(\"exceptions\", excs.base_exception_group"
  - "vm/src/exceptions.rs:931:37         winerror        U       error.set_str_attr(\"winerror\", ctx.none(), ctx);"
  - "vm/src/exceptions.rs:1134:27        widestring      U       C> ToPyException for widestring::error::ContainsNul"
  - "vm/src/exceptions.rs:1418:29        winerror        U       if let Some(winerror) = new_args.args.get"
  - "vm/src/exceptions.rs:1419:36        winerror        U       zelf.set_attr(\"winerror\", winerror.clone(),"
  - "vm/src/exceptions.rs:1419:47        winerror        U       set_attr(\"winerror\", winerror.clone(), vm)?;"
  - "vm/src/format.rs:1:1\tNo issues found"
  - "vm/src/frame.rs:1:21        boxvec          U       use crate::common::{boxvec::BoxVec, lock::PyMutex"
  - "vm/src/frame.rs:12:16       Coro            U       coroutine::Coro,"
  - "vm/src/frame.rs:87:5        lasti           U       lasti: u32,"
  - "vm/src/frame.rs:91:6        Lasti           U       type Lasti = atomic::AtomicU32"
  - "vm/src/frame.rs:93:6        Lasti           U       type Lasti = std::cell::Cell<u"
  - "vm/src/frame.rs:99:9        fastlocals      U       pub fastlocals: PyMutex<Box<[Option"
  - "vm/src/frame.rs:105:64      lasti           U       duplicate of FrameState.lasti, but it's faster to"
  - "vm/src/frame.rs:108:9       lasti           U       pub lasti: Lasti,"
  - "vm/src/frame.rs:108:16      Lasti           U       pub lasti: Lasti,"
  - "vm/src/frame.rs:150:13      lasti           U       lasti: 0,"
  - "vm/src/frame.rs:154:13      fastlocals      U       fastlocals: PyMutex::new(vec![None"
  - "vm/src/frame.rs:160:13      lasti           U       lasti: Lasti::new(0),"
  - "vm/src/frame.rs:160:20      Lasti           U       lasti: Lasti::new(0),"
  - "vm/src/frame.rs:189:17      fastlocals      U       let fastlocals = self.fastlocals.lock"
  - "vm/src/frame.rs:189:35      fastlocals      U       let fastlocals = self.fastlocals.lock();"
  - "vm/src/frame.rs:190:46      fastlocals      U       in zip(&map[..j], &**fastlocals) {"
  - "vm/src/frame.rs:304:16      Lasti           U       lasti: &'a Lasti,"
  - "vm/src/frame.rs:350:13      instrs          U       let instrs = &self.code.instructions"
  - "vm/src/frame.rs:359:50      instrs          U       CodeUnit { op, arg } = instrs[idx];"
  - "vm/src/frame.rs:432:39      coro            U       thrower = if let Some(coro) = self.builtin_coro"
  - "vm/src/frame.rs:432:60      coro            U       coro) = self.builtin_coro(gen) {"
  - "vm/src/frame.rs:433:32      coro            U       Some(Either::A(coro))"
  - "vm/src/frame.rs:440:31      coro            U       Either::A(coro) => coro"
  - "vm/src/frame.rs:440:40      coro            U       Either::A(coro) => coro"
  - "vm/src/frame.rs:795:75      binop           U       op } => self.execute_binop(vm, op.get(arg)),"
  - "vm/src/frame.rs:797:30      binop           U       self.execute_binop_inplace(vm, op.get(arg"
  - "vm/src/frame.rs:802:74      unop            U       op } => self.execute_unop(vm, op.get(arg)),"
  - "vm/src/frame.rs:998:21      aiterable       U       let aiterable = self.pop_value();"
  - "vm/src/frame.rs:999:53      aiterable       U       call_special_method(&aiterable, identifier!(vm, __aiter"
  - "vm/src/frame.rs:1022:27     Coro            U       // _PyCoro_GetAwaitableIter in"
  - "vm/src/frame.rs:1544:66     Coro            U       PyObject) -> Option<&'a Coro> {"
  - "vm/src/frame.rs:1763:16     binop           U       fn execute_binop(&mut self, vm: &VirtualMachin"
  - "vm/src/frame.rs:1785:16     binop           U       fn execute_binop_inplace("
  - "vm/src/frame.rs:1813:16     unop            U       fn execute_unop(&mut self, vm: &VirtualMachin"
  - "vm/src/frame.rs:2065:64     boxvec          U       usize) -> crate::common::boxvec::Drain<PyObjectRef>"
  - "vm/src/function/argument.rs:120:13      kwargc      U       let kwargc = kwarg_names.len()"
  - "vm/src/function/argument.rs:121:13      posargc     U       let posargc = total_argc - kwargc"
  - "vm/src/function/argument.rs:121:36      kwargc      U       posargc = total_argc - kwargc;"
  - "vm/src/function/argument.rs:123:13      posargs     U       let posargs = args.by_ref().take"
  - "vm/src/function/argument.rs:123:42      posargc     U       args.by_ref().take(posargc).collect();"
  - "vm/src/function/argument.rs:128:19      posargs     U       args: posargs,"
  - "vm/src/function/argument.rs:278:53      keyqord     U       error(format!(\"Required keyqord only argument {name"
  - "vm/src/function/arithmetic.rs:1:1\tNo issues found"
  - "vm/src/function/buffer.rs:1:1\tNo issues found"
  - "vm/src/function/builtin.rs:74:26        sizedness       U       requirements of zero-sizedness apply, see that documentation"
  - "vm/src/function/either.rs:1:1\tNo issues found"
  - "vm/src/function/fspath.rs:65:48         osstr           U       b) => Self::bytes_as_osstr(b.as_bytes(), vm),"
  - "vm/src/function/fspath.rs:87:62         osstr           U       from(Self::bytes_as_osstr(b, vm)?),"
  - "vm/src/function/fspath.rs:97:15         widecstring     U       pub fn to_widecstring(&self, vm: &VirtualMachine"
  - "vm/src/function/fspath.rs:97:67         widestring      U       VirtualMachine) -> PyResult<widestring::WideCString> {"
  - "vm/src/function/fspath.rs:98:9          widestring      U       widestring::WideCString::from_os"
  - "vm/src/function/fspath.rs:102:21        osstr           U       pub fn bytes_as_osstr<'a>(b: &'a [u8], vm"
  - "vm/src/function/fspath.rs:103:41        osstr           U       common::os::bytes_as_osstr(b)"
  - "vm/src/function/getset.rs:138:13        noresult    U       fn into_noresult(self) -> PyResult<("
  - "vm/src/function/getset.rs:143:13        noresult    U       fn into_noresult(self) -> PyResult<("
  - "vm/src/function/getset.rs:150:13        noresult    U       fn into_noresult(self) -> PyResult<("
  - "vm/src/function/getset.rs:172:37        noresult    U       obj, value, vm).into_noresult()"
  - "vm/src/function/getset.rs:186:39        noresult    U       zelf, value, vm).into_noresult()"
  - "vm/src/function/method.rs:17:17         NOARGS          U       // METH_NOARGS and METH_O must not"
  - "vm/src/function/method.rs:18:18         NOARGS          U       // const NOARGS = 0x0004;"
  - "vm/src/function/method.rs:36:38         Stackless       U       bit is preserved for Stackless Python"
  - "vm/src/function/method.rs:37:18         STACKLESS       U       // const STACKLESS = 0x0100;"
  - "vm/src/function/method.rs:43:42         NOARGS          U       be combined with METH_NOARGS, METH_O, METH_CLASS"
  - "vm/src/function/mod.rs:1:1\tNo issues found"
  - "vm/src/function/number.rs:1:1\tNo issues found"
  - "vm/src/function/protocol.rs:16:7        pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/function/protocol.rs:79:5        iterfn          U       iterfn: Option<crate::types"
  - "vm/src/function/protocol.rs:95:43       iterfn          U       PyIter::new(match self.iterfn {"
  - "vm/src/function/protocol.rs:108:13      iterfn          U       let iterfn = {"
  - "vm/src/function/protocol.rs:110:17      iterfn          U       let iterfn = cls.mro_find_map("
  - "vm/src/function/protocol.rs:111:16      iterfn          U       if iterfn.is_none() && !cls.has"
  - "vm/src/function/protocol.rs:127:7       pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/import.rs:84:25          codeobj     U       let module = import_codeobj(vm, module_name, frozen"
  - "vm/src/import.rs:119:12         codeobj     U       import_codeobj(vm, module_name, code"
  - "vm/src/import.rs:132:12         codeobj     U       import_codeobj(vm, module_name, code"
  - "vm/src/import.rs:135:15         codeobj     U       pub fn import_codeobj("
  - "vm/src/import.rs:197:27         lasti       U       traceback.lasti,"
  - "vm/src/intern.rs:266:25         dictdatatype    U       AsRef<str> + crate::dictdatatype::DictKey + sealed::SealedMayb"
  - "vm/src/iter.rs:1:1\tNo issues found"
  - "vm/src/lib.rs:45:5          bytesinner      U       mod bytesinner;"
  - "vm/src/lib.rs:52:5          dictdatatype    U       mod dictdatatype;"
  - "vm/src/lib.rs:64:9          ospath          U       pub mod ospath;"
  - "vm/src/macros.rs:1:1\tNo issues found"
  - "vm/src/object/core.rs:169:51        weakrefs        U       have never been any weakrefs in this list"
  - "vm/src/object/core.rs:207:54        Weaks           U       actually own the PyObjectWeaks inside `list`, and every"
  - "vm/src/object/core.rs:225:32        arrayvec        U       // TODO: can be an arrayvec"
  - "vm/src/object/core.rs:367:26        memoffset       U       let offset = memoffset::offset_of!(PyInner"
  - "vm/src/object/core.rs:368:17        pyinner         U       let pyinner = (self as *const Self"
  - "vm/src/object/core.rs:369:60        pyinner         U       NonNull::new_unchecked(pyinner as *mut Py<Self>) }"
  - "vm/src/object/core.rs:1297:35       dfghjkl         U       obj = ctx.new_bytes(b\"dfghjkl\".to_vec());"
  - "vm/src/object/ext.rs:1:1\tNo issues found"
  - "vm/src/object/mod.rs:1:1\tNo issues found"
  - "vm/src/object/payload.rs:1:1\tNo issues found"
  - "vm/src/object/traverse_object.rs:54:56          maintaince      U       pointer* to a struct for maintaince weak ref, so no ownership"
  - "vm/src/object/traverse_object.rs:74:56          maintaince      U       pointer* to a struct for maintaince weak ref, so no ownership"
  - "vm/src/object/traverse.rs:29:50         Pyef    U       a `PyObjectRef` or `Pyef<T>` in `traverse()`"
  - "vm/src/ospath.rs:87:15          widecstring     U       pub fn to_widecstring(&self, vm: &VirtualMachine"
  - "vm/src/ospath.rs:87:67          widestring      U       VirtualMachine) -> PyResult<widestring::WideCString> {"
  - "vm/src/ospath.rs:88:9           widestring      U       widestring::WideCString::from_os"
  - "vm/src/ospath.rs:184:13         excp            U       let excp = self.error.to_pyexception"
  - "vm/src/ospath.rs:187:13         excp            U       excp.as_object()"
  - "vm/src/ospath.rs:192:13         excp            U       excp.as_object()"
  - "vm/src/ospath.rs:196:9          excp            U       excp"
  - "vm/src/prelude.rs:1:1\tNo issues found"
  - "vm/src/protocol/buffer.rs:38:7          pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/protocol/buffer.rs:40:7          pytraverse      U       #[pytraverse(skip)]"
  - "vm/src/protocol/buffer.rs:134:32        Manaully        U       wrap PyBuffer in the ManaullyDrop to prevent drop"
  - "vm/src/protocol/buffer.rs:169:25        suboffset       U       /// (shape, stride, suboffset) for each dimension"
  - "vm/src/protocol/buffer.rs:205:29        suboffset       U       for (shape, stride, suboffset) in self.dim_desc.iter"
  - "vm/src/protocol/buffer.rs:207:21        suboffset       U       assert!(suboffset >= 0);"
  - "vm/src/protocol/buffer.rs:241:29        suboffset       U       for (i, (_, stride, suboffset)) in indices"
  - "vm/src/protocol/buffer.rs:246:42        suboffset       U       as isize * stride + suboffset;"
  - "vm/src/protocol/buffer.rs:267:43        conti           U       segment<F>(&self, try_conti: bool, mut f: F)"
  - "vm/src/protocol/buffer.rs:275:16        conti           U       if try_conti && self.is_last_dim"
  - "vm/src/protocol/buffer.rs:282:35        CONTI           U       each_segment<F, const CONTI: bool>(&self, mut index"
  - "vm/src/protocol/buffer.rs:288:16        CONTI           U       if CONTI {"
  - "vm/src/protocol/buffer.rs:300:41        CONTI           U       for_each_segment::<F, CONTI>(index + suboffset,"
  - "vm/src/protocol/buffer.rs:306:47        conti           U       self, other: &Self, try_conti: bool, mut f: F)"
  - "vm/src/protocol/buffer.rs:314:16        conti           U       if try_conti && self.is_last_dim"
  - "vm/src/protocol/buffer.rs:321:25        CONTI           U       fn _zip_eq<F, const CONTI: bool>("
  - "vm/src/protocol/buffer.rs:335:16        CONTI           U       if CONTI {"
  - "vm/src/protocol/buffer.rs:386:22        fortain         U       // TODO: support fortain order"
  - "vm/src/protocol/callable.rs:1:1\tNo issues found"
  - "vm/src/protocol/iter.rs:128:13      getiter     U       let getiter = {"
  - "vm/src/protocol/iter.rs:132:21      getiter     U       if let Some(getiter) = getiter {"
  - "vm/src/protocol/iter.rs:132:32      getiter     U       let Some(getiter) = getiter {"
  - "vm/src/protocol/iter.rs:133:24      getiter     U       let iter = getiter(iter_target, vm)?;"
  - "vm/src/protocol/mapping.rs:1:1\tNo issues found"
  - "vm/src/protocol/mod.rs:1:1\tNo issues found"
  - "vm/src/protocol/number.rs:1:1\tNo issues found"
  - "vm/src/protocol/object.rs:9:5           bytesinner      U       bytesinner::ByteInnerNewOptions"
  - "vm/src/protocol/object.rs:12:5          dictdatatype    U       dictdatatype::DictKey,"
  - "vm/src/protocol/object.rs:31:44         opid            U       compare(self, other: Self, opid: PyComparisonOp, vm"
  - "vm/src/protocol/object.rs:32:27         opid            U       self._cmp(&other, opid, vm).map(|res| res.to"
  - "vm/src/protocol/object.rs:61:30         defaultvalue    U       fn length_hint(self, defaultvalue: usize, vm: &VirtualMachine"
  - "vm/src/protocol/object.rs:62:48         defaultvalue    U       opt(self)?.unwrap_or(defaultvalue))"
  - "vm/src/protocol/object.rs:326:41        binop           U       Err(vm.new_unsupported_binop_error(self, other, op"
  - "vm/src/protocol/object.rs:333:9         opid            U       opid: PyComparisonOp,"
  - "vm/src/protocol/object.rs:336:32        opid            U       match self._cmp(other, opid, vm)? {"
  - "vm/src/protocol/object.rs:482:30        icls            U       } else if let Ok(icls) ="
  - "vm/src/protocol/object.rs:485:20        icls            U       if icls.is(self.class()) {"
  - "vm/src/protocol/object.rs:488:21        icls            U       icls.fast_issubclass(typ"
  - "vm/src/protocol/object.rs:500:17        icls            U       let icls: PyObjectRef = self"
  - "vm/src/protocol/object.rs:501:28        icls            U       if vm.is_none(&icls) {"
  - "vm/src/protocol/sequence.rs:119:30      apear           U       / if both arguments apear to be sequences, try"
  - "vm/src/protocol/sequence.rs:157:30      apear           U       / if both arguments apear to be sequences, try"
  - "vm/src/protocol/sequence.rs:231:59      unsliceable     U       format!(\"'{}' object is unsliceable\", self.obj.class())"
  - "vm/src/py_io.rs:73:17       sval    U       let sval = s.as_str();"
  - "vm/src/py_io.rs:74:16       sval    U       if sval.is_empty() {"
  - "vm/src/py_io.rs:77:33       sval    U       if let Some(nonl) = sval.strip_suffix('\\n')"
  - "vm/src/py_serde.rs:1:1\tNo issues found"
  - "vm/src/readline.rs:61:5         rustyline       U       mod rustyline_readline {"
  - "vm/src/readline.rs:64:23        rustyline       U       pub trait Helper: rustyline::Helper {}"
  - "vm/src/readline.rs:65:13        rustyline       U       impl<T: rustyline::Helper> Helper for"
  - "vm/src/readline.rs:69:15        rustyline       U       repl: rustyline::Editor<H, rustyline"
  - "vm/src/readline.rs:69:36        rustyline       U       rustyline::Editor<H, rustyline::history::DefaultHistory"
  - "vm/src/recursion.rs:1:1\tNo issues found"
  - "vm/src/scope.rs:144:32      dictdatatype    U       sealed::Sealed + crate::dictdatatype::DictKey + Clone + ToPyObject"
  - "vm/src/sequence.rs:1:1\tNo issues found"
  - "vm/src/signal.rs:1:1\tNo issues found"
  - "vm/src/sliceable.rs:1:1\tNo issues found"
  - "vm/src/stdlib/ast.rs:45:17          numargs     U       let numargs = args.args.len();"
  - "vm/src/stdlib/ast.rs:46:16          numargs     U       if numargs > fields.len() {"
  - "vm/src/stdlib/ast.rs:59:30          numargs     U       if pos < numargs {"
  - "vm/src/stdlib/ast.rs:380:26         BDFL        U       const CO_FUTURE_BARRY_AS_BDFL: i32 = 0x400000;"
  - "vm/src/stdlib/ast.rs:395:26         BDFL        U       CO_FUTURE_BARRY_AS_BDFL"
  - "vm/src/stdlib/ast/gen.rs:1:1\tNo issues found"
  - "vm/src/stdlib/atexit.rs:1:22        exitfuncs       U       pub use atexit::_run_exitfuncs;"
  - "vm/src/stdlib/atexit.rs:36:17       exitfuncs       U       pub fn _run_exitfuncs(vm: &VirtualMachine"
  - "vm/src/stdlib/atexit.rs:41:65       exitfuncs       U       Error in atexit._run_exitfuncs\".to_owned()), func)"
  - "vm/src/stdlib/atexit.rs:50:9        ncallbacks      U       fn _ncallbacks(vm: &VirtualMachine"
  - "vm/src/stdlib/builtins.rs:401:42        breakpointhook      U       attr(vm.ctx.intern_str(\"breakpointhook\"), vm)"
  - "vm/src/stdlib/builtins.rs:404:58        breakpointhook      U       runtime_error(\"lost sys.breakpointhook\".to_owned())),"
  - "vm/src/stdlib/builtins.rs:434:26        normalish           U       // everything is normalish, we can just rely on"
  - "vm/src/stdlib/builtins.rs:434:57        rustyline           U       we can just rely on rustyline to use stdin/stdout"
  - "vm/src/stdlib/builtins.rs:584:45        iret                U       iterator).next(vm).map(|iret| match iret {"
  - "vm/src/stdlib/builtins.rs:584:57        iret                U       vm).map(|iret| match iret {"
  - "vm/src/stdlib/codecs.rs:84:29       unsync          U       handler: once_cell::unsync::OnceCell<PyObjectRef"
  - "vm/src/stdlib/codecs.rs:351:17      pycodecs        U       fn delegate_pycodecs("
  - "vm/src/stdlib/codecs.rs:358:38      pycodecs        U       module = vm.import(\"_pycodecs\", 0)?;"
  - "vm/src/stdlib/codecs.rs:363:27      pycodecs        U       macro_rules! delegate_pycodecs {"
  - "vm/src/stdlib/codecs.rs:368:22      pycodecs        U       delegate_pycodecs(&FUNC, stringify!($name"
  - "vm/src/stdlib/codecs.rs:374:18      pycodecs        U       delegate_pycodecs!(mbcs_encode, args,"
  - "vm/src/stdlib/codecs.rs:381:8       readbuffer      U       fn readbuffer_encode(args: FuncArgs"
  - "vm/src/stdlib/codecs.rs:382:28      readbuffer      U       delegate_pycodecs!(readbuffer_encode, args, vm)"
  - "vm/src/stdlib/collections.rs:81:12          appendleft      U       fn appendleft(&self, obj: PyObjectRef"
  - "vm/src/stdlib/collections.rs:142:12         extendleft      U       fn extendleft(&self, iter: PyObjectRef"
  - "vm/src/stdlib/collections.rs:224:12         popleft         U       fn popleft(&self, vm: &VirtualMachine"
  - "vm/src/stdlib/errno.rs:30:13        WSABASEERR                  U       WSABASEERR, WSADESCRIPTION_LEN"
  - "vm/src/stdlib/errno.rs:30:25        WSADESCRIPTION              U       WSABASEERR, WSADESCRIPTION_LEN, WSAEACCES, WSAEADDRINUSE"
  - "vm/src/stdlib/errno.rs:30:45        WSAEACCES                   U       WSADESCRIPTION_LEN, WSAEACCES, WSAEADDRINUSE, WSAEADDRNOTAV"
  - "vm/src/stdlib/errno.rs:30:71        WSAEADDRNOTAVAIL            U       WSAEACCES, WSAEADDRINUSE, WSAEADDRNOTAVAIL,"
  - "vm/src/stdlib/errno.rs:31:30        WSAEALREADY                 U       WSAEAFNOSUPPORT, WSAEALREADY, WSAEBADF, WSAECANCELLED"
  - "vm/src/stdlib/errno.rs:31:43        WSAEBADF                    U       WSAEAFNOSUPPORT, WSAEALREADY, WSAEBADF, WSAECANCELLED, WSAECONNABORT"
  - "vm/src/stdlib/errno.rs:31:53        WSAECANCELLED               U       WSAEALREADY, WSAEBADF, WSAECANCELLED, WSAECONNABORTED,"
  - "vm/src/stdlib/errno.rs:32:45        WSAEDESTADDRREQ             U       AECONNREFUSED, WSAECONNRESET, WSAEDESTADDRREQ, WSAEDISCON, WSAEDQUOT"
  - "vm/src/stdlib/errno.rs:32:62        WSAEDISCON                  U       AECONNRESET, WSAEDESTADDRREQ, WSAEDISCON, WSAEDQUOT, WSAEFAULT"
  - "vm/src/stdlib/errno.rs:32:74        WSAEDQUOT                   U       WSAEDESTADDRREQ, WSAEDISCON, WSAEDQUOT, WSAEFAULT,"
  - "vm/src/stdlib/errno.rs:32:85        WSAEFAULT                   U       WSAEDISCON, WSAEDQUOT, WSAEFAULT,"
  - "vm/src/stdlib/errno.rs:33:13        WSAEHOSTDOWN                U       WSAEHOSTDOWN, WSAEHOSTUNREACH, WSAEINPROGR"
  - "vm/src/stdlib/errno.rs:33:70        WSAEINVAL                   U       WSAEINPROGRESS, WSAEINTR, WSAEINVAL,"
  - "vm/src/stdlib/errno.rs:34:13        WSAEINVALIDPROCTABLE        U       WSAEINVALIDPROCTABLE, WSAEINVALIDPROVIDER"
  - "vm/src/stdlib/errno.rs:34:35        WSAEINVALIDPROVIDER         U       WSAEINVALIDPROCTABLE, WSAEINVALIDPROVIDER, WSAEISCONN, WSAELOOP"
  - "vm/src/stdlib/errno.rs:34:56        WSAEISCONN                  U       WSAEINVALIDPROVIDER, WSAEISCONN, WSAELOOP, WSAEMFILE"
  - "vm/src/stdlib/errno.rs:34:68        WSAELOOP                    U       EINVALIDPROVIDER, WSAEISCONN, WSAELOOP, WSAEMFILE,"
  - "vm/src/stdlib/errno.rs:34:78        WSAEMFILE                   U       WSAEISCONN, WSAELOOP, WSAEMFILE,"
  - "vm/src/stdlib/errno.rs:35:13        WSAEMSGSIZE                 U       WSAEMSGSIZE, WSAENAMETOOLONG, WSAENETDOWN"
  - "vm/src/stdlib/errno.rs:35:56        WSAENETRESET                U       WSAENAMETOOLONG, WSAENETDOWN, WSAENETRESET, WSAENETUNREACH, WSAENOBUFS"
  - "vm/src/stdlib/errno.rs:35:86        WSAENOBUFS                  U       WSAENETRESET, WSAENETUNREACH, WSAENOBUFS,"
  - "vm/src/stdlib/errno.rs:36:13        WSAENOMORE                  U       WSAENOMORE, WSAENOPROTOOPT, WSAENOTCONN"
  - "vm/src/stdlib/errno.rs:36:25        WSAENOPROTOOPT              U       WSAENOMORE, WSAENOPROTOOPT, WSAENOTCONN, WSAENOTEMPTY"
  - "vm/src/stdlib/errno.rs:36:41        WSAENOTCONN                 U       WSAENOMORE, WSAENOPROTOOPT, WSAENOTCONN, WSAENOTEMPTY, WSAENOTSOCK"
  - "vm/src/stdlib/errno.rs:36:54        WSAENOTEMPTY                U       WSAENOPROTOOPT, WSAENOTCONN, WSAENOTEMPTY, WSAENOTSOCK, WSAEOPNOTSUPP"
  - "vm/src/stdlib/errno.rs:36:81        WSAEOPNOTSUPP               U       WSAENOTEMPTY, WSAENOTSOCK, WSAEOPNOTSUPP,"
  - "vm/src/stdlib/errno.rs:37:13        WSAEPFNOSUPPORT             U       WSAEPFNOSUPPORT, WSAEPROCLIM, WSAEPROTONOSUPP"
  - "vm/src/stdlib/errno.rs:37:30        WSAEPROCLIM                 U       WSAEPFNOSUPPORT, WSAEPROCLIM, WSAEPROTONOSUPPORT"
  - "vm/src/stdlib/errno.rs:37:43        WSAEPROTONOSUPPORT          U       WSAEPFNOSUPPORT, WSAEPROCLIM, WSAEPROTONOSUPPORT, WSAEPROTOTYPE,"
  - "vm/src/stdlib/errno.rs:37:63        WSAEPROTOTYPE               U       WSAEPROTONOSUPPORT, WSAEPROTOTYPE,"
  - "vm/src/stdlib/errno.rs:38:13        WSAEPROVIDERFAILEDINIT      U       WSAEPROVIDERFAILEDINIT, WSAEREFUSED, WSAEREMOTE"
  - "vm/src/stdlib/errno.rs:38:37        WSAEREFUSED                 U       WSAEPROVIDERFAILEDINIT, WSAEREFUSED, WSAEREMOTE, WSAESHUTDOWN"
  - "vm/src/stdlib/errno.rs:38:50        WSAEREMOTE                  U       VIDERFAILEDINIT, WSAEREFUSED, WSAEREMOTE, WSAESHUTDOWN, WSAESOCKTNOSUP"
  - "vm/src/stdlib/errno.rs:38:62        WSAESHUTDOWN                U       WSAEREFUSED, WSAEREMOTE, WSAESHUTDOWN, WSAESOCKTNOSUPPORT"
  - "vm/src/stdlib/errno.rs:38:76        WSAESOCKTNOSUPPORT          U       WSAEREMOTE, WSAESHUTDOWN, WSAESOCKTNOSUPPORT,"
  - "vm/src/stdlib/errno.rs:39:13        WSAESTALE                   U       WSAESTALE, WSAETIMEDOUT, WSAETOOMANYREF"
  - "vm/src/stdlib/errno.rs:39:38        WSAETOOMANYREFS             U       WSAESTALE, WSAETIMEDOUT, WSAETOOMANYREFS, WSAEUSERS, WSAEWOULDBLOCK"
  - "vm/src/stdlib/errno.rs:39:55        WSAEUSERS                   U       SAETIMEDOUT, WSAETOOMANYREFS, WSAEUSERS, WSAEWOULDBLOCK, WSAHOST"
  - "vm/src/stdlib/errno.rs:39:82        WSAHOST                     U       WSAEUSERS, WSAEWOULDBLOCK, WSAHOST_NOT_FOUND,"
  - "vm/src/stdlib/errno.rs:40:13        WSAID                       U       WSAID_ACCEPTEX, WSAID_CONNECTEX"
  - "vm/src/stdlib/errno.rs:40:19        ACCEPTEX                    U       WSAID_ACCEPTEX, WSAID_CONNECTEX, WSAID"
  - "vm/src/stdlib/errno.rs:40:29        WSAID                       U       WSAID_ACCEPTEX, WSAID_CONNECTEX, WSAID_DISCONNECTEX"
  - "vm/src/stdlib/errno.rs:40:35        CONNECTEX                   U       WSAID_ACCEPTEX, WSAID_CONNECTEX, WSAID_DISCONNECTEX"
  - "vm/src/stdlib/errno.rs:40:46        WSAID                       U       ACCEPTEX, WSAID_CONNECTEX, WSAID_DISCONNECTEX, WSAID"
  - "vm/src/stdlib/errno.rs:40:52        DISCONNECTEX                U       WSAID_CONNECTEX, WSAID_DISCONNECTEX, WSAID_GETACCEPTEXSOCKADDRS"
  - "vm/src/stdlib/errno.rs:40:66        WSAID                       U       WSAID_DISCONNECTEX, WSAID_GETACCEPTEXSOCKADDRS"
  - "vm/src/stdlib/errno.rs:40:72        GETACCEPTEXSOCKADDRS        U       DISCONNECTEX, WSAID_GETACCEPTEXSOCKADDRS,"
  - "vm/src/stdlib/errno.rs:41:13        WSAID                       U       WSAID_TRANSMITFILE, WSAID"
  - "vm/src/stdlib/errno.rs:41:19        TRANSMITFILE                U       WSAID_TRANSMITFILE, WSAID_TRANSMITPACKETS"
  - "vm/src/stdlib/errno.rs:41:39        TRANSMITPACKETS             U       TRANSMITFILE, WSAID_TRANSMITPACKETS, WSAID_WSAPOLL, WSAID"
  - "vm/src/stdlib/errno.rs:41:62        WSAPOLL                     U       TRANSMITPACKETS, WSAID_WSAPOLL, WSAID_WSARECVMSG,"
  - "vm/src/stdlib/errno.rs:41:77        WSARECVMSG                  U       WSAID_WSAPOLL, WSAID_WSARECVMSG,"
  - "vm/src/stdlib/errno.rs:42:13        WSANOTINITIALISED           U       WSANOTINITIALISED, WSANO_DATA, WSANO_RECOVERY"
  - "vm/src/stdlib/errno.rs:42:32        WSANO                       U       WSANOTINITIALISED, WSANO_DATA, WSANO_RECOVERY"
  - "vm/src/stdlib/errno.rs:42:44        WSANO                       U       SANOTINITIALISED, WSANO_DATA, WSANO_RECOVERY, WSAPROTOCOL"
  - "vm/src/stdlib/errno.rs:42:60        WSAPROTOCOL                 U       DATA, WSANO_RECOVERY, WSAPROTOCOL_LEN, WSASERVICE_NOT"
  - "vm/src/stdlib/errno.rs:42:77        WSASERVICE                  U       RECOVERY, WSAPROTOCOL_LEN, WSASERVICE_NOT_FOUND,"
  - "vm/src/stdlib/errno.rs:43:13        WSASYSCALLFAILURE           U       WSASYSCALLFAILURE, WSASYSNOTREADY, WSASYS"
  - "vm/src/stdlib/errno.rs:43:32        WSASYSNOTREADY              U       WSASYSCALLFAILURE, WSASYSNOTREADY, WSASYS_STATUS_LEN,"
  - "vm/src/stdlib/errno.rs:43:48        WSASYS                      U       SCALLFAILURE, WSASYSNOTREADY, WSASYS_STATUS_LEN, WSATRY_AGAIN"
  - "vm/src/stdlib/errno.rs:43:67        WSATRY                      U       WSASYS_STATUS_LEN, WSATRY_AGAIN, WSATYPE_NOT_FOUND"
  - "vm/src/stdlib/errno.rs:43:81        WSATYPE                     U       STATUS_LEN, WSATRY_AGAIN, WSATYPE_NOT_FOUND,"
  - "vm/src/stdlib/errno.rs:44:13        WSAVERNOTSUPPORTED          U       WSAVERNOTSUPPORTED,"
  - "vm/src/stdlib/errno.rs:49:13        errname                     U       ($($errname:ident),*$(,)?) => {"
  - "vm/src/stdlib/errno.rs:51:30        errname                     U       $(pub const $errname: i32 = windows_sys:"
  - "vm/src/stdlib/errno.rs:51:94        errname                     U       Networking::WinSock:: [<WSA $errname>] as i32;)*"
  - "vm/src/stdlib/errno.rs:62:44        winerrs                     U       should be here once winerrs are translated to errnos"
  - "vm/src/stdlib/errno.rs:62:70        errnos                      U       winerrs are translated to errnos but it messes up some"
  - "vm/src/stdlib/errno.rs:65:15        WSAHOS                      U       pub const WSAHOS: i32 = WSAHOST_NOT_FOUND"
  - "vm/src/stdlib/errno.rs:65:29        WSAHOST                     U       const WSAHOS: i32 = WSAHOST_NOT_FOUND;"
  - "vm/src/stdlib/errno.rs:531:31       WSASY                       U       TODO: e!(cfg(windows), WSASY),"
  - "vm/src/stdlib/errno.rs:532:22       WSAEHOSTDOWN                U       e!(cfg(windows), WSAEHOSTDOWN),"
  - "vm/src/stdlib/errno.rs:536:22       WSAELOOP                    U       e!(cfg(windows), WSAELOOP),"
  - "vm/src/stdlib/errno.rs:537:22       WSAEMFILE                   U       e!(cfg(windows), WSAEMFILE),"
  - "vm/src/stdlib/errno.rs:538:22       WSAESTALE                   U       e!(cfg(windows), WSAESTALE),"
  - "vm/src/stdlib/errno.rs:539:22       WSAVERNOTSUPPORTED          U       e!(cfg(windows), WSAVERNOTSUPPORTED),"
  - "vm/src/stdlib/errno.rs:541:22       WSAEPROCLIM                 U       e!(cfg(windows), WSAEPROCLIM),"
  - "vm/src/stdlib/errno.rs:542:22       WSAEFAULT                   U       e!(cfg(windows), WSAEFAULT),"
  - "vm/src/stdlib/errno.rs:543:22       WSANOTINITIALISED           U       e!(cfg(windows), WSANOTINITIALISED),"
  - "vm/src/stdlib/errno.rs:544:22       WSAEUSERS                   U       e!(cfg(windows), WSAEUSERS),"
  - "vm/src/stdlib/errno.rs:545:31       WSAMAKEASYNCREPL            U       TODO: e!(cfg(windows), WSAMAKEASYNCREPL),"
  - "vm/src/stdlib/errno.rs:546:22       WSAENOPROTOOPT              U       e!(cfg(windows), WSAENOPROTOOPT),"
  - "vm/src/stdlib/errno.rs:549:22       WSAENOTEMPTY                U       e!(cfg(windows), WSAENOTEMPTY),"
  - "vm/src/stdlib/errno.rs:550:22       WSAESHUTDOWN                U       e!(cfg(windows), WSAESHUTDOWN),"
  - "vm/src/stdlib/errno.rs:552:22       WSAETOOMANYREFS             U       e!(cfg(windows), WSAETOOMANYREFS),"
  - "vm/src/stdlib/errno.rs:553:22       WSAEACCES                   U       e!(cfg(windows), WSAEACCES),"
  - "vm/src/stdlib/errno.rs:554:31       WSATR                       U       TODO: e!(cfg(windows), WSATR),"
  - "vm/src/stdlib/errno.rs:555:22       WSABASEERR                  U       e!(cfg(windows), WSABASEERR),"
  - "vm/src/stdlib/errno.rs:556:31       WSADESCRIPTIO               U       TODO: e!(cfg(windows), WSADESCRIPTIO),"
  - "vm/src/stdlib/errno.rs:557:22       WSAEMSGSIZE                 U       e!(cfg(windows), WSAEMSGSIZE),"
  - "vm/src/stdlib/errno.rs:558:22       WSAEBADF                    U       e!(cfg(windows), WSAEBADF),"
  - "vm/src/stdlib/errno.rs:560:31       WSAGETSELECTERRO            U       TODO: e!(cfg(windows), WSAGETSELECTERRO),"
  - "vm/src/stdlib/errno.rs:562:22       WSAENOBUFS                  U       e!(cfg(windows), WSAENOBUFS),"
  - "vm/src/stdlib/errno.rs:563:22       WSAEDISCON                  U       e!(cfg(windows), WSAEDISCON),"
  - "vm/src/stdlib/errno.rs:565:22       WSAEPROTOTYPE               U       e!(cfg(windows), WSAEPROTOTYPE),"
  - "vm/src/stdlib/errno.rs:566:22       WSAHOS                      U       e!(cfg(windows), WSAHOS),"
  - "vm/src/stdlib/errno.rs:568:22       WSAEADDRNOTAVAIL            U       e!(cfg(windows), WSAEADDRNOTAVAIL),"
  - "vm/src/stdlib/errno.rs:569:22       WSAEALREADY                 U       e!(cfg(windows), WSAEALREADY),"
  - "vm/src/stdlib/errno.rs:570:22       WSAEPROTONOSUPPORT          U       e!(cfg(windows), WSAEPROTONOSUPPORT),"
  - "vm/src/stdlib/errno.rs:571:22       WSASYSNOTREADY              U       e!(cfg(windows), WSASYSNOTREADY),"
  - "vm/src/stdlib/errno.rs:573:22       WSAEPFNOSUPPORT             U       e!(cfg(windows), WSAEPFNOSUPPORT),"
  - "vm/src/stdlib/errno.rs:574:22       WSAEOPNOTSUPP               U       e!(cfg(windows), WSAEOPNOTSUPP),"
  - "vm/src/stdlib/errno.rs:575:22       WSAEISCONN                  U       e!(cfg(windows), WSAEISCONN),"
  - "vm/src/stdlib/errno.rs:576:22       WSAEDQUOT                   U       e!(cfg(windows), WSAEDQUOT),"
  - "vm/src/stdlib/errno.rs:577:22       WSAENOTCONN                 U       e!(cfg(windows), WSAENOTCONN),"
  - "vm/src/stdlib/errno.rs:578:22       WSAEREMOTE                  U       e!(cfg(windows), WSAEREMOTE),"
  - "vm/src/stdlib/errno.rs:579:22       WSAEINVAL                   U       e!(cfg(windows), WSAEINVAL),"
  - "vm/src/stdlib/errno.rs:581:31       WSAGETSELECTEVEN            U       TODO: e!(cfg(windows), WSAGETSELECTEVEN),"
  - "vm/src/stdlib/errno.rs:582:22       WSAESOCKTNOSUPPORT          U       e!(cfg(windows), WSAESOCKTNOSUPPORT),"
  - "vm/src/stdlib/errno.rs:583:31       WSAGETASYNCERRO             U       TODO: e!(cfg(windows), WSAGETASYNCERRO),"
  - "vm/src/stdlib/errno.rs:584:31       WSAMAKESELECTREPL           U       TODO: e!(cfg(windows), WSAMAKESELECTREPL),"
  - "vm/src/stdlib/errno.rs:585:31       WSAGETASYNCBUFLE            U       TODO: e!(cfg(windows), WSAGETASYNCBUFLE),"
  - "vm/src/stdlib/errno.rs:586:22       WSAEDESTADDRREQ             U       e!(cfg(windows), WSAEDESTADDRREQ),"
  - "vm/src/stdlib/errno.rs:588:22       WSAENETRESET                U       e!(cfg(windows), WSAENETRESET),"
  - "vm/src/stdlib/errno.rs:589:31       WSAN                        U       TODO: e!(cfg(windows), WSAN),"
  - "vm/src/stdlib/errno.rs:655:9        ERFKILL                     U       ERFKILL"
  - "vm/src/stdlib/errno.rs:657:25       errnos                      U       // Solaris-specific errnos"
  - "vm/src/stdlib/errno.rs:660:30       illumos                     U       cfg(any(target_os = \"illumos\", target_os = \"solaris"
  - "vm/src/stdlib/errno.rs:664:30       illumos                     U       cfg(any(target_os = \"illumos\", target_os = \"solaris"
  - "vm/src/stdlib/errno.rs:667:24       errnos                      U       // MacOSX specific errnos"
  - "vm/src/stdlib/functools.rs:1:1\tNo issues found"
  - "vm/src/stdlib/imp.rs:53:48          unimportable    U       present but marked as unimportable, stops search)."
  - "vm/src/stdlib/imp.rs:89:25          pycs            U       fn check_hash_based_pycs(vm: &VirtualMachine"
  - "vm/src/stdlib/imp.rs:91:51          pycs            U       settings.check_hash_pycs_mode.clone())"
  - "vm/src/stdlib/imp.rs:172:9          withdata        U       withdata: OptionalArg<bool>,"
  - "vm/src/stdlib/imp.rs:177:12         withdata        U       if withdata.into_option().is_some"
  - "vm/src/stdlib/io.rs:30:17       winerror            U       let winerror = if let Some(winerror"
  - "vm/src/stdlib/io.rs:30:40       winerror            U       winerror = if let Some(winerror) = self.raw_os_error"
  - "vm/src/stdlib/io.rs:31:30       winerror            U       vm.new_pyobj(winerror)"
  - "vm/src/stdlib/io.rs:36:36       winerror            U       FIXME: manual setup winerror due to lack of OSError"
  - "vm/src/stdlib/io.rs:38:28       winerror            U       .set_attr(\"winerror\", vm.new_pyobj(winerror"
  - "vm/src/stdlib/io.rs:60:35       unsupportedop       U       or_init(|| _io::make_unsupportedop(ctx))"
  - "vm/src/stdlib/io.rs:678:13      bufobj              U       bufobj: PyObjectRef,"
  - "vm/src/stdlib/io.rs:682:68      bufobj              U       borrowed_object(vm, &bufobj)?;"
  - "vm/src/stdlib/io.rs:685:25      bufobj              U       if data.is(&bufobj) {"
  - "vm/src/stdlib/io.rs:934:21      memobj              U       let memobj = PyMemoryView::from"
  - "vm/src/stdlib/io.rs:937:70      memobj              U       unwrap(), \"write\", (memobj,))?"
  - "vm/src/stdlib/io.rs:940:21      writebuf            U       let writebuf = VecBuffer::from(v"
  - "vm/src/stdlib/io.rs:941:21      memobj              U       let memobj = PyMemoryView::from"
  - "vm/src/stdlib/io.rs:942:21      writebuf            U       writebuf.clone().into_pybuffer"
  - "vm/src/stdlib/io.rs:949:80      memobj              U       unwrap(), \"write\", (memobj.clone(),));"
  - "vm/src/stdlib/io.rs:951:17      memobj              U       memobj.release();"
  - "vm/src/stdlib/io.rs:952:31      writebuf            U       self.buffer = writebuf.take();"
  - "vm/src/stdlib/io.rs:1365:17     fileobj             U       pub fn repr_fileobj_name(obj: &PyObject"
  - "vm/src/stdlib/io.rs:1554:34     fileobj             U       let name_repr = repr_fileobj_name(zelf, vm)?;"
  - "vm/src/stdlib/io.rs:2062:11     cratio              U       b2cratio: f64,"
  - "vm/src/stdlib/io.rs:2266:19     cratio              U       b2cratio: 0.0,"
  - "vm/src/stdlib/io.rs:2305:21     encodefunc          U       let encodefunc = encoding_name.and"
  - "vm/src/stdlib/io.rs:2312:44     encodefunc          U       incremental_encoder, encodefunc))"
  - "vm/src/stdlib/io.rs:2564:44     cratio              U       skip_bytes = (textio.b2cratio * num_to_skip.chars"
  - "vm/src/stdlib/io.rs:2569:21     ndecoded            U       let ndecoded = decoder_decode(input"
  - "vm/src/stdlib/io.rs:2570:20     ndecoded            U       if ndecoded.chars <= num_to_skip"
  - "vm/src/stdlib/io.rs:2574:40     ndecoded            U       num_to_skip -= ndecoded;"
  - "vm/src/stdlib/io.rs:2594:25     ndecoded            U       let mut ndecoded = Utf8size::default"
  - "vm/src/stdlib/io.rs:2600:21     ndecoded            U       ndecoded += n;"
  - "vm/src/stdlib/io.rs:2708:27     encodefunc          U       let (encoder, encodefunc) = textio"
  - "vm/src/stdlib/io.rs:2737:37     encodefunc          U       chunk = if let Some(encodefunc) = *encodefunc {"
  - "vm/src/stdlib/io.rs:2737:52     encodefunc          U       Some(encodefunc) = *encodefunc {"
  - "vm/src/stdlib/io.rs:3020:25     cratio              U       (self.b2cratio.max(1.0) * size_hint"
  - "vm/src/stdlib/io.rs:3040:20     cratio              U       self.b2cratio = if char_len > 0 {"
  - "vm/src/stdlib/io.rs:3503:12     rawmode             U       fn rawmode(&self) -> &'static str"
  - "vm/src/stdlib/io.rs:3575:9      closefd             U       closefd: bool,"
  - "vm/src/stdlib/io.rs:3586:17     closefd             U       closefd: true,"
  - "vm/src/stdlib/io.rs:3621:26     ospath              U       if let Ok(crate::ospath::OsPathOrFd::Fd(fd)"
  - "vm/src/stdlib/io.rs:3645:25     rawmode             U       (file, mode.rawmode(), opts.closefd, opts"
  - "vm/src/stdlib/io.rs:3645:41     closefd             U       mode.rawmode(), opts.closefd, opts.opener).into_args"
  - "vm/src/stdlib/io.rs:3707:24     unsupportedop       U       pub(super) fn make_unsupportedop(ctx: &Context) -> PyTypeRef"
  - "vm/src/stdlib/io.rs:3785:9      ospath              U       ospath::{IOErrorBuilder, OsPath"
  - "vm/src/stdlib/io.rs:3883:47     NOINHERIT           U       :O_BINARY | libc::O_NOINHERIT;"
  - "vm/src/stdlib/io.rs:3898:9      closefd             U       closefd: AtomicCell<bool>,"
  - "vm/src/stdlib/io.rs:3910:9      closefd             U       closefd: bool,"
  - "vm/src/stdlib/io.rs:3981:49     widecstring         U       Fd::wopen(&path.to_widecstring(vm)?, flags, 0o666)"
  - "vm/src/stdlib/io.rs:4037:34     fileobj             U       let name_repr = repr_fileobj_name(zelf.as_object"
  - "vm/src/stdlib/itertools.rs:90:59        leat            U       from(\"function takes at leat 1 arguments (0 given"
  - "vm/src/stdlib/itertools.rs:1090:9       binop           U       binop: Option<PyObjectRef"
  - "vm/src/stdlib/itertools.rs:1110:17      binop           U       binop: args.func.flatten("
  - "vm/src/stdlib/itertools.rs:1130:17      binop           U       let binop = zelf.binop.clone("
  - "vm/src/stdlib/itertools.rs:1130:30      binop           U       let binop = zelf.binop.clone();"
  - "vm/src/stdlib/itertools.rs:1139:48      binop           U       vm.new_tuple((chain, binop));"
  - "vm/src/stdlib/itertools.rs:1252:12      teedata         U       // teedata a python class"
  - "vm/src/stdlib/itertools.rs:1315:9       idxs            U       idxs: PyRwLock<Vec<usize"
  - "vm/src/stdlib/itertools.rs:1344:17      idxs            U       idxs: PyRwLock::new(vec!"
  - "vm/src/stdlib/itertools.rs:1355:19      idxs            U       fn update_idxs(&self, mut idxs: PyRwLockWrit"
  - "vm/src/stdlib/itertools.rs:1355:35      idxs            U       update_idxs(&self, mut idxs: PyRwLockWriteGuard"
  - "vm/src/stdlib/itertools.rs:1356:16      idxs            U       if idxs.len() == 0 {"
  - "vm/src/stdlib/itertools.rs:1839:9       fillvalue       U       fillvalue: OptionalArg<PyObjectRef"
  - "vm/src/stdlib/itertools.rs:1846:17      fillvalue       U       let fillvalue = args.fillvalue.unwrap"
  - "vm/src/stdlib/itertools.rs:1846:34      fillvalue       U       let fillvalue = args.fillvalue.unwrap_or_none(vm);"
  - "vm/src/stdlib/itertools.rs:1850:17      fillvalue       U       fillvalue: PyRwLock::new(fillvalue"
  - "vm/src/stdlib/itertools.rs:1850:42      fillvalue       U       fillvalue: PyRwLock::new(fillvalue),"
  - "vm/src/stdlib/itertools.rs:1896:21      numactive       U       let mut numactive = zelf.iterators.len"
  - "vm/src/stdlib/itertools.rs:1902:25      numactive       U       numactive -= 1;"
  - "vm/src/stdlib/itertools.rs:1903:28      numactive       U       if numactive == 0 {"
  - "vm/src/stdlib/marshal.rs:52:21          pycomplex       U       ref pycomplex @ PyComplex => {"
  - "vm/src/stdlib/marshal.rs:53:31          pycomplex       U       f(Complex(pycomplex.to_complex64()))"
  - "vm/src/stdlib/marshal.rs:65:21          pyfrozen        U       ref pyfrozen @ PyFrozenSet => {"
  - "vm/src/stdlib/marshal.rs:66:36          pyfrozen        U       let elements = pyfrozen.elements();"
  - "vm/src/stdlib/mod.rs:20:5           sysconfigdata       U       mod sysconfigdata;"
  - "vm/src/stdlib/mod.rs:93:18          sysconfigdata       U       sys::sysconfigdata_name() => sysconfigdata"
  - "vm/src/stdlib/mod.rs:93:42          sysconfigdata       U       sysconfigdata_name() => sysconfigdata::make_module,"
  - "vm/src/stdlib/msvcrt.rs:19:13       FAILCRITICALERRORS          U       SEM_FAILCRITICALERRORS, SEM_NOALIGNMENTFAULTEXCEPT"
  - "vm/src/stdlib/msvcrt.rs:19:37       NOALIGNMENTFAULTEXCEPT      U       FAILCRITICALERRORS, SEM_NOALIGNMENTFAULTEXCEPT, SEM_NOGPFAULTERRORBOX"
  - "vm/src/stdlib/msvcrt.rs:19:65       NOGPFAULTERRORBOX           U       NOALIGNMENTFAULTEXCEPT, SEM_NOGPFAULTERRORBOX,"
  - "vm/src/stdlib/msvcrt.rs:20:13       NOOPENFILEERRORBOX          U       SEM_NOOPENFILEERRORBOX,"
  - "vm/src/stdlib/msvcrt.rs:29:13       getwch                      U       fn _getwch() -> u32;"
  - "vm/src/stdlib/msvcrt.rs:30:13       getche                      U       fn _getche() -> i32;"
  - "vm/src/stdlib/msvcrt.rs:31:13       getwche                     U       fn _getwche() -> u32;"
  - "vm/src/stdlib/msvcrt.rs:32:13       putch                       U       fn _putch(c: u32) -> i32;"
  - "vm/src/stdlib/msvcrt.rs:33:13       putwch                      U       fn _putwch(c: u16) -> u32;"
  - "vm/src/stdlib/msvcrt.rs:42:8        getwch                      U       fn getwch() -> String {"
  - "vm/src/stdlib/msvcrt.rs:43:27       getwch                      U       let c = unsafe { _getwch() };"
  - "vm/src/stdlib/msvcrt.rs:47:8        getche                      U       fn getche() -> Vec<u8> {"
  - "vm/src/stdlib/msvcrt.rs:48:27       getche                      U       let c = unsafe { _getche() };"
  - "vm/src/stdlib/msvcrt.rs:52:8        getwche                     U       fn getwche() -> String {"
  - "vm/src/stdlib/msvcrt.rs:53:27       getwche                     U       let c = unsafe { _getwche() };"
  - "vm/src/stdlib/msvcrt.rs:57:8        putch                       U       fn putch(b: PyRef<PyBytes>, vm"
  - "vm/src/stdlib/msvcrt.rs:59:32       putch                       U       vm.new_type_error(\"putch() argument must be a"
  - "vm/src/stdlib/msvcrt.rs:61:33       putch                       U       unsafe { suppress_iph!(_putch(c.into())) };"
  - "vm/src/stdlib/msvcrt.rs:65:8        putwch                      U       fn putwch(s: PyStrRef, vm: &VirtualMach"
  - "vm/src/stdlib/msvcrt.rs:67:32       putch                       U       vm.new_type_error(\"putch() argument must be a"
  - "vm/src/stdlib/msvcrt.rs:69:33       putwch                      U       unsafe { suppress_iph!(_putwch(c as u16)) };"
  - "vm/src/stdlib/nt.rs:18:9        ospath                  U       ospath::OsPath,"
  - "vm/src/stdlib/nt.rs:39:68       widecstring             U       GetFileAttributesW(path.to_widecstring(vm)?.as_ptr()) };"
  - "vm/src/stdlib/nt.rs:111:8       cwait                   U       // cwait is available on MSVC"
  - "vm/src/stdlib/nt.rs:114:13      cwait                   U       fn _cwait(termstat: *mut i32,"
  - "vm/src/stdlib/nt.rs:114:19      termstat                U       fn _cwait(termstat: *mut i32, procHandle"
  - "vm/src/stdlib/nt.rs:121:43      cwait                   U       unsafe { suppress_iph!(_cwait(&mut status, pid, opt"
  - "vm/src/stdlib/nt.rs:162:17      stdhandle               U       let stdhandle = match fd {"
  - "vm/src/stdlib/nt.rs:168:52      stdhandle               U       Console::GetStdHandle(stdhandle) };"
  - "vm/src/stdlib/nt.rs:175:21      csbi                    U       let mut csbi = MaybeUninit::uninit"
  - "vm/src/stdlib/nt.rs:176:71      csbi                    U       GetConsoleScreenBufferInfo(h, csbi.as_mut_ptr()) };"
  - "vm/src/stdlib/nt.rs:177:17      csbi                    U       let csbi = unsafe { csbi.assume"
  - "vm/src/stdlib/nt.rs:177:33      csbi                    U       let csbi = unsafe { csbi.assume_init() };"
  - "vm/src/stdlib/nt.rs:181:21      csbi                    U       let w = csbi.srWindow;"
  - "vm/src/stdlib/nt.rs:192:13      wexecv                  U       fn _wexecv(cmdname: *const u16"
  - "vm/src/stdlib/nt.rs:192:20      cmdname                 U       fn _wexecv(cmdname: *const u16, argv:"
  - "vm/src/stdlib/nt.rs:204:18      widestring              U       let make_widestring ="
  - "vm/src/stdlib/nt.rs:205:23      widestring              U       |s: &str| widestring::WideCString::from_os"
  - "vm/src/stdlib/nt.rs:207:25      widestring              U       let path = make_widestring(path.as_str())?;"
  - "vm/src/stdlib/nt.rs:211:18      widestring              U       make_widestring(arg.as_str())"
  - "vm/src/stdlib/nt.rs:230:37      wexecv                  U       unsafe { suppress_iph!(_wexecv(path.as_ptr(), argv"
  - "vm/src/stdlib/nt.rs:238:9       getfinalpathname        U       fn _getfinalpathname(path: OsPath, vm: &VirtualMac"
  - "vm/src/stdlib/nt.rs:247:9       getfullpathname         U       fn _getfullpathname(path: OsPath, vm: &VirtualMac"
  - "vm/src/stdlib/nt.rs:248:13      wpath                   U       let wpath = path.to_widecstring"
  - "vm/src/stdlib/nt.rs:248:29      widecstring             U       let wpath = path.to_widecstring(vm)?;"
  - "vm/src/stdlib/nt.rs:252:17      wpath                   U       wpath.as_ptr(),"
  - "vm/src/stdlib/nt.rs:265:21      wpath                   U       wpath.as_ptr(),"
  - "vm/src/stdlib/nt.rs:275:22      widestring              U       let buffer = widestring::WideCString::from_vec"
  - "vm/src/stdlib/nt.rs:280:9       getvolumepathname       U       fn _getvolumepathname(path: OsPath, vm: &VirtualMac"
  - "vm/src/stdlib/nt.rs:281:28      widecstring             U       let wide = path.to_widecstring(vm)?;"
  - "vm/src/stdlib/nt.rs:295:14      splitroot               U       fn _path_splitroot(path: OsPath, vm: &VirtualMac"
  - "vm/src/stdlib/nt.rs:300:13      backslashed             U       let backslashed: Vec<_> = orig"
  - "vm/src/stdlib/nt.rs:311:35      PCWSTR                  U       wbuf = windows::core::PCWSTR::from_raw(backslashed"
  - "vm/src/stdlib/nt.rs:311:52      backslashed             U       core::PCWSTR::from_raw(backslashed.as_ptr());"
  - "vm/src/stdlib/nt.rs:319:27      backslashed             U       len < backslashed.len(), // backslashed"
  - "vm/src/stdlib/nt.rs:319:49      backslashed             U       backslashed.len(), // backslashed is null-terminated"
  - "vm/src/stdlib/nt.rs:321:77      backslashed             U       OsString::from_wide(&backslashed)),"
  - "vm/src/stdlib/nt.rs:333:9       getdiskusage            U       fn _getdiskusage(path: OsPath, vm: &VirtualMac"
  - "vm/src/stdlib/nt.rs:336:13      wpath                   U       let wpath = path.to_widecstring"
  - "vm/src/stdlib/nt.rs:336:29      widecstring             U       let wpath = path.to_widecstring(vm)?;"
  - "vm/src/stdlib/nt.rs:341:42      wpath                   U       GetDiskFreeSpaceExW(wpath.as_ptr(), &mut _free"
  - "vm/src/stdlib/nt.rs:391:8       listdrives              U       fn listdrives(vm: &VirtualMachine"
  - "vm/src/stdlib/nt.rs:429:28      widecstring             U       let wide = path.to_widecstring(vm)?;"
  - "vm/src/stdlib/operator.rs:392:17        nattr       U       let nattr = args.args.len();"
  - "vm/src/stdlib/operator.rs:397:16        nattr       U       if nattr == 0 {"
  - "vm/src/stdlib/operator.rs:400:48        nattr       U       Vec::with_capacity(nattr);"
  - "vm/src/stdlib/operator.rs:535:25        pargs       U       let mut pargs = vec![zelf.name.as"
  - "vm/src/stdlib/operator.rs:536:17        pargs       U       pargs.append(&mut zelf.args"
  - "vm/src/stdlib/operator.rs:537:76        pargs       U       ), vm.ctx.new_tuple(pargs))))"
  - "vm/src/stdlib/os.rs:29:42       rustix              U       IntoPyException for rustix::io::Errno {"
  - "vm/src/stdlib/os.rs:121:13      osstr               U       fn bytes_as_osstr<'a>(b: &'a [u8], vm"
  - "vm/src/stdlib/os.rs:122:37      osstr               U       common::os::bytes_as_osstr(b)"
  - "vm/src/stdlib/os.rs:141:9       ospath              U       ospath::{IOErrorBuilder, OsPath"
  - "vm/src/stdlib/os.rs:185:8       closerange          U       fn closerange(fd_low: i32, fd_high"
  - "vm/src/stdlib/os.rs:219:32      widecstring         U       let name = name.to_widecstring(vm)?;"
  - "vm/src/stdlib/os.rs:220:41      NOINHERIT           U       flags = flags | libc::O_NOINHERIT;"
  - "vm/src/stdlib/os.rs:313:8       mkdirs              U       fn mkdirs(path: PyStrRef, vm:"
  - "vm/src/stdlib/os.rs:323:11      LISTDIR             U       const LISTDIR_FD: bool = cfg!(all"
  - "vm/src/stdlib/os.rs:326:8       listdir             U       fn listdir(path: OptionalArg<OsPathOrFd"
  - "vm/src/stdlib/os.rs:348:43      listdir             U       \"can't pass fd to listdir on this platform\".to"
  - "vm/src/stdlib/os.rs:401:35      osstr               U       key = super::bytes_as_osstr(key, vm)?;"
  - "vm/src/stdlib/os.rs:402:37      osstr               U       value = super::bytes_as_osstr(value, vm)?;"
  - "vm/src/stdlib/os.rs:422:35      osstr               U       key = super::bytes_as_osstr(key, vm)?;"
  - "vm/src/stdlib/os.rs:441:9       pathval             U       pathval: PathBuf,"
  - "vm/src/stdlib/os.rs:461:42      pathval             U       mode.process_path(&self.pathval, vm)"
  - "vm/src/stdlib/os.rs:470:44      pathval             U       super::fs_metadata(&self.pathval, follow_symlinks.0)"
  - "vm/src/stdlib/os.rs:520:36      pathval             U       path: self.pathval.as_os_str().to_owned"
  - "vm/src/stdlib/os.rs:553:40      pathval             U       path: self.pathval.as_os_str().to_owned"
  - "vm/src/stdlib/os.rs:639:17      entryref            U       let entryref: &mut Option<fs::ReadDir"
  - "vm/src/stdlib/os.rs:640:28      entryref            U       let _dropped = entryref.take();"
  - "vm/src/stdlib/os.rs:656:17      entryref            U       let entryref: &mut Option<fs::ReadDir"
  - "vm/src/stdlib/os.rs:658:19      entryref            U       match entryref {"
  - "vm/src/stdlib/os.rs:688:40      entryref            U       let _dropped = entryref.take();"
  - "vm/src/stdlib/os.rs:720:26      structsequence      U       // TODO: unnamed structsequence fields"
  - "vm/src/stdlib/os.rs:762:34      atim                U       atime = (stat.st_atim.tv_sec, stat.st_atim"
  - "vm/src/stdlib/os.rs:762:55      atim                U       atim.tv_sec, stat.st_atim.tv_nsec);"
  - "vm/src/stdlib/os.rs:763:34      mtim                U       mtime = (stat.st_mtim.tv_sec, stat.st_mtim"
  - "vm/src/stdlib/os.rs:763:55      mtim                U       mtim.tv_sec, stat.st_mtim.tv_nsec);"
  - "vm/src/stdlib/os.rs:764:34      ctim                U       ctime = (stat.st_ctim.tv_sec, stat.st_ctim"
  - "vm/src/stdlib/os.rs:764:55      ctim                U       ctim.tv_sec, stat.st_ctim.tv_nsec);"
  - "vm/src/stdlib/os.rs:916:8       getcwdb             U       fn getcwdb(vm: &VirtualMachine"
  - "vm/src/stdlib/os.rs:980:9       getrandom           U       getrandom::getrandom(&mut buf"
  - "vm/src/stdlib/os.rs:980:20      getrandom           U       getrandom::getrandom(&mut buf).map_err(|e"
  - "vm/src/stdlib/os.rs:1053:19     modif               U       let (acc, modif) = match (args.times"
  - "vm/src/stdlib/os.rs:1098:36     modif               U       impl(args.path, acc, modif, args.dir_fd, args.follow"
  - "vm/src/stdlib/os.rs:1104:9      modif               U       modif: Duration,"
  - "vm/src/stdlib/os.rs:1119:42     modif               U       times = [ts(acc), ts(modif)];"
  - "vm/src/stdlib/os.rs:1122:27     utimensat           U       libc::utimensat("
  - "vm/src/stdlib/os.rs:1147:76     modif               U       tv(acc).into(), &tv(modif).into())"
  - "vm/src/stdlib/os.rs:1465:31     listdir             U       SupportFunc::new(\"listdir\", Some(LISTDIR_FD),"
  - "vm/src/stdlib/os.rs:1465:46     LISTDIR             U       new(\"listdir\", Some(LISTDIR_FD), Some(false), Some"
  - "vm/src/stdlib/posix_compat.rs:14:9          ospath      U       ospath::OsPath,"
  - "vm/src/stdlib/posix_compat.rs:22:12         unimpl      U       os_unimpl(\"os.access\", vm)"
  - "vm/src/stdlib/posix_compat.rs:38:12         unimpl      U       os_unimpl(\"os.symlink\", vm)"
  - "vm/src/stdlib/posix_compat.rs:57:11         unimpl      U       fn os_unimpl<T>(func: &str, vm:"
  - "vm/src/stdlib/posix.rs:27:9         ospath          U       ospath::{IOErrorBuilder, OsPath"
  - "vm/src/stdlib/posix.rs:77:16        GRND            U       use libc::{GRND_NONBLOCK, GRND_RANDOM"
  - "vm/src/stdlib/posix.rs:77:31        GRND            U       libc::{GRND_NONBLOCK, GRND_RANDOM};"
  - "vm/src/stdlib/posix.rs:372:20       ospath          U       use crate::ospath::IOErrorBuilder;"
  - "vm/src/stdlib/posix.rs:892:22       emscripten      U       target_os = \"emscripten\","
  - "vm/src/stdlib/posix.rs:1209:8       setresuid       U       fn setresuid(ruid: Uid, euid: Uid"
  - "vm/src/stdlib/posix.rs:1210:17      setresuid       U       unistd::setresuid(ruid, euid, suid)"
  - "vm/src/stdlib/posix.rs:1836:26      illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/posix.rs:1900:26      illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/posix.rs:1918:12      VDISABLE        U       PC_VDISABLE = libc::_PC_VDISABLE"
  - "vm/src/stdlib/posix.rs:1923:26      illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/posix.rs:1936:26      illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/posix.rs:1949:26      illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/posix.rs:2050:12      DELAYTIMER      U       SC_DELAYTIMER_MAX = libc::_SC_DELAYTIMER"
  - "vm/src/stdlib/posix.rs:2053:12      GETGR           U       SC_GETGR_R_SIZE_MAX = libc::"
  - "vm/src/stdlib/posix.rs:2054:12      GETPW           U       SC_GETPW_R_SIZE_MAX = libc::"
  - "vm/src/stdlib/posix.rs:2067:12      NPROCESSORS     U       SC_NPROCESSORS_CONF = libc::_SC_NPROCESSORS"
  - "vm/src/stdlib/posix.rs:2068:12      NPROCESSORS     U       SC_NPROCESSORS_ONLN = libc::_SC_NPROCESSORS"
  - "vm/src/stdlib/posix.rs:2068:24      ONLN            U       SC_NPROCESSORS_ONLN = libc::_SC_NPROCESSORS"
  - "vm/src/stdlib/posix.rs:2083:12      RTSIG           U       SC_RTSIG_MAX = libc::_SC_RTSIG"
  - "vm/src/stdlib/posix.rs:2165:12      SYMLOOP         U       SC_SYMLOOP_MAX = libc::_SC_SYMLOOP"
  - "vm/src/stdlib/posix.rs:2308:19      getrandom       U       unsafe fn sys_getrandom(buf: *mut libc::c_void"
  - "vm/src/stdlib/posix.rs:2309:33      getrandom       U       libc::syscall(libc::SYS_getrandom, buf, buflen, flags"
  - "vm/src/stdlib/posix.rs:2314:8       getrandom       U       fn getrandom(size: isize, flags:"
  - "vm/src/stdlib/posix.rs:2319:27      getrandom       U       let len = sys_getrandom("
  - "vm/src/stdlib/pwd.rs:37:17          pathbuf         U       let pathbuf_lossy = |p: std::path"
  - "vm/src/stdlib/pwd.rs:48:25          pathbuf         U       pw_dir: pathbuf_lossy(user.dir),"
  - "vm/src/stdlib/pwd.rs:49:27          pathbuf         U       pw_shell: pathbuf_lossy(user.shell),"
  - "vm/src/stdlib/pwd.rs:93:8           getpwall        U       fn getpwall(vm: &VirtualMachine"
  - "vm/src/stdlib/pwd.rs:94:67          fgetpwent       U       thread safe. Could use fgetpwent_r, but this is easier"
  - "vm/src/stdlib/pwd.rs:95:16          GETPWALL        U       static GETPWALL: parking_lot::Mutex"
  - "vm/src/stdlib/pwd.rs:96:22          GETPWALL        U       let _guard = GETPWALL.lock();"
  - "vm/src/stdlib/signal.rs:106:16      SIGPWR          U       use libc::{SIGPWR, SIGSTKFLT};"
  - "vm/src/stdlib/signal.rs:106:24      SIGSTKFLT       U       use libc::{SIGPWR, SIGSTKFLT};"
  - "vm/src/stdlib/signal.rs:142:10      signalnum       U       _signalnum: i32,"
  - "vm/src/stdlib/signal.rs:152:9       signalnum       U       signalnum: i32,"
  - "vm/src/stdlib/signal.rs:156:33      signalnum       U       signal::assert_in_range(signalnum, vm)?;"
  - "vm/src/stdlib/signal.rs:174:41      signalnum       U       unsafe { libc::signal(signalnum, sig_handler) };"
  - "vm/src/stdlib/signal.rs:180:26      signalnum       U       siginterrupt(signalnum, 1);"
  - "vm/src/stdlib/signal.rs:308:17      sigbyte         U       let sigbyte = signum as u8;"
  - "vm/src/stdlib/signal.rs:314:26      sigbyte         U       &sigbyte as *const u8 as *const"
  - "vm/src/stdlib/signal.rs:321:62      sigbyte         U       write(wakeup_fd as _, &sigbyte as *const u8 as *const"
  - "vm/src/stdlib/sre.rs:30:37          CODESIZE        U       rustpython_sre_engine::{CODESIZE, MAXGROUPS, MAXREPEAT"
  - "vm/src/stdlib/sre.rs:30:47          MAXGROUPS       U       sre_engine::{CODESIZE, MAXGROUPS, MAXREPEAT, SRE_MAGIC"
  - "vm/src/stdlib/sre.rs:30:58          MAXREPEAT       U       CODESIZE, MAXGROUPS, MAXREPEAT, SRE_MAGIC as MAGIC"
  - "vm/src/stdlib/sre.rs:33:8           getcodesize     U       fn getcodesize() -> usize {"
  - "vm/src/stdlib/sre.rs:34:9           CODESIZE        U       CODESIZE"
  - "vm/src/stdlib/sre.rs:37:14          iscased         U       fn ascii_iscased(ch: i32) -> bool {"
  - "vm/src/stdlib/sre.rs:41:16          iscased         U       fn unicode_iscased(ch: i32) -> bool {"
  - "vm/src/stdlib/sre.rs:84:9           groupindex      U       groupindex: PyDictRef,"
  - "vm/src/stdlib/sre.rs:85:9           indexgroup      U       indexgroup: PyObjectRef,"
  - "vm/src/stdlib/sre.rs:91:12          isbytes         U       // isbytes will be hanging (-1"
  - "vm/src/stdlib/sre.rs:93:13          isbytes         U       let isbytes = !vm.is_none(&pattern"
  - "vm/src/stdlib/sre.rs:100:13         groupindex      U       groupindex,"
  - "vm/src/stdlib/sre.rs:101:13         indexgroup      U       indexgroup: indexgroup.try_to_value"
  - "vm/src/stdlib/sre.rs:101:25         indexgroup      U       indexgroup: indexgroup.try_to_value(vm)?,"
  - "vm/src/stdlib/sre.rs:102:13         isbytes         U       isbytes,"
  - "vm/src/stdlib/sre.rs:191:13         groupindex      U       pub groupindex: PyDictRef,"
  - "vm/src/stdlib/sre.rs:192:13         indexgroup      U       pub indexgroup: Vec<Option<PyStrRef"
  - "vm/src/stdlib/sre.rs:193:13         isbytes         U       pub isbytes: bool,"
  - "vm/src/stdlib/sre.rs:198:25         isbytes         U       if $pattern.isbytes {"
  - "vm/src/stdlib/sre.rs:226:12         pymatch         U       fn pymatch("
  - "vm/src/stdlib/sre.rs:240:22         pymatch         U       .pymatch(&req)"
  - "vm/src/stdlib/sre.rs:255:26         pymatch         U       Ok(state.pymatch(&req).then(|| {"
  - "vm/src/stdlib/sre.rs:285:25         matchlist       U       let mut matchlist: Vec<PyObjectRef> ="
  - "vm/src/stdlib/sre.rs:299:21         matchlist       U       matchlist.push(item);"
  - "vm/src/stdlib/sre.rs:302:20         matchlist       U       Ok(matchlist)"
  - "vm/src/stdlib/sre.rs:344:19         subx            U       Self::subx(zelf, sub_args, false"
  - "vm/src/stdlib/sre.rs:348:19         subx            U       Self::subx(zelf, sub_args, true"
  - "vm/src/stdlib/sre.rs:360:25         splitlist       U       let mut splitlist: Vec<PyObjectRef> ="
  - "vm/src/stdlib/sre.rs:368:21         splitlist       U       splitlist.push(s.slice(last, iter"
  - "vm/src/stdlib/sre.rs:374:25         splitlist       U       splitlist.push(m.get_slice(i,"
  - "vm/src/stdlib/sre.rs:382:17         splitlist       U       splitlist.push(req.string.slice"
  - "vm/src/stdlib/sre.rs:384:20         splitlist       U       Ok(splitlist)"
  - "vm/src/stdlib/sre.rs:393:12         groupindex      U       fn groupindex(&self) -> PyDictRef"
  - "vm/src/stdlib/sre.rs:394:18         groupindex      U       self.groupindex.clone()"
  - "vm/src/stdlib/sre.rs:405:12         subx            U       fn subx("
  - "vm/src/stdlib/sre.rs:591:9          lastindex       U       lastindex: isize,"
  - "vm/src/stdlib/sre.rs:618:17         lastindex       U       lastindex: marks.last_index()"
  - "vm/src/stdlib/sre.rs:632:12         lastindex       U       fn lastindex(&self) -> Option<isize"
  - "vm/src/stdlib/sre.rs:633:21         lastindex       U       if self.lastindex >= 0 {"
  - "vm/src/stdlib/sre.rs:634:27         lastindex       U       Some(self.lastindex)"
  - "vm/src/stdlib/sre.rs:640:12         lastgroup       U       fn lastgroup(&self) -> Option<PyStrRef"
  - "vm/src/stdlib/sre.rs:642:26         indexgroup      U       self.pattern.indexgroup.get(i)?.clone()"
  - "vm/src/stdlib/sre.rs:750:12         groupdict       U       fn groupdict("
  - "vm/src/stdlib/sre.rs:858:12         pymatch         U       fn pymatch(&self, vm: &VirtualMachine"
  - "vm/src/stdlib/sre.rs:863:41         pymatch         U       has_matched = state.pymatch(&req);"
  - "vm/src/stdlib/string.rs:1:1\tNo issues found"
  - "vm/src/stdlib/symtable.rs:1:1\tNo issues found"
  - "vm/src/stdlib/sys.rs:3:70           MULTIARCH                       U       module_def, DOC, MAXSIZE, MULTIARCH};"
  - "vm/src/stdlib/sys.rs:32:81          multiarch                       U       TODO: copy CPython's multiarch exactly,"
  - "vm/src/stdlib/sys.rs:34:22          MULTIARCH                       U       pub(crate) const MULTIARCH: &str = env!(\"RUSTPYTHON"
  - "vm/src/stdlib/sys.rs:36:34          debugbuild                      U       name = \"_rustpython_debugbuild\")]"
  - "vm/src/stdlib/sys.rs:37:22          DEBUGBUILD                      U       const RUSTPYTHON_DEBUGBUILD: bool = cfg!(debug_assertions"
  - "vm/src/stdlib/sys.rs:39:22          abiflags                        U       #[pyattr(name = \"abiflags\")]"
  - "vm/src/stdlib/sys.rs:40:22          ABIFLAGS                        U       pub(crate) const ABIFLAGS: &str = \"\";"
  - "vm/src/stdlib/sys.rs:49:22          hexversion                      U       #[pyattr(name = \"hexversion\")]"
  - "vm/src/stdlib/sys.rs:50:11          HEXVERSION                      U       const HEXVERSION: usize = version::VERSION"
  - "vm/src/stdlib/sys.rs:53:22          maxunicode                      U       #[pyattr(name = \"maxunicode\")]"
  - "vm/src/stdlib/sys.rs:54:11          MAXUNICODE                      U       const MAXUNICODE: u32 = std::char::MAX"
  - "vm/src/stdlib/sys.rs:82:22          dllhandle                       U       #[pyattr(name = \"dllhandle\")]"
  - "vm/src/stdlib/sys.rs:83:11          DLLHANDLE                       U       const DLLHANDLE: usize = 0;"
  - "vm/src/stdlib/sys.rs:100:33         BASEPREFIX                      U       option_env!(\"RUSTPYTHON_BASEPREFIX\").unwrap_or_else(||"
  - "vm/src/stdlib/sys.rs:104:33         BASEPREFIX                      U       option_env!(\"RUSTPYTHON_BASEPREFIX\").unwrap_or_else(||"
  - "vm/src/stdlib/sys.rs:108:33         BASEPREFIX                      U       option_env!(\"RUSTPYTHON_BASEPREFIX\").unwrap_or_else(||"
  - "vm/src/stdlib/sys.rs:111:8          platlibdir                      U       fn platlibdir(_vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:112:33         PLATLIBDIR                      U       option_env!(\"RUSTPYTHON_PLATLIBDIR\").unwrap_or(\"lib\")"
  - "vm/src/stdlib/sys.rs:158:38         PYVENV                          U       Ok(var) = env::var(\"__PYVENV_LAUNCHER__\") {"
  - "vm/src/stdlib/sys.rs:226:15         multiarch                       U       \"_multiarch\" => ctx.new_str(MULTIARCH"
  - "vm/src/stdlib/sys.rs:226:41         MULTIARCH                       U       multiarch\" => ctx.new_str(MULTIARCH.to_owned()),"
  - "vm/src/stdlib/sys.rs:228:14         hexversion                      U       \"hexversion\" => ctx.new_int(version"
  - "vm/src/stdlib/sys.rs:280:9          xoptions                        U       fn _xoptions(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:283:48         xoptions                        U       in &vm.state.settings.xoptions {"
  - "vm/src/stdlib/sys.rs:294:8          warnoptions                     U       fn warnoptions(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:297:14         warnoptions                     U       .warnoptions"
  - "vm/src/stdlib/sys.rs:335:28         excepthook                      U       pyfunction(name = \"__excepthook__\")]"
  - "vm/src/stdlib/sys.rs:337:8          excepthook                      U       fn excepthook("
  - "vm/src/stdlib/sys.rs:348:28         breakpointhook                  U       pyfunction(name = \"__breakpointhook__\")]"
  - "vm/src/stdlib/sys.rs:350:12         breakpointhook                  U       pub fn breakpointhook(args: FuncArgs, vm:"
  - "vm/src/stdlib/sys.rs:351:38         PYTHONBREAKPOINT                U       var = std::env::var(\"PYTHONBREAKPOINT\")"
  - "vm/src/stdlib/sys.rs:365:19         unimportable                    U       let print_unimportable_module_warn = || {"
  - "vm/src/stdlib/sys.rs:368:35         unimportable                    U       format!(\"Ignoring unimportable $PYTHONBREAKPOINT:"
  - "vm/src/stdlib/sys.rs:368:49         PYTHONBREAKPOINT                U       Ignoring unimportable $PYTHONBREAKPOINT: \\\"{env_var}\\\"\",),"
  - "vm/src/stdlib/sys.rs:379:31         unimportable                    U       _ => return print_unimportable_module_warn(),"
  - "vm/src/stdlib/sys.rs:391:30         unimportable                    U       return print_unimportable_module_warn();"
  - "vm/src/stdlib/sys.rs:397:24         unimportable                    U       _ => print_unimportable_module_warn(),"
  - "vm/src/stdlib/sys.rs:420:8          getdefaultencoding              U       fn getdefaultencoding() -> &'static str {"
  - "vm/src/stdlib/sys.rs:425:8          getrefcount                     U       fn getrefcount(obj: PyObjectRef) -"
  - "vm/src/stdlib/sys.rs:430:8          getrecursionlimit               U       fn getrecursionlimit(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:435:12         Getsizeof                       U       struct GetsizeofArgs {"
  - "vm/src/stdlib/sys.rs:442:8          getsizeof                       U       fn getsizeof(args: GetsizeofArgs"
  - "vm/src/stdlib/sys.rs:442:24         Getsizeof                       U       fn getsizeof(args: GetsizeofArgs, vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:454:8          getfilesystemencoding           U       fn getfilesystemencoding(_vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:461:8          getfilesystemencodeerrors       U       fn getfilesystemencodeerrors(_vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:462:10         surrogateescape                 U       \"surrogateescape\".to_owned()"
  - "vm/src/stdlib/sys.rs:467:8          getfilesystemencodeerrors       U       fn getfilesystemencodeerrors(_vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:468:10         surrogatepass                   U       \"surrogatepass\".to_owned()"
  - "vm/src/stdlib/sys.rs:477:9          getframe                        U       fn _getframe(offset: OptionalArg"
  - "vm/src/stdlib/sys.rs:494:8          getwindowsversion               U       fn getwindowsversion(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:498:28         OSVERSIONINFOEXW                U       GetVersionExW, OSVERSIONINFOEXW, OSVERSIONINFOW,"
  - "vm/src/stdlib/sys.rs:498:46         OSVERSIONINFOW                  U       VersionExW, OSVERSIONINFOEXW, OSVERSIONINFOW,"
  - "vm/src/stdlib/sys.rs:501:26         OSVERSIONINFOEXW                U       let mut version: OSVERSIONINFOEXW = unsafe { std::mem"
  - "vm/src/stdlib/sys.rs:502:59         OSVERSIONINFOEXW                U       std::mem::size_of::<OSVERSIONINFOEXW>() as u32;"
  - "vm/src/stdlib/sys.rs:504:17         osvi                            U       let osvi = &mut version as *mut"
  - "vm/src/stdlib/sys.rs:504:45         OSVERSIONINFOEXW                U       mut version as *mut OSVERSIONINFOEXW as *mut OSVERSIONINFOW"
  - "vm/src/stdlib/sys.rs:504:70         OSVERSIONINFOW                  U       OSVERSIONINFOEXW as *mut OSVERSIONINFOW;"
  - "vm/src/stdlib/sys.rs:505:59         OSVERSIONINFOW                  U       accepts a pointer of OSVERSIONINFOW, but windows-sys crate"
  - "vm/src/stdlib/sys.rs:507:27         osvi                            U       GetVersionExW(osvi)"
  - "vm/src/stdlib/sys.rs:634:31         maxdigits                       U       set_int_max_str_digits(maxdigits: usize, vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:636:12         maxdigits                       U       if maxdigits == 0 || maxdigits >"
  - "vm/src/stdlib/sys.rs:636:30         maxdigits                       U       if maxdigits == 0 || maxdigits >= threshold {"
  - "vm/src/stdlib/sys.rs:637:47         maxdigits                       U       max_str_digits.store(maxdigits);"
  - "vm/src/stdlib/sys.rs:640:34         maxdigits                       U       let error = format!(\"maxdigits must be 0 or larger"
  - "vm/src/stdlib/sys.rs:651:19         profilefunc                     U       fn setprofile(profilefunc: PyObjectRef, vm: &VirtualMac"
  - "vm/src/stdlib/sys.rs:652:33         profilefunc                     U       profile_func.replace(profilefunc);"
  - "vm/src/stdlib/sys.rs:657:8          setrecursionlimit               U       fn setrecursionlimit(recursion_limit: i3"
  - "vm/src/stdlib/sys.rs:679:17         tracefunc                       U       fn settrace(tracefunc: PyObjectRef, vm: &VirtualMac"
  - "vm/src/stdlib/sys.rs:680:31         tracefunc                       U       vm.trace_func.replace(tracefunc);"
  - "vm/src/stdlib/sys.rs:717:15         Asyncgen                        U       struct SetAsyncgenHooksArgs {"
  - "vm/src/stdlib/sys.rs:719:9          firstiter                       U       firstiter: OptionalArg<Option"
  - "vm/src/stdlib/sys.rs:725:12         asyncgen                        U       fn set_asyncgen_hooks(args: SetAsyncgenHooksA"
  - "vm/src/stdlib/sys.rs:725:36         Asyncgen                        U       asyncgen_hooks(args: SetAsyncgenHooksArgs, vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:735:26         firstiter                       U       if let Some(Some(firstiter)) = args.firstiter.as"
  - "vm/src/stdlib/sys.rs:735:45         firstiter                       U       Some(firstiter)) = args.firstiter.as_option() {"
  - "vm/src/stdlib/sys.rs:736:17         firstiter                       U       if !firstiter.is_callable() {"
  - "vm/src/stdlib/sys.rs:738:31         firstiter                       U       \"callable firstiter expected, got {:.50"
  - "vm/src/stdlib/sys.rs:750:42         FIRSTITER                       U       vm::thread::ASYNC_GEN_FIRSTITER.with(|cell| {"
  - "vm/src/stdlib/sys.rs:758:32         asyncgen                        U       pyclass(no_attr, name = \"asyncgen_hooks\")]"
  - "vm/src/stdlib/sys.rs:760:25         Asyncgen                        U       pub(super) struct PyAsyncgenHooks {"
  - "vm/src/stdlib/sys.rs:766:12         Asyncgen                        U       impl PyAsyncgenHooks {}"
  - "vm/src/stdlib/sys.rs:769:12         asyncgen                        U       fn get_asyncgen_hooks(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:769:53         Asyncgen                        U       VirtualMachine) -> PyAsyncgenHooks {"
  - "vm/src/stdlib/sys.rs:771:53         FIRSTITER                       U       vm::thread::ASYNC_GEN_FIRSTITER"
  - "vm/src/stdlib/sys.rs:816:18         PYTHONSAFEPATH                  U       /// -P, `PYTHONSAFEPATH`"
  - "vm/src/stdlib/sys.rs:818:39         PYTHONWARNDEFAULTENCODING       U       warn_default_encoding, PYTHONWARNDEFAULTENCODING"
  - "vm/src/stdlib/sys.rs:866:51         PYTHREAD                        U       stdlib::thread::_thread::PYTHREAD_NAME,"
  - "vm/src/stdlib/sys.rs:964:9          releaselevel                    U       releaselevel: &'static str,"
  - "vm/src/stdlib/sys.rs:974:13         releaselevel                    U       releaselevel: version::RELEASELEVEL"
  - "vm/src/stdlib/sys.rs:974:36         RELEASELEVEL                    U       releaselevel: version::RELEASELEVEL,"
  - "vm/src/stdlib/sys.rs:988:32         getwindowsversion               U       pyclass(no_attr, name = \"getwindowsversion\")]"
  - "vm/src/stdlib/sys.rs:1081:15        sysconfigdata                   U       pub(crate) fn sysconfigdata_name() -> String {"
  - "vm/src/stdlib/sys.rs:1083:11        sysconfigdata                   U       \"_sysconfigdata_{}_{}_{}\","
  - "vm/src/stdlib/sys.rs:1084:14        ABIFLAGS                        U       sys::ABIFLAGS,"
  - "vm/src/stdlib/sys.rs:1086:14        MULTIARCH                       U       sys::MULTIARCH"
  - "vm/src/stdlib/sysconfigdata.rs:1:17         sysconfigdata       U       pub(crate) use _sysconfigdata::make_module;"
  - "vm/src/stdlib/sysconfigdata.rs:4:17         sysconfigdata       U       pub(crate) mod _sysconfigdata {"
  - "vm/src/stdlib/sysconfigdata.rs:5:72         MULTIARCH           U       ToPyObject, stdlib::sys::MULTIARCH, VirtualMachine};"
  - "vm/src/stdlib/sysconfigdata.rs:10:22        sysvars             U       macro_rules! sysvars {"
  - "vm/src/stdlib/sysconfigdata.rs:15:9         sysvars             U       sysvars! {"
  - "vm/src/stdlib/sysconfigdata.rs:17:51        MULTIARCH           U       format!(\".rustpython-{MULTIARCH}\"),"
  - "vm/src/stdlib/sysconfigdata.rs:18:14        MULTIARCH           U       \"MULTIARCH\" => MULTIARCH,"
  - "vm/src/stdlib/sysconfigdata.rs:18:28        MULTIARCH           U       \"MULTIARCH\" => MULTIARCH,"
  - "vm/src/stdlib/sysconfigdata.rs:20:19        GETRANDOM           U       \"HAVE_GETRANDOM\" => 1,"
  - "vm/src/stdlib/thread.rs:22:8        PYTHREAD    U       // PYTHREAD_NAME: show current thread"
  - "vm/src/stdlib/thread.rs:23:15       PYTHREAD    U       pub const PYTHREAD_NAME: Option<&str>"
  - "vm/src/stdlib/thread.rs:29:69       illumos     U       solaris\", target_os = \"illumos\"))] {"
  - "vm/src/stdlib/thread.rs:337:25      sents       U       SENTINELS.with(|sents| {"
  - "vm/src/stdlib/thread.rs:338:25      sents       U       for lock in sents.replace(Default::default"
  - "vm/src/stdlib/thread.rs:363:25      sents       U       SENTINELS.with(|sents| sents.borrow_mut()"
  - "vm/src/stdlib/thread.rs:363:32      sents       U       SENTINELS.with(|sents| sents.borrow_mut().push(lock"
  - "vm/src/stdlib/time.rs:23:19         dstbias         U       // pub static dstbias: std::ffi::c_int;"
  - "vm/src/stdlib/time.rs:42:19         Datelike        U       DateTime, Datelike, Timelike,"
  - "vm/src/stdlib/time.rs:42:29         Timelike        U       DateTime, Datelike, Timelike,"
  - "vm/src/stdlib/time.rs:102:30        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/stdlib/time.rs:110:20        wasmbind        U       feature = \"wasmbind\","
  - "vm/src/stdlib/time.rs:111:30        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/stdlib/time.rs:127:24        wasmbind        U       not(feature = \"wasmbind\"),"
  - "vm/src/stdlib/time.rs:128:30        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/stdlib/time.rs:253:11        CFMT            U       const CFMT: &str = \"%a %b %e %H"
  - "vm/src/stdlib/time.rs:258:45        CFMT            U       time = instant.format(CFMT).to_string();"
  - "vm/src/stdlib/time.rs:265:27        CFMT            U       Ok(instant.format(CFMT).to_string())"
  - "vm/src/stdlib/time.rs:305:22        emscripten      U       target_os = \"emscripten\","
  - "vm/src/stdlib/time.rs:321:65        emscripten      U       wasm32\", target_os = \"emscripten\")))]"
  - "vm/src/stdlib/time.rs:322:24        muldiv          U       pub(super) fn time_muldiv(ticks: i64, mul: i6"
  - "vm/src/stdlib/time.rs:323:13        intpart         U       let intpart = ticks / div;"
  - "vm/src/stdlib/time.rs:326:10        intpart         U       (intpart * mul + remaining) as"
  - "vm/src/stdlib/time.rs:341:18        muldiv          U       time_muldiv(t.tms_utime, SEC_TO"
  - "vm/src/stdlib/time.rs:341:62        muldiv          U       TO_NS, freq) + time_muldiv(t.tms_stime, SEC_TO"
  - "vm/src/stdlib/time.rs:365:22        illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/time.rs:471:21        HIGHRES         U       use libc::CLOCK_HIGHRES;"
  - "vm/src/stdlib/time.rs:473:22        illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/time.rs:481:22        illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/time.rs:643:22        illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/time.rs:654:48        gethrvtime      U       nanos(unsafe { libc::gethrvtime() }))"
  - "vm/src/stdlib/time.rs:658:22        illumos         U       target_os = \"illumos\","
  - "vm/src/stdlib/time.rs:696:28        muldiv          U       use super::decl::{time_muldiv, MS_TO_NS, SEC_TO_NS"
  - "vm/src/stdlib/time.rs:749:38        muldiv          U       Duration::from_nanos(time_muldiv("
  - "vm/src/stdlib/typing.rs:18:37       pycodecs    U       module = vm.import(\"_pycodecs\", None, 0)?;"
  - "vm/src/stdlib/typing.rs:24:20       idfunc      U       pub(crate) fn _idfunc(_vm: &VirtualMachine"
  - "vm/src/stdlib/typing.rs:151:34      gigity      U       println!(\"gigity\");"
  - "vm/src/stdlib/warnings.rs:1:1\tNo issues found"
  - "vm/src/stdlib/weakref.rs:1:1\tNo issues found"
  - "vm/src/stdlib/winapi.rs:17:15       PCWSTR              U       core::PCWSTR,"
  - "vm/src/stdlib/winapi.rs:41:30       WRITECOPY           U       PAGE_EXECUTE_WRITECOPY, PAGE_GUARD, PAGE_NOACCESS"
  - "vm/src/stdlib/winapi.rs:42:38       WRITECOMBINE        U       PAGE_READWRITE, PAGE_WRITECOMBINE, PAGE_WRITECOPY, SEC"
  - "vm/src/stdlib/winapi.rs:42:57       WRITECOPY           U       PAGE_WRITECOMBINE, PAGE_WRITECOPY, SEC_COMMIT, SEC_IMAGE"
  - "vm/src/stdlib/winapi.rs:43:64       WRITECOMBINE        U       NOCACHE, SEC_RESERVE, SEC_WRITECOMBINE,"
  - "vm/src/stdlib/winapi.rs:46:22       READMODE            U       PIPE_READMODE_MESSAGE, PIPE_TYPE_MESSAGE"
  - "vm/src/stdlib/winapi.rs:54:42       STARTF              U       REALTIME_PRIORITY_CLASS, STARTF_USESHOWWINDOW, STARTF"
  - "vm/src/stdlib/winapi.rs:54:49       USESHOWWINDOW       U       PRIORITY_CLASS, STARTF_USESHOWWINDOW, STARTF_USESTDHANDLES"
  - "vm/src/stdlib/winapi.rs:54:64       STARTF              U       STARTF_USESHOWWINDOW, STARTF_USESTDHANDLES,"
  - "vm/src/stdlib/winapi.rs:54:71       USESTDHANDLES       U       USESHOWWINDOW, STARTF_USESTDHANDLES,"
  - "vm/src/stdlib/winapi.rs:167:60      STARTUPINFOEXW      U       :System::Threading::STARTUPINFOEXW ="
  - "vm/src/stdlib/winapi.rs:195:22      getenvironment      U       .map(|m| getenvironment(m, vm))"
  - "vm/src/stdlib/winapi.rs:200:13      getattributelist    U       getattributelist(args.startup_info.get"
  - "vm/src/stdlib/winapi.rs:206:22      widestring          U       let ws = widestring::WideCString::from_str"
  - "vm/src/stdlib/winapi.rs:233:71      STARTUPINFO         U       Threading::EXTENDED_STARTUPINFO_PRESENT"
  - "vm/src/stdlib/winapi.rs:275:8       getenvironment      U       fn getenvironment(env: ArgMapping, vm"
  - "vm/src/stdlib/winapi.rs:288:23      widestring          U       let mut out = widestring::WideString::new();"
  - "vm/src/stdlib/winapi.rs:310:9       handlelist          U       handlelist: Option<Vec<usize>>"
  - "vm/src/stdlib/winapi.rs:323:8       getattributelist    U       fn getattributelist(obj: PyObjectRef, vm"
  - "vm/src/stdlib/winapi.rs:326:21      handlelist          U       let handlelist = mapping"
  - "vm/src/stdlib/winapi.rs:340:34      handlelist          U       let attr_count = handlelist.is_some() as u32;"
  - "vm/src/stdlib/winapi.rs:370:21      handlelist          U       handlelist,"
  - "vm/src/stdlib/winapi.rs:373:37      handlelist          U       if let Some(ref mut handlelist) = attrs.handlelist"
  - "vm/src/stdlib/winapi.rs:427:65      PCWSTR              U       LibraryLoader::LoadLibraryW(PCWSTR::from_raw(path.as_ptr"
  - "vm/src/stdlib/winreg.rs:190:13      regval      U       let regval = key"
  - "vm/src/stdlib/winreg.rs:194:18      regval      U       let ty = regval.vtype.clone() as usize"
  - "vm/src/stdlib/winreg.rs:195:23      regval      U       Ok((reg_to_py(regval, vm)?, ty))"
  - "vm/src/suggestion.rs:1:1\tNo issues found"
  - "vm/src/types/mod.rs:2:5         structseq       U       mod structseq;"
  - "vm/src/types/mod.rs:6:9         structseq       U       pub use structseq::PyStructSequence;"
  - "vm/src/types/slot.rs:91:11          weaklist        U       // tp_weaklist"
  - "vm/src/types/slot.rs:138:28         TPFLAGS         U       CPython default: Py_TPFLAGS_HAVE_STACKLESS_EXTENSION"
  - "vm/src/types/slot.rs:138:41         STACKLESS       U       default: Py_TPFLAGS_HAVE_STACKLESS_EXTENSION | Py_TPFLAGS"
  - "vm/src/types/slot.rs:138:66         TPFLAGS         U       STACKLESS_EXTENSION | Py_TPFLAGS_HAVE_VERSION_TAG"
  - "vm/src/types/slot.rs:142:43         Subclassable    U       types created in Python. Subclassable and are a"
  - "vm/src/types/slot.rs:393:29         subslot         U       macro_rules! toggle_subslot {"
  - "vm/src/types/slot.rs:523:24         subslot         U       toggle_subslot!(as_number, int, number"
  - "vm/src/types/slot.rs:526:24         subslot         U       toggle_subslot!(as_number, index, number"
  - "vm/src/types/slot.rs:529:24         subslot         U       toggle_subslot!(as_number, float, number"
  - "vm/src/types/slot.rs:532:24         subslot         U       toggle_subslot!(as_number, add, number"
  - "vm/src/types/structseq.rs:1:1\tNo issues found"
  - "vm/src/types/zoo.rs:48:14       reverseiterator         U       pub list_reverseiterator_type: &'static Py<PyType"
  - "vm/src/types/zoo.rs:51:14       reversekeyiterator      U       pub dict_reversekeyiterator_type: &'static Py<PyType"
  - "vm/src/types/zoo.rs:55:14       reverseitemiterator     U       pub dict_reverseitemiterator_type: &'static Py<PyType"
  - "vm/src/types/zoo.rs:155:18      reversekeyiterator      U       dict_reversekeyiterator_type: dict::PyDictReverseKeyI"
  - "vm/src/types/zoo.rs:159:18      reverseitemiterator     U       dict_reverseitemiterator_type: dict::PyDictReverseItem"
  - "vm/src/types/zoo.rs:168:18      reverseiterator         U       list_reverseiterator_type: list::PyListReverseIter"
  - "vm/src/utils.rs:1:1\tNo issues found"
  - "vm/src/version.rs:11:11         RELEASELEVEL    U       pub const RELEASELEVEL: &str = \"alpha\";"
  - "vm/src/version.rs:12:11         RELEASELEVEL    U       pub const RELEASELEVEL_N: usize = 0xA;"
  - "vm/src/version.rs:16:53         RELEASELEVEL    U       ) | (MICRO << 8) | (RELEASELEVEL_N << 4) | SERIAL;"
  - "vm/src/version.rs:28:38         RELEASELEVEL    U       MAJOR}.{MINOR}.{MICRO}{RELEASELEVEL}\")"
  - "vm/src/vm/compile.rs:1:1\tNo issues found"
  - "vm/src/vm/context.rs:214:7          slotnames       U       __slotnames__,"
  - "vm/src/vm/interpreter.rs:128:26         exitfuncs       U       atexit::_run_exitfuncs(vm);"
  - "vm/src/vm/method.rs:1:1\tNo issues found"
  - "vm/src/vm/mod.rs:228:17         rustpythonpath      U       let rustpythonpath_env = std::env::var"
  - "vm/src/vm/mod.rs:228:53         RUSTPYTHONPATH      U       env = std::env::var(\"RUSTPYTHONPATH\").ok();"
  - "vm/src/vm/mod.rs:230:27         rustpythonpath      U       let env_set = rustpythonpath_env.as_ref().is_some"
  - "vm/src/vm/mod.rs:232:37         rustpythonpath      U       Some(s.as_str()) == rustpythonpath_env.as_deref() || Some"
  - "vm/src/vm/mod.rs:236:30         pylib               U       \"`rustpython_pylib` maybe not set while"
  - "vm/src/vm/mod.rs:236:186        pylib               U       add_frozen(rustpython_pylib::FROZEN_STDLIB)` in"
  - "vm/src/vm/mod.rs:238:26         RUSTPYTHONPATH      U       \"Neither RUSTPYTHONPATH nor PYTHONPATH is set"
  - "vm/src/vm/mod.rs:240:18         RUSTPYTHONPATH      U       \"RUSTPYTHONPATH or PYTHONPATH is set"
  - "vm/src/vm/mod.rs:242:18         RUSTPYTHONPATH      U       \"RUSTPYTHONPATH or PYTHONPATH is set"
  - "vm/src/vm/mod.rs:610:29         pyiter              U       return self.map_pyiter(value, func);"
  - "vm/src/vm/mod.rs:644:29         pyiter              U       Ok(self.map_pyiter(obj, f))"
  - "vm/src/vm/mod.rs:649:12         pyiter              U       fn map_pyiter<F, R>(&self, value:"
  - "vm/src/vm/mod.rs:749:17         excs                U       let mut excs = self.exceptions.borrow"
  - "vm/src/vm/mod.rs:750:41         excs                U       std::mem::take(&mut *excs);"
  - "vm/src/vm/mod.rs:751:9          excs                U       excs.prev = Some(Box::new"
  - "vm/src/vm/mod.rs:752:9          excs                U       excs.exc = exc"
  - "vm/src/vm/mod.rs:756:17         excs                U       let mut excs = self.exceptions.borrow"
  - "vm/src/vm/setting.rs:18:9           PYTHONHASHSEED                  U       /// PYTHONHASHSEED=x"
  - "vm/src/vm/setting.rs:39:10          Xfoo                            U       /// -Xfoo[=bar]"
  - "vm/src/vm/setting.rs:40:9           xoptions                        U       pub xoptions: Vec<(String, Option"
  - "vm/src/vm/setting.rs:42:10          Wfoo                            U       /// -Wfoo"
  - "vm/src/vm/setting.rs:43:9           warnoptions                     U       pub warnoptions: Vec<String>,"
  - "vm/src/vm/setting.rs:51:35          PYTHONWARNDEFAULTENCODING       U       warn_default_encoding, PYTHONWARNDEFAULTENCODING"
  - "vm/src/vm/setting.rs:75:13          PYTHONUNBUFFERED                U       /// -u, PYTHONUNBUFFERED=x"
  - "vm/src/vm/setting.rs:82:28          pycs                            U       --check-hash-based-pycs"
  - "vm/src/vm/setting.rs:83:20          pycs                            U       pub check_hash_pycs_mode: String,"
  - "vm/src/vm/setting.rs:93:12          pathconfig                      U       // int pathconfig_warnings;"
  - "vm/src/vm/setting.rs:95:37          RUSTPYTHONPATH                  U       Environment PYTHONPATH (and RUSTPYTHONPATH)"
  - "vm/src/vm/setting.rs:99:17          platlibdir                      U       // wchar_t *platlibdir;"
  - "vm/src/vm/setting.rs:142:13         xoptions                        U       xoptions: vec![],"
  - "vm/src/vm/setting.rs:146:13         warnoptions                     U       warnoptions: vec![],"
  - "vm/src/vm/setting.rs:151:24         pycs                            U       check_hash_pycs_mode: \"default\".to_owned"
  - "vm/src/vm/thread.rs:15:33       FIRSTITER       U       crate) static ASYNC_GEN_FIRSTITER: RefCell<Option<PyObjectRef"
  - "vm/src/vm/thread.rs:42:24       intp            U       let vm_owns_obj = |intp: NonNull<VirtualMachine"
  - "vm/src/vm/thread.rs:44:27       intp            U       let vm = unsafe { intp.as_ref() };"
  - "vm/src/vm/thread.rs:48:13       intp            U       let intp = match vms.borrow("
  - "vm/src/vm/thread.rs:57:27       intp            U       let vm = unsafe { intp.as_ref() };"
  - "vm/src/vm/vm_new.rs:157:28      binop       U       pub fn new_unsupported_binop_error("
  - "vm/src/vm/vm_new.rs:171:28      ternop      U       pub fn new_unsupported_ternop_error("
  - "vm/src/vm/vm_object.rs:18:34        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/vm/vm_object.rs:27:24        wasmbind        U       feature = \"wasmbind\","
  - "vm/src/vm/vm_object.rs:28:34        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/vm/vm_object.rs:30:79        wasmbind        U       \"wasi\"), feature = \"wasmbind\"))]"
  - "vm/src/vm/vm_object.rs:45:28        wasmbind        U       not(feature = \"wasmbind\"),"
  - "vm/src/vm/vm_object.rs:46:34        emscripten      U       not(any(target_os = \"emscripten\", target_os = \"wasi"
  - "vm/src/vm/vm_ops.rs:208:34      binop       U       self.new_unsupported_binop_error(a, b, op))"
  - "vm/src/vm/vm_ops.rs:252:34      binop       U       self.new_unsupported_binop_error(a, b, op))"
  - "vm/src/vm/vm_ops.rs:386:34      binop       U       self.new_unsupported_binop_error(a, b, \"+\"))"
  - "vm/src/vm/vm_ops.rs:400:34      binop       U       self.new_unsupported_binop_error(a, b, \"+=\"))"
  - "vm/src/vm/vm_ops.rs:421:34      binop       U       self.new_unsupported_binop_error(a, b, \"*\"))"
  - "vm/src/warn.rs:1:1\tNo issues found"
  - "vm/src/windows.rs:86:55         birthtime       U       from 3.12, so we copy birthtime across"
  - "vm/src/windows.rs:167:44        IFEXEC          U       S_IFDIR | 0o111; /* IFEXEC for user,group,other"
  - "vm/sre_engine/benches/benches.rs:51:86          fastmap     U       c9,'), # Disable the fastmap optimization"
  - "vm/sre_engine/benches/benches.rs:95:27          pymatch     U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/benches/benches.rs:98:27          pymatch     U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/benches/benches.rs:103:27         pymatch     U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/benches/benches.rs:105:27         pymatch     U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/benches/benches.rs:108:27         pymatch     U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/Cargo.toml:3:13           Kangzhi     U       authors = [\"Kangzhi Shi <shikangzhi@gmail"
  - "vm/sre_engine/generate_tests.py:1:1\tNo issues found"
  - "vm/sre_engine/LICENSE:1:1\tNo issues found"
  - "vm/sre_engine/src/constants.rs:31:5         BIGCHARSET      U       BIGCHARSET = 10,"
  - "vm/sre_engine/src/constants.rs:32:5         GROUPREF        U       GROUPREF = 11,"
  - "vm/sre_engine/src/constants.rs:33:5         GROUPREF        U       GROUPREF_EXISTS = 12,"
  - "vm/sre_engine/src/constants.rs:46:5         SUBPATTERN      U       SUBPATTERN = 25,"
  - "vm/sre_engine/src/constants.rs:51:5         GROUPREF        U       GROUPREF_IGNORE = 30,"
  - "vm/sre_engine/src/constants.rs:55:5         GROUPREF        U       GROUPREF_LOC_IGNORE = 34,"
  - "vm/sre_engine/src/constants.rs:59:5         GROUPREF        U       GROUPREF_UNI_IGNORE = 38,"
  - "vm/sre_engine/src/engine.rs:8:80        MAXREPEAT       U       StrDrive, StringCursor, MAXREPEAT};"
  - "vm/sre_engine/src/engine.rs:132:12      pymatch         U       pub fn pymatch<S: StrDrive>(&mut self"
  - "vm/sre_engine/src/engine.rs:288:6       coro            U       'coro: loop {"
  - "vm/sre_engine/src/engine.rs:375:56      MAXREPEAT       U       repeat_ctx.max_count != MAXREPEAT"
  - "vm/sre_engine/src/engine.rs:429:41      MAXREPEAT       U       if max_count == MAXREPEAT || ctx.count as usize"
  - "vm/sre_engine/src/engine.rs:489:78      MAXREPEAT       U       count || max_count == MAXREPEAT)"
  - "vm/sre_engine/src/engine.rs:539:45      groupref        U       macro_rules! general_op_groupref {"
  - "vm/sre_engine/src/engine.rs:552:37      gctx            U       let mut gctx = MatchContext {"
  - "vm/sre_engine/src/engine.rs:560:71      gctx            U       peek_char::<S>()) != $f(gctx.peek_char::<S>())"
  - "vm/sre_engine/src/engine.rs:565:33      gctx            U       gctx.advance_char::<S>()"
  - "vm/sre_engine/src/engine.rs:630:33      atcode          U       let atcode = SreAtCode::try_from"
  - "vm/sre_engine/src/engine.rs:631:46      atcode          U       if at(req, &ctx, atcode) {"
  - "vm/sre_engine/src/engine.rs:645:33      catcode         U       let catcode = SreCatCode::try_from"
  - "vm/sre_engine/src/engine.rs:646:61      catcode         U       end(req) || !category(catcode, ctx.peek_char::<S>"
  - "vm/sre_engine/src/engine.rs:696:60      MAXREPEAT       U       repeat_ctx.max_count == MAXREPEAT)"
  - "vm/sre_engine/src/engine.rs:813:36      GROUPREF        U       SreOpcode::GROUPREF => general_op_groupref"
  - "vm/sre_engine/src/engine.rs:813:59      groupref        U       GROUPREF => general_op_groupref!(|x| x),"
  - "vm/sre_engine/src/engine.rs:814:36      GROUPREF        U       SreOpcode::GROUPREF_IGNORE => general_op"
  - "vm/sre_engine/src/engine.rs:814:66      groupref        U       IGNORE => general_op_groupref!(lower_ascii),"
  - "vm/sre_engine/src/engine.rs:815:36      GROUPREF        U       SreOpcode::GROUPREF_LOC_IGNORE => general"
  - "vm/sre_engine/src/engine.rs:815:70      groupref        U       IGNORE => general_op_groupref!(lower_locate),"
  - "vm/sre_engine/src/engine.rs:816:36      GROUPREF        U       SreOpcode::GROUPREF_UNI_IGNORE => general"
  - "vm/sre_engine/src/engine.rs:816:70      groupref        U       IGNORE => general_op_groupref!(lower_unicode),"
  - "vm/sre_engine/src/engine.rs:817:36      GROUPREF        U       SreOpcode::GROUPREF_EXISTS => {"
  - "vm/sre_engine/src/engine.rs:861:38      BIGCHARSET      U       | SreOpcode::BIGCHARSET"
  - "vm/sre_engine/src/engine.rs:865:38      SUBPATTERN      U       | SreOpcode::SUBPATTERN => {"
  - "vm/sre_engine/src/engine.rs:873:23      coro            U       continue 'coro;"
  - "vm/sre_engine/src/engine.rs:1182:58     atcode          U       ctx: &MatchContext, atcode: SreAtCode) -> bool"
  - "vm/sre_engine/src/engine.rs:1183:11     atcode          U       match atcode {"
  - "vm/sre_engine/src/engine.rs:1213:13     catcode         U       fn category(catcode: SreCatCode, c: u32"
  - "vm/sre_engine/src/engine.rs:1214:11     catcode         U       match catcode {"
  - "vm/sre_engine/src/engine.rs:1253:21     catcode         U       let catcode = match SreCatCode:"
  - "vm/sre_engine/src/engine.rs:1272:24     BIGCHARSET      U       SreOpcode::BIGCHARSET => {"
  - "vm/sre_engine/src/engine.rs:1273:21     BIGCHARSET      U       /* <BIGCHARSET> <blockcount> <256 blockindic"
  - "vm/sre_engine/src/engine.rs:1273:51     blockindices    U       BIGCHARSET> <blockcount> <256 blockindices> <blocks> */"
  - "vm/sre_engine/src/engine.rs:1278:29     blockindices    U       let (_, blockindices, _) = unsafe { set.align"
  - "vm/sre_engine/src/engine.rs:1280:33     blockindices    U       let block = blockindices[block_index as usize"
  - "vm/sre_engine/src/lib.rs:9:11           CODESIZE        U       pub const CODESIZE: usize = 4;"
  - "vm/sre_engine/src/lib.rs:12:11          MAXREPEAT       U       pub const MAXREPEAT: usize = usize::MAX"
  - "vm/sre_engine/src/lib.rs:14:11          MAXREPEAT       U       pub const MAXREPEAT: usize = u32::MAX as"
  - "vm/sre_engine/src/lib.rs:17:11          MAXGROUPS       U       pub const MAXGROUPS: usize = MAXREPEAT"
  - "vm/sre_engine/src/lib.rs:17:30          MAXREPEAT       U       const MAXGROUPS: usize = MAXREPEAT / 4 / 2;"
  - "vm/sre_engine/src/lib.rs:19:11          MAXGROUPS       U       pub const MAXGROUPS: usize = MAXREPEAT"
  - "vm/sre_engine/src/lib.rs:19:30          MAXREPEAT       U       const MAXGROUPS: usize = MAXREPEAT / 2;"
  - "vm/sre_engine/src/string.rs:1:1\tNo issues found"
  - "vm/sre_engine/tests/tests.rs:22:19          pymatch         U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/tests/tests.rs:46:9           zerowidth       U       fn test_zerowidth() {"
  - "vm/sre_engine/tests/tests.rs:64:37          axxzaz          U       mut state) = p.state(\"axxzaz\");"
  - "vm/sre_engine/tests/tests.rs:65:19          pymatch         U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/tests/tests.rs:79:19          pymatch         U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/tests/tests.rs:89:37          baaaa           U       mut state) = p.state(\"baaaa\");"
  - "vm/sre_engine/tests/tests.rs:107:31         r'ababc         U       pattern p = re.compile(r'ababc+')"
  - "vm/sre_engine/tests/tests.rs:111:38         ababc           U       mut state) = p.state(\"!ababc\");"
  - "vm/sre_engine/tests/tests.rs:121:37         pythonpython    U       mut state) = p.state(\"pythonpython\");"
  - "vm/sre_engine/tests/tests.rs:141:37         eeea            U       mut state) = p.state(\"eeea\");"
  - "vm/sre_engine/tests/tests.rs:142:19         pymatch         U       assert!(state.pymatch(&req));"
  - "vm/sre_engine/tests/tests.rs:152:20         pymatch         U       assert!(!state.pymatch(&req));"
  - "vm/sre_engine/tests/tests.rs:168:9          bigcharset      U       fn test_bigcharset() {"
  - "vm/sre_engine/tests/tests.rs:179:16         nonascii        U       fn test_search_nonascii() {"
  - "wapm.toml:1:1\tNo issues found"
  - "wasm/demo/package.json:33:21        Liddle      U       \"author\": \"Ryan Liddle\","
  - "wasm/demo/snippets/asyncbrowser.py:2:8          asyncweb    U       import asyncweb"
  - "wasm/demo/snippets/asyncbrowser.py:15:5         asyncweb    U       asyncweb.run(main(delay))"
  - "wasm/demo/snippets/fetch.py:1:1\tNo issues found"
  - "wasm/demo/snippets/fibonacci.py:1:1\tNo issues found"
  - "wasm/demo/snippets/fizzbuzz.py:1:1\tNo issues found"
  - "wasm/demo/snippets/import_pypi.py:1:8           asyncweb        U       import asyncweb"
  - "wasm/demo/snippets/import_pypi.py:2:8           whlimport       U       import whlimport"
  - "wasm/demo/snippets/import_pypi.py:4:1           whlimport       U       whlimport.setup()"
  - "wasm/demo/snippets/import_pypi.py:12:2          asyncweb        U       @asyncweb.main"
  - "wasm/demo/snippets/import_pypi.py:14:11         whlimport       U       await whlimport.load_package(\"pygments"
  - "wasm/demo/snippets/import_pypi.py:19:5          fmter           U       fmter = pygments.formatters"
  - "wasm/demo/snippets/import_pypi.py:19:52         noclasses       U       formatters.html.HtmlFormatter(noclasses=True, style=\"default"
  - "wasm/demo/snippets/import_pypi.py:20:58         fmter           U       hi, mom!')\", lexer, fmter))"
  - "wasm/demo/snippets/mandelbrot.py:4:5            mandel      U       def mandel():"
  - "wasm/demo/snippets/mandelbrot.py:39:7           mandel      U       gen = mandel()"
  - "wasm/demo/src/browser_module.rs:1:1\tNo issues found"
  - "wasm/demo/src/index.ejs:1:1\tNo issues found"
  - "wasm/demo/src/index.js:14:12        rustpy      U       .then((rustpy) => {"
  - "wasm/demo/src/index.js:15:14        rustpy      U       rp = rustpy;"
  - "wasm/demo/src/index.js:17:21        rustpy      U       window.rp = rustpy;"
  - "wasm/demo/src/style.css:1:1\tNo issues found"
  - "wasm/demo/webpack.config.js:1:1\tNo issues found"
  - "wasm/example/index.html:1:1\tNo issues found"
  - "wasm/example/package.json:1:1\tNo issues found"
  - "wasm/example/src/index.js:1:1\tNo issues found"
  - "wasm/example/src/main.js:1:1\tNo issues found"
  - "wasm/example/src/main.py:1:1\tNo issues found"
  - "wasm/example/webpack.config.js:1:1\tNo issues found"
  - "wasm/lib/Cargo.toml:12:16       cdylib      U       crate-type = [\"cdylib\", \"rlib\"]"
  - "wasm/lib/Cargo.toml:12:26       rlib        U       crate-type = [\"cdylib\", \"rlib\"]"
  - "wasm/lib/Cargo.toml:16:61       pylib       U       stdlib\", \"rustpython-pylib/freeze-stdlib\", \"rustpython"
  - "wasm/lib/Cargo.toml:21:12       pylib       U       rustpython-pylib = { workspace = true"
  - "wasm/lib/Cargo.toml:24:84       wasmbind    U       encodings\", \"serde\", \"wasmbind\"] }"
  - "wasm/lib/Lib/_microdistlib.py:24:5          distname    U       distname = m.groups()[0]"
  - "wasm/lib/Lib/_microdistlib.py:127:14        distname    U       rs = distname"
  - "wasm/lib/Lib/_microdistlib.py:129:25        distname    U       rs = '%s %s' % (distname, ', '.join(['%s %s'"
  - "wasm/lib/Lib/_microdistlib.py:130:27        distname    U       return Container(name=distname, extras=extras, constraints"
  - "wasm/lib/Lib/asyncweb.py:14:9           coro            U       def run(coro):"
  - "wasm/lib/Lib/asyncweb.py:19:13          coro            U       _Runner(coro)"
  - "wasm/lib/Lib/asyncweb.py:22:11          coro            U       def spawn(coro):"
  - "wasm/lib/Lib/asyncweb.py:27:13          coro            U       return _coro_promise(coro)"
  - "wasm/lib/Lib/asyncweb.py:27:26          coro            U       return _coro_promise(coro)"
  - "wasm/lib/Lib/asyncweb.py:204:18         jsclosure       U       @browser.jsclosure_once"
  - "wasm/lib/Lib/asyncweb.py:209:47         jsfloat         U       cb.detach(), browser.jsfloat(ms))"
  - "wasm/lib/Lib/browser.py:14:6        jsstr           U       \"jsstr\","
  - "wasm/lib/Lib/browser.py:15:6        jsclosure       U       \"jsclosure\","
  - "wasm/lib/Lib/browser.py:16:6        jsclosure       U       \"jsclosure_once\","
  - "wasm/lib/Lib/browser.py:17:6        jsfloat         U       \"jsfloat\","
  - "wasm/lib/Lib/browser.py:34:1        jsstr           U       jsstr = window.new_from_str"
  - "wasm/lib/Lib/browser.py:35:1        jsclosure       U       jsclosure = window.new_closure"
  - "wasm/lib/Lib/browser.py:36:1        jsclosure       U       jsclosure_once = window.new_closure"
  - "wasm/lib/Lib/browser.py:37:2        jsfloat         U       _jsfloat = window.new_from_float"
  - "wasm/lib/Lib/browser.py:43:5        jsfloat         U       def jsfloat(n):"
  - "wasm/lib/Lib/browser.py:44:13       jsfloat         U       return _jsfloat(float(n))"
  - "wasm/lib/Lib/browser.py:53:17       jsstr           U       _alert.call(jsstr(msg))"
  - "wasm/lib/Lib/browser.py:62:26       jsstr           U       return _confirm.call(jsstr(msg)).as_bool()"
  - "wasm/lib/Lib/browser.py:75:9        jsstr           U       jsstr(msg), jsstr(default"
  - "wasm/lib/Lib/whlimport.py:3:8           asyncweb        U       import asyncweb"
  - "wasm/lib/Lib/whlimport.py:9:9           microdistlib    U       import _microdistlib"
  - "wasm/lib/Lib/whlimport.py:33:11         asyncweb        U       await asyncweb.wait_all(_load_package"
  - "wasm/lib/Lib/whlimport.py:45:9          urlobj          U       urlobj = urlparse(pkg)"
  - "wasm/lib/Lib/whlimport.py:46:36         urlobj          U       posixpath.basename(urlobj.path)"
  - "wasm/lib/Lib/whlimport.py:53:12         asyncweb        U       deps = asyncweb.spawn(asyncweb.wait"
  - "wasm/lib/Lib/whlimport.py:53:27         asyncweb        U       deps = asyncweb.spawn(asyncweb.wait_all(_load_package"
  - "wasm/lib/Lib/whlimport.py:64:12         microdistlib    U       pkg = _microdistlib.parse_requirement(pkg"
  - "wasm/lib/Lib/whlimport.py:76:53         packagetype     U       ver_downloads if dl[\"packagetype\"] == \"bdist_wheel\")"
  - "wasm/lib/Lib/whlimport.py:106:13        zname           U       for zname, z in cls._packages"
  - "wasm/lib/Lib/whlimport.py:110:50        zname           U       cls, origin=f\"zip:{zname}/{fullpath}\", is_package"
  - "wasm/lib/Lib/whlimport.py:132:9         zipname         U       zipname, slash, path = origin"
  - "wasm/lib/Lib/whlimport.py:133:30        zipname         U       return cls._packages[zipname].read(path).decode("
  - "wasm/lib/Lib/whlimport.py:152:6         searchorder     U       _zip_searchorder = ("
  - "wasm/lib/Lib/whlimport.py:161:17        isbytecode      U       for suffix, isbytecode, ispackage in _zip_searchorde"
  - "wasm/lib/Lib/whlimport.py:161:47        searchorder     U       isbytecode, ispackage in _zip_searchorder:"
  - "wasm/lib/README.md:1:1\tNo issues found"
  - "wasm/lib/src/browser_module.rs:1:1\tNo issues found"
  - "wasm/lib/src/convert.rs:36:9        jserr       U       let jserr = vm.try_class(\"_js"
  - "wasm/lib/src/convert.rs:37:21       jserr       U       let js_arg = if jserr.map_or(false, |jserr"
  - "wasm/lib/src/convert.rs:37:42       jserr       U       jserr.map_or(false, |jserr| py_err.fast_isinstance"
  - "wasm/lib/src/convert.rs:37:73       jserr       U       err.fast_isinstance(&jserr)) {"
  - "wasm/lib/src/convert.rs:119:33      jsresult    U       pyresult_to_jsresult(vm, result)"
  - "wasm/lib/src/convert.rs:167:20      jsresult    U       pub fn pyresult_to_jsresult(vm: &VirtualMachine"
  - "wasm/lib/src/js_module.rs:329:42        jsresult        U       convert::pyresult_to_jsresult(vm, res)"
  - "wasm/lib/src/js_module.rs:503:58        jsresult        U       convert::pyresult_to_jsresult(vm, res)"
  - "wasm/lib/src/js_module.rs:511:58        jsresult        U       convert::pyresult_to_jsresult(vm, res)"
  - "wasm/lib/src/js_module.rs:578:62        awaitpromise    U       non-None value to an awaitpromise\".to_owned(),"
  - "wasm/lib/src/lib.rs:1:1\tNo issues found"
  - "wasm/lib/src/vm_class.rs:51:38          pylib       U       add_frozen(rustpython_pylib::FROZEN_STDLIB);"
  - "wasm/lib/src/vm_class.rs:343:34         jsresult    U       convert::pyresult_to_jsresult(vm, result)"
  - "wasm/lib/src/wasm_builtins.rs:1:1\tNo issues found"
  - "wasm/notebook/package.json:9:10         katex       U       \"katex\": \"^0.12.0\","
  - "wasm/notebook/package.json:36:21        Liddle      U       \"author\": \"Ryan Liddle\","
  - "wasm/notebook/README.md:99:73       Etherpad    U       Think Google Doc or Etherpad editing but for code"
  - "wasm/notebook/snippets/python-js-css/css.css:1:1\tNo issues found"
  - "wasm/notebook/snippets/python-js-css/javascript.js:1:1\tNo issues found"
  - "wasm/notebook/snippets/python-js-css/main.txt:1:1\tNo issues found"
  - "wasm/notebook/snippets/python-js.txt:15:7           xrightarrow     U       H(t) \\xrightarrow{write} \\Big[A(t+1),"
  - "wasm/notebook/snippets/python-markdown-math.txt:37:7        xrightarrow     U       H(t) \\xrightarrow{write} \\Big[A(t+1),"
  - "wasm/notebook/snippets/python-markdown-math.txt:50:8        Bmatrix         U       \\begin{Bmatrix}"
  - "wasm/notebook/snippets/python-markdown-math.txt:53:6        Bmatrix         U       \\end{Bmatrix}"
  - "wasm/notebook/src/editor.js:1:1\tNo issues found"
  - "wasm/notebook/src/index.ejs:1:1\tNo issues found"
  - "wasm/notebook/src/index.js:9:25         stex        U       import 'codemirror/mode/stex/stex';"
  - "wasm/notebook/src/index.js:9:30         stex        U       codemirror/mode/stex/stex';"
  - "wasm/notebook/src/index.js:20:10        iomd        U       import { iomdParser } from './parse"
  - "wasm/notebook/src/index.js:37:12        rustpy      U       .then((rustpy) => {"
  - "wasm/notebook/src/index.js:38:14        rustpy      U       rp = rustpy;"
  - "wasm/notebook/src/index.js:40:21        rustpy      U       window.rp = rustpy;"
  - "wasm/notebook/src/index.js:142:5        pyvm        U       let pyvm = null;"
  - "wasm/notebook/src/index.js:171:9        pyvm        U       if (pyvm) {"
  - "wasm/notebook/src/index.js:172:9        pyvm        U       pyvm.destroy();"
  - "wasm/notebook/src/index.js:173:9        pyvm        U       pyvm = null;"
  - "wasm/notebook/src/index.js:175:5        pyvm        U       pyvm = rp.vmStore.init('notebook"
  - "wasm/notebook/src/index.js:230:22       iomd        U       let parsedCode = iomdParser(mainCode);"
  - "wasm/notebook/src/parse.js:5:44         hashcode    U       implementation of java's hashcode method"
  - "wasm/notebook/src/parse.js:19:17        iomd        U       export function iomdParser(fullIomd) {"
  - "wasm/notebook/src/parse.js:19:32        Iomd        U       function iomdParser(fullIomd) {"
  - "wasm/notebook/src/parse.js:20:11        iomd        U       const iomdLines = fullIomd.split"
  - "wasm/notebook/src/parse.js:20:27        Iomd        U       const iomdLines = fullIomd.split('\\n');"
  - "wasm/notebook/src/parse.js:51:29        iomd        U       (const [i, line] of iomdLines.entries()) {"
  - "wasm/notebook/src/parse.js:84:15        iomd        U       pushChunk(iomdLines.length);"
  - "wasm/notebook/src/process.js:7:8            katex       U       import katex from 'katex';"
  - "wasm/notebook/src/process.js:7:20           katex       U       import katex from 'katex';"
  - "wasm/notebook/src/process.js:8:9            katex       U       import 'katex/dist/katex.min.css'"
  - "wasm/notebook/src/process.js:8:20           katex       U       import 'katex/dist/katex.min.css';"
  - "wasm/notebook/src/process.js:20:21          Katex       U       // Render Math with Katex"
  - "wasm/notebook/src/process.js:23:12          katex       U       return katex.renderToString(math"
  - "wasm/notebook/src/process.js:28:20          pyvm        U       function runPython(pyvm, code, error) {"
  - "wasm/notebook/src/process.js:30:9           pyvm        U       pyvm.exec(code);"
  - "wasm/notebook/src/style.css:1:1\tNo issues found"
  - "wasm/notebook/src/tools.js:1:1\tNo issues found"
  - "wasm/notebook/webpack.config.js:1:1\tNo issues found"
  - "wasm/README.md:1:16         webassembly     U       # Compiling to webassembly"
  - "wasm/tests/conftest.py:23:12        sessionstart        U       def pytest_sessionstart(session):"
  - "wasm/tests/conftest.py:34:12        sessionfinish       U       def pytest_sessionfinish(session):"
  - "wasm/tests/conftest.py:92:5         wdriver             U       def wdriver(request):"
  - "wasm/tests/requirements.txt:1:1\tNo issues found"
  - "wasm/tests/test_demo.py:19:15       wdriver     U       def test_demo(wdriver, script, output):"
  - "wasm/tests/test_demo.py:21:21       wdriver     U       script_output = wdriver.execute_script(script"
  - "wasm/tests/test_exec_mode.py:1:20           wdriver     U       def test_eval_mode(wdriver):"
  - "wasm/tests/test_exec_mode.py:2:12           wdriver     U       assert wdriver.execute_script(\"return"
  - "wasm/tests/test_exec_mode.py:5:20           wdriver     U       def test_exec_mode(wdriver):"
  - "wasm/tests/test_exec_mode.py:6:12           wdriver     U       assert wdriver.execute_script(\"return"
  - "wasm/tests/test_exec_mode.py:9:27           wdriver     U       test_exec_single_mode(wdriver):"
  - "wasm/tests/test_inject_module.py:1:30           wdriver     U       inject_module_basic(wdriver):"
  - "wasm/tests/test_inject_module.py:2:5            wdriver     U       wdriver.execute_script("
  - "wasm/wasm-unknown-test/Cargo.toml:7:16          cdylib          U       crate-type = [\"cdylib\"]"
  - "wasm/wasm-unknown-test/Cargo.toml:10:1          getrandom       U       getrandom = { version = \"0.2."
  - "wasm/wasm-unknown-test/README.md:1:1\tNo issues found"
  - "wasm/wasm-unknown-test/src/lib.rs:12:4          getrandom       U       fn getrandom_always_fail(_buf: &mut"
  - "wasm/wasm-unknown-test/src/lib.rs:12:57         getrandom       U       [u8]) -> Result<(), getrandom::Error> {"
  - "wasm/wasm-unknown-test/src/lib.rs:13:9          getrandom       U       Err(getrandom::Error::UNSUPPORTED"
  - "wasm/wasm-unknown-test/src/lib.rs:16:1          getrandom       U       getrandom::register_custom_getrandom"
  - "wasm/wasm-unknown-test/src/lib.rs:16:28         getrandom       U       getrandom::register_custom_getrandom!(getrandom_always_fail"
  - "whats_left.py:5:3           cpymods                 U       # cpymods - a dictionary mapping"
  - "whats_left.py:79:6          fpectl                  U       \"fpectl\","
  - "whats_left.py:82:6          macpath                 U       \"macpath\","
  - "whats_left.py:100:6         xxmodule                U       'xxmodule', 'xxsubtype', 'xxlimited"
  - "whats_left.py:100:18        xxsubtype               U       'xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz"
  - "whats_left.py:100:31        xxlimited               U       xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz'"
  - "whats_left.py:100:45        xxtestfuzz              U       xxsubtype', 'xxlimited', '_xxtestfuzz'"
  - "whats_left.py:101:7         testbuffer              U       '_testbuffer', '_testcapi', '_testimportmu"
  - "whats_left.py:101:22        testcapi                U       '_testbuffer', '_testcapi', '_testimportmultiple"
  - "whats_left.py:101:35        testimportmultiple      U       testbuffer', '_testcapi', '_testimportmultiple', '_testinternalcapi"
  - "whats_left.py:101:58        testinternalcapi        U       testimportmultiple', '_testinternalcapi', '_testmultiphase'"
  - "whats_left.py:101:79        testmultiphase          U       testinternalcapi', '_testmultiphase',"
  - "whats_left.py:317:1         cpymods                 U       cpymods = {gen_modules()!r}"
  - "whats_left.py:335:1         cpymods                 U       cpymods = {}"
  - "whats_left.py:364:9         implementeds            U       not_implementeds = {}"
  - "whats_left.py:372:17        implementeds            U       not_implementeds[name] = missing_methods"
  - "whats_left.py:375:16        implementeds            U       if not_implementeds:"
  - "whats_left.py:387:5         rustpymods              U       rustpymods = {mod: dir_of_mod_or"
  - "whats_left.py:398:18        cpymod                  U       for modname, cpymod in cpymods.items():"
  - "whats_left.py:398:28        cpymods                 U       for modname, cpymod in cpymods.items():"
  - "whats_left.py:399:9         rustpymod               U       rustpymod = rustpymods.get(modname"
  - "whats_left.py:399:21        rustpymods              U       rustpymod = rustpymods.get(modname)"
  - "whats_left.py:400:12        rustpymod               U       if rustpymod is None:"
  - "whats_left.py:402:25        rustpymod               U       elif isinstance(rustpymod, Exception):"
  - "whats_left.py:403:51        rustpymod               U       import\"][modname] = rustpymod.__class__.__name__"
  - "whats_left.py:403:86        rustpymod               U       class__.__name__ + str(rustpymod)"
  - "whats_left.py:405:44        cpymod                  U       mplemented_items = sorted(set(cpymod) & set(rustpymod))"
  - "whats_left.py:406:37        cpymod                  U       missing_items = set(cpymod) - set(rustpymod)"
  - "whats_left.py:411:63        cpymod                  U       rustpymod[item][\"sig\"], cpymod[item][\"sig\"])"
  - "whats_left.py:413:46        cpymod                  U       rustpymod[item][\"sig\"] != cpymod[item][\"sig\"]"
  - "whats_left.py:431:33        cpymods                 U       cpython_modules\"] = cpymods"
  - "whats_left.py:432:17        implementeds            U       result[\"not_implementeds\"] = not_implementeds"
  - "whats_left.py:432:38        implementeds            U       implementeds\"] = not_implementeds"
  - "whats_left.py:452:32        RUSTPYTHONPATH          U       os.environ.copy(), \"RUSTPYTHONPATH\": \"Lib\"},"
  - "whats_left.py:487:23        rustpy                  U       for i, (item, rustpy_value, cpython_value"
  - "whats_left.py:490:16        rustpy                  U       if rustpy_value is None or rustpy"
  - "whats_left.py:490:40        rustpy                  U       rustpy_value is None or rustpy_value.startswith(\"ValueError"
  - "whats_left.py:491:17        rustpy                  U       rustpy_value = f\" {rustpy_value"
  - "whats_left.py:491:36        rustpy                  U       rustpy_value = f\" {rustpy_value}\""
