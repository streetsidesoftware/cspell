---
Repository: RustPython/RustPython
Url: https://github.com/RustPython/RustPython.git
Args: ["**"]
Summary:
  files: 1795
  filesWithIssues: 1367
  issues: 41243
  errors: 0
Errors: []

issues: 
  - "benches/benchmarks/fannkuch.py:5:16     	Sokolov 	U   	Contributed by Sokolov Yura, modified by Tupteq"
  - "benches/benchmarks/fannkuch.py:5:24     	Yura    	U   	Contributed by Sokolov Yura, modified by Tupteq"
  - "benches/benchmarks/fannkuch.py:5:42     	Tupteq  	U   	Sokolov Yura, modified by Tupteq."
  - "benches/benchmarks/fannkuch.py:8:10     	pyperf  	U   	# import pyperf"
  - "benches/benchmarks/fannkuch.py:14:5     	fannkuch	U   	def fannkuch(n):"
  - "benches/benchmarks/nbody.py:5:23    	Fredrik     	U   	modified by Tupteq, Fredrik Johansson, and Daniel"
  - "benches/benchmarks/nbody.py:5:31    	Johansson   	U   	modified by Tupteq, Fredrik Johansson, and Daniel Nanz"
  - "benches/benchmarks/nbody.py:5:53    	Nanz        	U   	Johansson, and Daniel Nanz"
  - "benches/benchmarks/pystone.py:7:57      	Pystone     	U   	corresponds to C/1.1 plus 2 Pystone fixes)"
  - "benches/benchmarks/pystone.py:9:29      	Weicker     	U   	Reinhold P. Weicker, CACM Vol 27, No 1"
  - "benches/benchmarks/pystone.py:15:58     	Rossum      	U   	Python by Guido van Rossum."
  - "benches/benchmarks/pystone.py:19:51     	Arndt       	U   	version 1.1.1 by Chris Arndt:"
  - "benches/benchmarks/pystone.py:52:40     	Discr       	U   	self, PtrComp = None, Discr = 0, EnumComp = 0,"
  - "benches/benchmarks/pystone.py:87:5      	starttime   	U   	starttime = clock()"
  - "benches/benchmarks/pystone.py:90:5      	nulltime    	U   	nulltime = clock() - starttime"
  - "benches/benchmarks/pystone.py:128:5     	benchtime   	U   	benchtime = clock() - starttime"
  - "benches/benchmarks/pystone.py:130:17    	Benchtime   	U   	loopsPerBenchtime = 0.0"
  - "benches/execution.rs:5:5        	rustpython  	U   	use rustpython_compiler::Mode;"
  - "benches/execution.rs:11:10      	cpython     	U   	fn bench_cpython_code(b: &mut Bencher"
  - "benches/execution.rs:24:10      	rustpy      	U   	fn bench_rustpy_code(b: &mut Bencher"
  - "benches/execution.rs:31:43      	builtins    	U   	= vm.new_scope_with_builtins();"
  - "benches/execution.rs:33:23      	pyresult    	U   	vm.unwrap_pyresult(res);"
  - "benches/execution.rs:95:18      	pystone     	U   	pub fn benchmark_pystone(group: &mut BenchmarkGroup"
  - "benches/microbenchmarks.rs:35:35    	microbenchmark  	U   	panic!(\"Error running microbenchmark\")"
  - "benches/microbenchmarks.rs:114:14   	dont            	U   	settings.dont_write_bytecode = true"
  - "benches/microbenchmarks.rs:114:25   	bytecode        	U   	settings.dont_write_bytecode = true;"
  - "benches/microbenchmarks.rs:141:52   	pyobj           	U   	ITERATIONS\", vm.new_pyobj(idx), vm)"
  - "benches/microbenchmarks.rs:173:40   	microbenchmarks 	U   	c.benchmark_group(\"microbenchmarks\");"
  - "benches/microbenchmarks.rs:198:49   	splitn          	U   	Vec<&str> = contents.splitn(2, \"# ---\").collect"
  - "benches/README.md:10:16     	tracebacks  	U   	To view Python tracebacks during benchmarks, run"
  - "benches/README.md:58:1      	rustflags   	U   	rustflags = ["
  - "benches/test_benchmarks.py:19:18    	nbody   	U   	['benchmarks/nbody.py'],"
  - "Cargo.toml:17:60    	codegen     	U   	compiler/core\", \"compiler/codegen\", \"compiler/parser\""
  - "Cargo.toml:18:44    	pylib       	U   	derive\", \"jit\", \"vm\", \"pylib\", \"stdlib\", \"wasm/lib"
  - "Cargo.toml:18:53    	stdlib      	U   	jit\", \"vm\", \"pylib\", \"stdlib\", \"wasm/lib\", \"derive"
  - "Cargo.toml:22:44    	importlib   	U   	\"stdlib\", \"zlib\", \"importlib\", \"encodings\", \"rustpython"
  - "Cargo.toml:22:88    	lalrpop     	U   	\"rustpython-parser/lalrpop\"]"
  - "Cargo.toml:26:49    	flamescope  	U   	flame-it\", \"flame\", \"flamescope\"]"
  - "Cargo.toml:45:82    	termcolor   	U   	features = [\"atty\", \"termcolor\"] }"
  - "Cargo.toml:48:1     	libc        	U   	libc = \"0.2.133\""
  - "Cargo.toml:54:1     	rustyline   	U   	rustyline = \"10.0.0\""
  - "Cargo.toml:90:16    	Uncommment  	U   	# REDOX START, Uncommment when you want to compile"
  - "Cargo.toml:90:63    	redoxer     	U   	to compile/check with redoxer"
  - "common/Cargo.toml:12:1      	bitflags    	U   	bitflags = \"1.3.2\""
  - "common/Cargo.toml:14:1      	hexf        	U   	hexf-parse = \"0.2.1\""
  - "common/Cargo.toml:15:1      	itertools   	U   	itertools = \"0.10.3\""
  - "common/Cargo.toml:26:1      	siphasher   	U   	siphasher = \"0.3\""
  - "common/Cargo.toml:27:1      	unic        	U   	unic-ucd-category = \"0.9"
  - "common/Cargo.toml:31:1      	widestring  	U   	widestring = \"0.5.1\""
  - "common/src/boxvec.rs:1:8        	unresizable     	U   	//! An unresizable vector backed by a"
  - "common/src/boxvec.rs:7:22       	Uninit          	U   	mem::{self, MaybeUninit},"
  - "common/src/boxvec.rs:264:23     	nonoverlapping  	U   	ptr::copy_nonoverlapping(other.as_ptr(), dst"
  - "common/src/boxvec.rs:513:20     	memmove         	U   	// memmove back untouched tail"
  - "common/src/boxvec.rs:582:5      	Rawptr          	U   	/// Rawptr add but uses arithmetic"
  - "common/src/boxvec.rs:621:21     	elems           	U   	let rhs_elems = rhs[self.len()..]"
  - "common/src/bytes.rs:1:8     	repr    	U   	pub fn repr(b: &[u8]) -> String"
  - "common/src/bytes.rs:9:13    	squote  	U   	let mut squote = 0;"
  - "common/src/bytes.rs:10:13   	dquote  	U   	let mut dquote = 0;"
  - "common/src/cformat.rs:9:23      	Peekable    	U   	iter::{Enumerate, Peekable},"
  - "common/src/cformat.rs:49:17     	Preconversor	U   	pub type CFormatPreconversor = super::format::FormatPrecon"
  - "common/src/cformat.rs:123:50    	peekable    	U   	chars().enumerate().peekable();"
  - "common/src/cformat.rs:463:57    	Repr        	U   	CFormatPreconversor::Repr),"
  - "common/src/cmp.rs:9:42      	rustc   	U   	avoid any optimizations rustc might do with slices"
  - "common/src/crt_fd.rs:10:21      	chsize      	U   	#[link_name = \"_chsize_s\"]"
  - "common/src/crt_fd.rs:11:8       	ftruncate   	U   	fn ftruncate(fd: i32, len: i64)"
  - "common/src/crt_fd.rs:21:27      	longlong    	U   	type Offset = libc::c_longlong;"
  - "common/src/crt_fd.rs:26:24      	errno       	U   	Err(crate::os::errno())"
  - "common/src/crt_fd.rs:48:12      	wopen       	U   	pub fn wopen(path: &widestring::WideCStr"
  - "common/src/crt_fd.rs:55:38      	wasi        	U   	any(unix, target_os = \"wasi\"), not(target_os ="
  - "common/src/crt_fd.rs:56:12      	openat      	U   	pub fn openat(&self, path: &ffi::CStr"
  - "common/src/crt_fd.rs:78:21      	osfhandle   	U   	fn _get_osfhandle(fd: i32) -> libc::intptr"
  - "common/src/float_ops.rs:5:8     	ufrexp      	U   	pub fn ufrexp(value: f64) -> (f64"
  - "common/src/float_ops.rs:191:18  	fract       	U   	always_shows_fract: bool,"
  - "common/src/float_ops.rs:228:13  	significand 	U   	let significand = &lit[..position];"
  - "common/src/float_ops.rs:336:8   	floordiv    	U   	pub fn floordiv(v1: f64, v2: f64) -"
  - "common/src/float_ops.rs:344:8   	divmod      	U   	pub fn divmod(v1: f64, v2: f64) -"
  - "common/src/float_ops.rs:358:4   	nextafter   	U   	// nextafter algorithm based off"
  - "common/src/float_ops.rs:370:27  	copysign    	U   	f64::from_bits(1).copysign(y)"
  - "common/src/float_ops.rs:400:35  	ndigits     	U   	float_digits(x: f64, ndigits: i32) -> Option<f64"
  - "common/src/float_ops.rs:404:18  	trunc       	U   	if x.trunc() % 2.0 == 0.0 {"
  - "common/src/float_ops.rs:414:73  	consts      	U   	MIN_EXP) as f64 * f64::consts::LOG10_2) as i32;"
  - "common/src/float_ops.rs:425:27  	powf        	U   	(10.0.powf((ndigits - 22) as f"
  - "common/src/format.rs:2:17       	Itertools       	U   	use itertools::{Itertools, PeekingNext};"
  - "common/src/format.rs:23:18      	preconversor    	U   	let Some(preconversor) = Self::from_string"
  - "common/src/format.rs:317:9      	disp            	U   	disp_digit_cnt: i32,"
  - "common/src/format.rs:782:9      	preconversion   	U   	preconversion_spec: Option<char>,"
  - "common/src/format.rs:845:82     	conversor       	U   	the comma is maybe a conversor spec."
  - "common/src/format.rs:1097:39    	ddfe            	U   	FormatPart::Literal(\"}ddfe\".to_owned()),"
  - "common/src/hash.rs:3:24     	Hasher  	U   	use siphasher::sip::SipHasher24;"
  - "common/src/hash.rs:21:25    	siphash 	U   	const ALGO: &str = \"siphash24\";"
  - "common/src/hash.rs:35:14    	hasher  	U   	fn build_hasher(&self) -> Self::Hasher"
  - "common/src/hash.rs:52:13    	urandom 	U   	lcg_urandom(seed, &mut buf);"
  - "common/src/hash.rs:67:58    	hashf   	U   	E>(&self, iter: I, hashf: F) -> Result<PyHash"
  - "common/src/hash.rs:104:9    	frexp   	U   	let frexp = super::float_ops:"
  - "common/src/hash.rs:132:43   	signum  	U   	x as PyHash * value.signum() as PyHash))"
  - "common/src/lib.rs:9:9       	boxvec  	U   	pub mod boxvec;"
  - "common/src/lib.rs:11:9      	cformat 	U   	pub mod cformat;"
  - "common/src/linked_list.rs:97:45     	noalias 	U   	compiler to put the `noalias` attribute on mutable"
  - "common/src/linked_list.rs:279:5     	curr    	U   	curr: Option<NonNull<T::Target"
  - "common/src/lock.rs:18:28    	unsync  	U   	pub use once_cell::unsync::{Lazy, OnceCell};"
  - "common/src/lock.rs:42:28    	rwlock  	U   	add fn const_{mutex,rwlock}() if necessary, but"
  - "common/src/lock/cell_lock.rs:72:23      	sharedly    	U   	deadlock(\"sharedly \", \"RwLock\")"
  - "common/src/lock/cell_lock.rs:131:23     	upgradably  	U   	deadlock(\"upgradably+sharedly \", \"RwLock"
  - "common/src/macros.rs:12:34      	msvc	U   	windows, target_env = \"msvc\"))]"
  - "common/src/os.rs:1:77       	posix   	U   	interfaces from stdlib::{os, posix, nt} to here"
  - "common/src/rc.rs:6:28       	newtypes	U   	type aliases instead of newtypes because you can't do"
  - "common/src/rc.rs:7:4        	newtype 	U   	// newtype; requires the arbitrary"
  - "common/src/static_cell.rs:16:28     	localkey	U   	pub const fn _from_localkey(inner: &'static LocalKey"
  - "common/src/static_cell.rs:79:28     	oncecell	U   	pub const fn _from_oncecell(inner: OnceCell<T>)"
  - "common/src/str.rs:49:43     	uncomputed  	U   	MAX as a sentinel for \"uncomputed\""
  - "common/src/str.rs:121:73    	maxsize     	U   	vec.capacity() < sys.maxsize"
  - "common/src/str.rs:170:32    	nchars      	U   	char_range_end(s: &str, nchars: usize) -> Option<usize"
  - "common/src/str.rs:181:8     	zfill       	U   	pub fn zfill(bytes: &[u8], width"
  - "common/src/str.rs:199:52    	unicodes    	U   	compatible, escaping unicodes into escape"
  - "common/src/str.rs:365:5     	dquoted     	U   	dquoted: bool,"
  - "common/src/str.rs:416:21    	dquouted    	U   	// the tuple is dquouted, out_len"
  - "common/src/str.rs:451:24    	unicodedata 	U   	// unicodedata lookup just for ascii"
  - "common/src/str.rs:487:42    	squotes     	U   	quotes_for_repr(num_squotes: usize, num_dquotes"
  - "common/src/str.rs:487:62    	dquotes     	U   	squotes: usize, num_dquotes: usize) -> (char, usize"
  - "compiler/ast/asdl_rs.py:11:8    	asdl        	U   	import asdl"
  - "compiler/ast/asdl_rs.py:42:5    	unaryop     	U   	unaryop = Invert | Not | UAdd"
  - "compiler/ast/asdl_rs.py:89:18   	userdata    	U   	self.has_userdata = None"
  - "compiler/ast/asdl_rs.py:104:13  	childinfo   	U   	childinfo = typeinfo[child]"
  - "compiler/ast/asdl_rs.py:113:11  	Userdata    	U   	class FindUserdataTypesVisitor(asdl.VisitorBase"
  - "compiler/ast/asdl_rs.py:119:24  	dfns        	U   	for dfn in mod.dfns:"
  - "compiler/ast/asdl_rs.py:179:28  	typedefs    	U   	Visitor to generate typedefs for AST.\"\"\""
  - "compiler/ast/asdl_rs.py:198:9   	rustname    	U   	rustname = get_rust_type(name"
  - "compiler/ast/asdl_rs.py:209:9   	enumname    	U   	enumname = rustname = get_rust"
  - "compiler/ast/asdl_rs.py:237:9   	fieldtype   	U   	fieldtype = self.typeinfo.get"
  - "compiler/ast/asdl_rs.py:253:9   	dataname    	U   	dataname = rustname = get_rust"
  - "compiler/ast/asdl_rs.py:259:13  	datadef     	U   	datadef = f\"{dataname}{generics"
  - "compiler/ast/asdl_rs.py:360:9   	structname  	U   	structname = get_rust_type(name"
  - "compiler/ast/asdl_rs.py:421:17  	pyclass     	U   	f'#[pyclass(module = \"_ast\", name"
  - "compiler/ast/asdl_rs.py:431:18  	classdef    	U   	self.gen_classdef(cons.name, cons.fields"
  - "compiler/ast/asdl_rs.py:532:22  	fromobj     	U   	self.gen_sum_fromobj(sum, name, enumname"
  - "compiler/ast/asdl_rs.py:584:36  	sumname     	U   	sum_fromobj(self, sum, sumname, enumname, depth):"
  - "compiler/ast/asdl_rs.py:600:44  	prodname    	U   	fromobj(self, product, prodname, structname, depth)"
  - "compiler/ast/asdl_rs.py:644:18  	clippy      	U   	#![allow(clippy::derive_partial_eq_without"
  - "compiler/ast/asdl.py:130:9      	klass   	U   	klass = obj.__class__"
  - "compiler/ast/asdl.py:133:13     	methname	U   	methname = \"visit\" + klass._"
  - "compiler/ast/asdl.py:208:18     	ASDL    	U   	parser = ASDLParser()"
  - "compiler/ast/asdl.py:299:13     	sumlist 	U   	sumlist = [Constructor(self"
  - "compiler/ast/Cargo.toml:11:1    	unparse 	U   	unparse = [\"rustpython-common"
  - "compiler/ast/Python.asdl:9:30       	argtypes        	U   	FunctionType(expr* argtypes, expr returns)"
  - "compiler/ast/Python.asdl:28:70      	parens          	U   	simple name without parens"
  - "compiler/ast/Python.asdl:31:19      	orelse          	U   	-- use 'orelse' because else is a keyword"
  - "compiler/ast/Python.asdl:36:18      	withitem        	U   	| With(withitem* items, stmt* body,"
  - "compiler/ast/Python.asdl:42:29      	excepthandler   	U   	| Try(stmt* body, excepthandler* handlers, stmt* orelse"
  - "compiler/ast/Python.asdl:42:74      	finalbody       	U   	stmt* orelse, stmt* finalbody)"
  - "compiler/ast/Python.asdl:49:13      	Nonlocal        	U   	| Nonlocal(identifier* names)"
  - "compiler/ast/Python.asdl:57:19      	boolop          	U   	expr = BoolOp(boolop op, expr* values)"
  - "compiler/ast/Python.asdl:64:22      	elts            	U   	| Set(expr* elts)"
  - "compiler/ast/Python.asdl:75:31      	cmpop           	U   	Compare(expr left, cmpop* ops, expr* comparators"
  - "compiler/ast/Python.asdl:99:28      	Mult            	U   	operator = Add | Sub | Mult | MatMult | Div | Mod"
  - "compiler/ast/Python.asdl:111:23     	posonlyargs     	U   	arguments = (arg* posonlyargs, arg* args, arg? vararg"
  - "compiler/ast/Python.asdl:111:52     	vararg          	U   	posonlyargs, arg* args, arg? vararg, arg* kwonlyargs,"
  - "compiler/ast/Python.asdl:111:65     	kwonlyargs      	U   	args, arg? vararg, arg* kwonlyargs,"
  - "compiler/ast/Python.asdl:112:42     	kwarg           	U   	expr* kw_defaults, arg? kwarg, expr* defaults)"
  - "compiler/ast/Python.asdl:117:66     	kwargs          	U   	NULL identifier for **kwargs)"
  - "compiler/ast/Python.asdl:122:43     	asname          	U   	identifier name, identifier? asname)"
  - "compiler/ast/src/ast_gen.rs:119:20  	Withitem        	U   	items: Vec<Withitem<U>>,"
  - "compiler/ast/src/ast_gen.rs:138:23  	Excepthandler   	U   	handlers: Vec<Excepthandler<U>>,"
  - "compiler/ast/src/ast_gen.rs:172:13  	Boolop          	U   	op: Boolop,"
  - "compiler/ast/src/ast_gen.rs:185:13  	Unaryop         	U   	op: Unaryop,"
  - "compiler/ast/src/ast_gen.rs:232:18  	Cmpop           	U   	ops: Vec<Cmpop>,"
  - "compiler/ast/src/constant.rs:13:26      	imag	U   	Complex { real: f64, imag: f64 },"
  - "compiler/ast/src/lib.rs:5:5     	impls   	U   	mod impls;"
  - "compiler/ast/src/unparse.rs:26:8    	Unparser    	U   	struct Unparser<'a> {"
  - "compiler/ast/src/unparse.rs:51:22   	opprec      	U   	macro_rules! opprec {"
  - "compiler/ast/src/unparse.rs:52:15   	opty        	U   	($opty:ident, $x:expr, $enu"
  - "compiler/ast/src/unparse.rs:52:74   	prec        	U   	ident($op:literal, $prec:ident)),*$(,)?) =>"
  - "compiler/ast/src/unparse.rs:92:21   	rassoc      	U   	let rassoc = matches!(op, Operator"
  - "compiler/ast/src/unparse.rs:134:25  	npos        	U   	let npos = args.args.len() +"
  - "compiler/ast/src/unparse.rs:259:43  	genexp      	U   	make sure a single genexp doesn't get double parens"
  - "compiler/ast/src/unparse.rs:286:60  	joinedstr   	U   	values } => self.unparse_joinedstr(values, false)?,"
  - "compiler/ast/src/unparse.rs:439:16  	fstring     	U   	fn unparse_fstring_body<U>(&mut self, values"
  - "compiler/Cargo.toml:13:1    	thiserror   	U   	thiserror = \"1.0\""
  - "compiler/codegen/Cargo.toml:14:1    	ahash   	U   	ahash = \"0.7.6\""
  - "compiler/codegen/Cargo.toml:16:1    	indexmap	U   	indexmap = \"1.8.1\""
  - "compiler/codegen/Cargo.toml:19:49   	serde   	U   	.4.0\", features = [\"serde\"] }"
  - "compiler/codegen/Cargo.toml:26:1    	insta   	U   	insta = \"1.14.0\""
  - "compiler/codegen/src/compile.rs:9:13    	Codegen         	U   	error::{CodegenError, CodegenErrorType"
  - "compiler/codegen/src/compile.rs:11:5    	symboltable     	U   	symboltable::{self, SymbolFlags"
  - "compiler/codegen/src/compile.rs:33:18   	nargs           	U   	Positional { nargs: u32 },"
  - "compiler/codegen/src/compile.rs:204:13  	posonlyarg      	U   	posonlyarg_count: 0,"
  - "compiler/codegen/src/compile.rs:206:13  	kwonlyarg       	U   	kwonlyarg_count: 0,"
  - "compiler/codegen/src/compile.rs:216:13  	cellvar         	U   	cellvar_cache: IndexSet::default"
  - "compiler/codegen/src/compile.rs:217:13  	freevar         	U   	freevar_cache: IndexSet::default"
  - "compiler/codegen/src/compile.rs:326:40  	codeinfo        	U   	cache(self.current_codeinfo());"
  - "compiler/codegen/src/compile.rs:601:39  	fromlist        	U   	from .... import (*fromlist)"
  - "compiler/codegen/src/compile.rs:823:61  	augassign       	U   	value } => self.compile_augassign(target, op, value)?"
  - "compiler/codegen/src/compile.rs:905:17  	funcflags       	U   	let mut funcflags = bytecode::MakeFunctionFlags"
  - "compiler/codegen/src/compile.rs:935:25  	varargs         	U   	let mut compile_varargs = |va: Option<&ast:"
  - "compiler/codegen/src/compile.rs:1058:29 	finallyhandler  	U   	// We enter the finallyhandler block, without return"
  - "compiler/codegen/src/compile.rs:1199:17 	freevars        	U   	if code.freevars.is_empty() {"
  - "compiler/codegen/src/compile.rs:1296:13 	dunder          	U   	let dunder_name = self.name(\"_"
  - "compiler/codegen/src/compile.rs:1303:13 	qualname        	U   	let qualname = self.name(\"__qualname"
  - "compiler/codegen/src/compile.rs:1314:13 	classcell       	U   	let classcell_idx = self"
  - "compiler/codegen/src/compile.rs:1369:54 	bytecodes       	U   	default None and no bytecodes unless it is Some"
  - "compiler/codegen/src/compile.rs:1553:9  	vals            	U   	vals: &[ast::Expr],"
  - "compiler/codegen/src/compile.rs:1594:26 	pseudocode      	U   	// compile into (pseudocode):"
  - "compiler/codegen/src/compile.rs:1820:50 	inplace         	U   	op: &ast::Operator, inplace: bool) {"
  - "compiler/codegen/src/compile.rs:1830:64 	Lshift          	U   	bytecode::BinaryOperator::Lshift,"
  - "compiler/codegen/src/compile.rs:1831:64 	Rshift          	U   	bytecode::BinaryOperator::Rshift,"
  - "compiler/codegen/src/compile.rs:1837:41 	Inplace         	U   	Instruction::BinaryOperationInplace { op }"
  - "compiler/codegen/src/compile.rs:2162:23 	listcomp        	U   	\"<listcomp>\","
  - "compiler/codegen/src/compile.rs:2179:23 	setcomp         	U   	\"<setcomp>\","
  - "compiler/codegen/src/compile.rs:2200:23 	dictcomp        	U   	\"<dictcomp>\","
  - "compiler/codegen/src/compile.rs:2221:46 	genexpr         	U   	compile_comprehension(\"<genexpr>\", None, generators"
  - "compiler/codegen/src/compile.rs:2263:13 	groupby         	U   	let groupby = keywords.iter().group"
  - "compiler/codegen/src/compile.rs:2264:28 	subkeywords     	U   	for (is_unpacking, subkeywords) in &groupby {"
  - "compiler/codegen/src/compile.rs:2271:25 	subsize         	U   	let mut subsize = 0;"
  - "compiler/codegen/src/compile.rs:2740:39 	codeobjects     	U   	value.display_expand_codeobjects().to_string(),"
  - "compiler/codegen/src/compile.rs:2783:24 	woohoo          	U   	async with woohoo():"
  - "compiler/codegen/src/ir.rs:13:26    	petgraph    	U   	TODO: look into using petgraph for handling blocks"
  - "compiler/codegen/src/ir.rs:48:17    	stackdepth  	U   	let max_stackdepth = self.max_stackdepth"
  - "compiler/codegen/src/ir.rs:109:13   	varnames    	U   	varnames: varname_cache.into"
  - "compiler/codegen/src/ir.rs:110:13   	cellvars    	U   	cellvars: cellvar_cache.into"
  - "compiler/codegen/src/ir.rs:126:23   	cellarg     	U   	let mut found_cellarg = false;"
  - "compiler/codegen/src/ir.rs:165:17   	maxdepth    	U   	let mut maxdepth = 0u32;"
  - "compiler/codegen/src/ir.rs:167:17   	startdepths 	U   	let mut startdepths = vec![u32::MAX; self"
  - "compiler/codegen/src/symboltable.rs:19:66   	subscopes   	U   	scope, and has a list of subscopes in this scope."
  - "compiler/codegen/src/symboltable.rs:28:32   	sourcecode  	U   	The line number in the sourcecode where this symboltable"
  - "compiler/codegen/src/symboltable.rs:110:45  	unallowed   	U   	assignment to detect unallowed re-assignment to iterator"
  - "compiler/codegen/src/symboltable.rs:534:24  	Compr       	U   	AssignedNamedExprInCompr,"
  - "compiler/codegen/src/symboltable.rs:744:36  	mymodule    	U   	// `import mymodule as myalias`"
  - "compiler/codegen/src/symboltable.rs:744:48  	myalias     	U   	`import mymodule as myalias`"
  - "compiler/codegen/src/symboltable.rs:1273:31 	namedexpr   	U   	&& symbol.is_assign_namedexpr_in_comprehension*/"
  - "compiler/core/Cargo.toml:11:1       	bincode 	U   	bincode = \"1.3.3\""
  - "compiler/core/Cargo.toml:13:1       	bstr    	U   	bstr = \"0.2.17\""
  - "compiler/core/src/bytecode.rs:62:7      	codeobject  	U   	/// a codeobject. Also a module has a"
  - "compiler/core/src/bytecode.rs:609:9     	varkwarg    	U   	pub varkwarg: Option<&'a N>,"
  - "compiler/core/src/bytecode.rs:631:22    	getargs     	U   	/// like inspect.getargs"
  - "compiler/core/src/bytecode.rs:634:13    	nkwargs     	U   	let nkwargs = self.kwonlyarg_count"
  - "compiler/core/src/bytecode.rs:635:17    	varargspos  	U   	let mut varargspos = nargs + nkwargs;"
  - "compiler/core/src/bytecode.rs:809:17    	Bytecode    	U   	/// Invalid Bytecode"
  - "compiler/core/src/bytecode.rs:1075:13   	cellname    	U   	let cellname = |i: u32| {"
  - "compiler/core/src/bytecode.rs:1245:31   	bincode's   	U   	// manually mimic bincode's seq encoding, which"
  - "compiler/core/src/bytecode.rs:1299:21   	subslice    	U   	let mut subslice = &self.data[self.pos"
  - "compiler/core/src/bytecode.rs:1324:29   	Bincode     	U   	impl<'storage> bincode::BincodeRead<'storage> for VecReader"
  - "compiler/core/src/location.rs:3:5       	Sourcecode  	U   	/// Sourcecode location."
  - "compiler/parser/build.rs:5:10       	keccak  	U   	use tiny_keccak::{Hasher, Sha3};"
  - "compiler/parser/build.rs:103:13     	kwds    	U   	let mut kwds = phf_codegen::Map:"
  - "compiler/parser/build.rs:110:12     	moreso  	U   	// moreso \"standard\" keywords"
  - "compiler/parser/python.lalrpop:272:29   	usize       	U   	ImportFromLocation: (Option<usize>, Option<String>) ="
  - "compiler/parser/python.lalrpop:326:20   	nonlocal    	U   	<location:@L> \"nonlocal\" <names:OneOrMore<Identifier"
  - "compiler/parser/python.lalrpop:361:77   	elif        	U   	body:Suite> <s2:(@L \"elif\" NamedExpressionTest"
  - "compiler/parser/python.lalrpop:518:19   	withitems   	U   	<WithItem<\"no-withitems\">> => vec![<>],"
  - "compiler/parser/python.lalrpop:591:46   	Kwarg       	U   	ameterDefs<ArgType>> <kw:(\",\" KwargParameter<ArgType>)>"
  - "compiler/parser/python.lalrpop:1299:13  	Cond        	U   	ExpressionNoCond: ast::Expr = OrTest"
  - "compiler/parser/python.lalrpop:1383:28  	Amper       	U   	\"&\" => lexer::Tok::Amper,"
  - "compiler/parser/python.lalrpop:1388:28  	Vbar        	U   	\"|\" => lexer::Tok::Vbar,"
  - "compiler/parser/python.lalrpop:1394:28  	Lsqb        	U   	\"[\" => lexer::Tok::Lsqb,"
  - "compiler/parser/python.lalrpop:1395:28  	Rsqb        	U   	\"]\" => lexer::Tok::Rsqb,"
  - "compiler/parser/python.lalrpop:1419:29  	Rarrow      	U   	\"->\" => lexer::Tok::Rarrow,"
  - "compiler/parser/python.lalrpop:1430:31  	Elif        	U   	elif\" => lexer::Tok::Elif,"
  - "compiler/parser/README.md:53:1      	Datatypes   	U   	Datatypes to support source location"
  - "compiler/parser/src/error.rs:2:61       	maksing 	U   	and a safe error API, maksing errors from LALR"
  - "compiler/parser/src/error.rs:5:33       	Lalrpop 	U   	util::ParseError as LalrpopError;"
  - "compiler/parser/src/function.rs:46:13   	posonly 	U   	let mut posonly = Vec::with_capacity"
  - "compiler/parser/src/lexer.rs:236:25     	feff        	U   	if let Some('\\u{feff}') = lxr.window[0]"
  - "compiler/parser/src/lexer.rs:654:32     	dedentations	U   	// One or more dedentations"
  - "compiler/parser/src/lexer.rs:1085:25    	whitespaces 	U   	// Skip whitespaces"
  - "compiler/parser/src/lexer.rs:1206:8     	stok        	U   	fn stok(s: &str) -> Tok {"
  - "compiler/parser/src/lexer.rs:1313:24    	avariable   	U   	let source = r\"avariable = 99 + 2-0\";"
  - "compiler/parser/src/lib.rs:31:3     	rustfmt 	U   	#[rustfmt::skip]"
  - "compiler/parser/src/parser.rs:17:31     	antlr   	U   	Grammar may be inspired by antlr grammar for python:"
  - "compiler/parser/src/string_parser.rs:176:17     	delims          	U   	let mut delims = Vec::new();"
  - "compiler/parser/src/string_parser.rs:185:67     	fstrings        	U   	a tokenizing of the fstrings to omit this peeking"
  - "compiler/parser/src/string_parser.rs:580:27     	selfdocumenting 	U   	fn test_fstring_parse_selfdocumenting_base() {"
  - "compiler/parser/src/string_parser.rs:656:27     	selfdoc         	U   	fn test_parse_fstring_selfdoc_prec_space() {"
  - "compiler/parser/src/string.rs:26:39     	nonbytes	U   	cannot mix bytes and nonbytes literals\".to_owned("
  - "compiler/parser/src/string.rs:79:13     	deduped 	U   	let mut deduped: Vec<Expr> = vec![]"
  - "compiler/parser/src/string.rs:207:28    	omkmok  	U   	let source = r##\"b\"omkmok\\Xaa\"\"##;"
  - "compiler/src/lib.rs:46:16   	symtable	U   	pub fn compile_symtable("
  - "derive-impl/Cargo.toml:12:1     	maplit  	U   	maplit = \"1.0.2\""
  - "derive-impl/Cargo.toml:18:1     	textwrap	U   	textwrap = { version = \"0.15"
  - "derive-impl/src/compile_bytecode.rs:139:68  	canonicalize	U   	read_to_string(path.canonicalize().unwrap()) {"
  - "derive-impl/src/compile_bytecode.rs:209:46  	badsyntax   	U   	if stem.starts_with(\"badsyntax_\")"
  - "derive-impl/src/compile_bytecode.rs:234:5   	metas       	U   	metas: Vec<Meta>,"
  - "derive-impl/src/error.rs:139:28     	Punct   	U   	dst.append(Punct::new('!', Spacing::Alone"
  - "derive-impl/src/from_args.rs:38:33      	pyarg       	U   	attr.path.is_ident(\"pyarg\") {"
  - "derive-impl/src/from_args.rs:89:39      	Unrecognised	U   	bail_span!(path, \"Unrecognised pyarg attribute\");"
  - "derive-impl/src/from_args.rs:141:9      	namestring  	U   	let namestring = name.map(Ident::to"
  - "derive-impl/src/from_args.rs:147:9      	fieldname   	U   	let fieldname = match name {"
  - "derive-impl/src/from_args.rs:156:9      	pyname      	U   	let pyname = attr"
  - "derive-impl/src/lib.rs:18:5     	pymodule    	U   	mod pymodule;"
  - "derive-impl/src/lib.rs:19:5     	pypayload   	U   	mod pypayload;"
  - "derive-impl/src/lib.rs:20:5     	pystructseq 	U   	mod pystructseq;"
  - "derive-impl/src/lib.rs:42:40    	pyimpl      	U   	tokens(pyclass::impl_pyimpl(attr, item))"
  - "derive-impl/src/lib.rs:53:8     	pyexception 	U   	pub fn pyexception(attr: AttributeArgs"
  - "derive-impl/src/lib.rs:61:8     	pystruct    	U   	pub fn pystruct_sequence(input: DeriveInput"
  - "derive-impl/src/pyclass.rs:34:30    	pymethod        	U   	Self::Method => \"pymethod\","
  - "derive-impl/src/pyclass.rs:35:35    	pyclassmethod   	U   	Self::ClassMethod => \"pyclassmethod\","
  - "derive-impl/src/pyclass.rs:36:36    	pystaticmethod  	U   	Self::StaticMethod => \"pystaticmethod\","
  - "derive-impl/src/pyclass.rs:37:30    	pygetset        	U   	Self::GetSet => \"pygetset\","
  - "derive-impl/src/pyclass.rs:38:28    	pyslot          	U   	Self::Slot => \"pyslot\","
  - "derive-impl/src/pyclass.rs:39:28    	pyattr          	U   	Self::Attr => \"pyattr\","
  - "derive-impl/src/pyclass.rs:41:30    	pymember        	U   	Self::Member => \"pymember\","
  - "derive-impl/src/pyclass.rs:69:5     	getset          	U   	getset_items: GetSetNursery"
  - "derive-impl/src/pyclass.rs:84:18    	pyitems         	U   	let (pyitems, cfgs) = attrs_to_content"
  - "derive-impl/src/pyclass.rs:84:27    	cfgs            	U   	let (pyitems, cfgs) = attrs_to_content"
  - "derive-impl/src/pyclass.rs:85:17    	pyitem          	U   	for pyitem in pyitems.iter().rev"
  - "derive-impl/src/pyclass.rs:143:25   	trai            	U   	Item::Trait(mut trai) => {"
  - "derive-impl/src/pyclass.rs:199:5    	metaclass       	U   	metaclass: Option<String>,"
  - "derive-impl/src/pyclass.rs:224:9    	basicsize       	U   	let basicsize = quote!(std::mem::size"
  - "derive-impl/src/pyclass.rs:248:23   	baseclass       	U   	fn static_baseclass() -> &'static ::rustpython"
  - "derive-impl/src/pyclass.rs:364:15   	initproc        	U   	// See: `(initproc)BaseException_init`"
  - "derive-impl/src/pyclass.rs:366:46   	zelf            	U   	quote! { #init_def(zelf, args, vm) },"
  - "derive-impl/src/pyclass.rs:513:56   	classmethod     	U   	ClassMethod => quote!(.build_classmethod(ctx, class)),"
  - "derive-impl/src/pyclass.rs:514:57   	staticmethod    	U   	StaticMethod => quote!(.build_staticmethod(ctx, class)),"
  - "derive-impl/src/pyclass.rs:523:30   	funcdef         	U   	ctx.make_funcdef(#py_name, Self::#ident"
  - "derive-impl/src/pyclass.rs:759:46   	deleter         	U   	cfgs), (getter, setter, deleter)) in &self.map {"
  - "derive-impl/src/pyclass.rs:1007:36  	nmeta           	U   	meta_map = if let Some(nmeta) = nested.next() {"
  - "derive-impl/src/pyclass.rs:1018:89  	slotname        	U   	pyslot] or #[pyslot(slotname)]\")"
  - "derive-impl/src/pyclass.rs:1127:13  	withs           	U   	let mut withs = Vec::new();"
  - "derive-impl/src/pymodule.rs:3:26    	idents      	U   	format_doc, iter_use_idents, pyclass_ident_and_attrs"
  - "derive-impl/src/pymodule.rs:23:32   	pyfunction  	U   	Self::Function => \"pyfunction\","
  - "derive-impl/src/pymodule.rs:148:5   	pyattrs     	U   	pyattrs: Vec<usize>,"
  - "derive-impl/src/pymodule.rs:404:17  	noattr      	U   	let noattr = class_attr.try_remove"
  - "derive-impl/src/pystructseq.rs:6:47     	struc   	U   	syn::Data::Struct(ref struc) = input.data {"
  - "derive-impl/src/pystructseq.rs:37:77    	pyobject	U   	convert::ToPyObject::to_pyobject("
  - "DEVELOPMENT.md:24:20    	rustup      	U   	- If you have `rustup` on your system, enter"
  - "DEVELOPMENT.md:33:72    	automake    	U   	make sure autoconf, automake,"
  - "DEVELOPMENT.md:37:35    	pytest      	U   	The Python package, `pytest`, is used for testing"
  - "DEVELOPMENT.md:43:49    	codestyle   	U   	com/rust-lang/rustfmt) codestyle. Please format your"
  - "DEVELOPMENT.md:89:19    	cmath       	U   	To run only `test_cmath` (located at `Lib/test"
  - "DEVELOPMENT.md:110:5    	speedscope  	U   	The speedscope json format (default"
  - "DEVELOPMENT.md:128:26   	subcrates   	U   	src`: using the other subcrates to bring rustpython"
  - "DEVELOPMENT.md:161:17   	structs     	U   	tree are Rust structs and enums."
  - "examples/atexit_example.py:4:5      	myexit  	U   	def myexit():"
  - "examples/call_between_rust_and_python.rs:8:9        	interp  	U   	let interp = rustpython_vm::Interpreter"
  - "examples/parse_folder.rs:67:35      	Erreur  	U   	Err(y) => error!(\"Erreur in file {:?} {:?}\","
  - "extra_tests/custom_text_test_runner.py:7:22     	Abtin       	U   	Copyright (c) 2015 Abtin Gramian"
  - "extra_tests/custom_text_test_runner.py:7:28     	Gramian     	U   	Copyright (c) 2015 Abtin Gramian"
  - "extra_tests/custom_text_test_runner.py:88:36    	getargspec  	U   	[p for p in inspect.getargspec(func_ref).args if p"
  - "extra_tests/custom_text_test_runner.py:220:39   	occured     	U   	tests or some failure occured execution time may not"
  - "extra_tests/jsontests.py:3:11       	libregrtest 	U   	from test.libregrtest.runtest import findtests"
  - "extra_tests/jsontests.py:3:38       	findtests   	U   	libregrtest.runtest import findtests"
  - "extra_tests/jsontests.py:7:1        	testnames   	U   	testnames = findtests()"
  - "extra_tests/jsontests.py:27:1       	resultsfile 	U   	resultsfile = os.path.join(os.path"
  - "extra_tests/snippets/builtin_all.py:1:6     	testutils   	U   	from testutils import assert_raises"
  - "extra_tests/snippets/builtin_bool.py:33:7       	Falsey  	U   	class Falsey:"
  - "extra_tests/snippets/builtin_bool.py:48:3       	Bools   	U   	# Bools are also ints."
  - "extra_tests/snippets/builtin_bytearray.py:72:33     	unashable   	U   	bytearray(b\"abcd\")) # unashable"
  - "extra_tests/snippets/builtin_bytearray.py:378:51    	maxsplit    	U   	split(bytearray(b\",\"), maxsplit=1) == [bytearray(b\""
  - "extra_tests/snippets/builtin_bytearray.py:588:55    	keepends    	U   	rkl\\r\\n\").splitlines(keepends=True) == ["
  - "extra_tests/snippets/builtin_bytes.py:40:19     	abcdé               	U   	assert len(bytes(\"abcdé\", \"utf8\")) == 6"
  - "extra_tests/snippets/builtin_bytes.py:246:10    	azeazerazeazopia    	U   	assert b\"azeazerazeazopia\".count(b\"aze\") == 3"
  - "extra_tests/snippets/builtin_bytes.py:316:10    	abcdabcda           	U   	assert b\"abcdabcda\".find(b\"a\") == 0"
  - "extra_tests/snippets/builtin_bytes.py:334:10    	hjhtuyjyujuyj       	U   	assert b\"hjhtuyjyujuyj\".translate(bytes.maketrans"
  - "extra_tests/snippets/builtin_bytes.py:339:10    	hjhtuyfjtyhuhjuyj   	U   	assert b\"hjhtuyfjtyhuhjuyj\".translate(None, b\"ht"
  - "extra_tests/snippets/builtin_bytes.py:615:15    	bpython             	U   	assert b'rust%bpython%b' % (b' ', b'!') ="
  - "extra_tests/snippets/builtin_bytes.py:631:18    	bytess              	U   	return b\"bytess\""
  - "extra_tests/snippets/builtin_complex.py:138:5   	getnewargs  	U   	# __getnewargs__"
  - "extra_tests/snippets/builtin_dict_union.py:4:10     	dunion  	U   	def test_dunion_ior0():"
  - "extra_tests/snippets/builtin_exceptions.py:95:9     	excepthook  	U   	sys.excepthook(type(exc), exc, exc"
  - "extra_tests/snippets/builtin_exceptions.py:105:77   	excs        	U   	ok, will print two excs"
  - "extra_tests/snippets/builtin_exceptions.py:264:16   	strerror    	U   	assert OSError.strerror"
  - "extra_tests/snippets/builtin_exceptions.py:272:48   	winerror    	U   	startswith(\"win\") or w.winerror == None"
  - "extra_tests/snippets/builtin_float.py:257:6     	infi        	U   	\"infi\", # misspelt infinities"
  - "extra_tests/snippets/builtin_float.py:257:40    	nans        	U   	misspelt infinities and nans"
  - "extra_tests/snippets/builtin_float.py:258:7     	Infinit     	U   	\"-Infinit\","
  - "extra_tests/snippets/builtin_float.py:263:6     	snan        	U   	\"snan\","
  - "extra_tests/snippets/builtin_float.py:268:6     	nfinity     	U   	\"nfinity\","
  - "extra_tests/snippets/builtin_float.py:269:6     	inity       	U   	\"inity\","
  - "extra_tests/snippets/builtin_float.py:270:6     	iinity      	U   	\"iinity\","
  - "extra_tests/snippets/builtin_float.py:271:7     	xnan        	U   	\"0xnan\","
  - "extra_tests/snippets/builtin_float.py:302:22    	fullwidth   	U   	\"0x1p\\uff10\", # fullwidth Unicode digits"
  - "extra_tests/snippets/builtin_float.py:392:21    	xbep        	U   	identical(fromHex('0xbep0'), 190.0)"
  - "extra_tests/snippets/builtin_float.py:404:28    	fdaa        	U   	identical(fromHex('0x.00c90fdaa22168cp10'), pi)"
  - "extra_tests/snippets/builtin_int.py:346:1   	subint  	U   	subint = int.__new__(SubInt"
  - "extra_tests/snippets/builtin_isinstance.py:25:17    	behaviour   	U   	# weird cpython behaviour if exact match then"
  - "extra_tests/snippets/builtin_issubclass.py:16:11    	subclasscheck   	U   	def __subclasscheck__(self, subclass):"
  - "extra_tests/snippets/builtin_list.py:253:13     	refrences   	U   	# make sure refrences are assigned correctly"
  - "extra_tests/snippets/builtin_list.py:639:26     	daedlock    	U   	Test for list entering daedlock or not (https://github"
  - "extra_tests/snippets/builtin_memoryview.py:39:14    	tobytes 	U   	assert m.tobytes() == b'123456789'"
  - "extra_tests/snippets/builtin_object.py:6:1      	myobj       	U   	myobj = MyObject()"
  - "extra_tests/snippets/builtin_object.py:10:10    	subclasshook	U   	object.__subclasshook__() == NotImplemented"
  - "extra_tests/snippets/builtin_pow.py:29:5    	powtest     	U   	def powtest(type):"
  - "extra_tests/snippets/builtin_pow.py:46:13   	othertype   	U   	for othertype in (int,):"
  - "extra_tests/snippets/builtin_pow.py:64:5    	asseq       	U   	asseq = assert_equal"
  - "extra_tests/snippets/builtin_pow.py:85:10   	powint      	U   	def test_powint():"
  - "extra_tests/snippets/builtin_pow.py:89:10   	powfloat    	U   	def test_powfloat():"
  - "extra_tests/snippets/builtin_pow.py:125:15  	Rpow        	U   	class TestRpow:"
  - "extra_tests/snippets/builtin_pow.py:144:9   	fiveto      	U   	fiveto = float(5 ** n)"
  - "extra_tests/snippets/builtin_pow.py:146:38  	thereafer   	U   	mantissa bits, though, and thereafer fiveto will be even"
  - "extra_tests/snippets/builtin_property.py:4:7        	Fubar   	U   	class Fubar:"
  - "extra_tests/snippets/builtin_property.py:73:11      	fdel    	U   	assert p1.fdel == \"c\""
  - "extra_tests/snippets/builtin_property.py:86:25      	pdoc    	U   	property('a', doc='pdoc')"
  - "extra_tests/snippets/builtin_set.py:373:27  	aruguments  	U   	TODO: Assert that empty aruguments raises exception."
  - "extra_tests/snippets/builtin_str_encode.py:11:42    	estás  	U   	UnicodeEncodeError, \"¿como estás?\".encode, \"ascii\")"
  - "extra_tests/snippets/builtin_str_encode.py:19:25    	𝕐𝕥    	U   	round_trip(\"☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣\")"
  - "extra_tests/snippets/builtin_str_encode.py:20:19    	ק𝔂t    	U   	round_trip(\"💀👌 ק𝔂tℍⓞ𝓷 ３ 🔥👤\")"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:19     	רֵאשִ       	U   	hebrew_text = \"בְּרֵאשִׁית, בָּרָא אֱלֹהִים"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:36     	אֱלֹהִים    	U   	בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, ו"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:50     	הַשָּׁמַיִם 	U   	ָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:63     	וְאֵת       	U   	ם, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:35:69     	הָאָרֶץ     	U   	הַשָּׁמַיִם, וְאֵת הָאָרֶץ\""
  - "extra_tests/snippets/builtin_str_unicode_slice.py:47:32     	מַיִם       	U   	hebrew_text[-20:50] == 'מַיִם, וְא'"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:56:34     	אםהֱאּ      	U   	hebrew_text[30:10:-3] == 'אםהֱאּ '"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:58:37     	םיִהֹלֱא    	U   	text[30:10:-1] == 'א ,םיִהֹלֱא אָרָּב ,'"
  - "extra_tests/snippets/builtin_str_unicode_slice.py:58:46     	אָרּ        	U   	-1] == 'א ,םיִהֹלֱא אָרָּב ,'"
  - "extra_tests/snippets/builtin_str_unicode.py:30:9    	pyth    	U   	assert \"pyth\\xf6n.org\".encode(\"idna"
  - "extra_tests/snippets/builtin_str_unicode.py:34:14   	pythn   	U   	assert b\"xn--pythn-mua.org\".decode(\"idna"
  - "extra_tests/snippets/builtin_str.py:37:21   	xyxyxy          	U   	assert \"xy\" * 3 == \"xyxyxy\""
  - "extra_tests/snippets/builtin_str.py:96:10   	koki            	U   	assert [\"koki\".center(i, \"|\") for"
  - "extra_tests/snippets/builtin_str.py:174:20  	txyz            	U   	assert 'abc\\t12345\\txyz'.expandtabs() == 'abc"
  - "extra_tests/snippets/builtin_str.py:338:7   	isisprintable   	U   	# str.isisprintable"
  - "extra_tests/snippets/builtin_str.py:614:10  	foobarfoo       	U   	s = 'foobarfoo'"
  - "extra_tests/snippets/builtin_str.py:625:28  	afoo            	U   	assert s.removeprefix('afoo') == s_ref"
  - "extra_tests/snippets/builtin_str.py:670:28  	fooa            	U   	assert s.removesuffix('fooa') == s_ref"
  - "extra_tests/snippets/builtin_super.py:4:26      	thisclass   	U   	assert test_super_list.__thisclass__ == list"
  - "extra_tests/snippets/builtin_type.py:268:9      	clsmethod   	U   	def clsmethod(cls):"
  - "extra_tests/snippets/builtin_type.py:272:9      	stmethod    	U   	def stmethod():"
  - "extra_tests/snippets/builtin_type.py:330:3      	Regresesion 	U   	# Regresesion to"
  - "extra_tests/snippets/builtin_type.py:531:6      	pyproperty  	U   	# `#[pyproperty]`"
  - "extra_tests/snippets/example_fizzbuzz.py:1:5        	fizzbuzz	U   	def fizzbuzz(n):"
  - "extra_tests/snippets/example_interactive.py:15:14   	argcount        	U   	assert c2.co_argcount == 2"
  - "extra_tests/snippets/example_interactive.py:22:14   	firstlineno     	U   	assert c2.co_firstlineno == 5, str(c2.co_firstlineno"
  - "extra_tests/snippets/example_interactive.py:25:14   	kwonlyargcount  	U   	assert c2.co_kwonlyargcount == 1, (c2.co_kwonlyargcount"
  - "extra_tests/snippets/example_interactive.py:26:16   	lnotab          	U   	# assert c2.co_lnotab == 0, c2.co_lnotab"
  - "extra_tests/snippets/example_interactive.py:29:16   	nlocals         	U   	# assert c2.co_nlocals == 4, c2.co_nlocals"
  - "extra_tests/snippets/example_interactive.py:30:16   	stacksize       	U   	# assert c2.co_stacksize == 2, 'co_stacksize"
  - "extra_tests/snippets/forbidden_instantiation.py:18:1    	reviter 	U   	reviter_types = [list, dict"
  - "extra_tests/snippets/intro/3.1.2.5.py:1:9       	unununium   	U   	assert 'unununium' == 3 * 'un' + 'ium"
  - "extra_tests/snippets/intro/3.1.2.6.py:1:26      	thon	U   	assert 'Python' == 'Py' 'thon'"
  - "extra_tests/snippets/protocol_index_bad.py:15:9     	setslice	U   	def run_setslice():"
  - "extra_tests/snippets/protocol_index_bad.py:23:9     	delslice	U   	def run_delslice():"
  - "extra_tests/snippets/stdlib_array.py:85:16      	frombytes       	U   	def test_array_frombytes():"
  - "extra_tests/snippets/stdlib_array.py:104:29     	enviroment      	U   	as 2 bytes character enviroment with CPython is failing"
  - "extra_tests/snippets/stdlib_array.py:105:6      	itemsize        	U   	if u.itemsize >= 4:"
  - "extra_tests/snippets/stdlib_array.py:112:8      	arrayiterator   	U   	# test arrayiterator name"
  - "extra_tests/snippets/stdlib_binascii.py:5:3     	hexlify     	U   	# hexlify tests"
  - "extra_tests/snippets/stdlib_binascii.py:18:3    	unhexlify   	U   	# unhexlify tests"
  - "extra_tests/snippets/stdlib_collections.py:7:3      	appendleft  	U   	d.appendleft(3)"
  - "extra_tests/snippets/stdlib_datetime.py:73:38   	dstoffset       	U   	self, offset, name, dstoffset=42):"
  - "extra_tests/snippets/stdlib_datetime.py:90:7    	Picklable       	U   	class PicklableFixedOffset(FixedOffset"
  - "extra_tests/snippets/stdlib_datetime.py:101:13  	refcnt          	U   	# def test_refcnt_crash_bug_22044(self"
  - "extra_tests/snippets/stdlib_datetime.py:161:13  	tzrep           	U   	tzrep = repr(tz)"
  - "extra_tests/snippets/stdlib_datetime.py:224:13  	utctime         	U   	utctime = self.DT.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:252:17  	pickler         	U   	for pickler, unpickler, proto in"
  - "extra_tests/snippets/stdlib_datetime.py:252:26  	unpickler       	U   	for pickler, unpickler, proto in pickle_choices"
  - "extra_tests/snippets/stdlib_datetime.py:284:31  	theclass        	U   	Subclasses must define 'theclass', and theclass(1, 1"
  - "extra_tests/snippets/stdlib_datetime.py:721:9   	zerotd          	U   	zerotd = timedelta(0)"
  - "extra_tests/snippets/stdlib_datetime.py:836:13  	fromord         	U   	fromord = self.theclass.fromordinal"
  - "extra_tests/snippets/stdlib_datetime.py:865:24  	maxday          	U   	for month, maxday in zip(range(1, 13)"
  - "extra_tests/snippets/stdlib_datetime.py:877:9   	aord            	U   	aord = a.toordinal()"
  - "extra_tests/snippets/stdlib_datetime.py:1015:19 	mktime          	U   	ts = time.mktime((year, month, day,"
  - "extra_tests/snippets/stdlib_datetime.py:1038:13 	todayagain      	U   	todayagain = self.theclass.fromtimestamp"
  - "extra_tests/snippets/stdlib_datetime.py:1153:20 	excercise       	U   	#at least, excercise them to make sure that"
  - "extra_tests/snippets/stdlib_datetime.py:1207:9  	justasbig       	U   	justasbig = timedelta(0, 0, n"
  - "extra_tests/snippets/stdlib_datetime.py:1229:31 	mday            	U   	assert_equal(t.tm_mday, 1+i)"
  - "extra_tests/snippets/stdlib_datetime.py:1233:31 	wday            	U   	assert_equal(t.tm_wday, (3+i)%7)"
  - "extra_tests/snippets/stdlib_datetime.py:1234:31 	yday            	U   	assert_equal(t.tm_yday, 61+i)"
  - "extra_tests/snippets/stdlib_datetime.py:1235:31 	isdst           	U   	assert_equal(t.tm_isdst, -1)"
  - "extra_tests/snippets/stdlib_datetime.py:1360:19 	newval          	U   	for name, newval in ((\"year\", 2),"
  - "extra_tests/snippets/stdlib_datetime.py:1363:13 	newargs         	U   	newargs = args[:]"
  - "extra_tests/snippets/stdlib_datetime.py:1386:17 	newmeth         	U   	def newmeth(self, start):"
  - "extra_tests/snippets/stdlib_datetime.py:1645:9  	millisec        	U   	millisec = timedelta(0, 0, 1"
  - "extra_tests/snippets/stdlib_datetime.py:1783:25 	gmtime          	U   	expected = time.gmtime(ts)"
  - "extra_tests/snippets/stdlib_datetime.py:2010:9  	alsobog         	U   	alsobog = AlsoBogus()"
  - "extra_tests/snippets/stdlib_datetime.py:2351:23 	atribute        	U   	theclass as a class atribute, and theclass(1, 1,"
  - "extra_tests/snippets/stdlib_datetime.py:2408:17 	aofs            	U   	aofs = abs(offset)"
  - "extra_tests/snippets/stdlib_datetime.py:2433:43 	aname           	U   	tzname(self, dt): return \"aname\""
  - "extra_tests/snippets/stdlib_datetime.py:2468:55 	comparands      	U   	gets ignored if the comparands have"
  - "extra_tests/snippets/stdlib_datetime.py:2490:50 	uctoffset       	U   	re different members, uctoffset is not ignored."
  - "extra_tests/snippets/stdlib_datetime.py:2491:59 	depedent        	U   	actually have an operand-depedent offset,"
  - "extra_tests/snippets/stdlib_datetime.py:2600:15 	Badtzname       	U   	class Badtzname(tzinfo):"
  - "extra_tests/snippets/stdlib_datetime.py:2632:9  	tinfo           	U   	tinfo = PicklableFixedOffset"
  - "extra_tests/snippets/stdlib_datetime.py:2800:17 	afer            	U   	# Equal afer adjustment."
  - "extra_tests/snippets/stdlib_datetime.py:2933:9  	timeaware       	U   	timeaware = now.time().replace"
  - "extra_tests/snippets/stdlib_datetime.py:2934:9  	nowaware        	U   	nowaware = self.theclass.combine"
  - "extra_tests/snippets/stdlib_datetime.py:2953:9  	nowawareplus    	U   	nowawareplus = nowaware + delta"
  - "extra_tests/snippets/stdlib_datetime.py:2968:59 	randomtimezone  	U   	randrange(-1439, 1440), \"randomtimezone\")"
  - "extra_tests/snippets/stdlib_datetime.py:3017:13 	weirdtz         	U   	for weirdtz in [FixedOffset(timedelta"
  - "extra_tests/snippets/stdlib_datetime.py:3056:9  	utcdatetime     	U   	utcdatetime = datetime.utcfromtimestamp"
  - "extra_tests/snippets/stdlib_datetime.py:3093:32 	dstvalue        	U   	def __init__(self, dstvalue):"
  - "extra_tests/snippets/stdlib_datetime.py:3140:32 	uofs            	U   	def __init__(self, uofs, dofs=None):"
  - "extra_tests/snippets/stdlib_datetime.py:3140:38 	dofs            	U   	_init__(self, uofs, dofs=None):"
  - "extra_tests/snippets/stdlib_datetime.py:3216:17 	timestr         	U   	timestr = '04:05:59' + (us and"
  - "extra_tests/snippets/stdlib_datetime.py:3217:17 	ofsstr          	U   	ofsstr = ofs is not None and"
  - "extra_tests/snippets/stdlib_datetime.py:3218:17 	tailstr         	U   	tailstr = timestr + ofsstr"
  - "extra_tests/snippets/stdlib_datetime.py:3267:9  	fnone           	U   	fnone = FixedOffset(None,"
  - "extra_tests/snippets/stdlib_datetime.py:3337:53 	utcoffsets      	U   	members are distinct, utcoffsets aren't"
  - "extra_tests/snippets/stdlib_datetime.py:3387:23 	datetimetz      	U   	def test_subclass_datetimetz(self):"
  - "extra_tests/snippets/stdlib_datetime.py:3435:31 	reprname        	U   	init__(self, hours, reprname, stdname, dstname):"
  - "extra_tests/snippets/stdlib_datetime.py:3435:50 	dstname         	U   	reprname, stdname, dstname):"
  - "extra_tests/snippets/stdlib_datetime.py:3436:14 	stdoffset       	U   	self.stdoffset = timedelta(hours=hours"
  - "extra_tests/snippets/stdlib_datetime.py:3486:5  	dston           	U   	dston = datetime(2002, 4,"
  - "extra_tests/snippets/stdlib_datetime.py:3487:5  	dstoff          	U   	dstoff = datetime(2002, 10"
  - "extra_tests/snippets/stdlib_datetime.py:3492:9  	checkinside     	U   	def checkinside(self, dt, tz, utc, dston"
  - "extra_tests/snippets/stdlib_datetime.py:3498:9  	asutc           	U   	asutc = dt.astimezone(utc"
  - "extra_tests/snippets/stdlib_datetime.py:3531:9  	nexthour        	U   	nexthour_utc = asutc + HOUR"
  - "extra_tests/snippets/stdlib_datetime.py:3544:9  	checkoutside    	U   	def checkoutside(self, dt, tz, utc):"
  - "extra_tests/snippets/stdlib_datetime.py:3578:46 	endcases        	U   	name of this test, the endcases are excruciating."
  - "extra_tests/snippets/stdlib_datetime.py:3603:9  	fourback        	U   	fourback = self.dston - timedelta"
  - "extra_tests/snippets/stdlib_datetime.py:3604:9  	ninewest        	U   	ninewest = FixedOffset(-9*60"
  - "extra_tests/snippets/stdlib_datetime.py:3619:9  	sixutc          	U   	sixutc = self.dston.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3641:17 	asutcbase       	U   	asutcbase = asutc.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:3642:21 	tzhour          	U   	for tzhour in (0, 1, 1, 2):"
  - "extra_tests/snippets/stdlib_datetime.py:3643:21 	expectedbase    	U   	expectedbase = self.dstoff.replace"
  - "extra_tests/snippets/stdlib_datetime.py:3647:25 	astz            	U   	astz = asutc.astimezone(tz"
  - "extra_tests/snippets/stdlib_datetime.py:3662:15 	notok           	U   	class notok(ok):"
  - "extra_tests/snippets/stdlib_datetime.py:3701:9  	fstart          	U   	fstart = start.replace(tzinfo"
  - "extra_tests/snippets/stdlib_datetime.py:3763:3  	Neverthelss     	U   	# Neverthelss, comparison should work"
  - "extra_tests/snippets/stdlib_imghdr.py:15:21     	rast        	U   	('python.ras', 'rast'),"
  - "extra_tests/snippets/stdlib_imghdr.py:23:57     	imghdrdata  	U   	dirname(__file__), 'imghdrdata')"
  - "extra_tests/snippets/stdlib_io_bytesio.py:49:37     	accpets 	U   	that the write method accpets bytearray"
  - "extra_tests/snippets/stdlib_io.py:31:11     	closefd 	U   	assert fi.closefd"
  - "extra_tests/snippets/stdlib_io.py:38:2      	nres    	U   	nres = fio.read(1)"
  - "extra_tests/snippets/stdlib_itertools.py:54:24      	evaluted    	U   	iterables are lazily evaluted"
  - "extra_tests/snippets/stdlib_itertools.py:185:5      	underten    	U   	def underten(x):"
  - "extra_tests/snippets/stdlib_itertools.py:537:58     	fillvalue   	U   	range(3), [9, 8, 7, 99], fillvalue='d')) \\"
  - "extra_tests/snippets/stdlib_json.py:65:33   	jsons   	U   	reject non-str keys in jsons"
  - "extra_tests/snippets/stdlib_math.py:11:9    	Conversible 	U   	# class Conversible():"
  - "extra_tests/snippets/stdlib_math.py:18:3    	roundings   	U   	# roundings"
  - "extra_tests/snippets/stdlib_math.py:149:12  	ninf        	U   	# test_inf_ninf_nan(self): these should"
  - "extra_tests/snippets/stdlib_math.py:340:19  	eedf        	U   	# '0x1.1475cc9eedf00p+5 0x1.921fb54442d"
  - "extra_tests/snippets/stdlib_os.py:31:8      	lseek       	U   	os.lseek(dest_fd, 0, 0)"
  - "extra_tests/snippets/stdlib_os.py:59:8      	putenv      	U   	os.putenv(ENV_KEY, ENV_VALUE)"
  - "extra_tests/snippets/stdlib_os.py:60:8      	unsetenv    	U   	os.unsetenv(ENV_KEY)"
  - "extra_tests/snippets/stdlib_os.py:78:11     	fspath      	U   	assert os.fspath(\"Testing\") == \"Testing"
  - "extra_tests/snippets/stdlib_os.py:185:25    	scandir     	U   	for dir_entry in os.scandir(tmpdir):"
  - "extra_tests/snippets/stdlib_os.py:285:25    	geteuid     	U   	if hasattr(os, 'geteuid'):"
  - "extra_tests/snippets/stdlib_os.py:289:48    	getpwall    	U   	pw_uid for u in pwd.getpwall()]"
  - "extra_tests/snippets/stdlib_os.py:329:25    	getgroups   	U   	if hasattr(os, 'getgroups'):"
  - "extra_tests/snippets/stdlib_os.py:368:22    	getpid      	U   	assert isinstance(os.getpid(), int)"
  - "extra_tests/snippets/stdlib_os.py:372:26    	getegid     	U   	assert isinstance(os.getegid(), int)"
  - "extra_tests/snippets/stdlib_os.py:373:26    	getgid      	U   	assert isinstance(os.getgid(), int)"
  - "extra_tests/snippets/stdlib_os.py:374:26    	getsid      	U   	assert isinstance(os.getsid(os.getpid()), int)"
  - "extra_tests/snippets/stdlib_os.py:375:26    	getuid      	U   	assert isinstance(os.getuid(), int)"
  - "extra_tests/snippets/stdlib_os.py:377:26    	getppid     	U   	assert isinstance(os.getppid(), int)"
  - "extra_tests/snippets/stdlib_os.py:378:26    	getpgid     	U   	assert isinstance(os.getpgid(os.getpid()), int)"
  - "extra_tests/snippets/stdlib_os.py:381:51    	setgid      	U   	PermissionError, lambda: os.setgid(42))"
  - "extra_tests/snippets/stdlib_os.py:382:51    	setegid     	U   	PermissionError, lambda: os.setegid(42))"
  - "extra_tests/snippets/stdlib_os.py:383:51    	setpgid     	U   	PermissionError, lambda: os.setpgid(os.getpid(), 42))"
  - "extra_tests/snippets/stdlib_os.py:385:51    	seteuid     	U   	PermissionError, lambda: os.seteuid(42))"
  - "extra_tests/snippets/stdlib_os.py:386:51    	setreuid    	U   	PermissionError, lambda: os.setreuid(42, 42))"
  - "extra_tests/snippets/stdlib_os.py:387:51    	setresuid   	U   	PermissionError, lambda: os.setresuid(42, 42, 42))"
  - "extra_tests/snippets/stdlib_os.py:393:26    	ttyname     	U   	assert isinstance(os.ttyname(b), str)"
  - "extra_tests/snippets/stdlib_re.py:5:11      	ello        	U   	needle = 'ello'"
  - "extra_tests/snippets/stdlib_re.py:18:17     	abcabca     	U   	s = p.sub('x', 'abcabca')"
  - "extra_tests/snippets/stdlib_re.py:20:14     	xcxca       	U   	assert s == 'xcxca'"
  - "extra_tests/snippets/stdlib_re.py:34:11     	bigcharset  	U   	# test op bigcharset"
  - "extra_tests/snippets/stdlib_re.py:40:35     	abcdddd     	U   	compile('abcd*').match('abcdddd').group() == 'abcdddd"
  - "extra_tests/snippets/stdlib_re.py:42:36     	abce        	U   	compile('abcd*e').match('abce').group() == 'abce'"
  - "extra_tests/snippets/stdlib_re.py:43:37     	abcddeee    	U   	compile('abcd*e+').match('abcddeee').group() == 'abcddeee"
  - "extra_tests/snippets/stdlib_re.py:44:35     	abcddd      	U   	compile('abcd+').match('abcddd').group() == 'abcddd"
  - "extra_tests/snippets/stdlib_re.py:52:41     	abcdcdcd    	U   	a)(b)(cd)*').match('abcdcdcd').group(0, 1, 2, 3)"
  - "extra_tests/snippets/stdlib_re.py:64:41     	Xtest       	U   	', 'X', 'test') == 'Xtest'"
  - "extra_tests/snippets/stdlib_select.py:26:1      	recvr   	U   	recvr = socket.socket()"
  - "extra_tests/snippets/stdlib_select.py:34:1      	sendr   	U   	sendr = socket.socket()"
  - "extra_tests/snippets/stdlib_select.py:39:1      	rres    	U   	rres, wres, xres = select"
  - "extra_tests/snippets/stdlib_select.py:39:7      	wres    	U   	rres, wres, xres = select.select"
  - "extra_tests/snippets/stdlib_select.py:39:13     	xres    	U   	rres, wres, xres = select.select([recvr"
  - "extra_tests/snippets/stdlib_socket.py:134:9     	htonl   	U   	socket.htonl(-1)"
  - "extra_tests/snippets/stdlib_socket.py:143:20    	ntoa    	U   	assert socket.inet_ntoa(b\"\\x7f\\x00\\x00\\x01\""
  - "extra_tests/snippets/stdlib_socket.py:164:13    	gaierror	U   	(socket.gaierror, \"gaierror\"),"
  - "extra_tests/snippets/stdlib_socket.py:165:13    	herror  	U   	(socket.herror, \"herror\"),"
  - "extra_tests/snippets/stdlib_sqlite.py:7:4       	executescript   	U   	cx.executescript(\";\")"
  - "extra_tests/snippets/stdlib_sqlite.py:9:4       	executemany     	U   	cx.executemany(\"INSERT INTO foo(key"
  - "extra_tests/snippets/stdlib_sqlite.py:21:7      	Aggr            	U   	class AggrSum:"
  - "extra_tests/snippets/stdlib_sqlite.py:31:22     	mysum           	U   	cx.create_aggregate(\"mysum\", 1, AggrSum)"
  - "extra_tests/snippets/stdlib_sqlite.py:35:3      	toobig          	U   	# toobig = 2**64"
  - "extra_tests/snippets/stdlib_sqlite.py:47:22     	aggtxt          	U   	cx.create_aggregate(\"aggtxt\", 1, AggrText)"
  - "extra_tests/snippets/stdlib_struct.py:45:15     	calcsize	U   	assert struct.calcsize(\"B\") == 1"
  - "extra_tests/snippets/stdlib_subprocess.py:18:36     	unixy   	U   	make work in a non-unixy environment (something"
  - "extra_tests/snippets/stdlib_sys_getframe.py:4:20    	getframe	U   	locals_dict = sys._getframe().f_locals"
  - "extra_tests/snippets/stdlib_sys.py:20:12    	getfilesystemencoding       	U   	assert sys.getfilesystemencoding() == 'utf-8'"
  - "extra_tests/snippets/stdlib_sys.py:21:12    	getfilesystemencodeerrors   	U   	assert sys.getfilesystemencodeerrors().startswith('surrogate"
  - "extra_tests/snippets/stdlib_sys.py:29:12    	maxunicode                  	U   	assert sys.maxunicode == 1114111"
  - "extra_tests/snippets/stdlib_sys.py:67:5     	setrecursionlimit           	U   	sys.setrecursionlimit(200)"
  - "extra_tests/snippets/stdlib_sys.py:74:5     	winver                      	U   	winver = sys.getwindowsversion"
  - "extra_tests/snippets/stdlib_sys.py:74:18    	getwindowsversion           	U   	winver = sys.getwindowsversion()"
  - "extra_tests/snippets/stdlib_sys.py:90:74    	compatiblity                	U   	correctly, this'll break on compatiblity mode or a build without"
  - "extra_tests/snippets/stdlib_xdrlib.py:1:25      	superceeded 	U   	This probably will be superceeded by the python unittests"
  - "extra_tests/snippets/stdlib_xdrlib.py:1:51      	unittests   	U   	superceeded by the python unittests when that works."
  - "extra_tests/snippets/stdlib_zlib.py:36:38   	amet	U   	Lorem ipsum dolor sit amet\", \"utf-8\")"
  - "extra_tests/snippets/syntax_async.py:6:16       	Entrada 	U   	print(\"Entrada\")"
  - "extra_tests/snippets/syntax_async.py:76:13      	Aenter  	U   	def testAenterAttributeError1(self"
  - "extra_tests/snippets/syntax_async.py:89:29      	Aexit   	U   	class LacksAenterAndAexit(object):"
  - "extra_tests/snippets/syntax_class.py:42:9       	fubar   	U   	def fubar(cls, x):"
  - "extra_tests/snippets/syntax_class.py:48:9       	kungfu  	U   	def kungfu(x):"
  - "extra_tests/snippets/syntax_class.py:231:20     	dbca    	U   	assert D().f() == 'dbca', \"Mro resolution using"
  - "extra_tests/snippets/syntax_class.py:271:17     	mcls    	U   	def __new__(mcls):"
  - "extra_tests/snippets/syntax_fstring.py:16:14    	tersing         	U   	# lets start tersing"
  - "extra_tests/snippets/syntax_fstring.py:22:24    	barfoo          	U   	assert f\"{foo}foo\" == 'barfoo'"
  - "extra_tests/snippets/syntax_fstring.py:29:36    	barbarfoo       	U   	f\"{foo}\" 'foo' == 'barbarfoo'"
  - "extra_tests/snippets/syntax_fstring.py:113:81   	alingment       	U   	+'#' # TODO default alingment in cpython is left"
  - "extra_tests/snippets/syntax_fstring.py:138:71   	formatspecifier 	U   	repr(x), '^20')) # TODO formatspecifier after conversion flsg"
  - "extra_tests/snippets/syntax_fstring.py:138:104  	flsg            	U   	matspecifier after conversion flsg is currently not supported"
  - "extra_tests/snippets/syntax_fstring.py:147:1    	tenπ            	U   	tenπ = 31.4"
  - "extra_tests/snippets/syntax_function_args.py:37:13      	kwdefaults  	U   	assert va.__kwdefaults__ is None"
  - "extra_tests/snippets/syntax_function2.py:56:5       	revdocstr   	U   	def revdocstr(f):"
  - "extra_tests/snippets/syntax_function2.py:66:23      	abcw        	U   	assert f5.__doc__ == 'abcw00t', f5.__doc__"
  - "extra_tests/snippets/syntax_generator.py:105:29     	stopiter    	U   	except StopIteration as stopiter:"
  - "extra_tests/snippets/syntax_generator.py:124:13     	coro        	U   	def wrapper(coro):"
  - "extra_tests/snippets/syntax_generator.py:171:13     	yieldfrom   	U   	assert g.gi_yieldfrom is it"
  - "extra_tests/snippets/syntax_global_nonlocal.py:3:28     	funkyness   	U   	global and nonlocal funkyness"
  - "extra_tests/snippets/syntax_short_circuit_bool.py:1:38      	bools   	U   	carefully avoids evaluating bools more than once in a"
  - "extra_tests/snippets/syntax_short_circuit_bool.py:14:14     	booled  	U   	self.booled = False"
  - "extra_tests/snippets/syntax_statement.py:4:15       	seperated   	U   	# small ones, seperated by ';':"
  - "extra_tests/snippets/syntax_try.py:35:12    	kablam  	U   	print('kablam')"
  - "extra_tests/snippets/syntax_with.py:30:16   	Ajuus   	U   	print('Ajuus')"
  - "extra_tests/snippets/testutils.py:18:14     	failmsg     	U   	self.failmsg = msg"
  - "extra_tests/snippets/testutils.py:69:53     	isisntance  	U   	isinstance(obj, klass), ['isisntance(', _typed(obj), ','"
  - "extra_tests/test_snippets.py:27:5       	pushd       	U   	def pushd(path):"
  - "extra_tests/test_snippets.py:54:41      	jobserver   	U   	= 'info,cargo=error,jobserver=error'"
  - "jit/Cargo.toml:10:1     	autotests   	U   	autotests = false"
  - "jit/Cargo.toml:15:1     	cranelift   	U   	cranelift = \"0.88.0\""
  - "jit/src/instructions.rs:125:46  	fcmp    	U   	self.builder.ins().fcmp(FloatCC::NotEqual, val"
  - "jit/src/instructions.rs:126:39  	bint    	U   	Ok(self.builder.ins().bint(types::I8, val))"
  - "jit/src/instructions.rs:129:47  	iconst  	U   	self.builder.ins().iconst(types::I64, 0);"
  - "jit/src/instructions.rs:239:36  	brnz    	U   	self.builder.ins().brnz(val, then_block, &["
  - "jit/src/instructions.rs:366:62  	bxor    	U   	self.builder.ins().bxor_imm(boolean, 1);"
  - "jit/src/instructions.rs:379:63  	iadd    	U   	self.builder.ins().iadd_ifcout(a, b);"
  - "jit/src/instructions.rs:379:68  	ifcout  	U   	self.builder.ins().iadd_ifcout(a, b);"
  - "jit/src/instructions.rs:380:44  	trapif  	U   	self.builder.ins().trapif("
  - "jit/src/instructions.rs:391:58  	sdiv    	U   	Int(self.builder.ins().sdiv(a, b))"
  - "jit/src/instructions.rs:394:58  	srem    	U   	Int(self.builder.ins().srem(a, b))"
  - "jit/src/instructions.rs:403:55  	ushr    	U   	self.builder.ins().ushr_imm(b, 63);"
  - "jit/src/instructions.rs:404:44  	trapnz  	U   	self.builder.ins().trapnz("
  - "jit/src/instructions.rs:410:48  	ishl    	U   	self.builder.ins().ishl(a, b)"
  - "jit/src/instructions.rs:412:48  	sshr    	U   	self.builder.ins().sshr(a, b)"
  - "jit/src/instructions.rs:428:60  	fadd    	U   	Float(self.builder.ins().fadd(a, b))"
  - "jit/src/instructions.rs:431:60  	fsub    	U   	Float(self.builder.ins().fsub(a, b))"
  - "jit/src/instructions.rs:434:60  	fmul    	U   	Float(self.builder.ins().fmul(a, b))"
  - "jit/src/instructions.rs:437:60  	fdiv    	U   	Float(self.builder.ins().fdiv(a, b))"
  - "jit/src/instructions.rs:454:74  	isub    	U   	doesn't special-case isub_ifbout"
  - "jit/src/instructions.rs:454:79  	ifbout  	U   	t special-case isub_ifbout"
  - "jit/src/instructions.rs:460:40  	ineg    	U   	self.builder.ins().ineg(b);"
  - "jit/src/lib.rs:13:32    	jitted      	U   	error(\"function can't be jitted\")]"
  - "jit/src/lib.rs:18:5     	Cranelift   	U   	CraneliftError(#[from] ModuleError"
  - "jit/src/lib.rs:38:65    	libcall     	U   	cranelift_module::default_libcall_names())"
  - "jit/src/lib.rs:285:23   	wasmtime    	U   	TODO: confirm with wasmtime ppl that it's not unsound"
  - "jit/tests/int_tests.rs:57:9     	lshift  	U   	fn test_lshift() {"
  - "jit/tests/int_tests.rs:72:9     	rshift  	U   	fn test_rshift() {"
  - "jit/tests/int_tests.rs:88:9     	bitand  	U   	let bitand = jit_function! { bitand"
  - "Lib/__future__.py:41:22     	bitfield	U   	CompilerFlag is the (bitfield) flag that should be"
  - "Lib/__future__.py:58:15     	FLUFL   	U   	\"barry_as_FLUFL\","
  - "Lib/_collections_abc.py:37:19   	somebytearray   	U   	# it = iter(somebytearray)"
  - "Lib/_collections_abc.py:45:6    	keyiterator     	U   	dict_keyiterator = type(iter({}.keys"
  - "Lib/_collections_abc.py:46:6    	valueiterator   	U   	dict_valueiterator = type(iter({}.values"
  - "Lib/_collections_abc.py:47:6    	itemiterator    	U   	dict_itemiterator = type(iter({}.items"
  - "Lib/_collections_abc.py:49:6    	reverseiterator 	U   	list_reverseiterator = type(iter(reversed"
  - "Lib/_collections_abc.py:51:1    	longrange       	U   	longrange_iterator = type(iter"
  - "Lib/_collections_abc.py:61:1    	mappingproxy    	U   	mappingproxy = type(type.__dict_"
  - "Lib/_collections_abc.py:210:27  	asend           	U   	return await self.asend(None)"
  - "Lib/_collections_abc.py:220:15  	athrow          	U   	async def athrow(self, typ, val=None"
  - "Lib/_collections_abc.py:417:39  	resulttype      	U   	`Callable[argtypes, resulttype]`."
  - "Lib/_collections_abc.py:448:24  	typevarlike     	U   	if _is_typevarlike(arg):"
  - "Lib/_collections_abc.py:499:17  	subparams       	U   	subparams = arg.__parameters_"
  - "Lib/_collections_abc.py:501:21  	subargs         	U   	subargs = tuple(subst[x] for"
  - "Lib/_collections_abc.py:807:11  	tpflags         	U   	__abc_tpflags__ = 1 << 6 # Py_TPFLAGS"
  - "Lib/_compat_pickle.py:20:6      	Tkdnd           	U   	'Tkdnd': 'tkinter.dnd',"
  - "Lib/_compat_pickle.py:24:6      	Tkconstants     	U   	'Tkconstants': 'tkinter.constants"
  - "Lib/_compat_pickle.py:28:6      	markupbase      	U   	'markupbase': '_markupbase',"
  - "Lib/_compat_pickle.py:32:6      	dbhash          	U   	'dbhash': 'dbm.bsd',"
  - "Lib/_compat_pickle.py:33:6      	dumbdbm         	U   	'dumbdbm': 'dbm.dumb',"
  - "Lib/_compat_pickle.py:35:6      	gdbm            	U   	'gdbm': 'dbm.gnu',"
  - "Lib/_compat_pickle.py:36:6      	xmlrpclib       	U   	'xmlrpclib': 'xmlrpc.client',"
  - "Lib/_compat_pickle.py:39:6      	htmlentitydefs  	U   	'htmlentitydefs' : 'html.entities',"
  - "Lib/_compat_pickle.py:42:6      	cookielib       	U   	'cookielib': 'http.cookiejar',"
  - "Lib/_compat_pickle.py:49:6      	anydbm          	U   	'anydbm': 'dbm',"
  - "Lib/_compat_pickle.py:50:7      	abcoll          	U   	'_abcoll' : 'collections.abc"
  - "Lib/_compat_pickle.py:61:22     	unichr          	U   	('__builtin__', 'unichr'): ('builtins',"
  - "Lib/_compat_pickle.py:64:20     	izip            	U   	('itertools', 'izip'): ('builtins"
  - "Lib/_compat_pickle.py:66:20     	ifilter         	U   	('itertools', 'ifilter'): ('builtins'"
  - "Lib/_compat_pickle.py:67:20     	ifilterfalse    	U   	('itertools', 'ifilterfalse'): ('itertools', 'filterfalse"
  - "Lib/_compat_pickle.py:78:17     	getproxies      	U   	('urllib', 'getproxies'): ('urllib.request"
  - "Lib/_compat_pickle.py:159:5     	excname         	U   	for excname in PYTHON2_EXCEPTIONS"
  - "Lib/_compat_pickle.py:187:6     	CGIHTTP         	U   	'CGIHTTPServer': 'http.server"
  - "Lib/_compat_pickle.py:206:22    	basestring      	U   	('__builtin__', 'basestring'): ('builtins', 'str"
  - "Lib/_compat_pickle.py:209:18    	socketobject    	U   	('socket', '_socketobject'): ('socket', 'SocketType"
  - "Lib/_compression.py:34:19   	decompressor	U   	\"\"\"Adapts the decompressor API to a RawIOBase reader"
  - "Lib/_compression.py:39:28   	decomp      	U   	def __init__(self, fp, decomp_factory, trailing_error"
  - "Lib/_compression.py:74:25   	readall     	U   	return self.readall()"
  - "Lib/_compression.py:83:17   	rawblock    	U   	rawblock = (self._decompressor"
  - "Lib/_dummy_thread.py:69:49      	threadmodule	U   	should only be used when _threadmodule is not"
  - "Lib/_dummy_thread.py:107:23     	waitflag    	U   	def acquire(self, waitflag=None, timeout=-1):"
  - "Lib/_markupbase.py:10:2     	declname            	U   	_declname_match = re.compile(r"
  - "Lib/_markupbase.py:11:2     	declstringlit       	U   	_declstringlit_match = re.compile(r"
  - "Lib/_markupbase.py:13:2     	markedsectionclose  	U   	_markedsectionclose = re.compile(r']\\s*"
  - "Lib/_markupbase.py:18:2     	msmarkedsectionclose	U   	_msmarkedsectionclose = re.compile(r']\\s*"
  - "Lib/_markupbase.py:40:9     	getpos              	U   	def getpos(self):"
  - "Lib/_markupbase.py:48:9     	updatepos           	U   	def updatepos(self, i, j):"
  - "Lib/_markupbase.py:51:9     	rawdata             	U   	rawdata = self.rawdata"
  - "Lib/_markupbase.py:52:9     	nlines              	U   	nlines = rawdata.count(\"\\n"
  - "Lib/_markupbase.py:61:11    	otherchars          	U   	_decl_otherchars = ''"
  - "Lib/_markupbase.py:85:63    	stringlit           	U   	could look like: ((name|stringlit) S*) + '>'"
  - "Lib/_markupbase.py:129:36   	attlist             	U   	elif decltype in {\"attlist\", \"linktype\", \"link"
  - "Lib/_markupbase.py:129:47   	linktype            	U   	decltype in {\"attlist\", \"linktype\", \"link\", \"element\""
  - "Lib/_markupbase.py:152:64   	rcdata              	U   	ignore\", \"include\", \"rcdata\"}:"
  - "Lib/_markupbase.py:182:40   	declstartpos        	U   	doctype_subset(self, i, declstartpos):"
  - "Lib/_osx_support.py:15:21   	isdkroot        	U   	# like \"-arch\" or \"-isdkroot\", that may need customization"
  - "Lib/_osx_support.py:55:18   	commandstring   	U   	def _read_output(commandstring, capture_stderr=False"
  - "Lib/_osx_support.py:77:22   	toolname        	U   	def _find_build_tool(toolname):"
  - "Lib/_osx_support.py:78:51   	xcrun           	U   	current path or using xcrun\"\"\""
  - "Lib/_osx_support.py:146:5   	oldvalue        	U   	oldvalue = _config_vars.get(cv"
  - "Lib/_osx_support.py:152:16  	sysroot         	U   	_cache_default_sysroot = None"
  - "Lib/_osx_support.py:161:8   	incdirs         	U   	in_incdirs = False"
  - "Lib/_osx_support.py:182:30  	isysroot        	U   	builds, in particular -isysroot and -arch arguments"
  - "Lib/_osx_support.py:212:10  	miscompiles     	U   	# miscompiles Python."
  - "Lib/_osx_support.py:220:10  	oldcc           	U   	cc = oldcc = _config_vars['CC'"
  - "Lib/_osx_support.py:274:25  	archs           	U   	_remove_unsupported_archs(_config_vars):"
  - "Lib/_osx_support.py:343:5   	cflags          	U   	cflags = _config_vars.get("
  - "Lib/_osx_support.py:367:22  	Sysroot         	U   	stripArch = stripSysroot = False"
  - "Lib/_osx_support.py:416:5   	argvar          	U   	argvar = cc_args"
  - "Lib/_osx_support.py:499:36  	osname          	U   	platform_osx(_config_vars, osname, release, machine):"
  - "Lib/_osx_support.py:509:5   	macver          	U   	macver = _config_vars.get("
  - "Lib/_osx_support.py:510:5   	macrelease      	U   	macrelease = _get_system_version"
  - "Lib/_py_abc.py:1:7      	weakrefset      	U   	from _weakrefset import WeakSet"
  - "Lib/_py_abc.py:40:43    	isabstractmethod	U   	if getattr(value, \"__isabstractmethod__\", False)}"
  - "Lib/_py_abc.py:42:42    	abstractmethods 	U   	in getattr(base, \"__abstractmethods__\", set()):"
  - "Lib/_py_abc.py:136:13   	rcls            	U   	for rcls in cls._abc_registry"
  - "Lib/_py_abc.py:141:13   	scls            	U   	for scls in cls.__subclasses"
  - "Lib/_pycodecs.py:40:23      	Lemburg             	U   	Written by Marc-Andre Lemburg (mal@lemburg.com)."
  - "Lib/_pycodecs.py:47:7       	unicodecodec        	U   	#from unicodecodec import *"
  - "Lib/_pycodecs.py:50:46      	readbuffer          	U   	encode', 'mbcs_decode', 'readbuffer_encode', 'escape_encode"
  - "Lib/_pycodecs.py:113:11     	unicodeescape       	U   	res = unicodeescape_string(obj, len(obj"
  - "Lib/_pycodecs.py:185:30     	unistr              	U   	unicode_internal_decode( unistr, errors='strict'):"
  - "Lib/_pycodecs.py:269:21     	hexa                	U   	hexa = data[i+1:i+3]"
  - "Lib/_pycodecs.py:424:5      	errmsg              	U   	errmsg = \"\""
  - "Lib/_pycodecs.py:426:5      	bitsleft            	U   	bitsleft = 0"
  - "Lib/_pycodecs.py:427:5      	charsleft           	U   	charsleft = 0"
  - "Lib/_pycodecs.py:473:58     	misencoded          	U   	indicate the potential of a misencoded character. */"
  - "Lib/_pycodecs.py:494:13     	startinpos          	U   	startinpos = i"
  - "Lib/_pycodecs.py:511:19     	aint                	U   	#XXX This aint right"
  - "Lib/_pycodecs.py:512:9      	endinpos            	U   	endinpos = size"
  - "Lib/_pycodecs.py:543:66     	unshift             	U   	BASE64 set implicitly unshift the sequence"
  - "Lib/_pycodecs.py:621:40     	uxxxx               	U   	bit characters to '\\uxxxx' */"
  - "Lib/_pycodecs.py:856:9      	newpos              	U   	newpos = res[1]"
  - "Lib/_pycodecs.py:899:17     	startpos            	U   	#/* startpos for collecting unencodable"
  - "Lib/_pycodecs.py:899:41     	unencodable         	U   	startpos for collecting unencodable chars */"
  - "Lib/_pycodecs.py:900:13     	collstart           	U   	collstart = pos"
  - "Lib/_pycodecs.py:901:13     	collend             	U   	collend = pos+1"
  - "Lib/_pycodecs.py:922:5      	hexescape           	U   	def hexescape(s, pos, digits, message"
  - "Lib/_pycodecs.py:973:17     	errmessage          	U   	errmessage = \"\\\\ at end of string"
  - "Lib/_pycodecs.py:1071:39    	Uxxxxxxxx           	U   	bit characters to '\\Uxxxxxxxx' */"
  - "Lib/_pycodecs.py:1084:5     	charmapencode       	U   	def charmapencode_output(c, mapping):"
  - "Lib/_pycodecs.py:1103:22    	xmlcharrefreplace   	U   	# * 3=ignore, 4=xmlcharrefreplace */"
  - "Lib/_pycodecs.py:1110:5     	inpos               	U   	inpos = 0"
  - "Lib/_pycodecs.py:1208:30    	rawunicodeescape    	U   	errors, \"rawunicodeescape\", \"truncated \\\\uXXXX"
  - "Lib/_pydecimal.py:4:26      	eprice      	U   	Written by Eric Price <eprice at tjhsst.edu>"
  - "Lib/_pydecimal.py:4:36      	tjhsst      	U   	Eric Price <eprice at tjhsst.edu>"
  - "Lib/_pydecimal.py:5:10      	Facundo     	U   	# and Facundo Batista <facundo at"
  - "Lib/_pydecimal.py:5:27      	facundo     	U   	and Facundo Batista <facundo at taniquetil.com.ar"
  - "Lib/_pydecimal.py:5:38      	taniquetil  	U   	Batista <facundo at taniquetil.com.ar>"
  - "Lib/_pydecimal.py:6:18      	Hettinger   	U   	# and Raymond Hettinger <python at rcn.com>"
  - "Lib/_pydecimal.py:7:10      	Aahz        	U   	# and Aahz <aahz at pobox.com>"
  - "Lib/_pydecimal.py:7:16      	aahz        	U   	# and Aahz <aahz at pobox.com>"
  - "Lib/_pydecimal.py:7:24      	pobox       	U   	and Aahz <aahz at pobox.com>"
  - "Lib/_pydecimal.py:13:20     	backported  	U   	# bug) and will be backported. At this point the"
  - "Lib/_pydecimal.py:40:5      	setcontext  	U   	>>> setcontext(ExtendedContext)"
  - "Lib/_pydecimal.py:58:5      	getcontext  	U   	>>> getcontext().prec = 18"
  - "Lib/_pydecimal.py:138:34    	localcontext	U   	setcontext', 'getcontext', 'localcontext',"
  - "Lib/_pydecimal.py:147:3     	xname       	U   	__xname__ = __name__ # sys"
  - "Lib/_pydecimal.py:151:3     	libmpdec    	U   	__libmpdec_version__ = \"2.4.2\""
  - "Lib/_pydecimal.py:339:19    	Emin        	U   	\"\"\"Exponent < Emin before rounding."
  - "Lib/_pydecimal.py:355:53    	Emax        	U   	implementation (the value Emax)."
  - "Lib/_pydecimal.py:396:54    	Etiny       	U   	exponent is not less than Etiny. This may result"
  - "Lib/_pydecimal.py:603:13    	intpart     	U   	intpart = m.group('int')"
  - "Lib/_pydecimal.py:606:17    	fracpart    	U   	fracpart = m.group('frac') or"
  - "Lib/_pydecimal.py:769:10    	isinfinity  	U   	def _isinfinity(self):"
  - "Lib/_pydecimal.py:837:26    	qnan        	U   	elif self.is_qnan():"
  - "Lib/_pydecimal.py:970:39    	raiseit     	U   	convert_other(other, raiseit=True)"
  - "Lib/_pydecimal.py:1084:9    	leftdigits  	U   	leftdigits = self._exp + len(self"
  - "Lib/_pydecimal.py:1086:11   	dotplace    	U   	# dotplace is number of digits"
  - "Lib/_pydecimal.py:1220:9    	negativezero	U   	negativezero = 0"
  - "Lib/_pydecimal.py:1316:9    	resultsign  	U   	resultsign = self._sign ^ other"
  - "Lib/_pydecimal.py:1333:9    	resultexp   	U   	resultexp = self._exp + other"
  - "Lib/_pydecimal.py:1395:13   	coeff       	U   	coeff = 0"
  - "Lib/_pydecimal.py:1432:9    	expdiff     	U   	expdiff = self.adjusted() -"
  - "Lib/_pydecimal.py:1717:51   	Etop        	U   	and between Etiny and Etop if clamp==1."
  - "Lib/_pydecimal.py:2038:23   	isinteger   	U   	if not (self._isinteger() and"
  - "Lib/_pydecimal.py:2069:19   	iseven      	U   	if other._iseven():"
  - "Lib/_pydecimal.py:2097:48   	nonspecial  	U   	and other must both be nonspecial; self must"
  - "Lib/_pydecimal.py:2124:28   	nbits       	U   	# if |y| <= 1/nbits(xc) then xc < 2**nbits"
  - "Lib/_pydecimal.py:2214:19   	emax        	U   	# emax >= largest e such that"
  - "Lib/_pydecimal.py:2378:24   	noninteger  	U   	# -ve**noninteger = NaN"
  - "Lib/_pydecimal.py:2480:69   	roundable   	U   	result is unambiguously roundable"
  - "Lib/_pydecimal.py:2483:31   	dpower      	U   	coeff, exp = _dpower(xc, xe, yc, ye, p+extra"
  - "Lib/_pydecimal.py:2512:13   	newcontext  	U   	newcontext = context.copy()"
  - "Lib/_pydecimal.py:2629:51   	folddown    	U   	care of any necessary folddown, and"
  - "Lib/_pydecimal.py:3107:58   	underflows  	U   	either overflows or underflows."
  - "Lib/_pydecimal.py:3132:31   	dexp        	U   	coeff, exp = _dexp(c, e, p+extra)"
  - "Lib/_pydecimal.py:3266:22   	dlog        	U   	coeff = _dlog(c, e, places)"
  - "Lib/_pydecimal.py:3360:9    	logb        	U   	def logb(self, context=None)"
  - "Lib/_pydecimal.py:3390:10   	islogical   	U   	def _islogical(self):"
  - "Lib/_pydecimal.py:3693:9    	torot       	U   	torot = int(other)"
  - "Lib/_pydecimal.py:3694:9    	rotdig      	U   	rotdig = self._int"
  - "Lib/_pydecimal.py:3695:9    	topad       	U   	topad = context.prec - len"
  - "Lib/_pydecimal.py:3706:9    	scaleb      	U   	def scaleb(self, other, context"
  - "Lib/_pydecimal.py:3719:9    	liminf      	U   	liminf = -2 * (context.Emax"
  - "Lib/_pydecimal.py:3720:9    	limsup      	U   	limsup = 2 * (context.Emax"
  - "Lib/_pydecimal.py:3961:47   	vmin        	U   	check(self, name, value, vmin, vmax):"
  - "Lib/_pydecimal.py:3961:53   	vmax        	U   	name, value, vmin, vmax):"
  - "Lib/_pydecimal.py:4066:33   	reraises    	U   	trap_enabler is set, it reraises the exception. Otherwise"
  - "Lib/_pydecimal.py:5763:6    	ilog        	U   	def _ilog(x, M, L = 8):"
  - "Lib/_pydecimal.py:5764:65   	boundable   	U   	with absolute error boundable"
  - "Lib/_pydecimal.py:5804:5    	yshift      	U   	yshift = _rshift_nearest(y"
  - "Lib/_pydecimal.py:5838:13   	tenpower    	U   	log_tenpower = f*M # exact"
  - "Lib/_pydecimal.py:5896:9    	getdigits   	U   	def getdigits(self, p):"
  - "Lib/_pydecimal.py:5926:6    	iexp        	U   	def _iexp(x, M, L=8):"
  - "Lib/_pydecimal.py:5952:5    	Mshift      	U   	Mshift = M<<R"
  - "Lib/_pydecimal.py:5988:9    	cshift      	U   	cshift = c*10**shift"
  - "Lib/_pydecimal.py:6185:31   	minimumwidth	U   	fill]align][sign][#][0][minimumwidth][,][.precision][type"
  - "Lib/_pydecimal.py:6194:5    	zeropad     	U   	(?P<zeropad>0)?"
  - "Lib/_pydecimal.py:6293:17   	unpadded    	U   	\"\"\"Given an unpadded, non-aligned numeric"
  - "Lib/_pydecimal.py:6340:27   	unrecognised	U   	raise ValueError('unrecognised format for grouping"
  - "Lib/_pydecimal.py:6413:9    	echar       	U   	echar = {'E': 'E', 'e': 'e"
  - "Lib/_pyio.py:26:18      	blksize             	U   	# open() uses st_blksize whenever we can"
  - "Lib/_pyio.py:36:18      	finalizer           	U   	# Does io.IOBase finalizer log the exception if"
  - "Lib/_pyio.py:38:43      	gettotalrefcount    	U   	UNRAISABLE = (hasattr(sys, \"gettotalrefcount\") or sys.flags.dev_mode"
  - "Lib/_pyio.py:71:42      	pylifecycle         	U   	builtins_open() in Python/pylifecycle.c."
  - "Lib/_pyio.py:170:5      	closedfd            	U   	closedfd is a bool. If closefd"
  - "Lib/_pyio.py:209:21     	axrwb               	U   	if modes - set(\"axrwb+tU\") or len(mode) >"
  - "Lib/_pyio.py:258:25     	fstat               	U   	bs = os.fstat(raw.fileno()).st_blksize"
  - "Lib/_pyio.py:300:23     	embedders           	U   	in order to allow embedders more control over code"
  - "Lib/_pyio.py:304:21     	pyio                	U   	warnings.warn(\"_pyio.open_code() may not"
  - "Lib/_pyio.py:346:54     	seeked              	U   	be read, written or seeked."
  - "Lib/_pyio.py:561:17     	nreadahead          	U   	def nreadahead():"
  - "Lib/_pyio.py:562:17     	readahead           	U   	readahead = self.peek(1)"
  - "Lib/_pyio.py:893:9      	modname             	U   	modname = self.__class__.__module"
  - "Lib/_pyio.py:894:9      	clsname             	U   	clsname = self.__class__.__qualname"
  - "Lib/_pyio.py:938:9      	getbuffer           	U   	def getbuffer(self):"
  - "Lib/_pyio.py:982:22     	nbytes              	U   	n = view.nbytes # Size of any bytes"
  - "Lib/_pyio.py:1541:34    	xrwab               	U   	not set(mode) <= set('xrwab+'):"
  - "Lib/_pyio.py:1543:22    	rwax                	U   	if sum(c in 'rwax' for c in mode) !="
  - "Lib/_pyio.py:1575:9     	noinherit           	U   	noinherit_flag = (getattr(os,"
  - "Lib/_pyio.py:1597:13    	fdfstat             	U   	fdfstat = os.fstat(fd)"
  - "Lib/_pyio.py:1921:14    	seennl              	U   	self.seennl = 0"
  - "Lib/_pyio.py:1922:14    	pendingcr           	U   	self.pendingcr = False"
  - "Lib/_pyio.py:2000:52    	getpreferredencoding	U   	It defaults to locale.getpreferredencoding(False)."
  - "Lib/_pyio.py:2085:17    	cratio              	U   	self._b2cratio = 0.0"
  - "Lib/_pyio.py:2087:15    	readuniversal       	U   	self._readuniversal = not newline"
  - "Lib/_pyio.py:2088:15    	readtranslate       	U   	self._readtranslate = newline is None"
  - "Lib/_pyio.py:2089:15    	readnl              	U   	self._readnl = newline"
  - "Lib/_pyio.py:2090:15    	writetranslate      	U   	self._writetranslate = newline != ''"
  - "Lib/_pyio.py:2091:15    	writenl             	U   	self._writenl = newline or os.linesep"
  - "Lib/_pyio.py:2237:9     	haslf               	U   	haslf = (self._writetranslate"
  - "Lib/_pyio.py:2388:32    	temptative          	U   	# Decode up to temptative start point"
  - "Lib/_pyio.py:2594:15    	endpos              	U   	pos = endpos = None"
  - "Lib/_pyio.py:2610:17    	nlpos               	U   	nlpos = line.find(\"\\n\", start"
  - "Lib/_pyio.py:2611:17    	crpos               	U   	crpos = line.find(\"\\r\", start"
  - "Lib/_pyio.py:2681:48    	surrogatepass       	U   	errors=\"surrogatepass\","
  - "Lib/_sitebuiltins.py:59:16      	linecnt 	U   	self.__linecnt = len(self.__lines)"
  - "Lib/_threading_local.py:12:7    	mydata      	U   	>>> mydata = local()"
  - "Lib/_threading_local.py:151:8   	localimpl   	U   	class _localimpl:"
  - "Lib/_threading_local.py:153:34  	localargs   	U   	= 'key', 'dicts', 'localargs', 'locallock', '__weakref"
  - "Lib/_threading_local.py:153:47  	locallock   	U   	dicts', 'localargs', 'locallock', '__weakref__'"
  - "Lib/_threading_local.py:171:9   	localdict   	U   	localdict = {}"
  - "Lib/_threading_local.py:177:22  	wrthread    	U   	thread = wrthread()"
  - "Lib/_threading_local.py:185:21  	wrlocal     	U   	local = wrlocal()"
  - "Lib/_weakrefset.py:17:24    	weakcontainer   	U   	def __init__(self, weakcontainer):"
  - "Lib/_weakrefset.py:65:17    	itemref         	U   	for itemref in self.data:"
  - "Lib/_weakrefset.py:132:9    	newset          	U   	newset = self.copy()"
  - "Lib/abc.py:7:20     	funcobj         	U   	def abstractmethod(funcobj):"
  - "Lib/abc.py:29:40    	classmethods    	U   	indicating abstract classmethods."
  - "Lib/abc.py:49:40    	staticmethods   	U   	indicating abstract staticmethods."
  - "Lib/aifc.py:36:27   	pstring         	U   	<marker name> (\"pstring\")"
  - "Lib/aifc.py:112:41  	pathing         	U   	audio frames without pathing up the"
  - "Lib/aifc.py:141:30  	openfp          	U   	[\"Error\", \"open\", \"openfp\"]"
  - "Lib/aifc.py:185:5   	expon           	U   	expon = _read_short(f) #"
  - "Lib/aifc.py:190:5   	himant          	U   	himant = _read_ulong(f) #"
  - "Lib/aifc.py:191:5   	lomant          	U   	lomant = _read_ulong(f) #"
  - "Lib/aifc.py:233:9   	fmant           	U   	fmant, expon = math.frexp"
  - "Lib/aifc.py:240:39  	denormalized    	U   	expon < 0: # denormalized"
  - "Lib/aifc.py:245:13  	fsmant          	U   	fsmant = math.floor(fmant)"
  - "Lib/aifc.py:258:28  	nchannels       	U   	'nchannels sampwidth framerate"
  - "Lib/aifc.py:258:38  	sampwidth       	U   	'nchannels sampwidth framerate nframes comptype"
  - "Lib/aifc.py:258:58  	nframes         	U   	sampwidth framerate nframes comptype compname')"
  - "Lib/aifc.py:258:66  	comptype        	U   	sampwidth framerate nframes comptype compname')"
  - "Lib/aifc.py:258:75  	compname        	U   	framerate nframes comptype compname')"
  - "Lib/aifc.py:292:8   	soundpos        	U   	# _soundpos -- the position in the"
  - "Lib/aifc.py:301:8   	ssnd            	U   	# _ssnd_seek_needed -- 1 iff"
  - "Lib/aifc.py:304:8   	framesize       	U   	# _framesize -- size of one frame"
  - "Lib/aifc.py:317:9   	formdata        	U   	formdata = chunk.read(4)"
  - "Lib/aifc.py:332:13  	chunkname       	U   	chunkname = chunk.getname()"
  - "Lib/aifc.py:343:23  	readmark        	U   	self._readmark(chunk)"
  - "Lib/aifc.py:403:9   	getversion      	U   	## def getversion(self):"
  - "Lib/aifc.py:449:10  	alaw            	U   	def _alaw2lin(self, data):"
  - "Lib/aifc.py:453:10  	ulaw            	U   	def _ulaw2lin(self, data):"
  - "Lib/aifc.py:457:10  	adpcm           	U   	def _adpcm2lin(self, data):"
  - "Lib/aifc.py:459:32  	adpcmstate      	U   	not hasattr(self, '_adpcmstate'):"
  - "Lib/aifc.py:476:21  	SGI's           	U   	#DEBUG: SGI's soundeditor produces"
  - "Lib/aifc.py:476:27  	soundeditor     	U   	#DEBUG: SGI's soundeditor produces a bad size"
  - "Lib/aifc.py:478:22  	chunksize       	U   	if chunk.chunksize == 18:"
  - "Lib/aifc.py:508:9   	nmarkers        	U   	nmarkers = _read_short(chunk"
  - "Lib/aifc.py:553:8   	nframeswritten  	U   	# _nframeswritten -- the number of audio"
  - "Lib/aifc.py:554:8   	datalength      	U   	# _datalength -- the size of the audio"
  - "Lib/aifc.py:555:8   	datawritten     	U   	# _datawritten -- the size of the audio"
  - "Lib/aifc.py:589:15  	marklength      	U   	self._marklength = 0"
  - "Lib/aifc.py:673:9   	setversion      	U   	## def setversion(self, version):"
  - "Lib/aifc.py:739:19  	patchheader     	U   	self._patchheader()"
  - "Lib/aifc.py:750:19  	writemarkers    	U   	self._writemarkers()"
  - "Lib/aifc.py:781:38  	datasize        	U   	header_written(self, datasize):"
  - "Lib/aifc.py:805:29  	initlength      	U   	_write_header(self, initlength):"
  - "Lib/aifc.py:827:9   	commlength      	U   	commlength = self._write_form_length"
  - "Lib/aifc.py:861:13  	verslength      	U   	verslength = 12"
  - "Lib/aifc.py:870:9   	curpos          	U   	curpos = self._file.tell()"
  - "Lib/antigravity.py:7:34     	datedow 	U   	latitude, longitude, datedow):"
  - "Lib/antigravity.py:8:36     	Munroe  	U   	geohash() using the Munroe algorithm."
  - "Lib/argparse.py:1:21    	Bethard     	U   	# Author: Steven J. Bethard <steven.bethard@gmail"
  - "Lib/argparse.py:263:17  	subaction   	U   	for subaction in self._iter_indented"
  - "Lib/argparse.py:263:50  	subactions  	U   	self._iter_indented_subactions(action):"
  - "Lib/argparse.py:302:30  	positionals 	U   	if no optionals or positionals are available, usage"
  - "Lib/argparse.py:328:36  	wrappable   	U   	# break usage into wrappable parts"
  - "Lib/argparse.py:1214:9  	subnamespace	U   	subnamespace, arg_strings = parser"
  - "Lib/argparse.py:1583:9  	confl       	U   	confl_optionals = []"
  - "Lib/argparse.py:1709:9  	superinit   	U   	superinit = super(ArgumentParser"
  - "Lib/argparse.py:2011:23 	Positionals 	U   	# the list of Positionals left to be parsed; this"
  - "Lib/ast.py:24:35    	Armin       	U   	copyright: Copyright 2008 by Armin Ronacher."
  - "Lib/ast.py:24:41    	Ronacher    	U   	Copyright 2008 by Armin Ronacher."
  - "Lib/ast.py:134:13   	allsimple   	U   	allsimple = True"
  - "Lib/ast.py:276:51   	docstrings  	U   	provided does not have docstrings a TypeError"
  - "Lib/ast.py:381:21   	popleft     	U   	node = todo.popleft()"
  - "Lib/ast.py:870:31   	binop       	U   	self.write(\" \" + self.binop[node.op.__class__._"
  - "Lib/ast.py:1047:47  	elifs       	U   	ifs into equivalent elifs."
  - "Lib/ast.py:1175:9   	unparser    	U   	unparser = type(self)(_avoid"
  - "Lib/ast.py:1318:5   	unop        	U   	unop = {\"Invert\": \"~\", \"Not"
  - "Lib/ast.py:1388:5   	cmpops      	U   	cmpops = {"
  - "Lib/ast.py:1409:5   	boolops     	U   	boolops = {\"And\": \"and\", \"Or"
  - "Lib/ast.py:1457:20  	unparsing   	U   	# when unparsing a non-empty tuple, the"
  - "Lib/ast.py:1680:26  	infile      	U   	parser.add_argument('infile', type=argparse.FileType"
  - "Lib/asynchat.py:196:9   	sabs        	U   	sabs = self.ac_out_buffer"
  - "Lib/asynchat.py:293:12  	qwertydkjf  	U   	# f_p_a_e(\"qwertydkjf\", \"\\r\\n\") => 0"
  - "Lib/asyncio/base_events.py:76:10    	reuseport   	U   	def _set_reuseport(sock):"
  - "Lib/asyncio/base_events.py:88:32    	bitmask     	U   	Linux's socket.type is a bitmask that can include extra"
  - "Lib/asyncio/base_events.py:94:9     	dgram       	U   	def _is_dgram_socket(sock):"
  - "Lib/asyncio/base_events.py:101:6    	ipaddr      	U   	def _ipaddr_info(host, port, family"
  - "Lib/asyncio/base_events.py:104:34   	pton        	U   	hasattr(socket, 'inet_pton'):"
  - "Lib/asyncio/base_events.py:257:30   	asyncgen    	U   	if hasattr(sys, 'get_asyncgen_hooks'):"
  - "Lib/asyncio/base_events.py:261:19   	asyncgens   	U   	self._asyncgens = weakref.WeakSet()"
  - "Lib/asyncio/base_events.py:314:35   	rawsock     	U   	ssl_transport(self, rawsock, protocol, sslcontext"
  - "Lib/asyncio/base_events.py:320:15   	datagram    	U   	def _make_datagram_transport(self, sock"
  - "Lib/asyncio/base_events.py:359:40   	agen        	U   	finalizer_hook(self, agen):"
  - "Lib/asyncio/base_events.py:367:19   	firstiter   	U   	def _asyncgen_firstiter_hook(self, agen):"
  - "Lib/asyncio/base_events.py:386:17   	agens       	U   	closing_agens = list(self._asyncgens"
  - "Lib/asyncio/base_events.py:656:9    	addrinfo    	U   	addrinfo = socket.getaddrinfo"
  - "Lib/asyncio/base_events.py:676:27   	sockaddr    	U   	def getnameinfo(self, sockaddr, flags=0):"
  - "Lib/asyncio/base_events.py:736:17   	laddr       	U   	laddr_infos = f2.result()"
  - "Lib/asyncio/base_events.py:941:30   	Datagram    	U   	logger.info(\"Datagram endpoint local_addr"
  - "Lib/asyncio/base_events.py:983:63   	hostnames   	U   	indirectly e.g. when hostnames"
  - "Lib/asyncio/base_events.py:1019:25  	socktype    	U   	af, socktype, proto, canonname, sa"
  - "Lib/asyncio/base_events.py:1019:42  	canonname   	U   	af, socktype, proto, canonname, sa = res"
  - "Lib/asyncio/base_events.py:1319:23  	signalsafe  	U   	def _add_callback_signalsafe(self, handle):"
  - "Lib/asyncio/base_events.py:1376:13  	nevent      	U   	nevent = len(event_list)"
  - "Lib/asyncio/base_events.py:1408:9   	ntodo       	U   	ntodo = len(self._ready)"
  - "Lib/asyncio/coroutines.py:22:26     	Coro    	U   	generator objects in a CoroWrapper instance (defined"
  - "Lib/asyncio/coroutines.py:119:29    	lasti   	U   	assert caller.f_lasti >= 0"
  - "Lib/asyncio/coroutines.py:200:11    	defiend 	U   	# defiend with \"async def\"."
  - "Lib/asyncio/coroutines.py:277:44    	Cython  	U   	a built-in type or a Cython coroutine."
  - "Lib/asyncio/events.py:360:44    	systsem         	U   	representing a file systsem path to bind the"
  - "Lib/asyncio/events.py:428:54    	nonblocking     	U   	already switched to nonblocking."
  - "Lib/asyncio/events.py:623:53    	asynciomodule   	U   	implemented in C (see _asynciomodule.c)"
  - "Lib/asyncio/proactor_events.py:1:23     	proactor    	U   	\"Event loop using a proactor and related classes"
  - "Lib/asyncio/proactor_events.py:21:8     	Proactor    	U   	class _ProactorBasePipeTransport(transports"
  - "Lib/asyncio/proactor_events.py:355:26   	sockname    	U   	self._extra['sockname'] = sock.getsockname"
  - "Lib/asyncio/proactor_events.py:360:13   	peername    	U   	if 'peername' not in self._extra"
  - "Lib/asyncio/proactor_events.py:455:10   	socketpair  	U   	def _socketpair(self):"
  - "Lib/asyncio/proactor_events.py:462:15   	ssock       	U   	self._ssock.close()"
  - "Lib/asyncio/proactor_events.py:464:15   	csock       	U   	self._csock.close()"
  - "Lib/asyncio/selector_events.py:44:14    	nodelay 	U   	def _set_nodelay(sock):"
  - "Lib/asyncio/selector_events.py:686:23   	Nagle   	U   	# Disable the Nagle algorithm -- small writes"
  - "Lib/asyncio/selector_events.py:833:9    	sslsock 	U   	sslsock = sslcontext.wrap_socket"
  - "Lib/asyncio/selector_events.py:844:38   	peercert	U   	specific extra info. (peercert is set later)"
  - "Lib/asyncio/sslproto.py:85:15   	sslobj  	U   	self._sslobj = None"
  - "Lib/asyncio/sslproto.py:86:20   	ssldata 	U   	self._need_ssldata = False"
  - "Lib/asyncio/sslproto.py:442:15  	sslpipe 	U   	self._sslpipe = None"
  - "Lib/asyncio/streams.py:480:9    	seplen              	U   	seplen = len(sep)"
  - "Lib/asyncio/streams.py:526:41   	SEPARATO            	U   	i.e buffer='some textSEPARATO'. In this case we"
  - "Lib/asyncio/streams.py:529:21   	abcdefghijklmnopqr  	U   	# buffer='abcdefghijklmnopqrS'. We may safely consume"
  - "Lib/asyncio/streams.py:533:58   	rescanning          	U   	optimal, since require rescanning"
  - "Lib/asyncio/streams.py:546:13   	buflen              	U   	buflen = len(self._buffer)"
  - "Lib/asyncio/streams.py:551:17   	isep                	U   	isep = self._buffer.find"
  - "Lib/asyncio/streams.py:568:20   	ater                	U   	# EOF *ater* inspecting the buffer"
  - "Lib/asyncio/tasks.py:600:13     	coros       	U   	def gather(*coros_or_futures, loop=None"
  - "Lib/asyncio/tasks.py:649:5      	nchildren   	U   	nchildren = len(children)"
  - "Lib/asyncio/tasks.py:651:5      	nfinished   	U   	nfinished = 0"
  - "Lib/asyncio/test_utils.py:109:7     	SSLWSGI 	U   	class SSLWSGIServerMixin:"
  - "Lib/asyncio/unix_events.py:37:6     	sighandler  	U   	def _sighandler_noop(signum, frame)"
  - "Lib/asyncio/unix_events.py:77:61    	uncatchable 	U   	number is invalid or uncatchable."
  - "Lib/asyncio/unix_events.py:100:29   	wakup       	U   	# number in the wakup file descriptor. _process"
  - "Lib/asyncio/unix_events.py:105:20   	siginterrupt	U   	signal.siginterrupt(sig, False)"
  - "Lib/asyncio/unix_events.py:111:49   	nexc        	U   	ValueError, OSError) as nexc:"
  - "Lib/asyncio/unix_events.py:669:10   	cloexec     	U   	# cloexec_flag = getattr(fcntl"
  - "Lib/asyncio/unix_events.py:723:9    	waitpid     	U   	waitpid(-1), there should be"
  - "Lib/asyncio/unix_events.py:802:63   	chld        	U   	signal.SIGCHLD, self._sig_chld)"
  - "Lib/asyncio/unix_events.py:951:59   	pids        	U   	termination from unknown pids: %s\","
  - "Lib/asyncio/windows_events.py:3:9       	winapi      	U   	import _winapi"
  - "Lib/asyncio/windows_events.py:403:15    	iocp        	U   	self._iocp = _overlapped.CreateIoComplet"
  - "Lib/asyncio/windows_events.py:443:27    	getresult   	U   	return ov.getresult()"
  - "Lib/asyncio/windows_events.py:711:18    	unregisted  	U   	# Remove unregisted futures"
  - "Lib/asyncio/windows_utils.py:40:53      	Geert       	U   	github.com/4325783, by Geert Jansen."
  - "Lib/asyncio/windows_utils.py:57:9       	lsock       	U   	lsock = socket.socket(family"
  - "Lib/asyncio/windows_utils.py:89:9       	openmode    	U   	openmode = _winapi.PIPE_ACCESS"
  - "Lib/asyncio/windows_utils.py:91:9       	obsize      	U   	obsize, ibsize = bufsize, bufsize"
  - "Lib/asyncio/windows_utils.py:91:17      	ibsize      	U   	obsize, ibsize = bufsize, bufsize"
  - "Lib/asyncio/windows_utils.py:103:19     	attribs     	U   	flags_and_attribs = _winapi.FILE_FLAG"
  - "Lib/asyncio/windows_utils.py:152:35     	operatioon  	U   	raise ValueError(\"I/O operatioon on closed pipe\")"
  - "Lib/asyncore.py:58:6    	errorcode   	U   	errorcode"
  - "Lib/asyncore.py:79:2    	reraised    	U   	_reraised_exceptions = (ExitNow"
  - "Lib/asyncore.py:380:15  	winsock     	U   	# winsock sometimes raises ENOTCONN"
  - "Lib/asyncore.py:457:20  	tbinfo      	U   	nil, t, v, tbinfo = compact_traceback"
  - "Lib/asyncore.py:466:14  	uncaptured  	U   	'uncaptured python exception, closing"
  - "Lib/asyncore.py:573:57  	unixen      	U   	man pages on various unixen, and"
  - "Lib/asyncore.py:576:41  	filemap     	U   	though - reading linux/mm/filemap.c shows that linux"
  - "Lib/asyncore.py:605:37  	optname     	U   	getsockopt(self, level, optname, buflen=None):"
  - "Lib/base64.py:51:18     	altchars    	U   	def b64encode(s, altchars=None):"
  - "Lib/base64.py:220:5     	padchars    	U   	padchars = l - len(s)"
  - "Lib/base64.py:279:44    	foldnuls    	U   	chars2, pad=False, foldnuls=False, foldspaces=False"
  - "Lib/base64.py:279:60    	foldspaces  	U   	False, foldnuls=False, foldspaces=False):"
  - "Lib/base64.py:303:39    	wrapcol     	U   	, foldspaces=False, wrapcol=0, pad=False, adobe"
  - "Lib/base64.py:344:52    	ignorechars 	U   	False, adobe=False, ignorechars=b' \\t\\n\\r\\v'):"
  - "Lib/base64.py:518:10    	ndim        	U   	if m.ndim != 1:"
  - "Lib/bdb.py:34:14    	fncache     	U   	self.fncache = {}"
  - "Lib/bdb.py:60:14    	botframe    	U   	self.botframe = None"
  - "Lib/bdb.py:61:19    	stopinfo    	U   	self._set_stopinfo(None, None)"
  - "Lib/bdb.py:134:17   	stopframe   	U   	if self.stopframe and frame.f_code.co"
  - "Lib/bdb.py:147:51   	returnframe 	U   	frame) or frame == self.returnframe:"
  - "Lib/bdb.py:158:49   	stoplineno  	U   	stopframe is frame and self.stoplineno != -1:"
  - "Lib/bdb.py:172:30   	subiterator 	U   	# triggered by a subiterator run with the 'yield"
  - "Lib/bdb.py:237:18   	currentbp   	U   	self.currentbp = bp.number"
  - "Lib/bdb.py:279:38   	stopline    	U   	than or equal to the stopline. If stoplineno is"
  - "Lib/bdb.py:372:12   	linenos     	U   	bp_linenos = self.breaks.setdefault"
  - "Lib/bdb.py:377:19   	funcname    	U   	funcname=None):"
  - "Lib/bdb.py:455:13   	blist       	U   	blist = Breakpoint.bplist"
  - "Lib/bdb.py:475:59   	bybpnumber  	U   	index in Breakpoint.bybpnumber."
  - "Lib/bdb.py:551:48   	lprefix     	U   	self, frame_lineno, lprefix=': '):"
  - "Lib/bdb.py:755:19   	dbreakpoint 	U   	ret = '%-4dbreakpoint %s at %s:%d' % (self"
  - "Lib/binhex.py:4:8       	inputfilename   	U   	binhex(inputfilename, outputfilename)"
  - "Lib/binhex.py:4:23      	outputfilename  	U   	binhex(inputfilename, outputfilename)"
  - "Lib/binhex.py:5:1       	hexbin          	U   	hexbin(inputfilename, outputfilename"
  - "Lib/binhex.py:13:25     	textfiles       	U   	XXXX Note: currently, textfiles appear in mac-form on"
  - "Lib/binhex.py:59:5      	getfileinfo     	U   	def getfileinfo(name):"
  - "Lib/binhex.py:60:5      	finfo           	U   	finfo = FInfo()"
  - "Lib/binhex.py:67:9      	dsize           	U   	dsize = fp.tell()"
  - "Lib/binhex.py:72:7      	openrsrc        	U   	class openrsrc:"
  - "Lib/binhex.py:95:8      	Hqxcoderengine  	U   	class _Hqxcoderengine:"
  - "Lib/binhex.py:101:14    	hqxdata         	U   	self.hqxdata = b''"
  - "Lib/binhex.py:102:14    	linelen         	U   	self.linelen = LINELEN - 1"
  - "Lib/binhex.py:106:9     	datalen         	U   	datalen = len(self.data)"
  - "Lib/binhex.py:135:8     	Rlecoderengine  	U   	class _Rlecoderengine:"
  - "Lib/binhex.py:147:13    	rledata         	U   	rledata = binascii.rlecode_hqx"
  - "Lib/binhex.py:147:32    	rlecode         	U   	rledata = binascii.rlecode_hqx(self.data)"
  - "Lib/binhex.py:160:35    	dlen            	U   	init__(self, name_finfo_dlen_rlen, ofp):"
  - "Lib/binhex.py:160:40    	rlen            	U   	self, name_finfo_dlen_rlen, ofp):"
  - "Lib/binhex.py:164:13    	ofname          	U   	ofname = ofp"
  - "Lib/binhex.py:169:13    	hqxer           	U   	hqxer = _Hqxcoderengine(ofp"
  - "Lib/binhex.py:176:19    	writeinfo       	U   	self._writeinfo(name, finfo)"
  - "Lib/binhex.py:200:15    	writecrc        	U   	self._writecrc()"
  - "Lib/binhex.py:228:15    	rsrc            	U   	def write_rsrc(self, data):"
  - "Lib/binhex.py:254:15    	infilename      	U   	\"\"\"binhex(infilename, outfilename): create"
  - "Lib/binhex.py:254:27    	outfilename     	U   	\"binhex(infilename, outfilename): create binhex-encoded"
  - "Lib/binhex.py:274:8     	Hqxdecoderengine	U   	class _Hqxdecoderengine:"
  - "Lib/binhex.py:281:20    	totalwtd        	U   	def read(self, totalwtd):"
  - "Lib/binhex.py:283:9     	decdata         	U   	decdata = b''"
  - "Lib/binhex.py:300:25    	decdatacur      	U   	decdatacur, self.eof = binascii"
  - "Lib/binhex.py:304:17    	newdata         	U   	newdata = self.ifp.read(1)"
  - "Lib/binhex.py:317:8     	Rledecoderengine	U   	class _Rledecoderengine:"
  - "Lib/binhex.py:338:30    	rledecode       	U   	binascii.rledecode_hqx(self.pre_buffer"
  - "Lib/binhex.py:391:9     	hqxifp          	U   	hqxifp = _Hqxdecoderengine"
  - "Lib/binhex.py:394:15    	readheader      	U   	self._readheader()"
  - "Lib/binhex.py:401:10    	checkcrc        	U   	def _checkcrc(self):"
  - "Lib/binhex.py:402:9     	filecrc         	U   	filecrc = struct.unpack('>h"
  - "Lib/binhex.py:478:49    	binhexed        	U   	outfilename) - Decode binhexed file\"\"\""
  - "Lib/bz2.py:1:21     	libbzip         	U   	\"\"\"Interface to the libbzip2 compression library"
  - "Lib/bz2.py:7:44     	Decompressor    	U   	BZ2Compressor\", \"BZ2Decompressor\","
  - "Lib/bz2.py:10:15    	Nadeem          	U   	__author__ = \"Nadeem Vawda <nadeem.vawda"
  - "Lib/bz2.py:10:22    	Vawda           	U   	_author__ = \"Nadeem Vawda <nadeem.vawda@gmail"
  - "Lib/bz2.py:37:47    	compresslevel   	U   	filename, mode=\"r\", *, compresslevel=9):"
  - "Lib/bz2.py:56:15    	closefp         	U   	self._closefp = False"
  - "Lib/calendar.py:59:9    	funcs               	U   	funcs = self._months[i]"
  - "Lib/calendar.py:126:5   	ndays               	U   	ndays = mdays[month] + (month"
  - "Lib/calendar.py:130:6   	monthlen            	U   	def _monthlen(year, month):"
  - "Lib/calendar.py:134:6   	prevmonth           	U   	def _prevmonth(year, month):"
  - "Lib/calendar.py:141:6   	nextmonth           	U   	def _nextmonth(year, month):"
  - "Lib/calendar.py:299:22  	theweek             	U   	def prweek(self, theweek, width):"
  - "Lib/calendar.py:337:31  	theyear             	U   	formatmonthname(self, theyear, themonth, width, withyear"
  - "Lib/calendar.py:337:40  	themonth            	U   	ormatmonthname(self, theyear, themonth, width, withyear=True"
  - "Lib/calendar.py:337:57  	withyear            	U   	theyear, themonth, width, withyear=True):"
  - "Lib/calendar.py:375:9   	colwidth            	U   	colwidth = (w + 1) * 7 - 1"
  - "Lib/calendar.py:422:23  	noday               	U   	cssclass_noday = \"noday\""
  - "Lib/calendar.py:484:46  	cellspacing         	U   	\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"%s\">' %"
  - "Lib/calendar.py:527:28  	getdefaultencoding  	U   	encoding = sys.getdefaultencoding()"
  - "Lib/calendar.py:551:14  	oldlocale           	U   	self.oldlocale = _locale.getlocale"
  - "Lib/calendar.py:668:5   	textgroup           	U   	textgroup = parser.add_argument"
  - "Lib/calendar.py:669:5   	htmlgroup           	U   	htmlgroup = parser.add_argument"
  - "Lib/calendar.py:738:9   	optdict             	U   	optdict = dict(encoding=encoding"
  - "Lib/cgi.py:21:45    	Majewski        	U   	this module. Steve Majewski changed the"
  - "Lib/cgi.py:23:45    	Andreas         	U   	by code submitted by Andreas Paepcke. Guido van"
  - "Lib/cgi.py:23:53    	Paepcke         	U   	submitted by Andreas Paepcke. Guido van"
  - "Lib/cgi.py:56:14    	allargs         	U   	def initlog(*allargs):"
  - "Lib/cgi.py:159:13   	clength         	U   	clength = int(environ['CONTENT"
  - "Lib/cgi.py:208:6    	parseparam      	U   	def _parseparam(s):"
  - "Lib/cgi.py:305:18   	subclassable    	U   	The class is subclassable, mostly for the purpose"
  - "Lib/cgi.py:312:47   	outerboundary   	U   	None, headers=None, outerboundary=b'',"
  - "Lib/cgi.py:373:60   	surrogateescape 	U   	getpreferredencoding(), 'surrogateescape')"
  - "Lib/cgi.py:416:9    	cdisp           	U   	cdisp, pdict = \"\", {}"
  - "Lib/cgi.py:450:18   	innerboundary   	U   	self.innerboundary = pdict['boundary']"
  - "Lib/cgi.py:455:9    	clen            	U   	clen = -1"
  - "Lib/cgi.py:736:19   	lfend           	U   	last_line_lfend = True"
  - "Lib/cgi.py:751:17   	strippedline    	U   	strippedline = line.rstrip()"
  - "Lib/cgi.py:757:13   	odelim          	U   	odelim = delim"
  - "Lib/cgitb.py:10:5       	logdir      	U   	logdir - if set, tracebacks"
  - "Lib/cgitb.py:20:15      	etype       	U   	3-item tuple (etype, evalue, etb) just like"
  - "Lib/cgitb.py:20:22      	evalue      	U   	-item tuple (etype, evalue, etb) just like the"
  - "Lib/cgitb.py:42:47      	blockquote  	U   	script> </object> </blockquote> </pre>"
  - "Lib/cgitb.py:82:11      	lasttoken   	U   	vars, lasttoken, parent, prefix, value"
  - "Lib/cgitb.py:101:10     	einfo       	U   	def html(einfo, context=5):"
  - "Lib/cgitb.py:106:5      	pyver       	U   	pyver = 'Python ' + sys.version"
  - "Lib/cgitb.py:118:22     	lnum        	U   	for frame, file, lnum, func, lines, index"
  - "Lib/cgitb.py:124:24     	varkw       	U   	args, varargs, varkw, locals = inspect.getargvalue"
  - "Lib/chunk.py:33:5       	chunktype   	U   	chunktype = chunk.getname()"
  - "Lib/chunk.py:52:42      	bigendian   	U   	self, file, align=True, bigendian=True, inclheader=False"
  - "Lib/chunk.py:52:58      	inclheader  	U   	True, bigendian=True, inclheader=False):"
  - "Lib/chunk.py:57:13      	strflag     	U   	strflag = '>'"
  - "Lib/cmd.py:20:26    	begidx      	U   	arguments text, line, begidx, endidx. text is string"
  - "Lib/cmd.py:20:34    	endidx      	U   	text, line, begidx, endidx. text is string we"
  - "Lib/cmd.py:22:16    	lstripped   	U   	input line (lstripped), begidx and endidx"
  - "Lib/cmd.py:76:24    	completekey 	U   	def __init__(self, completekey='tab', stdin=None, stdout"
  - "Lib/cmd.py:95:14    	cmdqueue    	U   	self.cmdqueue = []"
  - "Lib/cmd.py:248:9    	dotext      	U   	dotext = 'do_'+text"
  - "Lib/cmd.py:259:13   	origline    	U   	origline = readline.get_line"
  - "Lib/cmd.py:267:21   	compfunc    	U   	compfunc = self.completedefault"
  - "Lib/cmd.py:311:13   	cmds        	U   	cmds_doc = []"
  - "Lib/cmd.py:312:18   	undoc       	U   	cmds_undoc = []"
  - "Lib/cmd.py:319:13   	prevname    	U   	prevname = ''"
  - "Lib/cmd.py:338:42   	cmdlen      	U   	self, header, cmds, cmdlen, maxcol):"
  - "Lib/cmd.py:338:50   	maxcol      	U   	header, cmds, cmdlen, maxcol):"
  - "Lib/cmd.py:346:31   	displaywidth	U   	columnize(self, list, displaywidth=80):"
  - "Lib/cmd.py:356:9    	nonstrings  	U   	nonstrings = [i for i in range"
  - "Lib/cmd.py:366:13   	nrows       	U   	for nrows in range(1, len(list"
  - "Lib/cmd.py:367:13   	ncols       	U   	ncols = (size+nrows-1) //"
  - "Lib/cmd.py:368:13   	colwidths   	U   	colwidths = []"
  - "Lib/cmd.py:369:13   	totwidth    	U   	totwidth = -2"
  - "Lib/code.py:5:36    	Epler   	U   	similar code by Jeff Epler and Fredrik Lundh."
  - "Lib/code.py:5:54    	Lundh   	U   	Jeff Epler and Fredrik Lundh."
  - "Lib/code.py:189:37  	exitmsg 	U   	interact(self, banner=None, exitmsg=None):"
  - "Lib/code.py:279:27  	readfunc	U   	interact(banner=None, readfunc=None, local=None, exitmsg"
  - "Lib/codecs.py:32:13     	backslashreplace	U   	\"backslashreplace_errors\", \"namereplace"
  - "Lib/codecs.py:32:40     	namereplace     	U   	backslashreplace_errors\", \"namereplace_errors\","
  - "Lib/codecs.py:60:22     	endianness      	U   	# UTF-16, native endianness"
  - "Lib/codecs.py:131:45    	backslashed     	U   	slashreplace' - Replace with backslashed escape sequences."
  - "Lib/codecs.py:162:59    	getreadbuf      	U   	which provides the bf_getreadbuf"
  - "Lib/codecs.py:311:11    	undecoded       	U   	# undecoded input that is kept between"
  - "Lib/codecs.py:393:49    	rescan          	U   	data without having to rescan the whole"
  - "Lib/codecs.py:443:14    	bytebuffer      	U   	self.bytebuffer = b\"\""
  - "Lib/codecs.py:444:21    	charbuffer      	U   	self._empty_charbuffer = self.charbuffertype"
  - "Lib/codecs.py:446:14    	linebuffer      	U   	self.linebuffer = None"
  - "Lib/codecs.py:451:39    	firstline       	U   	size=-1, chars=-1, firstline=False):"
  - "Lib/codecs.py:504:17    	newchars        	U   	newchars, decodedbytes = self"
  - "Lib/codecs.py:504:27    	decodedbytes    	U   	newchars, decodedbytes = self.decode(data,"
  - "Lib/codecs.py:554:9     	readsize        	U   	readsize = size or 72"
  - "Lib/codecs.py:586:22    	withend         	U   	line0withend = lines[0]"
  - "Lib/codecs.py:587:22    	withoutend      	U   	line0withoutend = lines[0].splitlines"
  - "Lib/codecs.py:606:25    	sizehint        	U   	def readlines(self, sizehint=None, keepends=True"
  - "Lib/codecs.py:806:15    	bytesencoded    	U   	data, bytesencoded = self.encode(data,"
  - "Lib/codecs.py:836:15    	bytesdecoded    	U   	data, bytesdecoded = self.decode(data,"
  - "Lib/codeop.py:67:51     	pythonrun   	U   	# Matches pythonrun.h"
  - "Lib/codeop.py:148:9     	codeob      	U   	codeob = compile(source, filename"
  - "Lib/collections/__init__.py:52:10   	coolreader      	U   	# I (coolreader18) couldn't figure out"
  - "Lib/collections/__init__.py:92:33   	hardroot        	U   	sentinel is in self.__hardroot with a weakref proxy"
  - "Lib/collections/__init__.py:211:23  	getsizeof       	U   	sizeof = _sys.getsizeof"
  - "Lib/collections/__init__.py:328:31  	tuplegetter     	U   	collections import _tuplegetter"
  - "Lib/collections/__init__.py:520:8   	multiset        	U   	or multiset. Elements are stored"
  - "Lib/collections/__init__.py:523:22  	abcdeabcdabcaba 	U   	>>> c = Counter('abcdeabcdabcaba') # count elements"
  - "Lib/collections/__init__.py:530:6   	aaaaabbbbcccdde 	U   	'aaaaabbbbcccdde'"
  - "Lib/collections/__init__.py:536:22  	shazam          	U   	>>> for elem in 'shazam': # update"
  - "Lib/collections/__init__.py:544:22  	simsalabim      	U   	>>> d = Counter('simsalabim') # make another"
  - "Lib/collections/__init__.py:556:22  	aaabbc          	U   	>>> c = Counter('aaabbc')"
  - "Lib/collections/__init__.py:575:26  	gallahad        	U   	>>> c = Counter('gallahad') #"
  - "Lib/collections/__init__.py:627:45  	Multiset        	U   	do from Smalltalk and Multiset.begin from C++."
  - "Lib/collections/__init__.py:659:61  	mismash         	U   	the other counts for a mismash that"
  - "Lib/collections/__init__.py:780:25  	multisets       	U   	# Given counter multisets such as:"
  - "Lib/collections/__init__.py:801:22  	abbb            	U   	>>> Counter('abbb') + Counter('bcc')"
  - "Lib/collections/__init__.py:809:13  	newcount        	U   	newcount = count + other[elem"
  - "Lib/collections/__init__.py:820:22  	abbbc           	U   	>>> Counter('abbbc') - Counter('bccd')"
  - "Lib/collections/__init__.py:820:41  	bccd            	U   	'abbbc') - Counter('bccd')"
  - "Lib/collections/__init__.py:894:9   	nonpositive     	U   	nonpositive = [elem for elem, count"
  - "Lib/collections/__init__.py:962:25  	updateable      	U   	to create a single, updateable view."
  - "Lib/collections/__init__.py:1185:24 	initlist        	U   	def __init__(self, initlist=None):"
  - "Lib/colorsys.py:72:5    	maxc	U   	maxc = max(r, g, b)"
  - "Lib/colorsys.py:73:5    	minc	U   	minc = min(r, g, b)"
  - "Lib/compileall.py:27:20     	ddir        	U   	def _walk_dir(dir, ddir=None, maxlevels=10,"
  - "Lib/compileall.py:27:31     	maxlevels   	U   	dir(dir, ddir=None, maxlevels=10, quiet=0):"
  - "Lib/compileall.py:44:13     	dfile       	U   	dfile = os.path.join(ddir"
  - "Lib/compileall.py:123:13    	cfile       	U   	cfile = fullname + 'c'"
  - "Lib/compileall.py:139:47    	chandle     	U   	open(cfile, 'rb') as chandle:"
  - "Lib/compileall.py:231:53    	flist       	U   	metavar='FILE', dest='flist',"
  - "Lib/compileall.py:243:13    	dests       	U   	compile_dests = args.compile_dest"
  - "Lib/concurrent/futures/__init__.py:1:24     	Quinlan 	U   	Copyright 2009 Brian Quinlan. All Rights Reserved"
  - "Lib/concurrent/futures/process.py:62:10     	wakeups         	U   	_threads_wakeups = weakref.WeakKeyDictionary"
  - "Lib/concurrent/futures/process.py:99:22     	subinterpreters 	U   	compatibility with subinterpreters, which no longer support"
  - "Lib/concurrent/futures/process.py:116:17    	stringification 	U   	# Hack to embed stringification of remote traceback"
  - "Lib/concurrent/futures/process.py:208:6     	sendback        	U   	def _sendback_result(result_queue"
  - "Lib/concurrent/futures/process.py:218:60    	initargs        	U   	queue, initializer, initargs):"
  - "Lib/concurrent/futures/process.py:547:9     	nsems           	U   	nsems_max = os.sysconf(\"SC"
  - "Lib/concurrent/futures/process.py:547:24    	sysconf         	U   	nsems_max = os.sysconf(\"SC_SEM_NSEMS_MAX\")"
  - "Lib/concurrent/futures/process.py:552:11    	indetermined    	U   	# indetermined limit, assume that limit"
  - "Lib/concurrent/futures/process.py:665:34    	epipe           	U   	_call_queue._ignore_epipe = True"
  - "Lib/concurrent/futures/process.py:686:42    	codepath        	U   	Assertion disabled as this codepath is also used to replace"
  - "Lib/concurrent/futures/thread.py:42:71      	reinit  	U   	shutdown_lock._at_fork_reinit,"
  - "Lib/configparser.py:61:62   	buildbot    	U   	also provides a ``zc.buildbot``"
  - "Lib/configparser.py:265:41  	rawval      	U   	self, option, section, rawval, reference):"
  - "Lib/configparser.py:404:49  	accum       	U   	self, parser, option, accum, rest, section, map"
  - "Lib/configparser.py:448:9   	buildout    	U   	`zc.buildout'. Enables interpolation"
  - "Lib/configparser.py:684:25  	systemwide  	U   	home directory, systemwide directory), and all"
  - "Lib/configparser.py:719:9   	sfile       	U   	sfile = io.StringIO(string"
  - "Lib/configparser.py:870:27  	optionstr   	U   	def optionxform(self, optionstr):"
  - "Lib/configparser.py:893:13  	sectdict    	U   	sectdict = self._defaults"
  - "Lib/configparser.py:988:25  	fpname      	U   	def _read(self, fp, fpname):"
  - "Lib/configparser.py:1006:9  	cursect     	U   	cursect = None"
  - "Lib/configparser.py:1007:9  	sectname    	U   	sectname = None"
  - "Lib/configparser.py:1048:19 	nonspace    	U   	first_nonspace = self.NONSPACECRE.search"
  - "Lib/configparser.py:1082:38 	optval      	U   	optname, vi, optval = mo.group('option'"
  - "Lib/configparser.py:1133:9  	sectiondict 	U   	sectiondict = {}"
  - "Lib/configparser.py:1140:9  	vardict     	U   	vardict = {}"
  - "Lib/contextlib.py:199:42    	actully 	U   	the RuntimeError is actully Stop(Async)Iteration"
  - "Lib/contextlib.py:315:24    	exctype 	U   	def __exit__(self, exctype, excinst, exctb):"
  - "Lib/contextlib.py:315:33    	excinst 	U   	exit__(self, exctype, excinst, exctb):"
  - "Lib/contextlib.py:315:42    	exctb   	U   	self, exctype, excinst, exctb):"
  - "Lib/contextlib.py:348:24    	somefile	U   	os.remove(somefile)"
  - "Lib/contextlib.py:676:25    	excinfo 	U   	def __exit__(self, *excinfo):"
  - "Lib/copy.py:46:55   	getinitargs 	U   	define methods called __getinitargs__(),"
  - "Lib/copy.py:86:5    	reductor    	U   	reductor = dispatch_table.get"
  - "Lib/copy.py:259:30  	listiter    	U   	state=None, listiter=None, dictiter=None"
  - "Lib/copy.py:259:45  	dictiter    	U   	None, listiter=None, dictiter=None,"
  - "Lib/copy.py:275:24  	slotstate   	U   	state, slotstate = state"
  - "Lib/copyreg.py:41:6     	reconstructor   	U   	def _reconstructor(cls, base, state):"
  - "Lib/copyreg.py:99:6     	slotnames       	U   	def _slotnames(cls):"
  - "Lib/copyreg.py:204:35   	Zope            	U   	64 Reserved for Zope"
  - "Lib/csv.py:76:44    	restkey     	U   	f, fieldnames=None, restkey=None, restval=None,"
  - "Lib/csv.py:76:58    	restval     	U   	None, restkey=None, restval=None,"
  - "Lib/csv.py:126:51   	extrasaction	U   	fieldnames, restval=\"\", extrasaction=\"raise\","
  - "Lib/csv.py:140:29   	rowdict     	U   	_dict_to_list(self, rowdict):"
  - "Lib/csv.py:151:25   	rowdicts    	U   	def writerows(self, rowdicts):"
  - "Lib/csv.py:212:13   	restr       	U   	for restr in (r'(?P<delim>[^\\w"
  - "Lib/csv.py:227:9    	groupindex  	U   	groupindex = regexp.groupindex"
  - "Lib/dataclasses.py:454:23   	dflt            	U   	default_name = f'_dflt_{f.name}'"
  - "Lib/dataclasses.py:469:54   	defaultvalue    	U   	initialized with a default=defaultvalue, the"
  - "Lib/dataclasses.py:577:28   	concatenting    	U   	# (instead of just concatenting the lists together)"
  - "Lib/dataclasses.py:844:5    	flds            	U   	flds = [f for f in fields"
  - "Lib/dataclasses.py:895:41   	introspectable  	U   	dataclass won't be fully introspectable"
  - "Lib/dataclasses.py:1110:39  	slighly         	U   	slots. These could be slighly more performant if we"
  - "Lib/dataclasses.py:1263:13  	namedtuples     	U   	# namedtuples to lists. Admittedly"
  - "Lib/datetime.py:27:68   	Dershowitz      	U   	Gregorian\" calendar in Dershowitz"
  - "Lib/datetime.py:28:7    	Reingold's      	U   	# and Reingold's \"Calendrical Calculations"
  - "Lib/datetime.py:136:5   	leapyear        	U   	leapyear = n1 == 3 and (n4 !"
  - "Lib/datetime.py:156:45  	dstflag         	U   	y, m, d, hh, mm, ss, dstflag):"
  - "Lib/datetime.py:158:5   	dnum            	U   	dnum = _days_before_month"
  - "Lib/datetime.py:161:34  	timespec        	U   	time(hh, mm, ss, us, timespec='auto'):"
  - "Lib/datetime.py:203:5   	freplace        	U   	freplace = None # the string"
  - "Lib/datetime.py:204:5   	zreplace        	U   	zreplace = None # the string"
  - "Lib/datetime.py:205:5   	Zreplace        	U   	Zreplace = None # the string"
  - "Lib/datetime.py:208:5   	newformat       	U   	newformat = []"
  - "Lib/datetime.py:265:27  	dtstr           	U   	parse_isoformat_date(dtstr):"
  - "Lib/datetime.py:281:24  	tstr            	U   	def _parse_hh_mm_ss_ff(tstr):"
  - "Lib/datetime.py:334:9   	tzstr           	U   	tzstr = tstr[tz_pos:]"
  - "Lib/datetime.py:348:13  	tzsign          	U   	tzsign = -1 if tstr[tz_pos"
  - "Lib/datetime.py:418:6   	cmperror        	U   	def _cmperror(x, y):"
  - "Lib/datetime.py:429:18  	longobject      	U   	# in Objects/longobject.c."
  - "Lib/datetime.py:459:57  	hashcode        	U   	'_microseconds', '_hashcode'"
  - "Lib/datetime.py:485:13  	dayfrac         	U   	dayfrac, days = _math.modf(days"
  - "Lib/datetime.py:486:13  	daysecondsfrac  	U   	daysecondsfrac, daysecondswhole ="
  - "Lib/datetime.py:486:29  	daysecondswhole 	U   	daysecondsfrac, daysecondswhole = _math.modf(dayfrac"
  - "Lib/datetime.py:501:13  	secondsfrac     	U   	secondsfrac, seconds = _math.modf"
  - "Lib/datetime.py:520:9   	usdouble        	U   	usdouble = secondsfrac * 1e6"
  - "Lib/datetime.py:658:13  	usec            	U   	usec = self._to_microseconds"
  - "Lib/datetime.py:776:37  	radd            	U   	radd__, __sub__ (add/radd only with timedelta"
  - "Lib/datetime.py:829:39  	jday            	U   	hh, mm, ss, weekday, jday, dst = _time.localtime"
  - "Lib/datetime.py:890:18  	isoweek         	U   	day_1 = _isoweek1monday(year)"
  - "Lib/datetime.py:1145:9  	dtoff           	U   	dtoff = dt.utcoffset()"
  - "Lib/datetime.py:1152:9  	dtdst           	U   	dtdst = dt.dst()"
  - "Lib/datetime.py:1344:9  	mytz            	U   	mytz = self._tzinfo"
  - "Lib/datetime.py:1345:9  	ottz            	U   	ottz = other._tzinfo"
  - "Lib/datetime.py:1346:9  	myoff           	U   	myoff = otoff = None"
  - "Lib/datetime.py:1346:17 	otoff           	U   	myoff = otoff = None"
  - "Lib/datetime.py:1365:9  	myhhmm          	U   	myhhmm = self._hour * 60 +"
  - "Lib/datetime.py:1366:9  	othhmm          	U   	othhmm = other._hour * 60"
  - "Lib/datetime.py:1377:13 	tzoff           	U   	tzoff = t.utcoffset()"
  - "Lib/datetime.py:1530:9  	basestate       	U   	basestate = bytes([h, self._minute"
  - "Lib/datetime.py:1663:56 	datetimemodule's	U   	fold. See comments in _datetimemodule's"
  - "Lib/datetime.py:1727:9  	dstr            	U   	dstr = date_string[0:10]"
  - "Lib/datetime.py:1853:9  	localtm         	U   	localtm = _time.localtime(ts"
  - "Lib/datetime.py:1856:9  	gmtoff          	U   	gmtoff = localtm.tm_gmtoff"
  - "Lib/datetime.py:1869:13 	myoffset        	U   	myoffset = mytz.utcoffset(self"
  - "Lib/datetime.py:2177:5  	firstday        	U   	firstday = _ymd2ord(year, 1,"
  - "Lib/datetime.py:2199:21 	minoffset       	U   	if not cls._minoffset <= offset <= cls._maxoffset"
  - "Lib/datetime.py:2199:49 	maxoffset       	U   	minoffset <= offset <= cls._maxoffset:"
  - "Lib/datetime.py:2414:29 	endcase         	U   	spelling we wanted in the endcase described above. We"
  - "Lib/datetime.py:2480:53 	unspellable     	U   	behavior when mapping the \"unspellable\" UTC hour into"
  - "Lib/dbm/__init__.py:42:2    	defaultmod  	U   	_defaultmod = None"
  - "Lib/dbm/dumb.py:48:24   	filebasename	U   	def __init__(self, filebasename, mode, flag='c'):"
  - "Lib/dbm/dumb.py:57:15   	dirfile     	U   	self._dirfile = filebasename + '.dir"
  - "Lib/dbm/dumb.py:63:15   	datfile     	U   	self._datfile = filebasename + '.dat"
  - "Lib/dbm/dumb.py:64:15   	bakfile     	U   	self._bakfile = filebasename + '.bak"
  - "Lib/dbm/dumb.py:157:10  	addval      	U   	def _addval(self, val):"
  - "Lib/dbm/dumb.py:171:10  	setval      	U   	def _setval(self, pos, val):"
  - "Lib/dbm/dumb.py:205:13  	oldblocks   	U   	oldblocks = (siz + _BLOCKSIZE"
  - "Lib/dbm/dumb.py:206:13  	newblocks   	U   	newblocks = (len(val) + _BLOCKSIZE"
  - "Lib/decimal.py:8:11     	pydecimal   	U   	from _pydecimal import *"
  - "Lib/difflib.py:50:37    	Ratcliff    	U   	in the late 1980's by Ratcliff and Obershelp under"
  - "Lib/difflib.py:50:50    	Obershelp   	U   	0's by Ratcliff and Obershelp under the"
  - "Lib/difflib.py:61:45    	windiff     	U   	eyes. The Windows(tm) windiff has another interesting"
  - "Lib/difflib.py:107:58   	differencer 	U   	human-friendly file differencer, which"
  - "Lib/difflib.py:121:14   	isjunk      	U   	__init__(isjunk=None, a='', b='')"
  - "Lib/difflib.py:152:49   	autojunk    	U   	isjunk=None, a='', b='', autojunk=True):"
  - "Lib/difflib.py:185:11   	fullbcount  	U   	# fullbcount"
  - "Lib/difflib.py:205:68   	bjunk       	U   	this. Use \"in self.bjunk\"."
  - "Lib/difflib.py:208:11   	bpopular    	U   	# bpopular"
  - "Lib/difflib.py:209:16   	nonjunk     	U   	# nonjunk items in b treated as"
  - "Lib/difflib.py:220:33   	bcde        	U   	s.set_seqs(\"abcd\", \"bcde\")"
  - "Lib/difflib.py:303:15   	Roskind     	U   	# Jim Roskind, thank him again for"
  - "Lib/difflib.py:330:13   	ntest       	U   	ntest = n // 100 + 1"
  - "Lib/difflib.py:331:22   	idxs        	U   	for elt, idxs in b2j.items():"
  - "Lib/difflib.py:384:14   	acab        	U   	# acab"
  - "Lib/difflib.py:390:11   	Windiff     	U   	# Windiff ends up at the same"
  - "Lib/difflib.py:393:20   	isbjunk     	U   	a, b, b2j, isbjunk = self.a, self.b, self"
  - "Lib/difflib.py:394:9    	besti       	U   	besti, bestj, bestsize = alo"
  - "Lib/difflib.py:394:16   	bestj       	U   	besti, bestj, bestsize = alo, blo"
  - "Lib/difflib.py:394:23   	bestsize    	U   	besti, bestj, bestsize = alo, blo, 0"
  - "Lib/difflib.py:403:15   	lenget      	U   	j2lenget = j2len.get"
  - "Lib/difflib.py:404:13   	newj        	U   	newj2len = {}"
  - "Lib/difflib.py:461:40   	abxcd       	U   	SequenceMatcher(None, \"abxcd\", \"abcd\")"
  - "Lib/difflib.py:534:18   	qabxcd      	U   	>>> a = \"qabxcd\""
  - "Lib/difflib.py:535:18   	abycdf      	U   	>>> b = \"abycdf\""
  - "Lib/difflib.py:666:9    	availhas    	U   	availhas, matches = avail.__contains"
  - "Lib/difflib.py:763:59   	intraline   	U   	to guide the eye to intraline"
  - "Lib/difflib.py:836:14   	linejunk    	U   	__init__(linejunk=None, charjunk=None"
  - "Lib/difflib.py:836:29   	charjunk    	U   	init__(linejunk=None, charjunk=None)"
  - "Lib/difflib.py:873:63   	writeline   	U   	printed as-is via the writeline()"
  - "Lib/difflib.py:937:48   	Ghijkl      	U   	['abcdefGhijkl\\n'], 0, 1)"
  - "Lib/difflib.py:993:9    	aelt        	U   	aelt, belt = a[best_i], b"
  - "Lib/difflib.py:996:13   	atags       	U   	atags = btags = \"\""
  - "Lib/difflib.py:996:21   	btags       	U   	atags = btags = \"\""
  - "Lib/difflib.py:1012:30  	qformat     	U   	yield from self._qformat(aelt, belt, atags, btags"
  - "Lib/difflib.py:1032:31  	bline       	U   	qformat(self, aline, bline, atags, btags):"
  - "Lib/difflib.py:1065:11  	volatil     	U   	# that \"e volatil\" was inserted between"
  - "Lib/difflib.py:1128:37  	tofile      	U   	diff(a, b, fromfile='', tofile='', fromfiledate=''"
  - "Lib/difflib.py:1128:48  	fromfiledate	U   	fromfile='', tofile='', fromfiledate='',"
  - "Lib/difflib.py:1129:18  	tofiledate  	U   	tofiledate='', n=3, lineterm='"
  - "Lib/difflib.py:1129:38  	lineterm    	U   	tofiledate='', n=3, lineterm='\\n'):"
  - "Lib/difflib.py:1146:9   	unidiff     	U   	The unidiff format normally has"
  - "Lib/difflib.py:1174:13  	fromdate    	U   	fromdate = '\\t{}'.format(fromfiledate"
  - "Lib/difflib.py:1175:13  	todate      	U   	todate = '\\t{}'.format(tofiledate"
  - "Lib/difflib.py:1293:15  	oldfile     	U   	# --- b'oldfile.txt'"
  - "Lib/difflib.py:1294:15  	newfile     	U   	# +++ b'newfile.txt'"
  - "Lib/difflib.py:1306:16  	dfunc       	U   	def diff_bytes(dfunc, a, b, fromfile=b''"
  - "Lib/difflib.py:1311:50  	losslessly  	U   	context_diff(). Inputs are losslessly converted to"
  - "Lib/difflib.py:1373:6   	mdiff       	U   	def _mdiff(fromlines, tolines,"
  - "Lib/difflib.py:1373:12  	fromlines   	U   	def _mdiff(fromlines, tolines, context=None"
  - "Lib/difflib.py:1373:23  	tolines     	U   	def _mdiff(fromlines, tolines, context=None, linejunk"
  - "Lib/difflib.py:1428:17  	indice      	U   	side -- indice into the num_lines list"
  - "Lib/difflib.py:1675:10  	colgroup    	U   	<colgroup></colgroup> <colgroup"
  - "Lib/difflib.py:1693:34  	irst        	U   	<tr><td>(f)irst change</td> </tr>"
  - "Lib/difflib.py:1721:33  	wrapcolumn  	U   	init__(self,tabsize=8,wrapcolumn=None,linejunk=None,"
  - "Lib/difflib.py:1738:45  	fromdesc    	U   	fromlines, tolines, fromdesc='', todesc='',"
  - "Lib/difflib.py:1738:58  	todesc      	U   	tolines, fromdesc='', todesc='',"
  - "Lib/difflib.py:1739:34  	numlines    	U   	context=False, numlines=5, *, charset='utf-"
  - "Lib/difflib.py:1847:13  	fromdata    	U   	for fromdata,todata,flag in diffs"
  - "Lib/difflib.py:1847:22  	todata      	U   	for fromdata,todata,flag in diffs:"
  - "Lib/difflib.py:1852:14  	fromline    	U   	(fromline,fromtext),(toline,totext"
  - "Lib/difflib.py:1852:23  	fromtext    	U   	(fromline,fromtext),(toline,totext) = fromdata"
  - "Lib/difflib.py:1852:34  	toline      	U   	fromline,fromtext),(toline,totext) = fromdata,todata"
  - "Lib/difflib.py:1852:41  	totext      	U   	fromline,fromtext),(toline,totext) = fromdata,todata"
  - "Lib/difflib.py:1878:25  	flaglist    	U   	fromlist,tolist,flaglist = [],[],[]"
  - "Lib/difflib.py:1892:37  	linenum     	U   	line(self,side,flag,linenum,text):"
  - "Lib/difflib.py:1920:9   	fromprefix  	U   	fromprefix = \"from%d_\" % HtmlDiff"
  - "Lib/difflib.py:1921:9   	toprefix    	U   	toprefix = \"to%d_\" % HtmlDiff"
  - "Lib/difflib.py:2031:28  	thead       	U   	header_row = '<thead><tr>%s%s%s%s</tr></thead"
  - "Lib/distutils/_msvccompiler.py:10:20    	Stoll       	U   	# Written by Perry Stoll"
  - "Lib/distutils/_msvccompiler.py:13:46    	Heimes      	U   	VS 2008 by Christian Heimes"
  - "Lib/distutils/_msvccompiler.py:59:23    	findvs      	U   	import _distutils_findvs"
  - "Lib/distutils/_msvccompiler.py:68:10    	getall      	U   	def _getall():"
  - "Lib/distutils/_msvccompiler.py:93:5     	vcruntime   	U   	vcruntime = None"
  - "Lib/distutils/_msvccompiler.py:96:9     	vcredist    	U   	vcredist = os.path.join(best"
  - "Lib/distutils/_msvccompiler.py:96:56    	redist      	U   	best_dir, \"..\", \"..\", \"redist\", \"MSVC\", \"**\","
  - "Lib/distutils/_msvccompiler.py:114:5    	vcvarsall   	U   	vcvarsall = os.path.join(best"
  - "Lib/distutils/_msvccompiler.py:263:60   	libucrt     	U   	statically, then switch from libucrt[d].lib to ucrt[d].lib"
  - "Lib/distutils/_msvccompiler.py:263:78   	ucrt        	U   	from libucrt[d].lib to ucrt[d].lib"
  - "Lib/distutils/_msvccompiler.py:264:40   	ucrtbase    	U   	dynamically link to ucrtbase but not vcruntime."
  - "Lib/distutils/_msvccompiler.py:266:15   	nologo      	U   	'/nologo', '/Ox', '/W3', '/GL"
  - "Lib/distutils/_msvccompiler.py:274:9    	ldflags     	U   	ldflags = ["
  - "Lib/distutils/_msvccompiler.py:278:31   	nodefaultlib	U   	ldflags.extend(('/nodefaultlib:libucrt.lib', 'ucrt"
  - "Lib/distutils/_msvccompiler.py:342:23   	preargs     	U   	extra_preargs=None, extra_postargs"
  - "Lib/distutils/_msvccompiler.py:342:43   	postargs    	U   	preargs=None, extra_postargs=None, depends=None)"
  - "Lib/distutils/_msvccompiler.py:432:34   	libname     	U   	output_libname,"
  - "Lib/distutils/_msvccompiler.py:505:17   	implib      	U   	implib_file = os.path.join"
  - "Lib/distutils/_msvccompiler.py:569:17   	libfile     	U   	libfile = os.path.join(dir,"
  - "Lib/distutils/archive_util.py:22:21     	getpwnam    	U   	from pwd import getpwnam"
  - "Lib/distutils/archive_util.py:27:21     	getgrnam    	U   	from grp import getgrnam"
  - "Lib/distutils/archive_util.py:100:21    	gname       	U   	tarinfo.gname = group"
  - "Lib/distutils/archive_util.py:143:13    	zipoptions  	U   	zipoptions = \"-r\""
  - "Lib/distutils/archive_util.py:188:6     	gztar       	U   	'gztar': (make_tarball, [("
  - "Lib/distutils/archive_util.py:189:6     	bztar       	U   	'bztar': (make_tarball, [("
  - "Lib/distutils/archive_util.py:190:6     	xztar       	U   	'xztar': (make_tarball, [("
  - "Lib/distutils/archive_util.py:191:6     	ztar        	U   	'ztar': (make_tarball, ["
  - "Lib/distutils/bcppcompiler.py:3:10      	Borland 	U   	Contains BorlandCCompiler, an implementation"
  - "Lib/distutils/bcppcompiler.py:30:22     	bcpp    	U   	compiler_type = 'bcpp'"
  - "Lib/distutils/bcppcompiler.py:65:24     	ilink   	U   	self.linker = \"ilink32.exe\""
  - "Lib/distutils/bcppcompiler.py:66:21     	tlib    	U   	self.lib = \"tlib.exe\""
  - "Lib/distutils/bcppcompiler.py:113:35    	brcc    	U   	self.spawn ([\"brcc32\", \"-fo\", obj, src"
  - "Lib/distutils/bcppcompiler.py:260:22    	Arghghh 	U   	# them. Arghghh!. Apparently it works"
  - "Lib/distutils/bcppcompiler.py:319:13    	dlib    	U   	dlib = (lib + \"_d\")"
  - "Lib/distutils/ccompiler.py:45:60    	searchg         	U   	the include or library searchg"
  - "Lib/distutils/ccompiler.py:46:32    	Idir            	U   	path, ie. no \"cc -I -Idir1 -Idir2\" or \"cc -L"
  - "Lib/distutils/ccompiler.py:46:57    	Ldir            	U   	-Idir2\" or \"cc -L -Ldir1 -Ldir2\"."
  - "Lib/distutils/ccompiler.py:54:31    	lfoo            	U   	dirs, e.g. \"-Ldir1 -lfoo -Ldir2 -lfoo\" to link"
  - "Lib/distutils/ccompiler.py:55:33    	libfoo          	U   	different versions of libfoo.a in different locations"
  - "Lib/distutils/ccompiler.py:81:31    	objc            	U   	\".m\" : \"objc\","
  - "Lib/distutils/ccompiler.py:94:53    	undefinitions   	U   	macro definitions (or undefinitions). A"
  - "Lib/distutils/ccompiler.py:97:11    	undefinition    	U   	# undefinition is a 1-tuple (name,"
  - "Lib/distutils/ccompiler.py:129:11   	archiver        	U   	archiver static library"
  - "Lib/distutils/ccompiler.py:161:13   	defn            	U   	for defn in self.macros:"
  - "Lib/distutils/ccompiler.py:214:9    	undefn          	U   	undefn = (name,)"
  - "Lib/distutils/ccompiler.py:251:29   	libnames        	U   	set_libraries(self, libnames):"
  - "Lib/distutils/ccompiler.py:310:30   	outdir          	U   	setup_compile(self, outdir, macros, incdirs, sources"
  - "Lib/distutils/ccompiler.py:363:12   	Typecheck       	U   	\"\"\"Typecheck and fix-up some of the"
  - "Lib/distutils/ccompiler.py:395:25   	souce           	U   	\"\"\"Decide which souce files must be recompiled"
  - "Lib/distutils/ccompiler.py:484:13   	extlang         	U   	extlang = self.language_map"
  - "Lib/distutils/ccompiler.py:486:17   	extindex        	U   	extindex = self.language_order"
  - "Lib/distutils/ccompiler.py:534:62   	undefines       	U   	value. The 1-tuple case undefines a"
  - "Lib/distutils/ccompiler.py:548:35   	prepand         	U   	command-line arguments to prepand/append to the compiler"
  - "Lib/distutils/ccompiler.py:926:67   	Xish            	U   	like an ordinary UNIXish"
  - "Lib/distutils/ccompiler.py:1099:51  	lbar            	U   	have to say \"-lfoo -lbar -lfoo\" in order to"
  - "Lib/distutils/cmd.py:97:13      	myval       	U   	myval = getattr(self, \"_\""
  - "Lib/distutils/cmd.py:166:31     	d'etre      	U   	\"A command's raison d'etre: carry out the action"
  - "Lib/distutils/cmd.py:207:17     	stringlike  	U   	def _ensure_stringlike(self, option, what,"
  - "Lib/distutils/cmd.py:373:25     	infiles     	U   	def make_file(self, infiles, outfile, func, args"
  - "Lib/distutils/cmd.py:419:14     	outfiles    	U   	self.outfiles = []"
  - "Lib/distutils/command/__init__.py:22:19     	wininst 	U   	'bdist_wininst',"
  - "Lib/distutils/command/__init__.py:26:20     	sdux    	U   	#'bdist_sdux',"
  - "Lib/distutils/command/__init__.py:27:20     	pkgtool 	U   	#'bdist_pkgtool',"
  - "Lib/distutils/command/bdist_dumb.py:96:9    	pseudoinstall   	U   	pseudoinstall_root = os.path.join"
  - "Lib/distutils/command/bdist_dumb.py:101:58  	platbase        	U   	base != install.install_platbase)):"
  - "Lib/distutils/command/bdist_dumb.py:116:13  	pyversion       	U   	pyversion = get_python_version"
  - "Lib/distutils/command/bdist_msi.py:1:39     	Löwis           	U   	05, 2006 Martin von Löwis"
  - "Lib/distutils/command/bdist_msi.py:30:9     	bmwidth         	U   	bmwidth = 152*ruler/328"
  - "Lib/distutils/command/bdist_msi.py:38:20    	Verdana         	U   	# text, in VerdanaBold10"
  - "Lib/distutils/command/bdist_msi.py:75:9     	xbutton         	U   	def xbutton(self, name, title, next"
  - "Lib/distutils/command/bdist_msi.py:75:42    	xpos            	U   	name, title, next, xpos):"
  - "Lib/distutils/command/bdist_msi.py:109:46   	deinstallation  	U   	installation or before deinstallation\"),"
  - "Lib/distutils/command/bdist_msi.py:234:9    	sversion        	U   	sversion = \"%d.%d.%d\" % StrictVersion"
  - "Lib/distutils/command/bdist_msi.py:271:27   	distfiles       	U   	cab = msilib.CAB(\"distfiles\")"
  - "Lib/distutils/command/bdist_msi.py:272:9    	rootdir         	U   	rootdir = os.path.abspath(self"
  - "Lib/distutils/command/bdist_msi.py:300:21   	afile           	U   	afile = os.path.join(dir.absolute"
  - "Lib/distutils/command/bdist_msi.py:304:25   	newdir          	U   	newdir = Directory(db, cab"
  - "Lib/distutils/command/bdist_msi.py:347:25   	msidb           	U   	# type: msidbLocatorTypeRawValue"
  - "Lib/distutils/command/bdist_msi.py:392:13   	scriptfn        	U   	scriptfn = os.path.join(self"
  - "Lib/distutils/command/bdist_msi.py:392:54   	preinstall      	U   	join(self.bdist_dir, \"preinstall.bat\")"
  - "Lib/distutils/command/bdist_msi.py:424:9    	modeless        	U   	modeless = 1 # visible"
  - "Lib/distutils/command/bdist_msi.py:442:33   	Tahoma          	U   	[(\"DlgFont8\", \"Tahoma\", 9, None, 0),"
  - "Lib/distutils/command/bdist_msi.py:501:9    	inuse           	U   	inuse = PyDialog(db, \"FilesInUse"
  - "Lib/distutils/command/bdist_msi.py:503:51   	Modeless        	U   	# KeepModeless|Modal|Visible"
  - "Lib/distutils/command/bdist_msi.py:578:9    	seldlg          	U   	seldlg = PyDialog(db, \"SelectFeature"
  - "Lib/distutils/command/bdist_msi.py:650:9    	whichusers      	U   	whichusers = PyDialog(db, \"WhichUsersDlg"
  - "Lib/distutils/command/bdist_msi.py:653:43   	allusers        	U   	group with two options: allusers, justme"
  - "Lib/distutils/command/bdist_msi.py:653:53   	justme          	U   	two options: allusers, justme"
  - "Lib/distutils/command/bdist_msi.py:695:9    	maint           	U   	maint = PyDialog(db, \"MaintenanceTy"
  - "Lib/distutils/command/bdist_rpm.py:79:14    	autoreq     	U   	('no-autoreq', None,"
  - "Lib/distutils/command/bdist_rpm.py:313:37   	rpmbuild    	U   	path.exists('/usr/bin/rpmbuild') or \\"
  - "Lib/distutils/command/bdist_rpm.py:326:32   	topdir      	U   	'_topdir %s' % os.path.abspath"
  - "Lib/distutils/command/bdist_rpm.py:341:43   	specfile    	U   	-q --qf '%s %s\\n' --specfile '%s'\" % ("
  - "Lib/distutils/command/bdist_rpm.py:346:20   	rpms        	U   	binary_rpms = []"
  - "Lib/distutils/command/bdist_rpm.py:375:17   	srpm        	U   	srpm = os.path.join(rpm_dir"
  - "Lib/distutils/command/bdist_rpm.py:403:22   	unmangled   	U   	'%define unmangled_version ' + self.distribution"
  - "Lib/distutils/command/bdist_rpm.py:414:36   	bytecompile 	U   	invocation of brp-python-bytecompile passes in __python)"
  - "Lib/distutils/command/bdist_rpm.py:447:28   	tmppath     	U   	'BuildRoot: %{_tmppath}/%{name}-%{version}"
  - "Lib/distutils/command/bdist_rpm.py:447:67   	buildroot   	U   	version}-%{release}-buildroot',"
  - "Lib/distutils/command/bdist_rpm.py:451:15   	noarch      	U   	# noarch if no extension modules"
  - "Lib/distutils/command/bdist_rpm.py:524:15   	verifyscript	U   	('verifyscript', 'verify_script', None"
  - "Lib/distutils/command/bdist_rpm.py:527:15   	preun       	U   	('preun', 'pre_uninstall', None"
  - "Lib/distutils/command/bdist_rpm.py:528:15   	postun      	U   	('postun', 'post_uninstall',"
  - "Lib/distutils/command/bdist_rpm.py:549:15   	defattr     	U   	'%defattr(-,root,root)',"
  - "Lib/distutils/command/bdist_wininst.py:152:22   	purelib     	U   	for key in ('purelib', 'platlib', 'headers"
  - "Lib/distutils/command/bdist_wininst.py:152:33   	platlib     	U   	key in ('purelib', 'platlib', 'headers', 'scripts"
  - "Lib/distutils/command/bdist_wininst.py:176:9    	arcname     	U   	arcname = self.make_archive"
  - "Lib/distutils/command/bdist_wininst.py:193:13   	inidata     	U   	def get_inidata(self):"
  - "Lib/distutils/command/bdist_wininst.py:244:9    	cfgdata     	U   	cfgdata = self.get_inidata("
  - "Lib/distutils/command/bdist_wininst.py:250:13   	bitmapdata  	U   	bitmapdata = open(bitmap, \"rb\""
  - "Lib/distutils/command/bdist_wininst.py:251:13   	bitmaplen   	U   	bitmaplen = len(bitmapdata)"
  - "Lib/distutils/command/bdist_wininst.py:349:51   	borland     	U   	XXX What about mingw, borland, and so on?"
  - "Lib/distutils/command/bdist_wininst.py:355:13   	sfix        	U   	sfix = self.plat_name[3:"
  - "Lib/distutils/command/bdist.py:71:48    	xz'ed   	U   	xztar': ('bdist_dumb', \"xz'ed tar file\"),"
  - "Lib/distutils/command/build_clib.py:33:17   	clib	U   	('build-clib=', 'b',"
  - "Lib/distutils/command/build_clib.py:98:11   	Yech	U   	# Yech -- this is cut 'n pasted"
  - "Lib/distutils/command/build_ext.py:77:11    	rpath       	U   	('rpath=', 'R',"
  - "Lib/distutils/command/build_ext.py:148:65   	pyconfig    	U   	directories (for Python.h, pyconfig.h,"
  - "Lib/distutils/command/build_ext.py:218:43   	Athe        	U   	extensions under Cygwin and AtheOS Python's library directory"
  - "Lib/distutils/command/build_ext.py:220:65   	atheos      	U   	sys.platform[:6] == 'atheos':"
  - "Lib/distutils/command/build_ext.py:602:27   	commandline 	U   	# Do not override commandline arguments"
  - "Lib/distutils/command/build_ext.py:645:9    	modpath     	U   	modpath = fullname.split('."
  - "Lib/distutils/command/build_ext.py:690:9    	initfunc    	U   	initfunc_name = \"PyInit_\" + ext"
  - "Lib/distutils/command/build_ext.py:711:17   	pythonlib   	U   	pythonlib = (template %"
  - "Lib/distutils/command/build_ext.py:712:29   	hexversion  	U   	(sys.hexversion >> 24, (sys.hexversion"
  - "Lib/distutils/command/build_py.py:114:36    	globbed 	U   	Strip directory from globbed filenames"
  - "Lib/distutils/command/build_py.py:136:9     	lastdir 	U   	lastdir = None"
  - "Lib/distutils/command/build_py.py:159:21    	pdir    	U   	pdir = self.package_dir["
  - "Lib/distutils/command/build_scripts.py:129:49   	outf    	U   	open(outfile, \"wb\") as outf:"
  - "Lib/distutils/command/build_scripts.py:145:21   	oldmode 	U   	oldmode = os.stat(file)[ST_MODE"
  - "Lib/distutils/command/build_scripts.py:146:21   	newmode 	U   	newmode = (oldmode | 0o555)"
  - "Lib/distutils/command/build.py:86:60    	pydebug 	U   	Python 2.x with --with-pydebug don't"
  - "Lib/distutils/command/clean.py:5:26     	Kleineidam  	U   	contributed by Bastian Kleineidam <calvin@cs.uni-sb.de"
  - "Lib/distutils/command/command_template:1:4      	distutils   	U   	\"\"\"distutils.command.x"
  - "Lib/distutils/command/command_template:3:16     	Distutils   	U   	Implements the Distutils 'x' command."
  - "Lib/distutils/command/config.py:108:22  	configtest  	U   	filename = \"_configtest\" + LANG_EXT[lang]"
  - "Lib/distutils/command/config.py:197:9   	preprocesses	U   	preprocesses an empty file -- which"
  - "Lib/distutils/command/install_lib.py:59:14      	multiarch   	U   	self.multiarch = None # if we should"
  - "Lib/distutils/command/install.py:34:59      	abiflags    	U   	python$py_version_short$abiflags/$dist_name',"
  - "Lib/distutils/command/install.py:67:22      	userbase    	U   	'headers': '$userbase/Python$py_version_nodot"
  - "Lib/distutils/command/install.py:67:49      	nodot       	U   	userbase/Python$py_version_nodot/Include/$dist_name'"
  - "Lib/distutils/command/install.py:206:41     	packagized  	U   	are for putting non-packagized distributions into their"
  - "Lib/distutils/command/install.py:381:22     	libbase     	U   	self.install_libbase = self.install_lib"
  - "Lib/distutils/command/install.py:508:13     	attrname    	U   	attrname = 'install_' + key"
  - "Lib/distutils/command/register.py:71:29     	pypirc  	U   	config = self._read_pypirc()"
  - "Lib/distutils/command/register.py:117:27    	sekrit  	U   	password: sekrit"
  - "Lib/distutils/command/register.py:272:65    	lurve   	U   	write an extra newline (lurve Macs)"
  - "Lib/distutils/command/sdist.py:320:51   	darcs   	U   	svn, .hg, .git, .bzr, _darcs directories"
  - "Lib/distutils/command/sdist.py:335:13   	ptrn    	U   	vcs_ptrn = r'(^|%s)(%s)(%s)."
  - "Lib/distutils/core.py:21:13     	barebones   	U   	# This is a barebones help message generated"
  - "Lib/distutils/core.py:42:20     	distclass   	U   	setup_keywords = ('distclass', 'script_name', 'script"
  - "Lib/distutils/core.py:68:49     	cmdclass    	U   	setup' (except for 'cmdclass') are used to set"
  - "Lib/distutils/cygwinccompiler.py:16:15      	dlltool     	U   	# dlltool --dllname python15.dll"
  - "Lib/distutils/cygwinccompiler.py:16:25      	dllname     	U   	dlltool --dllname python15.dll --def python"
  - "Lib/distutils/cygwinccompiler.py:17:38      	libpython   	U   	--output-lib libpython15.a"
  - "Lib/distutils/cygwinccompiler.py:28:33      	dllwrap     	U   	gcc 2.91.57/ld 2.9.4/dllwrap 0.2.4 works"
  - "Lib/distutils/cygwinccompiler.py:34:51      	binutils    	U   	work, there is a bug in binutils 2.10.90"
  - "Lib/distutils/cygwinccompiler.py:36:18      	mdll        	U   	# - using gcc -mdll instead dllwrap doesn"
  - "Lib/distutils/cygwinccompiler.py:72:22      	msvcr       	U   	return ['msvcr70']"
  - "Lib/distutils/cygwinccompiler.py:123:17     	dllwraps    	U   	# Older dllwraps had own version numbers"
  - "Lib/distutils/cygwinccompiler.py:140:45     	mcygwin     	U   	executables(compiler='gcc -mcygwin -O -Wall',"
  - "Lib/distutils/cygwinccompiler.py:160:52     	windres     	U   	by spawning GCC and windres if needed.\"\"\""
  - "Lib/distutils/cygwinccompiler.py:238:13     	unstripped  	U   	# unstripped_file = stripped_file"
  - "Lib/distutils/cygwinccompiler.py:309:40     	mthreads    	U   	should also append -mthreads, but then the finished"
  - "Lib/distutils/cygwinccompiler.py:310:34     	mingwm      	U   	dlls need another dll (mingwm10.dll see Mingw32 docs"
  - "Lib/distutils/cygwinccompiler.py:399:23     	dumpversion 	U   	commands = ['gcc -dumpversion', 'ld -v', 'dllwrap"
  - "Lib/distutils/cygwinccompiler.py:404:41     	dumpmachine 	U   	check_output(['gcc', '-dumpmachine'])"
  - "Lib/distutils/dir_util.py:181:12    	cmdtuple    	U   	def _build_cmdtuple(path, cmdtuples):"
  - "Lib/distutils/dir_util.py:181:27    	cmdtuples   	U   	build_cmdtuple(path, cmdtuples):"
  - "Lib/distutils/dist.py:58:21     	pydistutils     	U   	'ignore pydistutils.cfg in your home directory"
  - "Lib/distutils/dist.py:96:11     	licence         	U   	('licence', None,"
  - "Lib/distutils/dist.py:184:53    	metainfo        	U   	Python versions; use the metainfo for that"
  - "Lib/distutils/dist.py:812:13    	pkgname         	U   	for pkgname in self.get_command"
  - "Lib/distutils/dist.py:906:12    	Reinitializes   	U   	\"\"\"Reinitializes a command to the state"
  - "Lib/distutils/dist.py:916:44    	reinitializes   	U   	subcommands' is true, also reinitializes the command's"
  - "Lib/distutils/extension.py:22:49    	unportable  	U   	hooks that let you be as unportable as you need)."
  - "Lib/distutils/extension.py:153:43   	cpparg      	U   	<sourcefile> ...] [<cpparg> ...] [<library> .."
  - "Lib/distutils/extension.py:175:15   	makesetup   	U   	# makesetup script: here, there"
  - "Lib/distutils/extension.py:219:32   	Xlinker     	U   	elif word == \"-Xlinker\":"
  - "Lib/distutils/extension.py:221:32   	Xcompiler   	U   	elif word == \"-Xcompiler\":"
  - "Lib/distutils/extension.py:231:50   	Hmmmm       	U   	append it to sources. Hmmmm."
  - "Lib/distutils/fancy_getopt.py:304:34    	foonabulation   	U   	-foo controls foonabulation"
  - "Lib/distutils/fancy_getopt.py:306:33    	flim            	U   	--flimflam set the flim-flam level"
  - "Lib/distutils/fancy_getopt.py:373:18    	wschar          	U   	WS_TRANS = {ord(_wschar) : ' ' for _wschar in"
  - "Lib/distutils/file_util.py:25:5     	fsrc        	U   	fsrc = None"
  - "Lib/distutils/file_util.py:26:5     	fdst        	U   	fdst = None"
  - "Lib/distutils/file_util.py:83:30    	hardlink    	U   	linking is available. If hardlink fails, falls back to"
  - "Lib/distutils/file_util.py:86:57    	macostools  	U   	file copy function in macostools; on"
  - "Lib/distutils/file_util.py:155:30   	Ascher      	U   	According to David Ascher <da@ski.org>, utime"
  - "Lib/distutils/filelist.py:21:10     	allfiles    	U   	'allfiles' not supplied to constructor"
  - "Lib/distutils/filelist.py:252:48    	followlinks 	U   	files in os.walk(path, followlinks=True)"
  - "Lib/distutils/msvc9compiler.py:127:14   	vsbase              	U   	self.vsbase = VS_BASE % version"
  - "Lib/distutils/msvc9compiler.py:134:69   	productdir          	U   	vsbase + r\"\\Setup\\VC\", \"productdir\")"
  - "Lib/distutils/msvc9compiler.py:136:51   	installroot         	U   	FrameworkDir\", NET_BASE, \"installroot\")"
  - "Lib/distutils/msvc9compiler.py:140:33   	sdkinstallrootv     	U   	\"sdkinstallrootv2.0\")"
  - "Lib/distutils/msvc9compiler.py:152:59   	currentinstallfolder	U   	WindowsSdkDir\", WINSDK_BASE, \"currentinstallfolder\")"
  - "Lib/distutils/msvc9compiler.py:203:15   	nnorwitz            	U   	# XXX(nnorwitz): O(n**2), if reduced"
  - "Lib/distutils/msvc9compiler.py:234:9    	toolskey            	U   	toolskey = \"VS%0.f0COMNTOOLS"
  - "Lib/distutils/msvc9compiler.py:234:28   	COMNTOOLS           	U   	toolskey = \"VS%0.f0COMNTOOLS\" % version"
  - "Lib/distutils/msvc9compiler.py:235:9    	toolsdir            	U   	toolsdir = os.environ.get(toolskey"
  - "Lib/distutils/msvc9compiler.py:258:43   	libpath             	U   	(\"include\", \"lib\", \"libpath\", \"path\"))"
  - "Lib/distutils/msvc9compiler.py:361:24   	vcvars              	U   	# On x86, 'vcvars32.bat amd64' creates"
  - "Lib/distutils/msvc9compiler.py:651:13   	mfinfo              	U   	mfinfo = self.manifest_get"
  - "Lib/distutils/msvc9compiler.py:653:17   	mffilename          	U   	mffilename, mfid = mfinfo"
  - "Lib/distutils/msvc9compiler.py:653:29   	mfid                	U   	mffilename, mfid = mfinfo"
  - "Lib/distutils/msvc9compiler.py:654:29   	outputresource      	U   	out_arg = '-outputresource:%s;%s' % (output_filename"
  - "Lib/distutils/msvc9compiler.py:704:15   	runtimes            	U   	# runtimes are not in WinSxS folder"
  - "Lib/distutils/msvc9compiler.py:706:21   	pyd's               	U   	# with .pyd's."
  - "Lib/distutils/msvccompiler.py:124:57    	sdkinstallroot  	U   	FrameworkSDKDir\", net, \"sdkinstallroot\")"
  - "Lib/distutils/msvccompiler.py:240:52    	Devstudio       	U   	r\"Software\\Microsoft\\Devstudio\""
  - "Lib/distutils/msvccompiler.py:588:26    	devstudio       	U   	\"\"\"Get a list of devstudio directories (include"
  - "Lib/distutils/spawn.py:69:21    	spawnv  	U   	rc = os.spawnv(os.P_WAIT, executable"
  - "Lib/distutils/spawn.py:93:47    	execv   	U   	and os.execvp or os.execv"
  - "Lib/distutils/spawn.py:114:56   	execve  	U   	and os.execvpe or os.execve"
  - "Lib/distutils/sysconfig.py:51:14    	pcbuild         	U   	def _fix_pcbuild(d):"
  - "Lib/distutils/sysconfig.py:81:21    	patchlevel      	U   	leaving off the patchlevel. Sample return values"
  - "Lib/distutils/sysconfig.py:105:25   	srcdir          	U   	# must use \"srcdir\" from the makefile to"
  - "Lib/distutils/sysconfig.py:110:17   	incdir          	U   	incdir = os.path.join(get_config"
  - "Lib/distutils/sysconfig.py:151:13   	libdir          	U   	libdir = sys.platlibdir"
  - "Lib/distutils/sysconfig.py:151:26   	platlibdir      	U   	libdir = sys.platlibdir"
  - "Lib/distutils/sysconfig.py:178:19   	Unices          	U   	varies across Unices and is stored in Python"
  - "Lib/distutils/sysconfig.py:197:27   	ccshared        	U   	(cc, cxx, cflags, ccshared, ldshared, shlib_suffix"
  - "Lib/distutils/sysconfig.py:197:37   	ldshared        	U   	cxx, cflags, ccshared, ldshared, shlib_suffix, ar, ar"
  - "Lib/distutils/sysconfig.py:197:47   	shlib           	U   	ccshared, ldshared, shlib_suffix, ar, ar_flags"
  - "Lib/distutils/sysconfig.py:202:13   	newcc           	U   	newcc = os.environ['CC']"
  - "Lib/distutils/sysconfig.py:300:3    	Regexes         	U   	# Regexes needed for parsing Makefile"
  - "Lib/distutils/sysconfig.py:303:2    	findvar         	U   	_findvar1_rx = re.compile(r\""
  - "Lib/distutils/sysconfig.py:319:5    	notdone         	U   	notdone = {}"
  - "Lib/distutils/sysconfig.py:330:13   	tmpv            	U   	tmpv = v.replace('$$', '"
  - "Lib/distutils/sysconfig.py:441:8    	sysconfigdata   	U   	# _sysconfigdata is generated at build"
  - "Lib/distutils/text_file.py:106:12   	linebuf 	U   	# 'linebuf' is a stack of lines"
  - "Lib/distutils/text_file.py:128:9    	outmsg  	U   	outmsg = []"
  - "Lib/distutils/unixccompiler.py:5:26     	Dname       	U   	macros defined with -Dname[=value]"
  - "Lib/distutils/unixccompiler.py:8:31     	lllib       	U   	libraries specified with -lllib"
  - "Lib/distutils/unixccompiler.py:12:65    	ranlib      	U   	command (possibly with 'ranlib')"
  - "Lib/distutils/unixccompiler.py:32:42    	GNUC        	U   	bunch of subclasses GNUCCompiler, SGICCompiler"
  - "Lib/distutils/unixccompiler.py:32:56    	SGIC        	U   	subclasses GNUCCompiler, SGICCompiler,"
  - "Lib/distutils/unixccompiler.py:158:60   	explicitely 	U   	paths, which are not explicitely needed"
  - "Lib/distutils/unixccompiler.py:160:16   	libdirs     	U   	system_libdirs = ['/lib', '/lib64'"
  - "Lib/distutils/unixccompiler.py:226:51   	atid        	U   	45902&group_id=5470&atid=105470"
  - "Lib/distutils/unixccompiler.py:247:35   	irix        	U   	sys.platform[:7] == \"irix646\" or sys.platform"
  - "Lib/distutils/unixccompiler.py:258:46   	dtags       	U   	return \"-Wl,--enable-new-dtags,-R\" + dir"
  - "Lib/distutils/unixccompiler.py:292:29   	libedit     	U   	# usr/lib/libedit.tbd"
  - "Lib/distutils/util.py:80:25     	sunos           	U   	elif osname[:5] == \"sunos\":"
  - "Lib/distutils/util.py:87:13     	bitness         	U   	bitness = {2147483647:\"32bit"
  - "Lib/distutils/util.py:354:46    	posixsubprocess 	U   	a bootstrap issue: _posixsubprocess is built by"
  - "Lib/distutils/util.py:421:32    	optim           	U   	cmd.extend(subprocess._optim_args_from_interpreter"
  - "Lib/distutils/util.py:532:9     	outname         	U   	outname = os.path.join(dest"
  - "Lib/distutils/version.py:38:25      	vstring     	U   	def __init__ (self, vstring=None):"
  - "Lib/distutils/version.py:95:35      	retentives  	U   	Version numbering for anal retentives and software idealists"
  - "Lib/distutils/versionpredicate.py:34:31     	pyepat  	U   	= VersionPredicate('pyepat.abc (>1.0, <3333.3a"
  - "Lib/distutils/versionpredicate.py:149:26    	mypkg   	U   	>> split_provision('mypkg')"
  - "Lib/doctest.py:41:42    	doctests    	U   	of other ways to run doctests, including integration"
  - "Lib/doctest.py:48:3     	docformat   	U   	__docformat__ = 'reStructuredText"
  - "Lib/doctest.py:253:5    	excout      	U   	excout = StringIO()"
  - "Lib/doctest.py:367:44   	nosigint    	U   	_(self, stdout=out, nosigint=True)"
  - "Lib/doctest.py:473:25   	optionflags 	U   	DocTestRunner's optionflags). By default, no options"
  - "Lib/doctest.py:624:57   	alphanum    	U   	a line *starts* with alphanum."
  - "Lib/doctest.py:646:9    	charno      	U   	charno, lineno = 0, 0"
  - "Lib/doctest.py:822:15   	Doctests    	U   	objects. Doctests can currently be extracted"
  - "Lib/doctest.py:849:61   	extraglobs  	U   	module=None, globs=None, extraglobs=None):"
  - "Lib/doctest.py:963:35   	objclass    	U   	if hasattr(object, '__objclass__'):"
  - "Lib/doctest.py:1010:17  	valname     	U   	for valname, val in obj.__dict_"
  - "Lib/doctest.py:1235:15  	fakeout     	U   	self._fakeout = _SpoofOut()"
  - "Lib/doctest.py:1296:27  	compileflags	U   	def __run(self, test, compileflags, out):"
  - "Lib/doctest.py:1318:13  	examplenum  	U   	for examplenum, example in enumerate"
  - "Lib/doctest.py:1328:22  	optionflag  	U   	for (optionflag, val) in example.options"
  - "Lib/doctest.py:1528:9   	notests     	U   	notests = []"
  - "Lib/doctest.py:1531:9   	totalt      	U   	totalt = totalf = 0"
  - "Lib/doctest.py:1531:18  	totalf      	U   	totalt = totalf = 0"
  - "Lib/doctest.py:1577:45  	buildbots   	U   	so breaks some of the buildbots"
  - "Lib/doctest.py:2135:11  	reportflags 	U   	_unittest_reportflags = 0"
  - "Lib/doctest.py:2630:5   	testsrc     	U   	testsrc = script_from_examples"
  - "Lib/doctest.py:2785:5   	testfiles   	U   	testfiles = args.file"
  - "Lib/email/__init__.py:30:34     	cascadingly 	U   	importing email since those cascadingly import most of the rest"
  - "Lib/email/_encoded_words.py:8:6     	ecoded  	U   	# An ecoded word looks like this"
  - "Lib/email/_encoded_words.py:64:9    	subber  	U   	_q_byte_subber = functools.partial"
  - "Lib/email/_encoded_words.py:89:14   	bstring 	U   	def encode_q(bstring):"
  - "Lib/email/_encoded_words.py:155:56  	FDFF    	U   	unknown' character \\\\uFDFF."
  - "Lib/email/_encoded_words.py:214:9   	qlen    	U   	qlen = _cte_encode_length"
  - "Lib/email/_encoded_words.py:215:9   	blen    	U   	blen = _cte_encode_length"
  - "Lib/email/_header_value_parser.py:4:64      	followon    	U   	RFC 5322, which is the followon"
  - "Lib/email/_header_value_parser.py:13:40     	Postel's    	U   	following the spirit of Postel's Law, which RFC 5322"
  - "Lib/email/_header_value_parser.py:63:19     	ptext       	U   	may be produced: 'ptext'. A 'ptext' is a string"
  - "Lib/email/_header_value_parser.py:64:38     	ctext       	U   	in place of lists of (ctext/quoted-pair) and"
  - "Lib/email/_header_value_parser.py:65:2      	qtext       	U   	(qtext/quoted-pair)."
  - "Lib/email/_header_value_parser.py:108:14    	lastlen     	U   	self.lastlen = 0"
  - "Lib/email/_header_value_parser.py:109:14    	stickyspace 	U   	self.stickyspace = None"
  - "Lib/email/_header_value_parser.py:127:22    	stoken      	U   	def append(self, stoken):"
  - "Lib/email/_header_value_parser.py:275:36    	cfws        	U   	self[-1].token_type == 'cfws':"
  - "Lib/email/_header_value_parser.py:326:13    	tlen        	U   	tlen = len(tstr)"
  - "Lib/email/_header_value_parser.py:360:9     	ppstr       	U   	def ppstr(self, indent=''):"
  - "Lib/email/_header_value_parser.py:415:21    	oldlastlen  	U   	oldlastlen = sum(len(x) for x in"
  - "Lib/email/_header_value_parser.py:416:21    	schunk      	U   	schunk = str(chunk)"
  - "Lib/email/_header_value_parser.py:417:21    	lchunk      	U   	lchunk = len(schunk)"
  - "Lib/email/_header_value_parser.py:453:13    	spart       	U   	spart = str(part)"
  - "Lib/email/_header_value_parser.py:568:7     	CFWS        	U   	class CFWSList(WhiteSpaceTokenList"
  - "Lib/email/_header_value_parser.py:908:9     	nameset     	U   	nameset = set(self.local_part"
  - "Lib/email/_header_value_parser.py:1059:43   	attrtext    	U   	token_type.endswith('attrtext'):"
  - "Lib/email/_header_value_parser.py:1369:15   	xtext       	U   	def _validate_xtext(xtext):"
  - "Lib/email/_header_value_parser.py:1370:42   	printables  	U   	token contains ASCII non-printables, register a defect."
  - "Lib/email/_header_value_parser.py:1379:19   	endchars    	U   	def _get_ptext_to_endchars(value, endchars):"
  - "Lib/email/_header_value_parser.py:1382:34   	qcontent    	U   	function turns a run of qcontent, ccontent-without-comments"
  - "Lib/email/_header_value_parser.py:1382:44   	ccontent    	U   	turns a run of qcontent, ccontent-without-comments, or"
  - "Lib/email/_header_value_parser.py:1383:5    	dtext       	U   	dtext-with-quoted-printables"
  - "Lib/email/_header_value_parser.py:1389:5    	vchars      	U   	vchars = []"
  - "Lib/email/_header_value_parser.py:1433:5    	remstr      	U   	remstr = ''.join(remainder"
  - "Lib/email/_header_value_parser.py:1457:9    	vtext       	U   	vtext = ValueTerminal(chars"
  - "Lib/email/_header_value_parser.py:1464:32   	vchar       	U   	unstructured = (*([FWS] vchar) *WSP) / obs-unstruct"
  - "Lib/email/_header_value_parser.py:1464:51   	unstruct    	U   	vchar) *WSP) / obs-unstruct"
  - "Lib/email/_header_value_parser.py:1465:40   	utext       	U   	unstruct = *((*LF *CR *(obs-utext) *LF *CR)) / FWS)"
  - "Lib/email/_header_value_parser.py:1551:9    	atext       	U   	def get_atext(value):"
  - "Lib/email/_header_value_parser.py:2471:9    	ttext       	U   	def get_ttext(value):"
  - "Lib/email/_header_value_parser.py:2493:69   	ctls        	U   	chars except space, ctls, or"
  - "Lib/email/_header_value_parser.py:2499:5    	mtoken      	U   	mtoken = Token()"
  - "Lib/email/_header_value_parser.py:2687:5    	appendto    	U   	appendto = param"
  - "Lib/email/_header_value_parser.py:2692:9    	qstring     	U   	qstring, remainder = get_quoted"
  - "Lib/email/_header_value_parser.py:2794:53   	reminaing   	U   	because it consumes the reminaing value, but it"
  - "Lib/email/_header_value_parser.py:2838:27   	tokenlist   	U   	find_mime_parameters(tokenlist, value):"
  - "Lib/email/_header_value_parser.py:2857:22   	substype    	U   	The maintype and substype are tokens. Theoretically"
  - "Lib/email/_header_value_parser.py:2876:7    	mantype     	U   	# mantype and subtype specialized"
  - "Lib/email/_header_value_parser.py:2902:45   	postel      	U   	Perhaps we should postel this, but we should"
  - "Lib/email/_parseaddr.py:11:6    	parsedate       	U   	'parsedate',"
  - "Lib/email/_parseaddr.py:23:2    	monthnames      	U   	_monthnames = ['jan', 'feb', 'mar"
  - "Lib/email/_parseaddr.py:28:2    	daynames        	U   	_daynames = ['mon', 'tue', 'wed"
  - "Lib/email/_parseaddr.py:73:21   	dayname         	U   	# There's a dayname here. Skip it"
  - "Lib/email/_parseaddr.py:151:5   	tzoffset        	U   	tzoffset = None"
  - "Lib/email/_parseaddr.py:203:7   	Addrlist        	U   	class AddrlistClass:"
  - "Lib/email/_parseaddr.py:204:36  	Escoto          	U   	parser class by Ben Escoto."
  - "Lib/email/_parseaddr.py:224:14  	atomends        	U   	self.atomends = self.specials + self"
  - "Lib/email/_parseaddr.py:228:14  	phraseends      	U   	self.phraseends = self.atomends.replace"
  - "Lib/email/_parseaddr.py:230:14  	commentlist     	U   	self.commentlist = []"
  - "Lib/email/_parseaddr.py:232:9   	gotonext        	U   	def gotonext(self):"
  - "Lib/email/_parseaddr.py:234:9   	wslist          	U   	wslist = []"
  - "Lib/email/_parseaddr.py:241:46  	getcomment      	U   	commentlist.append(self.getcomment())"
  - "Lib/email/_parseaddr.py:246:9   	getaddrlist     	U   	def getaddrlist(self):"
  - "Lib/email/_parseaddr.py:253:23  	getaddress      	U   	ad = self.getaddress()"
  - "Lib/email/_parseaddr.py:265:9   	oldpos          	U   	oldpos = self.pos"
  - "Lib/email/_parseaddr.py:266:9   	oldcl           	U   	oldcl = self.commentlist"
  - "Lib/email/_parseaddr.py:267:22  	getphraselist   	U   	plist = self.getphraselist()"
  - "Lib/email/_parseaddr.py:270:9   	returnlist      	U   	returnlist = []"
  - "Lib/email/_parseaddr.py:278:40  	addrspec        	U   	email address is just an addrspec"
  - "Lib/email/_parseaddr.py:282:29  	getaddrspec     	U   	addrspec = self.getaddrspec()"
  - "Lib/email/_parseaddr.py:289:13  	fieldlen        	U   	fieldlen = len(self.field)"
  - "Lib/email/_parseaddr.py:300:13  	routeaddr       	U   	routeaddr = self.getrouteaddr"
  - "Lib/email/_parseaddr.py:300:30  	getrouteaddr    	U   	routeaddr = self.getrouteaddr()"
  - "Lib/email/_parseaddr.py:327:9   	expectroute     	U   	expectroute = False"
  - "Lib/email/_parseaddr.py:330:9   	adlist          	U   	adlist = ''"
  - "Lib/email/_parseaddr.py:333:22  	getdomain       	U   	self.getdomain()"
  - "Lib/email/_parseaddr.py:353:9   	aslist          	U   	aslist = []"
  - "Lib/email/_parseaddr.py:365:51  	getquote        	U   	'\"%s\"' % quote(self.getquote()))"
  - "Lib/email/_parseaddr.py:371:36  	getatom         	U   	aslist.append(self.getatom())"
  - "Lib/email/_parseaddr.py:386:9   	sdlist          	U   	sdlist = []"
  - "Lib/email/_parseaddr.py:393:36  	getdomainliteral	U   	sdlist.append(self.getdomainliteral())"
  - "Lib/email/_parseaddr.py:403:9   	getdelimited    	U   	def getdelimited(self, beginchar, endchars"
  - "Lib/email/_parseaddr.py:403:28  	beginchar       	U   	def getdelimited(self, beginchar, endchars, allowcomments"
  - "Lib/email/_parseaddr.py:403:49  	allowcomments   	U   	beginchar, endchars, allowcomments=True):"
  - "Lib/email/_parseaddr.py:419:9   	slist           	U   	slist = ['']"
  - "Lib/email/_parseaddr.py:459:9   	atomlist        	U   	atomlist = ['']"
  - "Lib/email/_parseaddr.py:476:47  	canonicalized   	U   	strings. Phrases are canonicalized by squeezing all"
  - "Lib/email/_parseaddr.py:500:18  	addresslist     	U   	self.addresslist = self.getaddrlist("
  - "Lib/email/_parseaddr.py:509:9   	newaddr         	U   	newaddr = AddressList(None)"
  - "Lib/email/_policybase.py:67:9       	newpolicy       	U   	newpolicy = self.__class__.__new"
  - "Lib/email/_policybase.py:221:35     	sourcelines     	U   	header_source_parse(self, sourcelines):"
  - "Lib/email/_policybase.py:226:9      	surrogateescaped	U   	surrogateescaped binary data."
  - "Lib/email/_policybase.py:353:48     	multibyte       	U   	ascii split, but if it's multibyte then we could break"
  - "Lib/email/architecture.rst:69:13    	lifecyle	U   	The general lifecyle of a message is:"
  - "Lib/email/architecture.rst:107:21   	setitem 	U   	`Message` object `__setitem__` interface), the name"
  - "Lib/email/architecture.rst:157:34   	Compat  	U   	email.policy.Policy.Compat32` Policy provides backward"
  - "Lib/email/architecture.rst:164:37   	linesep 	U   	lines, preserving the linesep characters to obtain"
  - "Lib/email/base64mime.py:2:15    	Gertzfield  	U   	# Author: Ben Gertzfield"
  - "Lib/email/base64mime.py:89:5    	encvec      	U   	encvec = []"
  - "Lib/email/base64mime.py:106:33  	bmlo        	U   	like =?iso-8859-1?b?bmloISBuaWgh?=) -- please"
  - "Lib/email/charset.py:55:6       	viscii      	U   	'viscii': (QP, QP"
  - "Lib/email/charset.py:98:21      	eucgb       	U   	'gb2312': 'eucgb2312_cn',"
  - "Lib/email/charset.py:128:67     	codecname   	U   	use add_codec(charset, codecname)"
  - "Lib/email/charset.py:229:9      	henc        	U   	henc, benc, conv = CHARSETS"
  - "Lib/email/charset.py:229:15     	benc        	U   	henc, benc, conv = CHARSETS.get"
  - "Lib/email/charset.py:300:43     	maxlengths  	U   	lines(self, string, maxlengths):"
  - "Lib/email/charset.py:369:13     	lenqp       	U   	lenqp = email.quoprimime.header"
  - "Lib/email/charset.py:393:15     	quopromime  	U   	# quopromime.body_encode takes a"
  - "Lib/email/contentmanager.py:27:31   	typekey     	U   	add_set_handler(self, typekey, handler):"
  - "Lib/email/contentmanager.py:137:9   	thisline    	U   	thisline = data[i:i+unencoded"
  - "Lib/email/contentmanager.py:160:54  	lineseps    	U   	unfair to qp; it includes lineseps, base64 doesn't."
  - "Lib/email/contentmanager.py:238:38  	istext      	U   	binascii.b2a_qp(data, istext=False, header=False"
  - "Lib/email/contentmanager.py:238:66  	quotetabs   	U   	False, header=False, quotetabs=True)"
  - "Lib/email/encoders.py:15:36     	bencode 	U   	import encodebytes as _bencode"
  - "Lib/email/encoders.py:20:6      	qencode 	U   	def _qencode(s):"
  - "Lib/email/encoders.py:32:5      	encdata 	U   	encdata = str(_bencode(orig"
  - "Lib/email/feedparser.py:2:20    	Wouters     	U   	# Authors: Baxter, Wouters and Warsaw"
  - "Lib/email/feedparser.py:27:13   	policybase  	U   	from email._policybase import compat32"
  - "Lib/email/feedparser.py:35:37   	ftext       	U   	8 Optional fields. ftext is %d33-57 / %d59-1"
  - "Lib/email/feedparser.py:60:15   	eofstack    	U   	self._eofstack = []"
  - "Lib/email/feedparser.py:89:13   	ateof       	U   	for ateof in reversed(self._eofstack"
  - "Lib/email/feedparser.py:163:15  	msgstack    	U   	self._msgstack = []"
  - "Lib/email/feedparser.py:164:29  	parsegen    	U   	self._parse = self._parsegen().__next__"
  - "Lib/email/feedparser.py:167:15  	headersonly 	U   	self._headersonly = False"
  - "Lib/email/feedparser.py:332:13  	boundaryre  	U   	boundaryre = re.compile("
  - "Lib/email/feedparser.py:361:29  	lastline    	U   	lastline = preamble[-1]"
  - "Lib/email/feedparser.py:362:29  	eolmo       	U   	eolmo = NLCRE_eol.search(lastline"
  - "Lib/email/feedparser.py:456:17  	bolmo       	U   	bolmo = NLCRE_bol.match(firstline"
  - "Lib/email/feedparser.py:473:9   	lastheader  	U   	lastheader = ''"
  - "Lib/email/feedparser.py:474:9   	lastvalue   	U   	lastvalue = []"
  - "Lib/email/generator.py:36:24    	outfp       	U   	def __init__(self, outfp, mangle_from_=None,"
  - "Lib/email/generator.py:36:50    	maxheaderlen	U   	mangle_from_=None, maxheaderlen=None, *,"
  - "Lib/email/generator.py:81:23    	subobjects  	U   	Note that for subobjects, no From_ line is printed"
  - "Lib/email/generator.py:104:11   	submessages 	U   	# submessages will automatically get"
  - "Lib/email/generator.py:112:17   	ufrom       	U   	ufrom = msg.get_unixfrom("
  - "Lib/email/generator.py:177:9    	oldfp       	U   	oldfp = self._fp"
  - "Lib/email/generator.py:179:19   	munge       	U   	self._munge_cte = None"
  - "Lib/email/generator.py:258:9    	msgtexts    	U   	msgtexts = []"
  - "Lib/email/generator.py:279:13   	alltext     	U   	alltext = self._encoded_NL.join"
  - "Lib/email/generator.py:354:11   	Groupwise   	U   	# Groupwise when forwarding unadorned"
  - "Lib/email/header.py:103:5   	droplist    	U   	droplist = []"
  - "Lib/email/header.py:122:13  	paderr      	U   	paderr = len(encoded_string"
  - "Lib/email/header.py:222:19  	headerlen   	U   	self._headerlen = 0"
  - "Lib/email/header.py:230:9   	uchunks     	U   	uchunks = []"
  - "Lib/email/header.py:231:9   	lastcs      	U   	lastcs = None"
  - "Lib/email/header.py:232:9   	lastspace   	U   	lastspace = None"
  - "Lib/email/header.py:240:13  	nextcs      	U   	nextcs = charset"
  - "Lib/email/header.py:245:17  	hasspace    	U   	hasspace = string and self._nonctext"
  - "Lib/email/header.py:245:45  	nonctext    	U   	hasspace = string and self._nonctext(string[0])"
  - "Lib/email/header.py:313:22  	splitchars  	U   	def encode(self, splitchars=';, \\t', maxlinelen"
  - "Lib/email/header.py:334:56  	splitchar   	U   	points preceded by a splitchar are preferred"
  - "Lib/email/header.py:339:23  	Splitchars  	U   	being split. Splitchars does not affect RFC"
  - "Lib/email/header.py:434:38  	onlyws      	U   	self._current_line.is_onlyws():"
  - "Lib/email/header.py:519:21  	prevpart    	U   	prevpart = self._current_line"
  - "Lib/email/header.py:568:21  	startval    	U   	def reset(self, startval=None):"
  - "Lib/email/headerregistry.py:148:9   	adrstr  	U   	adrstr = \", \".join(str(x) for"
  - "Lib/email/message.py:14:3       	Intrapackage    	U   	# Intrapackage imports"
  - "Lib/email/message.py:29:6       	splitparam      	U   	def _splitparam(param):"
  - "Lib/email/message.py:39:6       	formatparam     	U   	def _formatparam(param, value=None, quote"
  - "Lib/email/message.py:93:6       	unquotevalue    	U   	def _unquotevalue(value):"
  - "Lib/email/message.py:144:50     	mesasge         	U   	used to serialize the mesasge; if it is not"
  - "Lib/email/message.py:227:54     	uuencoded       	U   	i.e. bogus base64 or uuencoded data), the"
  - "Lib/email/message.py:264:17     	bpayload        	U   	bpayload = payload.encode('ascii"
  - "Lib/email/message.py:290:25     	uuencode        	U   	elif cte in ('x-uuencode', 'uuencode', 'uue'"
  - "Lib/email/message.py:462:25     	failobj         	U   	def get(self, name, failobj=None):"
  - "Lib/email/message.py:531:47     	Fußballer       	U   	filename=('utf-8', '', Fußballer.ppt'))"
  - "Lib/email/message.py:687:13     	rawparam        	U   	rawparam = msg.get_param('foo"
  - "Lib/email/message.py:701:62     	requote         	U   	header='Content-Type', requote=True,"
  - "Lib/email/message.py:851:9      	newparams       	U   	newparams = []"
  - "Lib/email/message.py:852:9      	foundp          	U   	foundp = False"
  - "Lib/email/message.py:894:13     	pcharset        	U   	pcharset = charset[0] or 'us"
  - "Lib/email/message.py:977:32     	preferencelist  	U   	find_body(self, part, preferencelist):"
  - "Lib/email/message.py:1016:14    	prio            	U   	best_prio = len(preferencelist"
  - "Lib/email/mime/audio.py:24:53   	realaudio   	U   	to sndhdr? midi, mp3, realaudio, wma??"
  - "Lib/email/mime/audio.py:25:6    	whatsnd     	U   	def _whatsnd(data):"
  - "Lib/email/mime/audio.py:33:5    	fakefile    	U   	fakefile = BytesIO(hdr)"
  - "Lib/email/mime/audio.py:34:9    	testfn      	U   	for testfn in sndhdr.tests:"
  - "Lib/email/mime/audio.py:45:25   	audiodata   	U   	def __init__(self, _audiodata, _subtype=None,"
  - "Lib/email/mime/image.py:19:25   	imagedata   	U   	def __init__(self, _imagedata, _subtype=None,"
  - "Lib/email/quoprimime.py:176:13  	speacial    	U   	# quote speacial characters"
  - "Lib/email/quoprimime.py:189:9   	laststart   	U   	laststart = len(line) - 1 - maxlinelen"
  - "Lib/email/utils.py:78:6     	realname    	U   	(realname, email_address) and"
  - "Lib/email/utils.py:111:52   	fieldvalue  	U   	REALNAME, EMAIL) for each fieldvalue.\"\"\""
  - "Lib/email/utils.py:138:16   	timeval     	U   	def formatdate(timeval=None, localtime=False"
  - "Lib/email/utils.py:138:47   	usegmt      	U   	None, localtime=False, usegmt=False):"
  - "Lib/email/utils.py:186:16   	idstring    	U   	def make_msgid(idstring=None, domain=None):"
  - "Lib/email/utils.py:210:6    	dtuple      	U   	*dtuple, tz = _parsedate_tz"
  - "Lib/email/utils.py:218:5    	addrs       	U   	addrs = _AddressList(addr"
  - "Lib/email/utils.py:331:5    	rawbytes    	U   	rawbytes = bytes(text, 'raw-unicode"
  - "Lib/email/utils.py:377:25   	altzone     	U   	gmtoff = -(time.altzone if dst else time.timezone"
  - "Lib/encodings/__init__.py:20:7      	getaliases  	U   	* getaliases() -> sequence of encoding"
  - "Lib/encodings/__init__.py:59:5      	punct       	U   	punct = False"
  - "Lib/encodings/__init__.py:89:9      	modnames    	U   	modnames = [aliased_encoding"
  - "Lib/encodings/__init__.py:144:9     	codecaliases	U   	codecaliases = mod.getaliases()"
  - "Lib/encodings/aliases.py:28:6       	csascii                 	U   	'csascii' : 'ascii"
  - "Lib/encodings/aliases.py:42:6       	csbig                   	U   	'csbig5' : 'big"
  - "Lib/encodings/aliases.py:45:11      	hkscs                   	U   	'big5_hkscs' : 'big5hkscs"
  - "Lib/encodings/aliases.py:53:6       	csibm                   	U   	'csibm037' : 'cp"
  - "Lib/encodings/aliases.py:70:6       	ruscii                  	U   	'ruscii' : 'cp"
  - "Lib/encodings/aliases.py:125:6      	cspc                    	U   	'cspc8codepage437' : 'cp"
  - "Lib/encodings/aliases.py:125:11     	codepage                	U   	'cspc8codepage437' : 'cp437',"
  - "Lib/encodings/aliases.py:147:6      	cspcp                   	U   	'cspcp852' : 'cp"
  - "Lib/encodings/aliases.py:178:13     	latinhebrew             	U   	'cspc862latinhebrew' : 'cp862',"
  - "Lib/encodings/aliases.py:210:6      	mskanji                 	U   	'mskanji' : 'cp93"
  - "Lib/encodings/aliases.py:223:6      	jisx                    	U   	'jisx0213' : 'euc"
  - "Lib/encodings/aliases.py:224:6      	eucjis                  	U   	'eucjis2004' : 'euc"
  - "Lib/encodings/aliases.py:228:6      	eucjisx                 	U   	'eucjisx0213' : 'euc_jisx"
  - "Lib/encodings/aliases.py:231:6      	eucjp                   	U   	'eucjp' : 'euc"
  - "Lib/encodings/aliases.py:232:6      	ujis                    	U   	'ujis' : 'euc"
  - "Lib/encodings/aliases.py:236:6      	euckr                   	U   	'euckr' : 'euc"
  - "Lib/encodings/aliases.py:249:6      	csiso                   	U   	'csiso58gb231280' : 'gb"
  - "Lib/encodings/aliases.py:251:6      	euccn                   	U   	'euccn' : 'gb"
  - "Lib/encodings/aliases.py:273:6      	hzgb                    	U   	'hzgb' : 'hz"
  - "Lib/encodings/aliases.py:308:6      	csisolatin              	U   	'csisolatin6' : 'iso8859"
  - "Lib/encodings/aliases.py:370:6      	csisolatincyrillic      	U   	'csisolatincyrillic' : 'iso8859_5',"
  - "Lib/encodings/aliases.py:378:6      	asmo                    	U   	'asmo_708' : 'iso"
  - "Lib/encodings/aliases.py:379:6      	csisolatinarabic        	U   	'csisolatinarabic' : 'iso8859_6',"
  - "Lib/encodings/aliases.py:386:6      	csisolatingreek         	U   	'csisolatingreek' : 'iso8859_7',"
  - "Lib/encodings/aliases.py:388:6      	elot                    	U   	'elot_928' : 'iso"
  - "Lib/encodings/aliases.py:396:6      	csisolatinhebrew        	U   	'csisolatinhebrew' : 'iso8859_8',"
  - "Lib/encodings/aliases.py:415:6      	cskoi                   	U   	'cskoi8r' : 'koi"
  - "Lib/encodings/aliases.py:420:6      	strk                    	U   	'strk1048_2002' : 'kz"
  - "Lib/encodings/aliases.py:443:6      	maccyrillic             	U   	'maccyrillic' : 'mac_cyrillic"
  - "Lib/encodings/aliases.py:446:6      	macgreek                	U   	'macgreek' : 'mac_greek"
  - "Lib/encodings/aliases.py:449:6      	maciceland              	U   	'maciceland' : 'mac_iceland"
  - "Lib/encodings/aliases.py:452:6      	maccentraleurope        	U   	'maccentraleurope' : 'mac_latin2',"
  - "Lib/encodings/aliases.py:453:10     	centeuro                	U   	'mac_centeuro' : 'mac_latin"
  - "Lib/encodings/aliases.py:454:6      	maclatin                	U   	'maclatin2' : 'mac_latin"
  - "Lib/encodings/aliases.py:458:6      	macroman                	U   	'macroman' : 'mac_roman"
  - "Lib/encodings/aliases.py:461:6      	macturkish              	U   	'macturkish' : 'mac_turkish"
  - "Lib/encodings/aliases.py:465:6      	dbcs                    	U   	'dbcs' : 'mbcs"
  - "Lib/encodings/aliases.py:468:6      	csptcp                  	U   	'csptcp154' : 'ptcp"
  - "Lib/encodings/aliases.py:476:6      	quotedprintable         	U   	'quotedprintable' : 'quopri_codec"
  - "Lib/encodings/aliases.py:482:6      	csshiftjis              	U   	'csshiftjis' : 'shift_jis"
  - "Lib/encodings/aliases.py:483:6      	shiftjis                	U   	'shiftjis' : 'shift"
  - "Lib/encodings/aliases.py:484:6      	sjis                    	U   	'sjis' : 'shift"
  - "Lib/encodings/aliases.py:493:6      	shiftjisx               	U   	'shiftjisx0213' : 'shift_jisx"
  - "Lib/encodings/aliases.py:494:6      	sjisx                   	U   	'sjisx0213' : 'shift"
  - "Lib/encodings/aliases.py:509:6      	unicodebigunmarked      	U   	'unicodebigunmarked' : 'utf_16_be',"
  - "Lib/encodings/aliases.py:513:6      	unicodelittleunmarked   	U   	'unicodelittleunmarked' : 'utf_16_le',"
  - "Lib/encodings/big5.py:4:18      	Shik            	U   	# Written by Hye-Shik Chang <perky@FreeBSD"
  - "Lib/encodings/big5.py:8:9       	multibytecodec  	U   	import _multibytecodec as mbc"
  - "Lib/encodings/big5.py:10:20     	getcodec        	U   	codec = _codecs_tw.getcodec('big5')"
  - "Lib/encodings/big5.py:16:30     	Multibyte       	U   	IncrementalEncoder(mbc.MultibyteIncrementalEncoder,"
  - "Lib/encodings/bz2_codec.py:4:29     	untransform     	U   	transform() and bytes.untransform()."
  - "Lib/encodings/bz2_codec.py:33:14    	compressobj     	U   	self.compressobj = bz2.BZ2Compressor"
  - "Lib/encodings/bz2_codec.py:49:14    	decompressobj   	U   	self.decompressobj = bz2.BZ2Decompressor"
  - "Lib/encodings/cp037.py:1:105    	gencodec	U   	EBCDIC/CP037.TXT' with gencodec.py."
  - "Lib/encodings/cp1006.py:242:7   	ufea    	U   	'\\ufea1' # 0xC2 -> ARABIC"
  - "Lib/encodings/cp1006.py:248:7   	ufeab   	U   	'\\ufeab' # 0xC8 -> ARABIC"
  - "Lib/encodings/cp1006.py:249:7   	ufead   	U   	'\\ufead' # 0xC9 -> ARABIC"
  - "Lib/encodings/cp1006.py:251:7   	ufeaf   	U   	'\\ufeaf' # 0xCB -> ARABIC"
  - "Lib/encodings/cp1006.py:258:7   	ufebb   	U   	'\\ufebb' # 0xD2 -> ARABIC"
  - "Lib/encodings/cp1006.py:259:7   	ufebd   	U   	'\\ufebd' # 0xD3 -> ARABIC"
  - "Lib/encodings/cp1006.py:260:7   	ufebf   	U   	'\\ufebf' # 0xD4 -> ARABIC"
  - "Lib/encodings/cp1006.py:264:7   	ufeca   	U   	'\\ufeca' # 0xD8 -> ARABIC"
  - "Lib/encodings/cp1006.py:265:7   	ufecb   	U   	'\\ufecb' # 0xD9 -> ARABIC"
  - "Lib/encodings/cp1006.py:266:7   	ufecc   	U   	'\\ufecc' # 0xDA -> ARABIC"
  - "Lib/encodings/cp1006.py:267:7   	ufecd   	U   	'\\ufecd' # 0xDB -> ARABIC"
  - "Lib/encodings/cp1006.py:268:7   	ufece   	U   	'\\ufece' # 0xDC -> ARABIC"
  - "Lib/encodings/cp1006.py:269:7   	ufecf   	U   	'\\ufecf' # 0xDD -> ARABIC"
  - "Lib/encodings/cp1006.py:276:7   	ufedb   	U   	'\\ufedb' # 0xE4 -> ARABIC"
  - "Lib/encodings/cp1006.py:279:7   	ufedd   	U   	'\\ufedd' # 0xE7 -> ARABIC"
  - "Lib/encodings/cp1006.py:280:7   	ufedf   	U   	'\\ufedf' # 0xE8 -> ARABIC"
  - "Lib/encodings/cp1006.py:289:7   	ufba    	U   	'\\ufba6' # 0xF1 -> ARABIC"
  - "Lib/encodings/cp1006.py:292:7   	ufbaa   	U   	'\\ufbaa' # 0xF4 -> ARABIC"
  - "Lib/encodings/cp1006.py:297:7   	ufef    	U   	'\\ufef1' # 0xF9 -> ARABIC"
  - "Lib/encodings/cp1006.py:300:7   	ufbb    	U   	'\\ufbb0' # 0xFC -> ARABIC"
  - "Lib/encodings/cp1006.py:301:7   	ufbae   	U   	'\\ufbae' # 0xFD -> ARABIC"
  - "Lib/encodings/cp1250.py:177:7   	ufffe   	U   	'\\ufffe' # 0x81 -> UNDEFINED"
  - "Lib/encodings/cp720.py:3:24     	genwincodec 	U   	python Tools/unicode/genwincodec.py 720"
  - "Lib/encodings/cp864.py:336:7    	ufefb   	U   	'\\ufefb' # 0x009d -> ARABIC"
  - "Lib/encodings/cp864.py:337:7    	ufefc   	U   	'\\ufefc' # 0x009e -> ARABIC"
  - "Lib/encodings/cp864.py:410:7    	ufeeb   	U   	'\\ufeeb' # 0x00e7 -> ARABIC"
  - "Lib/encodings/cp864.py:412:7    	ufeef   	U   	'\\ufeef' # 0x00e9 -> ARABIC"
  - "Lib/encodings/cp864.py:423:7    	ufeec   	U   	'\\ufeec' # 0x00f4 -> ARABIC"
  - "Lib/encodings/hp_roman8.py:3:64     	Keld    	U   	charmaps/HP-ROMAN8 (Keld Simonsen)"
  - "Lib/encodings/hp_roman8.py:3:69     	Simonsen	U   	charmaps/HP-ROMAN8 (Keld Simonsen)"
  - "Lib/encodings/hp_roman8.py:6:18     	Hewlet  	U   	33471-90901, Hewlet-Packard, June 1989."
  - "Lib/encodings/idna.py:16:5      	newlabel	U   	newlabel = []"
  - "Lib/encodings/palmos.py:3:12    	Sjoerd      	U   	Written by Sjoerd Mullender (sjoerd@acm"
  - "Lib/encodings/palmos.py:3:19    	Mullender   	U   	Written by Sjoerd Mullender (sjoerd@acm.org); based"
  - "Lib/encodings/punycode.py:1:19      	Punicode	U   	\"\"\" Codec for the Punicode encoding, as specified"
  - "Lib/encodings/punycode.py:49:22     	unsort  	U   	\"\"\"3.2 Insertion unsort coding\"\"\""
  - "Lib/encodings/punycode.py:50:5      	oldchar 	U   	oldchar = 0x80"
  - "Lib/encodings/punycode.py:52:5      	oldindex	U   	oldindex = -1"
  - "Lib/encodings/punycode.py:56:9      	curlen  	U   	curlen = selective_len(str"
  - "Lib/encodings/punycode.py:71:28     	tmin    	U   	Punycode parameters: tmin = 1, tmax = 26, base"
  - "Lib/encodings/punycode.py:71:38     	tmax    	U   	parameters: tmin = 1, tmax = 26, base = 36"
  - "Lib/encodings/punycode.py:91:25     	numchars	U   	adapt(delta, first, numchars):"
  - "Lib/encodings/punycode.py:106:23    	baselen 	U   	def generate_integers(baselen, deltas):"
  - "Lib/encodings/punycode.py:127:41    	extpos  	U   	generalized_number(extended, extpos, bias, errors):"
  - "Lib/encodings/punycode.py:137:48    	punicode	U   	UnicodeError(\"incomplete punicode string\")"
  - "Lib/encodings/utf_16.py:85:9    	addstate	U   	addstate = int((sys.byteorder"
  - "Lib/encodings/uu_codec.py:6:47      	Ellinghouse 	U   	was written by Lance Ellinghouse and"
  - "Lib/encodings/uu_codec.py:60:37     	uuencoders  	U   	Workaround for broken uuencoders by /Fredrik Lundh"
  - "Lib/ensurepip/__init__.py:82:15     	bootstraping	U   	# Run the bootstraping in a subprocess to avoid"
  - "Lib/ensurepip/__init__.py:83:31     	Particulary 	U   	after pip has executed. Particulary, this avoids the case"
  - "Lib/ensurepip/__init__.py:117:15    	altinstall  	U   	altinstall=False, default_pip=False"
  - "Lib/ensurepip/_uninstall.py:1:14    	uninstallation  	U   	\"\"\"Basic pip uninstallation support, helper for"
  - "Lib/enum.py:46:29   	picklable   	U   	Make the given class un-picklable."
  - "Lib/enum.py:77:30   	dundered    	U   	Changes anything not dundered or not a descriptor"
  - "Lib/enum.py:144:21  	metacls     	U   	def __prepare__(metacls, cls, bases):"
  - "Lib/fileinput.py:12:1       	openhook        	U   	openhook are ignored. To specify"
  - "Lib/fileinput.py:49:11      	fileline        	U   	lineno(), fileline(), isfirstline(), isstdin"
  - "Lib/fileinput.py:200:15     	savestdout      	U   	self._savestdout = None"
  - "Lib/fileinput.py:203:15     	startlineno     	U   	self._startlineno = 0"
  - "Lib/fileinput.py:207:15     	backupfilename  	U   	self._backupfilename = None"
  - "Lib/fnmatch.py:22:2     	nextgroupnum    	U   	_nextgroupnum = count().__next__"
  - "Lib/fnmatch.py:171:32   	backreference   	U   	consume that group via a backreference. If the overall match"
  - "Lib/fnmatch.py:195:13   	groupnum        	U   	groupnum = _nextgroupnum()"
  - "Lib/formatter.py:51:15      	softspace   	U   	def flush_softspace(self): pass"
  - "Lib/formatter.py:89:14      	parskip     	U   	self.parskip = 0"
  - "Lib/formatter.py:182:9      	prespace    	U   	prespace = data[:1].isspace("
  - "Lib/formatter.py:183:9      	postspace   	U   	postspace = data[-1:].isspace"
  - "Lib/formatter.py:241:13     	csize       	U   	csize, ci, cb, ctt = self"
  - "Lib/formatter.py:261:9      	fstack      	U   	fstack = [m for m in self.margin"
  - "Lib/formatter.py:380:14     	atbreak     	U   	self.atbreak = 0"
  - "Lib/fractions.py:2:37       	Yasskin         	U   	modified by Jeffrey Yasskin <jyasskin at gmail.com"
  - "Lib/fractions.py:2:46       	jyasskin        	U   	by Jeffrey Yasskin <jyasskin at gmail.com>."
  - "Lib/fractions.py:247:11     	semiconvergent  	U   	# semiconvergent of the (unique shortest"
  - "Lib/fractions.py:567:11     	dinv            	U   	# dinv is the inverse of self"
  - "Lib/fractions.py:599:10     	richcmp         	U   	def _richcmp(self, other, op):"
  - "Lib/ftplib.py:3:55      	Postel          	U   	Protocol (FTP), by J. Postel and J. Reynolds"
  - "Lib/ftplib.py:13:1      	drwxr           	U   	drwxr-xr-x 8 root wheel"
  - "Lib/ftplib.py:17:3      	wxrwxr          	U   	d-wxrwxr-x 2 ftp wheel"
  - "Lib/ftplib.py:34:15     	Siebren         	U   	# Modified by Siebren to support docstrings"
  - "Lib/ftplib.py:36:15     	Giampaolo       	U   	# Modified by Giampaolo Rodola' to add TLS support"
  - "Lib/ftplib.py:36:25     	Rodola          	U   	Modified by Giampaolo Rodola' to add TLS support"
  - "Lib/ftplib.py:228:17    	nextline        	U   	nextline = self.getline()"
  - "Lib/ftplib.py:241:14    	lastresp        	U   	self.lastresp = resp[:3]"
  - "Lib/ftplib.py:286:9     	hbytes          	U   	hbytes = host.split('.')"
  - "Lib/ftplib.py:287:9     	pbytes          	U   	pbytes = [repr(port//256),"
  - "Lib/ftplib.py:330:25    	pasv            	U   	passive, send a pasv command, connect to"
  - "Lib/ftplib.py:588:22    	fromname        	U   	def rename(self, fromname, toname):"
  - "Lib/ftplib.py:588:32    	toname          	U   	rename(self, fromname, toname):"
  - "Lib/ftplib.py:867:17    	directoryname   	U   	Returns the directoryname in the 257 reply.''"
  - "Lib/ftplib.py:872:56    	ftpd            	U   	to RFC 959, but UNIX ftpd does this"
  - "Lib/ftplib.py:892:19    	sourcename      	U   	def ftpcp(source, sourcename, target, targetname"
  - "Lib/ftplib.py:892:39    	targetname      	U   	sourcename, target, targetname = '', type = 'I'):"
  - "Lib/ftplib.py:899:5     	sourcehost      	U   	sourcehost, sourceport = parse"
  - "Lib/ftplib.py:899:17    	sourceport      	U   	sourcehost, sourceport = parse227(source.sendcmd"
  - "Lib/ftplib.py:904:5     	treply          	U   	treply = target.sendcmd('STOR"
  - "Lib/ftplib.py:907:5     	sreply          	U   	sreply = source.sendcmd('RETR"
  - "Lib/ftplib.py:930:5     	rcfile          	U   	rcfile = None"
  - "Lib/ftplib.py:941:5     	userid          	U   	userid = passwd = acct = '"
  - "Lib/ftplib.py:943:9     	netrcobj        	U   	netrcobj = netrc.netrc(rcfile"
  - "Lib/functools.py:6:19       	Coghlan         	U   	# Written by Nick Coghlan <ncoghlan at gmail.com"
  - "Lib/functools.py:6:28       	ncoghlan        	U   	Written by Nick Coghlan <ncoghlan at gmail.com>,"
  - "Lib/functools.py:8:7        	Łukasz          	U   	# and Łukasz Langa <lukasz at langa"
  - "Lib/functools.py:8:14       	Langa           	U   	# and Łukasz Langa <lukasz at langa.pl"
  - "Lib/functools.py:8:21       	lukasz          	U   	# and Łukasz Langa <lukasz at langa.pl>."
  - "Lib/functools.py:8:31       	langa           	U   	ukasz Langa <lukasz at langa.pl>."
  - "Lib/functools.py:191:17     	opfunc          	U   	for opname, opfunc in _convert[root]:"
  - "Lib/functools.py:202:16     	mycmp           	U   	def cmp_to_key(mycmp):"
  - "Lib/functools.py:441:69     	currsize        	U   	misses\", \"maxsize\", \"currsize\"])"
  - "Lib/functools.py:450:18     	hashvalue       	U   	__slots__ = 'hashvalue'"
  - "Lib/functools.py:461:14     	fasttypes       	U   	fasttypes = {int, str},"
  - "Lib/functools.py:545:40     	linkedlist      	U   	# because linkedlist updates aren't threadsafe"
  - "Lib/functools.py:545:66     	threadsafe      	U   	linkedlist updates aren't threadsafe"
  - "Lib/functools.py:603:21     	oldroot         	U   	oldroot = root"
  - "Lib/functools.py:613:21     	oldkey          	U   	oldkey = root[KEY]"
  - "Lib/functools.py:614:21     	oldresult       	U   	oldresult = root[RESULT]"
  - "Lib/functools.py:688:63     	linearization   	U   	order using extended C3 linearization."
  - "Lib/functools.py:723:17     	mros            	U   	explicit_c3_mros = [_c3_mro(base, abcs"
  - "Lib/functools.py:768:17     	subcls          	U   	for subcls in sub:"
  - "Lib/functools.py:803:5      	behaviours      	U   	behaviours depending upon the type"
  - "Lib/functools.py:861:13     	argname         	U   	argname, cls = next(iter(get"
  - "Lib/genericpath.py:73:22    	pathnames   	U   	\"Given a list of pathnames, returns the longest"
  - "Lib/genericpath.py:78:68    	sublists    	U   	PathLike object in the sublists."
  - "Lib/genericpath.py:148:5    	hasstr      	U   	hasstr = hasbytes = False"
  - "Lib/genericpath.py:148:14   	hasbytes    	U   	hasstr = hasbytes = False"
  - "Lib/getopt.py:17:37     	Wirzenius   	U   	support added by Lars Wirzenius <liw@iki.fi>."
  - "Lib/getopt.py:19:3      	Gerrit      	U   	# Gerrit Holl <gerrit@nl.linux"
  - "Lib/getopt.py:19:10     	Holl        	U   	# Gerrit Holl <gerrit@nl.linux.org"
  - "Lib/getopt.py:22:9      	Åstrand     	U   	# Peter Åstrand <astrand@lysator.liu"
  - "Lib/getopt.py:56:18     	shortopts   	U   	def getopt(args, shortopts, longopts = []):"
  - "Lib/getopt.py:56:29     	longopts    	U   	getopt(args, shortopts, longopts = []):"
  - "Lib/getopt.py:153:9     	optarg      	U   	optarg = None"
  - "Lib/getopt.py:192:21    	optstring   	U   	def do_shorts(opts, optstring, shortopts, args):"
  - "Lib/getpass.py:69:31    	tcgetattr   	U   	old = termios.tcgetattr(fd) # a copy to"
  - "Lib/getpass.py:71:50    	lflags      	U   	termios.ECHO # 3 == 'lflags'"
  - "Lib/getpass.py:72:17    	tcsetattr   	U   	tcsetattr_flags = termios.TCSAFLUSH"
  - "Lib/getpass.py:98:57    	getwch      	U   	echo off, using Windows getwch().\"\"\""
  - "Lib/getpass.py:103:16   	putwch      	U   	msvcrt.putwch(c)"
  - "Lib/getpass.py:145:36   	flockfile   	U   	The Python C API calls flockfile() (and unlock) during"
  - "Lib/gettext.py:16:14    	Loewis          	U   	# Martin von Loewis, who wrote the initial"
  - "Lib/gettext.py:17:11    	libintlmodule   	U   	# C-based libintlmodule (later renamed _gettext"
  - "Lib/gettext.py:20:25    	fintl           	U   	Peter Funk, who wrote fintl.py, a fairly complete"
  - "Lib/gettext.py:20:68    	intlmodule      	U   	complete wrapper around intlmodule,"
  - "Lib/gettext.py:24:9     	Henstridge      	U   	# James Henstridge, who also wrote a gettext"
  - "Lib/gettext.py:32:12    	Pinard          	U   	# Francois Pinard and Marc-Andre Lemburg"
  - "Lib/gettext.py:35:12    	Ibanez          	U   	# J. David Ibanez implemented plural forms"
  - "Lib/gettext.py:35:51    	Haible          	U   	plural forms. Bruno Haible fixed some bugs."
  - "Lib/gettext.py:57:29    	codeset         	U   	'bind_textdomain_codeset',"
  - "Lib/gettext.py:58:49    	lgettext        	U   	dngettext', 'gettext', 'lgettext', 'ldgettext',"
  - "Lib/gettext.py:58:61    	ldgettext       	U   	gettext', 'lgettext', 'ldgettext',"
  - "Lib/gettext.py:59:13    	ldngettext      	U   	'ldngettext', 'lngettext', 'ngettext"
  - "Lib/gettext.py:59:27    	lngettext       	U   	'ldngettext', 'lngettext', 'ngettext',"
  - "Lib/gettext.py:88:19    	lastgroup       	U   	kind = mo.lastgroup"
  - "Lib/gettext.py:116:5    	nexttok         	U   	nexttok = next(tokens)"
  - "Lib/gettext.py:295:13   	tmsg            	U   	tmsg = msgid1"
  - "Lib/gettext.py:355:22   	msgcount        	U   	version, msgcount, masteridx, transidx"
  - "Lib/gettext.py:355:32   	masteridx       	U   	version, msgcount, masteridx, transidx = unpack("
  - "Lib/gettext.py:355:43   	transidx        	U   	msgcount, masteridx, transidx = unpack('<4I', buf"
  - "Lib/gettext.py:371:13   	mlen            	U   	mlen, moff = unpack(ii, buf"
  - "Lib/gettext.py:371:19   	moff            	U   	mlen, moff = unpack(ii, buf[masteridx"
  - "Lib/gettext.py:383:17   	lastk           	U   	lastk = None"
  - "Lib/gettext.py:403:53   	msgids          	U   	unconditionally convert both msgids and msgstrs to"
  - "Lib/gettext.py:403:64   	msgstrs         	U   	convert both msgids and msgstrs to"
  - "Lib/gettext.py:407:51   	Zope's          	U   	alternative encodings (e.g. Zope's ZCML and ZPT). For"
  - "Lib/gettext.py:480:13   	envar           	U   	for envar in ('LANGUAGE', 'LC"
  - "Lib/gettext.py:488:5    	nelangs         	U   	nelangs = []"
  - "Lib/gettext.py:490:13   	nelang          	U   	for nelang in _expand_lang(lang"
  - "Lib/gettext.py:501:9    	mofile          	U   	mofile = os.path.join(localedir"
  - "Lib/gettext.py:518:5    	mofiles         	U   	mofiles = find(domain, localedir"
  - "Lib/gettext.py:558:29   	codesets        	U   	mapping b/w domains and codesets"
  - "Lib/gettext.py:559:2    	localecodesets  	U   	_localecodesets = {}"
  - "Lib/gettext.py:636:3    	dcgettext       	U   	# dcgettext() has been deemed unnecessary"
  - "Lib/gettext.py:638:9    	Henstridge's    	U   	# James Henstridge's Catalog constructor"
  - "Lib/glob.py:1:13    	globbing    	U   	\"\"\"Filename globbing utility.\"\"\""
  - "Lib/glob.py:53:51   	dironly     	U   	dir_fd, recursive, dironly):"
  - "Lib/glob.py:90:25   	basenames   	U   	They return a list of basenames. _glob1 accepts a pattern"
  - "Lib/glob.py:95:13   	ishidden    	U   	if not _ishidden(pattern):"
  - "Lib/glob.py:124:17  	rlistdir    	U   	yield from _rlistdir(dirname, dir_fd, dironly"
  - "Lib/gzip.py:6:19    	Kuchling's      	U   	# based on Andrew Kuchling's minigzip.py distributed"
  - "Lib/gzip.py:6:30    	minigzip        	U   	on Andrew Kuchling's minigzip.py distributed with"
  - "Lib/gzip.py:181:9   	origmode        	U   	origmode = mode"
  - "Lib/gzip.py:236:14  	writebuf        	U   	self.writebuf = []"
  - "Lib/gzip.py:405:26  	wbits           	U   	wbits=-zlib.MAX_WBITS)"
  - "Lib/gzip.py:412:55  	unconcatenated  	U   	Decompressed size of unconcatenated stream"
  - "Lib/gzip.py:496:13  	uncompress      	U   	uncompress = self._decompressor"
  - "Lib/gzip.py:523:16  	isize           	U   	crc32, isize = struct.unpack(\"<II"
  - "Lib/heapq.py:94:15      	organised   	U   	very cleverly organised[1]. It is very important"
  - "Lib/heapq.py:133:6      	siftdown    	U   	_siftdown(heap, 0, len(heap)-"
  - "Lib/heapq.py:137:5      	lastelt     	U   	lastelt = heap.pop() # raises"
  - "Lib/heapq.py:139:9      	returnitem  	U   	returnitem = heap[0]"
  - "Lib/heapq.py:141:10     	siftup      	U   	_siftup(heap, 0)"
  - "Lib/heapq.py:180:8      	Maxheap     	U   	\"\"\"Maxheap version of a heappop"
  - "Lib/heapq.py:197:30     	maxheap     	U   	Transform list into a maxheap, in-place, in O(len"
  - "Lib/heapq.py:206:5      	newitem     	U   	newitem = heap[pos]"
  - "Lib/heapq.py:210:9      	parentpos   	U   	parentpos = (pos - 1) >> 1"
  - "Lib/heapq.py:243:58     	heappops    	U   	Compares needed by 1000 heappops"
  - "Lib/heapq.py:263:5      	childpos    	U   	childpos = 2*pos + 1 # leftmost"
  - "Lib/heapq.py:266:9      	rightpos    	U   	rightpos = childpos + 1"
  - "Lib/hmac.py:26:41   	digestmod   	U   	self, key, msg = None, digestmod = None):"
  - "Lib/html/__init__.py:30:10      	charrefs    	U   	_invalid_charrefs = {"
  - "Lib/html/__init__.py:31:13      	ufffd       	U   	0x00: '\\ufffd', # REPLACEMENT CHARACTER"
  - "Lib/html/__init__.py:67:10      	codepoints  	U   	_invalid_codepoints = {"
  - "Lib/html/__init__.py:102:23     	FFFD        	U   	return '\\uFFFD'"
  - "Lib/html/parser.py:3:25     	sgmllib             	U   	This file is based on sgmllib.py, but the API is slightly"
  - "Lib/html/parser.py:31:21    	tagfind             	U   	# 1) if you change tagfind/attrfind remember to"
  - "Lib/html/parser.py:31:29    	attrfind            	U   	if you change tagfind/attrfind remember to update locatestar"
  - "Lib/html/parser.py:31:57    	locatestarttagend   	U   	attrfind remember to update locatestarttagend too;"
  - "Lib/html/parser.py:98:14    	lasttag             	U   	self.lasttag = '???'"
  - "Lib/html/parser.py:116:7    	starttag            	U   	__starttag_text = None"
  - "Lib/html/parser.py:147:21   	amppos              	U   	amppos = rawdata.rfind('&'"
  - "Lib/html/parser.py:266:13   	gtpos               	U   	gtpos = rawdata.find('>',"
  - "Lib/html/parser.py:318:29   	attrvalue           	U   	attrname, rest, attrvalue = m.group(1, 2, 3)"
  - "Lib/html/parser.py:384:25   	endtag              	U   	# Internal -- parse endtag, return end or -1 if"
  - "Lib/html/parser.py:398:13   	namematch           	U   	namematch = tagfind_tolerant.match"
  - "Lib/http/client.py:128:22   	tchar           	U   	token = 1*tchar"
  - "Lib/http/client.py:149:20   	pchars          	U   	# _is_allowed_url_pchars_re = re.compile(r\"^"
  - "Lib/http/client.py:235:5    	hstring         	U   	hstring = b''.join(headers)"
  - "Lib/http/client.py:405:9    	pconn           	U   	pconn = self.headers.get("
  - "Lib/http/client.py:534:48   	synchronisation 	U   	connection as protocol synchronisation is"
  - "Lib/http/client.py:748:45   	mimetools       	U   	instance of the class mimetools.Message containing"
  - "Lib/http/client.py:851:44   	hostport        	U   	self.port) = self._get_hostport(host, port)"
  - "Lib/http/client.py:988:17   	datablock       	U   	datablock = data.read(self.blocksize"
  - "Lib/http/cookiejar.py:3:49      	Gisle       	U   	distant) origins in Gisle Aas' Perl module"
  - "Lib/http/cookiejar.py:4:25      	libwww      	U   	HTTP::Cookies, from the libwww-perl library."
  - "Lib/http/cookiejar.py:6:1       	Docstrings  	U   	Docstrings, comments and debug"
  - "Lib/http/cookiejar.py:10:26     	BSDDB       	U   	Class diagram (note that BSDDBCookieJar and the MSIE"
  - "Lib/http/cookiejar.py:20:26     	MSIE        	U   	| ---MSIEBase | \\"
  - "Lib/http/cookiejar.py:22:25     	MSIEDB      	U   	| / MSIEDBCookieJar BSDDBCookieJar"
  - "Lib/http/cookiejar.py:61:36     	initialised 	U   	\"instance initialised with one)\")"
  - "Lib/http/cookiejar.py:166:13    	imon        	U   	imon = int(mon)"
  - "Lib/http/cookiejar.py:375:35    	qdtext      	U   	string = ( <\"> *(qdtext | quoted-pair ) <\">"
  - "Lib/http/cookiejar.py:478:51    	Tschalar's  	U   	headers contain. Ronald Tschalar's HTTPClient"
  - "Lib/http/cookiejar.py:646:5     	erhn        	U   	erhn = req_host = request"
  - "Lib/http/cookiejar.py:689:46    	duerst      	U   	specification: draft-duerst-iri-05)"
  - "Lib/http/cookiejar.py:756:5     	normalising 	U   	normalising to the representation"
  - "Lib/http/cookiejar.py:788:11    	normalise   	U   	# normalise case, as per RFC 29"
  - "Lib/http/cookiejar.py:825:13    	namevalue   	U   	namevalue = \"%s=%s\" % (self.name"
  - "Lib/http/cookiejar.py:1031:20   	kcookiejar  	U   	# (kcookiejar.cpp) and Mozilla implementati"
  - "Lib/http/cookiejar.py:1040:41   	mobi        	U   	\"info\", \"jobs\", \"mobi\", \"museum\", \"name\","
  - "Lib/http/cookiejar.py:1046:17   	undotted    	U   	undotted_domain = domain[1:]"
  - "Lib/http/cookiejar.py:1169:13   	dotdomain   	U   	dotdomain = \".\" + domain"
  - "Lib/http/cookiejar.py:1220:9    	pathlen     	U   	pathlen = len(path)"
  - "Lib/http/cookiejar.py:1230:24   	adict       	U   	def vals_sorted_by_key(adict):"
  - "Lib/http/cookiejar.py:1398:45   	normalised  	U   	of tuples containing normalised cookie information."
  - "Lib/http/cookiejar.py:1416:36   	commenturl  	U   	\"comment\", \"commenturl\")"
  - "Lib/http/cookiejar.py:1427:41   	mish        	U   	V0 cookies may be a mish-mash of Netscape and"
  - "Lib/http/cookiejar.py:1611:17   	hdrs        	U   	rfc2965_hdrs = headers.get_all(\"Set"
  - "Lib/http/cookiejar.py:1787:39   	delayload   	U   	self, filename=None, delayload=False, policy=None)"
  - "Lib/http/cookies.py:2:29    	O'Malley        	U   	Copyright 2000 by Timothy O'Malley <timo@alum.mit.edu>"
  - "Lib/http/cookies.py:26:44   	timo            	U   	2000/08/23 05:28:49 timo Exp"
  - "Lib/http/cookies.py:35:21   	nscookie        	U   	# first version of nscookie.py."
  - "Lib/http/cookies.py:85:27   	tootin          	U   	load() method is darn-tootin smart about identifying"
  - "Lib/http/cookies.py:90:16   	keebler         	U   	>>> C.load('keebler=\"E=everybody; L=\\\\\"Loves"
  - "Lib/http/cookies.py:99:21   	doublestuff     	U   	>>> C[\"oreo\"] = \"doublestuff\""
  - "Lib/http/cookies.py:108:11  	twix            	U   	>>> C[\"twix\"] = \"none for you\""
  - "Lib/http/cookies.py:138:2   	nulljoin        	U   	_nulljoin = ''.join"
  - "Lib/http/cookies.py:139:2   	semispacejoin   	U   	_semispacejoin = '; '.join"
  - "Lib/http/cookies.py:140:2   	spacejoin       	U   	_spacejoin = ' '.join"
  - "Lib/http/cookies.py:178:48  	doublequotes    	U   	surround the string in doublequotes and quote"
  - "Lib/http/cookies.py:187:7   	Patt            	U   	_OctalPatt = re.compile(r\"\\\\[0"
  - "Lib/http/cookies.py:233:8   	getdate         	U   	# The _getdate() routine is used to"
  - "Lib/http/cookies.py:445:46  	doublequoted    	U   	# Any doublequoted string"
  - "Lib/http/cookies.py:497:13  	rval            	U   	rval, cval = self.value_encode"
  - "Lib/http/cookies.py:497:19  	cval            	U   	rval, cval = self.value_encode"
  - "Lib/http/cookies.py:539:35  	patt            	U   	parse_string(self, str, patt=_CookiePattern):"
  - "Lib/http/server.py:37:64    	Berners         	U   	T. Berners-Lee"
  - "Lib/http/server.py:39:60    	Frystyk         	U   	H. Frystyk Nielsen"
  - "Lib/http/server.py:60:17    	authuser        	U   	# | host rfc931 authuser [DD/Mon/YYYY:hh:mm:ss"
  - "Lib/http/server.py:63:48    	identd          	U   	information returned by identd for this person,"
  - "Lib/http/server.py:101:21   	gethostbyaddr   	U   	import socket # For gethostbyaddr()"
  - "Lib/http/server.py:202:16   	responsecode    	U   	<version> <responsecode> <responsestring>"
  - "Lib/http/server.py:202:31   	responsestring  	U   	version> <responsecode> <responsestring>"
  - "Lib/http/server.py:270:50   	requestline     	U   	be stored in self.raw_requestline; the results"
  - "Lib/http/server.py:351:9    	conntype        	U   	conntype = self.headers.get("
  - "Lib/http/server.py:448:13   	shortmsg        	U   	shortmsg, longmsg = self.responses"
  - "Lib/http/server.py:448:23   	longmsg         	U   	shortmsg, longmsg = self.responses[code"
  - "Lib/http/server.py:613:48   	keepalive       	U   	to enable automatic keepalive"
  - "Lib/http/server.py:674:16   	outputfile      	U   	to the outputfile by the caller unless"
  - "Lib/http/server.py:705:11   	parseing        	U   	# parseing and rejection of filenames"
  - "Lib/http/server.py:734:30   	modif           	U   	last_modif = datetime.datetime"
  - "Lib/http/server.py:774:13   	displaypath     	U   	displaypath = urllib.parse.unquote"
  - "Lib/http/server.py:791:13   	displayname     	U   	displayname = linkname = name"
  - "Lib/http/server.py:791:27   	linkname        	U   	displayname = linkname = name"
  - "Lib/http/server.py:929:5    	splitpath       	U   	splitpath = ('/' + '/'.join(head"
  - "Lib/http/server.py:1023:38  	htbin           	U   	directories = ['/cgi-bin', '/htbin']"
  - "Lib/http/server.py:1040:13  	nextdir         	U   	nextdir = path[:i]"
  - "Lib/http/server.py:1041:13  	nextrest        	U   	nextrest = path[i+1:]"
  - "Lib/http/server.py:1043:13  	scriptdir       	U   	scriptdir = self.translate_path"
  - "Lib/http/server.py:1061:9   	scriptname      	U   	scriptname = dir + '/' + script"
  - "Lib/http/server.py:1062:9   	scriptfile      	U   	scriptfile = self.translate_path"
  - "Lib/http/server.py:1073:9   	ispy            	U   	ispy = self.is_python(scriptname"
  - "Lib/http/server.py:1090:9   	uqrest          	U   	uqrest = urllib.parse.unquote"
  - "Lib/http/server.py:1121:9   	referer         	U   	referer = self.headers.get("
  - "Lib/http/server.py:1184:55  	pythonw         	U   	use python.exe, not pythonw.exe"
  - "Lib/imghdr.py:40:29     	Exif    	U   	JPEG data in JFIF or Exif format\"\"\""
  - "Lib/imghdr.py:82:22     	graymap 	U   	\"\"\"PGM (portable graymap)\"\"\""
  - "Lib/imghdr.py:90:22     	pixmap  	U   	\"\"\"PPM (portable pixmap)\"\"\""
  - "Lib/importlib/__init__.py:9:24      	uninitialised   	U   	modules would get an uninitialised copy of the source version"
  - "Lib/importlib/__init__.py:55:37     	minimisation    	U   	and startup overhead minimisation permitting :)"
  - "Lib/importlib/__init__.py:162:17    	pkgpath         	U   	pkgpath = parent.__path__"
  - "Lib/importlib/_adapters.py:33:36    	existant	U   	for an existing or non-existant resource reader"
  - "Lib/importlib/_bootstrap_external.py:10:9       	regen       	U   	# `make regen-importlib` followed"
  - "Lib/importlib/_bootstrap_external.py:50:2       	pathseps    	U   	_pathseps_with_colon = {f':{s"
  - "Lib/importlib/_bootstrap_external.py:104:45     	splitroot   	U   	tail in map(_os._path_splitroot, path_parts):"
  - "Lib/importlib/_bootstrap_external.py:313:34     	wordcode    	U   	3.6a2 3370 (16 bit wordcode #26647)"
  - "Lib/importlib/_bootstrap_external.py:327:50     	pycs        	U   	PEP 552: Deterministic pycs #31650)"
  - "Lib/importlib/_bootstrap_external.py:348:55     	oparg       	U   	restores f_lasti if oparg != 0)"
  - "Lib/importlib/_bootstrap_external.py:352:101    	devs        	U   	to dance among core devs!)"
  - "Lib/importlib/_bootstrap_external.py:423:12     	pycache     	U   	if sys.pycache_prefix is not None:"
  - "Lib/importlib/_bootstrap_external.py:759:15     	fileattr    	U   	spec._set_fileattr = True"
  - "Lib/importlib/_bootstrap_external.py:1175:22    	unitialized 	U   	\"\"\"Create an unitialized extension module\"\"\""
  - "Lib/importlib/_bootstrap_external.py:1531:55    	smsl        	U   	class, fullname, path, smsl, target):"
  - "Lib/importlib/_bootstrap_external.py:1642:40    	cpathname   	U   	ns, name, pathname, cpathname=None):"
  - "Lib/importlib/_bootstrap.py:54:34   	weakrefs	U   	mapping module names to weakrefs of _ModuleLock instances"
  - "Lib/importlib/_bootstrap.py:93:41   	fixpoint	U   	eventually leads to a fixpoint or a cycle, but"
  - "Lib/importlib/_common.py:55:13      	cand	U   	def resolve(cand):"
  - "Lib/importlib/abc.py:37:5       	reimplementations   	U   	reimplementations of the import system"
  - "Lib/importlib/abc.py:371:33     	strm                	U   	with self.open('rb') as strm:"
  - "Lib/importlib/metadata/__init__.py:21:32    	everseen    	U   	itertools import unique_everseen"
  - "Lib/importlib/metadata/__init__.py:246:9    	recwarn     	U   	>>> recwarn = getfixture('recwarn"
  - "Lib/importlib/metadata/__init__.py:246:19   	getfixture  	U   	>>> recwarn = getfixture('recwarn')"
  - "Lib/importlib/metadata/__init__.py:650:39   	distinfo    	U   	lines = self._read_files_distinfo() or self._read_files"
  - "Lib/importlib/metadata/__init__.py:650:70   	egginfo     	U   	or self._read_files_egginfo()"
  - "Lib/importlib/metadata/__init__.py:679:9    	reqs        	U   	reqs = self._read_dist_info"
  - "Lib/importlib/metadata/_adapters.py:43:13   	redent  	U   	def redent(value):"
  - "Lib/importlib/metadata/_collections.py:4:8      	jaraco  	U   	# from jaraco.collections 3.3"
  - "Lib/importlib/readers.py:53:37      	multihomed  	U   	packages which may be multihomed at a single"
  - "Lib/importlib/resources.py:172:5    	transversable   	U   	transversable = _common.from_package"
  - "Lib/inspect.py:32:16    	Yury                    	U   	'Yury Selivanov <yselivanov"
  - "Lib/inspect.py:32:21    	Selivanov               	U   	'Yury Selivanov <yselivanov@sprymix"
  - "Lib/inspect.py:114:40   	getsets                 	U   	defined in Python) and getsets and members (defined"
  - "Lib/inspect.py:126:9    	ismemberdescriptor      	U   	def ismemberdescriptor(object):"
  - "Lib/inspect.py:143:9    	isgetsetdescriptor      	U   	def isgetsetdescriptor(object):"
  - "Lib/inspect.py:271:53   	newlocals               	U   	bitmap: 1=optimized | 2=newlocals | 4=*arg | 8=**arg"
  - "Lib/inspect.py:272:61   	nofree                  	U   	| 32=generator | 64=nofree | 128=coroutine"
  - "Lib/inspect.py:275:12   	posonlyargcount         	U   	co_posonlyargcount number of positional"
  - "Lib/inspect.py:393:12   	metaclasses             	U   	metaclasses) then the object is"
  - "Lib/inspect.py:402:5    	metamro                 	U   	metamro = getmro(type(cls))"
  - "Lib/inspect.py:427:9    	homecls                 	U   	homecls = None"
  - "Lib/inspect.py:445:25   	srch                    	U   	for srch_cls in class_bases:"
  - "Lib/inspect.py:534:5    	expline                 	U   	expline = line.expandtabs()"
  - "Lib/inspect.py:537:6    	findclass               	U   	def _findclass(func):"
  - "Lib/inspect.py:547:6    	finddoc                 	U   	def _finddoc(obj):"
  - "Lib/inspect.py:690:9    	neglen                  	U   	for neglen, suffix in suffixes"
  - "Lib/inspect.py:727:2    	filesbymodname          	U   	_filesbymodname = {}"
  - "Lib/inspect.py:765:9    	mainobject              	U   	mainobject = getattr(main, object"
  - "Lib/inspect.py:771:9    	builtinobject           	U   	builtinobject = getattr(builtin, object"
  - "Lib/inspect.py:790:21   	monkeypatches           	U   	# `doctest` monkeypatches `linecache` module to"
  - "Lib/inspect.py:899:14   	islambda                	U   	self.islambda = False"
  - "Lib/inspect.py:901:14   	passline                	U   	self.passline = False"
  - "Lib/inspect.py:902:14   	indecorator             	U   	self.indecorator = False"
  - "Lib/inspect.py:903:14   	decoratorhasargs        	U   	self.decoratorhasargs = False"
  - "Lib/inspect.py:906:39   	srowcol                 	U   	tokeneater(self, type, token, srowcol, erowcol, line):"
  - "Lib/inspect.py:906:48   	erowcol                 	U   	type, token, srowcol, erowcol, line):"
  - "Lib/inspect.py:1083:49  	kwonlydefaults          	U   	defaults, kwonlyargs, kwonlydefaults, ann = \\"
  - "Lib/inspect.py:1129:40  	sigcls                  	U   	sigcls=Signature)"
  - "Lib/inspect.py:1213:5   	formatargspec           	U   	def formatargspec(args, varargs=None,"
  - "Lib/inspect.py:1215:19  	formatarg               	U   	formatarg=str,"
  - "Lib/inspect.py:1216:19  	formatvarargs           	U   	formatvarargs=lambda name: '*' + name"
  - "Lib/inspect.py:1217:19  	formatvarkw             	U   	formatvarkw=lambda name: '**' +"
  - "Lib/inspect.py:1219:19  	formatreturns           	U   	formatreturns=lambda text: ' -> '"
  - "Lib/inspect.py:1240:9   	formatargandannotation  	U   	def formatargandannotation(arg):"
  - "Lib/inspect.py:1247:9   	firstdefault            	U   	firstdefault = len(args) - len(defaults"
  - "Lib/inspect.py:1294:32  	argnames                	U   	missing_arguments(f_name, argnames, pos, values):"
  - "Lib/inspect.py:1310:29  	kwonly                  	U   	too_many(f_name, args, kwonly, varargs, defcount,"
  - "Lib/inspect.py:1310:46  	defcount                	U   	args, kwonly, varargs, defcount, given, values):"
  - "Lib/inspect.py:1311:5   	atleast                 	U   	atleast = len(args) - defcount"
  - "Lib/inspect.py:1492:5   	framelist               	U   	framelist = []"
  - "Lib/inspect.py:1841:19  	functionlike            	U   	def _signature_is_functionlike(obj):"
  - "Lib/inspect.py:1880:5   	cpos                    	U   	cpos = spec.find(':')"
  - "Lib/inspect.py:2087:14  	isbound                 	U   	self_isbound = _self is not None"
  - "Lib/inspect.py:2271:37  	boundmethods            	U   	automatically (as for boundmethods)"
  - "Lib/inspect.py:3107:33  	analysed                	U   	help=\"The object to be analysed. \""
  - "Lib/io.py:38:21     	Verdone 	U   	\"Mike Verdone <mike.verdone@gmail"
  - "Lib/io.py:40:24     	Pitrou  	U   	\"Antoine Pitrou <solipsis@pitrou.net"
  - "Lib/io.py:41:16     	Amaury  	U   	\"Amaury Forgeot d'Arc <amauryfa"
  - "Lib/io.py:41:23     	Forgeot 	U   	\"Amaury Forgeot d'Arc <amauryfa@gmail"
  - "Lib/ipaddress.py:184:12     	righthand   	U   	def _count_righthand_zero_bits(number, bits"
  - "Lib/ipaddress.py:242:26     	prefixlen   	U   	ip_bits = first._max_prefixlen"
  - "Lib/ipaddress.py:256:59     	netblocks   	U   	collapsing concurrent netblocks."
  - "Lib/ipaddress.py:284:9      	supernet    	U   	supernet = net.supernet()"
  - "Lib/ipaddress.py:347:16     	dedup       	U   	# sort and dedup"
  - "Lib/ipaddress.py:403:32     	arpa        	U   	'1.0.0.127.in-addr.arpa'"
  - "Lib/ipaddress.py:463:13     	byteslen    	U   	byteslen = cls._max_prefixlen"
  - "Lib/ipaddress.py:520:22     	netmasks    	U   	# treated as netmasks."
  - "Lib/ipaddress.py:658:13     	padlen      	U   	padlen = self._max_prefixlen"
  - "Lib/ipaddress.py:972:55     	netblock    	U   	diff %d is invalid for netblock %s' % ("
  - "Lib/ipaddress.py:1380:41    	linklocal   	U   	in self._constants._linklocal_network"
  - "Lib/ipaddress.py:1478:25    	subnetmask  	U   	provide a subnetmask will create an object"
  - "Lib/ipaddress.py:1681:58    	hextet      	U   	be empty, but _parse_hextet() will check"
  - "Lib/ipaddress.py:1697:30    	hextets     	U   	# Now, parse the hextets into a 128-bit integer"
  - "Lib/ipaddress.py:1753:14    	doublecolon 	U   	best_doublecolon_start = -1"
  - "Lib/ipaddress.py:1994:41    	sitelocal   	U   	in self._constants._sitelocal_network"
  - "Lib/json/__init__.py:7:38       	simplejson      	U   	externally maintained simplejson library."
  - "Lib/json/__init__.py:31:9       	mydict          	U   	>>> mydict = {'4': 5, '6': 7}"
  - "Lib/json/__init__.py:104:19     	Ippolito        	U   	__author__ = 'Bob Ippolito <bob@redivi.com>'"
  - "Lib/json/__init__.py:111:5      	skipkeys        	U   	skipkeys=False,"
  - "Lib/json/__init__.py:178:9      	debuggability   	U   	# a debuggability cost"
  - "Lib/json/__init__.py:245:5      	bstartswith     	U   	bstartswith = b.startswith"
  - "Lib/json/__init__.py:334:27     	ufeff           	U   	if s.startswith('\\ufeff'):"
  - "Lib/json/decoder.py:88:5    	Unescapes       	U   	Unescapes all valid JSON string"
  - "Lib/json/decoder.py:162:5   	nextchar        	U   	nextchar = s[end:end + 1]"
  - "Lib/json/decoder.py:305:9   	deserializations	U   	deserializations (e.g. to support JSON"
  - "Lib/json/encoder.py:210:51  	bigobject   	U   	JSONEncoder().iterencode(bigobject):"
  - "Lib/json/encoder.py:211:17  	mysocket    	U   	mysocket.write(chunk)"
  - "Lib/json/encoder.py:223:13  	floatstr    	U   	def floatstr(o, allow_nan=self.allow"
  - "Lib/json/encoder.py:271:10  	intstr      	U   	_intstr=int.__repr__,"
  - "Lib/json/encoder.py:282:13  	markerid    	U   	markerid = id(lst)"
  - "Lib/keyword.py:8:47     	pegen       	U   	generator python3 -m pegen.keywordgen \\"
  - "Lib/keyword.py:8:53     	keywordgen  	U   	generator python3 -m pegen.keywordgen \\"
  - "Lib/linecache.py:100:11     	Realise 	U   	# Realise a lazy loader based"
  - "Lib/locale.py:28:55     	strcoll             	U   	resetlocale\", \"localeconv\", \"strcoll\", \"strxfrm\","
  - "Lib/locale.py:28:66     	strxfrm             	U   	localeconv\", \"strcoll\", \"strxfrm\","
  - "Lib/locale.py:70:25     	posn                	U   	'n_sign_posn': 127,"
  - "Lib/locale.py:119:15    	Georg               	U   	# improved by Georg Brandl"
  - "Lib/locale.py:119:21    	Brandl              	U   	# improved by Georg Brandl"
  - "Lib/locale.py:170:5     	lpos                	U   	lpos = 0"
  - "Lib/locale.py:174:5     	rpos                	U   	rpos = len(s) - 1"
  - "Lib/locale.py:181:65    	Gdioux              	U   	0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]')"
  - "Lib/locale.py:181:71    	Xcrs                	U   	.hlL]*?)[eEfFgGdiouxXcrs%]')"
  - "Lib/locale.py:219:13    	perc                	U   	for perc in percents:"
  - "Lib/locale.py:233:17    	starcount           	U   	starcount = perc.group('modifiers"
  - "Lib/locale.py:352:9     	langname            	U   	langname = code[:code.index("
  - "Lib/locale.py:384:15    	localename          	U   	def normalize(localename):"
  - "Lib/locale.py:461:23    	defmod              	U   	code, defmod = code.split('@', 1"
  - "Lib/locale.py:497:23    	localetuple         	U   	def _build_localename(localetuple):"
  - "Lib/locale.py:622:17    	bootlocale          	U   	import _bootlocale"
  - "Lib/locale.py:629:26    	getandroidapilevel  	U   	if hasattr(sys, 'getandroidapilevel'):"
  - "Lib/locale.py:630:26    	langinfo            	U   	# On Android langinfo.h and CODESET are missing"
  - "Lib/locale.py:631:30    	mbstowcs            	U   	# always used in mbstowcs() and wcstombs()."
  - "Lib/locale.py:631:45    	wcstombs            	U   	used in mbstowcs() and wcstombs()."
  - "Lib/locale.py:654:17    	oldloc              	U   	oldloc = setlocale(LC_CTYPE"
  - "Lib/locale.py:688:6     	ajec                	U   	'ajec':"
  - "Lib/locale.py:690:6     	microsoftcp         	U   	'microsoftcp1251':"
  - "Lib/locale.py:718:6     	tactis              	U   	'tactis':"
  - "Lib/locale.py:752:33    	makelocalealias     	U   	org distribution using makelocalealias.py."
  - "Lib/locale.py:788:15    	serbocroatian       	U   	# updated 'serbocroatian' -> 'sh_YU.ISO8859-"
  - "Lib/locale.py:863:12    	koic                	U   	'a3_az.koic':"
  - "Lib/locale.py:924:6     	bokmal              	U   	'bokmal':"
  - "Lib/locale.py:925:6     	bokm                	U   	'bokm\\xe5l':"
  - "Lib/locale.py:949:6     	cextend             	U   	'cextend':"
  - "Lib/locale.py:970:6     	dansk               	U   	'dansk':"
  - "Lib/locale.py:979:6     	deutsch             	U   	'deutsch':"
  - "Lib/locale.py:987:6     	eesti               	U   	'eesti':"
  - "Lib/locale.py:1059:12   	isiri               	U   	'fa_ir.isiri3342':"
  - "Lib/locale.py:1083:6    	galego              	U   	'galego':"
  - "Lib/locale.py:1106:12   	isciidev            	U   	'hi_in.isciidev':"
  - "Lib/locale.py:1112:6    	hrvatski            	U   	'hrvatski':"
  - "Lib/locale.py:1119:12   	armscii             	U   	'hy_am.armscii8':"
  - "Lib/locale.py:1143:12   	nunacom             	U   	'iu_ca.nunacom8':"
  - "Lib/locale.py:1150:12   	mscode              	U   	'ja_jp.mscode':"
  - "Lib/locale.py:1159:12   	georgianacademy     	U   	'ka_ge.georgianacademy': 'ka"
  - "Lib/locale.py:1160:12   	georgianps          	U   	'ka_ge.georgianps':"
  - "Lib/locale.py:1161:12   	georgianrs          	U   	'ka_ge.georgianrs':"
  - "Lib/locale.py:1193:12   	ibmcp               	U   	'lo_la.ibmcp1133':"
  - "Lib/locale.py:1194:12   	mulelao             	U   	'lo_la.mulelao1':"
  - "Lib/locale.py:1316:6    	sinhala             	U   	'sinhala':"
  - "Lib/locale.py:1369:12   	tscii               	U   	'ta_in.tscii':"
  - "Lib/locale.py:1400:12   	tatarcyr            	U   	'tt_ru.tatarcyr':"
  - "Lib/locale.py:1401:12   	iqtelif             	U   	'tt_ru@iqtelif':"
  - "Lib/locale.py:1420:12   	tcvn                	U   	'vi_vn.tcvn':"
  - "Lib/locale.py:1446:12   	euctw               	U   	'zh_tw.euctw':"
  - "Lib/locale.py:1487:24   	Azeri               	U   	0x042c: \"az_AZ\", # Azeri - Latin"
  - "Lib/locale.py:1492:24   	Begali              	U   	0x0445: \"bn_IN\", # Begali"
  - "Lib/locale.py:1511:24   	Dari                	U   	0x048c: \"gbz_AF\",# Dari - Afghanistan"
  - "Lib/locale.py:1512:24   	Divehi              	U   	0x0465: \"div_MV\",# Divehi - Maldives"
  - "Lib/locale.py:1532:24   	Faroese             	U   	0x0438: \"fo_FO\", # Faroese"
  - "Lib/locale.py:1567:24   	K'iche              	U   	0x0486: \"qut_GT\",# K'iche - Guatemala"
  - "Lib/locale.py:1568:24   	Kinyarwanda         	U   	0x0487: \"rw_RW\", # Kinyarwanda - Rwanda"
  - "Lib/locale.py:1569:24   	Konkani             	U   	0x0457: \"kok_IN\",# Konkani"
  - "Lib/locale.py:1576:24   	Luxembourgish       	U   	0x046e: \"lb_LU\", # Luxembourgish"
  - "Lib/locale.py:1579:39   	Darussalam          	U   	BN\", # Malay - Brunei Darussalam"
  - "Lib/locale.py:1583:24   	Mapudungun          	U   	0x047a: \"arn_CL\",# Mapudungun"
  - "Lib/locale.py:1589:36   	Bokmal              	U   	nb_NO\", # Norwegian - Bokmal"
  - "Lib/locale.py:1591:24   	Occitan             	U   	0x0482: \"oc_FR\", # Occitan - France"
  - "Lib/locale.py:1605:24   	Sami                	U   	0x243b: \"smn_FI\",# Sami Finland"
  - "Lib/locale.py:1611:29   	Skolt               	U   	3b: \"sms_FI\",# Sami Skolt"
  - "Lib/locale.py:1619:24   	Sinhala             	U   	0x045b: \"si_LK\", # Sinhala - Sri Lanka"
  - "Lib/locale.py:1620:33   	Sotho               	U   	\"ns_ZA\", # Northern Sotho"
  - "Lib/locale.py:1621:24   	Setswana            	U   	0x0432: \"tn_ZA\", # Setswana - Southern Africa"
  - "Lib/locale.py:1628:40   	Rica                	U   	, # Spanish - Costa Rica"
  - "Lib/locale.py:1645:20   	Sutu                	U   	# 0x0430: \"\", # Sutu - Not supported"
  - "Lib/locale.py:1651:24   	Tamazight           	U   	0x085f: \"tmz_DZ\",# Tamazight - Latin"
  - "Lib/logging/__init__.py:1:26    	Vinay       	U   	Copyright 2001-2019 by Vinay Sajip. All Rights Reserved"
  - "Lib/logging/__init__.py:1:32    	Sajip       	U   	Copyright 2001-2019 by Vinay Sajip. All Rights Reserved"
  - "Lib/logging/__init__.py:44:29   	vinay       	U   	author__ = \"Vinay Sajip <vinay_sajip@red-dove.com>"
  - "Lib/logging/__init__.py:44:35   	sajip       	U   	\"Vinay Sajip <vinay_sajip@red-dove.com>\""
  - "Lib/logging/__init__.py:170:4   	srcfile     	U   	# _srcfile is used when walking"
  - "Lib/logging/__init__.py:245:26  	weakset     	U   	at_fork_reinit_lock_weakset = weakref.WeakSet()"
  - "Lib/logging/__init__.py:284:50  	sinfo       	U   	exc_info, func=None, sinfo=None, **kwargs):"
  - "Lib/logging/__init__.py:295:31  	Behnel      	U   	Suggested by Stefan Behnel."
  - "Lib/logging/__init__.py:313:14  	levelname   	U   	self.levelname = getLevelName(level"
  - "Lib/logging/__init__.py:314:14  	levelno     	U   	self.levelno = level"
  - "Lib/logging/__init__.py:328:14  	msecs       	U   	self.msecs = (ct - int(ct)) *"
  - "Lib/logging/__init__.py:417:78  	diouxefgcrsa	U   	|\\d+)?(\\.(\\*|\\d+))?[diouxefgcrsa%]', re.I)"
  - "Lib/logging/__init__.py:450:85  	bcdefgnosx  	U   	_]?(\\.(\\d+|{\\w+}))?[bcdefgnosx%]?$', re.I)"
  - "Lib/logging/__init__.py:706:24  	linefmt     	U   	def __init__(self, linefmt=None):"
  - "Lib/logging/__init__.py:764:14  	nlen        	U   	self.nlen = len(name)"
  - "Lib/logging/__init__.py:808:34  	loggable    	U   	Determine if a record is loggable by consulting all the"
  - "Lib/logging/__init__.py:842:11  	emptively   	U   	# pre-emptively grab the necessary globals"
  - "Lib/logging/__init__.py:1255:24 	alogger     	U   	def __init__(self, alogger):"
  - "Lib/logging/__init__.py:1396:9  	namelen     	U   	namelen = len(name)"
  - "Lib/logging/__init__.py:1428:26 	Gnumeric    	U   	XLS files\" and \"read Gnumeric files\"). To cater for"
  - "Lib/logging/__init__.py:1636:26 	hdlr        	U   	def addHandler(self, hdlr):"
  - "Lib/logging/__init__.py:1907:39 	proxied     	U   	log implementation, proxied to allow nested logger"
  - "Lib/logging/__init__.py:2231:23 	showwarnings	U   	Implementation of showwarnings which redirects to logging"
  - "Lib/logging/config.py:100:19    	alist   	U   	def _strip_spaces(alist):"
  - "Lib/logging/config.py:189:5     	llist   	U   	llist = cp[\"loggers\"][\"keys"
  - "Lib/logging/config.py:235:13    	pflen   	U   	pflen = len(prefixed)"
  - "Lib/logging/config.py:669:13    	dfmt    	U   	dfmt = config.get('datefmt"
  - "Lib/logging/config.py:737:18    	mailhost	U   	'mailhost' in config:"
  - "Lib/logging/config.py:912:28    	rcvr    	U   	def __init__(self, rcvr, hdlr, port, verify"
  - "Lib/logging/handlers.py:455:31  	newsyslog       	U   	of programs such as newsyslog and logrotate which"
  - "Lib/logging/handlers.py:479:15  	statstream      	U   	self._statstream()"
  - "Lib/logging/handlers.py:483:13  	sres            	U   	sres = os.fstat(self.stream"
  - "Lib/logging/handlers.py:495:25  	fstat'ing       	U   	# once and then fstat'ing our new fd if we opened"
  - "Lib/logging/handlers.py:557:23  	backoff         	U   	# Exponential backoff parameters."
  - "Lib/logging/handlers.py:739:28  	Untz            	U   	Contributed by Nicolas Untz (after which minor refactorin"
  - "Lib/logging/handlers.py:748:44  	syslogd         	U   	one to strings in the syslogd(8) source code. This"
  - "Lib/logging/handlers.py:795:10  	emerg           	U   	\"emerg\": LOG_EMERG,"
  - "Lib/logging/handlers.py:807:10  	authpriv        	U   	\"authpriv\": LOG_AUTHPRIV,"
  - "Lib/logging/handlers.py:821:10  	uucp            	U   	\"uucp\": LOG_UUCP,"
  - "Lib/logging/handlers.py:864:18  	unixsocket      	U   	self.unixsocket = True"
  - "Lib/logging/handlers.py:865:63  	initialisation  	U   	unavailable during handler initialisation."
  - "Lib/logging/handlers.py:866:19  	openlog         	U   	# C's openlog() function also ignores"
  - "Lib/logging/handlers.py:878:13  	ress            	U   	ress = socket.getaddrinfo"
  - "Lib/logging/handlers.py:999:34  	fromaddr        	U   	init__(self, mailhost, fromaddr, toaddrs, subject,"
  - "Lib/logging/handlers.py:999:44  	toaddrs         	U   	mailhost, fromaddr, toaddrs, subject,"
  - "Lib/logging/handlers.py:1019:33 	mailport        	U   	self.mailhost, self.mailport = mailhost"
  - "Lib/logging/handlers.py:1085:24 	appname         	U   	def __init__(self, appname, dllname=None, logtype"
  - "Lib/logging/handlers.py:1085:47 	logtype         	U   	appname, dllname=None, logtype=\"Application\"):"
  - "Lib/logging/handlers.py:1088:25 	evtlogutil      	U   	import win32evtlogutil, win32evtlog"
  - "Lib/logging/handlers.py:1088:42 	evtlog          	U   	win32evtlogutil, win32evtlog"
  - "Lib/logging/handlers.py:1090:19 	welu            	U   	self._welu = win32evtlogutil"
  - "Lib/logging/handlers.py:1098:18 	deftype         	U   	self.deftype = win32evtlog.EVENTLOG"
  - "Lib/logging/handlers.py:1099:18 	typemap         	U   	self.typemap = {"
  - "Lib/logging/handlers.py:1202:30 	Glasner         	U   	Contributed by Franz Glasner."
  - "Lib/logging/handlers.py:1400:37 	centralise      	U   	multiprocessing Queue to centralise logging to file in one"
  - "Lib/logging/handlers.py:1431:36 	unpickleable    	U   	arguments, and removes unpickleable items from the record"
  - "Lib/logging/handlers.py:1443:58 	pickleable      	U   	will typically not be pickleable."
  - "Lib/mailbox.py:200:16   	mojibake        	U   	# lies mojibake."
  - "Lib/mailbox.py:268:10   	qmail           	U   	\"\"\"A qmail-style Maildir mailbox"
  - "Lib/mailbox.py:288:19   	mtimes          	U   	self._toc_mtimes = {'cur': 0, 'new':"
  - "Lib/mailbox.py:290:15   	skewfactor      	U   	self._skewfactor = 0.1 # Adjust"
  - "Lib/mailbox.py:455:9    	maildirfolder   	U   	maildirfolder_path = os.path.join"
  - "Lib/mailbox.py:473:48   	topdown         	U   	files in os.walk(path, topdown=False):"
  - "Lib/mailbox.py:493:27   	gethostname     	U   	hostname = socket.gethostname()"
  - "Lib/mailbox.py:577:8    	singlefile      	U   	class _singlefileMailbox(Mailbox):"
  - "Lib/mailbox.py:714:36   	dotlock         	U   	lock_file(self._file, dotlock=False)"
  - "Lib/mailbox.py:1241:11  	Rmail           	U   	\"\"\"An Rmail-style Babyl mailbox"
  - "Lib/mailbox.py:1668:23  	xstatus         	U   	status_flags, xstatus_flags = '', ''"
  - "Lib/mailbox.py:2064:26  	lockf           	U   	\"\"Lock file f using lockf and dot locking.\"\"\""
  - "Lib/mailbox.py:2082:63  	dotlocking      	U   	write access, just skip dotlocking."
  - "Lib/mimetypes.py:120:15     	dataurl     	U   	# dataurl := \"data:\" [ mediatype"
  - "Lib/mimetypes.py:120:38     	mediatype   	U   	dataurl := \"data:\" [ mediatype ] [ \";base64\" ] \",\""
  - "Lib/mimetypes.py:122:29     	urlchar     	U   	# data := *urlchar"
  - "Lib/mimetypes.py:228:17     	suff        	U   	for suff in suffixes:"
  - "Lib/mimetypes.py:244:24     	mimedb      	U   	def enum_types(mimedb):"
  - "Lib/mimetypes.py:256:64     	hkcr        	U   	CLASSES_ROOT, '') as hkcr:"
  - "Lib/mimetypes.py:257:17     	subkeyname  	U   	for subkeyname in enum_types(hkcr)"
  - "Lib/mimetypes.py:259:63     	subkey      	U   	hkcr, subkeyname) as subkey:"
  - "Lib/mimetypes.py:391:11     	svgz        	U   	'.svgz': '.svg.gz',"
  - "Lib/mimetypes.py:418:34     	msword      	U   	doc' : 'application/msword',"
  - "Lib/mimetypes.py:430:34     	pkcs        	U   	c' : 'application/pkcs7-mime',"
  - "Lib/mimetypes.py:434:44     	mpegurl     	U   	application/vnd.apple.mpegurl',"
  - "Lib/mimetypes.py:444:11     	bcpio       	U   	'.bcpio' : 'application/x-bcpio"
  - "Lib/mimetypes.py:445:11     	cpio        	U   	'.cpio' : 'application/x"
  - "Lib/mimetypes.py:448:11     	gtar        	U   	'.gtar' : 'application/x"
  - "Lib/mimetypes.py:461:11     	shar        	U   	'.shar' : 'application/x"
  - "Lib/mimetypes.py:468:11     	texi        	U   	'.texi' : 'application/x"
  - "Lib/mimetypes.py:470:11     	roff        	U   	'.roff' : 'application/x"
  - "Lib/mimetypes.py:470:36     	troff       	U   	: 'application/x-troff',"
  - "Lib/mimetypes.py:476:11     	ustar       	U   	'.ustar' : 'application/x-ustar"
  - "Lib/mimetypes.py:477:36     	wais        	U   	: 'application/x-wais-source',"
  - "Lib/mimetypes.py:505:39     	anymap      	U   	: 'image/x-portable-anymap',"
  - "Lib/mimetypes.py:510:30     	xbitmap     	U   	.xbm' : 'image/x-xbitmap',"
  - "Lib/mimetypes.py:511:30     	xpixmap     	U   	.xpm' : 'image/x-xpixmap',"
  - "Lib/mimetypes.py:512:30     	xwindowdump 	U   	.xwd' : 'image/x-xwindowdump',"
  - "Lib/mimetypes.py:515:11     	mhtml       	U   	'.mhtml' : 'message/rfc822"
  - "Lib/mimetypes.py:530:29     	setext      	U   	'.etx' : 'text/x-setext',"
  - "Lib/mimetypes.py:533:29     	vcard       	U   	'.vcf' : 'text/x-vcard',"
  - "Lib/mimetypes.py:541:28     	quicktime   	U   	'.mov' : 'video/quicktime',"
  - "Lib/mimetypes.py:544:30     	msvideo     	U   	.avi' : 'video/x-msvideo',"
  - "Lib/multiprocessing/__init__.py:11:30   	Oudkerk 	U   	Copyright (c) 2006-2008, R Oudkerk"
  - "Lib/multiprocessing/connection.py:191:41    	bytewise    	U   	byte-indexing of non-bytewise buffers (e.g. array"
  - "Lib/multiprocessing/connection.py:234:19    	bytesize    	U   	# Get bytesize of arbitrary buffer"
  - "Lib/multiprocessing/connection.py:288:21    	waitres     	U   	waitres = _winapi.WaitForMultipleObje"
  - "Lib/multiprocessing/connection.py:295:17    	nwritten    	U   	nwritten, err = ov.GetOverlappedResult"
  - "Lib/multiprocessing/connection.py:304:17    	bsize       	U   	bsize = 128 if maxsize is"
  - "Lib/multiprocessing/connection.py:317:25    	nread       	U   	nread, err = ov.GetOverlappedResult"
  - "Lib/multiprocessing/connection.py:346:13    	rbytes      	U   	rbytes, err = ov.GetOverlappedResult"
  - "Lib/multiprocessing/connection.py:360:50    	closesocket 	U   	close=_multiprocessing.closesocket):"
  - "Lib/multiprocessing/connection.py:407:43    	Nagle's     	U   	payload is large so Nagle's algorithm won't be triggered"
  - "Lib/multiprocessing/connection.py:608:51    	exitpriority	U   	unlink, args=(address,), exitpriority=0"
  - "Lib/multiprocessing/connection.py:846:9     	waithandle  	U   	waithandle_to_obj = {}"
  - "Lib/multiprocessing/connection.py:915:33    	epoll       	U   	descriptor, contrarily to epoll/kqueue (also, they require"
  - "Lib/multiprocessing/connection.py:915:39    	kqueue      	U   	contrarily to epoll/kqueue (also, they require"
  - "Lib/multiprocessing/connection.py:916:7     	syscall     	U   	# syscall)."
  - "Lib/multiprocessing/context.py:45:67    	cpus            	U   	determine number of cpus')"
  - "Lib/multiprocessing/context.py:116:14   	maxtasksperchild	U   	maxtasksperchild=None):"
  - "Lib/multiprocessing/context.py:122:24   	typecode        	U   	def RawValue(self, typecode_or_type, *args):"
  - "Lib/multiprocessing/forkserver.py:91:13     	allfds  	U   	allfds = [child_r, child_w"
  - "Lib/multiprocessing/forkserver.py:95:27     	sendfds 	U   	reduction.sendfds(client, allfds)"
  - "Lib/multiprocessing/forkserver.py:188:9     	sigchld 	U   	def sigchld_handler(*_unused):"
  - "Lib/multiprocessing/forkserver.py:218:21    	rfds    	U   	rfds = [key.fileobj for"
  - "Lib/multiprocessing/forkserver.py:258:41    	recvfds 	U   	fds = reduction.recvfds(s, MAXFDS_TO_SEND +"
  - "Lib/multiprocessing/heap.py:95:25   	statvfs     	U   	st = os.statvfs(d)"
  - "Lib/multiprocessing/heap.py:96:25   	bavail      	U   	if st.f_bavail * st.f_frsize >= size"
  - "Lib/multiprocessing/heap.py:96:39   	frsize      	U   	if st.f_bavail * st.f_frsize >= size: # enough free"
  - "Lib/multiprocessing/heap.py:124:15  	lastpid     	U   	self._lastpid = os.getpid()"
  - "Lib/multiprocessing/heap.py:149:17  	mallocs     	U   	self._n_mallocs = 0"
  - "Lib/multiprocessing/heap.py:206:58  	neighbours  	U   	try to merge with its neighbours in the arena"
  - "Lib/multiprocessing/heap.py:236:60  	neighbour   	U   	can be merged with a neighbour"
  - "Lib/multiprocessing/heap.py:273:11  	trylock     	U   	# trylock is used instead, and"
  - "Lib/multiprocessing/managers.py:256:35  	gettypeid       	U   	obj, exposed, gettypeid = id_to_obj[ident]"
  - "Lib/multiprocessing/managers.py:279:33  	rexposed        	U   	rident, rexposed = self.create(conn,"
  - "Lib/multiprocessing/managers.py:339:59  	refcounting     	U   	to spot problems with refcounting"
  - "Lib/multiprocessing/managers.py:378:50  	proxytype       	U   	exposed, method_to_typeid, proxytype = \\"
  - "Lib/multiprocessing/managers.py:758:17  	idset           	U   	tls_idset = BaseProxy._address"
  - "Lib/multiprocessing/managers.py:805:10  	callmethod      	U   	def _callmethod(self, methodname, args"
  - "Lib/multiprocessing/managers.py:899:28  	isauto          	U   	if getattr(self, '_isauto', False):"
  - "Lib/multiprocessing/managers.py:1070:13 	endtime         	U   	endtime = time.monotonic()"
  - "Lib/multiprocessing/managers.py:1073:13 	waittime        	U   	waittime = None"
  - "Lib/multiprocessing/managers.py:1344:26 	monkeypatching  	U   	'Better than monkeypatching for now; merge into"
  - "Lib/multiprocessing/pool.py:97:12   	inqueue     	U   	def worker(inqueue, outqueue, initializer"
  - "Lib/multiprocessing/pool.py:97:21   	outqueue    	U   	def worker(inqueue, outqueue, initializer=None, initargs"
  - "Lib/multiprocessing/pool.py:97:62   	maxtasks    	U   	nitializer=None, initargs=(), maxtasks=None,"
  - "Lib/multiprocessing/pool.py:101:31  	Maxtasks    	U   	raise AssertionError(\"Maxtasks {!r} is not valid\".format"
  - "Lib/multiprocessing/pool.py:192:15  	taskqueue   	U   	self._taskqueue = queue.SimpleQueue"
  - "Lib/multiprocessing/pool.py:409:22  	Chunksize   	U   	\"Chunksize must be 1+, not {0:n"
  - "Lib/multiprocessing/pool.py:528:13  	taskseq     	U   	for taskseq, set_length in iter"
  - "Lib/multiprocessing/pool.py:696:48  	hander      	U   	have cache with result_hander not alive\")"
  - "Lib/multiprocessing/popen_spawn_win32.py:19:47      	pythonservice   	U   	executable.lower().endswith(\"pythonservice.exe\")"
  - "Lib/multiprocessing/popen_spawn_win32.py:53:9       	rhandle         	U   	rhandle, whandle = _winapi.CreatePipe"
  - "Lib/multiprocessing/popen_spawn_win32.py:53:18      	whandle         	U   	rhandle, whandle = _winapi.CreatePipe"
  - "Lib/multiprocessing/process.py:123:19   	refcycle    	U   	# Avoid a refcycle if the target function"
  - "Lib/multiprocessing/process.py:400:26   	semprefix   	U   	'semprefix': '/mp'}"
  - "Lib/multiprocessing/queues.py:44:15     	opid            	U   	self._opid = os.getpid()"
  - "Lib/multiprocessing/queues.py:46:19     	wlock           	U   	self._wlock = None"
  - "Lib/multiprocessing/queues.py:78:15     	jointhread      	U   	self._jointhread = None"
  - "Lib/multiprocessing/queues.py:79:15     	joincancelled   	U   	self._joincancelled = False"
  - "Lib/multiprocessing/queues.py:121:11    	unserialize     	U   	# unserialize the data after having"
  - "Lib/multiprocessing/queues.py:212:45    	writelock       	U   	notempty, send_bytes, writelock, reader_close,"
  - "Lib/multiprocessing/queues.py:215:9     	nacquire        	U   	nacquire = notempty.acquire"
  - "Lib/multiprocessing/queues.py:216:9     	nrelease        	U   	nrelease = notempty.release"
  - "Lib/multiprocessing/queues.py:217:9     	nwait           	U   	nwait = notempty.wait"
  - "Lib/multiprocessing/queues.py:218:9     	bpopleft        	U   	bpopleft = buffer.popleft"
  - "Lib/multiprocessing/queues.py:221:13    	wacquire        	U   	wacquire = writelock.acquire"
  - "Lib/multiprocessing/queues.py:222:13    	wrelease        	U   	wrelease = writelock.release"
  - "Lib/multiprocessing/reduction.py:30:3       	Pickler 	U   	# Pickler subclass"
  - "Lib/multiprocessing/reduction.py:157:14     	ancdata 	U   	msg, ancdata, flags, addr = sock"
  - "Lib/multiprocessing/reduction.py:166:13     	cmsg    	U   	cmsg_level, cmsg_type, cmsg"
  - "Lib/multiprocessing/resource_sharer.py:40:31    	fromshare   	U   	return socket.fromshare(share)"
  - "Lib/multiprocessing/resource_sharer.py:70:57    	afterfork   	U   	self, _ResourceSharer._afterfork)"
  - "Lib/multiprocessing/resource_sharer.py:134:29   	pthread     	U   	if hasattr(signal, 'pthread_sigmask'):"
  - "Lib/multiprocessing/resource_sharer.py:134:37   	sigmask     	U   	hasattr(signal, 'pthread_sigmask'):"
  - "Lib/multiprocessing/resource_tracker.py:15:35   	killall     	U   	resource tracker process, \"killall python\" would probably"
  - "Lib/multiprocessing/resource_tracker.py:38:13   	posixshmem  	U   	import _posixshmem"
  - "Lib/multiprocessing/resource_tracker.py:153:30  	rtype       	U   	register(self, name, rtype):"
  - "Lib/multiprocessing/shared_memory.py:36:25      	wnsm	U   	_SHM_NAME_PREFIX = 'wnsm_'"
  - "Lib/multiprocessing/sharedctypes.py:31:43   	ulonglong   	U   	longlong, 'Q': ctypes.c_ulonglong,"
  - "Lib/multiprocessing/sharedctypes.py:229:11  	getslice    	U   	def __getslice__(self, start, stop"
  - "Lib/multiprocessing/synchronize.py:50:37    	maxvalue	U   	(self, kind, value, maxvalue, *, ctx):"
  - "Lib/multiprocessing/synchronize.py:277:47   	rezero  	U   	from sleeping_count and rezero woken_count"
  - "Lib/multiprocessing/util.py:79:25   	exithandlers    	U   	atexit._exithandlers.remove((_exit_function"
  - "Lib/multiprocessing/util.py:146:44  	pymp            	U   	tempfile.mkdtemp(prefix='pymp-')"
  - "Lib/multiprocessing/util.py:156:15  	reinitialization	U   	# Support for reinitialization of objects when bootstrapping"
  - "Lib/multiprocessing/util.py:189:18  	Exitpriority    	U   	\"Exitpriority ({0!r}) must be None"
  - "Lib/multiprocessing/util.py:268:10  	finalizers      	U   	def _run_finalizers(minpriority=None):"
  - "Lib/multiprocessing/util.py:268:21  	minpriority     	U   	def _run_finalizers(minpriority=None):"
  - "Lib/multiprocessing/util.py:272:5   	Finalizers      	U   	Finalizers with highest priority"
  - "Lib/multiprocessing/util.py:405:12  	closerange      	U   	os.closerange(fds[i]+1, fds[i+1])"
  - "Lib/multiprocessing/util.py:447:32  	passfds         	U   	passfds(path, args, passfds):"
  - "Lib/multiprocessing/util.py:450:5   	errpipe         	U   	errpipe_read, errpipe_write"
  - "Lib/netrc.py:39:15      	commenters  	U   	lexer.commenters = lexer.commenters.replace"
  - "Lib/netrc.py:41:47      	macdef      	U   	machine, default, or macdef top-level keyword"
  - "Lib/netrc.py:48:27      	instream    	U   	lexer.instream.readline()"
  - "Lib/netrc.py:51:17      	entryname   	U   	entryname = lexer.get_token()"
  - "Lib/netrc.py:54:71      	macdefs     	U   	Just skip to end of macdefs"
  - "Lib/netrc.py:96:33      	fowner      	U   	fowner = pwd.getpwuid(prop"
  - "Lib/nntplib.py:30:20    	Kantor              	U   	# RFC 977 by Brian Kantor and Phil Lapsley."
  - "Lib/nntplib.py:30:36    	Lapsley             	U   	Brian Kantor and Phil Lapsley."
  - "Lib/nntplib.py:31:10    	xgtitle             	U   	# xover, xgtitle, xpath, date methods"
  - "Lib/nntplib.py:31:42    	Kevan               	U   	xpath, date methods by Kevan Heydon"
  - "Lib/nntplib.py:31:48    	Heydon              	U   	date methods by Kevan Heydon"
  - "Lib/nntplib.py:313:18   	readermode          	U   	readermode=None, usenetrc=False"
  - "Lib/nntplib.py:313:35   	usenetrc            	U   	readermode=None, usenetrc=False,"
  - "Lib/nntplib.py:360:57   	setreadermode       	U   	some NNTP servers. If _setreadermode() fails"
  - "Lib/nntplib.py:365:25   	afterauth           	U   	self.readermode_afterauth = False"
  - "Lib/nntplib.py:490:10   	getlongresp         	U   	def _getlongresp(self, file=None):"
  - "Lib/nntplib.py:536:10   	shortcmd            	U   	def _shortcmd(self, line):"
  - "Lib/nntplib.py:542:10   	longcmd             	U   	def _longcmd(self, line, file=None"
  - "Lib/nntplib.py:548:10   	longcmdstring       	U   	def _longcmdstring(self, line, file=None"
  - "Lib/nntplib.py:558:10   	getoverviewfmt      	U   	def _getoverviewfmt(self):"
  - "Lib/nntplib.py:562:26   	cachedoverviewfmt   	U   	return self._cachedoverviewfmt"
  - "Lib/nntplib.py:575:10   	grouplist           	U   	def _grouplist(self, lines):"
  - "Lib/nntplib.py:640:10   	getdescriptions     	U   	def _getdescriptions(self, group_pattern"
  - "Lib/nntplib.py:716:10   	statparse           	U   	def _statparse(self, resp):"
  - "Lib/nntplib.py:726:10   	statcmd             	U   	def _statcmd(self, line):"
  - "Lib/nntplib.py:753:10   	artcmd              	U   	def _artcmd(self, line, file=None"
  - "Lib/nntplib.py:957:32   	authinfo            	U   	resp = self._shortcmd('authinfo user ' + user)"
  - "Lib/nntplib.py:1047:51  	gmane               	U   	'--group', default='gmane.comp.python.general"
  - "Lib/nntplib.py:1082:9   	artnum              	U   	for artnum, over in overviews:"
  - "Lib/ntpath.py:35:10     	bothseps            	U   	def _get_bothseps(path):"
  - "Lib/ntpath.py:149:26    	drivespec           	U   	is always true that drivespec + pathspec == p"
  - "Lib/ntpath.py:149:38    	pathspec            	U   	true that drivespec + pathspec == p"
  - "Lib/ntpath.py:179:9     	normp               	U   	normp = p.replace(altsep,"
  - "Lib/ntpath.py:183:25    	mountpoint          	U   	# \\\\machine\\mountpoint\\directory\\etc\\..."
  - "Lib/ntpath.py:281:43    	reparse             	U   	volumes (querying the reparse tag) fails for the most"
  - "Lib/ntpath.py:285:21    	getvolumepathname   	U   	from nt import _getvolumepathname"
  - "Lib/ntpath.py:331:9     	userhome            	U   	userhome = os.environ['USERPROFILE"
  - "Lib/ntpath.py:385:9     	varchars            	U   	varchars = bytes(string.ascii"
  - "Lib/ntpath.py:391:32    	environb            	U   	environ = getattr(os, 'environb', None)"
  - "Lib/ntpath.py:541:10    	getfullpathname     	U   	`nt._getfullpathname` is not available or"
  - "Lib/ntpath.py:549:22    	getcwdb             	U   	cwd = os.getcwdb()"
  - "Lib/ntpath.py:571:21    	getfinalpathname    	U   	from nt import _getfinalpathname, readlink as _nt_readlink"
  - "Lib/ntpath.py:618:27    	nonstrict           	U   	def _getfinalpathname_nonstrict(path):"
  - "Lib/ntpath.py:632:54    	unfollowable        	U   	RESOLVE_FILENAME (implies unfollowable symlink)"
  - "Lib/ntpath.py:700:17    	spath               	U   	spath = new_unc_prefix + path"
  - "Lib/ntpath.py:792:9     	drivesplits         	U   	drivesplits = [splitdrive(p.replace"
  - "Lib/opcode.py:7:23      	hasarg  	U   	all__ = [\"cmp_op\", \"hasarg\", \"hasconst\", \"hasname"
  - "Lib/opcode.py:8:50      	hasexc  	U   	hascompare\", \"hasfree\", \"hasexc\", \"opname\", \"opmap\""
  - "Lib/opcode.py:39:1      	oplists 	U   	oplists = [hasarg, hasconst"
  - "Lib/opcode.py:67:9      	oplist  	U   	for oplist in oplists:"
  - "Lib/opcode.py:397:6     	deopt   	U   	\"deopt\","
  - "Lib/opcode.py:429:10    	descr   	U   	\"descr\": 4,"
  - "Lib/operator.py:188:24  	presizing   	U   	This is useful for presizing containers when building"
  - "Lib/optparse.py:5:27    	Optik           	U   	Originally distributed as Optik."
  - "Lib/optparse.py:85:44   	gward           	U   	006-06-11 16:22:03Z gward"
  - "Lib/optparse.py:298:35  	metavars        	U   	the opt strings and metavars"
  - "Lib/optparse.py:350:62  	metavariables   	U   	of option strings & metavariables.\"\"\""
  - "Lib/optparse.py:353:50  	sopt            	U   	self._short_opt_fmt % (sopt, metavar)"
  - "Lib/optparse.py:355:48  	lopt            	U   	self._long_opt_fmt % (lopt, metavar)"
  - "Lib/optparse.py:852:17  	dval            	U   	dval = dict[attr]"
  - "Lib/optparse.py:1138:12 	ablah           	U   	-ablah foo bar -bboo baz"
  - "Lib/optparse.py:1138:27 	bboo            	U   	-ablah foo bar -bboo baz"
  - "Lib/optparse.py:1156:7  	rargs           	U   	rargs : [string]"
  - "Lib/optparse.py:1161:7  	largs           	U   	largs : [string]"
  - "Lib/optparse.py:1652:22 	wordmap         	U   	def _match_abbrev(s, wordmap):"
  - "Lib/os.py:20:5      	opendir         	U   	and opendir), and leave all pathname"
  - "Lib/os.py:116:30    	mkfifo          	U   	\"HAVE_MKFIFOAT\", \"mkfifo\")"
  - "Lib/os.py:117:30    	mknod           	U   	\"HAVE_MKNODAT\", \"mknod\")"
  - "Lib/os.py:142:30    	pathconf        	U   	\"HAVE_FPATHCONF\", \"pathconf\")"
  - "Lib/os.py:143:40    	fstatvfs        	U   	statvfs\") and _exists(\"fstatvfs\"): # mac os x10.3"
  - "Lib/os.py:156:7     	fchmodat        	U   	# fchmodat(). (Examples: Linux"
  - "Lib/os.py:172:30    	chflags         	U   	\"HAVE_LCHFLAGS\", \"chflags\")"
  - "Lib/os.py:174:17    	lchown          	U   	if _exists(\"lchown\"): # mac os x10.3"
  - "Lib/os.py:191:39    	posixmodule     	U   	constants if necessary in posixmodule.c"
  - "Lib/os.py:219:9     	cdir            	U   	cdir = curdir"
  - "Lib/os.py:346:5     	nondirs         	U   	nondirs = []"
  - "Lib/os.py:430:9     	fwalk           	U   	def fwalk(top=\".\", topdown=True"
  - "Lib/os.py:435:43    	dirfd           	U   	dirnames, filenames, dirfd"
  - "Lib/os.py:455:32    	rootfd          	U   	for root, dirs, files, rootfd in os.fwalk('python"
  - "Lib/os.py:470:9     	topfd           	U   	topfd = open(top, O_RDONLY"
  - "Lib/os.py:479:23    	toppath         	U   	def _fwalk(topfd, toppath, isbytes, topdown, onerror"
  - "Lib/os.py:479:32    	isbytes         	U   	fwalk(topfd, toppath, isbytes, topdown, onerror, follow"
  - "Lib/os.py:590:9     	argrest         	U   	argrest = (args, env)"
  - "Lib/os.py:646:22    	listb           	U   	path_listb = env[b'PATH']"
  - "Lib/os.py:667:30    	encodekey       	U   	_init__(self, data, encodekey, decodekey, encodevalue"
  - "Lib/os.py:667:41    	decodekey       	U   	self, data, encodekey, decodekey, encodevalue, decodevalue"
  - "Lib/os.py:667:52    	encodevalue     	U   	encodekey, decodekey, encodevalue, decodevalue):"
  - "Lib/os.py:667:65    	decodevalue     	U   	decodekey, encodevalue, decodevalue):"
  - "Lib/os.py:689:9     	encodedkey      	U   	encodedkey = self.encodekey(key"
  - "Lib/os.py:737:6     	createenviron   	U   	def _createenviron():"
  - "Lib/os.py:792:9     	getenvb         	U   	def getenvb(key, default=None):"
  - "Lib/os.py:800:6     	fscodec         	U   	def _fscodec():"
  - "Lib/os.py:845:10    	spawnvef        	U   	def _spawnvef(mode, file, args, env"
  - "Lib/os.py:866:17    	wpid            	U   	wpid, sts = waitpid(pid,"
  - "Lib/os.py:881:9     	spawnve         	U   	def spawnve(mode, file, args, env"
  - "Lib/os.py:891:13    	spawnvp         	U   	# Note: spawnvp[e] isn't currently supported"
  - "Lib/os.py:903:9     	spawnvpe        	U   	def spawnvpe(mode, file, args, env"
  - "Lib/os.py:921:9     	spawnl          	U   	def spawnl(mode, file, *args):"
  - "Lib/os.py:930:9     	spawnle         	U   	def spawnle(mode, file, *args):"
  - "Lib/os.py:947:24    	spawnlp         	U   	# so it won't have spawnlp[e] either."
  - "Lib/os.py:958:9     	spawnlpe        	U   	def spawnlpe(mode, file, *args):"
  - "Lib/os.py:974:21    	vxworks         	U   	if sys.platform != 'vxworks':"
  - "Lib/pathlib.py:122:5    	pathmod     	U   	pathmod = ntpath"
  - "Lib/pathlib.py:140:38   	Harddisk    	U   	\\??\\C:' => '\\Device\\HarddiskVolume2'."
  - "Lib/pathlib.py:272:9    	bpath       	U   	bpath = bytes(path)"
  - "Lib/pathlib.py:323:19   	utimensat   	U   	# the utimensat() / futimens() functions"
  - "Lib/pathlib.py:323:33   	futimens    	U   	# the utimensat() / futimens() functions."
  - "Lib/pathlib.py:353:24   	getgrgid    	U   	return grp.getgrgid(self.stat(path).st_gid"
  - "Lib/pathlib.py:368:3    	Globbing    	U   	# Globbing helpers"
  - "Lib/pathlib.py:513:20   	pathcls     	U   	__slots__ = ('_pathcls', '_drv', '_root',"
  - "Lib/pathlib.py:554:28   	pparts      	U   	'_str', '_hash', '_pparts', '_cached_cparts',"
  - "Lib/pathlib.py:554:46   	cparts      	U   	'_pparts', '_cached_cparts',"
  - "Lib/pathlib.py:659:18   	casefolded  	U   	# Cached casefolded parts, for hashing and"
  - "Lib/pathlib.py:1074:19  	eloop       	U   	def check_eloop(e):"
  - "Lib/pdb.py:51:13    	pdbrc       	U   	If a file \".pdbrc\" exists in your home"
  - "Lib/pdb.py:56:26    	readrc      	U   	disabled by passing the \"readrc=False\" argument to the"
  - "Lib/pdb.py:116:5    	linestarts  	U   	linestarts = list(dis.findlinestarts"
  - "Lib/pdb.py:124:8    	rstr        	U   	class _rstr(str):"
  - "Lib/pdb.py:151:14   	mainpyfile  	U   	self.mainpyfile = ''"
  - "Lib/pdb.py:161:20   	kbdint      	U   	self.allow_kbdint = False"
  - "Lib/pdb.py:179:23   	doprompt    	U   	self.commands_doprompt = {} # for each bp num"
  - "Lib/pdb.py:180:59   	execing     	U   	must be disp. after execing the cmd list"
  - "Lib/pdb.py:185:23   	bnum        	U   	self.commands_bnum = None # The breakpoint"
  - "Lib/pdb.py:202:14   	curindex    	U   	self.curindex = 0"
  - "Lib/pdb.py:203:14   	curframe    	U   	self.curframe = None"
  - "Lib/pdb.py:304:53   	subgenerator	U   	interpreter when handling a subgenerator run with"
  - "Lib/pdb.py:307:25   	debuggee    	U   	# stop when the debuggee is returning from such"
  - "Lib/pdb.py:332:34   	getval      	U   	newvalue = self._getval_except(expr)"
  - "Lib/pdb.py:437:9    	cmdlist     	U   	cmdlist = self.commands[self"
  - "Lib/pdb.py:466:62   	tbreak      	U   	function location for break/tbreak/clear."
  - "Lib/pdb.py:484:19   	bpnumber    	U   	def _complete_bpnumber(self, text, line, begidx"
  - "Lib/pdb.py:600:14   	reak        	U   	\"\"\"b(reak) [ ([filename:]lineno"
  - "Lib/pdb.py:616:48   	Disp        	U   	message(\"Num Type Disp Enb Where\")"
  - "Lib/pdb.py:663:50   	bkpt        	U   	name to identify the bkpt (function names"
  - "Lib/pdb.py:855:21   	countstr    	U   	countstr = '%d crossings' % count"
  - "Lib/pdb.py:903:9    	numberlist  	U   	numberlist = arg.split()"
  - "Lib/pdb.py:949:13   	newframe    	U   	newframe = 0"
  - "Lib/pdb.py:1036:14  	eturn       	U   	\"\"\"r(eturn)"
  - "Lib/pdb.py:1044:18  	inue        	U   	\"\"\"c(ont(inue))"
  - "Lib/pdb.py:1240:9   	breaklist   	U   	breaklist = self.get_file_breaks"
  - "Lib/pdb.py:1253:12  	longlist    	U   	\"\"\"longlist | ll"
  - "Lib/pdb.py:1305:12  	whatis      	U   	\"\"\"whatis arg"
  - "Lib/pdb.py:1359:12  	undisplay   	U   	\"\"\"undisplay [expression]"
  - "Lib/pdb.py:1422:12  	unalias     	U   	\"\"\"unalias name"
  - "Lib/pdb.py:1530:10  	runmodule   	U   	def _runmodule(self, module_name):"
  - "Lib/pdb.py:1647:45  	pyfile      	U   	command] ... [-m module | pyfile] [arg] ..."
  - "Lib/pickle.py:3:59      	picklers    	U   	for registering custom picklers."
  - "Lib/pickle.py:9:5       	Unpickler   	U   	Unpickler"
  - "Lib/pickle.py:125:45    	argtuple    	U   	# apply callable to argtuple, both on stack"
  - "Lib/pickle.py:171:2     	tuplesize   	U   	_tuplesize2code = [EMPTY_TUPLE"
  - "Lib/pickle.py:263:8     	Unframer    	U   	class _Unframer:"
  - "Lib/pickle.py:467:23    	pickler's   	U   	\"\"\"Clears the pickler's \"memo\"."
  - "Lib/pickle.py:497:26    	Unpickler's 	U   	# the key in the Unpickler's memo. The object is"
  - "Lib/pickle.py:541:23    	pers        	U   	self.save_pers(pid)"
  - "Lib/pickle.py:621:51    	listitems   	U   	func, args, state=None, listitems=None,"
  - "Lib/pickle.py:622:21    	dictitems   	U   	dictitems=None, state_setter=None"
  - "Lib/pickle.py:825:18    	picklebuffer	U   	def save_picklebuffer(self, obj):"
  - "Lib/pickle.py:1197:15   	unframer    	U   	self._unframer = _Unframer(self._file"
  - "Lib/pickle.py:1201:14   	metastack   	U   	self.metastack = []"
  - "Lib/pickle.py:1214:25   	stopinst    	U   	except _Stop as stopinst:"
  - "Lib/pickle.py:1411:36   	toreadonly  	U   	self.stack[-1] = m.toreadonly()"
  - "Lib/pickle.py:1505:35   	classobject 	U   	Stack is ... markobject classobject arg1 arg2 ..."
  - "Lib/pickletools.py:9:34     	indentlevel 	U   	out=None, memo=None, indentlevel=4)"
  - "Lib/pickletools.py:26:10    	formedness  	U   	# well-formedness. dis() does a lot of"
  - "Lib/pickletools.py:50:62    	bytestream  	U   	opcode in the pickle bytestream. Other"
  - "Lib/pickletools.py:315:35   	stripquotes 	U   	stringnl(f, decode=True, stripquotes=True):"
  - "Lib/pickletools.py:351:39   	strinq      	U   	raise ValueError(\"strinq quote %r not found at"
  - "Lib/pickletools.py:541:9    	bigsize     	U   	>>> bigsize8 = struct.pack(\"<Q\""
  - "Lib/pickletools.py:955:10   	obtype      	U   	'obtype',"
  - "Lib/pickletools.py:1178:19  	unpicklers  	U   	(and later) unpicklers special-case these and"
  - "Lib/pickletools.py:1230:7   	unpickles   	U   	unpickles to a Python long. There"
  - "Lib/pickletools.py:1725:20  	frozensets  	U   	# Way to build frozensets"
  - "Lib/pickletools.py:2232:9   	picklecode  	U   	picklecode = getattr(pickle, name"
  - "Lib/pickletools.py:2332:5   	oldids      	U   	oldids = set() # set"
  - "Lib/pickletools.py:2333:5   	newids      	U   	newids = {} # set"
  - "Lib/pickletools.py:2336:5   	protoheader 	U   	protoheader = b''"
  - "Lib/pickletools.py:2372:9   	frameless   	U   	frameless = False"
  - "Lib/pickletools.py:2443:5   	maxproto    	U   	maxproto = -1 # max protocol"
  - "Lib/pickletools.py:2444:5   	markstack   	U   	markstack = [] # bytecode"
  - "Lib/pickletools.py:2445:5   	indentchunk 	U   	indentchunk = ' ' * indentlevel"
  - "Lib/pickletools.py:2446:5   	errormsg    	U   	errormsg = None"
  - "Lib/pickletools.py:2447:5   	annocol     	U   	annocol = annotate # column"
  - "Lib/pickletools.py:2459:9   	numtopop    	U   	numtopop = len(before)"
  - "Lib/pickletools.py:2462:9   	markmsg     	U   	markmsg = None"
  - "Lib/pickletools.py:2471:17  	markpos     	U   	markpos = markstack.pop()"
  - "Lib/pkgutil.py:4:41     	simplegeneric   	U   	import singledispatch as simplegeneric"
  - "Lib/pkgutil.py:22:59    	ispkg           	U   	'module_finder name ispkg')"
  - "Lib/pkgutil.py:168:17   	dircontents     	U   	dircontents = os.listdir(path)"
  - "Lib/pkgutil.py:173:17   	subname         	U   	subname = inspect.getmodulename"
  - "Lib/pkgutil.py:543:5    	sname           	U   	sname_pkg = name + \".pkg\""
  - "Lib/pkgutil.py:579:43   	subpackages     	U   	the right thing for subpackages like zope.app?"
  - "Lib/pkgutil.py:579:60   	zope            	U   	for subpackages like zope.app?"
  - "Lib/pkgutil.py:581:9    	pkgfile         	U   	pkgfile = os.path.join(dir,"
  - "Lib/pkgutil.py:650:42   	regexes         	U   	period in these pseudo-regexes:"
  - "Lib/pkgutil.py:671:39   	recognised      	U   	if `name` isn't in a recognised format"
  - "Lib/platform.py:13:70   	lemburg     	U   	and assign them to \"lemburg\"."
  - "Lib/platform.py:23:18   	Waldman     	U   	# Charles G Waldman, David Arnold, Gordon"
  - "Lib/platform.py:24:45   	Laningham   	U   	Cliff Crawford, Ivan Van Laningham, Josef"
  - "Lib/platform.py:25:8    	Betancourt  	U   	# Betancourt, Randall Hopper, Karl"
  - "Lib/platform.py:25:41   	Putland     	U   	Randall Hopper, Karl Putland, John Farrell, Greg"
  - "Lib/platform.py:26:8    	Andruk      	U   	# Andruk, Just van Rossum, Thomas"
  - "Lib/platform.py:26:56   	Levinson    	U   	Thomas Heller, Mark R. Levinson, Mark"
  - "Lib/platform.py:27:22   	Tutt        	U   	Hammond, Bill Tutt, Hans Nowak, Uwe Zessin"
  - "Lib/platform.py:27:33   	Nowak       	U   	Hammond, Bill Tutt, Hans Nowak, Uwe Zessin (OpenVMS"
  - "Lib/platform.py:27:44   	Zessin      	U   	Tutt, Hans Nowak, Uwe Zessin (OpenVMS support),"
  - "Lib/platform.py:33:23   	checkin     	U   	<see CVS and SVN checkin messages for history"
  - "Lib/platform.py:48:36   	untabified  	U   	some fixes for WinCE; untabified the source file"
  - "Lib/platform.py:50:22   	getsyi      	U   	vms_lib.getsyi() configured"
  - "Lib/platform.py:59:30   	syscmd      	U   	workarounds in _syscmd_ver() -- still not"
  - "Lib/platform.py:179:22  	confstr     	U   	ver = os.confstr('CS_GNU_LIBC_VERSION"
  - "Lib/platform.py:212:13  	libcinit    	U   	libcinit, glibc, glibcversion"
  - "Lib/platform.py:212:30  	glibcversion	U   	libcinit, glibc, glibcversion, so, threads, soversion"
  - "Lib/platform.py:212:57  	soversion   	U   	glibcversion, so, threads, soversion = ["
  - "Lib/platform.py:340:35  	TUAP        	U   	win32_edition() in ('IoTUAP', 'NanoServer', 'WindowsCoreH"
  - "Lib/platform.py:352:13  	cvkey       	U   	cvkey = r'SOFTWARE\\Microsoft"
  - "Lib/platform.py:424:5   	versioninfo 	U   	versioninfo = ('', '', '')"
  - "Lib/platform.py:452:11  	getprop     	U   	def _java_getprop(name, default):"
  - "Lib/platform.py:463:37  	vminfo      	U   	release='', vendor='', vminfo=('', '', ''), osinfo"
  - "Lib/platform.py:463:58  	osinfo      	U   	vminfo=('', '', ''), osinfo=('', '', '')):"
  - "Lib/platform.py:670:9   	fileout     	U   	fileout = _syscmd_file(executable"
  - "Lib/platform.py:744:13  	csid        	U   	csid, cpu_number = vms_lib"
  - "Lib/platform.py:949:50  	amdk        	U   	processor name, e.g. 'amdk6'"
  - "Lib/platform.py:963:26  	buildno     	U   	r'\\(#?([^,]+)' # \"(#buildno\""
  - "Lib/platform.py:964:30  	builddate   	U   	,\\s*([\\w ]*)' # \", builddate\""
  - "Lib/platform.py:965:40  	buildtime   	U   	]*))?)?\\)\\s*' # \", buildtime)<space>\""
  - "Lib/platform.py:968:2   	ironpython  	U   	_ironpython_sys_version_parser"
  - "Lib/platform.py:1186:17 	parseable   	U   	machine parseable. It may look different"
  - "Lib/platform.py:1228:9  	libcname    	U   	libcname, libcversion = libc"
  - "Lib/platform.py:1228:19 	libcversion 	U   	libcname, libcversion = libc_ver()"
  - "Lib/platform.py:1254:5  	freedesktop 	U   	### freedesktop.org os-release standard"
  - "Lib/platform.py:1316:21 	nonaliased  	U   	aliased = (not 'nonaliased' in sys.argv and not"
  - "Lib/plistlib.py:31:35   	ssig            	U   	aUnicodeValue = \"M\\xe4ssig, Ma\\xdf\","
  - "Lib/plistlib.py:112:23  	maxlinelength   	U   	def _encode_base64(s, maxlinelength=76):"
  - "Lib/plistlib.py:181:68  	vulnerabilies   	U   	declarations to avoid XML vulnerabilies in expat."
  - "Lib/plistlib.py:182:51  	declerations    	U   	don't contain those declerations, and Apple's plutil"
  - "Lib/plistlib.py:182:77  	plutil          	U   	declerations, and Apple's plutil tool does not"
  - "Lib/plistlib.py:463:15  	refid           	U   	# refid->offset..."
  - "Lib/plistlib.py:473:35  	BBQQQ           	U   	= struct.unpack('>6xBBQQQ', trailer)"
  - "Lib/plistlib.py:548:37  	plists          	U   	timestamp 0 of binary plists corresponds to 1/1/"
  - "Lib/plistlib.py:574:27  	Archiver        	U   	# used by Key-Archiver plist files"
  - "Lib/plistlib.py:584:44  	ordset          	U   	xB0 is documented as 'ordset', but is not actually"
  - "Lib/plistlib.py:631:15  	objlist         	U   	self._objlist = []"
  - "Lib/plistlib.py:637:15  	objtable        	U   	self._objtable = {}"
  - "Lib/plistlib.py:638:15  	objidtable      	U   	self._objidtable = {}"
  - "Lib/plistlib.py:658:17  	refnum          	U   	# Write refnum->object offset table"
  - "Lib/plistlib.py:659:28  	getrefnum       	U   	top_object = self._getrefnum(value)"
  - "Lib/plistlib.py:671:40  	BBBQQQ          	U   	write(struct.pack('>5xBBBQQQ', *trailer))"
  - "Lib/plistlib.py:675:41  	subcontainers   	U   	containers to ensure that two subcontainers with the same contents"
  - "Lib/plistlib.py:684:18  	objectreference 	U   	# Add to objectreference map"
  - "Lib/posixpath.py:262:13     	pwent       	U   	pwent = pwd.getpwnam(name"
  - "Lib/posixpath.py:284:2      	varprog     	U   	_varprog = None"
  - "Lib/posixpath.py:285:2      	varprogb    	U   	_varprogb = None"
  - "Lib/posixpath.py:347:9      	dotdot      	U   	dotdot = b'..'"
  - "Lib/posixpath.py:398:17     	joinrealpath	U   	path, ok = _joinrealpath(filename[:0], filename"
  - "Lib/posixpath.py:431:9      	newpath     	U   	newpath = join(path, name)"
  - "Lib/pprint.py:81:55     	unorderable 	U   	functions when sorting unorderable objects."
  - "Lib/pprint.py:246:9     	endchar     	U   	endchar = ',)' if len(object"
  - "Lib/pprint.py:381:9     	delimnl     	U   	delimnl = ',\\n' + ' ' * indent"
  - "Lib/pprint.py:532:32    	smaxlen     	U   	stream.write('],\\n%smaxlen=%s)' % (' ' * indent"
  - "Lib/pprint.py:584:17    	krepr       	U   	krepr, kreadable, krecur"
  - "Lib/pprint.py:584:24    	kreadable   	U   	krepr, kreadable, krecur = self.format"
  - "Lib/pprint.py:584:35    	krecur      	U   	krepr, kreadable, krecur = self.format("
  - "Lib/pprint.py:586:17    	vrepr       	U   	vrepr, vreadable, vrecur"
  - "Lib/pprint.py:586:24    	vreadable   	U   	vrepr, vreadable, vrecur = self.format"
  - "Lib/pprint.py:586:35    	vrecur      	U   	vrepr, vreadable, vrecur = self.format("
  - "Lib/pprint.py:619:17    	orepr       	U   	orepr, oreadable, orecur"
  - "Lib/pprint.py:619:24    	oreadable   	U   	orepr, oreadable, orecur = self.format"
  - "Lib/pprint.py:619:35    	orecur      	U   	orepr, oreadable, orecur = self.format("
  - "Lib/PSF-LICENSE:4:62    	Stichting   	U   	Guido van Rossum at Stichting"
  - "Lib/PSF-LICENSE:5:1     	Mathematisch	U   	Mathematisch Centrum (CWI, see http"
  - "Lib/PSF-LICENSE:11:4    	Reston      	U   	in Reston, Virginia where he released"
  - "Lib/PSF-LICENSE:50:26   	Stallman    	U   	According to Richard Stallman, 1.6.1 is not GPL-compatible"
  - "Lib/PSF-LICENSE:52:20   	Stallman's  	U   	CNRI, however, Stallman's lawyer has told CNRI"
  - "Lib/pty.py:7:17     	Lumholt         	U   	# Author: Steen Lumholt -- with additions by"
  - "Lib/pty.py:56:15    	pqrstuvwxyz     	U   	for x in 'pqrstuvwxyzPQRST':"
  - "Lib/pty.py:56:26    	PQRST           	U   	for x in 'pqrstuvwxyzPQRST':"
  - "Lib/pty.py:69:12    	filedescriptor  	U   	opened filedescriptor."
  - "Lib/pty.py:78:32    	ptem            	U   	ioctl(result, I_PUSH, \"ptem\")"
  - "Lib/pty.py:79:32    	ldterm          	U   	ioctl(result, I_PUSH, \"ldterm\")"
  - "Lib/pty.py:89:22    	forkpty         	U   	pid, fd = os.forkpty()"
  - "Lib/pty.py:95:20    	setsid          	U   	os.setsid()"
  - "Lib/pty.py:124:6    	writen          	U   	def _writen(fd, data):"
  - "Lib/pty.py:141:16   	wfds            	U   	rfds, _wfds, _xfds = select(fds"
  - "Lib/pty.py:141:23   	xfds            	U   	rfds, _wfds, _xfds = select(fds, [], ["
  - "Lib/py_compile.py:49:13     	tbtext  	U   	tbtext = ''.join(traceback"
  - "Lib/py_compile.py:79:43     	doraise 	U   	cfile=None, dfile=None, doraise=False, optimize=-1,"
  - "Lib/pydoc_data/_pydoc.css:2:18      	pydoc   	U   	CSS file for pydoc."
  - "Lib/pydoc_data/topics.py:55:33      	attributeref    	U   	' | attributeref\\n'"
  - "Lib/pydoc_data/topics.py:291:50     	augtarget       	U   	assignment_stmt ::= augtarget augop '"
  - "Lib/pydoc_data/topics.py:291:60     	augop           	U   	assignment_stmt ::= augtarget augop '"
  - "Lib/pydoc_data/topics.py:459:35     	stringliteral   	U   	' literal ::= stringliteral | bytesliteral\\n'"
  - "Lib/pydoc_data/topics.py:459:51     	bytesliteral    	U   	::= stringliteral | bytesliteral\\n'"
  - "Lib/pydoc_data/topics.py:1091:3     	bltin           	U   	'bltin-code-objects': 'Code"
  - "Lib/pydoc_data/topics.py:1118:28    	Slicings        	U   	'Slicings). It supports\\n'"
  - "Lib/pydoc_data/topics.py:1376:17    	unpackings      	U   	'\"**\" unpackings, positional arguments"
  - "Lib/pydoc_data/topics.py:1431:54    	Metaclasses     	U   	of base classes (see Metaclasses for more\\n'"
  - "Lib/pydoc_data/topics.py:1745:33    	supersets       	U   	' another, nor supersets of one another). Accordingly"
  - "Lib/pydoc_data/topics.py:2388:46    	defparameter    	U   	parameter_list ::= defparameter (\",\" defparameter)*"
  - "Lib/pydoc_data/topics.py:2389:36    	starargs        	U   	\",\" [parameter_list_starargs]]\\n'"
  - "Lib/pydoc_data/topics.py:2744:18    	aexit           	U   	' aexit = type(mgr).__aexit"
  - "Lib/pydoc_data/topics.py:2745:18    	aenter          	U   	' aenter = type(mgr).__aenter"
  - "Lib/pydoc_data/topics.py:3219:24    	ssize           	U   	'\"Py_ssize_t\". This\\n'"
  - "Lib/pydoc_data/topics.py:3377:33    	myscript        	U   	' python3 -m pdb myscript.py\\n'"
  - "Lib/pydoc_data/topics.py:4010:62    	slicings        	U   	references, subscriptions and slicings is '"
  - "Lib/pydoc_data/topics.py:4183:3     	execmodel       	U   	'execmodel': 'Execution model\\n"
  - "Lib/pydoc_data/topics.py:4504:3     	exprlists       	U   	'exprlists': 'Expression lists"
  - "Lib/pydoc_data/topics.py:4547:49    	exponentfloat   	U   	loatnumber ::= pointfloat | exponentfloat\\n'"
  - "Lib/pydoc_data/topics.py:4548:37    	digitpart       	U   	pointfloat ::= [digitpart] fraction | digitpart"
  - "Lib/pydoc_data/topics.py:4642:3     	formatstrings   	U   	'formatstrings': 'Format String Syntax"
  - "Lib/pydoc_data/topics.py:4813:20    	formattable     	U   	'formattable type may define how"
  - "Lib/pydoc_data/topics.py:5169:49    	uppercased      	U   	| and NaN are uppercased, '"
  - "Lib/pydoc_data/topics.py:5232:47    	abra            	U   	'{0}{1}{0}'.format('abra', 'cad') # arguments"
  - "Lib/pydoc_data/topics.py:5673:27    	titlecase       	U   	'* *Lt* - titlecase letters\\n'"
  - "Lib/pydoc_data/topics.py:5681:27    	nonspacing      	U   	'* *Mn* - nonspacing marks\\n'"
  - "Lib/pydoc_data/topics.py:5702:34    	loewis          	U   	'potsdam.de/home/loewis/table-3131.html.\\n'"
  - "Lib/pydoc_data/topics.py:5953:64    	subpkg          	U   	you execute \"from ..subpkg2 import '"
  - "Lib/pydoc_data/topics.py:6107:35    	decinteger      	U   	integer ::= decinteger | bininteger | octinteger"
  - "Lib/pydoc_data/topics.py:6107:48    	bininteger      	U   	::= decinteger | bininteger | octinteger | '"
  - "Lib/pydoc_data/topics.py:6107:61    	octinteger      	U   	decinteger | bininteger | octinteger | '"
  - "Lib/pydoc_data/topics.py:6108:15    	hexinteger      	U   	'hexinteger\\n'"
  - "Lib/pydoc_data/topics.py:6109:35    	nonzerodigit    	U   	decinteger ::= nonzerodigit ([\"_\"] digit)* | \"0"
  - "Lib/pydoc_data/topics.py:6111:58    	bindigit        	U   	(\"b\" | \"B\") ([\"_\"] bindigit)+\\n'"
  - "Lib/pydoc_data/topics.py:6112:58    	octdigit        	U   	(\"o\" | \"O\") ([\"_\"] octdigit)+\\n'"
  - "Lib/pydoc_data/topics.py:6113:58    	hexdigit        	U   	(\"x\" | \"X\") ([\"_\"] hexdigit)+\\n'"
  - "Lib/pydoc_data/topics.py:6152:28    	nocond          	U   	' lambda_expr_nocond ::= \"lambda\" [parameter"
  - "Lib/pydoc_data/topics.py:6635:49    	Neumann’s       	U   	in conformance to Von Neumann’s model of a “stored\\n"
  - "Lib/pydoc_data/topics.py:6849:65    	roundoff        	U   	true numerically due to roundoff. For '"
  - "Lib/pydoc_data/topics.py:6890:28    	precomposed     	U   	' *precomposed character* at code position"
  - "Lib/pydoc_data/topics.py:6955:24    	unparenthesized 	U   	'Thus, in an unparenthesized sequence of power and"
  - "Lib/pydoc_data/topics.py:7011:62    	tracebackobj    	U   	occurred\").with_traceback(tracebackobj)\\n'"
  - "Lib/pydoc_data/topics.py:7425:3     	specialattrs    	U   	'specialattrs': 'Special Attributes"
  - "Lib/pydoc_data/topics.py:7510:3     	specialnames    	U   	'specialnames': 'Special method names"
  - "Lib/pydoc_data/topics.py:8625:19    	customisation   	U   	'customisation steps are invoked after"
  - "Lib/pydoc_data/topics.py:9312:47    	optimisations   	U   	significant scope for speed optimisations within the '"
  - "Lib/pydoc_data/topics.py:9353:64    	Casefolded      	U   	copy of the string. Casefolded '"
  - "Lib/pydoc_data/topics.py:9355:33    	caseless        	U   	' used for caseless matching.\\n'"
  - "Lib/pydoc_data/topics.py:9357:24    	Casefolding     	U   	' Casefolding is similar to lowercasing"
  - "Lib/pydoc_data/topics.py:9367:28    	casefolding     	U   	' The casefolding algorithm is described"
  - "Lib/pydoc_data/topics.py:9373:40    	fillchar        	U   	'str.center(width[, fillchar])\\n'"
  - "Lib/pydoc_data/topics.py:9594:69    	Kharosthi       	U   	in base 10, like the Kharosthi '"
  - "Lib/pydoc_data/topics.py:9637:59    	Nonprintable    	U   	empty, false otherwise. Nonprintable '"
  - "Lib/pydoc_data/topics.py:9665:55    	titlecased      	U   	true if the string is a titlecased string and '"
  - "Lib/pydoc_data/topics.py:9725:57    	cmowz           	U   	example.com'.lstrip('cmowz.')\\n\""
  - "Lib/pydoc_data/topics.py:9839:28    	mississ         	U   	\" 'mississ'\\n\""
  - "Lib/pydoc_data/topics.py:10123:28   	uppercasing     	U   	' The uppercasing algorithm used is described"
  - "Lib/pydoc_data/topics.py:10150:52   	shortstring     	U   	::= [stringprefix](shortstring | longstring)\\n'"
  - "Lib/pydoc_data/topics.py:10150:66   	longstring      	U   	stringprefix](shortstring | longstring)\\n'"
  - "Lib/pydoc_data/topics.py:10154:42   	shortstringitem 	U   	shortstring ::= \"\\'\" shortstringitem* \"\\'\" | \\'\"\\' '"
  - "Lib/pydoc_data/topics.py:10156:46   	longstringitem  	U   	longstring ::= \"\\'\\'\\'\" longstringitem* \"\\'\\'\\'\" | '"
  - "Lib/pydoc_data/topics.py:10158:37   	shortstringchar 	U   	shortstringitem ::= shortstringchar | stringescapeseq\\n"
  - "Lib/pydoc_data/topics.py:10158:55   	stringescapeseq 	U   	= shortstringchar | stringescapeseq\\n'"
  - "Lib/pydoc_data/topics.py:10159:37   	longstringchar  	U   	longstringitem ::= longstringchar | stringescapeseq\\n"
  - "Lib/pydoc_data/topics.py:10165:36   	bytesprefix     	U   	bytesliteral ::= bytesprefix(shortbytes | longbytes"
  - "Lib/pydoc_data/topics.py:10165:48   	shortbytes      	U   	ytesliteral ::= bytesprefix(shortbytes | longbytes)\\n'"
  - "Lib/pydoc_data/topics.py:10165:61   	longbytes       	U   	bytesprefix(shortbytes | longbytes)\\n'"
  - "Lib/pydoc_data/topics.py:10168:41   	shortbytesitem  	U   	shortbytes ::= \"\\'\" shortbytesitem* \"\\'\" | \\'\"\\' '"
  - "Lib/pydoc_data/topics.py:10170:45   	longbytesitem   	U   	longbytes ::= \"\\'\\'\\'\" longbytesitem* \"\\'\\'\\'\" | \\'\"\"\"\\'"
  - "Lib/pydoc_data/topics.py:10172:36   	shortbyteschar  	U   	shortbytesitem ::= shortbyteschar | bytesescapeseq\\n'"
  - "Lib/pydoc_data/topics.py:10172:53   	bytesescapeseq  	U   	:= shortbyteschar | bytesescapeseq\\n'"
  - "Lib/pydoc_data/topics.py:10173:36   	longbyteschar   	U   	longbytesitem ::= longbyteschar | bytesescapeseq\\n'"
  - "Lib/pydoc_data/topics.py:10227:33   	codebases       	U   	'Python 2.x and 3.x codebases. See **PEP 414** for"
  - "Lib/pydoc_data/topics.py:11172:55   	aiterator       	U   	asynchronous iterator’s \"aiterator.__anext__()\"\\n'"
  - "Lib/pydoc_data/topics.py:11607:3    	typesfunctions  	U   	'typesfunctions': 'Functions\\n'"
  - "Lib/pydoc_data/topics.py:11624:3    	typesmapping    	U   	'typesmapping': 'Mapping Types —"
  - "Lib/pydoc_data/topics.py:11657:20   	sjoerd          	U   	\"'sjoerd':\\n\""
  - "Lib/pydoc_data/topics.py:11895:23   	dictview        	U   	'len(dictview)\\n'"
  - "Lib/pydoc_data/topics.py:11981:3    	typesmethods    	U   	'typesmethods': 'Methods\\n'"
  - "Lib/pydoc_data/topics.py:12038:3    	typesmodules    	U   	'typesmodules': 'Modules\\n'"
  - "Lib/pydoc_data/topics.py:12075:3    	typesseq        	U   	'typesseq': 'Sequence Types —"
  - "Lib/pydoc_data/topics.py:12179:64   	specialised     	U   	the general case, some specialised '"
  - "Lib/pydoc_data/topics.py:12273:50   	overallocation  	U   	and have an efficient overallocation mechanism\\n'"
  - "Lib/pydoc_data/topics.py:12716:25   	subranges       	U   	'items and subranges as needed).\\n'"
  - "Lib/pydoc_data/topics.py:12769:23   	linspace        	U   	' * The linspace recipe shows how to"
  - "Lib/pydoc.py:42:7       	Burnette        	U   	Tommy Burnette, the original creator"
  - "Lib/pydoc.py:42:41      	manpy           	U   	original creator of manpy."
  - "Lib/pydoc.py:43:6       	Prescod         	U   	Paul Prescod, for all his work on"
  - "Lib/pydoc.py:43:35      	onlinehelp      	U   	for all his work on onlinehelp."
  - "Lib/pydoc.py:80:5       	normdirs        	U   	normdirs = []"
  - "Lib/pydoc.py:83:9       	normdir         	U   	normdir = os.path.normcase(dir"
  - "Lib/pydoc.py:194:7      	Namedtuples     	U   	# Namedtuples have public fields and"
  - "Lib/pydoc.py:221:5      	keyfunc         	U   	keyfunc = lambda attr: (field"
  - "Lib/pydoc.py:254:5      	lastupdate      	U   	lastupdate, result = cache.get"
  - "Lib/pydoc.py:318:22     	forceload       	U   	def safeimport(path, forceload=0, cache={}):"
  - "Lib/pydoc.py:408:9      	docloc          	U   	docloc = os.environ.get(\"PYTHONDOCS"
  - "Lib/pydoc.py:432:14     	maxlist         	U   	self.maxlist = self.maxtuple = 2"
  - "Lib/pydoc.py:432:29     	maxtuple        	U   	self.maxlist = self.maxtuple = 20"
  - "Lib/pydoc.py:433:14     	maxdict         	U   	self.maxdict = 10"
  - "Lib/pydoc.py:434:14     	maxstring       	U   	self.maxstring = self.maxother = 1"
  - "Lib/pydoc.py:434:31     	maxother        	U   	self.maxstring = self.maxother = 100"
  - "Lib/pydoc.py:451:9      	testrepr        	U   	testrepr = repr(test)"
  - "Lib/pydoc.py:456:32     	abfnrtv         	U   	return re.sub(r'((\\\\[\\\\abfnrtv\\'\"]|\\\\[0-9]..|\\\\x.."
  - "Lib/pydoc.py:489:30     	fgcol           	U   	heading(self, title, fgcol, bgcol, extras=''):"
  - "Lib/pydoc.py:489:37     	bgcol           	U   	self, title, fgcol, bgcol, extras=''):"
  - "Lib/pydoc.py:494:5      	valign          	U   	<td valign=bottom>&nbsp;<br>"
  - "Lib/pydoc.py:513:22     	rowspan         	U   	tr bgcolor=\"%s\"><td rowspan=2>%s</td>"
  - "Lib/pydoc.py:566:26     	modpkginfo      	U   	def modpkglink(self, modpkginfo):"
  - "Lib/pydoc.py:601:36     	selfdot         	U   	all, scheme, rfc, pep, selfdot, name = match.groups"
  - "Lib/pydoc.py:660:9      	linkedname      	U   	linkedname = '.'.join(links + parts"
  - "Lib/pydoc.py:689:18     	cdict           	U   	classes, cdict = [], {}"
  - "Lib/pydoc.py:705:16     	fdict           	U   	funcs, fdict = [], {}"
  - "Lib/pydoc.py:724:13     	modpkgs         	U   	modpkgs = []"
  - "Lib/pydoc.py:781:22     	needone         	U   	self.needone = 0"
  - "Lib/pydoc.py:809:36     	docdescriptor   	U   	push(self._docdescriptor(name, value, mod))"
  - "Lib/pydoc.py:812:57     	mdict           	U   	funcs, classes, mdict, object))"
  - "Lib/pydoc.py:816:13     	spilldescriptors	U   	def spilldescriptors(msg, attrs, predicate"
  - "Lib/pydoc.py:825:13     	spilldata       	U   	def spilldata(msg, attrs, predicate"
  - "Lib/pydoc.py:928:9      	skipdocs        	U   	skipdocs = 0"
  - "Lib/pydoc.py:930:13     	imclass         	U   	imclass = object.__self__._"
  - "Lib/pydoc.py:945:17     	reallink        	U   	reallink = '<a href=\"#%s\">%s"
  - "Lib/pydoc.py:952:9      	argspec         	U   	argspec = None"
  - "Lib/pydoc.py:1064:39    	overstriking    	U   	a string in bold by overstriking.\"\"\""
  - "Lib/pydoc.py:1204:13    	makename        	U   	def makename(c, m=object.__module"
  - "Lib/pydoc.py:1507:9     	getchar         	U   	getchar = lambda: sys.stdin"
  - "Lib/pydoc.py:1579:9     	nextmodule      	U   	nextmodule = safeimport('.'.join"
  - "Lib/pydoc.py:1670:15    	seealso         	U   	# (label, seealso-items). The \"label"
  - "Lib/pydoc.py:1675:51    	pyspecific      	U   	labels in Doc/tools/pyspecific.py and"
  - "Lib/pydoc.py:1717:6     	strprefixes     	U   	_strprefixes = [p + q for p in ("
  - "Lib/pydoc.py:1938:9     	colw            	U   	colw = width // columns"
  - "Lib/pydoc.py:2003:10    	gettopic        	U   	def _gettopic(self, topic, more_xrefs"
  - "Lib/pydoc.py:2066:11    	interruptible   	U   	\"\"\"An interruptible scanner that searches"
  - "Lib/pydoc.py:2140:19    	urlhandler      	U   	def _start_server(urlhandler, port):"
  - "Lib/pydoc.py:2160:26    	serverthread    	U   	You can then use serverthread.port to get the port"
  - "Lib/pydoc.py:2260:17    	docsvr          	U   	docsvr = DocServer(self.port"
  - "Lib/pydoc.py:2351:13    	bltinlink       	U   	def bltinlink(name):"
  - "Lib/pydoc.py:2447:14    	topicpage       	U   	def html_topicpage(topic):"
  - "Lib/pydoc.py:2450:9     	htmlhelp        	U   	htmlhelp = Helper(buf, buf)"
  - "Lib/pydoc.py:2473:14    	getobj          	U   	def html_getobj(url):"
  - "Lib/pydoc.py:2558:48    	rowser          	U   	Server commands: [b]rowser, [q]uit'"
  - "Lib/quopri.py:55:9      	odata   	U   	odata = b2a_qp(data, quotetabs"
  - "Lib/quopri.py:69:5      	prevline	U   	prevline = None"
  - "Lib/quopri.py:110:5     	infp    	U   	infp = BytesIO(s)"
  - "Lib/random.py:23:12     	lognormal       	U   	lognormal"
  - "Lib/random.py:28:12     	Weibull         	U   	Weibull"
  - "Lib/random.py:33:16     	Mises           	U   	von Mises"
  - "Lib/random.py:35:33     	Mersenne        	U   	notes on the underlying Mersenne Twister core generator"
  - "Lib/random.py:45:10     	Baddeley        	U   	# Adrian Baddeley. Adapted by Raymond"
  - "Lib/random.py:191:22    	internalstate   	U   	version, internalstate, self.gauss_next = state"
  - "Lib/random.py:316:13    	istart          	U   	istart = _index(start)"
  - "Lib/random.py:338:13    	istop           	U   	istop = _index(stop)"
  - "Lib/random.py:351:13    	istep           	U   	istep = _index(step)"
  - "Lib/random.py:426:56    	subslices       	U   	second place winners (the subslices)."
  - "Lib/random.py:457:51    	reselections    	U   	suffer from frequent reselections."
  - "Lib/random.py:497:9     	setsize         	U   	setsize = 21 # size of"
  - "Lib/random.py:589:16    	Kinderman       	U   	# Uses Kinderman and Monahan method."
  - "Lib/random.py:589:30    	Monahan         	U   	Uses Kinderman and Monahan method. Reference: Kinderman"
  - "Lib/random.py:621:20    	Meertens        	U   	# (Lambert Meertens)"
  - "Lib/random.py:652:27    	lambd           	U   	def expovariate(self, lambd):"
  - "Lib/random.py:682:21    	Magnus          	U   	# Thanks to Magnus Kessler for a correction"
  - "Lib/random.py:682:28    	Kessler         	U   	# Thanks to Magnus Kessler for a correction to"
  - "Lib/random.py:733:27    	Cheng           	U   	# Uses R.C.H. Cheng, \"The generation of"
  - "Lib/random.py:737:13    	ainv            	U   	ainv = _sqrt(2.0 * alpha"
  - "Lib/random.py:785:21    	Frohne's        	U   	## for Ivan Frohne's insightful analysis"
  - "Lib/random.py:796:31    	Janne           	U   	This version due to Janne Sinkkonen, and matches"
  - "Lib/random.py:796:37    	Sinkkonen       	U   	version due to Janne Sinkkonen, and matches all the"
  - "Lib/random.py:843:9     	numbytes        	U   	numbytes = (k + 7) // 8"
  - "Lib/random.py:907:5     	xbar            	U   	xbar = mean(data)"
  - "Lib/re.py:47:9      	Lmsux       	U   	(?aiLmsux) The letters set the"
  - "Lib/re.py:302:24    	isstring    	U   	if not sre_compile.isstring(pattern):"
  - "Lib/re.py:325:6     	subx        	U   	def _subx(pattern, template):"
  - "Lib/re.py:358:21    	opengroup   	U   	gid = s.opengroup()"
  - "Lib/re.py:362:15    	closegroup  	U   	s.closegroup(gid, p[-1])"
  - "Lib/re.py:377:37    	lastindex   	U   	action = self.lexicon[m.lastindex-1][1]"
  - "Lib/reprlib.py:39:14    	maxlevel    	U   	self.maxlevel = 6"
  - "Lib/reprlib.py:42:14    	maxarray    	U   	self.maxarray = 5"
  - "Lib/reprlib.py:44:14    	maxset      	U   	self.maxset = 6"
  - "Lib/reprlib.py:45:14    	maxfrozenset	U   	self.maxfrozenset = 6"
  - "Lib/reprlib.py:46:14    	maxdeque    	U   	self.maxdeque = 6"
  - "Lib/reprlib.py:48:14    	maxlong     	U   	self.maxlong = 40"
  - "Lib/reprlib.py:64:53    	maxiter     	U   	level, left, right, maxiter, trail=''):"
  - "Lib/reprlib.py:69:13    	newlevel    	U   	newlevel = level - 1"
  - "Lib/reprlib.py:113:13   	keyrepr     	U   	keyrepr = repr1(key, newlevel"
  - "Lib/reprlib.py:114:13   	valrepr     	U   	valrepr = repr1(x[key], newlevel"
  - "Lib/rlcompleter.py:18:21    	cbreak      	U   	device in raw (or cbreak) mode, printing a traceback"
  - "Lib/rlcompleter.py:123:13   	nspace      	U   	for nspace in [self.namespace,"
  - "Lib/rlcompleter.py:134:9    	evaluable   	U   	evaluable in self.namespace, it"
  - "Lib/rlcompleter.py:148:13   	thisobject  	U   	thisobject = eval(expr, self.namespace"
  - "Lib/rlcompleter.py:162:13   	noprefix    	U   	noprefix = '_'"
  - "Lib/runpy.py:170:3      	mainmodule  	U   	# mainmodule.c, but couldn't be changed"
  - "Lib/sched.py:37:1       	timefunc    	U   	timefunc function passed to the"
  - "Lib/sched.py:53:40      	delayfunc   	U   	self, timefunc=_time, delayfunc=time.sleep):"
  - "Lib/secrets.py:21:2     	sysrand 	U   	_sysrand = SystemRandom()"
  - "Lib/secrets.py:68:6     	Drmhze  	U   	'Drmhze6EPcv0fN_81Bj-nA'"
  - "Lib/selectors.py:343:50     	devpoll     	U   	between poll, epoll and devpoll selectors.\"\"\""
  - "Lib/selectors.py:443:11     	Epoll       	U   	class EpollSelector(_PollLikeSelector"
  - "Lib/selectors.py:462:37     	maxevents   	U   	epoll_wait() expects `maxevents` to be greater than"
  - "Lib/selectors.py:491:11     	Devpoll     	U   	class DevpollSelector(_PollLikeSelector"
  - "Lib/selectors.py:507:11     	Kqueue      	U   	class KqueueSelector(_BaseSelectorImpl"
  - "Lib/selectors.py:521:34     	kevent      	U   	kev = select.kevent(key.fd, select.KQ_FILTER"
  - "Lib/shelve.py:33:23     	anitem      	U   	d[key].append(anitem)"
  - "Lib/shelve.py:43:10     	writeback   	U   	argument writeback=True in the call to"
  - "Lib/shelve.py:85:18     	keyencoding 	U   	keyencoding=\"utf-8\"):"
  - "Lib/shelve.py:181:58    	bsddb       	U   	opened using one of the \"bsddb\""
  - "Lib/shelve.py:182:41    	hashopen    	U   	routines (i.e. bsddb.hashopen, bsddb.btopen or"
  - "Lib/shelve.py:182:57    	btopen      	U   	bsddb.hashopen, bsddb.btopen or"
  - "Lib/shelve.py:183:11    	rnopen      	U   	bsddb.rnopen) and passed to the constructo"
  - "Lib/shlex.py:7:33       	Niemeyer                        	U   	interface by Gustavo Niemeyer, April 2003."
  - "Lib/shlex.py:37:28      	abcdfeghijklmnopqrstuvwxyz      	U   	self.wordchars = ('abcdfeghijklmnopqrstuvwxyz'"
  - "Lib/shlex.py:40:33      	ßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ	U   	self.wordchars += ('ßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ'"
  - "Lib/shlex.py:41:33      	ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ  	U   	'ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ')"
  - "Lib/shlex.py:46:14      	escapedquotes                   	U   	self.escapedquotes = '\"'"
  - "Lib/shlex.py:48:14      	pushback                        	U   	self.pushback = deque()"
  - "Lib/shlex.py:52:14      	filestack                       	U   	self.filestack = deque()"
  - "Lib/shlex.py:78:27      	newstream                       	U   	def push_source(self, newstream, newfile=None):"
  - "Lib/shlex.py:135:9      	escapedstate                    	U   	escapedstate = ' '"
  - "Lib/shutil.py:54:45     	fcopyfile   	U   	and hasattr(posix, \"_fcopyfile\") # macOS"
  - "Lib/shutil.py:86:8      	Giveup      	U   	class _GiveupOnFastCopy(Exception"
  - "Lib/shutil.py:91:6      	fastcopy    	U   	def _fastcopy_fcopyfile(fsrc, fdst"
  - "Lib/shutil.py:96:9      	infd        	U   	infd = fsrc.fileno()"
  - "Lib/shutil.py:97:9      	outfd       	U   	outfd = fdst.fileno()"
  - "Lib/shutil.py:119:36    	ppend       	U   	cannot be open in \"a\"(ppend) mode"
  - "Lib/shutil.py:309:17    	listxattr   	U   	if hasattr(os, 'listxattr'):"
  - "Lib/shutil.py:310:10    	copyxattr   	U   	def _copyxattr(src, dst, *, follow"
  - "Lib/shutil.py:327:28    	getxattr    	U   	value = os.getxattr(src, name, follow_symlinks"
  - "Lib/shutil.py:328:20    	setxattr    	U   	os.setxattr(dst, name, value, follow"
  - "Lib/shutil.py:386:19    	fchownat    	U   	# * fchownat() is unavailable or"
  - "Lib/shutil.py:459:9     	srcentry    	U   	use_srcentry = copy_function is copy"
  - "Lib/shutil.py:464:9     	srcname     	U   	srcname = os.path.join(src,"
  - "Lib/shutil.py:466:9     	srcobj      	U   	srcobj = srcentry if use_srcentry"
  - "Lib/shutil.py:476:17    	linkto      	U   	linkto = os.readlink(srcname"
  - "Lib/shutil.py:797:17    	destinsrc   	U   	if _destinsrc(src, dst):"
  - "Lib/shutil.py:968:62    	unarchiving 	U   	formats for archiving and unarchiving."
  - "Lib/shutil.py:1157:9    	tarobj      	U   	tarobj = tarfile.open(filename"
  - "Lib/shutil.py:1235:6    	ntuple      	U   	_ntuple_diskusage = collections"
  - "Lib/shutil.py:1235:13   	diskusage   	U   	_ntuple_diskusage = collections.namedtuple"
  - "Lib/shutil.py:1249:36   	bfree       	U   	(st.f_blocks - st.f_bfree) * st.f_frsize"
  - "Lib/shutil.py:1263:27   	getdiskusage	U   	total, free = nt._getdiskusage(path)"
  - "Lib/shutil.py:1426:17   	thefile     	U   	for thefile in files:"
  - "Lib/signal.py:20:14     	Sigmasks    	U   	'Sigmasks', __name__,"
  - "Lib/signal.py:55:12     	signalnum   	U   	def signal(signalnum, handler):"
  - "Lib/signal.py:73:5      	sigpending  	U   	if 'sigpending' in _globals:"
  - "Lib/signal.py:79:5      	sigwait     	U   	if 'sigwait' in _globals:"
  - "Lib/signal.py:81:17     	sigset      	U   	def sigwait(sigset):"
  - "Lib/signal.py:82:9      	retsig      	U   	retsig = _signal.sigwait(sigset"
  - "Lib/site.py:16:18   	pyvenv          	U   	If a file named \"pyvenv.cfg\" exists one directory"
  - "Lib/site.py:63:1    	sitecustomize   	U   	sitecustomize, usercustomize or PYTHONSTART"
  - "Lib/site.py:63:16   	usercustomize   	U   	sitecustomize, usercustomize or PYTHONSTARTUP. Starting"
  - "Lib/site.py:75:9    	sitebuiltins    	U   	import _sitebuiltins"
  - "Lib/site.py:126:14  	dircase         	U   	dir, dircase = makepath(dir)"
  - "Lib/site.py:134:11  	pathinfo        	U   	def _init_pathinfo():"
  - "Lib/site.py:140:20  	itemcase        	U   	_, itemcase = makepath(item)"
  - "Lib/site.py:147:16  	sitedir         	U   	def addpackage(sitedir, name, known_paths)"
  - "Lib/site.py:197:14  	sitedircase     	U   	sitedir, sitedircase = makepath(sitedir)"
  - "Lib/site.py:250:9   	joinuser        	U   	def joinuser(*args):"
  - "Lib/site.py:268:34  	pythonx         	U   	RUSTPYTHON: we replace pythonx.y with rustpythonx.y"
  - "Lib/site.py:268:49  	rustpythonx     	U   	replace pythonx.y with rustpythonx.y"
  - "Lib/site.py:326:5   	sitepackages    	U   	sitepackages = []"
  - "Lib/site.py:427:35  	inputrc         	U   	is that there's no .inputrc file (or .editrc file"
  - "Lib/site.py:427:53  	editrc          	U   	no .inputrc file (or .editrc file in the case of"
  - "Lib/site.py:460:15  	confs           	U   	candidate_confs = ["
  - "Lib/site.py:461:9   	conffile        	U   	conffile for conffile in ("
  - "Lib/smtpd.py:4:41       	localport       	U   	options] [localhost:localport [remotehost:remoteport"
  - "Lib/smtpd.py:4:52       	remotehost      	U   	localhost:localport [remotehost:remoteport]]"
  - "Lib/smtpd.py:4:63       	remoteport      	U   	localport [remotehost:remoteport]]"
  - "Lib/smtpd.py:8:7        	nosetuid        	U   	--nosetuid"
  - "Lib/smtpd.py:97:34      	aiosmtpd        	U   	Python 3.12. Please see aiosmtpd '"
  - "Lib/smtpd.py:160:19     	dotsep          	U   	self._dotsep = '.'"
  - "Lib/smtpd.py:188:14     	rcpttos         	U   	self.rcpttos = []"
  - "Lib/smtpd.py:452:9      	keylen          	U   	keylen = len(keyword)"
  - "Lib/smtpd.py:457:10     	getaddr         	U   	def _getaddr(self, arg):"
  - "Lib/smtpd.py:611:16     	recips          	U   	print('recips:', self.rcpttos, file"
  - "Lib/smtpd.py:644:24     	localaddr       	U   	def __init__(self, localaddr, remoteaddr,"
  - "Lib/smtpd.py:644:35     	remoteaddr      	U   	init__(self, localaddr, remoteaddr,"
  - "Lib/smtpd.py:696:57     	transparencied  	U   	all. It has been `de-transparencied'"
  - "Lib/smtpd.py:720:9      	inheaders       	U   	inheaders = 1"
  - "Lib/smtpd.py:725:17     	peerheader      	U   	peerheader = 'X-Peer: ' + peer"
  - "Lib/smtpd.py:808:9      	listnames       	U   	listnames = []"
  - "Lib/smtpd.py:812:17     	listname        	U   	# listname"
  - "Lib/smtpd.py:842:9      	mlists          	U   	mlists = {}"
  - "Lib/smtpd.py:854:13     	mlist           	U   	mlist = mlists.get(listname"
  - "Lib/smtpd.py:863:36     	toadmin         	U   	msg.Enqueue(mlist, toadmin=1)"
  - "Lib/smtpd.py:865:36     	toowner         	U   	msg.Enqueue(mlist, toowner=1)"
  - "Lib/smtpd.py:867:36     	torequest       	U   	msg.Enqueue(mlist, torequest=1)"
  - "Lib/smtpd.py:919:9      	localspec       	U   	localspec = 'localhost:8025'"
  - "Lib/smtpd.py:920:9      	remotespec      	U   	remotespec = 'localhost:25'"
  - "Lib/smtpd.py:955:9      	lastdot         	U   	lastdot = classname.rfind(\""
  - "Lib/sndhdr.py:41:54     	hcom    	U   	aifc', 'aiff', 'au','hcom',"
  - "Lib/sndhdr.py:42:2      	sndr    	U   	'sndr', 'sndt', 'voc', 'wav"
  - "Lib/sndhdr.py:42:10     	sndt    	U   	'sndr', 'sndt', 'voc', 'wav', '8svx"
  - "Lib/sndhdr.py:121:9     	nframe  	U   	nframe = data_size / frame"
  - "Lib/sndhdr.py:145:5     	sbseek  	U   	sbseek = get_short_le(h[20"
  - "Lib/sndhdr.py:148:9     	ratecode	U   	ratecode = 256 - h[sbseek+4]"
  - "Lib/sndhdr.py:183:9     	nsamples	U   	nsamples = get_long_le(h[8:1"
  - "Lib/socket.py:16:15     	Recieve             	U   	recv_fds() -- Recieve file descriptors from"
  - "Lib/socket.py:21:1      	getservbyname       	U   	getservbyname() -- map a service name"
  - "Lib/socket.py:22:1      	getprotobyname      	U   	getprotobyname() -- map a protocol"
  - "Lib/socket.py:23:1      	ntohs               	U   	ntohs(), ntohl() -- convert"
  - "Lib/socket.py:23:10     	ntohl               	U   	ntohs(), ntohl() -- convert 16, 32"
  - "Lib/socket.py:24:1      	htons               	U   	htons(), htonl() -- convert"
  - "Lib/socket.py:27:8      	getdefaulttimeout   	U   	socket.getdefaulttimeout() -- get the default"
  - "Lib/socket.py:28:8      	setdefaulttimeout   	U   	socket.setdefaulttimeout() -- set the default"
  - "Lib/socket.py:128:44    	nonsocket           	U   	Socket operation on nonsocket.\""
  - "Lib/socket.py:163:24    	Winsock             	U   	errorTab[10092] = \"Winsock.dll version out of range"
  - "Lib/socket.py:193:28    	flowspec            	U   	errorTab[11017] = \"QoS flowspec error.\""
  - "Lib/socket.py:264:17    	raddr               	U   	raddr = self.getpeername("
  - "Lib/socket.py:291:53    	hostaddr            	U   	address info is a pair (hostaddr, port)."
  - "Lib/socket.py:316:9     	rawmode             	U   	rawmode = \"\""
  - "Lib/socket.py:349:13    	sockno              	U   	sockno = self.fileno()"
  - "Lib/socket.py:355:17    	fsize               	U   	fsize = os.fstat(fileno).st"
  - "Lib/socket.py:488:17    	socketios           	U   	def _decref_socketios(self):"
  - "Lib/socket.py:563:33    	maxfds              	U   	recv_fds(sock, bufsize, maxfds, flags=0):"
  - "Lib/socket.py:660:11    	errnos              	U   	_blocking_errnos = { EAGAIN, EWOULDBLOCK"
  - "Lib/socket.py:793:28    	ipaddrs             	U   	hostname, aliases, ipaddrs = gethostbyaddr(name"
  - "Lib/socket.py:870:19    	dualstack           	U   	dualstack_ipv6=False):"
  - "Lib/socket.py:954:5     	addrlist            	U   	addrlist = []"
  - "Lib/socketserver.py:13:23   	datagrams   	U   	- SOCK_DGRAM (datagrams, e.g. UDP)"
  - "Lib/socketserver.py:113:36  	Casson      	U   	2000 Luke Kenneth Casson Leighton <lkcl@samba"
  - "Lib/socketserver.py:240:46  	noblock     	U   	self._handle_request_noblock()"
  - "Lib/socketserver.py:562:68  	syscalls    	U   	<defunct children>) syscalls instead"
  - "Lib/socketserver.py:778:37  	getc        	U   	slow for large data (a getc() call per byte); we"
  - "Lib/socketserver.py:789:15  	nagle       	U   	# Disable nagle algorithm for this socket"
  - "Lib/sqlite3/__init__.py:1:3     	pysqlite	U   	# pysqlite2/__init__.py: the pysqlite"
  - "Lib/sqlite3/__init__.py:3:30    	Häring  	U   	Copyright (C) 2005 Gerhard Häring <gh@ghaering.de>"
  - "Lib/sqlite3/__main__.py:30:37   	errorname   	U   	print(f\"{tp} ({e.sqlite_errorname}): {e}\", file=sys.stderr"
  - "Lib/sqlite3/dbapi2.py:32:15     	qmark   	U   	paramstyle = \"qmark\""
  - "Lib/sqlite3/dbapi2.py:77:9      	datepart	U   	datepart, timepart = val.split"
  - "Lib/sqlite3/dbapi2.py:77:19     	timepart	U   	datepart, timepart = val.split(b\" \")"
  - "Lib/sqlite3/dump.py:2:16    	Kippes  	U   	# Author: Paul Kippes <kippesp@gmail.com>"
  - "Lib/sqlite3/dump.py:10:6    	iterdump	U   	def _iterdump(connection):"
  - "Lib/sqlite3/dump.py:47:14   	qtable  	U   	# qtable = table_name.replace"
  - "Lib/sqlite3/dump.py:48:66   	rootpage	U   	master(type,name,tbl_name,rootpage,sql)\"\\"
  - "Lib/sre_compile.py:79:5     	iscased         	U   	iscased = None"
  - "Lib/sre_compile.py:80:5     	tolower         	U   	tolower = None"
  - "Lib/sre_compile.py:120:22   	hascased        	U   	charset, hascased = _optimize_charset"
  - "Lib/sre_compile.py:180:32   	getwidth        	U   	lo, hi = av[1].getwidth()"
  - "Lib/sre_compile.py:205:13   	tailappend      	U   	tailappend = tail.append"
  - "Lib/sre_compile.py:236:13   	skipyes         	U   	skipyes = _len(code); emit("
  - "Lib/sre_compile.py:240:17   	skipno          	U   	skipno = _len(code); emit("
  - "Lib/sre_compile.py:326:36   	Deseret         	U   	# 10400-1044F (Deseret) and 118A0-118DF (Warang"
  - "Lib/sre_compile.py:326:62   	Warang          	U   	Deseret) and 118A0-118DF (Warang Citi),"
  - "Lib/sre_compile.py:326:69   	Citi            	U   	118A0-118DF (Warang Citi),"
  - "Lib/sre_compile.py:424:21   	subpattern      	U   	# check if this subpattern is a \"simple\" operator"
  - "Lib/sre_compile.py:464:5    	prefixappend    	U   	prefixappend = prefix.append"
  - "Lib/sre_compile.py:511:9    	charsetappend   	U   	charsetappend = charset.append"
  - "Lib/sre_compile.py:776:5    	indexgroup      	U   	indexgroup = [None] * p.state.groups"
  - "Lib/sre_constants.py:67:6       	makecodes   	U   	def _makecodes(names):"
  - "Lib/sre_parse.py:79:14      	groupwidths         	U   	self.groupwidths = [None] # group 0"
  - "Lib/sre_parse.py:80:14      	lookbehindgroups    	U   	self.lookbehindgroups = None"
  - "Lib/sre_parse.py:90:13      	ogid                	U   	ogid = self.groupdict.get"
  - "Lib/sre_parse.py:98:9       	checkgroup          	U   	def checkgroup(self, gid):"
  - "Lib/sre_parse.py:101:9      	checklookbehindgroup	U   	def checklookbehindgroup(self, gid, source):"
  - "Lib/sre_parse.py:120:9      	seqtypes            	U   	seqtypes = (tuple, list)"
  - "Lib/sre_parse.py:124:26     	sublanguage         	U   	# member sublanguage"
  - "Lib/sre_parse.py:135:17     	condgroup           	U   	condgroup, item_yes, item_no"
  - "Lib/sre_parse.py:258:9      	getwhile            	U   	def getwhile(self, n, charset):"
  - "Lib/sre_parse.py:267:9      	getuntil            	U   	def getuntil(self, terminator, name"
  - "Lib/sre_parse.py:330:13     	charname            	U   	charname = source.getuntil('"
  - "Lib/sre_parse.py:439:5      	itemsappend         	U   	itemsappend = items.append"
  - "Lib/sre_parse.py:440:5      	sourcematch         	U   	sourcematch = source.match"
  - "Lib/sre_parse.py:497:7      	precompute          	U   	# precompute constants into local"
  - "Lib/sre_parse.py:498:5      	subpatternappend    	U   	subpatternappend = subpattern.append"
  - "Lib/sre_parse.py:499:5      	sourceget           	U   	sourceget = source.get"
  - "Lib/sre_parse.py:535:13     	setappend           	U   	setappend = set.append"
  - "Lib/sre_parse.py:769:21     	condname            	U   	condname = source.getuntil(\""
  - "Lib/sre_parse.py:794:61     	backref             	U   	source.error(\"conditional backref with more than two branches"
  - "Lib/sre_parse.py:973:5      	sget                	U   	sget = s.get"
  - "Lib/sre_parse.py:977:5      	lappend             	U   	lappend = literal.append"
  - "Lib/sre_parse.py:978:9      	addgroup            	U   	def addgroup(index, pos):"
  - "Lib/sre_parse.py:1023:17    	isoctal             	U   	isoctal = False"
  - "Lib/ssl.py:2:43     	Janssen     	U   	Python. Written by Bill Janssen."
  - "Lib/ssl.py:104:8    	Syscall     	U   	SSLSyscallError, SSLEOFError, SSLCertVer"
  - "Lib/ssl.py:104:22   	SSLEOF      	U   	SSLSyscallError, SSLEOFError, SSLCertVerificationErro"
  - "Lib/ssl.py:253:48   	crls        	U   	certificates #, enum_crls"
  - "Lib/ssl.py:275:6    	dnsname     	U   	def _dnsname_match(dn, hostname)"
  - "Lib/ssl.py:278:7    	Hostnames   	U   	- Hostnames are compared lower case"
  - "Lib/ssl.py:324:17   	ipname      	U   	def _inet_paton(ipname):"
  - "Lib/ssl.py:339:27   	injective   	U   	# only accept injective ipnames"
  - "Lib/ssl.py:339:37   	ipnames     	U   	only accept injective ipnames"
  - "Lib/ssl.py:366:16   	woth        	U   	# commonly woth IPv6 addresses. Strip"
  - "Lib/ssl.py:393:5    	dnsnames    	U   	dnsnames = []"
  - "Lib/ssl.py:429:6    	cafile      	U   	\"cafile capath openssl_cafile"
  - "Lib/ssl.py:429:13   	capath      	U   	\"cafile capath openssl_cafile_env openssl"
  - "Lib/ssl.py:446:60   	longname    	U   	Object\", \"nid shortname longname oid\")):"
  - "Lib/ssl.py:455:9    	fromnid     	U   	def fromnid(cls, nid):"
  - "Lib/ssl.py:496:37   	eofs        	U   	suppress_ragged_eofs=True,"
  - "Lib/ssl.py:521:9    	protos      	U   	protos = bytearray()"
  - "Lib/ssl.py:538:33   	servername  	U   	def shim_cb(sslobj, servername, sslctx):"
  - "Lib/ssl.py:538:45   	sslctx      	U   	sslobj, servername, sslctx):"
  - "Lib/ssl.py:544:34   	alpn        	U   	alpn_protocols(self, alpn_protocols):"
  - "Lib/ssl.py:555:41   	storename   	U   	windows_store_certs(self, storename, purpose):"
  - "Lib/ssl.py:566:40   	cadata      	U   	load_verify_locations(cadata=certs)"
  - "Lib/ssl.py:751:21   	keylog      	U   	# OpenSSL 1.1.1 keylog file"
  - "Lib/ssl.py:753:9    	keylogfile  	U   	keylogfile = os.environ.get('SSLKEYLOGFI"
  - "Lib/ssl.py:965:6    	sslcopydoc  	U   	def _sslcopydoc(func):"
  - "Lib/ssl.py:1354:9   	newsock     	U   	newsock, addr = super().accept"
  - "Lib/ssl.py:1414:62  	timestring  	U   	the Epoch, given the timestring"
  - "Lib/ssl.py:1485:13  	dercert     	U   	dercert = sslsock.getpeercert"
  - "Lib/stat.py:157:56  	rwxrwxrwx   	U   	string of the form '-rwxrwxrwx'.\"\"\""
  - "Lib/statistics.py:282:11    	lteq                	U   	def _find_lteq(a, x):"
  - "Lib/statistics.py:290:11    	rteq                	U   	def _find_rteq(a, l, x):"
  - "Lib/statistics.py:435:65    	Quickselect         	U   	medians without sorting? Quickselect?"
  - "Lib/statistics.py:592:20    	aabbbbbbbbcc        	U   	>>> multimode('aabbbbbbbbcc')"
  - "Lib/statistics.py:594:20    	aabbbbccddddeeffffgg	U   	>>> multimode('aabbbbccddddeeffffgg')"
  - "Lib/statistics.py:600:5     	maxcount            	U   	maxcount, mode_items = next(groupby"
  - "Lib/statistics.py:632:46    	Hyndman             	U   	interior points. Per Hyndman & Fan, \"One nice"
  - "Lib/statistics.py:884:5     	ybar                	U   	ybar = fsum(y) / n"
  - "Lib/statistics.py:973:7     	Wichura             	U   	# Wichura, M.J. (1988). \"Algorithm"
  - "Lib/statistics.py:1102:68   	quantile            	U   	percent point function or quantile"
  - "Lib/statistics.py:1136:41   	Inman               	U   	densities\" -- Henry F. Inman and Edwin L. Bradley"
  - "Lib/stringprep.py:1:29      	mkstringprep	U   	file is generated by mkstringprep.py. DO NOT EDIT."
  - "Lib/stringprep.py:10:20     	unidata     	U   	assert unicodedata.unidata_version == '3.2.0'"
  - "Lib/subprocess.py:5:36      	Astrand         	U   	2003-2005 by Peter Astrand <astrand@lysator.liu"
  - "Lib/subprocess.py:71:6      	mswindows       	U   	_mswindows = True"
  - "Lib/subprocess.py:251:40    	deadstate       	U   	inst._internal_poll(_deadstate=sys.maxsize)"
  - "Lib/subprocess.py:308:5     	warnopts        	U   	warnopts = sys.warnoptions[:"
  - "Lib/subprocess.py:325:49    	importtime      	U   	aulthandler', 'tracemalloc', 'importtime',"
  - "Lib/subprocess.py:326:18    	showrefcount    	U   	'showrefcount', 'utf8'):"
  - "Lib/subprocess.py:338:11    	popenargs       	U   	def call(*popenargs, timeout=None, **kwargs"
  - "Lib/subprocess.py:344:5     	retcode         	U   	retcode = call([\"ls\", \"-l\"]"
  - "Lib/subprocess.py:561:5     	needquote       	U   	needquote = False"
  - "Lib/subprocess.py:657:44    	vfork           	U   	implementation which can use vfork() in some cases for"
  - "Lib/subprocess.py:717:7     	preexec         	U   	preexec_fn: (POSIX only) An"
  - "Lib/subprocess.py:733:7     	startupinfo     	U   	startupinfo and creationflags (Windows"
  - "Lib/subprocess.py:733:23    	creationflags   	U   	startupinfo and creationflags (Windows only)"
  - "Lib/subprocess.py:764:67    	pipesize        	U   	text=None, umask=-1, pipesize=-1):"
  - "Lib/subprocess.py:824:13    	cwrite          	U   	# p2cwrite ---stdin---> p2cread"
  - "Lib/subprocess.py:824:38    	cread           	U   	cwrite ---stdin---> p2cread"
  - "Lib/subprocess.py:825:13    	pread           	U   	# c2pread <--stdout--- c2pwrite"
  - "Lib/subprocess.py:825:38    	pwrite          	U   	pread <--stdout--- c2pwrite"
  - "Lib/subprocess.py:826:11    	errread         	U   	# errread <--stderr--- errwrite"
  - "Lib/subprocess.py:826:36    	errwrite        	U   	errread <--stderr--- errwrite"
  - "Lib/subprocess.py:839:56    	unwrappable     	U   	child could make our fds unwrappable"
  - "Lib/subprocess.py:864:44    	xkcd            	U   	wait_secs = 0.25 # 1/xkcd221.getRandomNumber("
  - "Lib/subprocess.py:879:33    	setregid        	U   	if not hasattr(os, 'setregid'):"
  - "Lib/subprocess.py:900:9     	gids            	U   	gids = None"
  - "Lib/subprocess.py:902:33    	setgroups       	U   	if not hasattr(os, 'setgroups'):"
  - "Lib/subprocess.py:1443:17   	comspec         	U   	comspec = os.environ.get(\"COMSPEC"
  - "Lib/subprocess.py:1498:25   	millis          	U   	timeout_millis = _winapi.INFINITE"
  - "Lib/subprocess.py:1511:14   	readerthread    	U   	def _readerthread(self, fh, buffer):"
  - "Lib/subprocess.py:1673:21   	signame         	U   	for signame in ('SIGPIPE', 'SIGXFZ"
  - "Lib/subprocess.py:1677:25   	setsigdef       	U   	kwargs['setsigdef'] = sigset"
  - "Lib/subprocess.py:1828:38   	exitstatus      	U   	self._handle_exitstatus(sts)"
  - "Lib/subprocess.py:1851:60   	noexec          	U   	called = (err_msg == \"noexec\")"
  - "Lib/subprocess.py:2108:19   	Supress         	U   	# Supress the race condition error"
  - "Lib/sunau.py:112:26     	filehdr 	U   	from <multimedia/audio_filehdr.h>"
  - "Lib/sysconfig.py:24:10      	platstdlib  	U   	'platstdlib': '{platbase}/lib/python"
  - "Lib/sysconfig.py:29:10      	platinclude 	U   	'platinclude':"
  - "Lib/sysconfig.py:146:53     	projectbase 	U   	['platinclude'] = '{projectbase}/.'"
  - "Lib/sysconfig.py:392:13     	pybuilddir  	U   	# `make pybuilddir.txt` target -- which"
  - "Lib/sysconfig.py:411:5      	destfile    	U   	destfile = os.path.join(pybuilddir"
  - "Lib/sysconfig.py:419:58     	getpath     	U   	fixup -- see Modules/getpath.c"
  - "Lib/tabnanny.py:118:9   	badline 	U   	badline = nag.get_lineno()"
  - "Lib/tabnanny.py:231:39  	Broman  	U   	algorithm is due to Vincent Broman."
  - "Lib/tabnanny.py:296:13  	thisguy 	U   	thisguy = Whitespace(token)"
  - "Lib/tarfile.py:5:27     	Gustaebel   	U   	Copyright (C) 2002 Lars Gustaebel <lars@gustaebel.de>"
  - "Lib/tarfile.py:34:34    	Niels       	U   	\"Gustavo Niemeyer, Niels Gust\\u00e4bel, Richard"
  - "Lib/tarfile.py:39:30    	bltn        	U   	builtins import open as bltn_open"
  - "Lib/tarfile.py:98:43    	longlink    	U   	K\" # GNU tar longlink"
  - "Lib/tarfile.py:132:49   	hdrcharset  	U   	that are affected by hdrcharset."
  - "Lib/tarfile.py:224:34   	chksum      	U   	characters except for the chksum field which is treated"
  - "Lib/tarfile.py:332:8    	blockwise   	U   	blockwise. Use of gzip or bzip"
  - "Lib/tarfile.py:342:15   	extfileobj  	U   	self._extfileobj = True"
  - "Lib/tarfile.py:382:26   	dbuf        	U   	self.dbuf = b\"\""
  - "Lib/tarfile.py:486:13   	xlen        	U   	xlen = ord(self.__read(1"
  - "Lib/tarfile.py:606:47   	blockinfo   	U   	fileobj, offset, size, blockinfo=None):"
  - "Lib/tarfile.py:620:9    	lastpos     	U   	lastpos = 0"
  - "Lib/tarfile.py:621:9    	realpos     	U   	realpos = self.offset"
  - "Lib/tarfile.py:738:9    	devmajor    	U   	devmajor = 'Device major number"
  - "Lib/tarfile.py:739:9    	devminor    	U   	devminor = 'Device minor number"
  - "Lib/tarfile.py:870:19   	hname       	U   	for name, hname, length in ("
  - "Lib/tarfile.py:1104:13  	isextended  	U   	isextended = bool(buf[482])"
  - "Lib/tarfile.py:1105:13  	origsize    	U   	origsize = nti(buf[483:495])"
  - "Lib/tarfile.py:1143:31  	gnulong     	U   	return self._proc_gnulong(tarfile)"
  - "Lib/tarfile.py:1306:24  	gnusparse   	U   	self._proc_gnusparse_01(next, pax_headers"
  - "Lib/tarfile.py:1374:41  	realsize    	U   	keyword == \"GNU.sparse.realsize\":"
  - "Lib/tarfile.py:1474:30  	copybufsize 	U   	errorlevel=None, copybufsize=None):"
  - "Lib/tarfile.py:1536:14  	inodes      	U   	self.inodes = {} # dictionary"
  - "Lib/tarfile.py:1541:22  	firstmember 	U   	self.firstmember = None"
  - "Lib/tarfile.py:1865:17  	statres     	U   	statres = os.lstat(name)"
  - "Lib/tarfile.py:1872:9   	stmd        	U   	stmd = statres.st_mode"
  - "Lib/tarfile.py:1927:56  	rdev        	U   	os.major(statres.st_rdev)"
  - "Lib/tarfile.py:2145:73  	chrdev      	U   	the member (directory, chrdev,"
  - "Lib/tarfile.py:2146:15  	blkdev      	U   	# blkdev, etc.), return None"
  - "Lib/tarfile.py:2149:40  	targetpath  	U   	member(self, tarinfo, targetpath, set_attrs=True,"
  - "Lib/tarfile.py:2161:9   	upperdirs   	U   	upperdirs = os.path.dirname(targetpath"
  - "Lib/telnetlib.py:13:65      	cnri            	U   	<Dec 2 11:10> snag.cnri.reston.."
  - "Lib/telnetlib.py:13:70      	reston          	U   	2 11:10> snag.cnri.reston.."
  - "Lib/telnetlib.py:57:23      	Subnegotiation  	U   	SE = bytes([240]) # Subnegotiation End"
  - "Lib/telnetlib.py:209:14     	rawq            	U   	self.rawq = b''"
  - "Lib/telnetlib.py:210:14     	irawq           	U   	self.irawq = 0"
  - "Lib/telnetlib.py:211:14     	cookedq         	U   	self.cookedq = b''"
  - "Lib/telnetlib.py:213:14     	iacseq          	U   	self.iacseq = b'' # Buffer for IAC"
  - "Lib/telnetlib.py:215:14     	sbdataq         	U   	self.sbdataq = b''"
  - "Lib/telnetlib.py:468:31     	suboptions      	U   	# suboptions. Alas, we should not"
  - "Lib/telnetlib.py:590:44     	uncompiled      	U   	Pattern instances) or uncompiled (strings)."
  - "Lib/telnetlib.py:605:21     	undeterministic 	U   	results are undeterministic, and may depend on the"
  - "Lib/telnetlib.py:666:9      	portstr         	U   	portstr = sys.argv[2]"
  - "Lib/tempfile.py:13:15   	tmptpu      	U   	(4, '/tmp/tmptpu9nin8')"
  - "Lib/tempfile.py:53:7    	openflags   	U   	_text_openflags = _os.O_RDWR | _os.O"
  - "Lib/tempfile.py:164:9   	envname     	U   	for envname in 'TMPDIR', 'TEMP'"
  - "Lib/tempfile.py:434:21  	unlinker    	U   	# Cache the unlinker so we don't get spurious"
  - "Lib/tempfile.py:808:21  	resetperms  	U   	def resetperms(path):"
  - "Lib/test/_test_atexit.py:17:23      	unraisable  	U   	def assert_raises_unraisable(self, exc_type, func"
  - "Lib/test/_test_atexit.py:20:25      	exitfuncs   	U   	atexit._run_exitfuncs()"
  - "Lib/test/_test_atexit.py:48:14      	badargs     	U   	def test_badargs(self):"
  - "Lib/test/_test_atexit.py:61:20      	unnormalized	U   	def test_raise_unnormalized(self):"
  - "Lib/test/ann_module3.py:15:9    	sfel	U   	sfel.y: int = 0"
  - "Lib/test/badsyntax_future3.py:3:31      	snopes  	U   	future__ import rested_snopes"
  - "Lib/test/cfgparser.1:1:16       	idlelib 	U   	# Also used by idlelib.test_idle.test_config"
  - "Lib/test/cfgparser.1:3:5        	newbar  	U   	foo=newbar"
  - "Lib/test/cfgparser.2:8:7        	commentry       	U   	# for commentry and a ; for parts of"
  - "Lib/test/cfgparser.2:11:68      	testparm        	U   	should run the command #\"testparm\" # to check that you"
  - "Lib/test/cfgparser.2:21:3       	netbios         	U   	# netbios name is the name you"
  - "Lib/test/cfgparser.2:21:53      	Neighbourhood   	U   	will see in \"Network Neighbourhood\","
  - "Lib/test/cfgparser.2:32:30      	linpopup        	U   	message command = /usr/bin/linpopup \"%f\" \"%m\" %s; rm %s"
  - "Lib/test/cfgparser.2:40:4       	printcap        	U   	printcap name = lpstat"
  - "Lib/test/cfgparser.2:40:20      	lpstat          	U   	printcap name = lpstat"
  - "Lib/test/cfgparser.2:45:8       	sysv            	U   	# bsd, sysv, plp, lprng, aix, hpux"
  - "Lib/test/cfgparser.2:45:19      	lprng           	U   	# bsd, sysv, plp, lprng, aix, hpux, qnx, cups"
  - "Lib/test/cfgparser.2:45:31      	hpux            	U   	sysv, plp, lprng, aix, hpux, qnx, cups"
  - "Lib/test/cfgparser.2:57:29      	winbind         	U   	should work well for winbind:"
  - "Lib/test/cfgparser.2:86:20      	pcguest         	U   	; guest account = pcguest"
  - "Lib/test/cfgparser.2:109:7      	smbpasswd       	U   	# The smbpasswd file is only required"
  - "Lib/test/cfgparser.2:130:30     	smbusers        	U   	username map = /etc/samba/smbusers"
  - "Lib/test/cfgparser.2:137:30     	Winbind         	U   	Options for using winbind. Winbind allows you to do all"
  - "Lib/test/cfgparser.2:140:8      	uid's           	U   	# unix uid's"
  - "Lib/test/cfgparser.2:246:27     	smbldap         	U   	configure in /etc/samba/smbldap_conf.pm first):"
  - "Lib/test/cfgparser.2:268:25     	mypassword      	U   	running 'smbpasswd -w mypassword'"
  - "Lib/test/cfgparser.2:269:30     	mydomain        	U   	admin dn = cn=root,dc=mydomain,dc=com"
  - "Lib/test/cfgparser.2:280:40     	lmhosts         	U   	default order is \"host lmhosts wins bcast\". \"host\""
  - "Lib/test/cfgparser.2:280:53     	bcast           	U   	is \"host lmhosts wins bcast\". \"host\""
  - "Lib/test/cfgparser.2:281:29     	gethostbyname   	U   	use the unix system gethostbyname() function call that"
  - "Lib/test/cfgparser.2:283:26     	nsswitch        	U   	etc/host.config, /etc/nsswitch.conf"
  - "Lib/test/cfgparser.2:284:16     	resolv          	U   	# and the /etc/resolv.conf file. \"host\" therefore"
  - "Lib/test/cfgparser.2:309:18     	nslookups       	U   	# names via DNS nslookups. The built-in default"
  - "Lib/test/cfgparser.2:341:4      	browseable      	U   	browseable = no"
  - "Lib/test/cfgparser.2:352:43     	netlogon        	U   	following and create the netlogon directory for Domain"
  - "Lib/test/cfgparser.2:361:32     	ntlogon         	U   	created dynamically by ntlogon (check that you have"
  - "Lib/test/cfgparser.2:363:3      	contribs        	U   	# contribs)"
  - "Lib/test/cfgparser.2:366:7      	postexec        	U   	;root postexec = rm -f /var/lib/samba"
  - "Lib/test/cfgparser.2:405:5      	lprm            	U   	; lprm command = cancel %p"
  - "Lib/test/cfgparser.2:423:3      	colour          	U   	# colour)on the samba server"
  - "Lib/test/cfgparser.2:465:3      	fredsprn        	U   	;[fredsprn]"
  - "Lib/test/cfgparser.2:469:15     	freds           	U   	; printer = freds_printer"
  - "Lib/test/cfgparser.2:479:3      	fredsdir        	U   	;[fredsdir]"
  - "Lib/test/cfgparser.2:500:3      	pchome          	U   	;[pchome]"
  - "Lib/test/cfgparser.2:530:3      	myshare         	U   	;[myshare]"
  - "Lib/test/cmath_testcases.txt:1:4        	Testcases   	U   	-- Testcases for functions in cmath"
  - "Lib/test/cmath_testcases.txt:5:5        	testid      	U   	-- <testid> <function> <input_value"
  - "Lib/test/cmath_testcases.txt:11:57      	asinh       	U   	be tested (exp, cos, asinh, ...),"
  - "Lib/test/cmath_testcases.txt:57:4       	mpmath      	U   	-- mpmath 0.19 at 100 bit accuracy"
  - "Lib/test/cmath_testcases.txt:59:42      	testfile    	U   	math.MathTests.test_testfile, as well as in"
  - "Lib/test/cmath_testcases.txt:236:4      	acosh       	U   	-- acosh: Inverse hyperbolic"
  - "Lib/test/cmath_testcases.txt:914:4      	atanh       	U   	-- atanh: Inverse hyperbolic"
  - "Lib/test/cmath_testcases.txt:918:28     	Atanh       	U   	These are tested in testAtanhSign in test_cmath.py"
  - "Lib/test/cmath_testcases.txt:1263:1     	logt        	U   	logt0000 log10 1.0 0.0 -"
  - "Lib/test/cmath_testcases.txt:2365:40    	testcase    	U   	we can use the same testcase syntax as for the"
  - "Lib/test/cmath_testcases.txt:2468:42    	carg        	U   	of polar (as cabs and carg, respectively, which"
  - "Lib/test/cmath_testcases.txt:2469:42    	hypot       	U   	terms of the functions hypot and atan2)."
  - "Lib/test/encoded_modules/__init__.py:19:39      	hommes          	U   	'iso-8859-1', \"Les hommes ont oublié cette vérit"
  - "Lib/test/encoded_modules/__init__.py:19:50      	oublié          	U   	1', \"Les hommes ont oublié cette vérité, \""
  - "Lib/test/encoded_modules/__init__.py:19:57      	cette           	U   	Les hommes ont oublié cette vérité, \""
  - "Lib/test/encoded_modules/__init__.py:19:63      	vérité          	U   	hommes ont oublié cette vérité, \""
  - "Lib/test/encoded_modules/__init__.py:20:14      	renard          	U   	\"dit le renard. Mais tu ne dois pas"
  - "Lib/test/encoded_modules/__init__.py:20:22      	Mais            	U   	\"dit le renard. Mais tu ne dois pas l'oublier"
  - "Lib/test/encoded_modules/__init__.py:20:33      	dois            	U   	le renard. Mais tu ne dois pas l'oublier. Tu deviens"
  - "Lib/test/encoded_modules/__init__.py:20:42      	l'oublier       	U   	Mais tu ne dois pas l'oublier. Tu deviens \""
  - "Lib/test/encoded_modules/__init__.py:20:56      	deviens         	U   	dois pas l'oublier. Tu deviens \""
  - "Lib/test/encoded_modules/__init__.py:21:7       	responsable     	U   	\"responsable pour toujours de ce"
  - "Lib/test/encoded_modules/__init__.py:21:24      	toujours        	U   	\"responsable pour toujours de ce que tu as apprivois"
  - "Lib/test/encoded_modules/__init__.py:21:49      	apprivoisé      	U   	toujours de ce que tu as apprivoisé.\"),"
  - "Lib/test/encoded_modules/__init__.py:22:27      	Познание        	U   	koi8_r', 'koi8-r', \"Познание бесконечности требу"
  - "Lib/test/encoded_modules/__init__.py:22:36      	бесконечности   	U   	'koi8-r', \"Познание бесконечности требует бесконечног"
  - "Lib/test/encoded_modules/__init__.py:22:50      	требует         	U   	нание бесконечности требует бесконечного времен"
  - "Lib/test/encoded_modules/__init__.py:22:58      	бесконечного    	U   	сконечности требует бесконечного времени.\")"
  - "Lib/test/encoded_modules/__init__.py:22:71      	времени         	U   	ребует бесконечного времени.\")"
  - "Lib/test/encoded_modules/module_iso_8859_1.py:3:25      	oubli       	U   	test = (\"Les hommes ont oubli� cette v�rit�, \""
  - "Lib/test/encoded_modules/module_iso_8859_1.py:5:52      	apprivois   	U   	toujours de ce que tu as apprivois�.\")"
  - "Lib/test/floating_points.txt:4:12       	Verdonk     	U   	# Brigitte Verdonk, Annie Cuyt, Dennis"
  - "Lib/test/floating_points.txt:4:27       	Cuyt        	U   	Brigitte Verdonk, Annie Cuyt, Dennis Verschaeren"
  - "Lib/test/floating_points.txt:4:40       	Verschaeren 	U   	Annie Cuyt, Dennis Verschaeren, A precision and range"
  - "Lib/test/floating_points.txt:1027:60    	strtod      	U   	corner case of Python's strtod code."
  - "Lib/test/libregrtest/cmdline.py:10:25   	regrtest        	U   	python path/to/Lib/test/regrtest.py [options] [test_name"
  - "Lib/test/libregrtest/cmdline.py:29:51   	randseed        	U   	order. You can use --randseed=int to provide an"
  - "Lib/test/libregrtest/cmdline.py:30:24   	randomizer      	U   	int seed value for the randomizer; this is useful for"
  - "Lib/test/libregrtest/cmdline.py:35:43   	pynexttest      	U   	recorded in a file named pynexttest. If run from the"
  - "Lib/test/libregrtest/cmdline.py:65:2    	reflog          	U   	\"reflog.txt\" respectively),"
  - "Lib/test/libregrtest/cmdline.py:71:68   	memlimit        	U   	memory. The passed-in memlimit,"
  - "Lib/test/libregrtest/cmdline.py:98:5    	largefile       	U   	largefile - It is okay to run"
  - "Lib/test/libregrtest/cmdline.py:112:5   	urlfetch        	U   	urlfetch - It is okay to download"
  - "Lib/test/libregrtest/cmdline.py:116:5   	tzdata          	U   	tzdata - Run tests that"
  - "Lib/test/libregrtest/cmdline.py:118:43  	uall            	U   	resources except one, use '-uall,-<resource>'. For"
  - "Lib/test/libregrtest/cmdline.py:122:3   	matchfile       	U   	--matchfile filters tests using"
  - "Lib/test/libregrtest/cmdline.py:136:5   	extralagefile   	U   	# - extralagefile (ex: test_zipfile64"
  - "Lib/test/libregrtest/cmdline.py:141:36  	extralargefile  	U   	= ALL_RESOURCES + ('extralargefile', 'tzdata')"
  - "Lib/test/libregrtest/cmdline.py:230:33  	findleaks       	U   	add_argument('-l', '--findleaks', action='store_const"
  - "Lib/test/libregrtest/cmdline.py:233:33  	runleaks        	U   	add_argument('-L', '--runleaks', action='store_true"
  - "Lib/test/libregrtest/cmdline.py:236:33  	huntrleaks      	U   	add_argument('-R', '--huntrleaks', metavar='RUNCOUNTS"
  - "Lib/test/libregrtest/cmdline.py:240:33  	multiprocess    	U   	add_argument('-j', '--multiprocess', metavar='PROCESSES"
  - "Lib/test/libregrtest/cmdline.py:247:33  	coverdir        	U   	add_argument('-D', '--coverdir', metavar='DIR',"
  - "Lib/test/libregrtest/cmdline.py:250:33  	nocoverdir      	U   	add_argument('-N', '--nocoverdir',"
  - "Lib/test/libregrtest/cmdline.py:256:33  	nowindows       	U   	add_argument('-n', '--nowindows', action='store_true"
  - "Lib/test/libregrtest/cmdline.py:273:45  	xmlpath         	U   	--junit-xml', dest='xmlpath', metavar='FILENAME"
  - "Lib/test/libregrtest/cmdline.py:292:5   	nwarmup         	U   	nwarmup = int(args[0]) if args"
  - "Lib/test/libregrtest/cmdline.py:293:5   	ntracked        	U   	ntracked = int(args[1]) if args"
  - "Lib/test/libregrtest/main.py:21:36      	removepy    	U   	libregrtest.utils import removepy, count, format_duration"
  - "Lib/test/libregrtest/main.py:21:70      	printlist   	U   	count, format_duration, printlist"
  - "Lib/test/libregrtest/main.py:28:25      	distclean   	U   	files using the \"make distclean\" command."
  - "Lib/test/libregrtest/main.py:30:45      	builddir    	U   	get_config_var('abs_builddir')"
  - "Lib/test/libregrtest/main.py:42:7       	Regrtest    	U   	class Regrtest:"
  - "Lib/test/libregrtest/main.py:77:23      	denieds     	U   	self.resource_denieds = []"
  - "Lib/test/libregrtest/main.py:160:25     	getloadavg  	U   	load_avg = self.getloadavg()"
  - "Lib/test/libregrtest/main.py:213:9      	stdtests    	U   	stdtests = STDTESTS[:]"
  - "Lib/test/libregrtest/main.py:214:9      	nottests    	U   	nottests = NOTTESTS.copy()"
  - "Lib/test/libregrtest/main.py:225:13     	alltests    	U   	alltests = findtests(self.ns"
  - "Lib/test/libregrtest/main.py:274:13     	abstest     	U   	abstest = get_abs_module(self"
  - "Lib/test/libregrtest/main.py:531:28     	testsuites  	U   	root = ET.Element(\"testsuites\")"
  - "Lib/test/libregrtest/main.py:626:21     	typeperf    	U   	# # typeperf.exe for x64, x86 or"
  - "Lib/test/libregrtest/refleak.py:24:71   	refleaks            	U   	True if we detected refleaks."
  - "Lib/test/libregrtest/refleak.py:65:5    	repcount            	U   	repcount = nwarmup + ntracked"
  - "Lib/test/libregrtest/refleak.py:70:5    	alloc               	U   	alloc_deltas = [0] * repcount"
  - "Lib/test/libregrtest/refleak.py:72:5    	getallocatedblocks  	U   	getallocatedblocks = sys.getallocatedblocks"
  - "Lib/test/libregrtest/refleak.py:112:46  	memomry             	U   	reference counters and memomry blocks."
  - "Lib/test/libregrtest/refleak.py:141:38  	refrep              	U   	open(fname, \"a\") as refrep:"
  - "Lib/test/libregrtest/refleak.py:185:28  	warningregistry     	U   	if hasattr(mod, '__warningregistry__'):"
  - "Lib/test/libregrtest/runtest_mp.py:30:28    	testname    	U   	run_test_in_subprocess(testname, ns):"
  - "Lib/test/libregrtest/runtest_mp.py:42:60    	regrtest's  	U   	working directory as regrtest's original"
  - "Lib/test/libregrtest/runtest_mp.py:66:7     	Multiprocess	U   	class MultiprocessIterator:"
  - "Lib/test/libregrtest/runtest.py:15:23   	refleak         	U   	from test.libregrtest.refleak import dash_R, clear"
  - "Lib/test/libregrtest/runtest.py:73:5    	findtestdir     	U   	def findtestdir(path=None):"
  - "Lib/test/libregrtest/runtest.py:230:27  	uncollectable   	U   	f\"uncollectable object(s).\")"
  - "Lib/test/libregrtest/runtest.py:310:19  	nuker           	U   	kind, nuker = \"directory\", shutil"
  - "Lib/test/libregrtest/setup.py:65:50     	Unixy       	U   	be useful for other Unixy platforms that"
  - "Lib/test/libregrtest/setup.py:73:35     	getrlimit   	U   	soft, hard = resource.getrlimit(resource.RLIMIT_STACK"
  - "Lib/test/libregrtest/setup.py:74:13     	newsoft     	U   	newsoft = min(hard, max(soft"
  - "Lib/test/libregrtest/setup.py:75:22     	setrlimit   	U   	resource.setrlimit(resource.RLIMIT_STACK"
  - "Lib/test/libregrtest/win_utils.py:21:33     	Mulitprocessing 	U   	system load on Windows. Mulitprocessing and threads can't be"
  - "Lib/test/libregrtest/win_utils.py:93:13     	toks            	U   	toks = line.split(',')"
  - "Lib/test/list_tests.py:30:11    	Mutables        	U   	# Mutables always return a new"
  - "Lib/test/list_tests.py:261:35   	spameggs        	U   	assertEqual(a, list(\"spameggs\"))"
  - "Lib/test/list_tests.py:350:29   	abcdefghcij     	U   	d = self.type2test('abcdefghcij')"
  - "Lib/test/list_tests.py:352:45   	abdefghcij      	U   	ssertEqual(d, self.type2test('abdefghcij'))"
  - "Lib/test/list_tests.py:354:45   	abdefghij       	U   	ssertEqual(d, self.type2test('abdefghij'))"
  - "Lib/test/list_tests.py:447:13   	revcmp          	U   	def revcmp(a, b):"
  - "Lib/test/list_tests.py:459:13   	xmod            	U   	xmod, ymod = x%3, y%7"
  - "Lib/test/list_tests.py:459:19   	ymod            	U   	xmod, ymod = x%3, y%7"
  - "Lib/test/list_tests.py:471:13   	selfmodifying   	U   	def selfmodifyingComparison(x,y):"
  - "Lib/test/list_tests.py:505:9    	oldid           	U   	oldid = id(s)"
  - "Lib/test/list_tests.py:509:14   	extendedslicing 	U   	def test_extendedslicing(self):"
  - "Lib/test/list_tests.py:559:9    	exhit           	U   	exhit = iter(a)"
  - "Lib/test/list_tests.py:560:9    	empit           	U   	empit = iter(a)"
  - "Lib/test/lock_tests.py:92:21    	locktype    	U   	lock = self.locktype()"
  - "Lib/test/lock_tests.py:159:29   	unacquired  	U   	# Check the lock is unacquired"
  - "Lib/test/lock_tests.py:439:21   	condtype    	U   	cond = self.condtype()"
  - "Lib/test/lock_tests.py:567:14   	waitfor     	U   	def test_waitfor(self):"
  - "Lib/test/lock_tests.py:614:44   	semtype     	U   	assertRaises(ValueError, self.semtype, value = -1)"
  - "Lib/test/lock_tests.py:770:29   	barriertype 	U   	self.barrier = self.barriertype(self.N, timeout=self"
  - "Lib/test/lock_tests.py:779:9    	multipass   	U   	def multipass(self, results, n):"
  - "Lib/test/mapping_tests.py:40:14     	inmapping           	U   	self.inmapping = {key:value}"
  - "Lib/test/mapping_tests.py:53:9      	knownkey            	U   	knownkey = list(self.other.keys"
  - "Lib/test/mapping_tests.py:72:19     	iterandlist         	U   	def check_iterandlist(iter, lst, ref):"
  - "Lib/test/mapping_tests.py:86:19     	knownvalue          	U   	knownkey, knownvalue = next(iter(self.other"
  - "Lib/test/mapping_tests.py:198:9     	outerself           	U   	outerself = self"
  - "Lib/test/mapping_tests.py:258:15    	badseq              	U   	class badseq(object):"
  - "Lib/test/mapping_tests.py:434:15    	dictlike            	U   	class dictlike(self.type2test): pass"
  - "Lib/test/mapping_tests.py:450:15    	baddict             	U   	class baddict1(self.type2test):"
  - "Lib/test/mapping_tests.py:594:14    	mutatingiteration   	U   	def test_mutatingiteration(self):"
  - "Lib/test/math_testcases.txt:108:4   	erfc    	U   	-- erfc: complementary error"
  - "Lib/test/math_testcases.txt:170:4   	lgamma  	U   	-- lgamma: log of absolute value"
  - "Lib/test/math_testcases.txt:174:1   	lgam    	U   	lgam0000 lgamma 0.0 -> inf"
  - "Lib/test/math_testcases.txt:446:4   	expm    	U   	-- expm1: exp(x) - 1, without"
  - "Lib/test/mock_socket.py:8:2     	defaulttimeout  	U   	_defaulttimeout = None"
  - "Lib/test/mod_generics_cache.py:26:70    	localns 	U   	get_type_hints with localns=B.__dict__"
  - "Lib/test/pickletester.py:20:13      	testbuffer      	U   	import _testbuffer"
  - "Lib/test/pickletester.py:28:15      	bigmemtest      	U   	_2G, _4G, bigmemtest"
  - "Lib/test/pickletester.py:126:9      	curpair         	U   	curpair = copyreg._inverted"
  - "Lib/test/pickletester.py:149:44     	unheshable      	U   	key object containing unheshable mutable data."
  - "Lib/test/pickletester.py:166:7      	myint           	U   	class myint(int):"
  - "Lib/test/pickletester.py:170:7      	initarg         	U   	class initarg(C):"
  - "Lib/test/pickletester.py:258:44     	ndarray         	U   	zero-copy picklable ndarray, as the ndarray()"
  - "Lib/test/pickletester.py:836:35     	objcopy         	U   	assert_is_copy(self, obj, objcopy, msg=None):"
  - "Lib/test/pickletester.py:1121:9     	badpickles      	U   	badpickles = [b\"S'\\n.\","
  - "Lib/test/pickletester.py:1138:9     	goodpickles     	U   	goodpickles = [(b\"S''\\n.\", ''),"
  - "Lib/test/pickletester.py:1316:17    	Pabc            	U   	# b'Pabc',"
  - "Lib/test/pickletester.py:1500:58    	minprotocol     	U   	cls, aslist=identity, minprotocol=0):"
  - "Lib/test/pickletester.py:1870:17    	nbase           	U   	nbase = 1 << nbits"
  - "Lib/test/pickletester.py:1878:22    	deadbeeffeedface	U   	nbase = int(\"deadbeeffeedface\", 16)"
  - "Lib/test/pickletester.py:1883:59    	precomputes     	U   	expensive here as it precomputes"
  - "Lib/test/pickletester.py:1934:14    	structseq       	U   	def test_structseq(self):"
  - "Lib/test/pickletester.py:1987:9     	badpickle       	U   	badpickle = pickle.PROTO + bytes"
  - "Lib/test/pickletester.py:2095:22    	myclasses       	U   	for C in myclasses:"
  - "Lib/test/pickletester.py:2109:25    	weakproxies     	U   	# Cannot create weakproxies to these classes"
  - "Lib/test/pickletester.py:2148:57    	extcode         	U   	with extension code extcode. Pickle"
  - "Lib/test/pickletester.py:2452:16    	compacity       	U   	# Test compacity of int representation"
  - "Lib/test/pickletester.py:2599:13    	newpickle       	U   	newpickle = bytearray()"
  - "Lib/test/pickletester.py:2662:15    	memoryviews     	U   	# memoryviews should own the memory"
  - "Lib/test/pickletester.py:2977:14    	inband          	U   	def test_inband_accept_default_buffers"
  - "Lib/test/pickletester.py:3015:18    	arange          	U   	arr = np.arange(6)"
  - "Lib/test/pickletester.py:3028:7     	Bigmem          	U   	class BigmemPickleTests:"
  - "Lib/test/pickletester.py:3032:27    	memuse          	U   	bigmemtest(size=_2G, memuse=3.6, dry_run=False)"
  - "Lib/test/pickletester.py:3331:14    	callapi         	U   	def test_callapi(self):"
  - "Lib/test/pickletester.py:3519:38    	Pickler's       	U   	that we can set the Pickler's memo attribute."
  - "Lib/test/pickletester.py:3591:25    	unpicklings     	U   	def _check_multiple_unpicklings(self, ioclass, *, seekable"
  - "Lib/test/pickletester.py:3591:43    	ioclass         	U   	multiple_unpicklings(self, ioclass, *, seekable=True):"
  - "Lib/test/pickletester.py:3623:29    	unpickler's     	U   	# Issue #12687: the unpickler's buffering logic could"
  - "Lib/test/pickletester.py:3818:17    	picklability    	U   	# check picklability of AAA and BBB"
  - "Lib/test/randv2_32.pck:1:1      	crandom 	U   	crandom"
  - "Lib/test/re_tests.py:26:43      	Backreference   	U   	PythonPython'), # Backreference"
  - "Lib/test/re_tests.py:27:57      	fastmap         	U   	c9,'), # Disable the fastmap optimization"
  - "Lib/test/re_tests.py:67:59      	Backref         	U   	, SYNTAX_ERROR), # Backref to undefined group"
  - "Lib/test/re_tests.py:77:52      	abcdefghijklk   	U   	i)(j)(k)(l)\\\\119', 'abcdefghijklk9', SUCCEED, 'found+"
  - "Lib/test/re_tests.py:90:40      	ceghijkmopqyz   	U   	i\\j\\k\\m\\o\\p\\q\\y\\z', 'ceghijkmopqyz', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:105:19     	nccb            	U   	('a.*b', 'acc\\nccb', FAIL),"
  - "Lib/test/re_tests.py:119:14     	xabcy           	U   	('abc', 'xabcy', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:120:14     	ababc           	U   	('abc', 'ababc', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:123:16     	abbc            	U   	('ab*bc', 'abbc', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:124:16     	abbbbc          	U   	('ab*bc', 'abbbbc', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:134:16     	abcc            	U   	('^abc$', 'abcc', FAIL),"
  - "Lib/test/re_tests.py:136:16     	aabc            	U   	('^abc$', 'aabc', FAIL),"
  - "Lib/test/re_tests.py:142:15     	axyzc           	U   	('a.*c', 'axyzc', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:143:15     	axyzd           	U   	('a.*c', 'axyzd', FAIL),"
  - "Lib/test/re_tests.py:196:16     	aabbabc         	U   	('a+b+c', 'aabbabc', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:207:14     	xabyabbbz       	U   	('ab*', 'xabyabbbz', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:208:14     	xayabbbz        	U   	('ab*', 'xayabbbz', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:210:8      	abhgefdc        	U   	('[abhgefdc]ij', 'hij', SUCCEED"
  - "Lib/test/re_tests.py:219:14     	dcdcde          	U   	('a[bcd]*dcdcde', 'adcdcde', SUCCEED"
  - "Lib/test/re_tests.py:219:24     	adcdcde         	U   	('a[bcd]*dcdcde', 'adcdcde', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:225:33     	effgz           	U   	|ef*g.|h?i(j|k))', 'effgz', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:227:33     	effg            	U   	|ef*g.|h?i(j|k))', 'effg', FAIL),"
  - "Lib/test/re_tests.py:228:33     	bcdd            	U   	|ef*g.|h?i(j|k))', 'bcdd', FAIL),"
  - "Lib/test/re_tests.py:229:33     	reffgz          	U   	|ef*g.|h?i(j|k))', 'reffgz', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:237:19     	abcabc          	U   	('(abc)\\\\1', 'abcabc', SUCCEED, 'g1', 'abc"
  - "Lib/test/re_tests.py:254:16     	aaax            	U   	('(a)+x', 'aaax', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:255:19     	aacx            	U   	('([ac])+x', 'aacx', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:256:32     	tdir            	U   	*/)*sub1/', 'd:msgs/tdir/sub1/trial/away.cpp"
  - "Lib/test/re_tests.py:258:23     	Nxyz            	U   	('([^N]*N)+', 'abNNxyzN', SUCCEED, 'found+"
  - "Lib/test/re_tests.py:260:20     	abcx            	U   	('([abc]*)x', 'abcx', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:298:20     	abbbcd          	U   	('([abc])*d', 'abbbcd', SUCCEED, 'found+\""
  - "Lib/test/re_tests.py:440:18     	abad            	U   	('a(?!b).', 'abad', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:452:52     	edifact         	U   	escaping with ? as in edifact"
  - "Lib/test/re_tests.py:458:43     	wxyz            	U   	xy(?# comment 2)z', 'wxyz', SUCCEED, 'found',"
  - "Lib/test/re_tests.py:483:1      	xyzabc          	U   	xyzabc"
  - "Lib/test/re_tests.py:512:7      	xmllib          	U   	# xmllib problem"
  - "Lib/test/re_tests.py:513:33     	smil            	U   	z]+):)?([a-z]+)$', 'smil', SUCCEED, 'g1+\"-\"+g"
  - "Lib/test/re_tests.py:526:25     	abcdefdof       	U   	(r'(?<!abc)(d.f)', 'abcdefdof', SUCCEED, 'found',"
  - "Lib/test/recursion.tar:1:1      	bcaller 	U   	bcaller"
  - "Lib/test/regrtest.py:29:5       	mydir   	U   	mydir = os.path.abspath(os"
  - "Lib/test/seq_tests.py:13:5      	iterfunc            	U   	def iterfunc(seqn):"
  - "Lib/test/seq_tests.py:13:14     	seqn                	U   	def iterfunc(seqn):"
  - "Lib/test/seq_tests.py:86:5      	itermulti           	U   	def itermulti(seqn):"
  - "Lib/test/seq_tests.py:119:32    	initseq             	U   	def __init__(self, initseq):"
  - "Lib/test/seq_tests.py:133:31    	iteratables         	U   	Create from various iteratables"
  - "Lib/test/seq_tests.py:245:9     	checkfirst          	U   	checkfirst = self.type2test([1"
  - "Lib/test/seq_tests.py:247:9     	checklast           	U   	checklast = self.type2test([StopCompare"
  - "Lib/test/seq_tests.py:256:14    	minmax              	U   	def test_minmax(self):"
  - "Lib/test/seq_tests.py:261:14    	addmul              	U   	def test_addmul(self):"
  - "Lib/test/seq_tests.py:309:14    	getitemoverwriteiter	U   	def test_getitemoverwriteiter(self):"
  - "Lib/test/seq_tests.py:324:14    	bigrepeat           	U   	def test_bigrepeat(self):"
  - "Lib/test/signalinterproctester.py:9:7       	SIGUSR      	U   	class SIGUSR1Exception(Exception"
  - "Lib/test/signalinterproctester.py:17:9      	sighup      	U   	def sighup_handler(self, signum"
  - "Lib/test/signalinterproctester.py:20:9      	sigusr      	U   	def sigusr1_handler(self, signum"
  - "Lib/test/signalinterproctester.py:46:14     	interprocess	U   	def test_interprocess_signal(self):"
  - "Lib/test/ssl_servers.py:17:32   	keycert 	U   	os.path.join(here, 'keycert.pem')"
  - "Lib/test/ssl_servers.py:37:13   	sslconn 	U   	sslconn = self.context.wrap"
  - "Lib/test/ssl_servers.py:184:55  	Diffie  	U   	curve name for EC-based Diffie-Hellman')"
  - "Lib/test/ssl_servers.py:200:21  	ecdh    	U   	context.set_ecdh_curve(args.curve_name"
  - "Lib/test/string_tests.py:28:55      	fixtesttype     	U   	change the behaviour of fixtesttype()"
  - "Lib/test/string_tests.py:39:9       	fixtype         	U   	def fixtype(self, obj):"
  - "Lib/test/string_tests.py:58:9       	checkequal      	U   	def checkequal(self, result, obj, methodname"
  - "Lib/test/string_tests.py:63:9       	realresult      	U   	realresult = getattr(obj, methodname"
  - "Lib/test/string_tests.py:82:9       	checkraises     	U   	def checkraises(self, exc, obj, methodname"
  - "Lib/test/string_tests.py:90:9       	checkcall       	U   	def checkcall(self, obj, methodname"
  - "Lib/test/string_tests.py:138:9      	teststrings     	U   	teststrings = set()"
  - "Lib/test/string_tests.py:160:29     	abcdefghiabc    	U   	self.checkequal(0, 'abcdefghiabc', 'find', 'abc')"
  - "Lib/test/string_tests.py:169:30     	rrarrrrrrrrra   	U   	self.checkequal( 2, 'rrarrrrrrrrra', 'find', 'a')"
  - "Lib/test/string_tests.py:220:55     	abcz            	U   	abcdefghiabc', 'rfind', 'abcz')"
  - "Lib/test/string_tests.py:276:39     	abcdefghiab     	U   	checkraises(ValueError, 'abcdefghiab', 'index', 'abc', 1"
  - "Lib/test/string_tests.py:301:39     	defghiabc       	U   	checkraises(ValueError, 'defghiabc', 'rindex', 'def',"
  - "Lib/test/string_tests.py:375:32     	startcase       	U   	self.checkequal(['', ' startcase'], '| startcase', 'split"
  - "Lib/test/string_tests.py:376:31     	bothcase        	U   	self.checkequal(['', 'bothcase', ''], '|bothcase|'"
  - "Lib/test/string_tests.py:394:32     	begincase       	U   	self.checkequal(['', ' begincase'], 'test begincase'"
  - "Lib/test/string_tests.py:400:40     	abbaab          	U   	checkequal(['ab', 'ab'], 'abbaab', 'split', 'ba')"
  - "Lib/test/string_tests.py:404:32     	bobb            	U   	self.checkequal(['A', 'bobb'], 'Abbobbbobb', 'split"
  - "Lib/test/string_tests.py:404:41     	Abbobbbobb      	U   	checkequal(['A', 'bobb'], 'Abbobbbobb', 'split', 'bbobb')"
  - "Lib/test/string_tests.py:404:64     	bbobb           	U   	Abbobbbobb', 'split', 'bbobb')"
  - "Lib/test/string_tests.py:405:42     	Abbobb          	U   	checkequal(['A', 'B', ''], 'AbbobbBbbobb', 'split', 'bbobb"
  - "Lib/test/string_tests.py:405:48     	Bbbobb          	U   	A', 'B', ''], 'AbbobbBbbobb', 'split', 'bbobb')"
  - "Lib/test/string_tests.py:474:27     	bbob            	U   	self.checkequal(['bbob', 'A'], 'bbobbbobbA"
  - "Lib/test/string_tests.py:474:41     	bbobbbobb       	U   	checkequal(['bbob', 'A'], 'bbobbbobbA', 'rsplit', 'bbobb"
  - "Lib/test/string_tests.py:554:17     	thethe          	U   	EQ(\"\", \"thethe\", \"replace\", \"the\","
  - "Lib/test/string_tests.py:555:17     	thethethethe    	U   	EQ(\"\", \"thethethethe\", \"replace\", \"the\","
  - "Lib/test/string_tests.py:556:21     	theatheatheathea	U   	EQ(\"aaaa\", \"theatheatheathea\", \"replace\", \"the\","
  - "Lib/test/string_tests.py:558:13     	thaet           	U   	EQ(\"thaet\", \"thaet\", \"replace"
  - "Lib/test/string_tests.py:578:20     	bbobob          	U   	EQ(\"bob\", \"bbobob\", \"replace\", \"bob\","
  - "Lib/test/string_tests.py:579:16     	Xbob            	U   	EQ(\"bobXbob\", \"bbobobXbbobob\","
  - "Lib/test/string_tests.py:579:30     	Xbbobob         	U   	EQ(\"bobXbob\", \"bbobobXbbobob\", \"replace\", \"bob\","
  - "Lib/test/string_tests.py:580:24     	aaaaaaabob      	U   	EQ(\"aaaaaaa\", \"aaaaaaabob\", \"replace\", \"bob\","
  - "Lib/test/string_tests.py:595:13     	wwho            	U   	EQ(\"wwho goes there?ww\", \"WWho"
  - "Lib/test/string_tests.py:610:13     	cobob           	U   	EQ(\"cobob\", \"bobob\", \"replace"
  - "Lib/test/string_tests.py:610:22     	bobob           	U   	EQ(\"cobob\", \"bobob\", \"replace\", \"bob\","
  - "Lib/test/string_tests.py:611:18     	Xcobocob        	U   	EQ(\"cobobXcobocob\", \"bobobXbobobob\","
  - "Lib/test/string_tests.py:611:35     	Xbobobob        	U   	cobobXcobocob\", \"bobobXbobobob\", \"replace\", \"bob\","
  - "Lib/test/string_tests.py:615:17     	Kjavi           	U   	EQ(\"ReyKKjaviKK\", \"Reykjavik\", \"replace"
  - "Lib/test/string_tests.py:619:17     	Kjavik          	U   	EQ(\"ReyKKjavik\", \"Reykjavik\", \"replace"
  - "Lib/test/string_tests.py:645:22     	bobobob         	U   	EQ(\"bobob\", \"bobobob\", \"replace\", \"bobob"
  - "Lib/test/string_tests.py:646:18     	Xbobob          	U   	EQ(\"bobobXbobob\", \"bobobobXbobobob\""
  - "Lib/test/string_tests.py:650:26     	onetwothree     	U   	self.checkequal('onetwothree', 'one!two!three!',"
  - "Lib/test/string_tests.py:690:26     	spamspam        	U   	self.checkequal('spamspam', 'spamspamspam', 'removepref"
  - "Lib/test/string_tests.py:690:38     	spamspamspam    	U   	checkequal('spamspam', 'spamspamspam', 'removeprefix', 'spam"
  - "Lib/test/string_tests.py:711:58     	blam            	U   	spam', 'removesuffix', 'blam')"
  - "Lib/test/string_tests.py:829:35     	xyzzyhelloxyzzy 	U   	checkequal('hello', 'xyzzyhelloxyzzy', 'strip', 'xyz')"
  - "Lib/test/string_tests.py:830:26     	helloxyzzy      	U   	self.checkequal('helloxyzzy', 'xyzzyhelloxyzzy'"
  - "Lib/test/string_tests.py:831:26     	xyzzyhello      	U   	self.checkequal('xyzzyhello', 'xyzzyhelloxyzzy'"
  - "Lib/test/string_tests.py:836:26     	mississipp      	U   	self.checkequal('mississipp', 'mississippi', 'strip"
  - "Lib/test/string_tests.py:912:34     	Titlecased      	U   	checkequal(True, 'A Titlecased Line', 'istitle')"
  - "Lib/test/string_tests.py:916:40     	Titlecase       	U   	checkequal(False, 'Not\\ta Titlecase String', 'istitle')"
  - "Lib/test/string_tests.py:1054:60    	lowo            	U   	helloworld', 'startswith', 'lowo', 3)"
  - "Lib/test/string_tests.py:1079:56    	hellox          	U   	hello', 'startswith', ('hellox', 'hello'))"
  - "Lib/test/string_tests.py:1081:61    	hellowo         	U   	helloworld', 'startswith', ('hellowo',"
  - "Lib/test/string_tests.py:1096:59    	worl            	U   	helloworld', 'endswith', 'worl')"
  - "Lib/test/string_tests.py:1196:26    	abcabcabc       	U   	self.checkequal('abcabcabc', 'abc', '__mul__',"
  - "Lib/test/string_tests.py:1253:9     	longvalue       	U   	longvalue = sys.maxsize + 10"
  - "Lib/test/string_tests.py:1254:9     	slongvalue      	U   	slongvalue = str(longvalue)"
  - "Lib/test/string_tests.py:1294:15    	testcapi        	U   	from _testcapi import PY_SSIZE_T_MAX"
  - "Lib/test/string_tests.py:1306:14    	floatformatting 	U   	def test_floatformatting(self):"
  - "Lib/test/string_tests.py:1336:52    	tion            	U   	is the par', 'ti', 'tion method'),"
  - "Lib/test/string_tests.py:1351:39    	rparti          	U   	checkequal(('this is the rparti', 'ti', 'on method'"
  - "Lib/test/string_tests.py:1436:21    	optimisation    	U   	# Check the optimisation still occurs for standard"
  - "Lib/test/subprocessdata/qgrep.py:1:50       	fgrep   	U   	argument, simulated fgrep with a single"
  - "Lib/test/support/__init__.py:40:20      	bigaddrspacetest    	U   	\"bigmemtest\", \"bigaddrspacetest\", \"cpython_only\", \"get"
  - "Lib/test/support/__init__.py:43:41      	strfptime           	U   	\"skip_if_buggy_ucrt_strfptime\","
  - "Lib/test/support/__init__.py:47:6       	setswitchinterval   	U   	\"setswitchinterval\","
  - "Lib/test/support/__init__.py:49:11      	urlresource         	U   	\"open_urlresource\","
  - "Lib/test/support/__init__.py:53:38      	findfile            	U   	locale\", \"swap_item\", \"findfile\","
  - "Lib/test/support/__init__.py:54:69      	sortdict            	U   	SuppressCrashReport\", \"sortdict\","
  - "Lib/test/support/__init__.py:172:36     	bigmem              	U   	# Disable bigmem tests (they will still"
  - "Lib/test/support/__init__.py:296:28     	sysname             	U   	requires_unix_version(sysname, min_version):"
  - "Lib/test/support/__init__.py:379:11     	fsanitize           	U   	'-fsanitize=memory' in _cflags or"
  - "Lib/test/support/__init__.py:434:13     	getformat           	U   	float.__getformat__(\"double\").startswith"
  - "Lib/test/support/__init__.py:465:25     	capi                	U   	requires_legacy_unicode_capi = unittest.skipUnless"
  - "Lib/test/support/__init__.py:499:56     	libc's              	U   	errors generated by macOS libc's malloc are"
  - "Lib/test/support/__init__.py:538:5      	reprpairs           	U   	reprpairs = [\"%r: %r\" % pair for"
  - "Lib/test/support/__init__.py:539:5      	withcommas          	U   	withcommas = \", \".join(reprpairs"
  - "Lib/test/support/__init__.py:542:45     	errtext             	U   	testcase, statement, errtext='', *, lineno=None,"
  - "Lib/test/support/__init__.py:590:16     	addheaders          	U   	opener.addheaders.append(('Accept-Encoding"
  - "Lib/test/support/__init__.py:675:20     	isenabled           	U   	# have_gc = gc.isenabled()"
  - "Lib/test/support/__init__.py:697:18     	getobjects          	U   	if hasattr(sys, \"getobjects\"):"
  - "Lib/test/support/__init__.py:700:2      	vheader             	U   	_vheader = _header + 'n'"
  - "Lib/test/support/__init__.py:702:5      	calcobjsize         	U   	def calcobjsize(fmt):"
  - "Lib/test/support/__init__.py:706:5      	calcvobjsize        	U   	def calcvobjsize(fmt):"
  - "Lib/test/support/__init__.py:715:13     	testinternalcapi    	U   	import _testinternalcapi"
  - "Lib/test/support/__init__.py:730:21     	catstr              	U   	def run_with_locale(catstr, *locales):"
  - "Lib/test/support/__init__.py:763:17     	tzset               	U   	tzset = time.tzset"
  - "Lib/test/support/__init__.py:828:14     	procfile            	U   	self.procfile = '/proc/{pid}/statm"
  - "Lib/test/support/__init__.py:828:38     	statm               	U   	procfile = '/proc/{pid}/statm'.format(pid=os.getpid"
  - "Lib/test/support/__init__.py:948:9      	guardnames          	U   	guardnames, default = _parse_guards"
  - "Lib/test/support/__init__.py:1007:5     	newtests            	U   	newtests = []"
  - "Lib/test/support/__init__.py:1398:49    	dllhandle           	U   	GetModuleFileName(sys.dllhandle)"
  - "Lib/test/support/__init__.py:1562:29    	coredump            	U   	disable the creation of coredump file."
  - "Lib/test/support/__init__.py:1688:12    	subinterp           	U   	def run_in_subinterp(code):"
  - "Lib/test/support/__init__.py:1690:19    	subinterpreter      	U   	Run code in a subinterpreter. Raise unittest.SkipTest"
  - "Lib/test/support/__init__.py:1833:10    	pymalloc            	U   	def with_pymalloc():"
  - "Lib/test/support/__init__.py:1895:19    	sdev                	U   	# Return mean and sdev of number of collisions"
  - "Lib/test/support/__init__.py:1895:61    	nballs              	U   	collisions when tossing nballs balls"
  - "Lib/test/support/__init__.py:1896:28    	nbins               	U   	uniformly at random into nbins bins. By definition"
  - "Lib/test/support/__init__.py:1907:28    	meanempty           	U   	n*(n-1)*(1-2/n)**k + meanempty - meanempty**2 ="
  - "Lib/test/support/__init__.py:1935:61    	unraisablehook      	U   	exception using sys.unraisablehook."
  - "Lib/test/support/bytecode_helper.py:17:43   	argval  	U   	rtInBytecode(self, x, opname, argval=_UNSPECIFIED):"
  - "Lib/test/support/hashlib_helper.py:11:14    	hashdigest  	U   	def requires_hashdigest(digestname, openssl"
  - "Lib/test/support/hashlib_helper.py:11:25    	digestname  	U   	requires_hashdigest(digestname, openssl=None, usedforsecurit"
  - "Lib/test/support/import_helper.py:205:21    	oldmodules  	U   	def modules_cleanup(oldmodules):"
  - "Lib/test/support/import_helper.py:217:53    	importhooks 	U   	this function (as test_importhooks and test_pkg"
  - "Lib/test/support/interpreters.py:1:4        	Subinterpreters     	U   	\"\"\"Subinterpreters High Level Module.\""
  - "Lib/test/support/interpreters.py:4:9        	xxsubinterpreters   	U   	import _xxsubinterpreters as _interpreters"
  - "Lib/test/support/os_helper.py:84:29     	Alef    	U   	05D0 (Hebrew Letter Alef): Encodable to cp42"
  - "Lib/test/support/os_helper.py:193:6     	xattr   	U   	_can_xattr = None"
  - "Lib/test/support/os_helper.py:244:34    	waitall 	U   	waitfor(func, pathname, waitall=False):"
  - "Lib/test/support/os_helper.py:304:10    	longpath	U   	def _longpath(path):"
  - "Lib/test/support/os_helper.py:433:20    	tempcwd 	U   	def temp_cwd(name='tempcwd', quiet=False):"
  - "Lib/test/support/os_helper.py:566:9     	oldmask 	U   	oldmask = os.umask(umask)"
  - "Lib/test/support/script_helper.py:108:24    	cleanenv	U   	if env_vars.pop('__cleanenv', None):"
  - "Lib/test/support/socket_helper.py:71:45     	tempsock    	U   	family, socktype) as tempsock:"
  - "Lib/test/support/socket_helper.py:84:5      	multicasting	U   	multicasting via multiple UDP sockets"
  - "Lib/test/test__osx_support.py:74:26     	pthreads	U   	'CC': 'gcc-test -pthreads',"
  - "Lib/test/test_abc.py:176:17     	abstractthing       	U   	for abstractthing in [abc.abstractmethod"
  - "Lib/test/test_abc.py:234:18     	customdescriptors   	U   	def test_customdescriptors_with_abstractmethod"
  - "Lib/test/test_argparse.py:171:36    	bodydict        	U   	_(cls, name, bases, bodydict):"
  - "Lib/test/test_argparse.py:204:13    	listargs        	U   	def listargs(parser, args):"
  - "Lib/test/test_argparse.py:208:13    	sysargs         	U   	def sysargs(parser, args):"
  - "Lib/test/test_argparse.py:298:35    	yyyx            	U   	'-yx', '-yz a', '-yyyx', '-yyyza', '-xyza'"
  - "Lib/test/test_argparse.py:298:44    	yyyza           	U   	'-yz a', '-yyyx', '-yyyza', '-xyza']"
  - "Lib/test/test_argparse.py:298:54    	xyza            	U   	-yyyx', '-yyyza', '-xyza']"
  - "Lib/test/test_argparse.py:332:61    	foorab          	U   	Sig('-foobar'), Sig('-foorab')]"
  - "Lib/test/test_argparse.py:333:50    	foob            	U   	'-fo', '-foo b', '-foob', '-fooba', '-foora"
  - "Lib/test/test_argparse.py:333:59    	fooba           	U   	-foo b', '-foob', '-fooba', '-foora']"
  - "Lib/test/test_argparse.py:333:69    	foora           	U   	-foob', '-fooba', '-foora']"
  - "Lib/test/test_argparse.py:353:12    	foor            	U   	('-foor a', NS(foobar=None,"
  - "Lib/test/test_argparse.py:400:13    	badg            	U   	('--badg', NS(badger=True, bat"
  - "Lib/test/test_argparse.py:433:28    	fbar            	U   	failures = ['--bar', '-fbar', '-fbaz', '-bazf',"
  - "Lib/test/test_argparse.py:433:37    	fbaz            	U   	'--bar', '-fbar', '-fbaz', '-bazf', '-b B',"
  - "Lib/test/test_argparse.py:433:46    	bazf            	U   	'-fbar', '-fbaz', '-bazf', '-b B', 'B']"
  - "Lib/test/test_argparse.py:528:65    	zabbaz          	U   	Sig('--baz', dest='zabbaz')]"
  - "Lib/test/test_argparse.py:679:12    	xfoo            	U   	('-xfoo', NS(x='foo')),"
  - "Lib/test/test_argparse.py:818:16    	foobaz          	U   	Sig('--foobaz'),"
  - "Lib/test/test_argparse.py:819:16    	fooble          	U   	Sig('--fooble', action='store_true"
  - "Lib/test/test_argparse.py:826:13    	foobl           	U   	('--foobl --foo g', NS(foo='g"
  - "Lib/test/test_argparse.py:836:16    	foodle          	U   	Sig('--foodle', action='store_true"
  - "Lib/test/test_argparse.py:837:16    	foonly          	U   	Sig('--foonly'),"
  - "Lib/test/test_argparse.py:839:19    	foon            	U   	failures = ['-foon 3', '--foon 3', '--food"
  - "Lib/test/test_argparse.py:879:12    	ccrcc           	U   	('-ccrcc', NS(r='cc', c=2)),"
  - "Lib/test/test_argparse.py:1203:51   	narg            	U   	no nargs, optional narg and 1 nargs\"\"\""
  - "Lib/test/test_argparse.py:1587:18   	backupattr      	U   	self.backupattr = BIN_STDOUT_SENTINEL"
  - "Lib/test/test_argparse.py:1603:4    	bstdin          	U   	eq_bstdin = StdStreamComparer"
  - "Lib/test/test_argparse.py:1604:4    	bstdout         	U   	eq_bstdout = StdStreamComparer"
  - "Lib/test/test_argparse.py:1605:4    	bstderr         	U   	eq_bstderr = StdStreamComparer"
  - "Lib/test/test_argparse.py:2419:14   	nongroup        	U   	def test_nongroup_first(self):"
  - "Lib/test/test_argparse.py:2446:29   	frell           	U   	group.add_argument('frell')"
  - "Lib/test/test_argparse.py:2499:21   	granparent      	U   	def test_single_granparent_mutex(self):"
  - "Lib/test/test_argparse.py:2565:9    	wxyzabe         	U   	wxyzabe_parser = subparsers"
  - "Lib/test/test_argparse.py:2767:32   	fghij           	U   	parser.add_argument('--fghij', help='fghij help'"
  - "Lib/test/test_argparse.py:2769:31   	klmno           	U   	group.add_argument('--klmno', help='klmno help'"
  - "Lib/test/test_argparse.py:2770:31   	pqrst           	U   	group.add_argument('--pqrst', help='pqrst help'"
  - "Lib/test/test_argparse.py:3156:44   	xfoox           	U   	argument('-x', default='xfoox')"
  - "Lib/test/test_argparse.py:3187:9    	xparser         	U   	xparser = parser.add_subparsers"
  - "Lib/test/test_argparse.py:3505:14   	ekiekiekifekang 	U   	Sig('ekiekiekifekang', help='EKI HELP'),"
  - "Lib/test/test_argparse.py:3689:16   	bazz            	U   	Sig('--bazz', action=argparse.BooleanOpti"
  - "Lib/test/test_argparse.py:3690:56   	Bazz            	U   	argparse.SUPPRESS, help='Bazz!'),"
  - "Lib/test/test_argparse.py:4399:16   	quux            	U   	Sig('--quux', help=\"Set the quux"
  - "Lib/test/test_argparse.py:4907:24   	starkwargs      	U   	def test_namespace_starkwargs_notidentifier(self)"
  - "Lib/test/test_argparse.py:4907:35   	notidentifier   	U   	namespace_starkwargs_notidentifier(self):"
  - "Lib/test/test_argparse.py:5033:35   	Xargument       	U   	parser.parse_args(['myXargument'])"
  - "Lib/test/test_argparse.py:5323:20   	zeroormore      	U   	def test_nargs_zeroormore_metavar_string(self"
  - "Lib/test/test_argparse.py:5340:20   	oneormore       	U   	def test_nargs_oneormore_metavar_string(self"
  - "Lib/test/test_argparse.py:5494:22   	spammy          	U   	'this_is_spammy_prog_with_a_long_name"
  - "Lib/test/test_array.py:1:13     	arraymodule         	U   	\"\"\"Test the arraymodule."
  - "Lib/test/test_array.py:26:34    	newarg              	U   	init__(self, typecode, newarg=None):"
  - "Lib/test/test_array.py:29:1     	typecodes           	U   	typecodes = 'ubBhHiIlLfdqQ'"
  - "Lib/test/test_array.py:29:22    	Lfdq                	U   	typecodes = 'ubBhHiIlLfdqQ'"
  - "Lib/test/test_array.py:97:12    	Reconstructor       	U   	class ArrayReconstructorTest(unittest.TestCase"
  - "Lib/test/test_array.py:168:30   	mformat             	U   	valid_typecodes, mformat_code, struct_fmt, values"
  - "Lib/test/test_array.py:169:13   	arraystr            	U   	arraystr = struct.pack(struct"
  - "Lib/test/test_array.py:183:9    	teststr             	U   	teststr = \"Bonne Journ\\xe9e"
  - "Lib/test/test_array.py:183:26   	Journ               	U   	teststr = \"Bonne Journ\\xe9e \\U0002030a\\U00"
  - "Lib/test/test_array.py:203:7    	smallerexample      	U   	# smallerexample: the same length as"
  - "Lib/test/test_array.py:204:7    	biggerexample       	U   	# biggerexample: the same length as"
  - "Lib/test/test_array.py:206:7    	minitemsize         	U   	# minitemsize: the minimum guaranteed"
  - "Lib/test/test_array.py:211:9    	badtypecode         	U   	def badtypecode(self):"
  - "Lib/test/test_array.py:239:14   	byteswap            	U   	def test_byteswap(self):"
  - "Lib/test/test_array.py:313:13   	itorig              	U   	itorig = iter(orig)"
  - "Lib/test/test_array.py:452:14   	tofromfile          	U   	def test_tofromfile(self):"
  - "Lib/test/test_array.py:485:14   	filewrite           	U   	def test_filewrite(self):"
  - "Lib/test/test_array.py:504:14   	tofromlist          	U   	def test_tofromlist(self):"
  - "Lib/test/test_array.py:514:14   	tofrombytes         	U   	def test_tofrombytes(self):"
  - "Lib/test/test_array.py:527:14   	fromarray           	U   	def test_fromarray(self):"
  - "Lib/test/test_array.py:1056:14  	coveritertraverse   	U   	def test_coveritertraverse(self):"
  - "Lib/test/test_array.py:1088:46  	fromunicode         	U   	assertRaises(BufferError, a.fromunicode, a.tounicode())"
  - "Lib/test/test_array.py:1109:40  	getrefcount         	U   	skipUnless(hasattr(sys, 'getrefcount'),"
  - "Lib/test/test_array.py:1134:9   	basesize            	U   	basesize = support.calcvobjsize"
  - "Lib/test/test_array.py:1180:38  	ufefe               	U   	llerexample = '\\x01\\u263a\\x00\\ufefe'"
  - "Lib/test/test_array.py:1268:14  	iterationcontains   	U   	def test_iterationcontains(self):"
  - "Lib/test/test_array.py:1326:7   	Intable             	U   	class Intable:"
  - "Lib/test/test_ast.py:259:16     	Trueorder   	U   	def _assertTrueorder(self, ast_node, parent"
  - "Lib/test/test_ast.py:402:14     	classattrs  	U   	def test_classattrs(self):"
  - "Lib/test/test_ast.py:462:14     	realtype    	U   	def test_realtype(self):"
  - "Lib/test/test_ast.py:545:14     	nodeclasses 	U   	def test_nodeclasses(self):"
  - "Lib/test/test_ast.py:551:11     	foobarbaz   	U   	x.foobarbaz = 5"
  - "Lib/test/test_ast.py:556:9      	addop       	U   	addop = ast.Add()"
  - "Lib/test/test_ast.py:778:44     	Contant     	U   	redundant kind for Contant node"
  - "Lib/test/test_ast.py:1237:34    	myclass     	U   	return ast.ClassDef(\"myclass\", bases, keywords,"
  - "Lib/test/test_ast.py:1363:9     	assrt       	U   	assrt = ast.Assert(ast.Name"
  - "Lib/test/test_ast.py:1374:14    	importfrom  	U   	def test_importfrom(self):"
  - "Lib/test/test_ast.py:1424:14    	ifexp       	U   	def test_ifexp(self):"
  - "Lib/test/test_ast.py:1481:14    	generatorexp	U   	def test_generatorexp(self):"
  - "Lib/test/test_ast.py:1538:15    	subfloat    	U   	class subfloat(float):"
  - "Lib/test/test_ast.py:1540:15    	subcomplex  	U   	class subcomplex(complex):"
  - "Lib/test/test_ast.py:1935:9     	fdef        	U   	fdef = ast.parse(s).body"
  - "Lib/test/test_ast.py:1961:9     	cdef        	U   	cdef = ast.parse(s).body"
  - "Lib/test/test_ast.py:2036:9     	fstr        	U   	fstr = self._parse_value"
  - "Lib/test/test_ast.py:2207:22    	ЖЖЖЖЖ       	U   	\"ЖЖЖЖЖ\""
  - "Lib/test/test_ast.py:2275:54    	wlog        	U   	warnings(record=True) as wlog:"
  - "Lib/test/test_asyncgen.py:52:8      	anext       	U   	def py_anext(iterator, default=_no"
  - "Lib/test/test_asyncgen.py:74:39     	crosstest   	U   	exactly what we want -- crosstest pure-Python high-level"
  - "Lib/test/test_asyncgen.py:517:26    	aiter       	U   	def test_async_gen_aiter(self):"
  - "Lib/test/test_asyncgen.py:610:23    	Anext       	U   	class WithIterAnext:"
  - "Lib/test/test_asyncgen.py:662:19    	agenfn      	U   	async def agenfn():"
  - "Lib/test/test_asyncgen.py:1180:13   	sgen        	U   	def sgen():"
  - "Lib/test/test_asyncgen.py:1605:23   	nonstarted  	U   	def test_asyncgen_nonstarted_hooks_are_cancellable"
  - "Lib/test/test_asynchat.py:106:5     	usepoll 	U   	usepoll = False"
  - "Lib/test/test_asynchat.py:151:40    	termlen 	U   	terminator_check(self, termlen):"
  - "Lib/test/test_asyncore.py:26:7      	dummysocket         	U   	class dummysocket:"
  - "Lib/test/test_asyncore.py:36:7      	dummychannel        	U   	class dummychannel:"
  - "Lib/test/test_asyncore.py:43:7      	exitingdummy        	U   	class exitingdummy:"
  - "Lib/test/test_asyncore.py:54:7      	crashingdummy       	U   	class crashingdummy:"
  - "Lib/test/test_asyncore.py:69:30     	serv                	U   	capture_server(evt, buf, serv):"
  - "Lib/test/test_asyncore.py:105:14    	readwriteexc        	U   	def test_readwriteexc(self):"
  - "Lib/test/test_asyncore.py:138:32    	expt                	U   	attributes = ('read', 'expt', 'write', 'closed'"
  - "Lib/test/test_asyncore.py:149:15    	testobj             	U   	class testobj:"
  - "Lib/test/test_asyncore.py:172:19    	expectedattr        	U   	for flag, expectedattr in expected:"
  - "Lib/test/test_asyncore.py:173:13    	tobj                	U   	tobj = testobj()"
  - "Lib/test/test_asyncore.py:194:14    	closeall            	U   	def test_closeall(self):"
  - "Lib/test/test_asyncore.py:200:30    	usedefault          	U   	closeall_check(self, usedefault):"
  - "Lib/test/test_asyncore.py:204:9     	testmap             	U   	testmap = {}"
  - "Lib/test/test_asyncore.py:212:13    	socketmap           	U   	socketmap = asyncore.socket_map"
  - "Lib/test/test_asyncore.py:315:7     	dispatcherwithsend  	U   	class dispatcherwithsend_noread(asyncore.dispatcher"
  - "Lib/test/test_asyncore.py:315:26    	noread              	U   	class dispatcherwithsend_noread(asyncore.dispatcher"
  - "Lib/test/test_atexit.py:52:7    	Subinterpreter  	U   	class SubinterpreterTest(unittest.TestCase"
  - "Lib/test/test_atexit.py:58:21   	ncallbacks      	U   	n = atexit._ncallbacks()"
  - "Lib/test/test_base64.py:116:20  	nonbyte 	U   	self.check_nonbyte_element_format(base"
  - "Lib/test/test_base64.py:185:29  	Ghvbi   	U   	tests = {b\"d3d3LnB5dGhvbi5vcmc=\": b\"www.python"
  - "Lib/test/test_base64.py:185:35  	vcmc    	U   	= {b\"d3d3LnB5dGhvbi5vcmc=\": b\"www.python.org"
  - "Lib/test/test_base64.py:207:57  	xbeo    	U   	cd', b'*$'): b'\\xd3V\\xbeo\\xf7\\x1d',"
  - "Lib/test/test_base64.py:405:59  	Ng'GVB  	U   	-'\"9eu7#RLhG$k3[W&.oNg'GVB\"(`=52*$$\"\"\""
  - "Lib/test/test_base64.py:408:49  	YOHG    	U   	pHnJ:W<)KS>/9Ll%\"IN/`jYOHG]iPa.Q$R$jD4S=Q7DTV8"
  - "Lib/test/test_base64.py:409:20  	nsrd    	U   	b\"\"\"nsrdW2ZetXKAY/Yd(L?['d?O"
  - "Lib/test/test_base64.py:409:29  	XKAY    	U   	b\"\"\"nsrdW2ZetXKAY/Yd(L?['d?O\\\\@K2_]Y2"
  - "Lib/test/test_base64.py:410:35  	gtgi    	U   	b\"\"\"*^:jeCE.%f\\\\,!5gtgiEi8N\\\\UjQ5OekiqBum-X"
  - "Lib/test/test_base64.py:410:49  	Oekiq   	U   	f\\\\,!5gtgiEi8N\\\\UjQ5OekiqBum-X60nF?)@o_%qPq\"ad"
  - "Lib/test/test_base64.py:457:70  	Tbai    	U   	ioWMyV&XlZI|Y;A6DaB*^Tbai%j\"\"\""
  - "Lib/test/test_base64.py:458:23  	Jqze    	U   	b\"\"\"czJqze0_d@fPsR8goTEOh>41ejE"
  - "Lib/test/test_base64.py:458:50  	ukdcy   	U   	d@fPsR8goTEOh>41ejE#<ukdcy;l$Dm3n3<ZJoSmMZprN9p"
  - "Lib/test/test_base64.py:460:42  	Njxq    	U   	9zP<)YaD4*xB0K+}+;a;Njxq<mKk)=;`X~?CtLF@bU8V"
  - "Lib/test/test_base64.py:464:63  	UIZOH   	U   	ZEkOHadLBXb#`}nd3r%YLqtVJM@UIZOH55pPf$@(\"\"\""
  - "Lib/test/test_base64.py:466:36  	PVPs    	U   	no padding..': b'Zf_uPVPs@!Zf7no',"
  - "Lib/test/test_base64.py:470:41  	Wgug    	U   	compr: ': b'Q*dEpWgug3ZE$irARr(h',"
  - "Lib/test/test_base64.py:496:68  	Jand    	U   	qtRH$VbC6UX@47n?3D92&&T:Jand;c\"\"\""
  - "Lib/test/test_base64.py:504:46  	compr   	U   	D/aMV+<VdL': b'Space compr: ',"
  - "Lib/test/test_base64.py:669:24  	Rpbjpvc 	U   	br\"b'QWxhZGRpbjpvcGVuIHNlc2FtZQ==\\n'\","
  - "Lib/test/test_bdb.py:6:38       	eargs   	U   	[lineno[, co_name[, eargs]]]]), (set_type, [sargs"
  - "Lib/test/test_bdb.py:6:62       	sargs   	U   	eargs]]]]), (set_type, [sargs])"
  - "Lib/test/test_bdb.py:15:22      	tfunc   	U   	('line', 2, 'tfunc_main'), ('step', )"
  - "Lib/test/test_bdb.py:90:9       	enab    	U   	enab = 'yes' if bp.enabled"
  - "Lib/test/test_bdb.py:131:26     	bpnum   	U   	def set_ignore(self, bpnum):"
  - "Lib/test/test_bdb.py:182:63     	ceval   	U   	exc_trace() in Python/ceval.c discards"
  - "Lib/test/test_bdb.py:280:17     	bpnums  	U   	bpnums = sorted(bps.keys()"
  - "Lib/test/test_bdb.py:1166:22    	subgen  	U   	def test_subgen():"
  - "Lib/test/test_bigmem.py:7:36    	bitrot              	U   	themselves don't suffer from bitrot. To run them for real"
  - "Lib/test/test_bigmem.py:29:53   	precisionbigmemtest 	U   	be meaningful. The precisionbigmemtest will"
  - "Lib/test/test_bigmem.py:33:18   	houserules          	U   	# Bigmem testing houserules:"
  - "Lib/test/test_bigmem.py:36:63   	largestring         	U   	forget that 's = create_largestring()'"
  - "Lib/test/test_bigmem.py:41:39   	errormessage        	U   	lengthy operation and the errormessage will be utterly useless"
  - "Lib/test/test_bigmem.py:49:31   	subobject           	U   	large object, make the subobject of a length that is"
  - "Lib/test/test_bigmem.py:86:9    	lpadsize            	U   	lpadsize = rpadsize = (len(s"
  - "Lib/test/test_bigmem.py:86:20   	rpadsize            	U   	lpadsize = rpadsize = (len(s) - len(SUBSTR"
  - "Lib/test/test_bigmem.py:133:9   	sublen              	U   	sublen = len(SUBSTR)"
  - "Lib/test/test_bigmem.py:241:39  	Abbbbb              	U   	assertTrue(x.endswith(_('Abbbbb')))"
  - "Lib/test/test_bigmem.py:436:21  	Spaa                	U   	SUBSTR = _('SpaaHAaaAaham')"
  - "Lib/test/test_bigmem.py:436:29  	Aaham               	U   	SUBSTR = _('SpaaHAaaAaham')"
  - "Lib/test/test_bigmem.py:504:9   	stepsize            	U   	stepsize = len(s) // 100"
  - "Lib/test/test_bigmem.py:580:51  	expectedsize        	U   	self, size, enc, c='.', expectedsize=None):"
  - "Lib/test/test_bigmem.py:719:61  	DFFF                	U   	surrogates \\uDC00-\\uDFFF."
  - "Lib/test/test_bigmem.py:720:19  	DCBA                	U   	char = \"\\uDCBA\""
  - "Lib/test/test_bigmem.py:726:47  	udcba               	U   	assertTrue(r.endswith(r\"\\udcba'\"), r[-10:])"
  - "Lib/test/test_bigmem.py:739:52  	dcba                	U   	assertTrue(r.endswith(r\"\\U0001dcba'\"), r[-12:])"
  - "Lib/test/test_bigmem.py:978:34  	Falses              	U   	The repr of a tuple of Falses is exactly 7 times the"
  - "Lib/test/test_bigmem.py:1170:12 	overallocates       	U   	# list overallocates ~1/8th of the total"
  - "Lib/test/test_binascii.py:95:13     	addnoise        	U   	def addnoise(line):"
  - "Lib/test/test_binascii.py:254:16    	hexlification   	U   	# test hexlification"
  - "Lib/test/test_binascii.py:277:23    	pystrhex        	U   	# path within pystrhex.c."
  - "Lib/test/test_binop.py:13:5     	isint   	U   	def isint(x):"
  - "Lib/test/test_binop.py:17:5     	isnum   	U   	def isnum(x):"
  - "Lib/test/test_binop.py:419:23   	rmethod 	U   	def test_fallback_rmethod_blocking(self):"
  - "Lib/test/test_bisect.py:139:20  	pyrange             	U   	def test_large_pyrange(self):"
  - "Lib/test/test_bisect.py:190:14  	backcompatibility   	U   	def test_backcompatibility(self):"
  - "Lib/test/test_bisect.py:224:34  	Iiij                	U   	sorted('aBcDeEfgHhiIiij', key=keyfunc)"
  - "Lib/test/test_bisect.py:241:30  	targetlist          	U   	a target list, the targetlist remains sorted."
  - "Lib/test/test_bisect.py:271:13  	insorted            	U   	for insorted in (list(), UserList"
  - "Lib/test/test_bool.py:237:14    	fileclosed  	U   	def test_fileclosed(self):"
  - "Lib/test/test_bool.py:277:14    	picklevalues	U   	def test_picklevalues(self):"
  - "Lib/test/test_bool.py:325:13    	badval      	U   	for badval in ['illegal', -1,"
  - "Lib/test/test_buffer.py:13:34   	Krah            	U   	and designed by Stefan Krah for Python 3.3."
  - "Lib/test/test_buffer.py:110:1   	fmtdict         	U   	fmtdict = {"
  - "Lib/test/test_buffer.py:148:4   	bytefmt         	U   	'bytefmt': (['@b', 'b'],"
  - "Lib/test/test_buffer.py:186:5   	xfmt            	U   	xfmt = mode + '#'"
  - "Lib/test/test_buffer.py:188:5   	nmemb           	U   	nmemb = randrange(2, 10)"
  - "Lib/test/test_buffer.py:198:5   	randitems       	U   	def randitems(n, obj='ndarray', mode"
  - "Lib/test/test_buffer.py:217:17  	nitems          	U   	def iter_format(nitems, testobj='ndarray')"
  - "Lib/test/test_buffer.py:243:5   	atomp           	U   	def atomp(lst):"
  - "Lib/test/test_buffer.py:247:5   	listp           	U   	def listp(lst):"
  - "Lib/test/test_buffer.py:301:5   	carray          	U   	def carray(items, shape):"
  - "Lib/test/test_buffer.py:306:5   	farray          	U   	def farray(items, shape):"
  - "Lib/test/test_buffer.py:316:5   	getindex        	U   	def getindex(ndim, ind, strides)"
  - "Lib/test/test_buffer.py:329:5   	sstrides        	U   	sstrides = strides_from_shape"
  - "Lib/test/test_buffer.py:330:5   	dstrides        	U   	dstrides = strides_from_shape"
  - "Lib/test/test_buffer.py:359:5   	multislice      	U   	def multislice(lst, slices):"
  - "Lib/test/test_buffer.py:363:24  	sublst          	U   	return [multislice(sublst, slices[1:]) for sublst"
  - "Lib/test/test_buffer.py:365:14  	llst            	U   	def m_assign(llst, rlst, lslices, rslices"
  - "Lib/test/test_buffer.py:365:20  	rlst            	U   	def m_assign(llst, rlst, lslices, rslices):"
  - "Lib/test/test_buffer.py:365:26  	lslices         	U   	m_assign(llst, rlst, lslices, rslices):"
  - "Lib/test/test_buffer.py:365:35  	rslices         	U   	llst, rlst, lslices, rslices):"
  - "Lib/test/test_buffer.py:389:5   	lshape          	U   	lshape = slice_shape(llst,"
  - "Lib/test/test_buffer.py:390:5   	rshape          	U   	rshape = slice_shape(rlst,"
  - "Lib/test/test_buffer.py:403:27  	lvalue          	U   	raise ValueError(\"lvalue and rvalue have different"
  - "Lib/test/test_buffer.py:403:38  	rvalue          	U   	ValueError(\"lvalue and rvalue have different structures"
  - "Lib/test/test_buffer.py:427:10  	memlen          	U   	# t = (memlen, itemsize, ndim, shape"
  - "Lib/test/test_buffer.py:449:5   	imin            	U   	imin = sum(strides[j]*(shape"
  - "Lib/test/test_buffer.py:451:5   	imax            	U   	imax = sum(strides[j]*(shape"
  - "Lib/test/test_buffer.py:483:37  	maxdim          	U   	structure(itemsize, valid, maxdim=5, maxshape=16, shape"
  - "Lib/test/test_buffer.py:483:47  	maxshape        	U   	itemsize, valid, maxdim=5, maxshape=16, shape=()):"
  - "Lib/test/test_buffer.py:500:9   	minshape        	U   	minshape = 2"
  - "Lib/test/test_buffer.py:513:5   	maxstride       	U   	maxstride = 5"
  - "Lib/test/test_buffer.py:546:5   	randslice       	U   	def randslice_from_slicelen(slicelen"
  - "Lib/test/test_buffer.py:546:20  	slicelen        	U   	def randslice_from_slicelen(slicelen, listlen):"
  - "Lib/test/test_buffer.py:546:39  	listlen         	U   	from_slicelen(slicelen, listlen):"
  - "Lib/test/test_buffer.py:548:5   	maxstart        	U   	maxstart = listlen - slicelen"
  - "Lib/test/test_buffer.py:550:5   	maxstep         	U   	maxstep = (listlen - start)"
  - "Lib/test/test_buffer.py:561:18  	shapeof         	U   	such that shapeof(x[lslices]) == shapeof"
  - "Lib/test/test_buffer.py:616:9   	fmtchar         	U   	'fmtchar'.\"\"\""
  - "Lib/test/test_buffer.py:633:24  	dtype           	U   	dtype=fmt, offset=offset)"
  - "Lib/test/test_buffer.py:643:35  	bytelen         	U   	with n * itemsize = bytelen. If shape is given,"
  - "Lib/test/test_buffer.py:662:5   	byteitems       	U   	byteitems = [mem[i:i+itemsize"
  - "Lib/test/test_buffer.py:673:5   	gencastshapes   	U   	def gencastshapes():"
  - "Lib/test/test_buffer.py:689:5   	genslices       	U   	def genslices(n):"
  - "Lib/test/test_buffer.py:698:5   	rslice          	U   	def rslice(n, allow_empty=False"
  - "Lib/test/test_buffer.py:702:5   	minlen          	U   	minlen = 0 if allow_empty or"
  - "Lib/test/test_buffer.py:722:5   	rpermutation    	U   	def rpermutation(iterable, r=None):"
  - "Lib/test/test_buffer.py:739:46  	suboffsets      	U   	shape=%s, strides=%s, suboffsets=%s, offset=%s, \""
  - "Lib/test/test_buffer.py:781:65  	getbuf          	U   	only needed for test_getbuf()."
  - "Lib/test/test_buffer.py:786:13  	suboffset       	U   	suboffset0 = 0"
  - "Lib/test/test_buffer.py:875:21  	contig          	U   	contig = get_contiguous(result"
  - "Lib/test/test_buffer.py:891:21  	initlst         	U   	initlst = [struct.unpack_from"
  - "Lib/test/test_buffer.py:1027:19 	STRIDED         	U   	PyBUF_STRIDED, PyBUF_STRIDED_RO,"
  - "Lib/test/test_buffer.py:1028:19 	CONTIG          	U   	PyBUF_CONTIG, PyBUF_CONTIG_RO,"
  - "Lib/test/test_buffer.py:1051:9  	ndflags         	U   	ndflags = ("
  - "Lib/test/test_buffer.py:1347:22 	multidim        	U   	def test_ndarray_multidim(self):"
  - "Lib/test/test_buffer.py:1541:32 	lobject         	U   	assign single value: lobject = robject"
  - "Lib/test/test_buffer.py:1541:42 	robject         	U   	single value: lobject = robject"
  - "Lib/test/test_buffer.py:1734:21 	listerr         	U   	listerr = None"
  - "Lib/test/test_buffer.py:1740:21 	nderr           	U   	nderr = None"
  - "Lib/test/test_buffer.py:1742:25 	ndsliced        	U   	ndsliced = nd[slices]"
  - "Lib/test/test_buffer.py:1788:17 	lslice          	U   	for lslice in genslices(5):"
  - "Lib/test/test_buffer.py:1797:25 	lsterr          	U   	lsterr = None"
  - "Lib/test/test_buffer.py:1801:29 	lval            	U   	lval = lst[lslice]"
  - "Lib/test/test_buffer.py:1823:25 	mverr           	U   	mverr = None"
  - "Lib/test/test_buffer.py:1885:17 	xlist           	U   	xlist = x.tolist()"
  - "Lib/test/test_buffer.py:1889:21 	mvlist          	U   	mvlist = mv.tolist()"
  - "Lib/test/test_buffer.py:1895:21 	ylist           	U   	ylist = y.tolist()"
  - "Lib/test/test_buffer.py:1954:17 	litems          	U   	litems = randitems_from_structure"
  - "Lib/test/test_buffer.py:1955:17 	ritems          	U   	ritems = randitems_from_structure"
  - "Lib/test/test_buffer.py:1960:17 	xllist          	U   	xllist = xl.tolist()"
  - "Lib/test/test_buffer.py:1961:17 	xrlist          	U   	xrlist = xr.tolist()"
  - "Lib/test/test_buffer.py:1973:21 	yllist          	U   	yllist = yl.tolist()"
  - "Lib/test/test_buffer.py:1974:21 	yrlist          	U   	yrlist = yr.tolist()"
  - "Lib/test/test_buffer.py:2165:13 	ndbytes         	U   	ndbytes = nd.tobytes()"
  - "Lib/test/test_buffer.py:2219:17 	testbuffer's    	U   	### _testbuffer's ndarray:"
  - "Lib/test/test_buffer.py:2486:13 	msrc            	U   	msrc = memoryview(ex)"
  - "Lib/test/test_buffer.py:2488:11 	Monodimensional 	U   	# Monodimensional empty view can be cast"
  - "Lib/test/test_buffer.py:2499:9  	vsize           	U   	vsize = support.calcvobjsize"
  - "Lib/test/test_buffer.py:2500:24 	Pnin            	U   	base_struct = 'Pnin 2P2n2i5P P'"
  - "Lib/test/test_buffer.py:2577:13 	sfmt            	U   	for sfmt in NON_BYTE_FORMAT:"
  - "Lib/test/test_buffer.py:2578:13 	sformat         	U   	sformat = '@' + sfmt if randrange"
  - "Lib/test/test_buffer.py:2581:17 	dformat         	U   	dformat = '@' + dfmt if randrange"
  - "Lib/test/test_buffer.py:2587:19 	sitems          	U   	for sfmt, sitems, _ in iter_format(1"
  - "Lib/test/test_buffer.py:2691:9  	bytespec        	U   	bytespec = ("
  - "Lib/test/test_buffer.py:2698:13 	srcsize         	U   	srcsize = struct.calcsize(fmt"
  - "Lib/test/test_buffer.py:2699:29 	bytelist        	U   	for bytefmt, to_bytelist in bytespec:"
  - "Lib/test/test_buffer.py:2719:9  	destitems       	U   	destitems, destshape = cast_items"
  - "Lib/test/test_buffer.py:2719:20 	destshape       	U   	destitems, destshape = cast_items(ex, 'B"
  - "Lib/test/test_buffer.py:2728:9  	destsize        	U   	destsize = struct.calcsize('I"
  - "Lib/test/test_buffer.py:2753:14 	tshape          	U   	for _tshape in gencastshapes():"
  - "Lib/test/test_buffer.py:2759:17 	tfmt            	U   	tfmt = ('', '@')[randrange"
  - "Lib/test/test_buffer.py:2760:17 	tsize           	U   	tsize = struct.calcsize(tfmt"
  - "Lib/test/test_buffer.py:2771:21 	titems          	U   	titems, tshape = cast_items"
  - "Lib/test/test_buffer.py:3114:13 	cmptest         	U   	def cmptest(testcase, a, b, m, singleitem"
  - "Lib/test/test_buffer.py:3114:40 	singleitem      	U   	cmptest(testcase, a, b, m, singleitem):"
  - "Lib/test/test_buffer.py:3913:11 	richcompare     	U   	# richcompare"
  - "Lib/test/test_buffer.py:4324:38 	staticarray     	U   	assertRaises(TypeError, staticarray, 1, 2, 3)"
  - "Lib/test/test_buffer.py:4414:11 	getbufferproc   	U   	# getbufferproc does not adhere to the"
  - "Lib/test/test_bufio.py:51:13    	teststring  	U   	teststring = pattern * q + pattern"
  - "Lib/test/test_bufio.py:57:14    	primepat    	U   	def test_primepat(self):"
  - "Lib/test/test_bufio.py:62:14    	nullpat     	U   	def test_nullpat(self):"
  - "Lib/test/test_builtin.py:140:9      	itorg           	U   	itorg = it"
  - "Lib/test/test_builtin.py:257:22     	udfff           	U   	_check_uni('\\udfff')"
  - "Lib/test/test_builtin.py:341:76     	badmode         	U   	2)\\n', '<string>', 'badmode')"
  - "Lib/test/test_builtin.py:352:9      	codestr         	U   	codestr = '''def f():"
  - "Lib/test/test_builtin.py:371:13     	codeobjs        	U   	codeobjs = []"
  - "Lib/test/test_builtin.py:756:15     	frozendict      	U   	class frozendict_error(Exception):"
  - "Lib/test/test_builtin.py:768:39     	superglobal     	U   	compile(\"__builtins__['superglobal']=2; print(superglobal"
  - "Lib/test/test_builtin.py:790:88     	elloorld        	U   	Hello World')), list('elloorld'))"
  - "Lib/test/test_builtin.py:805:13     	badfunc         	U   	def badfunc():"
  - "Lib/test/test_builtin.py:809:16     	bltinmodule     	U   	# test bltinmodule.c::filtertuple()"
  - "Lib/test/test_builtin.py:809:31     	filtertuple     	U   	test bltinmodule.c::filtertuple()"
  - "Lib/test/test_builtin.py:816:39     	abcdeabcde      	U   	filter(filter_char, \"abcdeabcde\")"
  - "Lib/test/test_builtin.py:982:13     	accu            	U   	accu = 0"
  - "Lib/test/test_builtin.py:1316:9     	twopow          	U   	twopow = partial(pow, base"
  - "Lib/test/test_builtin.py:1327:9     	savestdin       	U   	savestdin = sys.stdin"
  - "Lib/test/test_builtin.py:1449:47    	rint            	U   	rounding (floor, ceil, rint, round) for"
  - "Lib/test/test_builtin.py:1901:56    	breakpointhook  	U   	Similarly for sys.breakpointhook."
  - "Lib/test/test_builtin.py:1941:30    	passthru        	U   	test_breakpoint_with_passthru_error(self):"
  - "Lib/test/test_builtin.py:1976:20    	unimportable    	U   	def test_envar_unimportable(self):"
  - "Lib/test/test_builtin.py:1980:18    	nosuchbuiltin   	U   	'nosuchbuiltin',"
  - "Lib/test/test_builtin.py:1981:18    	nosuchmodule    	U   	'nosuchmodule.nosuchcallable',"
  - "Lib/test/test_builtin.py:1981:31    	nosuchcallable  	U   	'nosuchmodule.nosuchcallable',"
  - "Lib/test/test_builtin.py:2041:38    	wpipe           	U   	with open(w, \"w\") as wpipe:"
  - "Lib/test/test_builtin.py:2054:43    	rpipe           	U   	encoding=\"utf-8\") as rpipe:"
  - "Lib/test/test_builtin.py:2123:20    	rlhandler       	U   	# callback rlhandler() is called by readline"
  - "Lib/test/test_builtin.py:2125:64    	intented        	U   	test_builtin is not intented to test"
  - "Lib/test/test_builtin.py:2133:31    	prompté         	U   	self.check_input_tty(\"prompté\", b\"quux\\xe9\", \"utf"
  - "Lib/test/test_builtin.py:2182:14    	inputtypes      	U   	def test_inputtypes(self):"
  - "Lib/test/test_builtin.py:2193:14    	baddecorator    	U   	def test_baddecorator(self):"
  - "Lib/test/test_builtin.py:2267:19    	nokwargs        	U   	def test_type_nokwargs(self):"
  - "Lib/test/test_builtin.py:2285:25    	udcdc           	U   	type('A\\udcdcB', (), {})"
  - "Lib/test/test_builtin.py:2337:42    	udcdcy          	U   	(), {'__doc__': 'x\\udcdcy'})"
  - "Lib/test/test_bytes.py:331:32   	Laka                	U   	invalid = 'Boom, Shaka Laka, Boom!'"
  - "Lib/test/test_bytes.py:741:14   	rmod                	U   	def test_rmod(self):"
  - "Lib/test/test_bytes.py:762:20   	unicodewhitespace   	U   	def test_split_unicodewhitespace(self):"
  - "Lib/test/test_bytes.py:854:14   	xjust               	U   	def test_xjust_int_error(self):"
  - "Lib/test/test_bytes.py:865:9    	transtable          	U   	transtable = b'\\000\\001\\002\\00"
  - "Lib/test/test_bytes.py:1041:28  	pythonapi           	U   	from ctypes import pythonapi, py_object"
  - "Lib/test/test_bytes.py:1104:13  	formatstr           	U   	for formatstr, ctypes_type, value"
  - "Lib/test/test_bytes.py:1220:14  	nohash              	U   	def test_nohash(self):"
  - "Lib/test/test_bytes.py:1451:14  	irepeat             	U   	def test_irepeat(self):"
  - "Lib/test/test_bytes.py:1568:14  	nosort              	U   	def test_nosort(self):"
  - "Lib/test/test_bytes.py:1606:34  	doesnt              	U   	partition_bytearray_doesnt_share_nullstring(self"
  - "Lib/test/test_bytes.py:1606:47  	nullstring          	U   	bytearray_doesnt_share_nullstring(self):"
  - "Lib/test/test_calendar.py:371:13    	neitherspacenordigit	U   	def neitherspacenordigit(c):"
  - "Lib/test/test_calendar.py:504:65    	flabber             	U   	calendar.setfirstweekday, 'flabber')"
  - "Lib/test/test_calendar.py:601:14    	oldfirstweekday     	U   	self.oldfirstweekday = calendar.firstweekday"
  - "Lib/test/test_calendar.py:746:23    	nonleap             	U   	def test_february_nonleap(self):"
  - "Lib/test/test_calendar.py:781:18    	leapday             	U   	def test_one_leapday_lower_boundary(self"
  - "Lib/test/test_calendar.py:785:22    	leapyears           	U   	def test_several_leapyears_in_range(self):"
  - "Lib/test/test_call.py:71:14     	oldargs     	U   	def test_oldargs0_0(self):"
  - "Lib/test/test_call.py:294:5     	pyfunc      	U   	def pyfunc(arg1, arg2):"
  - "Lib/test/test_call.py:394:14    	fastcall    	U   	def test_fastcall(self):"
  - "Lib/test/test_call.py:407:14    	vectorcall  	U   	def test_vectorcall_dict(self):"
  - "Lib/test/test_call.py:413:45    	fastcalldict	U   	_testcapi.pyobject_fastcalldict(func, args, None)"
  - "Lib/test/test_call.py:435:26    	Vectorcall  	U   	# Test _PyObject_Vectorcall()"
  - "Lib/test/test_call.py:439:19    	kwnames     	U   	# kwnames=NULL"
  - "Lib/test/test_call.py:485:5     	testfunction	U   	def testfunction(self):"
  - "Lib/test/test_call.py:565:52    	pyvectorcall	U   	pyobject_vectorcall, pyvectorcall_call"
  - "Lib/test/test_cgi.py:73:51      	seqid   	U   	dee1182227:key_store_seqid=400006&cuyer=r&view"
  - "Lib/test/test_cgi.py:73:64      	cuyer   	U   	key_store_seqid=400006&cuyer=r&view=bustomer&order"
  - "Lib/test/test_cgi.py:73:77      	bustomer	U   	400006&cuyer=r&view=bustomer&order_id=0bb2e24863"
  - "Lib/test/test_cgi.py:73:145     	lobale  	U   	f1b&expire=964546263&lobale=en-US&kid=130003.30"
  - "Lib/test/test_cgi.py:157:39     	udce    	U   	{'submit-name': [\"\\udce2\\udc98\\udc83\"]}"
  - "Lib/test/test_cgi.py:251:22     	numcalls	U   	self.numcalls = 0"
  - "Lib/test/test_cgitb.py:39:14    	syshook 	U   	def test_syshook_no_logdir_default_format"
  - "Lib/test/test_cgitb.py:40:28    	tracedir	U   	with temp_dir() as tracedir:"
  - "Lib/test/test_charmapcodec.py:3:29      	testcodec       	U   	uses the test codec in testcodec.py and thus also tests"
  - "Lib/test/test_charmapcodec.py:29:14     	constructorx    	U   	def test_constructorx(self):"
  - "Lib/test/test_charmapcodec.py:32:52     	defabc          	U   	defx', codecname), 'defabc')"
  - "Lib/test/test_charmapcodec.py:33:51     	dabcf           	U   	b'dxf', codecname), 'dabcf')"
  - "Lib/test/test_charmapcodec.py:34:52     	dabcfabc        	U   	dxfx', codecname), 'dabcfabc')"
  - "Lib/test/test_charmapcodec.py:38:14     	encodex         	U   	def test_encodex(self):"
  - "Lib/test/test_charmapcodec.py:40:27     	xdef            	U   	self.assertEqual('xdef'.encode(codecname),"
  - "Lib/test/test_charmapcodec.py:41:27     	defx            	U   	self.assertEqual('defx'.encode(codecname),"
  - "Lib/test/test_charmapcodec.py:43:27     	dxfx            	U   	self.assertEqual('dxfx'.encode(codecname),"
  - "Lib/test/test_charmapcodec.py:45:14     	constructory    	U   	def test_constructory(self):"
  - "Lib/test/test_charmapcodec.py:51:14     	maptoundefined  	U   	def test_maptoundefined(self):"
  - "Lib/test/test_class.py:6:1      	testmeths   	U   	testmeths = ["
  - "Lib/test/test_class.py:12:6     	rsub        	U   	\"rsub\","
  - "Lib/test/test_class.py:14:6     	rmul        	U   	\"rmul\","
  - "Lib/test/test_class.py:16:6     	rmatmul     	U   	\"rmatmul\","
  - "Lib/test/test_class.py:18:6     	rtruediv    	U   	\"rtruediv\","
  - "Lib/test/test_class.py:20:6     	rfloordiv   	U   	\"rfloordiv\","
  - "Lib/test/test_class.py:24:6     	rdivmod     	U   	\"rdivmod\","
  - "Lib/test/test_class.py:26:6     	rpow        	U   	\"rpow\","
  - "Lib/test/test_class.py:28:6     	rrshift     	U   	\"rrshift\","
  - "Lib/test/test_class.py:30:6     	rlshift     	U   	\"rlshift\","
  - "Lib/test/test_class.py:36:6     	rxor        	U   	\"rxor\","
  - "Lib/test/test_class.py:72:1     	statictests 	U   	statictests = \"\"\""
  - "Lib/test/test_class.py:153:9    	testme      	U   	testme = AllTests()"
  - "Lib/test/test_class.py:516:13   	booh        	U   	def booh(self):"
  - "Lib/test/test_cmath.py:109:18   	ulps    	U   	9 and 19 ulps."
  - "Lib/test/test_cmath.py:162:32   	infj    	U   	self.assertEqual(cmath.infj.real, 0.0)"
  - "Lib/test/test_cmath.py:167:32   	nanj    	U   	self.assertEqual(cmath.nanj.real, 0.0)"
  - "Lib/test/test_cmath.py:170:34   	reprs   	U   	Check consistency with reprs."
  - "Lib/test/test_cmd_line_script.py:522:24     	triying             	U   	def test_hint_when_triying_to_import_a_py_file"
  - "Lib/test/test_cmd_line_script.py:619:26     	unindented          	U   	def test_syntaxerror_unindented_caret_position(self"
  - "Lib/test/test_cmd_line_script.py:676:19     	Werror              	U   	'-Werror', script_name,"
  - "Lib/test/test_cmd_line_script.py:763:19     	nonexistingscript   	U   	script = 'nonexistingscript.py'"
  - "Lib/test/test_cmd_line.py:129:38    	fnord               	U   	python_failure('-m', 'fnord43520xyz')"
  - "Lib/test/test_cmd_line.py:168:35    	wmain               	U   	arguments as unicode (using wmain() instead of main()"
  - "Lib/test/test_cmd_line.py:189:53    	udcff               	U   	decoded b'\\xff' as '\\udcff' (b'\\xff' is not"
  - "Lib/test/test_cmd_line.py:406:14    	unmached            	U   	def test_unmached_quote(self):"
  - "Lib/test/test_cmd_line.py:559:14    	isolatedmode        	U   	def test_isolatedmode(self):"
  - "Lib/test/test_cmd_line.py:565:15    	dummyvar            	U   	# dummyvar to prevent extraneous"
  - "Lib/test/test_cmd_line.py:624:13    	envval              	U   	for envval, opt, expected in cases"
  - "Lib/test/test_cmd_line.py:637:13    	xdev                	U   	def run_xdev(self, *args, check_exitcode"
  - "Lib/test/test_cmd_line.py:698:55    	pymem               	U   	testcapi; print(_testcapi.pymem_getallocatorsname()"
  - "Lib/test/test_cmd_line.py:698:61    	getallocatorsname   	U   	print(_testcapi.pymem_getallocatorsname())\""
  - "Lib/test/test_cmd_line.py:717:66    	pywarning           	U   	option, envvar, use_pywarning=False):"
  - "Lib/test/test_cmd_line.py:760:15    	pythonmalloc        	U   	def check_pythonmalloc(self, env_var, name"
  - "Lib/test/test_cmd_line.py:807:14    	pythondevmode       	U   	def test_pythondevmode_env(self):"
  - "Lib/test/test_cmd.py:14:7       	samplecmdclass  	U   	class samplecmdclass(cmd.Cmd):"
  - "Lib/test/test_cmd.py:16:18      	sampleclass     	U   	Instance the sampleclass:"
  - "Lib/test/test_cmd.py:17:9       	mycmd           	U   	>>> mycmd = samplecmdclass()"
  - "Lib/test/test_cmd.py:76:24      	testet          	U   	>>> mycmd.do_help(\"testet\")"
  - "Lib/test/test_cmd.py:174:11     	simplecmd       	U   	class simplecmd(cmd.Cmd):"
  - "Lib/test/test_cmd.py:230:24     	ignoredirs      	U   	tracer=trace.Trace(ignoredirs=[sys.base_prefix, sys"
  - "Lib/test/test_code_module.py:23:14      	infunc          	U   	self.infunc = stack.enter_context"
  - "Lib/test/test_code_module.py:27:9       	prepatch        	U   	prepatch = mock.patch('code.sys"
  - "Lib/test/test_code_module.py:28:14      	sysmod          	U   	self.sysmod = stack.enter_context"
  - "Lib/test/test_code_module.py:68:14      	sysexcepthook   	U   	def test_sysexcepthook(self):"
  - "Lib/test/test_code.py:97:9      	keywordonly     	U   	>>> def keywordonly_args(a,b,*,k1):"
  - "Lib/test/test_code.py:182:14    	newempty        	U   	def test_newempty(self):"
  - "Lib/test/test_code.py:247:31    	linetable       	U   	co.co_linetable,"
  - "Lib/test/test_code.py:248:31    	exceptiontable  	U   	co.co_exceptiontable,"
  - "Lib/test/test_code.py:285:28    	myname          	U   	(\"co_names\", (\"myname\",)),"
  - "Lib/test/test_code.py:289:30    	newfilename     	U   	(\"co_filename\", \"newfilename\"),"
  - "Lib/test/test_code.py:343:24    	localsplus      	U   	def test_shrinking_localsplus(self):"
  - "Lib/test/test_code.py:345:11    	localsplusnames 	U   	# localsplusnames and localspluskinds"
  - "Lib/test/test_code.py:345:31    	localspluskinds 	U   	localsplusnames and localspluskinds, if an argument is a"
  - "Lib/test/test_code.py:349:9     	newcode         	U   	newcode = code.replace(co_name"
  - "Lib/test/test_code.py:426:26    	columntable     	U   	def test_endline_and_columntable_none_when_no_debug_ranges"
  - "Lib/test/test_code.py:495:5     	isinterned      	U   	def isinterned(s):"
  - "Lib/test/test_code.py:498:11    	Consts          	U   	class CodeConstsTest(unittest.TestCase"
  - "Lib/test/test_code.py:564:9     	coderef         	U   	coderef = weakref.ref(f.__code"
  - "Lib/test/test_code.py:575:10    	varint          	U   	def read_varint(it):"
  - "Lib/test/test_code.py:586:5     	uval            	U   	uval = read_varint(it)"
  - "Lib/test/test_code.py:646:16    	postions        	U   	def lines_from_postions(positions):"
  - "Lib/test/test_code.py:649:5     	misshappen      	U   	def misshappen():"
  - "Lib/test/test_code.py:723:5     	freefunc        	U   	freefunc = ctypes.CFUNCTYPE(None"
  - "Lib/test/test_code.py:739:9     	myfree          	U   	def myfree(ptr):"
  - "Lib/test/test_codeccallbacks.py:84:34   	charmaps                                	U   	For ascii, latin-1 and charmaps this is completely implemente"
  - "Lib/test/test_codeccallbacks.py:96:14   	xmlcharnamereplace                      	U   	def test_xmlcharnamereplace(self):"
  - "Lib/test/test_codeccallbacks.py:115:9   	sout                                    	U   	sout = b\"&laquo;&real;&raquo"
  - "Lib/test/test_codeccallbacks.py:122:14  	uninamereplace                          	U   	def test_uninamereplace(self):"
  - "Lib/test/test_codeccallbacks.py:152:14  	backslashescape                         	U   	def test_backslashescape(self):"
  - "Lib/test/test_codeccallbacks.py:165:14  	nameescape                              	U   	def test_nameescape(self):"
  - "Lib/test/test_codeccallbacks.py:186:13  	relaxedutf                              	U   	def relaxedutf8(exc):"
  - "Lib/test/test_codeccallbacks.py:277:20  	xdfrk                                   	U   	\"g\\xfc\\xdfrk\".encode(\"ascii\", \"test"
  - "Lib/test/test_codeccallbacks.py:288:14  	longstrings                             	U   	def test_longstrings(self):"
  - "Lib/test/test_codeccallbacks.py:307:15  	exceptionobjectargs                     	U   	def check_exceptionobjectargs(self, exctype, args"
  - "Lib/test/test_codeccallbacks.py:314:9   	wrongargs                               	U   	wrongargs = [ \"spam\", b\"eggs\""
  - "Lib/test/test_codeccallbacks.py:316:17  	wrongarg                                	U   	for wrongarg in wrongargs:"
  - "Lib/test/test_codeccallbacks.py:320:17  	callargs                                	U   	callargs = []"
  - "Lib/test/test_codeccallbacks.py:337:26  	xfcrk                                   	U   	[\"ascii\", \"g\\xfcrk\", 1, 2, \"ouch\"],"
  - "Lib/test/test_codeccallbacks.py:347:25  	xfcx                                    	U   	[\"ascii\", \"\\xfcx\", 0, 1, \"ouch\"],"
  - "Lib/test/test_codeccallbacks.py:357:25  	uffffx                                  	U   	[\"ascii\", \"\\uffffx\", 0, 1, \"ouch\"],"
  - "Lib/test/test_codeccallbacks.py:358:54  	uffff                                   	U   	encode character '\\\\uffff' in position 0: ouch"
  - "Lib/test/test_codeccallbacks.py:395:17  	uffffrk                                 	U   	[\"g\\uffffrk\", 1, 2, \"ouch\"],"
  - "Lib/test/test_codeccallbacks.py:409:14  	badandgoodstrictexceptions              	U   	def test_badandgoodstrictexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:440:14  	badandgoodignoreexceptions              	U   	def test_badandgoodignoreexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:472:14  	badandgoodreplaceexceptions             	U   	def test_badandgoodreplaceexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:514:14  	badandgoodxmlcharrefreplaceexceptions   	U   	def test_badandgoodxmlcharrefreplaceexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:553:14  	badandgoodbackslashreplaceexceptions    	U   	def test_badandgoodbackslashreplaceexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:613:14  	badandgoodnamereplaceexceptions         	U   	def test_badandgoodnamereplaceexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:641:16  	ufbf                                    	U   	(\"\\ufbf9\", \"\\\\N{ARABIC LIGATURE"
  - "Lib/test/test_codeccallbacks.py:661:14  	badandgoodsurrogateescapeexceptions     	U   	def test_badandgoodsurrogateescapeexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:707:14  	badandgoodsurrogatepassexceptions       	U   	def test_badandgoodsurrogatepassexceptions(self):"
  - "Lib/test/test_codeccallbacks.py:781:14  	badhandlerresults                       	U   	def test_badhandlerresults(self):"
  - "Lib/test/test_codeccallbacks.py:783:9   	encs                                    	U   	encs = (\"ascii\", \"latin-"
  - "Lib/test/test_codeccallbacks.py:786:41  	badhandler                              	U   	register_error(\"test.badhandler\", lambda x: res)"
  - "Lib/test/test_codeccallbacks.py:856:13  	unencrepl                               	U   	def unencrepl(exc):"
  - "Lib/test/test_codeccallbacks.py:861:37  	unencreplhandler                        	U   	register_error(\"test.unencreplhandler\", unencrepl)"
  - "Lib/test/test_codeccallbacks.py:932:14  	badregistercall                         	U   	def test_badregistercall(self):"
  - "Lib/test/test_codeccallbacks.py:934:20  	codecsmodule                            	U   	# Modules/_codecsmodule.c::register_error()"
  - "Lib/test/test_codeccallbacks.py:939:14  	badlookupcall                           	U   	def test_badlookupcall(self):"
  - "Lib/test/test_codeccallbacks.py:949:14  	xmlcharrefvalues                        	U   	def test_xmlcharrefvalues(self):"
  - "Lib/test/test_codeccallbacks.py:961:14  	decodehelper                            	U   	def test_decodehelper(self):"
  - "Lib/test/test_codeccallbacks.py:963:19  	unicodeobject                           	U   	# Objects/unicodeobject.c::unicode_decode_call"
  - "Lib/test/test_codeccallbacks.py:967:13  	baddecodereturn                         	U   	def baddecodereturn1(exc):"
  - "Lib/test/test_codeccallbacks.py:983:37  	posreturn                               	U   	register_error(\"test.posreturn\", handler.handle)"
  - "Lib/test/test_codeccallbacks.py:1022:14 	encodehelper                            	U   	def test_encodehelper(self):"
  - "Lib/test/test_codeccallbacks.py:1028:13 	badencodereturn                         	U   	def badencodereturn1(exc):"
  - "Lib/test/test_codeccallbacks.py:1094:44 	abcdx                                   	U   	assertEqual(decoded, 'abcdx' * 51)"
  - "Lib/test/test_codeccallbacks.py:1142:14 	translatehelper                         	U   	def test_translatehelper(self):"
  - "Lib/test/test_codeccallbacks.py:1169:14 	mutatingdecodehandler                   	U   	def test_mutatingdecodehandler(self):"
  - "Lib/test/test_codeccallbacks.py:1170:9  	baddata                                 	U   	baddata = ["
  - "Lib/test/test_codecs.py:32:80   	codepages                   	U   	Nano Server not all codepages are present"
  - "Lib/test/test_codecs.py:109:36  	partialresults              	U   	partial(self, input, partialresults):"
  - "Lib/test/test_codecs.py:117:17  	partialresult               	U   	for (c, partialresult) in zip(input.encode"
  - "Lib/test/test_codecs.py:159:13  	readalllines                	U   	def readalllines(input, keepends=True"
  - "Lib/test/test_codecs.py:169:25  	nbaz                        	U   	s = \"foo\\nbar\\r\\nbaz\\rspam\\u2028eggs\""
  - "Lib/test/test_codecs.py:170:9   	sexpected                   	U   	sexpected = \"foo\\n|bar\\r\\n|baz"
  - "Lib/test/test_codecs.py:171:9   	sexpectednoends             	U   	sexpectednoends = \"foo|bar|baz|spam"
  - "Lib/test/test_codecs.py:177:9   	lineends                    	U   	lineends = (\"\\n\", \"\\r\\n\", \"\\r"
  - "Lib/test/test_codecs.py:181:17  	lineend                     	U   	for (i, lineend) in enumerate(lineends"
  - "Lib/test/test_codecs.py:214:19  	Humpty                      	U   	lines = [\"Humpty Dumpty sat on a wall"
  - "Lib/test/test_codecs.py:214:26  	Dumpty                      	U   	lines = [\"Humpty Dumpty sat on a wall,\\n\","
  - "Lib/test/test_codecs.py:267:17  	inputencoding               	U   	'<%@inputencoding=\"ISO-8859-1\"%>\\r\\n'"
  - "Lib/test/test_codecs.py:268:17  	pagetemplate                	U   	'<%@pagetemplate=TEMPLATE.y%>\\r\\n',"
  - "Lib/test/test_codecs.py:271:34  	storageerrors               	U   	<%@import=from frog.storageerrors import StorageError"
  - "Lib/test/test_codecs.py:275:37  	Snakelets                   	U   	log=logging.getLogger(\"Snakelets.logger\")\\r\\n',"
  - "Lib/test/test_codecs.py:283:18  	entryids                    	U   	' entryids=storageEngine.listBlogEntries"
  - "Lib/test/test_codecs.py:293:14  	showdate                    	U   	'showdate=None\\r\\n',"
  - "Lib/test/test_codecs.py:299:39  	isodatestr                  	U   	showdate = frog.util.isodatestr() \\r\\n',"
  - "Lib/test/test_codecs.py:303:23  	Yredirect                   	U   	' self.Yredirect(\"active.y\")\\r\\n',"
  - "Lib/test/test_codecs.py:310:74  	mediumdatestr               	U   	%s</h2>\"% frog.util.mediumdatestr(showdate))\\r\\n',"
  - "Lib/test/test_codecs.py:330:14  	readlinequeue               	U   	def test_readlinequeue(self):"
  - "Lib/test/test_codecs.py:345:11  	Lineends                    	U   	# Lineends"
  - "Lib/test/test_codecs.py:359:31  	ladfj                       	U   	= \"offending line: ladfj askldfj klasdj fskla"
  - "Lib/test/test_codecs.py:359:37  	askldfj                     	U   	offending line: ladfj askldfj klasdj fskla dfzaskdj"
  - "Lib/test/test_codecs.py:359:45  	klasdj                      	U   	line: ladfj askldfj klasdj fskla dfzaskdj fasklfj"
  - "Lib/test/test_codecs.py:359:52  	fskla                       	U   	ladfj askldfj klasdj fskla dfzaskdj fasklfj laskd"
  - "Lib/test/test_codecs.py:359:58  	dfzaskdj                    	U   	askldfj klasdj fskla dfzaskdj fasklfj laskd fjasklfzzzzaa"
  - "Lib/test/test_codecs.py:359:67  	fasklfj                     	U   	klasdj fskla dfzaskdj fasklfj laskd fjasklfzzzzaa"
  - "Lib/test/test_codecs.py:359:75  	laskd                       	U   	fskla dfzaskdj fasklfj laskd fjasklfzzzzaa%whereisthis"
  - "Lib/test/test_codecs.py:359:81  	fjasklfzzzzaa               	U   	dfzaskdj fasklfj laskd fjasklfzzzzaa%whereisthis!!!\\r\\n\""
  - "Lib/test/test_codecs.py:359:95  	whereisthis                 	U   	laskd fjasklfzzzzaa%whereisthis!!!\\r\\n\""
  - "Lib/test/test_codecs.py:373:15  	stillokay                   	U   	s3 = \"stillokay:bbbbxx\\r\\n\""
  - "Lib/test/test_codecs.py:373:25  	bbbbxx                      	U   	s3 = \"stillokay:bbbbxx\\r\\n\""
  - "Lib/test/test_codecs.py:374:25  	badbad                      	U   	s4 = \"broken!!!!badbad\\r\\n\""
  - "Lib/test/test_codecs.py:375:15  	againokay                   	U   	s5 = \"againokay.\\r\\n\""
  - "Lib/test/test_codecs.py:459:5   	spamle                      	U   	spamle = (b'\\xff\\xfe\\x00\\x"
  - "Lib/test/test_codecs.py:462:5   	spambe                      	U   	spambe = (b'\\x00\\x00\\xfe\\xff"
  - "Lib/test/test_codecs.py:485:14  	badbom                      	U   	def test_badbom(self):"
  - "Lib/test/test_codecs.py:894:14  	nonbmp                      	U   	def test_nonbmp(self):"
  - "Lib/test/test_codecs.py:1124:26 	ufffdb                      	U   	(b'\\xffb', '\\ufffdb'),"
  - "Lib/test/test_codecs.py:1156:34 	udca                        	U   	assertEqual('\\ud801\\udca0'.encode(self.encoding"
  - "Lib/test/test_codecs.py:1268:9  	unistring                   	U   	unistring = \"ABC\\u00A1\\u2200XYZ"
  - "Lib/test/test_codecs.py:1274:13 	istream                     	U   	istream = reader(io.BytesIO"
  - "Lib/test/test_codecs.py:1275:13 	ostream                     	U   	ostream = io.StringIO()"
  - "Lib/test/test_codecs.py:1351:27 	abfnrtvx                    	U   	if b not in b'abfnrtvx':"
  - "Lib/test/test_codecs.py:1389:20 	ccaron                      	U   	# D Czech: Pro<ccaron>prost<ecaron>nemluv"
  - "Lib/test/test_codecs.py:1389:27 	prost                       	U   	D Czech: Pro<ccaron>prost<ecaron>nemluv<iacute"
  - "Lib/test/test_codecs.py:1389:33 	ecaron                      	U   	Czech: Pro<ccaron>prost<ecaron>nemluv<iacute><ccaron"
  - "Lib/test/test_codecs.py:1389:40 	nemluv                      	U   	ccaron>prost<ecaron>nemluv<iacute><ccaron>esky"
  - "Lib/test/test_codecs.py:1389:47 	iacute                      	U   	prost<ecaron>nemluv<iacute><ccaron>esky"
  - "Lib/test/test_codecs.py:1389:62 	esky                        	U   	nemluv<iacute><ccaron>esky"
  - "Lib/test/test_codecs.py:1425:20 	Porqu                       	U   	# (J) Spanish: Porqu<eacute>nopuedensimplementehab"
  - "Lib/test/test_codecs.py:1425:33 	nopuedensimplementehablaren 	U   	Spanish: Porqu<eacute>nopuedensimplementehablarenEspa<ntilde>ol"
  - "Lib/test/test_codecs.py:1425:60 	Espa                        	U   	nopuedensimplementehablarenEspa<ntilde>ol"
  - "Lib/test/test_codecs.py:1425:65 	ntilde                      	U   	puedensimplementehablarenEspa<ntilde>ol"
  - "Lib/test/test_codecs.py:1434:10 	adotbelow                   	U   	# T<adotbelow>isaoh<odotbelow>kh<ocirc"
  - "Lib/test/test_codecs.py:1434:20 	isaoh                       	U   	# T<adotbelow>isaoh<odotbelow>kh<ocirc>ngth"
  - "Lib/test/test_codecs.py:1434:26 	odotbelow                   	U   	T<adotbelow>isaoh<odotbelow>kh<ocirc>ngth<ecirchookabove"
  - "Lib/test/test_codecs.py:1434:39 	ocirc                       	U   	adotbelow>isaoh<odotbelow>kh<ocirc>ngth<ecirchookabove"
  - "Lib/test/test_codecs.py:1434:45 	ngth                        	U   	isaoh<odotbelow>kh<ocirc>ngth<ecirchookabove>ch\\"
  - "Lib/test/test_codecs.py:1434:50 	ecirchookabove              	U   	odotbelow>kh<ocirc>ngth<ecirchookabove>ch\\"
  - "Lib/test/test_codecs.py:1435:10 	ihookabove                  	U   	# <ihookabove>n<oacute>iti<ecircacute"
  - "Lib/test/test_codecs.py:1435:34 	ecircacute                  	U   	ihookabove>n<oacute>iti<ecircacute>ngVi<ecircdotbelow>t"
  - "Lib/test/test_codecs.py:1435:50 	ecircdotbelow               	U   	iti<ecircacute>ngVi<ecircdotbelow>t"
  - "Lib/test/test_codecs.py:1442:18 	gumi                        	U   	#(L) 3<nen>B<gumi><kinpachi><sensei>"
  - "Lib/test/test_codecs.py:1442:24 	kinpachi                    	U   	#(L) 3<nen>B<gumi><kinpachi><sensei>"
  - "Lib/test/test_codecs.py:1442:34 	sensei                      	U   	nen>B<gumi><kinpachi><sensei>"
  - "Lib/test/test_codecs.py:1446:12 	amuro                       	U   	# (M) <amuro><namie>-with-SUPER-MONKEYS"
  - "Lib/test/test_codecs.py:1446:19 	namie                       	U   	# (M) <amuro><namie>-with-SUPER-MONKEYS"
  - "Lib/test/test_codecs.py:1452:30 	sorezore                    	U   	Hello-Another-Way-<sorezore><no><basho>"
  - "Lib/test/test_codecs.py:1458:12 	hitotsu                     	U   	# (O) <hitotsu><yane><no><shita>2"
  - "Lib/test/test_codecs.py:1458:21 	yane                        	U   	# (O) <hitotsu><yane><no><shita>2"
  - "Lib/test/test_codecs.py:1458:31 	shita                       	U   	<hitotsu><yane><no><shita>2"
  - "Lib/test/test_codecs.py:1462:11 	Maji                        	U   	# (P) Maji<de>Koi<suru>5<byou>"
  - "Lib/test/test_codecs.py:1462:23 	suru                        	U   	# (P) Maji<de>Koi<suru>5<byou><mae>"
  - "Lib/test/test_codecs.py:1462:30 	byou                        	U   	Maji<de>Koi<suru>5<byou><mae>"
  - "Lib/test/test_codecs.py:1467:13 	pafii                       	U   	# (Q) <pafii>de<runba>"
  - "Lib/test/test_codecs.py:1467:22 	runba                       	U   	# (Q) <pafii>de<runba>"
  - "Lib/test/test_codecs.py:1471:12 	sono                        	U   	# (R) <sono><supiido><de>"
  - "Lib/test/test_codecs.py:1471:18 	supiido                     	U   	# (R) <sono><supiido><de>"
  - "Lib/test/test_codecs.py:1541:8  	telc                        	U   	# 'telc\\xe2\\x88\\x95kg\\xcf\\x"
  - "Lib/test/test_codecs.py:1732:63 	xample                      	U   	ple-9ta.o\", ), \"\\xe4xample.\")"
  - "Lib/test/test_codecs.py:1802:64 	xffff                       	U   	EncodeError, codecs.encode, '\\xffff', 'ascii')"
  - "Lib/test/test_codecs.py:1877:45 	dotless                     	U   	is lowercased as \"ı\" (dotless i)"
  - "Lib/test/test_codecs.py:2106:17 	encodedresult               	U   	encodedresult = b\"\""
  - "Lib/test/test_codecs.py:2114:17 	decodedresult               	U   	decodedresult = \"\""
  - "Lib/test/test_codecs.py:2171:21 	cencoder                    	U   	cencoder = _testcapi.codec_incremental"
  - "Lib/test/test_codecs.py:2180:21 	cdecoder                    	U   	cdecoder = _testcapi.codec_incremental"
  - "Lib/test/test_codecs.py:2304:9  	allbytes                    	U   	allbytes = bytes(range(256))"
  - "Lib/test/test_codecs.py:2631:27 	abfnrtuvx                   	U   	if b not in b'abfnrtuvx':"
  - "Lib/test/test_codecs.py:2823:28 	udced                       	U   	\"\\udced\\udcb0\\udc80\")"
  - "Lib/test/test_codecs.py:2823:34 	udcb                        	U   	\"\\udced\\udcb0\\udc80\")"
  - "Lib/test/test_codecs.py:2849:34 	udceb                       	U   	assertEqual(\"\\udce4\\udceb\\udcef\\udcf6\\udcfc\".encode"
  - "Lib/test/test_codecs.py:2849:40 	udcef                       	U   	assertEqual(\"\\udce4\\udceb\\udcef\\udcf6\\udcfc\".encode"
  - "Lib/test/test_codecs.py:2849:46 	udcf                        	U   	\"\\udce4\\udceb\\udcef\\udcf6\\udcfc\".encode(\"latin"
  - "Lib/test/test_codecs.py:2849:52 	udcfc                       	U   	udce4\\udceb\\udcef\\udcf6\\udcfc\".encode(\"latin-1\","
  - "Lib/test/test_codecs.py:3257:14 	unflagged                   	U   	def test_unflagged_non_text_codec_handling"
  - "Lib/test/test_codecs.py:3503:40 	udcea                       	U   	'\\udc85\\udc86\\udcea\\udceb\\udcec'"
  - "Lib/test/test_codecs.py:3503:52 	udcec                       	U   	5\\udc86\\udcea\\udceb\\udcec'"
  - "Lib/test/test_codecs.py:3504:40 	udcfd                       	U   	'\\udcef\\udcfc\\udcfd\\udcfe\\udcff')"
  - "Lib/test/test_codecs.py:3504:46 	udcfe                       	U   	'\\udcef\\udcfc\\udcfd\\udcfe\\udcff')"
  - "Lib/test/test_codecs.py:3655:26 	ulatin                      	U   	STRINGS = (\"ascii\", \"ulatin1:\\xa7\\xe9\","
  - "Lib/test/test_codecs.py:3658:36 	DCFF                        	U   	\"surrogates:\\uDC80\\uDCFF\")"
  - "Lib/test/test_codecs.py:3766:9  	ciphertext                  	U   	ciphertext = codecs.encode(\"Caesar"
  - "Lib/test/test_codecs.py:3767:39 	Pnrfne                      	U   	assertEqual(ciphertext, 'Pnrfne yvxrq pvcuref')"
  - "Lib/test/test_codecs.py:3767:46 	yvxrq                       	U   	ciphertext, 'Pnrfne yvxrq pvcuref')"
  - "Lib/test/test_codecs.py:3767:52 	pvcuref                     	U   	ciphertext, 'Pnrfne yvxrq pvcuref')"
  - "Lib/test/test_codecs.py:3770:43 	Oehgr                       	U   	codecs.decode('Rg gh, Oehgr?', 'rot-13')"
  - "Lib/test/test_codecs.py:3776:55 	Onxre                       	U   	ciphertext, 'NOON ant Purely Onxre')"
  - "Lib/test/test_codecs.py:3790:64 	dhrfgvba                    	U   	abg gb or, gung vf gur dhrfgvba')"
  - "Lib/test/test_codeop.py:317:11  	Teswarnings 	U   	# Teswarnings_helper.check_warningsonly"
  - "Lib/test/test_codeop.py:317:36  	warningsonly	U   	Teswarnings_helper.check_warningsonly returned once."
  - "Lib/test/test_collections.py:199:39     	abcdefghij              	U   	assertEqual(''.join(d), 'abcdefghij')"
  - "Lib/test/test_collections.py:237:15     	lowerdict               	U   	class lowerdict(dict):"
  - "Lib/test/test_collections.py:269:43     	chainmaps               	U   	cm2 # testing between chainmaps"
  - "Lib/test/test_collections.py:501:23     	fieldspec               	U   	# verify that fieldspec can be a non-string"
  - "Lib/test/test_collections.py:506:14     	tupleness               	U   	def test_tupleness(self):"
  - "Lib/test/test_collections.py:641:9      	newvalues               	U   	newvalues = tuple(v*10 for v in"
  - "Lib/test/test_collections.py:715:9      	methodstubs             	U   	methodstubs = dict.fromkeys(names"
  - "Lib/test/test_collections.py:898:26     	hashables               	U   	# Check some non-hashables"
  - "Lib/test/test_collections.py:994:26     	reversibles             	U   	# Check some non-reversibles"
  - "Lib/test/test_collections.py:1213:9     	mgen                    	U   	mgen = MinimalGen()"
  - "Lib/test/test_collections.py:1219:46    	huhu                    	U   	sertRaisesRegex(ValueError, \"^huhu$\","
  - "Lib/test/test_collections.py:1556:52    	noncomparable           	U   	comparing comparable and noncomparable"
  - "Lib/test/test_collections.py:1693:20    	abccba                  	U   	l1 = list('abccba')"
  - "Lib/test/test_collections.py:1694:20    	bcddcb                  	U   	l2 = list('bcddcb')"
  - "Lib/test/test_collections.py:1695:20    	abcdeedcba              	U   	l3 = list('abcdeedcba')"
  - "Lib/test/test_collections.py:1865:9     	mymap                   	U   	mymap = UserDict()"
  - "Lib/test/test_collections.py:1926:13    	nativeseq               	U   	nativeseq = ty('abracadabra')"
  - "Lib/test/test_collections.py:1928:13    	seqseq                  	U   	seqseq = SequenceSubclass(nativeseq"
  - "Lib/test/test_collections.py:2012:22    	patma                   	U   	def test_illegal_patma_flags(self):"
  - "Lib/test/test_collections.py:2044:22    	abcaba                  	U   	c = Counter('abcaba')"
  - "Lib/test/test_collections.py:2079:50    	aaaaffff                	U   	join(c.elements()), 'aaaaffff')"
  - "Lib/test/test_collections.py:2122:40    	xyzpdqqdpzyx            	U   	assertEqual(list(Counter('xyzpdqqdpzyx').items()),"
  - "Lib/test/test_collections.py:2132:15    	aaabbcdddeefggghhijjjkkl	U   	ps = 'aaabbcdddeefggghhijjjkkl'"
  - "Lib/test/test_collections.py:2133:15    	abbcccdeefffhkkllllmmnno	U   	qs = 'abbcccdeefffhkkllllmmnno'"
  - "Lib/test/test_collections.py:2187:45    	deepcopyable            	U   	counters are copyable, deepcopyable, picklable, and"
  - "Lib/test/test_collections.py:2209:24    	slartibartfast          	U   	c = MyCounter('slartibartfast')"
  - "Lib/test/test_collections.py:2241:17    	counterop               	U   	for counterop, numberop in ["
  - "Lib/test/test_collections.py:2241:28    	numberop                	U   	for counterop, numberop in ["
  - "Lib/test/test_collections.py:2259:28    	setop                   	U   	for counterop, setop in ["
  - "Lib/test/test_collections.py:2296:22    	aaabbcd                 	U   	c = Counter('aaabbcd')"
  - "Lib/test/test_collections.py:2297:21    	aaaabbcce               	U   	c.subtract('aaaabbcce')"
  - "Lib/test/test_collections.py:2315:19    	nonsortable             	U   	def test_repr_nonsortable(self):"
  - "Lib/test/test_collections.py:2347:9     	powerset                	U   	powerset = chain.from_iterable"
  - "Lib/test/test_collections.py:2364:59    	ababa                   	U   	b=2, c=0), Counter('ababa'))"
  - "Lib/test/test_collections.py:2365:57    	babab                   	U   	a=3, b=2), Counter('babab'))"
  - "Lib/test/test_collections.py:2377:61    	aabd                    	U   	2, c=0) >= Counter('aabd'))"
  - "Lib/test/test_colorsys.py:4:5       	frange  	U   	def frange(start, stop, step):"
  - "Lib/test/test_compile.py:112:9      	longexpr    	U   	longexpr = 'x = x or ' + '-x"
  - "Lib/test/test_compile.py:324:31     	badencoding 	U   	code = '# -*- coding: badencoding -*-\\n\"\\xc2\\xa4\"\\n'"
  - "Lib/test/test_compile.py:440:13     	fcontents   	U   	fcontents = f.read()"
  - "Lib/test/test_compile.py:443:16     	ifblock     	U   	['<ifblock>', \"\"\"if True:\\n"
  - "Lib/test/test_compile.py:444:16     	forblock    	U   	['<forblock>', \"\"\"for n in [1,"
  - "Lib/test/test_compile.py:445:16     	deffunc     	U   	['<deffunc>', \"\"\"def foo():\\n"
  - "Lib/test/test_compile.py:534:47     	tmpd        	U   	TemporaryDirectory() as tmpd:"
  - "Lib/test/test_compile.py:660:64     	msan        	U   	when run under clang msan.\"\"\""
  - "Lib/test/test_complex.py:180:13     	mult        	U   	mult = 2 ** i"
  - "Lib/test/test_complex.py:258:20     	Behaviour   	U   	# UndefinedBehaviourSanitizer)."
  - "Lib/test/test_complex.py:302:14     	boolcontext 	U   	def test_boolcontext(self):"
  - "Lib/test/test_complex.py:449:15     	evilcomplex 	U   	class evilcomplex:"
  - "Lib/test/test_complex.py:538:44     	octals      	U   	'0_7', '09_99'): # octals are not recognized here"
  - "Lib/test/test_complex.py:764:19     	bcdox       	U   	for t in 'bcdoxX':"
  - "Lib/test/test_configparser.py:48:9      	newconfig   	U   	def newconfig(self, defaults=None"
  - "Lib/test/test_configparser.py:314:14    	Deutsch     	U   	foo[de]{0[0]}Deutsch"
  - "Lib/test/test_configparser.py:469:31    	nekey       	U   	\"nekey{}nevalue\\n\".format(self"
  - "Lib/test/test_configparser.py:469:38    	nevalue     	U   	\"nekey{}nevalue\\n\".format(self.delimiters"
  - "Lib/test/test_configparser.py:541:40    	cfgparser   	U   	= support.findfile(\"cfgparser.3\")"
  - "Lib/test/test_configparser.py:703:15    	mystr       	U   	class mystr(str):"
  - "Lib/test/test_configparser.py:798:13    	getdefault  	U   	getdefault{0[1]} |%(default)s|"
  - "Lib/test/test_configparser.py:950:18    	malformatted	U   	def test_set_malformatted_interpolation(self)"
  - "Lib/test/test_configparser.py:966:18    	nonstring   	U   	def test_set_nonstring_types(self):"
  - "Lib/test/test_configparser.py:1005:10   	hexen       	U   	[hexen]"
  - "Lib/test/test_configparser.py:1159:9    	smbconf     	U   	smbconf = support.findfile("
  - "Lib/test/test_configparser.py:1188:13   	favourite   	U   	favourite Beatle = Paul"
  - "Lib/test/test_configparser.py:1188:23   	Beatle      	U   	favourite Beatle = Paul"
  - "Lib/test/test_configparser.py:1196:14   	ambv        	U   	[ambv]"
  - "Lib/test/test_configparser.py:1206:31   	soylent     	U   	favourite movie = soylent ${common:favourite color"
  - "Lib/test/test_configparser.py:1271:13   	optionlower 	U   	optionlower = value"
  - "Lib/test/test_configparser.py:1279:13   	foolower    	U   	foolower = ${common:optionlower"
  - "Lib/test/test_configparser.py:1685:33   	getdecimal  	U   	self.assertEqual(parser.getdecimal('s1', 'one'), 1)"
  - "Lib/test/test_configparser.py:1875:10   	multiprefix 	U   	[multiprefix]"
  - "Lib/test/test_configparser.py:2062:17   	getlen      	U   	def getlen(self, section, option"
  - "Lib/test/test_configparser.py:2085:27   	tysburg     	U   	self.assertNotIn('tysburg', cfg.converters)"
  - "Lib/test/test_contains.py:10:7      	myset       	U   	class myset(base_set):"
  - "Lib/test/test_contains.py:70:14     	nonreflexive	U   	def test_nonreflexive(self):"
  - "Lib/test/test_context.py:11:27      	hamt        	U   	from _testcapi import hamt"
  - "Lib/test/test_context.py:17:23      	reftracking 	U   	\"\"\"Needed to make reftracking test mode work.\"\"\""
  - "Lib/test/test_context.py:92:22      	typerrors   	U   	def test_context_typerrors_1(self):"
  - "Lib/test/test_context.py:383:9      	cvar        	U   	cvar = contextvars.ContextVar"
  - "Lib/test/test_context.py:401:14     	contextvar  	U   	def test_contextvar_getitem(self):"
  - "Lib/test/test_context.py:402:9      	clss        	U   	clss = contextvars.ContextVar"
  - "Lib/test/test_context.py:454:7      	Hask        	U   	class HaskKeyCrasher:"
  - "Lib/test/test_context.py:477:7      	Hamt        	U   	class HamtTest(unittest.TestCase"
  - "Lib/test/test_context.py:479:14     	hashkey     	U   	def test_hashkey_helper_1(self):"
  - "Lib/test/test_contextlib.py:100:13  	whoo        	U   	def whoo():"
  - "Lib/test/test_contextlib.py:225:14  	nokeepref   	U   	def test_nokeepref(self):"
  - "Lib/test/test_contextlib.py:323:26  	Booh        	U   	f.write(\"Booh\\n\")"
  - "Lib/test/test_contextlib.py:383:7   	mycontext   	U   	class mycontext(ContextDecorator):"
  - "Lib/test/test_contextlib.py:491:19  	unter       	U   	def __unter__(self):"
  - "Lib/test/test_contextlib.py:505:19  	uxit        	U   	def __uxit__(self, *exc):"
  - "Lib/test/test_contextlib.py:514:15  	somecontext 	U   	class somecontext(object):"
  - "Lib/test/test_copy.py:601:26    	nostate         	U   	def test_reconstruct_nostate(self):"
  - "Lib/test/test_copy.py:767:48    	stickin         	U   	ValueError(\"ain't got no stickin' state\")"
  - "Lib/test/test_copy.py:801:21    	weakdict        	U   	def _check_copy_weakdict(self, _dicttype):"
  - "Lib/test/test_copy.py:801:37    	dicttype        	U   	copy_weakdict(self, _dicttype):"
  - "Lib/test/test_copy.py:822:19    	weakkeydict     	U   	def test_copy_weakkeydict(self):"
  - "Lib/test/test_copy.py:825:19    	weakvaluedict   	U   	def test_copy_weakvaluedict(self):"
  - "Lib/test/test_dataclasses.py:212:13     	selfx       	U   	selfx: str"
  - "Lib/test/test_dataclasses.py:1551:29    	Tbase       	U   	class T(namedtuple('Tbase', 'a')):"
  - "Lib/test/test_dataclasses.py:1856:29    	plugh       	U   	return 'plugh'"
  - "Lib/test/test_dataclasses.py:1959:26    	qualnames   	U   	def test_dataclasses_qualnames(self):"
  - "Lib/test/test_dataclasses.py:2541:12    	hashability 	U   	# hashability keeps working the same"
  - "Lib/test/test_dataclasses.py:2641:22    	nonfrozen   	U   	def test_inherit_nonfrozen_from_empty_frozen(self"
  - "Lib/test/test_dataclasses.py:3121:13    	typestr     	U   	for typestr in ('ClassVar[int]'"
  - "Lib/test/test_dataclasses.py:3151:14    	isnt        	U   	def test_isnt_classvar(self):"
  - "Lib/test/test_dataclasses.py:3158:38    	Varx        	U   	'typing.ClassVarx[int]',"
  - "Lib/test/test_dataclasses.py:3159:26    	typong      	U   	'typong.ClassVar[int]',"
  - "Lib/test/test_dataclasses.py:3161:26    	typingx     	U   	'typingxClassVar[str]',"
  - "Lib/test/test_dataclasses.py:3205:26    	xdataclasses	U   	'xdataclasses.xInitVar',"
  - "Lib/test/test_dataclasses.py:3258:36    	textanno    	U   	test import dataclass_textanno"
  - "Lib/test/test_dataclasses.py:3361:32    	xxinit      	U   	xxinit=False)"
  - "Lib/test/test_dbm_dumb.py:165:9     	dkeys           	U   	dkeys = sorted(self._dict"
  - "Lib/test/test_dbm_dumb.py:177:40    	abcdefghijklm   	U   	k = random.choice('abcdefghijklm')"
  - "Lib/test/test_dbm.py:1:51       	testdumbdbm 	U   	open function based on testdumbdbm.py\"\"\""
  - "Lib/test/test_decimal.py:14:57      	Cowlishaw       	U   	tests provided by Mike Cowlishaw. The latter"
  - "Lib/test/test_decimal.py:17:1       	Cowlishaw's     	U   	Cowlishaw's tests can be downloaded"
  - "Lib/test/test_decimal.py:57:1       	cfractions      	U   	cfractions = import_fresh_module"
  - "Lib/test/test_decimal.py:59:1       	pfractions      	U   	pfractions = import_fresh_module"
  - "Lib/test/test_decimal.py:113:16     	decimaltestdata 	U   	TESTDATADIR = 'decimaltestdata'"
  - "Lib/test/test_decimal.py:140:14     	readcontext     	U   	self.readcontext = self.decimal.Context"
  - "Lib/test/test_decimal.py:147:14     	scbx            	U   	'scbx164',"
  - "Lib/test/test_decimal.py:157:14     	expx            	U   	'expx901',"
  - "Lib/test/test_decimal.py:165:14     	logx            	U   	'logx901',"
  - "Lib/test/test_decimal.py:169:14     	powx            	U   	'powx1183',"
  - "Lib/test/test_decimal.py:183:40     	pwsx            	U   	skipped_test_ids.add('pwsx803')"
  - "Lib/test/test_decimal.py:191:40     	pwmx            	U   	skipped_test_ids.add('pwmx325')"
  - "Lib/test/test_decimal.py:197:29     	maxexponent     	U   	'maxexponent' : self.change_max_exponent"
  - "Lib/test/test_decimal.py:198:29     	minexponent     	U   	'minexponent' : self.change_min_exponent"
  - "Lib/test/test_decimal.py:206:30     	comparesig      	U   	'comparesig':'compare_signal',"
  - "Lib/test/test_decimal.py:207:30     	comparetotal    	U   	'comparetotal':'compare_total',"
  - "Lib/test/test_decimal.py:208:30     	comparetotmag   	U   	'comparetotmag':'compare_total_mag"
  - "Lib/test/test_decimal.py:210:30     	copyabs         	U   	'copyabs':'copy_abs',"
  - "Lib/test/test_decimal.py:211:30     	copynegate      	U   	'copynegate':'copy_negate',"
  - "Lib/test/test_decimal.py:213:30     	divideint       	U   	'divideint':'divide_int',"
  - "Lib/test/test_decimal.py:215:30     	iscanonical     	U   	'iscanonical':'is_canonical',"
  - "Lib/test/test_decimal.py:217:30     	isinfinite      	U   	'isinfinite':'is_infinite',"
  - "Lib/test/test_decimal.py:219:30     	isnormal        	U   	'isnormal':'is_normal',"
  - "Lib/test/test_decimal.py:220:30     	isqnan          	U   	'isqnan':'is_qnan',"
  - "Lib/test/test_decimal.py:221:30     	issigned        	U   	'issigned':'is_signed',"
  - "Lib/test/test_decimal.py:222:30     	issnan          	U   	'issnan':'is_snan',"
  - "Lib/test/test_decimal.py:223:30     	issubnormal     	U   	'issubnormal':'is_subnormal',"
  - "Lib/test/test_decimal.py:224:30     	iszero          	U   	'iszero':'is_zero',"
  - "Lib/test/test_decimal.py:225:30     	maxmag          	U   	'maxmag':'max_mag',"
  - "Lib/test/test_decimal.py:226:30     	minmag          	U   	'minmag':'min_mag',"
  - "Lib/test/test_decimal.py:227:30     	nextminus       	U   	'nextminus':'next_minus',"
  - "Lib/test/test_decimal.py:228:30     	nextplus        	U   	'nextplus':'next_plus',"
  - "Lib/test/test_decimal.py:229:30     	nexttoward      	U   	'nexttoward':'next_toward',"
  - "Lib/test/test_decimal.py:232:30     	remaindernear   	U   	'remaindernear':'remainder_near',"
  - "Lib/test/test_decimal.py:233:30     	samequantum     	U   	'samequantum':'same_quantum',"
  - "Lib/test/test_decimal.py:234:30     	squareroot      	U   	'squareroot':'sqrt',"
  - "Lib/test/test_decimal.py:235:30     	toeng           	U   	'toeng':'to_eng_string',"
  - "Lib/test/test_decimal.py:236:30     	tointegral      	U   	'tointegral':'to_integral_value"
  - "Lib/test/test_decimal.py:237:30     	tointegralx     	U   	'tointegralx':'to_integral_exact"
  - "Lib/test/test_decimal.py:238:30     	tosci           	U   	'tosci':'to_sci_string',"
  - "Lib/test/test_decimal.py:286:38     	setprec         	U   	readcontext._unsafe_setprec(1070000000)"
  - "Lib/test/test_decimal.py:287:38     	setemax         	U   	readcontext._unsafe_setemax(1070000000)"
  - "Lib/test/test_decimal.py:288:38     	setemin         	U   	readcontext._unsafe_setemin(-1070000000)"
  - "Lib/test/test_decimal.py:327:9      	funct           	U   	funct, value = (x.strip()"
  - "Lib/test/test_decimal.py:353:13     	valstemp        	U   	valstemp = L[2:]"
  - "Lib/test/test_decimal.py:375:9      	theirexceptions 	U   	theirexceptions = [self.ErrorNames[x"
  - "Lib/test/test_decimal.py:456:9      	myexceptions    	U   	myexceptions = self.getexceptions"
  - "Lib/test/test_decimal.py:456:29     	getexceptions   	U   	myexceptions = self.getexceptions()"
  - "Lib/test/test_decimal.py:490:7      	CIBM            	U   	class CIBMTestCases(IBMTestCases"
  - "Lib/test/test_decimal.py:756:9      	prevdec         	U   	prevdec = Decimal(500000123"
  - "Lib/test/test_decimal.py:1515:5     	thfunc          	U   	def thfunc1(cls):"
  - "Lib/test/test_decimal.py:1568:5     	thiscontext     	U   	thiscontext = getcontext()"
  - "Lib/test/test_decimal.py:1614:14    	emin            	U   	save_emin = DefaultContext.Emin"
  - "Lib/test/test_decimal.py:1675:24    	uncomparable    	U   	#a Decimal and uncomparable"
  - "Lib/test/test_decimal.py:1737:9     	etiny           	U   	etiny = C.MIN_ETINY if C else"
  - "Lib/test/test_decimal.py:1783:13    	hashit          	U   	def hashit(d):"
  - "Lib/test/test_decimal.py:1907:14    	tonum           	U   	def test_tonum_methods(self):"
  - "Lib/test/test_decimal.py:2488:13    	savedecimal     	U   	savedecimal = sys.modules['decimal"
  - "Lib/test/test_decimal.py:3591:14    	localcontextarg 	U   	def test_localcontextarg(self):"
  - "Lib/test/test_decimal.py:3739:9     	flagsets        	U   	flagsets = [[Inexact], [Rounded"
  - "Lib/test/test_decimal.py:3995:9     	savecontext     	U   	savecontext = getcontext().copy"
  - "Lib/test/test_decimal.py:4039:13    	saveprec        	U   	saveprec = c.prec"
  - "Lib/test/test_decimal.py:4559:9     	Whitebox        	U   	class PyWhitebox(unittest.TestCase):"
  - "Lib/test/test_decimal.py:4779:14    	bignum          	U   	def test_bignum(self):"
  - "Lib/test/test_decimal.py:4780:23    	whitebox        	U   	# Not exactly whitebox, but too slow with pydecimal"
  - "Lib/test/test_decimal.py:4967:56    	allcr           	U   	OverflowError, setattr, c, '_allcr', int_max+1)"
  - "Lib/test/test_decimal.py:5485:19    	subtyping       	U   	# Unsound subtyping"
  - "Lib/test/test_decimal.py:5516:14    	maxcontext      	U   	def test_maxcontext_exact_arith(self):"
  - "Lib/test/test_decimal.py:5534:36    	deccheck        	U   	MemoryError are tested. deccheck.py has an exhaustive"
  - "Lib/test/test_decimal.py:5616:13    	mkargs          	U   	def mkargs(module, sig):"
  - "Lib/test/test_decorators.py:5:5     	funcattrs       	U   	def funcattrs(**kwds):"
  - "Lib/test/test_decorators.py:21:7    	Dbcheck         	U   	class DbcheckError (Exception):"
  - "Lib/test/test_decorators.py:22:24   	exprstr         	U   	def __init__(self, exprstr, func, args, kwds):"
  - "Lib/test/test_decorators.py:24:35   	dbcheck         	U   	Exception.__init__(self, \"dbcheck %r failed (func=%s args"
  - "Lib/test/test_decorators.py:41:5    	countcalls      	U   	def countcalls(counts):"
  - "Lib/test/test_decorators.py:110:29  	Cleese          	U   	@decorators.author('Cleese')"
  - "Lib/test/test_decorators.py:115:14  	argforms        	U   	def test_argforms(self):"
  - "Lib/test/test_decorators.py:119:13  	noteargs        	U   	def noteargs(*args, **kwds):"
  - "Lib/test/test_decorators.py:121:32  	dbval           	U   	setattr(func, 'dbval', (args, kwds))"
  - "Lib/test/test_decorators.py:132:58  	cleese          	U   	eric='idle', john='cleese')"
  - "Lib/test/test_decorators.py:190:13  	unimp           	U   	def unimp(func):"
  - "Lib/test/test_decorators.py:192:24  	nullval         	U   	context = dict(nullval=None, unimp=unimp)"
  - "Lib/test/test_decorators.py:211:36  	haha            	U   	funcattrs(abc=1, xyz=\"haha\")"
  - "Lib/test/test_decorators.py:222:13  	callnum         	U   	def callnum(num):"
  - "Lib/test/test_decorators.py:251:29  	makedec         	U   	actions.append('makedec' + tag)"
  - "Lib/test/test_decorators.py:253:33  	calldec         	U   	actions.append('calldec' + tag)"
  - "Lib/test/test_decorators.py:263:37  	evalname        	U   	opname, res = ('evalname', make_decorator)"
  - "Lib/test/test_decorators.py:265:37  	evalargs        	U   	opname, res = ('evalargs', str(self.index))"
  - "Lib/test/test_decorators.py:362:13  	myclassmethod   	U   	for myclassmethod in [MyClassMethod1,"
  - "Lib/test/test_deque.py:65:11    	extendleft      	U   	d.extendleft([8, 7])"
  - "Lib/test/test_deque.py:132:20   	xabc            	U   	d = deque('xabc')"
  - "Lib/test/test_deque.py:186:41   	abcdabcd        	U   	assertEqual(list(d), list('abcdabcd'))"
  - "Lib/test/test_deque.py:203:40   	efgh            	U   	assertEqual(g + h, deque('efgh'))"
  - "Lib/test/test_deque.py:221:41   	abcddcba        	U   	assertEqual(list(d), list('abcddcba'))"
  - "Lib/test/test_deque.py:271:9    	nonelement      	U   	nonelement = 'Z'"
  - "Lib/test/test_deque.py:377:40   	bcabc           	U   	assertEqual(d * 2, deque('bcabc'))"
  - "Lib/test/test_deque.py:424:39   	eabcd           	U   	assertEqual(''.join(d), 'eabcd')"
  - "Lib/test/test_deque.py:428:39   	bcdea           	U   	assertEqual(''.join(d), 'bcdea')"
  - "Lib/test/test_deque.py:453:55   	backaround      	U   	check that it wraps backaround"
  - "Lib/test/test_deque.py:539:19   	steadystate     	U   	def test_long_steadystate_queue_popleft(self)"
  - "Lib/test/test_deque.py:550:37   	popright        	U   	long_steadystate_queue_popright(self):"
  - "Lib/test/test_deque.py:934:1    	libreftest      	U   	libreftest = \"\"\""
  - "Lib/test/test_deque.py:935:46   	libcollections  	U   	Reference: Doc/lib/libcollections.tex"
  - "Lib/test/test_deque.py:998:9    	roundrobin      	U   	>>> def roundrobin(*iterables):"
  - "Lib/test/test_dict.py:37:13     	dictliteral             	U   	dictliteral = '{' + ', '.join(formatted"
  - "Lib/test/test_dict.py:366:19    	noncompact              	U   	def test_copy_noncompact(self):"
  - "Lib/test/test_dict.py:667:34    	elementwise             	U   	With the same size, an elementwise compare happens"
  - "Lib/test/test_dict.py:861:20    	presized                	U   	def test_empty_presized_dict_in_freelist(self"
  - "Lib/test/test_dict.py:861:37    	freelist                	U   	empty_presized_dict_in_freelist(self):"
  - "Lib/test/test_dict.py:1001:14   	splittable              	U   	def test_splittable_setdefault(self):"
  - "Lib/test/test_dict.py:1093:40   	hassplittable           	U   	assertTrue(_testcapi.dict_hassplittable(a.__dict__))"
  - "Lib/test/test_dict.py:1133:15   	dictviews               	U   	# dictviews aren't picklable, only"
  - "Lib/test/test_dict.py:1152:14   	valuesiterator          	U   	def test_valuesiterator_pickling(self):"
  - "Lib/test/test_dict.py:1186:14   	reverseitemiterator     	U   	def test_reverseitemiterator_pickling(self):"
  - "Lib/test/test_dict.py:1208:14   	reversevaluesiterator   	U   	def test_reversevaluesiterator_pickling(self):"
  - "Lib/test/test_dict.py:1388:36   	iternextitem            	U   	oob_indexing_dictiter_iternextitem(self):"
  - "Lib/test/test_dict.py:1483:18   	nonstr                  	U   	def test_str_nonstr(self):"
  - "Lib/test/test_dict.py:1485:37   	unoptimized             	U   	keys. Make sure the unoptimized path is used when a"
  - "Lib/test/test_dict.py:1560:17   	noninterned             	U   	noninterned_key1 = 'ke'"
  - "Lib/test/test_dict.py:1584:7    	CAPI                    	U   	class CAPITest(unittest.TestCase"
  - "Lib/test/test_dict.py:1588:22   	knownhash               	U   	def test_getitem_knownhash(self):"
  - "Lib/test/test_difflib_expect.html:381:5     	tabsize     	U   	<h2>tabsize=2</h2>"
  - "Lib/test/test_difflib_expect.html:391:219   	sstt        	U   	preceded&nbsp;by&nbsp;from:[sstt]&nbsp;to:[sssst]</td"
  - "Lib/test/test_difflib_expect.html:391:234   	sssst       	U   	from:[sstt]&nbsp;to:[sssst]</td><td class=\"diff"
  - "Lib/test/test_difflib_expect.html:392:219   	sstst       	U   	preceded&nbsp;by&nbsp;from:[sstst]&nbsp;to:[ssssss]</td"
  - "Lib/test/test_difflib_expect.html:421:398   	adde        	U   	nbsp;&nbsp;&nbsp;&nbsp;adde</span></td></tr>"
  - "Lib/test/test_difflib_expect.html:433:217   	subtra      	U   	line&nbsp;8&nbsp;&nbsp;subtra</span></td><td class"
  - "Lib/test/test_difflib_expect.html:434:117   	cted        	U   	span class=\"diff_sub\">cted</span></td><td class"
  - "Lib/test/test_difflib_expect.html:448:19    	splitlines  	U   	<h2>wrapcolumn=14,splitlines()</h2>"
  - "Lib/test/test_difflib.py:46:11      	Autojunk	U   	class TestAutojunk(unittest.TestCase):"
  - "Lib/test/test_difflib.py:126:31     	ımplıcıt	U   	Explicit is better than ımplıcıt."
  - "Lib/test/test_difflib.py:132:32     	ügly    	U   	Beautiful is better than ügly."
  - "Lib/test/test_difflib.py:133:9      	Sımple  	U   	3. Sımple is better than complex"
  - "Lib/test/test_difflib.py:134:34     	cömplex 	U   	Complicated is better than cömplex."
  - "Lib/test/test_difflib.py:293:39     	filedate	U   	trailing_tab_on_empty_filedate(self):"
  - "Lib/test/test_difflib.py:385:36     	łodz    	U   	b'\\xb3odz.txt' # \"łodz.txt\""
  - "Lib/test/test_difflib.py:417:9      	datea   	U   	datea = b'2005-03-18'"
  - "Lib/test/test_difflib.py:418:9      	dateb   	U   	dateb = b'2005-03-19'"
  - "Lib/test/test_difflib.py:461:15     	ohell   	U   	b = ['ohell\\n']"
  - "Lib/test/test_dis.py:45:56      	immeadiately	U   	mismatch wouldn't be caught immeadiately"
  - "Lib/test/test_doctest2.py:10:1      	ЉЊЈЁЂ   	U   	ЉЊЈЁЂ"
  - "Lib/test/test_doctest2.py:98:9      	clsm    	U   	def clsm(cls, val):"
  - "Lib/test/test_dummy_thread.py:19:14     	initlock    	U   	def test_initlock(self):"
  - "Lib/test/test_dummy_thread.py:53:14     	uncond      	U   	def test_uncond_acquire_success(self"
  - "Lib/test/test_dummy_thread.py:57:26     	Uncondional 	U   	\"Uncondional locking failed.\")"
  - "Lib/test/test_dummy_threading.py:12:20      	sema    	U   	global sema"
  - "Lib/test/test_dummy_threading.py:37:14      	numtasks	U   	self.numtasks = 10"
  - "Lib/test/test_dynamic.py:63:11      	callstack   	U   	# callstack."
  - "Lib/test/test_dynamicclassattribute.py:141:9    	newgettersub	U   	newgettersub = PropertySubNewGetter"
  - "Lib/test/test_dynamicclassattribute.py:144:9    	newgetter   	U   	newgetter = PropertyNewGetter"
  - "Lib/test/test_dynamicclassattribute.py:262:9    	foosub      	U   	foosub = FooSub()"
  - "Lib/test/test_ensurepip.py:330:11   	Uninstallation  	U   	class TestUninstallationMainFunction(EnsurepipMixin"
  - "Lib/test/test_enum.py:132:33    	ownerclass      	U   	get__(self, instance, ownerclass):"
  - "Lib/test/test_enum.py:148:15    	Konstants       	U   	class Konstants(float, Enum):"
  - "Lib/test/test_enum.py:268:35    	invierno        	U   	Season.SPRING.name = 'invierno'"
  - "Lib/test/test_enum.py:643:14    	floatenum       	U   	def test_floatenum_from_scratch(self):"
  - "Lib/test/test_enum.py:1023:17   	chartruese      	U   	chartruese = 7"
  - "Lib/test/test_enum.py:1044:15   	numero          	U   	class numero(IntEnum):"
  - "Lib/test/test_enum.py:1088:14   	flufl           	U   	def test_flufl_enum(self):"
  - "Lib/test/test_enum.py:1089:15   	Fluflnum        	U   	class Fluflnum(Enum):"
  - "Lib/test/test_enum.py:1193:23   	intname         	U   	self._intname = name"
  - "Lib/test/test_enum.py:1644:28   	hexlified       	U   	return '%s hexlified!' % self.value"
  - "Lib/test/test_enum.py:1689:17   	grene           	U   	grene = 2"
  - "Lib/test/test_enum.py:1740:14   	nonhash         	U   	def test_nonhash_value(self):"
  - "Lib/test/test_enum.py:1838:25   	wierd           	U   	def test_auto_order_wierd(self):"
  - "Lib/test/test_enum.py:1918:25   	booyah          	U   	return 'booyah'"
  - "Lib/test/test_enum.py:1921:25   	nuhuh           	U   	return 'nuhuh!'"
  - "Lib/test/test_enum.py:2267:14   	programatic     	U   	def test_programatic_function_string(self"
  - "Lib/test/test_enum.py:3180:28   	lexigraphical   	U   	# report the first lexigraphical name in that case."
  - "Lib/test/test_enumerate.py:90:14    	basicfunction       	U   	def test_basicfunction(self):"
  - "Lib/test/test_enumerate.py:100:14   	getitemseqn         	U   	def test_getitemseqn(self):"
  - "Lib/test/test_enumerate.py:105:14   	iteratorseqn        	U   	def test_iteratorseqn(self):"
  - "Lib/test/test_enumerate.py:110:14   	iteratorgenerator   	U   	def test_iteratorgenerator(self):"
  - "Lib/test/test_enumerate.py:118:14   	illformediterable   	U   	def test_illformediterable(self):"
  - "Lib/test/test_enumerate.py:124:14   	argumentcheck       	U   	def test_argumentcheck(self):"
  - "Lib/test/test_enumerate.py:223:14   	objmethods          	U   	def test_objmethods(self):"
  - "Lib/test/test_errno.py:25:7     	Errorcode   	U   	class ErrorcodeTests(unittest.TestCase"
  - "Lib/test/test_exception_hierarchy.py:77:25      	errnames    	U   	excname, _, errnames = line.partition('"
  - "Lib/test/test_exception_hierarchy.py:78:17      	errname     	U   	for errname in filter(None, errnames"
  - "Lib/test/test_exception_hierarchy.py:92:9       	othercodes  	U   	othercodes = set(errno.errorcode"
  - "Lib/test/test_exception_hierarchy.py:188:19     	kwdargs     	U   	def test_init_kwdargs(self):"
  - "Lib/test/test_exception_variations.py:11:30     	nyaa	U   	raise Exception('nyaa!')"
  - "Lib/test/test_exception_variations.py:46:30     	yarr	U   	raise Exception('yarr!')"
  - "Lib/test/test_exceptions.py:143:13  	ckmsg                           	U   	def ckmsg(src, msg):"
  - "Lib/test/test_exceptions.py:250:22  	yfff                            	U   	check(\"for x yfff:\", 1, 7)"
  - "Lib/test/test_exceptions.py:950:50  	testfunc                        	U   	cleanup_exc_state(self, testfunc):"
  - "Lib/test/test_exceptions.py:1217:9  	klasses                         	U   	klasses = UnicodeEncodeError"
  - "Lib/test/test_exceptions.py:1223:14 	badisinstance                   	U   	def test_badisinstance(self):"
  - "Lib/test/test_exceptions.py:1271:53 	tstate                          	U   	RecursionError is raised when tstate->recursion_depth is"
  - "Lib/test/test_exceptions.py:1274:32 	recursivity                     	U   	Prior to #22898, the recursivity of PyErr_NormalizeException"
  - "Lib/test/test_exceptions.py:1277:68 	Fini                            	U   	a segfault in _PyExc_Fini() upon"
  - "Lib/test/test_exceptions.py:1308:13 	recursionlimit                  	U   	recursionlimit = sys.getrecursionlimit"
  - "Lib/test/test_exceptions.py:1407:35 	nomemory                        	U   	_testcapi.set_nomemory(0)"
  - "Lib/test/test_exceptions.py:1524:20 	ENOTDIR                         	U   	def test_errno_ENOTDIR(self):"
  - "Lib/test/test_exceptions.py:1531:36 	Unraisable                      	U   	Issue #22836: PyErr_WriteUnraisable() should give sensible"
  - "Lib/test/test_exceptions.py:1695:13 	bluch                           	U   	bluch"
  - "Lib/test/test_exceptions.py:1702:13 	blech                           	U   	blech = None"
  - "Lib/test/test_exceptions.py:1707:13 	blch                            	U   	blch = None"
  - "Lib/test/test_exceptions.py:1712:13 	bluchin                         	U   	bluchin = None"
  - "Lib/test/test_exceptions.py:1716:13 	blach                           	U   	blach = None"
  - "Lib/test/test_exceptions.py:1717:13 	bluc                            	U   	bluc = None"
  - "Lib/test/test_exceptions.py:1722:13 	bluchi                          	U   	bluchi = None"
  - "Lib/test/test_exceptions.py:1726:13 	blucha                          	U   	blucha = None"
  - "Lib/test/test_exceptions.py:1746:30 	suggestio                       	U   	print(global_for_suggestio)"
  - "Lib/test/test_exceptions.py:1756:31 	Errrrr                          	U   	print(ZeroDivisionErrrrr)"
  - "Lib/test/test_exceptions.py:1766:13 	somethingverywronghehehehehehe  	U   	somethingverywronghehehehehehe = None"
  - "Lib/test/test_exceptions.py:1767:19 	somethingverywronghe            	U   	print(somethingverywronghe)"
  - "Lib/test/test_exceptions.py:1775:27 	somethingverywronghehe          	U   	self.assertNotIn(\"somethingverywronghehe\", err.getvalue())"
  - "Lib/test/test_exceptions.py:1778:30 	pytho                           	U   	vvv = mom = w = id = pytho = None"
  - "Lib/test/test_exceptions.py:1951:34 	doesn                           	U   	unbound_local_error_doesn_not_match(self):"
  - "Lib/test/test_exceptions.py:1954:19 	somethong                       	U   	print(somethong)"
  - "Lib/test/test_exceptions.py:2078:17 	somethingverywrong              	U   	A().somethingverywrong"
  - "Lib/test/test_exceptions.py:2233:17 	blich                           	U   	T().blich"
  - "Lib/test/test_exceptions.py:2280:41 	somemodule                      	U   	ImportError('test', name='somemodule')"
  - "Lib/test/test_exceptions.py:2284:41 	somepath                        	U   	ImportError('test', path='somepath')"
  - "Lib/test/test_exceptions.py:2288:58 	somename                        	U   	path='somepath', name='somename')"
  - "Lib/test/test_faulthandler.py:159:14    	sigsegv     	U   	def test_sigsegv(self):"
  - "Lib/test/test_faulthandler.py:222:14    	sigabrt     	U   	def test_sigabrt(self):"
  - "Lib/test/test_faulthandler.py:235:14    	sigfpe      	U   	def test_sigfpe(self):"
  - "Lib/test/test_faulthandler.py:247:14    	sigbus      	U   	def test_sigbus(self):"
  - "Lib/test/test_faulthandler.py:261:14    	sigill      	U   	def test_sigill(self):"
  - "Lib/test/test_faulthandler.py:295:37    	sigaltstack 	U   	\"Issue #12868: sigaltstack() doesn't work on \""
  - "Lib/test/test_faulthandler.py:901:45    	Emsc        	U   	# MSC exception (\"Emsc\")"
  - "Lib/test/test_fcntl.py:19:9     	lockdata    	U   	def get_lockdata():"
  - "Lib/test/test_fcntl.py:33:22    	lxxxx       	U   	off_t = 'lxxxx'"
  - "Lib/test/test_fcntl.py:37:35    	gnukfreebsd 	U   	platform.startswith('gnukfreebsd'):"
  - "Lib/test/test_fcntl.py:38:33    	qqihhi      	U   	lockdata = struct.pack('qqihhi', 0, 0, 0, fcntl.F_WRLCK"
  - "Lib/test/test_fcntl.py:39:38    	unixware    	U   	platform in ['hp-uxB', 'unixware7']:"
  - "Lib/test/test_fcntl.py:40:33    	hhlllii     	U   	lockdata = struct.pack('hhlllii', fcntl.F_WRLCK, 0,"
  - "Lib/test/test_file.py:207:11    	misbehaviour	U   	# misbehaviour especially with repeated"
  - "Lib/test/test_file.py:250:9     	dataoffset  	U   	dataoffset = 16384"
  - "Lib/test/test_file.py:254:9     	nchunks     	U   	nchunks = dataoffset // len"
  - "Lib/test/test_file.py:255:9     	testlines   	U   	testlines = ["
  - "Lib/test/test_file.py:284:61    	buffersize  	U   	boundary for any power-of-2 buffersize"
  - "Lib/test/test_file.py:289:9     	testline    	U   	testline = testlines.pop(0)"
  - "Lib/test/test_filecmp.py:64:14      	caseinsensitive 	U   	self.caseinsensitive = os.path.normcase("
  - "Lib/test/test_filecmp.py:211:13     	dcmp            	U   	sub_dcmp = sub_dirs['subdir'"
  - "Lib/test/test_fileinput.py:55:15    	linesread   	U   	self._linesread = []"
  - "Lib/test/test_fileinput.py:285:41   	kargs       	U   	call__(self, *args, **kargs):"
  - "Lib/test/test_fileinput.py:335:63   	fobj        	U   	rb', inplace=True) as fobj:"
  - "Lib/test/test_fileinput.py:1020:29  	ufffdabc    	U   	check('replace', ['\\ufffdabc'])"
  - "Lib/test/test_fileio.py:1:39    	Stutzbach   	U   	test_file.py by Daniel Stutzbach"
  - "Lib/test/test_fileio.py:68:13   	Blksize     	U   	def testBlksize(self):"
  - "Lib/test/test_fileio.py:223:13  	Opendir     	U   	def testOpendir(self):"
  - "Lib/test/test_fileio.py:337:26  	Readall     	U   	def testErrnoOnClosedReadall(self, f):"
  - "Lib/test/test_float.py:21:10    	setformat               	U   	requires_setformat = unittest.skipUnless"
  - "Lib/test/test_float.py:26:43    	formatfloat             	U   	path.join(test_dir, 'formatfloat_testcases.txt')"
  - "Lib/test/test_float.py:183:14   	floatconversion         	U   	def test_floatconversion(self):"
  - "Lib/test/test_float.py:260:14   	floatasratio            	U   	def test_floatasratio(self):"
  - "Lib/test/test_float.py:543:48   	libms                   	U   	and -1 ** large; some libms apparently"
  - "Lib/test/test_float.py:818:15   	roundtripping           	U   	# str roundtripping. In particular, for"
  - "Lib/test/test_float.py:858:13   	negs                    	U   	negs = '-'+s"
  - "Lib/test/test_float.py:874:51   	ceci                    	U   	TypeError, round, NAN, \"ceci n'est pas un integer"
  - "Lib/test/test_float.py:948:39   	infs                    	U   	formatting of nans and infs."
  - "Lib/test/test_float.py:958:13   	pfmt                    	U   	pfmt = '%+' + fmt[1:]"
  - "Lib/test/test_float.py:1024:47  	infinit                 	U   	ValueError, float, \"infinit\")"
  - "Lib/test/test_float.py:1027:47  	infinitys               	U   	ValueError, float, \"infinitys\")"
  - "Lib/test/test_float.py:1058:47  	nana                    	U   	ValueError, float, \"nana\")"
  - "Lib/test/test_float.py:1086:26  	dtoa                    	U   	# When using the dtoa.c code, the sign of"
  - "Lib/test/test_float.py:1322:56  	ffffffffffffffp         	U   	OverflowError, fromHex, '0x1.ffffffffffffffp+1023')"
  - "Lib/test/test_float.py:1325:57  	fffffffffffffp          	U   	OverflowError, fromHex, '+0x3.fffffffffffffp1022')"
  - "Lib/test/test_float.py:1328:54  	Xffffffffffffffffp      	U   	OverflowError, fromHex, '-0Xffffffffffffffffp960')"
  - "Lib/test/test_float.py:1362:37  	fffffffffffffffffp      	U   	identical(fromHex('0x1.fffffffffffffffffp-1075'), TINY)"
  - "Lib/test/test_float.py:1399:37  	ffffffffffffd           	U   	identical(fromHex('0x0.ffffffffffffd6p-1022'), MIN-3*TINY"
  - "Lib/test/test_float.py:1401:37  	ffffffffffffdap         	U   	identical(fromHex('0x0.ffffffffffffdap-1022'), MIN-2*TINY)"
  - "Lib/test/test_float.py:1402:37  	ffffffffffffdcp         	U   	identical(fromHex('0x0.ffffffffffffdcp-1022'), MIN-2*TINY)"
  - "Lib/test/test_float.py:1403:37  	ffffffffffffdep         	U   	identical(fromHex('0x0.ffffffffffffdep-1022'), MIN-2*TINY)"
  - "Lib/test/test_float.py:1404:37  	ffffffffffffe           	U   	identical(fromHex('0x0.ffffffffffffe0p-1022'), MIN-2*TINY"
  - "Lib/test/test_float.py:1409:37  	ffffffffffffeap         	U   	identical(fromHex('0x0.ffffffffffffeap-1022'), MIN-TINY)"
  - "Lib/test/test_float.py:1410:37  	ffffffffffffecp         	U   	identical(fromHex('0x0.ffffffffffffecp-1022'), MIN-TINY)"
  - "Lib/test/test_float.py:1411:37  	ffffffffffffeep         	U   	identical(fromHex('0x0.ffffffffffffeep-1022'), MIN-TINY)"
  - "Lib/test/test_float.py:1417:37  	fffffffffffffap         	U   	identical(fromHex('0x0.fffffffffffffap-1022'), MIN)"
  - "Lib/test/test_float.py:1418:37  	fffffffffffffcp         	U   	identical(fromHex('0x0.fffffffffffffcp-1022'), MIN)"
  - "Lib/test/test_float.py:1419:37  	fffffffffffffep         	U   	identical(fromHex('0x0.fffffffffffffep-1022'), MIN)"
  - "Lib/test/test_float.py:1446:37  	fffffffffffffbp         	U   	identical(fromHex('0x0.fffffffffffffbp0'), 1.0-EPS/2)"
  - "Lib/test/test_float.py:1448:37  	fffffffffffffdp         	U   	identical(fromHex('0x0.fffffffffffffdp0'), 1.0)"
  - "Lib/test/test_float.py:1459:51  	ffffffffffffffffffffp   	U   	fromHex('0x1.00000000000007ffffffffffffffffffffp0'),"
  - "Lib/test/test_fnmatch.py:93:9       	normsep 	U   	normsep = os.path.normcase("
  - "Lib/test/test_fnmatch.py:103:9      	tescases	U   	tescases = string.ascii_lowercase"
  - "Lib/test/test_fnmatch.py:135:40     	bcdxyz  	U   	c, '[b-dx-z]', c in 'bcdxyz')"
  - "Lib/test/test_fnmatch.py:260:9      	fatre   	U   	fatre = \"|\".join([r1, r2,"
  - "Lib/test/test_fnmatch.py:261:42     	abaccad 	U   	assertTrue(re.match(fatre, 'abaccad'))"
  - "Lib/test/test_fnmatch.py:262:42     	abxbcab 	U   	assertTrue(re.match(fatre, 'abxbcab'))"
  - "Lib/test/test_fnmatch.py:263:42     	cbabcaxc	U   	assertTrue(re.match(fatre, 'cbabcaxc'))"
  - "Lib/test/test_fnmatch.py:264:43     	dabccbad	U   	assertFalse(re.match(fatre, 'dabccbad'))"
  - "Lib/test/test_format.py:14:5    	testformat  	U   	def testformat(formatstr, args, output"
  - "Lib/test/test_format.py:14:58   	overflowok  	U   	output=None, limit=None, overflowok=False):"
  - "Lib/test/test_format.py:49:5    	testcommon  	U   	def testcommon(formatstr, args, output"
  - "Lib/test/test_format.py:73:42   	excmsg      	U   	formatstr, args, exception, excmsg):"
  - "Lib/test/test_format.py:99:27   	bytearrays  	U   	# str, bytes, and bytearrays (integer, float, oct"
  - "Lib/test/test_fractions.py:350:17   	Guaratees       	U   	def testBoolGuarateesBoolReturn(self):"
  - "Lib/test/test_fractions.py:667:13   	Stringification 	U   	def testStringification(self):"
  - "Lib/test/test_fractions.py:677:9    	hmod            	U   	hmod = sys.hash_info.modulus"
  - "Lib/test/test_fractions.py:678:9    	hinf            	U   	hinf = sys.hash_info.inf"
  - "Lib/test/test_fstring.py:117:40     	formattedvalues 	U   	line_numbers_multiple_formattedvalues(self):"
  - "Lib/test/test_fstring.py:539:53     	defghi          	U   	f'## {x}ghi', 'abc## defghi')"
  - "Lib/test/test_fstring.py:541:56     	abcdefghidef    	U   	x}' 'gh' f'i{x:4}', 'abcdefghidef ')"
  - "Lib/test/test_fstring.py:883:41     	Xabc            	U   	assertEqual(f'{x}X{y}', '98Xabc')"
  - "Lib/test/test_fstring.py:886:43     	Yabc            	U   	assertEqual(f'X{x}Y{y}', 'X98Yabc')"
  - "Lib/test/test_fstring.py:906:43     	foofoo          	U   	assertEqual(f('foo', 10), 'x=foofoo ')"
  - "Lib/test/test_fstring.py:1275:13    	oldx            	U   	oldx = x"
  - "Lib/test/test_fstring.py:1311:11    	patchcheck      	U   	# patchcheck doesn't like these tabs"
  - "Lib/test/test_ftplib.py:31:30   	debugbuild  	U   	getattr(sys, '_rustpython_debugbuild', False):"
  - "Lib/test/test_ftplib.py:47:29   	cpmel       	U   	\"type=dir;perm=cpmel;unique==keVO1+7G4; promiscuou"
  - "Lib/test/test_ftplib.py:154:13  	eprt        	U   	def cmd_eprt(self, arg):"
  - "Lib/test/test_ftplib.py:161:13  	epsv        	U   	def cmd_epsv(self, arg):"
  - "Lib/test/test_ftplib.py:186:13  	rnfr        	U   	def cmd_rnfr(self, arg):"
  - "Lib/test/test_ftplib.py:189:13  	rnto        	U   	def cmd_rnto(self, arg):"
  - "Lib/test/test_ftplib.py:217:13  	abor        	U   	def cmd_abor(self, arg):"
  - "Lib/test/test_ftplib.py:255:13  	setlongretr 	U   	def cmd_setlongretr(self, arg):"
  - "Lib/test/test_ftplib.py:314:55  	pycacert    	U   	dirname(__file__), \"pycacert.pem\")"
  - "Lib/test/test_ftplib.py:450:17  	pbsz        	U   	def cmd_pbsz(self, line):"
  - "Lib/test/test_ftplib.py:626:11  	stowarnings 	U   	# stowarnings_helper.check_warningsary"
  - "Lib/test/test_ftplib.py:626:36  	warningsary 	U   	stowarnings_helper.check_warningsary file, not a text file"
  - "Lib/test/test_ftplib.py:906:55  	cleartext   	U   	connection must be in cleartext again"
  - "Lib/test/test_functools.py:82:50    	callability         	U   	arg not checked for callability')"
  - "Lib/test/test_functools.py:405:25   	unwritable          	U   	def test_attributes_unwritable(self):"
  - "Lib/test/test_functools.py:430:14   	keystr              	U   	def test_keystr_replaces_value(self"
  - "Lib/test/test_functools.py:1366:36  	reentrancy          	U   	protect against weird reentrancy bugs and to improve"
  - "Lib/test/test_functools.py:1408:39  	abcdefghijklmn      	U   	self.assertEqual(len('abcdefghijklmn'[:i]), i)"
  - "Lib/test/test_functools.py:1536:15  	zomg                	U   	def f(zomg: 'zomg_annotation')"
  - "Lib/test/test_functools.py:1564:23  	getswitchinterval   	U   	orig_si = sys.getswitchinterval()"
  - "Lib/test/test_functools.py:1690:66  	staticmeth          	U   	cached_meth, cls.cached_staticmeth:"
  - "Lib/test/test_functools.py:1744:11  	LRUC                	U   	class TestLRUC(TestLRU, unittest.TestCase"
  - "Lib/test/test_future.py:43:14   	badfuture   	U   	def test_badfuture3(self):"
  - "Lib/test/test_future.py:112:14  	parserhack  	U   	def test_parserhack(self):"
  - "Lib/test/test_future.py:261:67  	verygood    	U   	die_hard, **{'3.6': verygood}}\")"
  - "Lib/test/test_future.py:263:58  	gilectomy   	U   	8', '3.9', '4.0' if gilectomy else '3.10'}\")"
  - "Lib/test/test_future.py:365:54  	infxxx      	U   	tationEqual(\"('inf', 1e1000, 'infxxx', 1e1000j)\", expected"
  - "Lib/test/test_generators.py:625:13  	yrange          	U   	>>> def yrange(n):"
  - "Lib/test/test_generators.py:653:13  	zrange          	U   	>>> def zrange(n):"
  - "Lib/test/test_generators.py:775:24  	inorder         	U   	... return inorder(self)"
  - "Lib/test/test_generators.py:856:9   	gcomb           	U   	>>> def gcomb(x, k):"
  - "Lib/test/test_generators.py:943:62  	Eppstein        	U   	c.l.py, due to David Eppstein."
  - "Lib/test/test_generators.py:1024:9  	firstn          	U   	>>> def firstn(g, n):"
  - "Lib/test/test_generators.py:1027:9  	intsfrom        	U   	>>> def intsfrom(i):"
  - "Lib/test/test_generators.py:1131:11 	Gack            	U   	... # Gack: m235 below actually"
  - "Lib/test/test_generators.py:1152:4  	olde            	U   	Ye olde Fibonacci generator"
  - "Lib/test/test_generators.py:1154:9  	fibgen          	U   	>>> def fibgen(a, b):"
  - "Lib/test/test_generators.py:1235:14 	isum            	U   	... def _isum(g, h):"
  - "Lib/test/test_generators.py:1246:9  	realfib         	U   	... realfib = _fib()"
  - "Lib/test/test_generators.py:1576:9  	rangen          	U   	rangen = range(n)"
  - "Lib/test/test_generators.py:1589:14 	rowgenerators   	U   	self.rowgenerators = []"
  - "Lib/test/test_generators.py:1591:13 	rowuses         	U   	rowuses = [(1 << j) |"
  - "Lib/test/test_generators.py:1596:17 	rowgen          	U   	def rowgen(rowuses=rowuses):"
  - "Lib/test/test_generators.py:1612:9  	printsolution   	U   	def printsolution(self, row2col):"
  - "Lib/test/test_generators.py:1632:31 	succs           	U   	solve() will set up succs[i] to be a list of square"
  - "Lib/test/test_generators.py:1675:18 	lastij          	U   	self.lastij = corner"
  - "Lib/test/test_generators.py:1731:26 	vmid            	U   	def advance_hard(vmid=(m-1)/2.0, hmid=(n-"
  - "Lib/test/test_generators.py:1731:42 	hmid            	U   	hard(vmid=(m-1)/2.0, hmid=(n-1)/2.0, len=len)"
  - "Lib/test/test_generators.py:1762:18 	squaregenerators	U   	self.squaregenerators = [first]"
  - "Lib/test/test_generators.py:1839:9  	gencopy         	U   	>>> def gencopy(iterator):"
  - "Lib/test/test_generators.py:1967:23 	referencable    	U   	Generators are weakly referencable:"
  - "Lib/test/test_generators.py:2057:3  	Pegen           	U   	# Pegen does not produce this"
  - "Lib/test/test_generators.py:2316:34 	uncleanable     	U   	trigger if it starts being uncleanable again."
  - "Lib/test/test_generators.py:2331:60 	teedataobject   	U   	of the tee-internal teedataobject,"
  - "Lib/test/test_generators.py:2356:26 	doublecheck     	U   	printing warnings and to doublecheck that we actually tested"
  - "Lib/test/test_genericalias.py:94:13     	tname   	U   	tname = t.__name__"
  - "Lib/test/test_genericpath.py:29:30      	pathmodule  	U   	getattr(self.pathmodule, attr)()"
  - "Lib/test/test_genericpath.py:40:34      	swenson     	U   	commonprefix([\"/home/swenson/spam\", \"/home/swen/spam"
  - "Lib/test/test_genericpath.py:40:56      	swen        	U   	swenson/spam\", \"/home/swen/spam\"]),"
  - "Lib/test/test_genericpath.py:89:9       	testlist    	U   	testlist = ['', 'abc', 'Xbcd"
  - "Lib/test/test_genericpath.py:89:33      	Xbcd        	U   	testlist = ['', 'abc', 'Xbcd', 'Xb', 'XY', 'abcd"
  - "Lib/test/test_genericpath.py:131:9      	bfilename   	U   	bfilename = os.fsencode(filename"
  - "Lib/test/test_genericpath.py:355:32     	udfffabcds  	U   	func('/tmp\\udfffabcds')"
  - "Lib/test/test_genericpath.py:357:35     	abcds       	U   	func('/tmp\\x00abcds')"
  - "Lib/test/test_genericpath.py:417:56     	barbar      	U   	expandvars(\"${foo}bar\"), \"barbar\")"
  - "Lib/test/test_genericpath.py:451:35     	sbar        	U   	check('${spam}bar', '%sbar' % nonascii)"
  - "Lib/test/test_genericpath.py:493:41     	cwds        	U   	ASCII and non-ASCII cwds."
  - "Lib/test/test_genericpath.py:498:9      	unicwd      	U   	unicwd = '\\xe7w\\xf0'"
  - "Lib/test/test_getopt.py:2:9     	Goodger     	U   	# David Goodger <dgoodger@bigfoot.com"
  - "Lib/test/test_getopt.py:141:14  	libref      	U   	def test_libref_examples(self):"
  - "Lib/test/test_getopt.py:143:55  	libgetopt   	U   	Reference: Doc/lib/libgetopt.tex"
  - "Lib/test/test_getopt.py:149:28  	cfoo        	U   	>>> args = '-a -b -cfoo -d bar a1 a2'.split"
  - "Lib/test/test_getopt.py:152:13  	optlist     	U   	>>> optlist, args = getopt.getopt"
  - "Lib/test/test_getpass.py:40:51      	getpw   	U   	patch('pwd.getpwuid') as getpw:"
  - "Lib/test/test_getpass.py:50:14      	Rawinput	U   	class GetpassRawinputTest(unittest.TestCase"
  - "Lib/test/test_glob.py:60:9      	bres    	U   	bres = [os.fsencode(x) for"
  - "Lib/test/test_glob.py:75:13     	bpattern	U   	bpattern = os.fsencode(pattern"
  - "Lib/test/test_glob.py:82:9      	btempdir	U   	btempdir = os.fsencode(self.tempdir"
  - "Lib/test/test_glob.py:100:30    	noorder 	U   	assertSequencesEqual_noorder(self, l1, l2):"
  - "Lib/test/test_glob.py:338:14    	selflink	U   	def test_selflink(self):"
  - "Lib/test/test_grammar.py:267:5      	annot           	U   	var_annot_global: int # a global"
  - "Lib/test/test_grammar.py:351:13     	fbad            	U   	def fbad():"
  - "Lib/test/test_grammar.py:376:19     	Cbad            	U   	class Cbad2(C):"
  - "Lib/test/test_grammar.py:429:11     	nonloc          	U   	# nonloc_ns = {}"
  - "Lib/test/test_grammar.py:478:30     	typedargslist   	U   	## parameters: '(' [typedargslist] ')'"
  - "Lib/test/test_grammar.py:479:30     	tfpdef          	U   	## typedargslist: ((tfpdef ['=' test] ',')*"
  - "Lib/test/test_grammar.py:483:13     	varargslist     	U   	### varargslist: ((vfpdef ['=' test"
  - "Lib/test/test_grammar.py:483:28     	vfpdef          	U   	### varargslist: ((vfpdef ['=' test] ',')*"
  - "Lib/test/test_grammar.py:612:33     	tokwarg         	U   	key2dict(1,2,k2=100,tokwarg1=100,tokwarg2=200)"
  - "Lib/test/test_grammar.py:682:43     	opargs          	U   	closures with a variety of opargs"
  - "Lib/test/test_grammar.py:706:14     	lambdef         	U   	def test_lambdef(self):"
  - "Lib/test/test_grammar.py:757:12     	exprlist        	U   	# (exprlist '=')* exprlist"
  - "Lib/test/test_grammar.py:1076:35    	subexpression   	U   	Requires parentheses as subexpression"
  - "Lib/test/test_grammar.py:1166:17    	Truestmt        	U   	# assertTruestmt: 'assert' test [','"
  - "Lib/test/test_grammar.py:1495:66    	dictsetmaker    	U   	testlist] ']' | '{' [dictsetmaker] '}' | NAME | NUMBER"
  - "Lib/test/test_grammar.py:1548:14    	dictcomps       	U   	def test_dictcomps(self):"
  - "Lib/test/test_grammar.py:1549:11    	dictorsetmaker  	U   	# dictorsetmaker: ( (test ':' test (comp"
  - "Lib/test/test_grammar.py:1555:14    	listcomps       	U   	def test_listcomps(self):"
  - "Lib/test/test_grammar.py:1559:9     	spcs            	U   	spcs = [\" Apple\", \" Banana"
  - "Lib/test/test_grammar.py:1594:16    	Macdonalds      	U   	(3, \"Macdonalds\")"
  - "Lib/test/test_grammar.py:1603:9     	suppart         	U   	suppart = ["
  - "Lib/test/test_grammar.py:1608:19    	pname           	U   	(sname, pname)"
  - "Lib/test/test_grammar.py:1620:14    	genexps         	U   	def test_genexps(self):"
  - "Lib/test/test_grammar.py:1656:37    	precomputation  	U   	for outmost iterable precomputation"
  - "Lib/test/test_grammar.py:1696:14    	checkeval       	U   	def _checkeval(msg, ret):"
  - "Lib/test/test_grammar.py:1750:23    	someobj         	U   	await someobj()"
  - "Lib/test/test_grp.py:8:36       	getgrall	U   	skipUnless(hasattr(grp, 'getgrall'), 'Does not have getgrall"
  - "Lib/test/test_grp.py:58:9       	bynames 	U   	bynames = {}"
  - "Lib/test/test_grp.py:59:9       	bygids  	U   	bygids = {}"
  - "Lib/test/test_grp.py:66:9       	allnames	U   	allnames = list(bynames.keys"
  - "Lib/test/test_grp.py:67:9       	namei   	U   	namei = 0"
  - "Lib/test/test_grp.py:68:9       	fakename	U   	fakename = allnames[namei]"
  - "Lib/test/test_grp.py:92:9       	fakegid 	U   	fakegid = 4127"
  - "Lib/test/test_gzip.py:22:7      	flushmode       	U   	int flushmode = Z_FINISH;"
  - "Lib/test/test_gzip.py:27:16     	zlibmodule      	U   	data2 = b\"\"\"/* zlibmodule.c -- gzip-compatible"
  - "Lib/test/test_gzip.py:33:49     	gzdir           	U   	os_helper.TESTFN) + '-gzdir'"
  - "Lib/test/test_gzip.py:199:52    	zgfile          	U   	self.filename, \"rb\") as zgfile:"
  - "Lib/test/test_gzip.py:202:17    	ztxt            	U   	ztxt = zgfile.read(8192)"
  - "Lib/test/test_gzip.py:300:14    	paddedfile      	U   	def test_paddedfile_getattr(self):"
  - "Lib/test/test_gzip.py:333:17    	expectedname    	U   	expectedname = self.filename.encode"
  - "Lib/test/test_gzip.py:334:17    	expectedflags   	U   	expectedflags = b'\\x08' # only the"
  - "Lib/test/test_gzip.py:539:17    	datac           	U   	datac = gzip.compress(data"
  - "Lib/test/test_gzip.py:581:9     	gzdata          	U   	gzdata = (b'\\x1f\\x8b\\x08\\x"
  - "Lib/test/test_gzip.py:777:9     	gzipname        	U   	gzipname = os.path.join(TEMPDIR"
  - "Lib/test/test_gzip.py:777:43    	testgzip        	U   	path.join(TEMPDIR, 'testgzip.gz')"
  - "Lib/test/test_gzip.py:784:63    	gunziped        	U   	testgzip\"), \"rb\") as gunziped:"
  - "Lib/test/test_gzip.py:793:67    	thisisatest     	U   	-m', 'gzip', '-d', 'thisisatest.out')"
  - "Lib/test/test_hash.py:16:15     	congruential    	U   	\"\"\"Linear congruential generator\"\"\""
  - "Lib/test/test_hash.py:25:5      	pysiphash       	U   	def pysiphash(uint64):"
  - "Lib/test/test_hash.py:43:17     	internalhash    	U   	def skip_unless_internalhash(test):"
  - "Lib/test/test_hash.py:201:7     	Stringlike      	U   	class StringlikeHashRandomizationTests"
  - "Lib/test/test_hash.py:207:10    	djba            	U   	'djba33x': [ # only used for"
  - "Lib/test/test_hash.py:219:25    	abcdefghijk     	U   	# seed 42, 'abcdefghijk'"
  - "Lib/test/test_hash.py:343:17    	abcdefghabcdefg 	U   	base = \"abcdefghabcdefg\""
  - "Lib/test/test_hashlib.py:51:68      	fips            	U   	openssl_md_meth_names, get_fips_mode"
  - "Lib/test/test_hashlib.py:72:5       	hexstr          	U   	def hexstr(s):"
  - "Lib/test/test_hashlib.py:316:20     	hashopenssl's   	U   	# _hashopenssl's take a size_t"
  - "Lib/test/test_hashlib.py:657:25     	fanout          	U   	constructor(fanout=i)"
  - "Lib/test/test_hashlib.py:707:13     	selftest        	U   	def selftest_seq(length, seed):"
  - "Lib/test/test_hashlib.py:718:13     	outlen          	U   	for outlen in md_len:"
  - "Lib/test/test_hashlib.py:719:17     	inlen           	U   	for inlen in in_len:"
  - "Lib/test/test_hashlib.py:720:17     	indata          	U   	indata = selftest_seq(inlen"
  - "Lib/test/test_hashlib.py:722:17     	unkeyed         	U   	unkeyed = constructor(indata"
  - "Lib/test/test_hashlib.py:936:13     	threadnum       	U   	for threadnum in range(num_threads"
  - "Lib/test/test_hashlib.py:1056:41    	dklen           	U   	password, salt, rounds, dklen = vector"
  - "Lib/test/test_hashlib.py:1145:13    	maxmem          	U   	for maxmem in [-1, None]:"
  - "Lib/test/test_heapq.py:1:4      	Unittests   	U   	\"\"\"Unittests for heapq.\"\"\""
  - "Lib/test/test_heapq.py:93:20    	nbest       	U   	def test_naive_nbest(self):"
  - "Lib/test/test_heapq.py:103:9    	heapiter    	U   	def heapiter(self, heap):"
  - "Lib/test/test_heapq.py:129:25   	pushpop     	U   	def test_nbest_with_pushpop(self):"
  - "Lib/test/test_heapq.py:158:12   	heapop      	U   	# _heapop_max has an optimization"
  - "Lib/test/test_heapq.py:164:14   	heapsort    	U   	def test_heapsort(self):"
  - "Lib/test/test_heapq.py:248:13   	hsort       	U   	def hsort(data, comp):"
  - "Lib/test/test_heapq.py:436:34   	modifiying  	U   	comparison_operator_modifiying_heap(self):"
  - "Lib/test/test_html.py:80:17     	svadilfari              	U   	check('&svadilfari;', '&svadilfari;')"
  - "Lib/test/test_html.py:82:17     	notit                   	U   	check('&notit', '¬it')"
  - "Lib/test/test_html.py:84:17     	notin                   	U   	check('&notin', '¬in')"
  - "Lib/test/test_html.py:97:17     	Eacuteric               	U   	check('&Eacuteric&Eacute;ric&alphacentauri"
  - "Lib/test/test_html.py:97:38     	alphacentauri           	U   	Eacuteric&Eacute;ric&alphacentauri&alpha;centauri',"
  - "Lib/test/test_html.py:98:25     	alphacentauriαcentauri  	U   	'ÉricÉric&alphacentauriαcentauri')"
  - "Lib/test/test_htmlparser.py:16:55   	artefacts   	U   	events so that buffer artefacts don't"
  - "Lib/test/test_htmlparser.py:19:9    	prevtype    	U   	prevtype = None"
  - "Lib/test/test_htmlparser.py:36:23   	startendtag 	U   	self.append((\"startendtag\", tag, attrs))"
  - "Lib/test/test_htmlparser.py:72:21   	Charrefs    	U   	class EventCollectorCharrefs(EventCollector):"
  - "Lib/test/test_htmlparser.py:221:20  	doctypes    	U   	def test_valid_doctypes(self):"
  - "Lib/test/test_htmlparser.py:223:9   	dtds        	U   	dtds = ['HTML', # HTML5"
  - "Lib/test/test_htmlparser.py:230:54  	Frameset    	U   	/W3C//DTD XHTML 1.0 Frameset//EN\" '"
  - "Lib/test/test_htmlparser.py:275:39  	cript       	U   	document.write(\\'<s\\'+\\'cript type=\"text/javascript"
  - "Lib/test/test_htmlparser.py:335:14  	condcoms    	U   	def test_condcoms(self):"
  - "Lib/test/test_htmlparser.py:558:38  	condcom     	U   	<![if !(IE)]>broken condcom<![endif]>'"
  - "Lib/test/test_htmlparser.py:645:40  	apos        	U   	&amp;&gt;&lt;&quot;&apos;'>\","
  - "Lib/test/test_htmlparser.py:653:14  	entityrefs  	U   	def test_entityrefs_in_attributes(self)"
  - "Lib/test/test_htmlparser.py:738:29  	rabota      	U   	\"- <a href=/rabota/><span class=en> software"
  - "Lib/test/test_http_cookiejar.py:111:14  	Mandag          	U   	'Mandag 16. September 1996'"
  - "Lib/test/test_http_cookiejar.py:407:7   	unverifiability 	U   	# unverifiability / third-party blocking"
  - "Lib/test/test_http_cookiejar.py:423:47  	Tschalar        	U   	eculiarities list from Ronald Tschalar."
  - "Lib/test/test_http_cookiejar.py:545:65  	Argh            	U   	DoMain=.acme.com; port; blArgh=\"feep\"')"
  - "Lib/test/test_http_cookiejar.py:545:71  	feep            	U   	acme.com; port; blArgh=\"feep\"')"
  - "Lib/test/test_http_cookiejar.py:547:58  	nini            	U   	www.acme.com:80/\", 'nini=ni')"
  - "Lib/test/test_http_cookiejar.py:551:55  	fortytwo        	U   	http://www.acme.com/', 'fortytwo=')"
  - "Lib/test/test_http_cookiejar.py:552:56  	unladenswallow  	U   	//www.acme.com/', '=unladenswallow')"
  - "Lib/test/test_http_cookiejar.py:553:55  	holyhandgrenade 	U   	http://www.acme.com/', 'holyhandgrenade')"
  - "Lib/test/test_http_cookiejar.py:562:55  	blargh          	U   	has_nonstandard_attr(\"blargh\"))"
  - "Lib/test/test_http_cookiejar.py:641:58  	whum            	U   	www.rhubarb.net/\", 'whum=\"fizz\"')"
  - "Lib/test/test_http_cookiejar.py:724:34  	Dfoo            	U   	\"/\\175foo/bar\", \"/%7Dfoo/bar\"),"
  - "Lib/test/test_http_cookiejar.py:739:34  	rhaponticum     	U   	\"/rheum/rhaponticum;foo=bar;sing=song\")"
  - "Lib/test/test_http_cookiejar.py:762:29  	foobad          	U   	('/foobad/foo', False)]:"
  - "Lib/test/test_http_cookiejar.py:868:60  	problemo        	U   	example.co.uk/\", 'no=problemo')"
  - "Lib/test/test_http_cookiejar.py:870:28  	okey            	U   	'okey=dokey; Domain=.example"
  - "Lib/test/test_http_cookiejar.py:870:33  	dokey           	U   	'okey=dokey; Domain=.example.co"
  - "Lib/test/test_http_cookiejar.py:1094:41 	narf            	U   	Set-Cookie: session=narf; secure; path=/\"]"
  - "Lib/test/test_http_cookiejar.py:1119:54 	foos            	U   	okiePolicy(secure_protocols=[\"foos\"])"
  - "Lib/test/test_http_cookiejar.py:1514:28 	pickitem        	U   	# POST /acme/pickitem HTTP/1.1"
  - "Lib/test/test_http_cookiejar.py:1690:38 	ffft            	U   	'whiz=ffft; domain=\".sol.no\"; port"
  - "Lib/test/test_http_cookiejar.py:1709:34 	unescaping      	U   	LWP has this test, but unescaping allowed path characters"
  - "Lib/test/test_http_cookiejar.py:1776:28 	fooc            	U   	\"fooc=bar; Domain=www.foo"
  - "Lib/test/test_http_cookiejar.py:1891:54 	perlmeister     	U   	Cookie: p1=perm; Domain=.perlmeister.com;\""
  - "Lib/test/test_httplib.py:25:30      	fakehostname    	U   	signed cert file for 'fakehostname'"
  - "Lib/test/test_httplib.py:27:41      	pythontest      	U   	file for self-signed.pythontest.net"
  - "Lib/test/test_httplib.py:28:6       	selfsigned      	U   	CERT_selfsigned_pythontestdotnet = os"
  - "Lib/test/test_httplib.py:28:17      	pythontestdotnet	U   	CERT_selfsigned_pythontestdotnet = os.path.join(here"
  - "Lib/test/test_httplib.py:47:31      	Dumm            	U   	\"X-Dummy: foo\\r\\nX-Dumm2: bar\\r\\n\""
  - "Lib/test/test_httplib.py:53:30      	fileclass       	U   	_init__(self, text, fileclass=io.BytesIO, host=None"
  - "Lib/test/test_httplib.py:155:41     	blahblahblah    	U   	conn.sock = FakeSocket('blahblahblah')"
  - "Lib/test/test_httplib.py:240:33     	tbaz            	U   	conn.putheader('Bar', '\\tbaz\\t')"
  - "Lib/test/test_httplib.py:242:49     	mytoken         	U   	Authorization', 'Bearer mytoken')"
  - "Lib/test/test_httplib.py:286:52     	nval            	U   	OK\\r\\nFirst: val\\r\\n: nval\\r\\nSecond: val\\r\\n\\r"
  - "Lib/test/test_httplib.py:582:22     	readintos       	U   	def test_partial_readintos(self):"
  - "Lib/test/test_httplib.py:901:9      	nexpected       	U   	nexpected = len(expected)"
  - "Lib/test/test_httplib.py:1125:9     	extradata       	U   	extradata = \"extradata\""
  - "Lib/test/test_httplib.py:1310:9     	oldpeek         	U   	oldpeek = resp.fp.peek"
  - "Lib/test/test_httplib.py:1311:13    	mypeek          	U   	def mypeek(n=-1):"
  - "Lib/test/test_httplib.py:1361:9     	readliner       	U   	readliner = Readliner(r)"
  - "Lib/test/test_httplib.py:1361:21    	Readliner       	U   	readliner = Readliner(r)"
  - "Lib/test/test_httplib.py:1710:24    	noverification  	U   	def test_networked_noverification(self):"
  - "Lib/test/test_httplib.py:1757:32    	distros         	U   	# modern Linux distros (Debian Buster, etc"
  - "Lib/test/test_httplib.py:2023:29    	defaultint      	U   	test_getting_header_defaultint(self):"
  - "Lib/test/test_httplib.py:2079:12    	Regresstion     	U   	\"\"\"Regresstion test for https://bugs"
  - "Lib/test/test_httplib.py:2103:21    	debuglog        	U   	def test_tunnel_debuglog(self):"
  - "Lib/test/test_httpservers.py:3:22       	Somerville      	U   	Written by Cody A.W. Somerville <cody-somerville@ubuntu"
  - "Lib/test/test_httpservers.py:4:1        	Josip           	U   	Josip Dzolonga, and Michael"
  - "Lib/test/test_httpservers.py:4:7        	Dzolonga        	U   	Josip Dzolonga, and Michael Otteneder"
  - "Lib/test/test_httpservers.py:4:29       	Otteneder       	U   	Dzolonga, and Michael Otteneder for the 2007/08 GHOP"
  - "Lib/test/test_httpservers.py:111:16     	EXPLAINERROR    	U   	def do_EXPLAINERROR(self):"
  - "Lib/test/test_httpservers.py:121:16     	LATINONEHEADER  	U   	def do_LATINONEHEADER(self):"
  - "Lib/test/test_httpservers.py:123:44     	Dängerous       	U   	header('X-Special', 'Dängerous Mind')"
  - "Lib/test/test_httpservers.py:241:42     	Ärger           	U   	Special-Incoming': 'Ärger mit Unicode'"
  - "Lib/test/test_httpservers.py:338:9      	basetempdir     	U   	basetempdir = tempfile.gettempdir"
  - "Lib/test/test_httpservers.py:344:9      	tempname        	U   	tempname = os.path.join(self"
  - "Lib/test/test_httpservers.py:411:9      	quotedname      	U   	quotedname = urllib.parse.quote"
  - "Lib/test/test_httpservers.py:635:14     	nocgi           	U   	self.nocgi_path = None"
  - "Lib/test/test_httpservers.py:644:15     	pythonexe       	U   	self._pythonexe_symlink = None"
  - "Lib/test/test_httpservers.py:775:60     	nothere         	U   	nocgi.py/../cgi-bin/nothere.sh')"
  - "Lib/test/test_httpservers.py:786:14     	invaliduri      	U   	def test_invaliduri(self):"
  - "Lib/test/test_httpservers.py:816:39     	ffile           	U   	self.request('/cgi-bin%2ffile1.py')"
  - "Lib/test/test_httpservers.py:869:7      	Socketless      	U   	class SocketlessRequestHandler(SimpleHTTPReque"
  - "Lib/test/test_httpservers.py:897:14     	datas           	U   	self.datas = []"
  - "Lib/test/test_httpservers.py:1055:21    	Reseek          	U   	def _readAndReseek(f):"
  - "Lib/test/test_httpservers.py:1264:26    	unspec          	U   	def test_server_test_unspec(self, _):"
  - "Lib/test/test_imp.py:38:28      	autotest            	U   	# via \"import test.autotest\"."
  - "Lib/test/test_imp.py:219:34     	Reinitialising      	U   	state after reversion. Reinitialising the module contents"
  - "Lib/test/test_imp.py:247:15     	testimportmultiple  	U   	m = '_testimportmultiple'"
  - "Lib/test/test_imp.py:293:47     	testmultiphase      	U   	importlib.util.find_spec('_testmultiphase')"
  - "Lib/test/test_imp.py:378:24     	mymod               	U   	with open('mymod.py', 'wb') as fp:"
  - "Lib/test/test_imp.py:457:31     	undecodeable        	U   	\"Need an undecodeable filename\")"
  - "Lib/test/test_imp.py:458:14     	unencodeable        	U   	def test_unencodeable(self):"
  - "Lib/test/test_importlib/abc.py:90:14    	unloadable  	U   	def test_unloadable(self):"
  - "Lib/test/test_importlib/builtin/test_finder.py:18:19    	uncache 	U   	with util.uncache(util.BUILTINS.good_name"
  - "Lib/test/test_importlib/builtin/test_loader.py:52:17    	dssdsdfff   	U   	name = 'dssdsdfff'"
  - "Lib/test/test_importlib/data/example-21.12-py3.6.egg:2:170      	txtu	U   	EGG-INFO/SOURCES.txtu�A"
  - "Lib/test/test_importlib/data/example-21.12-py3.6.egg:4:143      	KIMS	U   	example/__init__.pyKIMS�M���д�R��ԒҢ<�Ԋ�܂�Tu"
  - "Lib/test/test_importlib/extension/test_case_sensitivity.py:13:47    	CASEOK  	U   	oduleCaseSensitivityTest(util.CASEOKTestBase):"
  - "Lib/test/test_importlib/extension/test_case_sensitivity.py:28:18    	caseok  	U   	self.caseok_env_changed(should_exist"
  - "Lib/test/test_importlib/extension/test_finder.py:36:43      	asdfjkl 	U   	assertIsNone(self.find_spec('asdfjkl;'))"
  - "Lib/test/test_importlib/extension/test_loader.py:224:14     	nonmodule   	U   	def test_nonmodule(self):"
  - "Lib/test/test_importlib/extension/test_loader.py:276:28     	zkou        	U   	(self.name + '_zkou\\u0161ka_na\\u010dten"
  - "Lib/test/test_importlib/extension/test_loader.py:276:48     	dten        	U   	zkou\\u0161ka_na\\u010dten\\xed', 'Czech'),"
  - "Lib/test/test_importlib/fixtures.py:213:26  	Haffa   	U   	Author: Eric Haffa-Vee"
  - "Lib/test/test_importlib/import_/test___package__.py:84:59   	fakefake    	U   	spec__': FakeSpec('pkg.fakefake')})"
  - "Lib/test/test_importlib/import_/test___package__.py:89:48   	relimport   	U   	('', globals, {}, ['relimport'], 1)"
  - "Lib/test/test_importlib/import_/test_api.py:51:28   	rparition   	U   	def test_name_requires_rparition(self):"
  - "Lib/test/test_importlib/import_/test_fromlist.py:38:15      	Fromlist	U   	class HandlingFromlist:"
  - "Lib/test/test_importlib/import_/test_relative_imports.py:60:25      	boilerplace 	U   	\"\"\"Abstract out boilerplace for setting up for an"
  - "Lib/test/test_importlib/source/test_finder.py:123:55    	sdfsadsadf  	U   	(mapping['.root'], 'sdfsadsadf')"
  - "Lib/test/test_importlib/source/test_path_hook.py:36:13      	Hooktest	U   	Source_PathHooktest"
  - "Lib/test/test_importlib/stubs.py:6:28       	pyfakefs	U   	Stubbed version of the pyfakefs module"
  - "Lib/test/test_importlib/stubs.py:9:18       	Pyfakefs	U   	def setUpPyfakefs(self):"
  - "Lib/test/test_importlib/test_abc.py:132:27  	splitabc	U   	base = {kind: getattr(splitabc, name)"
  - "Lib/test/test_importlib/test_api.py:173:54  	nevergoingtofindthismodule  	U   	self.init.find_loader('nevergoingtofindthismodule'))"
  - "Lib/test/test_importlib/test_api.py:369:45  	Founderror                  	U   	reload() throws ModuleNotFounderror when reloading"
  - "Lib/test/test_importlib/test_api.py:398:16  	gobledeegook                	U   	key = 'gobledeegook'"
  - "Lib/test/test_importlib/test_api.py:411:16  	gobbledeegook               	U   	key = 'gobbledeegook'"
  - "Lib/test/test_importlib/test_locks.py:33:21     	splitinit       	U   	LOCK_TYPES = {kind: splitinit._bootstrap._ModuleLock"
  - "Lib/test/test_importlib/test_locks.py:47:22     	switchinterval  	U   	self.old_switchinterval = sys.getswitchinterval"
  - "Lib/test/test_importlib/test_locks.py:152:5     	unittets        	U   	unittets.main()"
  - "Lib/test/test_importlib/test_main.py:40:11      	packgae 	U   	# packgae is not installed or"
  - "Lib/test/test_importlib/test_main.py:128:36     	pôrˈtend	U   	write('Description: pôrˈtend')"
  - "Lib/test/test_importlib/test_main.py:230:29     	badactor	U   	self.ep.name = 'badactor'"
  - "Lib/test/test_importlib/test_metadata_api.py:106:28     	altmain     	U   	main = mod:altmain"
  - "Lib/test/test_importlib/test_metadata_api.py:308:33     	versionless 	U   	test_name_normalization_versionless_egg_info(self):"
  - "Lib/test/test_importlib/test_namespace_pkgs.py:44:49    	xxyy	U   	context(path=['/tmp/xxyy/portion1',"
  - "Lib/test/test_importlib/test_open.py:67:23      	namespacedata   	U   	from . import namespacedata01"
  - "Lib/test/test_importlib/test_read.py:49:36      	ziptestdata 	U   	submodule = import_module('ziptestdata.subdirectory')"
  - "Lib/test/test_importlib/test_resource.py:7:15       	zipdata     	U   	from . import zipdata01, zipdata02"
  - "Lib/test/test_importlib/test_resource.py:23:26      	subresource 	U   	def test_is_resource_subresource_directory(self):"
  - "Lib/test/test_importlib/test_resource.py:130:14     	thata       	U   	Test thata zip with two unrelated"
  - "Lib/test/test_importlib/test_resource.py:200:24     	certifi     	U   	# This is what certifi does on import to make"
  - "Lib/test/test_importlib/test_spec.py:425:9      	modrepr     	U   	modrepr = self.bootstrap._module"
  - "Lib/test/test_importlib/test_spec.py:513:14     	pkgloader   	U   	self.pkgloader = TestLoader(self.path"
  - "Lib/test/test_importlib/test_threaded_import.py:177:13  	numtests	U   	numtests = self.check_parallel"
  - "Lib/test/test_importlib/test_threaded_import.py:258:39  	cfimport	U   	'partial', 'cfimport.py')"
  - "Lib/test/test_importlib/test_util.py:630:31     	ishness     	U   	However if the bool-ishness can't be determined"
  - "Lib/test/test_importlib/test_util.py:669:27     	alnum       	U   	# that passes str.alnum()."
  - "Lib/test/test_importlib/test_util.py:729:64     	bazqux      	U   	from_cache, '/foo/bar/bazqux.pyc')"
  - "Lib/test/test_importlib/test_util.py:861:26     	releaselevel	U   	sys.version_info.releaselevel in ('candidate', 'final"
  - "Lib/test/test_importlib/test_windows.py:48:13   	subsubkey   	U   	subsubkey = EnumKey(hkey, 0)"
  - "Lib/test/test_importlib/test_windows.py:50:23   	subkeys     	U   	# no more subkeys"
  - "Lib/test/test_importlib/test_windows.py:92:20   	spamham     	U   	test_module = \"spamham{}\".format(os.getpid"
  - "Lib/test/test_importlib/update-zips.py:35:5     	zfpath  	U   	zfpath = root / f'zipdata{suffix"
  - "Lib/test/test_importlib/update-zips.py:43:10    	datapath	U   	def walk(datapath):"
  - "Lib/test/test_importlib/util.py:119:47  	subfile         	U   	encoding='utf-8') as subfile:"
  - "Lib/test/test_importlib/util.py:125:41  	unmarshalled    	U   	file and returns the unmarshalled code object within."
  - "Lib/test/test_importlib/util.py:136:8   	Uncache         	U   	\"\"\"Uncache a module from sys.modules"
  - "Lib/test/test_importlib/util.py:138:50  	uncaching       	U   	performed to prevent uncaching modules that either"
  - "Lib/test/test_importlib/util.py:179:66  	modfile         	U   	encoding='utf-8') as modfile:"
  - "Lib/test/test_importlib/util.py:458:13  	testingpackage  	U   	name = 'testingpackage'"
  - "Lib/test/test_index.py:6:7      	newstyle    	U   	class newstyle:"
  - "Lib/test/test_index.py:117:9    	seqlen      	U   	seqlen = len(self.seq)"
  - "Lib/test/test_index.py:155:9    	indexobj    	U   	indexobj = lambda x, obj: obj"
  - "Lib/test/test_index.py:158:9    	sliceobj    	U   	sliceobj = lambda x, obj: obj"
  - "Lib/test/test_index.py:166:14   	setdelitem  	U   	def test_setdelitem(self):"
  - "Lib/test/test_index.py:169:24   	cdefghi     	U   	lst = list('ab!cdefghi!j')"
  - "Lib/test/test_index.py:174:39   	Ydefgh      	U   	assertEqual(lst, list('abYdefghXj'))"
  - "Lib/test/test_int.py:128:31     	dnchbnm         	U   	self.assertEqual(int('dnchbnm', 26), 4294967296)"
  - "Lib/test/test_int.py:129:34     	jpdm            	U   	assertEqual(int('b28jpdm', 27), 4294967296)"
  - "Lib/test/test_int.py:130:32     	pfgih           	U   	self.assertEqual(int('8pfgih4', 28), 4294967296)"
  - "Lib/test/test_int.py:131:33     	beigg           	U   	self.assertEqual(int('76beigg', 29), 4294967296)"
  - "Lib/test/test_int.py:132:32     	qmcpqg          	U   	self.assertEqual(int('5qmcpqg', 30), 4294967296)"
  - "Lib/test/test_int.py:135:32     	aokq            	U   	self.assertEqual(int('3aokq94', 33), 4294967296"
  - "Lib/test/test_int.py:136:32     	qhxjli          	U   	self.assertEqual(int('2qhxjli', 34), 4294967296)"
  - "Lib/test/test_int.py:205:31     	dnchbnn         	U   	self.assertEqual(int('dnchbnn', 26), 4294967297)"
  - "Lib/test/test_int.py:206:34     	jpdn            	U   	assertEqual(int('b28jpdn', 27), 4294967297)"
  - "Lib/test/test_int.py:208:33     	beigh           	U   	self.assertEqual(int('76beigh', 29), 4294967297)"
  - "Lib/test/test_int.py:209:32     	qmcpqh          	U   	self.assertEqual(int('5qmcpqh', 30), 4294967297)"
  - "Lib/test/test_int.py:213:32     	qhxjlj          	U   	self.assertEqual(int('2qhxjlj', 34), 4294967297)"
  - "Lib/test/test_int.py:343:14     	intconversion   	U   	def test_intconversion(self):"
  - "Lib/test/test_io.py:4:10    	bufio           	U   	# * test_bufio - tests file buffering"
  - "Lib/test/test_io.py:5:10    	memoryio        	U   	# * test_memoryio - tests BytesIO and"
  - "Lib/test/test_io.py:9:10    	univnewlines    	U   	# * test_univnewlines - tests universal newline"
  - "Lib/test/test_io.py:11:27   	ulargefile      	U   	(only enabled with -ulargefile)"
  - "Lib/test/test_io.py:56:9    	byteslike       	U   	def byteslike(*pos, **kw):"
  - "Lib/test/test_io.py:587:23  	nonsizeable     	U   	def test_readline_nonsizeable(self):"
  - "Lib/test/test_io.py:682:66  	dealloc         	U   	is called by the tp_dealloc"
  - "Lib/test/test_io.py:850:9   	rawio           	U   	rawio = self.MockRawIOWithoutRead"
  - "Lib/test/test_io.py:882:13  	badopener       	U   	def badopener(fname, flags):"
  - "Lib/test/test_io.py:908:14  	nonbuffered     	U   	def test_nonbuffered_textio(self):"
  - "Lib/test/test_io.py:957:52  	rwxa            	U   	os_helper.TESTFN), 'rwxa', encoding=\"utf-8\")"
  - "Lib/test/test_io.py:1199:14 	nonnormalized   	U   	def test_nonnormalized_close_error_on_close"
  - "Lib/test/test_io.py:1732:14 	seekabs         	U   	def _seekabs(bufio):"
  - "Lib/test/test_io.py:1738:14 	seekrel         	U   	def _seekrel(bufio):"
  - "Lib/test/test_io.py:2597:61 	toolon          	U   	False, 'x-----.xyz---.toolon.'),"
  - "Lib/test/test_io.py:2607:11 	abcdefghijabcde 	U   	'abcdefghijabcde.' +"
  - "Lib/test/test_io.py:2835:22 	xffdef          	U   	t.write(\"abc\\xffdef\\n\")"
  - "Lib/test/test_io.py:2847:70 	nonl            	U   	\"os9\\r\", \"last\\n\", \"nonl\" ]"
  - "Lib/test/test_io.py:2853:57 	nnonl           	U   	nwindows\\r\\n\", \"os9\\rlast\\nnonl\" ] ],"
  - "Lib/test/test_io.py:2905:9  	testdict        	U   	testdict = {"
  - "Lib/test/test_io.py:3007:9  	wlines          	U   	wlines = []"
  - "Lib/test/test_io.py:3016:9  	rlines          	U   	rlines = []"
  - "Lib/test/test_io.py:3307:45 	aaaxxx          	U   	assertEqual(f.read(), 'aaaxxx'.encode(charset))"
  - "Lib/test/test_io.py:3324:45 	bbbzzz          	U   	assertEqual(f.read(), 'bbbzzz'.encode(charset))"
  - "Lib/test/test_io.py:3449:43 	efghi           	U   	assertEqual(txt.readline(), 'efghi\\n')"
  - "Lib/test/test_io.py:3578:9  	iomod           	U   	iomod = self.io.__name__"
  - "Lib/test/test_io.py:3616:13 	Memview         	U   	r = MemviewBytesIO(b'Just some random"
  - "Lib/test/test_io.py:3653:32 	fromascii       	U   	test_reconfigure_write_fromascii(self):"
  - "Lib/test/test_io.py:3654:32 	encodefunc      	U   	ascii has a specific encodefunc in the C implementation"
  - "Lib/test/test_io.py:3944:14 	rwpair          	U   	def test_rwpair_cleared_before_textio"
  - "Lib/test/test_io.py:4069:50 	nabcabc         	U   	join(result), \"abc\\n\\nabcabc\\nabcabc\")"
  - "Lib/test/test_io.py:4262:38 	abcmodule       	U   	abc_inheritance(self, abcmodule):"
  - "Lib/test/test_io.py:4351:14 	nonblock        	U   	def test_nonblock_pipe_write_bigbuf(self"
  - "Lib/test/test_io.py:4351:34 	bigbuf          	U   	nonblock_pipe_write_bigbuf(self):"
  - "Lib/test/test_io.py:4356:34 	smallbuf        	U   	nonblock_pipe_write_smallbuf(self):"
  - "Lib/test/test_io.py:4503:14 	openwrapper     	U   	def test_openwrapper(self):"
  - "Lib/test/test_io.py:4580:14 	oldalrm         	U   	self.oldalrm = signal.signal(signal"
  - "Lib/test/test_io.py:4677:30 	reentrantly     	U   	# Will be called reentrantly from the same thread"
  - "Lib/test/test_ioctl.py:18:5     	rpgrp   	U   	rpgrp = struct.unpack(\"i\""
  - "Lib/test/test_ioctl.py:19:25    	getpgrp 	U   	if rpgrp not in (os.getpgrp(), os.getsid(0)):"
  - "Lib/test/test_ioctl.py:41:9     	intsize 	U   	intsize = buf.itemsize"
  - "Lib/test/test_ioctl.py:77:21    	winsz   	U   	set_winsz_opcode_maybe_neg = termios"
  - "Lib/test/test_ipaddress.py:649:11   	containee       	U   	# containee left of container"
  - "Lib/test/test_ipaddress.py:878:7    	intf            	U   	v4intf = ipaddress.IPv4Interface"
  - "Lib/test/test_ipaddress.py:1055:7   	Ipaddr          	U   	class IpaddrUnitTest(unittest.TestCase"
  - "Lib/test/test_ipaddress.py:1380:16  	Prefixlen       	U   	def testGetPrefixlen(self):"
  - "Lib/test/test_ipaddress.py:1385:16  	Supernet        	U   	def testGetSupernet(self):"
  - "Lib/test/test_ipaddress.py:1489:18  	Subnetting      	U   	def testFancySubnetting(self):"
  - "Lib/test/test_ipaddress.py:1550:9   	ipsv            	U   	ipsv6 = [str(x) for x in"
  - "Lib/test/test_ipaddress.py:1815:39  	supernet'ed     	U   	that two addresses are supernet'ed properly"
  - "Lib/test/test_ipaddress.py:1845:15  	toejam          	U   	# the toejam test"
  - "Lib/test/test_ipaddress.py:1872:10  	ipnet           	U   	#ipnet = ipaddress.ip_network"
  - "Lib/test/test_ipaddress.py:2286:55  	fdff            	U   	ipaddress.ip_network('fdff::').is_multicast)"
  - "Lib/test/test_ipaddress.py:2288:54  	fecf            	U   	ipaddress.ip_network('fecf::').is_site_local)"
  - "Lib/test/test_ipaddress.py:2298:55  	fbff            	U   	ipaddress.ip_network('fbff:ffff::').is_private"
  - "Lib/test/test_ipaddress.py:2303:18  	febf            	U   	'febf:ffff::').is_link_local"
  - "Lib/test/test_ipaddress.py:2587:9   	testsixtofour   	U   	def testsixtofour(self):"
  - "Lib/test/test_ipaddress.py:2588:9   	sixtofouraddr   	U   	sixtofouraddr = ipaddress.ip_address"
  - "Lib/test/test_isinstance.py:29:17   	getclass    	U   	def getclass(self):"
  - "Lib/test/test_isinstance.py:35:17   	getbases    	U   	def getbases(self):"
  - "Lib/test/test_isinstance.py:271:47  	blowstack   	U   	assertRaises(RecursionError, blowstack, issubclass, str, str"
  - "Lib/test/test_iter.py:137:19    	idempotency 	U   	def test_iter_idempotency(self):"
  - "Lib/test/test_iter.py:485:22    	itty        	U   	f.write(\"itty-bitty line\\n\")"
  - "Lib/test/test_iter.py:596:13    	lzip        	U   	def lzip(*args):"
  - "Lib/test/test_iter.py:760:13    	fiter       	U   	fiter = iter(f)"
  - "Lib/test/test_iter.py:772:9     	iclass      	U   	iclass = IteratingSequenceClass"
  - "Lib/test/test_iter.py:913:14    	sinkstate   	U   	def test_sinkstate_list(self):"
  - "Lib/test/test_iterlen.py:66:27      	deques  	U   	# objects such as deques, sets, and dictionaries"
  - "Lib/test/test_itertools.py:23:5     	onearg              	U   	def onearg(x):"
  - "Lib/test/test_itertools.py:27:5     	errfunc             	U   	def errfunc(*args):"
  - "Lib/test/test_itertools.py:44:5     	tupleize            	U   	def tupleize(*args):"
  - "Lib/test/test_itertools.py:47:5     	irange              	U   	def irange(n):"
  - "Lib/test/test_itertools.py:79:1     	picklecopiers       	U   	picklecopiers = [lambda s, proto=proto"
  - "Lib/test/test_itertools.py:84:9     	pickletest          	U   	def pickletest(self, protocol, it,"
  - "Lib/test/test_itertools.py:185:13   	oper                	U   	for oper in [copy.deepcopy]"
  - "Lib/test/test_itertools.py:189:52   	bcdef               	U   	list(oper(it)), list('bcdef'))"
  - "Lib/test/test_itertools.py:346:13   	numcombs            	U   	def numcombs(n, r):"
  - "Lib/test/test_itertools.py:368:21   	noruns              	U   	noruns = [k for k,v in groupby"
  - "Lib/test/test_itertools.py:493:102  	dups                	U   	perm: prods with no dups"
  - "Lib/test/test_itertools.py:495:89   	cwrs                	U   	)==r]) # comb: cwrs without dups"
  - "Lib/test/test_itertools.py:622:96   	lilke               	U   	do show float values lilke 1.0"
  - "Lib/test/test_itertools.py:642:56   	abcabcabca          	U   	cycle('abc')), list('abcabcabca'))"
  - "Lib/test/test_itertools.py:653:57   	bcabcabcab          	U   	copy.copy(c)), list('bcabcabcab'))"
  - "Lib/test/test_itertools.py:660:36   	cabcabcabc          	U   	list('cabcabcabc'))"
  - "Lib/test/test_itertools.py:673:49   	cdeabcdeabcdeabcdeab	U   	ssertEqual(take(20, d), list('cdeabcdeabcdeabcdeab'))"
  - "Lib/test/test_itertools.py:692:20   	defg                	U   	c = cycle('defg')"
  - "Lib/test/test_itertools.py:694:45   	defgabcdefgabcdefgab	U   	ssertEqual(take(20, c), list('defgabcdefgabcdefgab'))"
  - "Lib/test/test_itertools.py:774:9    	expectedkeys        	U   	expectedkeys = set([r[0] for r in"
  - "Lib/test/test_itertools.py:820:28   	keyp                	U   	def gulp(iterable, keyp=None, func=list):"
  - "Lib/test/test_itertools.py:936:14   	ziplongest          	U   	def test_ziplongest(self):"
  - "Lib/test/test_itertools.py:988:56   	defgh               	U   	zip_longest(\"abc\", \"defgh\"))"
  - "Lib/test/test_itertools.py:1265:19  	tgtargs             	U   	for args, tgtargs in [ # Stop when seqn"
  - "Lib/test/test_itertools.py:1461:9   	tnew                	U   	tnew = type(t1)"
  - "Lib/test/test_itertools.py:1760:14  	stapmap             	U   	def test_stapmap(self):"
  - "Lib/test/test_itertools.py:1776:13  	nexti               	U   	nexti = next(it)"
  - "Lib/test/test_itertools.py:1812:9   	makecycle           	U   	def makecycle(self, iterator, container"
  - "Lib/test/test_itertools.py:2032:17  	tgtlen              	U   	tgtlen = len(s) * 3"
  - "Lib/test/test_itertools.py:2174:21  	Rigo's              	U   	# Fix Armin Rigo's successful efforts to"
  - "Lib/test/test_itertools.py:2176:13  	mutatingtuple       	U   	def mutatingtuple(tuple1, f, tuple2):"
  - "Lib/test/test_itertools.py:2316:65  	libitertools        	U   	the library reference: libitertools.tex"
  - "Lib/test/test_itertools.py:2320:9   	checknum            	U   	>>> for checknum, amount in zip(count"
  - "Lib/test/test_itertools.py:2335:5   	reportlines         	U   	>>> reportlines = ['EuroPython', 'Roster"
  - "Lib/test/test_itertools.py:2335:102 	samuele             	U   	'', 'walter', '', 'samuele']"
  - "Lib/test/test_itertools.py:2343:1   	Samuele             	U   	Samuele"
  - "Lib/test/test_itertools.py:2413:9   	ncycles             	U   	>>> def ncycles(iterable, n):"
  - "Lib/test/test_itertools.py:2417:9   	dotproduct          	U   	>>> def dotproduct(vec1, vec2):"
  - "Lib/test/test_itertools.py:2423:9   	repeatfunc          	U   	>>> def repeatfunc(func, times=None, *args"
  - "Lib/test/test_itertools.py:2446:9   	triplewise          	U   	>>> def triplewise(iterable):"
  - "Lib/test/test_itertools.py:2465:37  	Sakkis              	U   	Recipe credited to George Sakkis"
  - "Lib/test/test_itertools.py:2467:9   	nexts               	U   	... nexts = cycle(iter(it).__next"
  - "Lib/test/test_itertools.py:2533:16  	justseen            	U   	>>> def unique_justseen(iterable, key=None)"
  - "Lib/test/test_json/__init__.py:13:1     	cjson   	U   	cjson = import_helper.import"
  - "Lib/test/test_json/__init__.py:14:1     	pyjson  	U   	pyjson = import_helper.import"
  - "Lib/test/test_json/test_dump.py:25:21   	truefalse   	U   	def test_encode_truefalse(self):"
  - "Lib/test/test_json/test_encode_basestring_ascii.py:7:30     	ufcde       	U   	\"\\ucafe\\ubabe\\uab98\\ufcde\\ubcda\\uef4a\\x08\\x0c"
  - "Lib/test/test_json/test_encode_basestring_ascii.py:7:36     	ubcda       	U   	ucafe\\ubabe\\uab98\\ufcde\\ubcda\\uef4a\\x08\\x0c\\n\\r\\t"
  - "Lib/test/test_json/test_encode_basestring_ascii.py:8:26     	ucdef       	U   	'\\u0123\\u4567\\u89ab\\ucdef\\uabcd\\uef4a', '\"\\\\u"
  - "Lib/test/test_json/test_encode_basestring_ascii.py:20:17    	Basestring  	U   	class TestEncodeBasestringAscii:"
  - "Lib/test/test_json/test_enum.py:29:7    	Wierd   	U   	class WierdNum(float, Enum):"
  - "Lib/test/test_json/test_fail.py:200:14  	linecol 	U   	def test_linecol(self):"
  - "Lib/test/test_json/test_indent.py:8:16      	blorpie     	U   	h = [['blorpie'], ['whoops'], [],"
  - "Lib/test/test_json/test_indent.py:8:46      	shtaeou     	U   	['whoops'], [], 'd-shtaeou', 'd-nthiouh', 'i-vhbjkhnth"
  - "Lib/test/test_json/test_indent.py:8:59      	nthiouh     	U   	[], 'd-shtaeou', 'd-nthiouh', 'i-vhbjkhnth',"
  - "Lib/test/test_json/test_indent.py:8:72      	vhbjkhnth   	U   	shtaeou', 'd-nthiouh', 'i-vhbjkhnth',"
  - "Lib/test/test_json/test_indent.py:9:47      	morefield   	U   	, {'field': 'yes', 'morefield': False} ]"
  - "Lib/test/test_json/test_pass1.py:28:19      	abcdefghijklmnopqrstuvwyz   	U   	\"alpha\": \"abcdefghijklmnopqrstuvwyz\","
  - "Lib/test/test_json/test_pass1.py:33:37      	CDEF                        	U   	\\u0123\\u4567\\u89AB\\uCDEF\\uabcd\\uef4A\","
  - "Lib/test/test_json/test_pass1.py:48:10      	jsontext                    	U   	\"jsontext\": \"{\\\"object with 1"
  - "Lib/test/test_json/test_pass1.py:50:36      	FCDE                        	U   	\\uCAFE\\uBABE\\uAB98\\uFCDE\\ubcda\\uef4A\\b\\f\\n\\r"
  - "Lib/test/test_json/test_recursion.py:10:14      	listrecursion   	U   	def test_listrecursion(self):"
  - "Lib/test/test_json/test_recursion.py:33:14      	dictrecursion   	U   	def test_dictrecursion(self):"
  - "Lib/test/test_json/test_recursion.py:47:14      	defaultrecursion	U   	def test_defaultrecursion(self):"
  - "Lib/test/test_json/test_scanstring.py:127:24    	uzdd	U   	'\"\\\\ud834\\\\uzdd2\"',"
  - "Lib/test/test_json/test_scanstring.py:128:24    	udzd	U   	'\"\\\\ud834\\\\udzd2\"',"
  - "Lib/test/test_json/test_scanstring.py:129:24    	uddz	U   	'\"\\\\ud834\\\\uddz2\"',"
  - "Lib/test/test_json/test_speedups.py:87:14   	unsortable  	U   	def test_unsortable_keys(self):"
  - "Lib/test/test_json/test_tool.py:66:5    	jsonlines   	U   	jsonlines_raw = textwrap.dedent"
  - "Lib/test/test_json/test_unicode.py:79:24    	codepoint   	U   	# allow single codepoint JSON documents which"
  - "Lib/test/test_keyword.py:18:9       	oldlist 	U   	oldlist = keyword.kwlist"
  - "Lib/test/test_keywordonlyarg.py:3:15    	Jiwon       	U   	__author__ = \"Jiwon Seo\""
  - "Lib/test/test_keywordonlyarg.py:4:14    	seojiwon    	U   	__email__ = \"seojiwon at gmail dot com\""
  - "Lib/test/test_keywordonlyarg.py:12:17   	nodefaults  	U   	def keywordonly_nodefaults_sum(*, k1, k2):"
  - "Lib/test/test_keywordonlyarg.py:16:5    	mixedargs   	U   	def mixedargs_sum(a, b=0, *arg, k"
  - "Lib/test/test_keywordonlyarg.py:21:5    	sortnum     	U   	def sortnum(*nums, reverse=False"
  - "Lib/test/test_keywordonlyarg.py:24:5    	sortwords   	U   	def sortwords(*words, reverse=False"
  - "Lib/test/test_keywordonlyarg.py:57:9    	fundef      	U   	fundef = \"def f(%s):\\n pass"
  - "Lib/test/test_keywordonlyarg.py:78:23   	Funcall     	U   	def testRaiseErrorFuncallWithUnexpectedKeywordArgument"
  - "Lib/test/test_linecache.py:91:45    	ááááá   	U   	'b\\n', 'abcdef\\n', 'ááááá\\n']"
  - "Lib/test/test_list.py:23:38     	ooms    	U   	RUSTPYTHON TODO: catch ooms"
  - "Lib/test/test_list.py:35:32     	newlib  	U   	# earlier due to a newlib bug. See the following"
  - "Lib/test/test_list.py:159:17    	comdat  	U   	def test_no_comdat_folding(self):"
  - "Lib/test/test_listcomps.py:44:61    	lvalues 	U   	for listcomps used as lvalues"
  - "Lib/test/test_listcomps.py:68:9     	lrange  	U   	>>> lrange = lambda n: [i for"
  - "Lib/test/test_locale.py:18:13   	tlocs           	U   	tlocs = (\"en_US.UTF-8\", \"en"
  - "Lib/test/test_locale.py:20:61   	ronaldoussoren  	U   	fine on OSX 10.6, I (ronaldoussoren)"
  - "Lib/test/test_locale.py:31:17   	tloc            	U   	for tloc in tlocs:"
  - "Lib/test/test_locale.py:143:15  	formatfunc      	U   	def _test_formatfunc(self, format, value"
  - "Lib/test/test_locale.py:379:38  	wcscoll         	U   	raise unittest.SkipTest('wcscoll/wcsxfrm have known bugs"
  - "Lib/test/test_locale.py:379:46  	wcsxfrm         	U   	unittest.SkipTest('wcscoll/wcsxfrm have known bugs')"
  - "Lib/test/test_locale.py:568:14  	getsetlocale    	U   	def test_getsetlocale_issue1813(self):"
  - "Lib/test/test_locale.py:631:7   	Testfr          	U   	class TestfrFRDelocalizeTest(FrFRCookedTes"
  - "Lib/test/test_long.py:10:35     	longintrepr 	U   	should match the value in longintrepr.h for best testing."
  - "Lib/test/test_long.py:34:31     	mant        	U   	DIG = sys.float_info.mant_dig"
  - "Lib/test/test_long.py:123:9     	getran      	U   	def getran(self, ndigits):"
  - "Lib/test/test_long.py:174:13    	lenx        	U   	for lenx in digits:"
  - "Lib/test/test_long.py:176:17    	leny        	U   	for leny in digits:"
  - "Lib/test/test_long.py:209:14    	karatsuba   	U   	def test_karatsuba(self):"
  - "Lib/test/test_long.py:218:13    	abits       	U   	for abits in bits:"
  - "Lib/test/test_long.py:220:17    	bbits       	U   	for bbits in bits:"
  - "Lib/test/test_long.py:232:15    	bitop       	U   	def check_bitop_identities_1(self, x"
  - "Lib/test/test_long.py:490:9     	shuge       	U   	shuge = '12345' * 120"
  - "Lib/test/test_long.py:492:9     	mhuge       	U   	mhuge = -huge"
  - "Lib/test/test_long.py:618:21    	xycmp       	U   	xycmp = (x > y) - (x < y)"
  - "Lib/test/test_long.py:816:25    	zerodivision	U   	expected = 'zerodivision'"
  - "Lib/test/test_long.py:898:11    	largeish    	U   	# largeish random divisions: a"
  - "Lib/test/test_longexp.py:4:14       	longexp 	U   	def test_longexp(self):"
  - "Lib/test/test_marshal.py:95:24      	Andr            	U   	for s in [\"\", \"Andr\\xe8 Previn\", \"abc\","
  - "Lib/test/test_marshal.py:142:11     	astring         	U   	d = {'astring': 'foo@bar.baz.spam"
  - "Lib/test/test_marshal.py:144:11     	anint           	U   	'anint': 2**20,"
  - "Lib/test/test_marshal.py:145:11     	ashortlong      	U   	'ashortlong': 2,"
  - "Lib/test/test_marshal.py:147:11     	atuple          	U   	'atuple': ('.zyx.41',)*10,"
  - "Lib/test/test_marshal.py:148:11     	aboolean        	U   	'aboolean': False,"
  - "Lib/test/test_marshal.py:149:11     	aunicode        	U   	'aunicode': \"Andr\\xe8 Previn\""
  - "Lib/test/test_marshal.py:272:13     	subtyp          	U   	subtyp = type('subtyp', (typ"
  - "Lib/test/test_marshal.py:292:35     	Engelbert       	U   	Adapted from a patch by Engelbert Gruber."
  - "Lib/test/test_marshal.py:292:45     	Gruber          	U   	a patch by Engelbert Gruber."
  - "Lib/test/test_marshal.py:295:13     	ilen            	U   	ilen = len(interleaved)"
  - "Lib/test/test_marshal.py:345:15     	unmarshallable  	U   	def check_unmarshallable(self, data):"
  - "Lib/test/test_marshal.py:397:23     	rsample         	U   	def helper3(self, rsample, recursive=False, simple"
  - "Lib/test/test_marshal.py:426:9      	intobj          	U   	intobj = 123321"
  - "Lib/test/test_marshal.py:433:9      	floatobj        	U   	floatobj = 1.2345"
  - "Lib/test/test_marshal.py:440:9      	strobj          	U   	strobj = \"abcde\"*3"
  - "Lib/test/test_marshal.py:447:9      	bytesobj        	U   	bytesobj = b\"abcde\"*3"
  - "Lib/test/test_marshal.py:455:13     	listobj         	U   	listobj = [obj, obj]"
  - "Lib/test/test_marshal.py:463:13     	tupleobj        	U   	tupleobj = (obj, obj)"
  - "Lib/test/test_marshal.py:471:13     	setobj          	U   	setobj = {(obj, 1), (obj,"
  - "Lib/test/test_marshal.py:479:13     	frozensetobj    	U   	frozensetobj = frozenset({(obj,"
  - "Lib/test/test_marshal.py:487:13     	dictobj         	U   	dictobj = {\"hello\": obj, \"goodbye"
  - "Lib/test/test_marshal.py:558:23     	pymarshal       	U   	_testcapi.pymarshal_write_long_to_file("
  - "Lib/test/test_math.py:78:52     	nonnnegative	U   	binary expansion of a nonnnegative integer.\"\"\""
  - "Lib/test/test_math.py:86:5      	numfactors  	U   	numfactors = (stop - start) >>"
  - "Lib/test/test_math.py:124:11    	mtestfile   	U   	def parse_mtestfile(fname):"
  - "Lib/test/test_math.py:175:34    	ftest       	U   	logic of MathTests.(ftest, test_testcases, test"
  - "Lib/test/test_math.py:175:62    	mtestcases  	U   	test_testcases, test_mtestcases)"
  - "Lib/test/test_math.py:253:16    	Abramowitz  	U   	# Ref: Abramowitz & Stegun (Dover, 19"
  - "Lib/test/test_math.py:253:29    	Stegun      	U   	# Ref: Abramowitz & Stegun (Dover, 1965)"
  - "Lib/test/test_math.py:380:13    	Cbrt        	U   	def testCbrt(self):"
  - "Lib/test/test_math.py:381:43    	cbrt        	U   	assertRaises(TypeError, math.cbrt)"
  - "Lib/test/test_math.py:604:13    	testfrexp   	U   	def testfrexp(name, result, expected"
  - "Lib/test/test_math.py:605:27    	emant       	U   	(mant, exp), (emant, eexp) = result, expected"
  - "Lib/test/test_math.py:605:34    	eexp        	U   	mant, exp), (emant, eexp) = result, expected"
  - "Lib/test/test_math.py:638:13    	msum        	U   	def msum(iterable):"
  - "Lib/test/test_math.py:640:64    	lsum        	U   	error. Based on the 'lsum' function"
  - "Lib/test/test_math.py:644:13    	tmant       	U   	tmant, texp = 0, 0"
  - "Lib/test/test_math.py:644:20    	texp        	U   	tmant, texp = 0, 0"
  - "Lib/test/test_math.py:685:59    	Sterbenz    	U   	differences (due to Sterbenz)"
  - "Lib/test/test_math.py:823:9     	fourthmax   	U   	fourthmax = FLOAT_MAX / 4.0"
  - "Lib/test/test_math.py:869:54    	baep        	U   	29', '0x1.24bd2dc4f4baep+29'),"
  - "Lib/test/test_math.py:879:22    	bfbec       	U   	('0x1.5c6bfbec5c4dcp+30', '0x1.025"
  - "Lib/test/test_math.py:880:21    	dcebba      	U   	('0x1.59dcebba995cap+30', '0x1.50ca"
  - "Lib/test/test_math.py:881:45    	cfdc        	U   	cdd94cf5aap+29', '0x1.9cfdc5571d38ep+29'),"
  - "Lib/test/test_math.py:887:47    	dcfe        	U   	ea0c6p+29', '0x1.d35dcfe902bc3p+29'),"
  - "Lib/test/test_math.py:1203:13   	testmodf    	U   	def testmodf(name, result, expected"
  - "Lib/test/test_math.py:1645:15   	mathmodule  	U   	# mathmodule.c is failing to weed"
  - "Lib/test/test_math.py:1645:67   	libm        	U   	out underflows from libm, or"
  - "Lib/test/test_math.py:1647:24   	underflowing	U   	self.fail(\"underflowing exp() should not have"
  - "Lib/test/test_math.py:1830:53   	abababababab	U   	, 3], start='ab'), 'abababababab')"
  - "Lib/test/test_memoryio.py:24:20     	buftype     	U   	buf = self.buftype(\"1234567890\")"
  - "Lib/test/test_memoryio.py:87:9      	memio       	U   	memio = self.ioclass(buf)"
  - "Lib/test/test_memoryio.py:220:32    	overread    	U   	Issue #24989: Buffer overread"
  - "Lib/test/test_memoryio.py:323:14    	overseek    	U   	def test_overseek(self):"
  - "Lib/test/test_memoryio.py:399:30    	initvalue   	U   	def __init__(me, initvalue, foo):"
  - "Lib/test/test_memoryio.py:413:9     	submemio    	U   	submemio = PickleTestMemIO(buf"
  - "Lib/test/test_memoryio.py:955:14    	widechar    	U   	def test_widechar(self):"
  - "Lib/test/test_memoryview.py:33:9    	oldrefcount     	U   	oldrefcount = sys.getrefcount(b"
  - "Lib/test/test_memoryview.py:216:13  	oldviewrefcount 	U   	oldviewrefcount = sys.getrefcount(m"
  - "Lib/test/test_memoryview.py:238:30  	mbuf            	U   	# This exercises mbuf_clear()."
  - "Lib/test/test_memoryview.py:322:11  	Memoryviews     	U   	# Memoryviews of readonly (hashable"
  - "Lib/test/test_memoryview.py:349:33  	weakrefable     	U   	Check memoryviews are weakrefable"
  - "Lib/test/test_memoryview.py:647:21  	bhilqn          	U   	for fmt in 'bhilqnBHILQN':"
  - "Lib/test/test_memoryview.py:647:27  	BHILQN          	U   	for fmt in 'bhilqnBHILQN':"
  - "Lib/test/test_mimetypes.py:51:53    	pyunit  	U   	application/x-unittest pyunit\\n\")"
  - "Lib/test/test_mimetypes.py:135:60   	geocube 	U   	extensions('application/vnd.geocube+xml',"
  - "Lib/test/test_mmap.py:47:46     	segfaulted  	U   	# SF bug 128713: segfaulted on Linux"
  - "Lib/test/test_mmap.py:126:9     	mapsize     	U   	mapsize = 10"
  - "Lib/test/test_mmap.py:472:34    	halfsize    	U   	mmap_file (self, f, halfsize):"
  - "Lib/test/test_mmap.py:710:64    	mmaps       	U   	cannot resize anonymous mmaps on Windows')"
  - "Lib/test/test_mmap.py:731:75    	memmap      	U   	\"TODO: RUSTPYTHON, memmap2 doesn't throw OSError"
  - "Lib/test/test_mmap.py:753:9     	mapsizes    	U   	mapsizes = (50, 100, 1_000,"
  - "Lib/test/test_mmap.py:766:21    	accint      	U   	accint = getattr(mmap, access"
  - "Lib/test/test_mmap.py:781:46    	madvise     	U   	hasattr(mmap.mmap, 'madvise'), 'needs madvise')"
  - "Lib/test/test_module.py:66:34   	foodoc          	U   	ModuleType(\"foo\", \"foodoc\")"
  - "Lib/test/test_module.py:85:11   	Reinitialization	U   	# Reinitialization should not replace the"
  - "Lib/test/test_module.py:142:17  	yolo            	U   	gga.yolo"
  - "Lib/test/test_module.py:189:26  	delgetattr      	U   	bad_getattr3.delgetattr"
  - "Lib/test/test_module.py:299:15  	Descr           	U   	class Descr:"
  - "Lib/test/test_ntpath.py:33:10   	getshortpathname	U   	def _getshortpathname(path):"
  - "Lib/test/test_ntpath.py:83:34   	pathset         	U   	assertPathIn(self, path, pathset):"
  - "Lib/test/test_ntpath.py:160:40  	pleep           	U   	ntpath.join(\"d:\\\\\", \"\\\\pleep\")', 'd:\\\\pleep')"
  - "Lib/test/test_ntpath.py:632:13  	currentdir      	U   	currentdir = ntpath.basename(cwd"
  - "Lib/test/test_ntpath.py:694:25  	alot            	U   	check(['spam', 'alot'], '')"
  - "Lib/test/test_operator.py:330:18    	xyzpdq  	U   	a = b = 'xyzpdq'"
  - "Lib/test/test_operator.py:420:34    	nonkey  	U   	operator.itemgetter('nonkey')"
  - "Lib/test/test_operator.py:425:9     	getcount	U   	getcount = operator.itemgetter"
  - "Lib/test/test_optparse.py:2:47      	Gijsbers    	U   	Supplied by Johannes Gijsbers"
  - "Lib/test/test_optparse.py:372:15    	Trueremoved 	U   	def assertTrueremoved(self):"
  - "Lib/test/test_optparse.py:407:36    	aaarggh     	U   	add_option(\"-a\", \"--aaarggh\")"
  - "Lib/test/test_optparse.py:497:47    	frob        	U   	option(\"-x\", default=\"frob\")"
  - "Lib/test/test_optparse.py:667:14    	shortopt    	U   	def test_shortopt_empty_longopt_append"
  - "Lib/test/test_optparse.py:667:29    	longopt     	U   	test_shortopt_empty_longopt_append(self):"
  - "Lib/test/test_optparse.py:710:44    	axyz        	U   	assertParseOK([\"--foo=bar\", \"-axyz\"],"
  - "Lib/test/test_optparse.py:769:30    	optionlike  	U   	test_option_consumes_optionlike_string(self):"
  - "Lib/test/test_optparse.py:1053:23   	notfile     	U   	def test_filetype_notfile(self):"
  - "Lib/test/test_optparse.py:1085:44   	abar        	U   	assertParseOK([\"-a\", \"foo\", \"-abar\", \"--apple=x,y\"],"
  - "Lib/test/test_optparse.py:1301:15   	Trueconflict	U   	def assertTrueconflict_error(self, func):"
  - "Lib/test/test_optparse.py:1405:58   	fooing      	U   	the foo list for later fooing"
  - "Lib/test/test_optparse.py:1628:29   	Ooops       	U   	_parse_num, (\"0xOoops\", int), {},"
  - "Lib/test/test_ordered_dict.py:62:9      	argdict     	U   	argdict = OrderedDict(items"
  - "Lib/test/test_ordered_dict.py:412:42    	abdec       	U   	assertEqual(list(od), list('abdec'))"
  - "Lib/test/test_ordered_dict.py:414:42    	cabde       	U   	assertEqual(list(od), list('cabde'))"
  - "Lib/test/test_ordered_dict.py:420:42    	bcade       	U   	assertEqual(list(od), list('bcade'))"
  - "Lib/test/test_ordered_dict.py:512:45    	lookdict    	U   	collision-handling in lookdict (in Objects/dictobject"
  - "Lib/test/test_ordered_dict.py:512:66    	dictobject  	U   	lookdict (in Objects/dictobject.c)."
  - "Lib/test/test_ordered_dict.py:574:21    	odict       	U   	on a sparse odict and then perform an"
  - "Lib/test/test_ordered_dict.py:761:9     	keysize     	U   	keysize = calcsize('2nP2n')"
  - "Lib/test/test_ordered_dict.py:763:9     	entrysize   	U   	entrysize = calcsize('n2P')"
  - "Lib/test/test_ordered_dict.py:765:9     	nodesize    	U   	nodesize = calcsize('Pn2P')"
  - "Lib/test/test_ordered_dict.py:803:42    	bdeaf       	U   	assertEqual(list(od), list('bdeaf'))"
  - "Lib/test/test_os.py:83:21   	linuxthreads    	U   	# and unmaintained) linuxthreads threading library."
  - "Lib/test/test_os.py:131:9   	dirlen          	U   	dirlen = 200 # characters"
  - "Lib/test/test_os.py:552:13  	nanosecondy     	U   	nanosecondy = getattr(result, name"
  - "Lib/test/test_os.py:622:22  	ffree           	U   	'ffree', 'favail', 'flag',"
  - "Lib/test/test_os.py:622:31  	favail          	U   	'ffree', 'favail', 'flag', 'namemax'"
  - "Lib/test/test_os.py:622:49  	namemax         	U   	'favail', 'flag', 'namemax')"
  - "Lib/test/test_os.py:626:45  	fsid            	U   	isinstance(result.f_fsid, int))"
  - "Lib/test/test_os.py:759:17  	subsecond       	U   	def support_subsecond(self, filename):"
  - "Lib/test/test_os.py:819:41  	utimes          	U   	utimensat(timespec), utimes(timeval), utime(utimbuf"
  - "Lib/test/test_os.py:819:64  	utimbuf         	U   	utimes(timeval), utime(utimbuf)"
  - "Lib/test/test_os.py:841:18  	lutimes         	U   	# or lutimes(timeval)"
  - "Lib/test/test_os.py:851:22  	futimes         	U   	# or futimes(timeval)"
  - "Lib/test/test_os.py:861:62  	futimesat       	U   	utimensat(timespec) or futimesat(timeval)"
  - "Lib/test/test_os.py:884:26  	Refleaks        	U   	# x86 Gentoo Refleaks 3.x once failed with"
  - "Lib/test/test_os.py:982:20  	saveb           	U   	self.__saveb = dict(os.environb)"
  - "Lib/test/test_os.py:1139:13 	longstr         	U   	longstr = 'x' * 32_768"
  - "Lib/test/test_os.py:1145:20 	missingkey      	U   	missing = 'missingkey'"
  - "Lib/test/test_os.py:1294:54 	dirsymlink      	U   	a file kid and a dirsymlink kid"
  - "Lib/test/test_os.py:1470:7  	Fwalk           	U   	class FwalkTests(WalkTests):"
  - "Lib/test/test_os.py:1528:9  	minfd           	U   	minfd = os.dup(1)"
  - "Lib/test/test_os.py:1533:9  	newfd           	U   	newfd = os.dup(1)"
  - "Lib/test/test_os.py:1546:13 	broot           	U   	for broot, bdirs, bfiles in os"
  - "Lib/test/test_os.py:1546:20 	bdirs           	U   	for broot, bdirs, bfiles in os.walk(os"
  - "Lib/test/test_os.py:1546:27 	bfiles          	U   	for broot, bdirs, bfiles in os.walk(os.fsencode"
  - "Lib/test/test_os.py:1749:9  	dira            	U   	dira = os.path.join(os_helper"
  - "Lib/test/test_os.py:1751:9  	dirb            	U   	dirb = os.path.join(dira"
  - "Lib/test/test_os.py:1822:35 	getrandom       	U   	skipUnless(hasattr(os, 'getrandom'), 'need os.getrandom"
  - "Lib/test/test_os.py:1866:3  	getentropy      	U   	# getentropy() function, the getrandom"
  - "Lib/test/test_os.py:2009:34 	absolutepath    	U   	program_path = os.sep + 'absolutepath'"
  - "Lib/test/test_os.py:2064:9  	newenv          	U   	newenv = os.environ.copy()"
  - "Lib/test/test_os.py:2129:17 	fchdir          	U   	singles = [\"fchdir\", \"dup\", \"fdatasync"
  - "Lib/test/test_os.py:2129:34 	fdatasync       	U   	[\"fchdir\", \"dup\", \"fdatasync\", \"fstat\","
  - "Lib/test/test_os.py:2130:38 	tcgetpgrp       	U   	fstatvfs\", \"fsync\", \"tcgetpgrp\", \"ttyname\"]"
  - "Lib/test/test_os.py:2177:39 	fchmod          	U   	skipUnless(hasattr(os, 'fchmod'), 'test needs os.fchmod"
  - "Lib/test/test_os.py:2181:39 	fchown          	U   	skipUnless(hasattr(os, 'fchown'), 'test needs os.fchown"
  - "Lib/test/test_os.py:2185:39 	fpathconf       	U   	skipUnless(hasattr(os, 'fpathconf'), 'test needs os.fpathconf"
  - "Lib/test/test_os.py:2203:39 	readv           	U   	skipUnless(hasattr(os, 'readv'), 'test needs os.readv"
  - "Lib/test/test_os.py:2208:39 	tcsetpgrp       	U   	skipUnless(hasattr(os, 'tcsetpgrp'), 'test needs os.tcsetpgrp"
  - "Lib/test/test_os.py:2209:14 	tcsetpgrpt      	U   	def test_tcsetpgrpt(self):"
  - "Lib/test/test_os.py:2216:39 	writev          	U   	skipUnless(hasattr(os, 'writev'), 'test needs os.writev"
  - "Lib/test/test_os.py:2345:14 	bdir            	U   	self.bdir = os.fsencode(self.dir"
  - "Lib/test/test_os.py:2347:9  	bytesfn         	U   	bytesfn = []"
  - "Lib/test/test_os.py:2362:14 	unicodefn       	U   	self.unicodefn = set()"
  - "Lib/test/test_os.py:2450:13 	rslt            	U   	rslt = PeekNamedPipe(msvcrt"
  - "Lib/test/test_os.py:2464:19 	sigterm         	U   	def test_kill_sigterm(self):"
  - "Lib/test/test_os.py:2576:17 	readlinktest    	U   	filelink = 'readlinktest'"
  - "Lib/test/test_os.py:2578:5  	filelinkb       	U   	filelinkb = os.fsencode(filelink"
  - "Lib/test/test_os.py:2638:17 	filelinktest    	U   	filelink = 'filelinktest'"
  - "Lib/test/test_os.py:2640:5  	dirlink         	U   	dirlink = 'dirlinktest'"
  - "Lib/test/test_os.py:2640:16 	dirlinktest     	U   	dirlink = 'dirlinktest'"
  - "Lib/test/test_os.py:2791:14 	appexeclink     	U   	def test_appexeclink(self):"
  - "Lib/test/test_os.py:2814:17 	junctiontest    	U   	junction = 'junctiontest'"
  - "Lib/test/test_os.py:2861:9  	hproc           	U   	hproc = kernel.GetCurrentProcess"
  - "Lib/test/test_os.py:3168:58 	envlist         	U   	parse_arglist and parse_envlist (#28114)"
  - "Lib/test/test_os.py:3259:35 	getlogin        	U   	skipUnless(hasattr(os, 'getlogin'), \"test needs os.getlogin"
  - "Lib/test/test_os.py:3266:35 	getpriority     	U   	skipUnless(hasattr(os, 'getpriority') and hasattr(os, 'setpriorit"
  - "Lib/test/test_os.py:3266:66 	setpriority     	U   	etpriority') and hasattr(os, 'setpriority'),"
  - "Lib/test/test_os.py:3605:16 	xattrs          	U   	def _check_xattrs_str(self, s, getxattr"
  - "Lib/test/test_os.py:3605:56 	removexattr     	U   	getxattr, setxattr, removexattr, listxattr, **kwargs"
  - "Lib/test/test_os.py:3664:14 	lpath           	U   	def test_lpath(self):"
  - "Lib/test/test_os.py:3685:7  	Termsize        	U   	class TermsizeTests(unittest.TestCase"
  - "Lib/test/test_os.py:3704:14 	stty            	U   	def test_stty_match(self):"
  - "Lib/test/test_os.py:3733:35 	memfd           	U   	skipUnless(hasattr(os, 'memfd_create'), 'requires"
  - "Lib/test/test_os.py:3735:7  	Memfd           	U   	class MemfdCreateTests(unittest"
  - "Lib/test/test_os.py:3750:35 	eventfd         	U   	skipUnless(hasattr(os, 'eventfd'), 'requires os.eventfd"
  - "Lib/test/test_os.py:3752:7  	Eventfd         	U   	class EventfdTests(unittest.TestCase"
  - "Lib/test/test_os.py:3753:22 	initval         	U   	def test_eventfd_initval(self):"
  - "Lib/test/test_os.py:3890:25 	lchflags        	U   	if hasattr(os, \"lchflags\"):"
  - "Lib/test/test_os.py:3983:34 	badf            	U   	get_set_inheritable_badf(self):"
  - "Lib/test/test_os.py:4159:14 	uninstantiable  	U   	def test_uninstantiable(self):"
  - "Lib/test/test_os.py:4164:14 	unpickable      	U   	def test_unpickable(self):"
  - "Lib/test/test_os.py:4173:11 	Scandir         	U   	class TestScandir(unittest.TestCase):"
  - "Lib/test/test_os.py:4327:39 	bytesfile       	U   	filename = os.fsencode('bytesfile.txt')"
  - "Lib/test/test_os.py:4548:28 	feelthegil      	U   	self.assertEqual('#feelthegil', self.fspath(FakePath"
  - "Lib/test/test_pathlib.py:261:11     	Canonicalized   	U   	# Canonicalized paths roundtrip."
  - "Lib/test/test_pathlib.py:262:13     	pathstr         	U   	for pathstr in ('a', 'a/b', 'a/b"
  - "Lib/test/test_pathlib.py:296:26     	roundtrips      	U   	# The repr() roundtrips."
  - "Lib/test/test_pathlib.py:411:13     	pcanon          	U   	pcanon = self.cls(canon)"
  - "Lib/test/test_pathlib.py:525:32     	hgrc            	U   	self.assertEqual(P('a/.hgrc').suffix, '')"
  - "Lib/test/test_pathlib.py:1297:32    	conin           	U   	self.assertIs(True, P('conin$').is_reserved())"
  - "Lib/test/test_pathlib.py:1298:32    	conout          	U   	self.assertIs(True, P('conout$').is_reserved())"
  - "Lib/test/test_pathlib.py:1305:27    	mataching       	U   	# DOS-device name mataching ignores characters after"
  - "Lib/test/test_pathlib.py:1555:66    	somestr         	U   	fileA').write_bytes, 'somestr')"
  - "Lib/test/test_pathlib.py:1560:35    	äbcdefg         	U   	fileA').write_text('äbcdefg', encoding='latin-1"
  - "Lib/test/test_pathlib.py:1562:50    	bcdefg          	U   	errors='ignore'), 'bcdefg')"
  - "Lib/test/test_pathlib.py:1570:43    	nfghlk          	U   	write_text('abcde\\r\\nfghlk\\n\\rmnopq', newline="
  - "Lib/test/test_pathlib.py:1570:52    	rmnopq          	U   	text('abcde\\r\\nfghlk\\n\\rmnopq', newline='\\n')"
  - "Lib/test/test_pathlib.py:1585:58    	fghlk           	U   	os_linesep_byte + b'fghlk' + os_linesep_byte"
  - "Lib/test/test_pathlib.py:1606:22    	nodir           	U   	def test_iterdir_nodir(self):"
  - "Lib/test/test_pathlib.py:1823:22    	nonexist        	U   	def test_resolve_nonexist_relative_issue38671"
  - "Lib/test/test_pathlib.py:1894:38    	nosymlink       	U   	stat_no_follow_symlinks_nosymlink(self):"
  - "Lib/test/test_pathlib.py:2068:20    	nochange        	U   	def test_touch_nochange(self):"
  - "Lib/test/test_pathlib.py:2302:29    	myfifo          	U   	P = self.cls(BASE, 'myfifo')"
  - "Lib/test/test_pathlib.py:2324:29    	mysock          	U   	P = self.cls(BASE, 'mysock')"
  - "Lib/test/test_pathlib.py:2555:9     	pwdent          	U   	pwdent = pwd.getpwuid(os.getuid"
  - "Lib/test/test_pathlib.py:2560:13    	othername       	U   	othername = pwdent.pw_name"
  - "Lib/test/test_pathlib.py:2561:13    	otherhome       	U   	otherhome = pwdent.pw_dir.rstrip"
  - "Lib/test/test_pathlib.py:2568:21    	fakeuser        	U   	fakename = 'fakeuser'"
  - "Lib/test/test_pickle.py:17:11   	pickletester	U   	from test.pickletester import AbstractHookTests"
  - "Lib/test/test_pickle.py:216:15  	Pers        	U   	class PersPickler(self.pickler"
  - "Lib/test/test_pickle.py:217:31  	subself     	U   	def persistent_id(subself, obj):"
  - "Lib/test/test_pickle.py:278:44  	memleak     	U   	pickler_dispatch_table_memleak(self):"
  - "Lib/test/test_pickle.py:452:13  	stdsize     	U   	stdsize = basesize + len('ASCII"
  - "Lib/test/test_pkg.py:12:5       	cleanout    	U   	def cleanout(root):"
  - "Lib/test/test_pkg.py:22:5       	fixdir      	U   	def fixdir(lst):"
  - "Lib/test/test_pkg.py:51:14      	syspath     	U   	self.syspath = list(sys.path)"
  - "Lib/test/test_pkg.py:52:57      	mkhier      	U   	set() # Populated by mkhier()."
  - "Lib/test/test_pkg.py:95:9       	hier        	U   	hier = [(\"t1\", None), (\"t"
  - "Lib/test/test_pkg.py:105:19     	subsub      	U   	(\"t2 sub subsub\", None),"
  - "Lib/test/test_pkg.py:164:40     	Shouldnt    	U   	raise RuntimeError('Shouldnt load t4.py')\"),"
  - "Lib/test/test_pkg.py:269:38     	subsubsub   	U   	sub import subsub as subsubsub"
  - "Lib/test/test_pkgutil.py:30:14      	getdata         	U   	def test_getdata_filesys(self):"
  - "Lib/test/test_pkgutil.py:30:22      	filesys         	U   	def test_getdata_filesys(self):"
  - "Lib/test/test_pkgutil.py:105:14     	walkpackages    	U   	def test_walkpackages_filesys(self):"
  - "Lib/test/test_pkgutil.py:316:14     	alreadyloaded   	U   	def test_alreadyloaded(self):"
  - "Lib/test/test_pkgutil.py:334:9      	pkgdir          	U   	pkgdir = os.path.join(dirname"
  - "Lib/test/test_pkgutil.py:382:9      	pathitem        	U   	pathitem = os.path.join(dirname"
  - "Lib/test/test_platform.py:23:18     	fedoraproject   	U   	CPE_NAME=\"cpe:/o:fedoraproject:fedora:32\""
  - "Lib/test/test_platform.py:289:26    	ARCHITEW        	U   	def test_uname_win32_ARCHITEW6432(self):"
  - "Lib/test/test_plistlib.py:176:7     	extremally                  	U   	('extremally large num_objects ("
  - "Lib/test/test_plistlib.py:435:17    	benraa                      	U   	pl['\\xc5benraa'] = \"That was a unicode"
  - "Lib/test/test_plistlib.py:559:14    	appleformatting             	U   	def test_appleformatting(self):"
  - "Lib/test/test_plistlib.py:568:14    	appleformattingfromliteral  	U   	def test_appleformattingfromliteral(self):"
  - "Lib/test/test_plistlib.py:580:14    	bytesio                     	U   	def test_bytesio(self):"
  - "Lib/test/test_plistlib.py:591:14    	keysort                     	U   	def test_keysort_bytesio(self):"
  - "Lib/test/test_plistlib.py:716:14    	controlcharacters           	U   	def test_controlcharacters(self):"
  - "Lib/test/test_plistlib.py:747:14    	nondictroot                 	U   	def test_nondictroot(self):"
  - "Lib/test/test_plistlib.py:759:14    	invalidarray                	U   	def test_invalidarray(self):"
  - "Lib/test/test_plistlib.py:768:14    	invaliddict                 	U   	def test_invaliddict(self):"
  - "Lib/test/test_plistlib.py:781:14    	invalidinteger              	U   	def test_invalidinteger(self):"
  - "Lib/test/test_plistlib.py:787:14    	invalidreal                 	U   	def test_invalidreal(self):"
  - "Lib/test/test_plistlib.py:884:63    	абвгд                       	U   	, 123.45, 'abcde', 'абвгд', b'abcde',"
  - "Lib/test/test_plistlib.py:984:22    	pytype                      	U   	'pytype': 1,"
  - "Lib/test/test_plistlib.py:996:23    	classhints                  	U   	'$classhints': ["
  - "Lib/test/test_posix.py:33:34    	getscheduler        	U   	hasattr(posix, 'sched_getscheduler'):"
  - "Lib/test/test_posix.py:65:31    	ctermid             	U   	NO_ARG_FUNCTIONS = [ \"ctermid\", \"getcwd\", \"getcwdb"
  - "Lib/test/test_posix.py:77:42    	getresuid           	U   	skipUnless(hasattr(posix, 'getresuid'),"
  - "Lib/test/test_posix.py:85:42    	getresgid           	U   	skipUnless(hasattr(posix, 'getresgid'),"
  - "Lib/test/test_posix.py:110:42   	setresgid           	U   	skipUnless(hasattr(posix, 'setresgid'),"
  - "Lib/test/test_posix.py:127:42   	initgroups          	U   	skipUnless(hasattr(posix, 'initgroups'),"
  - "Lib/test/test_posix.py:188:14   	fexecve             	U   	def test_fexecve(self):"
  - "Lib/test/test_posix.py:201:42   	waitid              	U   	skipUnless(hasattr(posix, 'waitid'), \"test needs posix"
  - "Lib/test/test_posix.py:297:42   	preadv              	U   	skipUnless(hasattr(posix, 'preadv'), \"test needs posix"
  - "Lib/test/test_posix.py:354:42   	pwritev             	U   	skipUnless(hasattr(posix, 'pwritev'), \"test needs posix"
  - "Lib/test/test_posix.py:394:48   	fallocate           	U   	hasattr(posix, 'posix_fallocate'),"
  - "Lib/test/test_posix.py:423:48   	fadvise             	U   	hasattr(posix, 'posix_fadvise'),"
  - "Lib/test/test_posix.py:575:14   	oscloexec           	U   	def test_oscloexec(self):"
  - "Lib/test/test_posix.py:582:14   	osexlock            	U   	def test_osexlock(self):"
  - "Lib/test/test_posix.py:598:14   	osshlock            	U   	def test_osshlock(self):"
  - "Lib/test/test_posix.py:649:40   	fifos               	U   	path = os.path.join(\"/fifos/\", os_helper.TESTFN"
  - "Lib/test/test_posix.py:937:20   	chflag              	U   	msg = 'chflag UF_IMMUTABLE not supported"
  - "Lib/test/test_posix.py:1052:42  	getgrouplist        	U   	skipUnless(hasattr(posix, 'getgrouplist'), \"test needs posix"
  - "Lib/test/test_posix.py:1086:9   	symdiff             	U   	symdiff = idg_groups.symmetric"
  - "Lib/test/test_posix.py:1101:73  	setaffinity         	U   	hasattr(posix, 'sched_setaffinity'),"
  - "Lib/test/test_posix.py:1139:48  	getparam            	U   	OSError, posix.sched_getparam, -1)"
  - "Lib/test/test_posix.py:1143:43  	setparam            	U   	states that calling sched_setparam() or sched_setscheduler"
  - "Lib/test/test_posix.py:1143:63  	setscheduler        	U   	setparam() or sched_setscheduler() on"
  - "Lib/test/test_posix.py:1182:20  	getaffinity         	U   	def test_sched_getaffinity(self):"
  - "Lib/test/test_posix.py:1210:14  	rtld                	U   	def test_rtld_constants(self):"
  - "Lib/test/test_posix.py:1253:26  	noodly              	U   	for dst in (\"noodly2\", os_helper.TESTFN"
  - "Lib/test/test_posix.py:1255:31  	doesnotexistfilename	U   	function('doesnotexistfilename', dst)"
  - "Lib/test/test_posix.py:1298:39  	pidfd               	U   	skipUnless(hasattr(os, \"pidfd_open\"), \"pidfd_open"
  - "Lib/test/test_posix.py:1407:52  	fulllinkname        	U   	(dir_fd2, linkname, fulllinkname):"
  - "Lib/test/test_posix.py:1429:22  	mknodat             	U   	# Test using mknodat() to create a FIFO"
  - "Lib/test/test_posix.py:1554:9   	pidfile             	U   	pidfile = os_helper.TESTFN"
  - "Lib/test/test_posix.py:1585:9   	envfile             	U   	envfile = os_helper.TESTFN"
  - "Lib/test/test_posix.py:1617:64  	resetids            	U   	Unexpected keyword argument resetids"
  - "Lib/test/test_posix.py:1645:64  	setpgroup           	U   	Unexpected keyword argument setpgroup"
  - "Lib/test/test_posix.py:1664:14  	setsigmask          	U   	def test_setsigmask(self):"
  - "Lib/test/test_posix.py:1868:9   	closefile           	U   	closefile = os_helper.TESTFN"
  - "Lib/test/test_posix.py:1887:9   	dupfile             	U   	dupfile = os_helper.TESTFN"
  - "Lib/test/test_posix.py:1893:37  	childfile           	U   	open(dupfile, \"wb\") as childfile:"
  - "Lib/test/test_posix.py:1910:41  	spawnp              	U   	skipUnless(hasattr(os, 'posix_spawnp'), \"test needs os.posix"
  - "Lib/test/test_posix.py:1948:16  	Weaklinking         	U   	class TestPosixWeaklinking(unittest.TestCase):"
  - "Lib/test/test_posix.py:2059:19  	linkat              	U   	# linkat)"
  - "Lib/test/test_posixpath.py:23:13    	ABSTFN      	U   	def skip_if_ABSTFN_contains_backslash(test"
  - "Lib/test/test_posixpath.py:109:28   	nodots      	U   	self.splitextTest(\"nodots\", \"nodots\", \"\")"
  - "Lib/test/test_posixpath.py:110:29   	cshrc       	U   	self.splitextTest(\".cshrc\", \".cshrc\", \"\")"
  - "Lib/test/test_posixpath.py:111:31   	manydots    	U   	self.splitextTest(\"...manydots\", \"...manydots\", \"\""
  - "Lib/test/test_posixpath.py:203:30   	mountpoints 	U   	Symlinks are never mountpoints."
  - "Lib/test/test_posixpath.py:312:49   	vstinner    	U   	('~', '~/.local', '~vstinner/'):"
  - "Lib/test/test_pprint.py:103:7   	Unorderable 	U   	class Unorderable:"
  - "Lib/test/test_pprint.py:284:15  	controldesk 	U   	'controldesk_runtime_us': 0,"
  - "Lib/test/test_pprint.py:673:9   	cubo        	U   	cubo_repr_tgt = \"\"\"\\"
  - "Lib/test/test_pprint.py:831:30  	linegraph   	U   	cubo = test.test_set.linegraph(cube)"
  - "Lib/test/test_pprint.py:850:31  	pprints     	U   	Issue 3976: sorted pprints fail for unorderable"
  - "Lib/test/test_pprint.py:854:9   	skeys       	U   	skeys = sorted(keys, key=id"
  - "Lib/test/test_pprint.py:912:20  	Portons     	U   	special = \"Portons dix bons \\\"whiskys\\"
  - "Lib/test/test_pprint.py:912:52  	l'avocat    	U   	bons \\\"whiskys\\\"\\nà l'avocat goujat\\t qui fumait"
  - "Lib/test/test_pprint.py:912:61  	goujat      	U   	whiskys\\\"\\nà l'avocat goujat\\t qui fumait au zoo"
  - "Lib/test/test_pprint.py:912:74  	fumait      	U   	avocat goujat\\t qui fumait au zoo\""
  - "Lib/test/test_pprint.py:1010:9  	abcdefghijkl	U   	'b': b'abcdefghijkl'"
  - "Lib/test/test_pty.py:59:25      	knowledgable	U   	# from someone more knowledgable."
  - "Lib/test/test_pwd.py:23:41      	gecos           	U   	assertEqual(e[4], e.pw_gecos)"
  - "Lib/test/test_pwd.py:38:9       	entriesbyname   	U   	entriesbyname = {}"
  - "Lib/test/test_pwd.py:39:9       	entriesbyuid    	U   	entriesbyuid = {}"
  - "Lib/test/test_pwd.py:65:9       	byuids          	U   	byuids = {}"
  - "Lib/test/test_pwd.py:100:9      	fakeuid         	U   	fakeuid = sys.maxsize"
  - "Lib/test/test_py_compile.py:99:31   	nonregular  	U   	test_do_not_overwrite_nonregular_files(self):"
  - "Lib/test/test_py_compile.py:235:9   	pycompilecmd	U   	def pycompilecmd(self, *args, **kwargs"
  - "Lib/test/test_pyexpat.py:74:10      	acirc       	U   	<!ENTITY acirc \"&#226;\">"
  - "Lib/test/test_pyexpat.py:81:2       	myns        	U   	<myns:subelement xmlns:myns"
  - "Lib/test/test_pyexpat.py:82:18      	subelements 	U   	Contents of subelements"
  - "Lib/test/test_pyexpat.py:94:11      	Outputter   	U   	class Outputter:"
  - "Lib/test/test_pyexpat.py:165:13     	Attlist     	U   	def AttlistDeclHandler(self, *args"
  - "Lib/test/test_pyexpat.py:321:61     	localname   	U   	namespace URI and the localname. Though"
  - "Lib/test/test_pyexpat.py:503:70     	pyexpat     	U   	the relevant line in pyexpat.c"
  - "Lib/test/test_pyexpat.py:570:7      	Chardata    	U   	class ChardataBufferTest(unittest.TestCase"
  - "Lib/test/test_pyexpat.py:572:21     	chardata    	U   	test setting of chardata buffer size"
  - "Lib/test/test_pyexpat.py:739:14     	expaterror  	U   	def test_expaterror(self):"
  - "Lib/test/test_queue.py:20:5     	qfull   	U   	def qfull(q):"
  - "Lib/test/test_queue.py:93:14    	cumlock 	U   	self.cumlock = threading.Lock()"
  - "Lib/test/test_quopri.py:46:5    	withpythonimplementation	U   	def withpythonimplementation(testfunc):"
  - "Lib/test/test_quopri.py:47:9    	newtest                 	U   	def newtest(self):"
  - "Lib/test/test_quopri.py:52:13   	oldencode               	U   	oldencode = quopri.b2a_qp"
  - "Lib/test/test_quopri.py:53:13   	olddecode               	U   	olddecode = quopri.a2b_qp"
  - "Lib/test/test_quopri.py:183:14  	scriptencode            	U   	def test_scriptencode(self):"
  - "Lib/test/test_quopri.py:185:55  	mquopri                 	U   	Popen([sys.executable, \"-mquopri\"],"
  - "Lib/test/test_quopri.py:188:9   	cout                    	U   	cout, cerr = process.communicate"
  - "Lib/test/test_quopri.py:188:15  	cerr                    	U   	cout, cerr = process.communicate"
  - "Lib/test/test_quopri.py:199:14  	scriptdecode            	U   	def test_scriptdecode(self):"
  - "Lib/test/test_raise.py:362:14   	noraise 	U   	def test_noraise_finally(self):"
  - "Lib/test/test_random.py:21:9    	randomlist          	U   	def randomlist(self, n):"
  - "Lib/test/test_random.py:27:14   	autoseed            	U   	def test_autoseed(self):"
  - "Lib/test/test_random.py:37:14   	saverestore         	U   	def test_saverestore(self):"
  - "Lib/test/test_random.py:41:9    	randseq             	U   	randseq = self.randomlist(N"
  - "Lib/test/test_random.py:45:14   	seedargs            	U   	def test_seedargs(self):"
  - "Lib/test/test_random.py:165:30  	abcdefghijklmnopqrst	U   	self.gen.sample(str('abcdefghijklmnopqrst'), 2)"
  - "Lib/test/test_random.py:176:24  	seqsets             	U   	def test_sample_on_seqsets(self):"
  - "Lib/test/test_random.py:366:9   	getbits             	U   	getbits = self.gen.getrandbits"
  - "Lib/test/test_random.py:389:13  	origseq             	U   	origseq = [self.gen.random("
  - "Lib/test/test_random.py:390:13  	newgen              	U   	newgen = pickle.loads(state"
  - "Lib/test/test_random.py:391:13  	restoredseq         	U   	restoredseq = [newgen.random() for"
  - "Lib/test/test_random.py:417:20  	randv               	U   	files = [(\"randv2_32.pck\", 780),"
  - "Lib/test/test_random.py:489:14  	bigrand             	U   	def test_bigrand(self):"
  - "Lib/test/test_random.py:508:14  	rangelimits         	U   	def test_rangelimits(self):"
  - "Lib/test/test_random.py:513:24  	nonunit             	U   	def test_randrange_nonunit_step(self):"
  - "Lib/test/test_random.py:574:17  	bitcount            	U   	# check bitcount transition points:"
  - "Lib/test/test_random.py:579:13  	numbits             	U   	numbits = i+1"
  - "Lib/test/test_random.py:611:23  	ddfb                	U   	['0x1.1239ddfb11b7cp-3', '0x1.b3cbb"
  - "Lib/test/test_random.py:617:24  	nofar               	U   	self.gen.seed('nofar', version=1) # hash"
  - "Lib/test/test_random.py:624:29  	fcdp                	U   	['0x1.0b294cc856fcdp-1', '0x1.2ad22d79e7"
  - "Lib/test/test_random.py:629:29  	dbep                	U   	['0x1.b0580f98a7dbep-1', '0x1.84129978f9c"
  - "Lib/test/test_random.py:630:19  	aeaa                	U   	'0x1.aeaa51052e978p-2', '0x1."
  - "Lib/test/test_random.py:667:51  	daea                	U   	3p-1', '0x1.875174f0daea4p-2',"
  - "Lib/test/test_random.py:716:38  	genrand             	U   	printf(\"%.15f \", genrand_res53());"
  - "Lib/test/test_random.py:999:7   	Lanczos             	U   	# Lanczos approximation with g"
  - "Lib/test/test_random.py:1016:14 	zeroinputs          	U   	def test_zeroinputs(self):"
  - "Lib/test/test_random.py:1041:32 	sigmasqrd           	U   	for variate, args, mu, sigmasqrd in ["
  - "Lib/test/test_random.py:1087:18 	mises               	U   	def test_von_mises_range(self):"
  - "Lib/test/test_range.py:312:9    	smallnum        	U   	smallnum = 42"
  - "Lib/test/test_range.py:478:14   	strided         	U   	def test_strided_limits(self):"
  - "Lib/test/test_range.py:509:49   	rangeiterobject 	U   	iterators, that use a rangeiterobject internally."
  - "Lib/test/test_range.py:535:9    	rangeiter       	U   	rangeiter_type = type(iter(range"
  - "Lib/test/test_range.py:677:28   	rangeobj        	U   	def assert_attrs(self, rangeobj, start, stop, step)"
  - "Lib/test/test_re.py:71:14   	Qabbbc                  	U   	s = 'QabbbcR'"
  - "Lib/test/test_re.py:84:42   	xxxa                    	U   	assertEqual(re.match('x*', 'xxxa').span(0), (0, 3))"
  - "Lib/test/test_re.py:88:24   	matchobj                	U   	def bump_num(self, matchobj):"
  - "Lib/test/test_re.py:127:19  	cdehijklmopqsuwxyz      	U   	for c in 'cdehijklmopqsuwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  - "Lib/test/test_re.py:212:57  	baaaa                   	U   	'b', 'aaaaa', 1), 'baaaa')"
  - "Lib/test/test_re.py:226:25  	𝔘𝔫𝔦𝔠𝔬𝔡𝔢          	U   	re.compile('(?P<𝔘𝔫𝔦𝔠𝔬𝔡𝔢>x)(?P=𝔘𝔫𝔦𝔠𝔬𝔡\ud835"
  - "Lib/test/test_re.py:271:54  	yzxc                    	U   	pat, r'\\g<200>', 'xc8yzxc8y'), 'c8zc8')"
  - "Lib/test/test_re.py:304:55  	xxxyxzx                 	U   	b*\", \"x\", \"xyz\"), ('xxxyxzx', 4))"
  - "Lib/test/test_re.py:305:58  	xxxyz                   	U   	, \"x\", \"xyz\", 2), ('xxxyz', 2))"
  - "Lib/test/test_re.py:514:50  	axxb                    	U   	fullmatch(r\"a.*?b\", \"axxb\").span(), (0, 4))"
  - "Lib/test/test_re.py:530:17  	groupref                	U   	def test_re_groupref_exists(self):"
  - "Lib/test/test_re.py:670:47  	regs                    	U   	re.match(\"(a)\", \"a\").regs, ((0, 1), (0, 1)))"
  - "Lib/test/test_re.py:685:48  	abxd                    	U   	\"abc bcd bc abxd\").group(1), \"bx\")"
  - "Lib/test/test_re.py:725:19  	ceghijklmopqyz          	U   	for c in 'ceghijklmopqyzCEFGHIJKLMNOPQRTVXY'"
  - "Lib/test/test_re.py:725:33  	CEFGHIJKLMNOPQRTVXY     	U   	c in 'ceghijklmopqyzCEFGHIJKLMNOPQRTVXY':"
  - "Lib/test/test_re.py:728:33  	ABCEFGHIJKLMNOPQRTVXYZ  	U   	c in 'ceghijklmopqyzABCEFGHIJKLMNOPQRTVXYZ':"
  - "Lib/test/test_re.py:787:59  	perlre                  	U   	and different from the perlre behaviour,"
  - "Lib/test/test_re.py:808:18  	codesize                	U   	def test_big_codesize(self):"
  - "Lib/test/test_re.py:814:14  	anyall                  	U   	def test_anyall(self):"
  - "Lib/test/test_re.py:836:53  	abac                    	U   	match(r'(a)b(?=\\1)c', 'abac'))"
  - "Lib/test/test_re.py:855:54  	abaa                    	U   	match(r'(a)b(?<=\\1)a', 'abaa'))"
  - "Lib/test/test_re.py:911:50  	multicharacter          	U   	characters have the same multicharacter uppercase."
  - "Lib/test/test_re.py:1082:49 	dgit                    	U   	findall(s), list(':[]dgit'))"
  - "Lib/test/test_re.py:1148:9  	oldpat                  	U   	oldpat = re.compile('a(?:b"
  - "Lib/test/test_re.py:1151:13 	newpat                  	U   	newpat = pickle.loads(pickled"
  - "Lib/test/test_re.py:1616:9  	bpat                    	U   	bpat = re.compile(b'.')"
  - "Lib/test/test_re.py:1661:17 	sletter                 	U   	sletter = c.lower()"
  - "Lib/test/test_re.py:1663:17 	bletter                 	U   	bletter = sletter.encode(enc"
  - "Lib/test/test_re.py:1833:24 	Backreferences          	U   	# Issue 16688: Backreferences make case-insensitive"
  - "Lib/test/test_re.py:1854:37 	maxrepeat               	U   	repeat_minmax_overflow_maxrepeat(self):"
  - "Lib/test/test_re.py:1916:14 	zerowidth               	U   	def test_zerowidth(self):"
  - "Lib/test/test_re.py:1940:29 	submatches              	U   	# issue 2537: empty submatches"
  - "Lib/test/test_re.py:1944:30 	xyyzy                   	U   	m = r.match(\"xyyzy\")"
  - "Lib/test/test_re.py:2016:25 	racadabra               	U   	['', 'ab', 'racadabra'])"
  - "Lib/test/test_re.py:2298:26 	spattern                	U   	pattern = 'Very %spattern' % ('long ' * 1000)"
  - "Lib/test/test_re.py:2343:29 	ababba                  	U   	self.assertEqual(f(\"ababba\"), [0, 0, 1, 2, 0,"
  - "Lib/test/test_re.py:2344:29 	abcabdac                	U   	self.assertEqual(f(\"abcabdac\"), [0, 0, 0, 1, 2,"
  - "Lib/test/test_re.py:2346:14 	signedness              	U   	def test_signedness(self):"
  - "Lib/test/test_regrtest.py:177:42    	ignorefile  	U   	'--ignorefile', filename])"
  - "Lib/test/test_regrtest.py:371:14    	tmptestdir  	U   	self.tmptestdir = tempfile.mkdtemp("
  - "Lib/test/test_regrtest.py:704:9     	cmdargs     	U   	cmdargs = ['-m', 'test', '-"
  - "Lib/test/test_regrtest.py:743:35    	uaudio      	U   	output = self.run_tests('-uaudio', *test_names)"
  - "Lib/test/test_regrtest.py:1148:50   	nosuchtest  	U   	tests(testname, \"-m\", \"nosuchtest\", exitcode=0)"
  - "Lib/test/test_repl.py:73:26     	kbps	U   	<kbps>0</kbps>"
  - "Lib/test/test_reprlib.py:31:15      	abcdefghijklmnop                                    	U   	eq(r(\"abcdefghijklmnop\"),\"'abcdefghijklmnop"
  - "Lib/test/test_reprlib.py:80:11      	Frozensets                                          	U   	# Frozensets give up after 6 as well"
  - "Lib/test/test_reprlib.py:231:17     	areallylongpackageandmodulenametotestreprtruncation 	U   	longname = 'areallylongpackageandmodulenametotestreprtruncation'"
  - "Lib/test/test_reprlib.py:235:14     	subpkgname                                          	U   	self.subpkgname = os.path.join(self"
  - "Lib/test/test_reprlib.py:330:9      	ibaz                                                	U   	ibaz = baz.baz()"
  - "Lib/test/test_reprlib.py:339:9      	amethod                                             	U   	def amethod(self): pass"
  - "Lib/test/test_reprlib.py:347:9      	iqux                                                	U   	iqux = qux.aaaaaaaaaaaaaaaaaaaaaaa"
  - "Lib/test/test_resource.py:22:20     	ismax           	U   	def test_fsize_ismax(self):"
  - "Lib/test/test_resource.py:63:60     	hppa            	U   	systems (e.g., Ubuntu on hppa) the flush()"
  - "Lib/test/test_resource.py:102:14    	getrusage       	U   	def test_getrusage(self):"
  - "Lib/test/test_resource.py:105:9     	usageself       	U   	usageself = resource.getrusage"
  - "Lib/test/test_resource.py:106:9     	usagechildren   	U   	usagechildren = resource.getrusage"
  - "Lib/test/test_resource.py:109:13    	usageboth       	U   	usageboth = resource.getrusage"
  - "Lib/test/test_resource.py:120:14    	setrusage       	U   	def test_setrusage_refcount(self):"
  - "Lib/test/test_resource.py:136:61    	getpagesize     	U   	resource' has no attribute 'getpagesize'"
  - "Lib/test/test_resource.py:149:22    	contants        	U   	def test_freebsd_contants(self):"
  - "Lib/test/test_resource.py:154:45    	prlimit         	U   	skipUnless(hasattr(resource, 'prlimit'), 'no prlimit')"
  - "Lib/test/test_richcmp.py:98:9       	checkfail   	U   	def checkfail(self, error, opname"
  - "Lib/test/test_richcmp.py:102:40     	expres      	U   	self, opname, a, b, expres):"
  - "Lib/test/test_richcmp.py:104:13     	realres     	U   	realres = op(a, b)"
  - "Lib/test/test_richcmp.py:113:56     	itemwise    	U   	results (i.e. Vectors with itemwise"
  - "Lib/test/test_richcmp.py:146:21     	typea       	U   	for typea in (int, Number):"
  - "Lib/test/test_richcmp.py:147:25     	typeb       	U   	for typeb in (int, Number):"
  - "Lib/test/test_richcmp.py:154:33     	realoutcome 	U   	realoutcome = op(a, b)"
  - "Lib/test/test_richcmp.py:155:33     	testoutcome 	U   	testoutcome = op(ta, tb)"
  - "Lib/test/test_richcmp.py:158:9      	checkvalue  	U   	def checkvalue(self, opname, a, b,"
  - "Lib/test/test_richcmp.py:193:14     	misbehavin  	U   	def test_misbehavin(self):"
  - "Lib/test/test_richcmp.py:194:15     	Misb        	U   	class Misb:"
  - "Lib/test/test_richcmp.py:325:14     	badentry    	U   	def test_badentry(self):"
  - "Lib/test/test_richcmp.py:340:14     	goodentry   	U   	def test_goodentry(self):"
  - "Lib/test/test_richcmp.py:342:22     	listobject  	U   	# in Objects/listobject.c::list_richcompare"
  - "Lib/test/test_rlcompleter.py:14:14      	stdcompleter	U   	self.stdcompleter = rlcompleter.Completer"
  - "Lib/test/test_rlcompleter.py:39:60      	akaksajadhak	U   	stdcompleter.global_matches('akaksajadhak'), [])"
  - "Lib/test/test_rlcompleter.py:55:64      	foospamegg  	U   	attr_matches('tuple.foospamegg'), [])"
  - "Lib/test/test_rlcompleter.py:65:55      	Completeme  	U   	completer.attr_matches('Completeme.egg'), [])"
  - "Lib/test/test_robotparser.py:49:12      	cyberworld  	U   	Disallow: /cyberworld/map/ # This is an infinite"
  - "Lib/test/test_robotparser.py:66:3       	Cybermapper 	U   	# Cybermapper knows where to go."
  - "Lib/test/test_robotparser.py:67:13      	cybermapper 	U   	User-agent: cybermapper"
  - "Lib/test/test_robotparser.py:136:13     	figtree     	U   	User-agent: figtree"
  - "Lib/test/test_robotparser.py:142:14     	ejoe        	U   	Disallow: /%7ejoe/index.html"
  - "Lib/test/test_robotparser.py:168:16     	Ejoe        	U   	'/%7Ejoe/index.html']"
  - "Lib/test/test_robotparser.py:185:32     	Diasallow   	U   	test that Allow and Diasallow works well with each"
  - "Lib/test/test_robotparser.py:187:13     	Googlebot   	U   	User-agent: Googlebot"
  - "Lib/test/test_robotparser.py:194:22     	anotherfile 	U   	bad = ['/folder1/anotherfile.html']"
  - "Lib/test/test_robotparser.py:224:14     	googlebot   	U   	agent = 'googlebot'"
  - "Lib/test/test_robotparser.py:371:49     	Nutch       	U   	self.parser.can_fetch('Nutch', self.base_url))"
  - "Lib/test/test_robotparser.py:373:67     	webstats    	U   	fetch('Nutch', self.url('webstats')))"
  - "Lib/test/test_runpy.py:88:11    	Impls   	U   	# Impls are permitted to add"
  - "Lib/test/test_runpy.py:795:14   	pymain  	U   	def test_pymain_run_file(self):"
  - "Lib/test/test_scope.py:54:38    	exta            	U   	adder4(): # XXX add exta level of indirection"
  - "Lib/test/test_scope.py:112:18   	Freevars        	U   	def testMixedFreevarsAndCellvars(self):"
  - "Lib/test/test_scope.py:112:29   	Cellvars        	U   	testMixedFreevarsAndCellvars(self):"
  - "Lib/test/test_scope.py:169:19   	Kwonly          	U   	def testCellIsKwonlyArg(self):"
  - "Lib/test/test_scope.py:170:23   	Initialisation  	U   	# Issue 1409: Initialisation of a cell value,"
  - "Lib/test/test_scope.py:196:13   	Unoptimized     	U   	def testUnoptimizedNamespaces(self):"
  - "Lib/test/test_scope.py:323:38   	Pedroni         	U   	Examples posted by Samuele Pedroni to python-dev on 3/"
  - "Lib/test/test_scope.py:540:13   	adaptgetter     	U   	def adaptgetter(name, klass, getter"
  - "Lib/test/test_scope.py:605:17   	nestedcell      	U   	nestedcell_get()"
  - "Lib/test/test_scope.py:646:55   	subscope        	U   	global y` is in a nested subscope"
  - "Lib/test/test_script_helper.py:120:52   	pythonhome  	U   	requires_environment_with_pythonhome(self, mock_check_call"
  - "Lib/test/test_selectors.py:32:17    	caddr   	U   	caddr = c.getsockname()"
  - "Lib/test/test_selectors.py:325:9    	bufs    	U   	bufs = []"
  - "Lib/test/test_selectors.py:406:14   	alrm    	U   	orig_alrm_handler = signal.signal"
  - "Lib/test/test_set.py:46:14      	otherword       	U   	self.otherword = 'madagascar'"
  - "Lib/test/test_set.py:48:23      	thetype         	U   	self.s = self.thetype(word)"
  - "Lib/test/test_set.py:55:14      	uniquification  	U   	def test_uniquification(self):"
  - "Lib/test/test_set.py:82:61      	efgfe           	U   	thetype('abcba').union(C('efgfe')), set('abcefg'))"
  - "Lib/test/test_set.py:82:76      	abcefg          	U   	union(C('efgfe')), set('abcefg'))"
  - "Lib/test/test_set.py:84:73      	abcef           	U   	union(C('ef')), set('abcef'))"
  - "Lib/test/test_set.py:114:68     	cbcf            	U   	abcba').intersection(C('cbcf'), C('bag')), set('b"
  - "Lib/test/test_set.py:126:13     	larg            	U   	for larg in '', 'a', 'ab', 'abc"
  - "Lib/test/test_set.py:126:44     	ababac          	U   	'a', 'ab', 'abc', 'ababac', 'cdc', 'cc', 'efgfe"
  - "Lib/test/test_set.py:128:17     	rarg            	U   	for rarg in '', 'a', 'ab', 'abc"
  - "Lib/test/test_set.py:208:47     	bdcb            	U   	['abcdef', 'bcd', 'bdcb', 'fed', 'fedccba']"
  - "Lib/test/test_set.py:208:62     	fedccba         	U   	bcd', 'bdcb', 'fed', 'fedccba'])"
  - "Lib/test/test_set.py:300:14     	badcmp          	U   	def test_badcmp(self):"
  - "Lib/test/test_set.py:483:49     	abcda           	U   	efgfe', 'ccb', 'ef', 'abcda'):"
  - "Lib/test/test_set.py:541:35     	abcdefghih      	U   	s = self.thetype('abcdefghih')"
  - "Lib/test/test_set.py:547:51     	cdefghih        	U   	assertEqual(s, self.thetype('cdefghih'))"
  - "Lib/test/test_set.py:551:51     	efghih          	U   	assertEqual(s, self.thetype('efghih'))"
  - "Lib/test/test_set.py:680:45     	abcdeb          	U   	ssertEqual(hash(self.thetype('abcdeb')),"
  - "Lib/test/test_set.py:681:45     	ebecda          	U   	hash(self.thetype('ebecda')))"
  - "Lib/test/test_set.py:696:24     	dictkey         	U   	def test_frozen_as_dictkey(self):"
  - "Lib/test/test_set.py:707:27     	abcdcda         	U   	f = self.thetype('abcdcda')"
  - "Lib/test/test_set.py:714:9      	hashvalues      	U   	hashvalues = set()"
  - "Lib/test/test_set.py:715:9      	addhashvalue    	U   	addhashvalue = hashvalues.add"
  - "Lib/test/test_set.py:716:9      	elemmasks       	U   	elemmasks = [(i+1, 1<<i) for i"
  - "Lib/test/test_set.py:866:9      	setiter         	U   	setiter = iter(self.set)"
  - "Lib/test/test_set.py:985:5      	baditer         	U   	def baditer():"
  - "Lib/test/test_set.py:989:5      	gooditer        	U   	def gooditer():"
  - "Lib/test/test_set.py:1294:13    	rcase           	U   	rcase = TestSubsets.reverse"
  - "Lib/test/test_set.py:1564:23    	alacazam        	U   	self.b = set('alacazam')"
  - "Lib/test/test_set.py:1566:14    	binops          	U   	def test_binopsVsSubsets(self):"
  - "Lib/test/test_set.py:1967:37    	Eppstein's      	U   	tests (based on David Eppstein's graph recipes ====="
  - "Lib/test/test_set.py:2036:9     	cubefaces       	U   	cubefaces = faces(g)"
  - "Lib/test/test_set.py:2041:14    	cuboctahedron   	U   	def test_cuboctahedron(self):"
  - "Lib/test/test_set.py:2054:9     	othervertices   	U   	othervertices = set(edge for edges"
  - "Lib/test/test_set.py:2057:9     	cubofaces       	U   	cubofaces = faces(cuboctahedron"
  - "Lib/test/test_set.py:2058:9     	facesizes       	U   	facesizes = collections.defaultdict"
  - "Lib/test/test_set.py:2065:51    	Cuboctahedron   	U   	# Cuboctahedron vertices are edges in"
  - "Lib/test/test_set.py:2067:17    	cubevert        	U   	for cubevert in edge:"
  - "Lib/test/test_setcomps.py:49:43     	setcomps	U   	error's are raised for setcomps used as lvalues"
  - "Lib/test/test_setcomps.py:64:13     	srange  	U   	>>> def srange(n):"
  - "Lib/test/test_shelve.py:12:7    	byteskeydict	U   	class byteskeydict(MutableMapping):"
  - "Lib/test/test_shelve.py:45:11   	shelftemp   	U   	fn = \"shelftemp.db\""
  - "Lib/test/test_shlex.py:9:39     	shellwords          	U   	test data set was from shellwords, by Hartmut Goebel."
  - "Lib/test/test_shlex.py:9:54     	Hartmut             	U   	from shellwords, by Hartmut Goebel."
  - "Lib/test/test_shlex.py:9:62     	Goebel              	U   	shellwords, by Hartmut Goebel."
  - "Lib/test/test_shlex.py:15:22    	fasel               	U   	foo bar bla fasel|foo|bar|bla|fasel|"
  - "Lib/test/test_shlex.py:32:7     	foo'bar'bar'fasel   	U   	blurb foo'bar'bar'fasel' baz|blurb|foo'bar'bar"
  - "Lib/test/test_shlex.py:45:14    	dfadf               	U   	\"foo\\\\ bar\\\" dfadf\"|\"foo\\\\ bar\\\"|dfadf"
  - "Lib/test/test_shlex.py:52:16    	df'a                	U   	\"foo\\\\\\x bar\\\" df'a\\ 'df'|\"foo\\\\\\x bar\\"
  - "Lib/test/test_shlex.py:64:16    	fo'obar             	U   	\"foo\\ x\\x\\\\\"\\'\"fo'obar\"|\"foo\\ x\\x\\\\\"|\\|'\"fo"
  - "Lib/test/test_shlex.py:64:46    	obar                	U   	foo\\ x\\x\\\\\"|\\|'\"fo'|obar\"|"
  - "Lib/test/test_shlex.py:71:1     	áéíóú               	U   	áéíóú|á|é|í|ó|ú|"
  - "Lib/test/test_shlex.py:94:36    	foobarbarfasel      	U   	bar\"fasel\" baz|blurb|foobarbarfasel|baz|"
  - "Lib/test/test_shlex.py:117:10   	foox                	U   	\\\"foo\\x|\"foox|"
  - "Lib/test/test_shlex.py:127:32   	x\\'fo'obar          	U   	\"\\'\"fo'obar\"|foo\\ x\\x\\'fo'obar|"
  - "Lib/test/test_shlex.py:194:29   	secho               	U   	'echo hi%secho bye' % delimiter]"
  - "Lib/test/test_shlex.py:334:9    	safeunquoted        	U   	safeunquoted = string.ascii_letters"
  - "Lib/test/test_shlex.py:366:17   	resplit             	U   	resplit = shlex.split(joined"
  - "Lib/test/test_shutil.py:153:43  	maxdata     	U   	the last line in the maxdata value"
  - "Lib/test/test_shutil.py:167:14  	tempdirs    	U   	self.tempdirs = []"
  - "Lib/test/test_shutil.py:190:37  	killme      	U   	os.path.join(tmp, 'killme')"
  - "Lib/test/test_shutil.py:290:30  	tstfile     	U   	write_file((tmpdir, \"tstfile\"), \"\")"
  - "Lib/test/test_shutil.py:586:9   	srcro       	U   	srcro = os.path.join(tmp_dir"
  - "Lib/test/test_shutil.py:593:9   	dstro       	U   	dstro = os.path.join(tmp_dir"
  - "Lib/test/test_shutil.py:898:9   	invokations 	U   	invokations = []"
  - "Lib/test/test_shutil.py:970:20  	cpfun       	U   	def custom_cpfun(a, b):"
  - "Lib/test/test_shutil.py:1077:42 	mypipe      	U   	os.path.join(subdir, \"mypipe\")"
  - "Lib/test/test_shutil.py:1389:35 	kjhkjhkjg   	U   	owner='kjhkjhkjg', group='oihohoh')"
  - "Lib/test/test_shutil.py:1389:54 	oihohoh     	U   	'kjhkjhkjg', group='oihohoh')"
  - "Lib/test/test_shutil.py:1658:42 	somevendor  	U   	path.join(src_dir, \"somevendor\", \"1.0\")"
  - "Lib/test/test_shutil.py:1822:14 	filexyz     	U   	temp_filexyz = tempfile.NamedTemporaryFile"
  - "Lib/test/test_shutil.py:2266:9  	zerocopy    	U   	def zerocopy_fun(self, *args, **kwargs"
  - "Lib/test/test_signal.py:59:46   	strsignal               	U   	sertRaises(ValueError, signal.strsignal, 4242)"
  - "Lib/test/test_signal.py:85:41   	signalinterproctester   	U   	path.join(dirname, 'signalinterproctester.py')"
  - "Lib/test/test_signal.py:163:12  	eryksun                 	U   	# @eryksun on https://github.com"
  - "Lib/test/test_signal.py:645:7   	Siginterrupt            	U   	class SiginterruptTest(unittest.TestCase"
  - "Lib/test/test_signal.py:647:9   	readpipe                	U   	def readpipe_interrupted(self, interrupt"
  - "Lib/test/test_signal.py:734:39  	getitimer               	U   	skipUnless(hasattr(signal, 'getitimer') and hasattr(signal"
  - "Lib/test/test_signal.py:734:72  	setitimer               	U   	and hasattr(signal, 'setitimer'),"
  - "Lib/test/test_signal.py:736:7   	Itimer                  	U   	class ItimerTest(unittest.TestCase"
  - "Lib/test/test_signal.py:738:14  	hndl                    	U   	self.hndl_called = False"
  - "Lib/test/test_signal.py:740:14  	itimer                  	U   	self.itimer = None"
  - "Lib/test/test_signal.py:752:13  	vtalrm                  	U   	def sig_vtalrm(self, *args):"
  - "Lib/test/test_signal.py:971:43  	sigwaitinfo             	U   	skipUnless(hasattr(signal, 'sigwaitinfo'),"
  - "Lib/test/test_signal.py:978:24  	signo                   	U   	if info.si_signo != signum:"
  - "Lib/test/test_signal.py:982:43  	sigtimedwait            	U   	skipUnless(hasattr(signal, 'sigtimedwait'),"
  - "Lib/test/test_signal.py:1189:9  	setsig                  	U   	def setsig(self, signum, handler"
  - "Lib/test/test_signal.py:1221:9  	reso                    	U   	reso = self.measure_itimer"
  - "Lib/test/test_signal.py:1406:7  	Pidfd                   	U   	class PidfdSignalTest(unittest.TestCase"
  - "Lib/test/test_signal.py:1416:52 	pidfds                  	U   	kernel does not support pidfds\")"
  - "Lib/test/test_signal.py:1418:57 	pidfs                   	U   	enough privileges to use pidfs\")"
  - "Lib/test/test_signal.py:1422:50 	siginfo                 	U   	ssertRaisesRegex(TypeError, \"^siginfo must be None$\"):"
  - "Lib/test/test_smtpd.py:28:25    	Okish   	U   	return '250 Okish'"
  - "Lib/test/test_smtpd.py:30:42    	okish   	U   	50 SMTPUTF8 message okish'"
  - "Lib/test/test_smtpd.py:943:26   	naï    	U   	'MAIL from: <naïve@example.com> BODY"
  - "Lib/test/test_smtpd.py:967:32   	examplé 	U   	'MAIL From: naïve@examplé BODY=8BITMIME SMTPUTF"
  - "Lib/test/test_smtpd.py:969:34   	späm    	U   	write_line('RCPT To:späm@examplé'.encode('utf"
  - "Lib/test/test_socket.py:42:16   	Gilfix          	U   	MSG = 'Michael Gilfix was here\\u1234\\r\\n'"
  - "Lib/test/test_socket.py:58:25   	vsock           	U   	with open(\"/dev/vsock\", \"rb\") as f:"
  - "Lib/test/test_socket.py:75:22   	isotp           	U   	def _have_socket_can_isotp():"
  - "Lib/test/test_socket.py:115:18  	qipcrtr         	U   	def _have_socket_qipcrtr():"
  - "Lib/test/test_socket.py:196:13  	UDPLITE         	U   	class SocketUDPLITETest(SocketUDPTest):"
  - "Lib/test/test_socket.py:223:40  	vcan            	U   	to run this test, a `vcan0` CAN interface can"
  - "Lib/test/test_socket.py:235:9   	canid           	U   	canid_t can_id; /* 32 bit"
  - "Lib/test/test_socket.py:250:24  	ival            	U   	struct timeval ival1, ival2;"
  - "Lib/test/test_socket.py:288:7   	Threadable      	U   	class ThreadableTest:"
  - "Lib/test/test_socket.py:492:15  	VSOCK           	U   	class ThreadedVSOCKSocketStreamTest(unittest"
  - "Lib/test/test_socket.py:504:25  	connaddr        	U   	self.conn, self.connaddr = self.serv.accept("
  - "Lib/test/test_socket.py:736:7   	SCTP            	U   	class SCTPStreamBase(InetTestBase"
  - "Lib/test/test_socket.py:775:9   	skipdec         	U   	def skipdec(obj):"
  - "Lib/test/test_socket.py:780:9   	noskipdec       	U   	def noskipdec(obj):"
  - "Lib/test/test_socket.py:852:14  	csocket         	U   	def test_csocket_repr(self):"
  - "Lib/test/test_socket.py:1009:9  	fqhn            	U   	fqhn = socket.getfqdn(ip"
  - "Lib/test/test_socket.py:1037:43 	sethostname     	U   	skipUnless(hasattr(socket, 'sethostname'), \"test needs socket"
  - "Lib/test/test_socket.py:1040:9  	oldhn           	U   	oldhn = socket.gethostname"
  - "Lib/test/test_socket.py:1057:46 	nameindex       	U   	hasattr(socket, 'if_nameindex'),"
  - "Lib/test/test_socket.py:1066:32 	nametoindex     	U   	_index = socket.if_nametoindex(name)"
  - "Lib/test/test_socket.py:1069:31 	indextoname     	U   	_name = socket.if_indextoname(index)"
  - "Lib/test/test_socket.py:1143:16 	Serv            	U   	def testGetServBy(self):"
  - "Lib/test/test_socket.py:1152:37 	qotd            	U   	services = ('daytime', 'qotd', 'domain')"
  - "Lib/test/test_socket.py:1171:13 	udpport         	U   	udpport = socket.getservbyname"
  - "Lib/test/test_socket.py:1177:33 	getservbyport   	U   	Issue #26936: Android getservbyport() is broken."
  - "Lib/test/test_socket.py:1214:28 	fourbytes       	U   	def testIPv4_inet_aton_fourbytes(self):"
  - "Lib/test/test_socket.py:1280:34 	afeb            	U   	f('45ef:76cb:1a:56ef:afeb:bac:1924:aeae')"
  - "Lib/test/test_socket.py:1280:48 	aeae            	U   	a:56ef:afeb:bac:1924:aeae')"
  - "Lib/test/test_socket.py:1317:48 	ntop            	U   	hasattr(socket, 'inet_ntop'),"
  - "Lib/test/test_socket.py:1444:14 	getsockaddrarg  	U   	def test_getsockaddrarg(self):"
  - "Lib/test/test_socket.py:1465:33 	ioctls          	U   	RUSTPYTHON, windows ioctls"
  - "Lib/test/test_socket.py:1588:19 	испытание       	U   	domain = 'испытание.pythontest.net'"
  - "Lib/test/test_socket.py:1736:14 	flowinfo        	U   	def test_flowinfo(self):"
  - "Lib/test/test_socket.py:1756:31 	scopeid         	U   	test_getaddrinfo_ipv6_scopeid_symbolic(self):"
  - "Lib/test/test_socket.py:1758:10 	ifindex         	U   	(ifindex, test_interface) = socket"
  - "Lib/test/test_socket.py:1793:9  	nameinfo        	U   	nameinfo = socket.getnameinfo"
  - "Lib/test/test_socket.py:1877:46 	stype           	U   	fileno(self, s, family, stype):"
  - "Lib/test/test_socket.py:2146:7  	ISOTP           	U   	class ISOTPTest(unittest.TestCase"
  - "Lib/test/test_socket.py:2337:12 	QIPCRTR         	U   	class BasicQIPCRTRTest(unittest.TestCase"
  - "Lib/test/test_socket.py:2431:19 	Rfcomm          	U   	def testCreateRfcommSocket(self):"
  - "Lib/test/test_socket.py:2640:36 	Sendrecvmsg     	U   	vmsgGenericTests inherit from SendrecvmsgBase and expect to be"
  - "Lib/test/test_socket.py:2649:14 	Dgram           	U   	# SendrecvmsgDgramBase and SendrecvmsgConnectedB"
  - "Lib/test/test_socket.py:2725:43 	checkset        	U   	self, flags, eor=None, checkset=0, checkunset=0, ignore"
  - "Lib/test/test_socket.py:2725:55 	checkunset      	U   	eor=None, checkset=0, checkunset=0, ignore=0):"
  - "Lib/test/test_socket.py:2753:9  	defaultset      	U   	defaultset = self.msg_flags_common"
  - "Lib/test/test_socket.py:2754:9  	defaultunset    	U   	defaultunset = self.msg_flags_common"
  - "Lib/test/test_socket.py:2770:9  	inboth          	U   	inboth = checkset & checkunset"
  - "Lib/test/test_socket.py:2808:18 	Connectionless  	U   	class SendrecvmsgConnectionlessBase(SendrecvmsgBase"
  - "Lib/test/test_socket.py:2809:31 	connectionless  	U   	Base class for tests on connectionless-mode sockets. Users"
  - "Lib/test/test_socket.py:2921:23 	Cmsg            	U   	def testSendmsgBadCmsg(self):"
  - "Lib/test/test_socket.py:3353:31 	socketmodule    	U   	Match the definition in socketmodule.c"
  - "Lib/test/test_socket.py:3357:9  	socklen         	U   	socklen_t_limit = 0x7fffffff"
  - "Lib/test/test_socket.py:3362:13 	CMSG            	U   	def testCMSG_LEN(self):"
  - "Lib/test/test_socket.py:3368:18 	cmsghdr         	U   	# struct cmsghdr has at least three members"
  - "Lib/test/test_socket.py:3413:5  	badfd           	U   	badfd = -0x5555"
  - "Lib/test/test_socket.py:3459:31 	numfds          	U   	checkRecvmsgFDs(self, numfds, result, maxcmsgs=1"
  - "Lib/test/test_socket.py:3459:47 	maxcmsgs        	U   	self, numfds, result, maxcmsgs=1, ignoreflags=0):"
  - "Lib/test/test_socket.py:3459:59 	ignoreflags     	U   	result, maxcmsgs=1, ignoreflags=0):"
  - "Lib/test/test_socket.py:3717:35 	ancbuf          	U   	checkTruncatedArray(self, ancbuf, maxdata, mindata=0"
  - "Lib/test/test_socket.py:3717:52 	mindata         	U   	self, ancbuf, maxdata, mindata=0):"
  - "Lib/test/test_socket.py:3795:29 	ancbufsize      	U   	checkHopLimit(self, ancbufsize, maxhop=255, ignoreflags"
  - "Lib/test/test_socket.py:3795:41 	maxhop          	U   	eckHopLimit(self, ancbufsize, maxhop=255, ignoreflags=0)"
  - "Lib/test/test_socket.py:3887:9  	ancmap          	U   	ancmap = self.ancillaryMapping"
  - "Lib/test/test_socket.py:3889:9  	tcdata          	U   	tcdata = ancmap[(socket.IPPROTO"
  - "Lib/test/test_socket.py:3896:9  	hldata          	U   	hldata = ancmap[(socket.IPPROTO"
  - "Lib/test/test_socket.py:4646:31 	getblocking     	U   	self.assertEqual(sock.getblocking(), blocking)"
  - "Lib/test/test_socket.py:5249:21 	Nonamed         	U   	testTimeoutValueNonamed = _justAccept"
  - "Lib/test/test_socket.py:5402:26 	invalidfd       	U   	def test_setblocking_invalidfd(self):"
  - "Lib/test/test_socket.py:5457:13 	Autobind        	U   	def testAutobind(self):"
  - "Lib/test/test_socket.py:5523:13 	Surrogateescape 	U   	def testSurrogateescapeBind(self):"
  - "Lib/test/test_socket.py:5532:13 	Unencodable     	U   	def testUnencodableAddr(self):"
  - "Lib/test/test_socket.py:5635:7  	Tipc            	U   	def isTipcAvailable():"
  - "Lib/test/test_socket.py:5651:33 	tipc            	U   	if line.startswith(\"tipc \"):"
  - "Lib/test/test_socket.py:5657:7  	TIPC            	U   	class TIPCTest(unittest.TestCase"
  - "Lib/test/test_socket.py:5665:9  	srvaddr         	U   	srvaddr = (socket.TIPC_ADDR"
  - "Lib/test/test_socket.py:5669:9  	sendaddr        	U   	sendaddr = (socket.TIPC_ADDR"
  - "Lib/test/test_socket.py:5673:14 	recvaddr        	U   	msg, recvaddr = srv.recvfrom(1024"
  - "Lib/test/test_socket.py:5708:14 	cliaddr         	U   	self.cliaddr = self.cli.getsockname"
  - "Lib/test/test_socket.py:5770:19 	CLOEXEC         	U   	def test_SOCK_CLOEXEC(self):"
  - "Lib/test/test_socket.py:5835:7  	Nonblock        	U   	class NonblockConstantTest(unittest"
  - "Lib/test/test_socket.py:5864:19 	NONBLOCK        	U   	def test_SOCK_NONBLOCK(self):"
  - "Lib/test/test_socket.py:5906:9  	sdata           	U   	sdata = q.get()"
  - "Lib/test/test_socket.py:6334:9  	msglen          	U   	msglen = len(msg)"
  - "Lib/test/test_socket.py:6335:31 	skcipher        	U   	with self.create_alg('skcipher', 'cbc(aes)') as algo"
  - "Lib/test/test_socket.py:6339:28 	afalg           	U   	op.sendmsg_afalg(op=socket.ALG_OP_ENCRYPT"
  - "Lib/test/test_socket.py:6380:9  	taglen          	U   	taglen = len(expected_tag)"
  - "Lib/test/test_socket.py:6381:9  	assoclen        	U   	assoclen = len(assoc)"
  - "Lib/test/test_socket.py:6437:14 	drbg            	U   	def test_drbg_pr_sha256(self):"
  - "Lib/test/test_socket.py:6474:11 	salg            	U   	# salg_type[14]"
  - "Lib/test/test_socket.py:6488:14 	OSTCP           	U   	class TestMacOSTCPFlags(unittest.TestCase"
  - "Lib/test/test_socketserver.py:93:9      	pickaddr	U   	def pickaddr(self, proto):"
  - "Lib/test/test_socketserver.py:104:33    	svrcls  	U   	make_server(self, addr, svrcls, hdlrbase):"
  - "Lib/test/test_socketserver.py:104:41    	hdlrbase	U   	self, addr, svrcls, hdlrbase):"
  - "Lib/test/test_sort.py:7:1       	nerrors     	U   	nerrors = 0"
  - "Lib/test/test_sort.py:43:13     	Stressfully 	U   	def testStressfully(self):"
  - "Lib/test/test_sort.py:155:9     	memorywaster	U   	memorywaster = []"
  - "Lib/test/test_sort.py:172:23    	Undecorate  	U   	class TestDecorateSortUndecorate(unittest.TestCase):"
  - "Lib/test/test_sort.py:180:13    	xlower      	U   	xlower, ylower = x.lower()"
  - "Lib/test/test_sort.py:180:21    	ylower      	U   	xlower, ylower = x.lower(), y.lower"
  - "Lib/test/test_sort.py:274:8     	richcompares	U   	## richcompares."
  - "Lib/test/test_sort.py:314:27    	ppperry     	U   	# This test is by ppperry. It ensures that unsafe"
  - "Lib/test/test_sqlite3/test_backup.py:15:29      	bckcx   	U   	verify_backup(self, bckcx):"
  - "Lib/test/test_sqlite3/test_cli.py:18:32     	Xutf	U   	[sys.executable, \"-Xutf8\", \"-m\", \"sqlite3\","
  - "Lib/test/test_sqlite3/test_dbapi.py:1:18    	dbapi           	U   	# pysqlite2/test/dbapi.py: tests for DB-API"
  - "Lib/test/test_sqlite3/test_dbapi.py:34:9    	emscripten      	U   	#is_emscripten, is_wasi"
  - "Lib/test/test_sqlite3/test_dbapi.py:54:20   	setlimit        	U   	_prev = cx.setlimit(category, limit)"
  - "Lib/test/test_sqlite3/test_dbapi.py:77:30   	threadsafety    	U   	self.assertIn(sqlite.threadsafety, {0, 1, 3},"
  - "Lib/test/test_sqlite3/test_dbapi.py:396:52  	mydb            	U   	\"/foo/bar/bla/23534/mydb.db\""
  - "Lib/test/test_sqlite3/test_dbapi.py:443:34  	transactiontest 	U   	execute(\"create table transactiontest(id integer primary key"
  - "Lib/test/test_sqlite3/test_dbapi.py:495:31  	getlimit        	U   	saved_limit = self.cx.getlimit(category)"
  - "Lib/test/test_sqlite3/test_dbapi.py:595:7   	Uninitialised   	U   	class UninitialisedConnectionTests(unittest"
  - "Lib/test/test_sqlite3/test_dbapi.py:599:14  	uninit          	U   	def test_uninit_operations(self):"
  - "Lib/test/test_sqlite3/test_dbapi.py:674:68  	Emscripten      	U   	wasi, \"not supported on Emscripten/WASI\")"
  - "Lib/test/test_sqlite3/test_dbapi.py:831:70  	lastrowid       	U   	where id=?\", (self.cu.lastrowid,))"
  - "Lib/test/test_sqlite3/test_dbapi.py:843:70  	Egon            	U   	values (?)\", (17, \"Egon\"))"
  - "Lib/test/test_sqlite3/test_dbapi.py:984:23  	vaccuum         	U   	def test_rowcount_vaccuum(self):"
  - "Lib/test/test_sqlite3/test_dbapi.py:1022:13 	mygen           	U   	def mygen():"
  - "Lib/test/test_sqlite3/test_dbapi.py:1066:34 	arraysize       	U   	assertEqual(self.cu.arraysize, 1)"
  - "Lib/test/test_sqlite3/test_dbapi.py:1103:14 	setinputsizes   	U   	def test_setinputsizes(self):"
  - "Lib/test/test_sqlite3/test_dbapi.py:1106:14 	setoutputsize   	U   	def test_setoutputsize(self):"
  - "Lib/test/test_sqlite3/test_dbapi.py:1170:47 	newcol          	U   	alter table test add newcol\")"
  - "Lib/test/test_sqlite3/test_dbapi.py:1187:29 	blobopen        	U   	self.blob = self.cx.blobopen(\"test\", \"b\", 1)"
  - "Lib/test/test_sqlite3/test_dbapi.py:1252:57 	rowid           	U   	test set b='aaaa' where rowid=1\")"
  - "Lib/test/test_sqlite3/test_dbapi.py:1297:42 	notexisting     	U   	\"b\", 1), {\"name\": \"notexisting\"}),"
  - "Lib/test/test_sqlite3/test_dbapi.py:1478:50 	zeroblob        	U   	insert into test values (zeroblob(100))\")"
  - "Lib/test/test_sqlite3/test_dbapi.py:1647:50 	sadfsadfdsa     	U   	cutescript(\"create table test(sadfsadfdsa); select foo from hurz"
  - "Lib/test/test_sqlite3/test_dbapi.py:1647:80 	hurz            	U   	sadfsadfdsa); select foo from hurz;\")"
  - "Lib/test/test_sqlite3/test_dump.py:19:18    	sqls	U   	expected_sqls = ["
  - "Lib/test/test_sqlite3/test_factory.py:273:20    	Österreich  	U   	austria = \"Österreich\""
  - "Lib/test/test_sqlite3/test_hooks.py:30:29   	userfunctions   	U   	test.test_sqlite3.test_userfunctions import with_tracebacks"
  - "Lib/test/test_sqlite3/test_hooks.py:49:31   	collä           	U   	con.create_collation(\"collä\", lambda x, y: (x >"
  - "Lib/test/test_sqlite3/test_hooks.py:56:9    	mycoll          	U   	mycoll = lambda x, y: -((x"
  - "Lib/test/test_sqlite3/test_regression.py:83:53      	unfinalised 	U   	Unable to close due to unfinalised statements\"."
  - "Lib/test/test_sqlite3/test_regression.py:159:58     	colname     	U   	'xxx' || ? || 'yyy' colname\","
  - "Lib/test/test_sqlite3/test_transactions.py:144:35   	iternext    	U   	multiple_cursors_and_iternext(self):"
  - "Lib/test/test_sqlite3/test_transactions.py:344:30   	deferrred   	U   	test_isolation_level_deferrred(self):"
  - "Lib/test/test_sqlite3/test_types.py:175:17  	cbin        	U   	cbin cblob)"
  - "Lib/test/test_sqlite3/test_types.py:175:22  	cblob       	U   	cbin cblob)"
  - "Lib/test/test_sqlite3/test_types.py:187:50  	blobish     	U   	CBLOB\"] = lambda x: b\"blobish\""
  - "Lib/test/test_sqlite3/test_types.py:245:20  	sterreich   	U   	val = \"\\xd6sterreich\""
  - "Lib/test/test_sqlite3/test_types.py:356:37  	colnames    	U   	if the stripping of colnames works. Everything after"
  - "Lib/test/test_sqlite3/test_userfunctions.py:75:10   	returntext          	U   	def func_returntext():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:77:10   	returntextwithnull  	U   	def func_returntextwithnull():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:79:10   	returnunicode       	U   	def func_returnunicode():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:81:10   	returnint           	U   	def func_returnint():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:83:10   	returnfloat         	U   	def func_returnfloat():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:85:10   	returnnull          	U   	def func_returnnull():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:87:10   	returnblob          	U   	def func_returnblob():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:89:10   	returnlonglong      	U   	def func_returnlonglong():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:91:10   	raiseexception      	U   	def func_raiseexception():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:198:35  	returnnan           	U   	con.create_function(\"returnnan\", 0, lambda: float("
  - "Lib/test/test_sqlite3/test_userfunctions.py:199:35  	returntoolargeint   	U   	con.create_function(\"returntoolargeint\", 0, lambda: 1 << 6"
  - "Lib/test/test_sqlite3/test_userfunctions.py:200:42  	noncont             	U   	create_function(\"return_noncont_blob\", 0,"
  - "Lib/test/test_sqlite3/test_userfunctions.py:206:35  	isblob              	U   	con.create_function(\"isblob\", 1, lambda x: isinstance"
  - "Lib/test/test_sqlite3/test_userfunctions.py:207:35  	isnone              	U   	con.create_function(\"isnone\", 1, lambda x: x is"
  - "Lib/test/test_sqlite3/test_userfunctions.py:227:13  	getfunc             	U   	def getfunc():"
  - "Lib/test/test_sqlite3/test_userfunctions.py:233:37  	reftest             	U   	con.create_function(\"reftest\", 0, getfunc())"
  - "Lib/test/test_sqlite3/test_userfunctions.py:453:39  	largeint            	U   	con.create_function(\"largeint\", 0, lambda value=value"
  - "Lib/test/test_sqlite3/test_userfunctions.py:460:35  	pychr               	U   	con.create_function(\"pychr\", 1, chr)"
  - "Lib/test/test_sqlite3/test_userfunctions.py:470:39  	largetext           	U   	con.create_function(\"largetext\", 0, lambda size=size"
  - "Lib/test/test_sqlite3/test_userfunctions.py:479:39  	largeblob           	U   	con.create_function(\"largeblob\", 0, lambda size=size"
  - "Lib/test/test_sqlite3/test_userfunctions.py:484:35  	badreturn           	U   	con.create_function(\"badreturn\", 0, lambda: self)"
  - "Lib/test/test_sqlite3/test_userfunctions.py:541:42  	sumint              	U   	create_window_function(\"sumint\", 1, WindowSumInt)"
  - "Lib/test/test_sqlite3/test_userfunctions.py:550:28  	shouldfail          	U   	\"shouldfail\", -100, WindowSumInt"
  - "Lib/test/test_sqlite3/test_userfunctions.py:664:36  	nostep              	U   	con.create_aggregate(\"nostep\", 1, AggrNoStep)"
  - "Lib/test/test_sqlite3/test_userfunctions.py:665:36  	nofinalize          	U   	con.create_aggregate(\"nofinalize\", 1, AggrNoFinalize"
  - "Lib/test/test_sqlite3/test_userfunctions.py:679:14  	aggr                	U   	def test_aggr_error_on_create(self"
  - "Lib/test/test_stat.py:15:5      	statmod 	U   	statmod = None"
  - "Lib/test/test_stat.py:96:9      	modestr 	U   	modestr = self.statmod.filemode"
  - "Lib/test/test_stat.py:160:40    	drwx    	U   	assertEqual(modestr, 'drwx------')"
  - "Lib/test/test_stat.py:187:36    	prwx    	U   	assertEqual(modestr, 'prwx------')"
  - "Lib/test/test_stat.py:197:13    	blockdev	U   	for blockdev in (\"/dev/sda\", \"/dev"
  - "Lib/test/test_stat.py:214:13    	modvalue	U   	modvalue = getattr(self.statmod"
  - "Lib/test/test_statistics.py:60:5    	aexp            	U   	aexp = a.as_tuple()[2]"
  - "Lib/test/test_statistics.py:61:5    	bexp            	U   	bexp = b.as_tuple()[2]"
  - "Lib/test/test_statistics.py:602:9   	nzero           	U   	nzero = math.copysign(0.0"
  - "Lib/test/test_statistics.py:639:14  	numerictestcase 	U   	def test_numerictestcase_is_testcase(self):"
  - "Lib/test/test_statistics.py:1042:11 	Lteq            	U   	class FindLteqTest(unittest.TestCase"
  - "Lib/test/test_statistics.py:1065:11 	Rteq            	U   	class FindRteqTest(unittest.TestCase"
  - "Lib/test/test_statistics.py:1350:22 	extendedcontext 	U   	def test_decimal_extendedcontext_mismatched_infs_to_nan"
  - "Lib/test/test_statistics.py:1357:22 	basiccontext    	U   	def test_decimal_basiccontext_mismatched_infs_to_nan"
  - "Lib/test/test_statistics.py:1865:17 	abcbdb          	U   	data = 'abcbdb'"
  - "Lib/test/test_statistics.py:1991:22 	Geremy          	U   	# (Thanks to Geremy Condra.)"
  - "Lib/test/test_statistics.py:1991:29 	Condra          	U   	# (Thanks to Geremy Condra.)"
  - "Lib/test/test_statistics.py:2415:11 	Bivariate       	U   	class TestBivariateStatistics(unittest.TestCase"
  - "Lib/test/test_statistics.py:2617:9  	cdfs            	U   	cdfs = [X.cdf(x) for x in"
  - "Lib/test/test_statistics.py:2619:18 	montonic        	U   	# Verify montonic"
  - "Lib/test/test_statistics.py:2725:31 	Imman           	U   	Match examples from Imman and Bradley"
  - "Lib/test/test_statistics.py:2879:15 	Lognormal       	U   	class LognormalDist:"
  - "Lib/test/test_strftime.py:14:5      	fixasctime  	U   	def fixasctime(s):"
  - "Lib/test/test_strftime.py:19:5      	escapestr   	U   	def escapestr(text, ampm):"
  - "Lib/test/test_strftime.py:19:21     	ampm        	U   	def escapestr(text, ampm):"
  - "Lib/test/test_strftime.py:70:14     	strftest    	U   	self.strftest1(now)"
  - "Lib/test/test_strftime.py:133:9     	nowsecs     	U   	nowsecs = str(int(now))[:-1"
  - "Lib/test/test_strftime.py:156:50    	fieldwidth  	U   	century rendered using fieldwidth'),"
  - "Lib/test/test_string.py:256:14  	tupleargs   	U   	def test_tupleargs(self):"
  - "Lib/test/test_string.py:351:17  	badname     	U   	(?P<badname>.*)"
  - "Lib/test/test_string.py:372:9   	tmpl        	U   	tmpl = 'PyCon in $@@location"
  - "Lib/test/test_string.py:417:25  	xffm        	U   	d = dict(who='t\\xffm', what='f\\xfe\\fed')"
  - "Lib/test/test_stringprep.py:54:39   	ufff	U   	assertTrue(in_table_c6(\"\\ufff9\"))"
  - "Lib/test/test_strtod.py:49:57   	binade  	U   	lies in a different binade from a/b"
  - "Lib/test/test_strtod.py:74:5    	hexdigs 	U   	hexdigs = 1 + (mant_dig-2)/"
  - "Lib/test/test_strtod.py:86:7    	Strtod  	U   	class StrtodTests(unittest.TestCase"
  - "Lib/test/test_strtod.py:213:14  	bigcomp 	U   	def test_bigcomp(self):"
  - "Lib/test/test_strtod.py:214:13  	ndigs   	U   	for ndigs in 5, 10, 14, 15, 1"
  - "Lib/test/test_strtod.py:344:43  	quorem  	U   	oversized quotient in quorem' message."
  - "Lib/test/test_strtod.py:432:35  	Regan   	U   	Value found by Rick Regan that gives a result"
  - "Lib/test/test_struct.py:18:1    	byteorders          	U   	byteorders = '', '@', '=', '<'"
  - "Lib/test/test_struct.py:37:14   	isbigendian         	U   	def test_isbigendian(self):"
  - "Lib/test/test_struct.py:46:16   	cbxxxxxxhhhhiillffd 	U   	fmt = 'cbxxxxxxhhhhiillffd?'"
  - "Lib/test/test_struct.py:72:29   	xcbhilfd            	U   	for format in ('xcbhilfd?', 'xcBHILfd?'):"
  - "Lib/test/test_struct.py:186:22  	bitsize             	U   	self.bitsize = self.bytesize * 8"
  - "Lib/test/test_struct.py:341:36  	expectedback        	U   	code, input, expected, expectedback in ["
  - "Lib/test/test_struct.py:373:13  	bigpacked           	U   	bigpacked = struct.pack(\">f\","
  - "Lib/test/test_struct.py:528:9   	hugecount           	U   	hugecount = '{}b'.format(sys.maxsize"
  - "Lib/test/test_struct.py:560:52  	reinitializing      	U   	was a memory leak when reinitializing a"
  - "Lib/test/test_struct.py:568:9   	totalsize           	U   	totalsize = support.calcobjsize"
  - "Lib/test/test_struct.py:569:37  	formatcode          	U   	size taken up by the 'formatcode' dynamic array"
  - "Lib/test/test_struct.py:577:31  	Lfdsp               	U   	self.check_sizeof('BHILfdspP', 9)"
  - "Lib/test/test_struct.py:646:33  	decrefed            	U   	the Struct object was decrefed twice and the reference"
  - "Lib/test/test_struct.py:727:29  	ibcp                	U   	s = struct.Struct('>ibcp')"
  - "Lib/test/test_struct.py:845:46  	Underflows          	U   	\\x00', 2.0**-25), # Underflows to zero (nearest even"
  - "Lib/test/test_structseq.py:98:14    	eviltuple   	U   	def test_eviltuple(self):"
  - "Lib/test/test_structseq.py:102:36   	structseqs  	U   	Devious code could crash structseqs' constructors"
  - "Lib/test/test_subclassinit.py:221:45    	otherarg	U   	MyClass(metaclass=MyMeta, otherarg=1):"
  - "Lib/test/test_subprocess.py:104:62  	filehandles         	U   	cleanup of subprocess.PIPE filehandles when"
  - "Lib/test/test_subprocess.py:389:72  	memb                	U   	doesn't expand Tru64 {memb}"
  - "Lib/test/test_subprocess.py:458:9   	doesntexist         	U   	doesntexist = \"somethingyoudonthave"
  - "Lib/test/test_subprocess.py:458:24  	somethingyoudonthave	U   	doesntexist = \"somethingyoudonthave\""
  - "Lib/test/test_subprocess.py:513:20  	filedes             	U   	def test_stdin_filedes(self):"
  - "Lib/test/test_subprocess.py:694:14  	pipesizes           	U   	def test_pipesizes(self):"
  - "Lib/test/test_subprocess.py:1104:44 	eline               	U   	assertTrue(stderr.startswith(\"eline2\\neline6\\neline7\\n\""
  - "Lib/test/test_subprocess.py:1104:51 	neline              	U   	stderr.startswith(\"eline2\\neline6\\neline7\\n\"))"
  - "Lib/test/test_subprocess.py:1442:9  	ifhandle            	U   	ifhandle, ifname = tempfile.mkstemp"
  - "Lib/test/test_subprocess.py:1442:19 	ifname              	U   	ifhandle, ifname = tempfile.mkstemp("
  - "Lib/test/test_subprocess.py:1443:9  	ofhandle            	U   	ofhandle, ofname = tempfile.mkstemp"
  - "Lib/test/test_subprocess.py:1444:9  	efhandle            	U   	efhandle, efname = tempfile.mkstemp"
  - "Lib/test/test_subprocess.py:1444:19 	efname              	U   	efhandle, efname = tempfile.mkstemp("
  - "Lib/test/test_subprocess.py:1513:26 	eintr               	U   	def test_communicate_eintr(self):"
  - "Lib/test/test_subprocess.py:1564:20 	getitems            	U   	def test_class_getitems(self):"
  - "Lib/test/test_subprocess.py:1766:34 	nogroup             	U   	group in ('staff', 'nogroup', 'grp', 'nobody',"
  - "Lib/test/test_subprocess.py:1766:62 	nfsnobody           	U   	, 'grp', 'nobody', 'nfsnobody'):"
  - "Lib/test/test_subprocess.py:1788:65 	perror              	U   	errno value or the OS perror()"
  - "Lib/test/test_subprocess.py:2200:17 	devzero             	U   	devzero_fds = [os.open(\"/dev"
  - "Lib/test/test_subprocess.py:2737:9  	envb                	U   	envb = os.environb.copy("
  - "Lib/test/test_subprocess.py:2743:63 	subprocessdata      	U   	reader.py\", subdir=\"subprocessdata\")"
  - "Lib/test/test_subprocess.py:2766:9  	qcat                	U   	qcat = support.findfile("
  - "Lib/test/test_subprocess.py:2767:9  	qgrep               	U   	qgrep = support.findfile("
  - "Lib/test/test_subprocess.py:2769:9  	subdata             	U   	subdata = b'zxcvbn'"
  - "Lib/test/test_subprocess.py:2798:9  	readfiles           	U   	readfiles, ignored1, ignored2"
  - "Lib/test/test_subprocess.py:2857:32 	fdescfs             	U   	\"Requires fdescfs mounted on /dev/fd on"
  - "Lib/test/test_subprocess.py:2859:61 	valgrind            	U   	fixed (may fail under valgrind).\"\"\""
  - "Lib/test/test_subprocess.py:2866:55 	aftr                	U   	lowers its RLIMIT_NOFILE aftr setting up"
  - "Lib/test/test_subprocess.py:2867:59 	rlimit              	U   	above the new lower rlimit."
  - "Lib/test/test_subprocess.py:2900:9  	rlim                	U   	rlim_cur, rlim_max = resource"
  - "Lib/test/test_subprocess.py:3001:46 	redirections        	U   	if they are used in redirections."
  - "Lib/test/test_subprocess.py:3002:23 	izbyshev            	U   	# Contributed by @izbyshev."
  - "Lib/test/test_subprocess.py:3047:24 	sigchild            	U   	def test_wait_when_sigchild_ignored(self):"
  - "Lib/test/test_subprocess.py:3512:28 	physalis            	U   	newenv[\"FRUIT\"] = \"physalis\""
  - "Lib/test/test_subprocess.py:3622:47 	popener             	U   	yboardinterrupt_no_kill(self, popener, mock__communicate,"
  - "Lib/test/test_subprocess.py:3768:14 	noshell             	U   	def test_noshell_string_with_spaces(self"
  - "Lib/test/test_super.py:123:24   	instancemethod  	U   	def test___class___instancemethod(self):"
  - "Lib/test/test_support.py:87:9       	subdirpath      	U   	subdirpath = os.path.join(dirpath"
  - "Lib/test/test_support.py:530:16     	Wignore         	U   	['-Wignore'],"
  - "Lib/test/test_support.py:597:39     	filetests       	U   	support.set_match_tests(['filetests'], None)"
  - "Lib/test/test_support.py:602:53     	metacharacter   	U   	containing '.' and a '*' metacharacter"
  - "Lib/test/test_support.py:699:7      	umaks           	U   	# umaks"
  - "Lib/test/test_symtable.py:221:13    	checkfilename   	U   	def checkfilename(brokencode, offset)"
  - "Lib/test/test_symtable.py:221:27    	brokencode      	U   	def checkfilename(brokencode, offset):"
  - "Lib/test/test_syntax.py:294:44  	spezialiced 	U   	missing commas or other spezialiced errors"
  - "Lib/test/test_syntax.py:1073:14 	Blech       	U   	>>> class Blech(A):"
  - "Lib/test/test_syntax.py:1293:9  	errtest     	U   	errtest is a regular expression"
  - "Lib/test/test_syntax.py:1470:31 	linecont    	U   	test_empty_line_after_linecont(self):"
  - "Lib/test/test_syntax.py:1551:29 	nfgdfgf     	U   	self._check_error('\\nfgdfgf\\n1,\\\\#\\n2\\n',"
  - "Lib/test/test_sys_setprofile.py:17:14   	setget  	U   	def test_setget(self):"
  - "Lib/test/test_sys_setprofile.py:41:13   	frameno 	U   	frameno = self.frames.index"
  - "Lib/test/test_sys_settrace.py:12:7      	tracecontext        	U   	class tracecontext:"
  - "Lib/test/test_sys_settrace.py:24:7      	asynctracecontext   	U   	class asynctracecontext:"
  - "Lib/test/test_sys_settrace.py:36:11     	asynciter           	U   	async def asynciter(iterable):"
  - "Lib/test/test_sys_settrace.py:58:5      	arigo               	U   	def arigo_example0():"
  - "Lib/test/test_sys_settrace.py:181:26    	tracefunc           	U   	settrace_and_return(tracefunc):"
  - "Lib/test/test_sys_settrace.py:212:5     	ireturn             	U   	def ireturn_example():"
  - "Lib/test/test_sys_settrace.py:228:5     	tightloop           	U   	def tightloop_example():"
  - "Lib/test/test_sys_settrace.py:254:5     	tighterloop         	U   	def tighterloop_example():"
  - "Lib/test/test_sys_settrace.py:320:18    	Genexp              	U   	def traceWithGenexp(self, frame, event,"
  - "Lib/test/test_sys_settrace.py:331:7     	deallocators        	U   	# deallocators may be traced as well"
  - "Lib/test/test_sys_settrace.py:429:17    	onliner             	U   	def test_14_onliner_if(self):"
  - "Lib/test/test_sys_settrace.py:430:13    	onliners            	U   	def onliners():"
  - "Lib/test/test_sys.py:65:13      	baddisplayhook                  	U   	def baddisplayhook(obj):"
  - "Lib/test/test_sys.py:173:45     	unflushed                       	U   	sys; sys.stderr.write(\"unflushed,\"); sys.exit(\"message"
  - "Lib/test/test_sys.py:217:9      	oldlimit                        	U   	oldlimit = sys.getrecursionlimit"
  - "Lib/test/test_sys.py:315:40     	setdlopenflags                  	U   	skipUnless(hasattr(sys, \"setdlopenflags\"),"
  - "Lib/test/test_sys.py:317:14     	dlopenflags                     	U   	def test_dlopenflags(self):"
  - "Lib/test/test_sys.py:318:39     	getdlopenflags                  	U   	assertTrue(hasattr(sys, \"getdlopenflags\"))"
  - "Lib/test/test_sys.py:320:9      	oldflags                        	U   	oldflags = sys.getdlopenflags"
  - "Lib/test/test_sys.py:401:45     	sourceline                      	U   	filename, lineno, funcname, sourceline) in enumerate(stack"
  - "Lib/test/test_sys.py:513:20     	primality                       	U   	# probable primality test (doesn't exclude"
  - "Lib/test/test_sys.py:651:14     	ioencoding                      	U   	def test_ioencoding(self):"
  - "Lib/test/test_sys.py:730:15     	fsencoding                      	U   	def check_fsencoding(self, fs_encoding, expected"
  - "Lib/test/test_sys.py:844:14     	debugmallocstats                	U   	def test_debugmallocstats(self):"
  - "Lib/test/test_sys.py:961:18     	tracebacklimit                  	U   	def test_sys_tracebacklimit(self):"
  - "Lib/test/test_sys.py:997:41     	enablelegacywindowsfsencoding   	U   	skipUnless(hasattr(sys, \"_enablelegacywindowsfsencoding\"),"
  - "Lib/test/test_sys.py:1170:14    	longdigit                       	U   	self.longdigit = sys.int_info.sizeof"
  - "Lib/test/test_sys.py:1172:17    	headsize                        	U   	self.gc_headsize = _testinternalcapi"
  - "Lib/test/test_sys.py:1221:14    	objecttypes                     	U   	def test_objecttypes(self):"
  - "Lib/test/test_sys.py:1280:9     	longdict                        	U   	longdict = {1:1, 2:2, 3:3, 4"
  - "Lib/test/test_sys.py:1282:22    	keyview                         	U   	# dictionary-keyview"
  - "Lib/test/test_sys.py:1284:22    	valueview                       	U   	# dictionary-valueview"
  - "Lib/test/test_sys.py:1286:22    	itemview                        	U   	# dictionary-itemview"
  - "Lib/test/test_sys.py:1319:15    	floatinfo                       	U   	# sys.floatinfo"
  - "Lib/test/test_sys.py:1325:9     	ncells                          	U   	ncells = len(x.f_code.co_cellvars"
  - "Lib/test/test_sys.py:1326:9     	nfrees                          	U   	nfrees = len(x.f_code.co_freevars"
  - "Lib/test/test_sys.py:1356:11    	sortwrapper                     	U   	# sortwrapper (list)"
  - "Lib/test/test_sys.py:1358:11    	cmpwrapper                      	U   	# cmpwrapper (list)"
  - "Lib/test/test_sys.py:1360:11    	listiterator                    	U   	# listiterator (list)"
  - "Lib/test/test_sys.py:1362:11    	listreverseiterator             	U   	# listreverseiterator (list)"
  - "Lib/test/test_sys.py:1384:17    	delx                            	U   	def delx(self): del self.__x"
  - "Lib/test/test_sys.py:1389:11    	rangeiterator                   	U   	# rangeiterator"
  - "Lib/test/test_sys.py:1402:13    	minused                         	U   	minused = len(sample)"
  - "Lib/test/test_sys.py:1407:13    	newsize                         	U   	newsize = PySet_MINSIZE"
  - "Lib/test/test_sys.py:1416:11    	setiterator                     	U   	# setiterator"
  - "Lib/test/test_sys.py:1427:33    	PIPP                            	U   	= 'P2nPI13Pl4Pn9Pn11PIPP'"
  - "Lib/test/test_sys.py:1436:51    	Procs                           	U   	# PyBufferProcs"
  - "Lib/test/test_sys.py:1438:15    	newstyleclass                   	U   	class newstyleclass(object): pass"
  - "Lib/test/test_sys.py:1456:9     	asciifields                     	U   	asciifields = \"nnbP\""
  - "Lib/test/test_sys.py:1457:9     	compactfields                   	U   	compactfields = asciifields + \"nPn"
  - "Lib/test/test_sys.py:1458:9     	unicodefields                   	U   	unicodefields = compactfields + \"P"
  - "Lib/test/test_sys.py:1460:13    	maxchar                         	U   	maxchar = ord(max(s))"
  - "Lib/test/test_sys.py:1482:11    	weakproxy                       	U   	# weakproxy"
  - "Lib/test/test_sys.py:1484:11    	weakcallableproxy               	U   	# weakcallableproxy"
  - "Lib/test/test_sys.py:1517:14    	pythontypes                     	U   	def test_pythontypes(self):"
  - "Lib/test/test_sysconfig.py:106:9    	cvars   	U   	cvars = get_config_vars()"
  - "Lib/test/test_sysconfig.py:125:11   	macbook 	U   	# macbook"
  - "Lib/test/test_sysconfig.py:130:37   	macziade	U   	set_uname(('Darwin', 'macziade', '8.11.1',"
  - "Lib/test/test_sysconfig.py:138:42   	fwrapv  	U   	'-fwrapv -O3 -Wall -Wstrict-prototypes"
  - "Lib/test/test_sysconfig.py:138:60   	Wstrict 	U   	'-fwrapv -O3 -Wall -Wstrict-prototypes')"
  - "Lib/test/test_sysconfig.py:221:36   	aglae   	U   	set_uname(('Linux', 'aglae', '2.6.21.1dedibox-r"
  - "Lib/test/test_sysconfig.py:221:53   	dedibox 	U   	, 'aglae', '2.6.21.1dedibox-r7',"
  - "Lib/test/test_sysconfig.py:392:23   	aarch   	U   	if re.match('(aarch64|arm|mips|ppc|powerpc"
  - "Lib/test/test_sysconfig.py:397:63   	gnux    	U   	endswith('x86_64-linux-gnux32.so'),"
  - "Lib/test/test_syslog.py:28:14   	setlogmask  	U   	def test_setlogmask(self):"
  - "Lib/test/test_tabnanny.py:129:39    	testmsg 	U   	tabnanny.NannyNag(5, \"testmsg\", \"testline\"),"
  - "Lib/test/test_tabnanny.py:175:48    	lsdir   	U   	files returned by `os.lsdir()` is not fixed, verify"
  - "Lib/test/test_tarfile.py:38:49      	tardir      	U   	os_helper.TESTFN) + \"-tardir\""
  - "Lib/test/test_tarfile.py:39:1       	tarextdir   	U   	tarextdir = TEMPDIR + '-extract"
  - "Lib/test/test_tarfile.py:40:1       	tarname     	U   	tarname = support.findfile("
  - "Lib/test/test_tarfile.py:40:29      	testtar     	U   	= support.findfile(\"testtar.tar\")"
  - "Lib/test/test_tarfile.py:43:1       	xzname      	U   	xzname = os.path.join(TEMPDIR"
  - "Lib/test/test_tarfile.py:44:1       	tmpname     	U   	tmpname = os.path.join(TEMPDIR"
  - "Lib/test/test_tarfile.py:45:1       	dotlessname 	U   	dotlessname = os.path.join(TEMPDIR"
  - "Lib/test/test_tarfile.py:99:7       	Ustar       	U   	class UstarReadTest(ReadTest, unittest"
  - "Lib/test/test_tarfile.py:210:42     	linktest    	U   	fileobj_link(\"./ustar/linktest2/lnktype\","
  - "Lib/test/test_tarfile.py:403:61     	tarfiles    	U   	non-existent gzipped tarfiles raising"
  - "Lib/test/test_tarfile.py:586:14     	xstar       	U   	def test_xstar_type(self):"
  - "Lib/test/test_tarfile.py:665:38     	extractdir  	U   	path.join(TEMPDIR, \"extractdir\")"
  - "Lib/test/test_tarfile.py:792:9      	tarinfos    	U   	tarinfos = self.tar.getmembers"
  - "Lib/test/test_tarfile.py:979:27     	oldv        	U   	def test_find_regtype_oldv7(self):"
  - "Lib/test/test_tarfile.py:992:7      	Longname    	U   	class LongnameTest:"
  - "Lib/test/test_tarfile.py:1031:49    	longnametype	U   	ssertEqual(tarinfo.type, self.longnametype)"
  - "Lib/test/test_tarfile.py:1035:9     	longdir     	U   	longdir = ('a' * 101) + '/'"
  - "Lib/test/test_tarfile.py:1110:21    	evidentially	U   	# Linux evidentially has 512 byte st_blocks"
  - "Lib/test/test_tarfile.py:1177:49    	fileobjs    	U   	fobj.closed, \"external fileobjs must never closed\")"
  - "Lib/test/test_tarfile.py:1433:42    	testsymlinks	U   	path.join(TEMPDIR, \"testsymlinks\")"
  - "Lib/test/test_tarfile.py:1434:9     	temparchive 	U   	temparchive = os.path.join(TEMPDIR"
  - "Lib/test/test_tarfile.py:1497:19    	nonwritable 	U   	def test_open_nonwritable_fileobj(self):"
  - "Lib/test/test_tarfile.py:1601:11    	Longlink    	U   	# and Longlink extended headers (cp"
  - "Lib/test/test_tarfile.py:1651:22    	longnam     	U   	self._test((\"longnam/\" * 127) + \"longnam"
  - "Lib/test/test_tarfile.py:1660:30    	longlnk     	U   	self._test(\"name\", (\"longlnk/\" * 127) + \"longlnk"
  - "Lib/test/test_tarfile.py:1668:14    	longnamelink	U   	def test_longnamelink_1023(self):"
  - "Lib/test/test_tarfile.py:1718:27    	posixheader 	U   	# See `struct posixheader` in GNU docs for byte"
  - "Lib/test/test_tarfile.py:1853:7     	Hardlink    	U   	class HardlinkTest(unittest.TestCase"
  - "Lib/test/test_tarfile.py:2502:9     	tarfilecmd  	U   	def tarfilecmd(self, *args, **kwargs"
  - "Lib/test/test_tarfile.py:2516:17    	tardata     	U   	for tardata in files:"
  - "Lib/test/test_tarfile.py:2530:25    	testtarnames	U   	for tar_name in testtarnames:"
  - "Lib/test/test_tarfile.py:2543:9     	zipname     	U   	zipname = support.findfile("
  - "Lib/test/test_tarfile.py:2543:37    	zipdir      	U   	= support.findfile('zipdir.zip')"
  - "Lib/test/test_tarfile.py:2683:55    	spamdir     	U   	tarfilecmd('-e', tmpname, 'spamdir')"
  - "Lib/test/test_tarfile.py:2791:30    	bzipped     	U   	an empty or partial bzipped file."
  - "Lib/test/test_tarfile.py:2852:44    	tarfl       	U   	open(tmpname, 'w') as tarfl:"
  - "Lib/test/test_telnetlib.py:278:7    	nego            	U   	class nego_collector(object):"
  - "Lib/test/test_telnetlib.py:299:56   	iacs            	U   	tl.IAC + tl.IAC + b' iacs' + tl.IAC,"
  - "Lib/test/test_telnetlib.py:335:20   	subnegotiations 	U   	# RFC 855, subnegotiations portion"
  - "Lib/test/test_telnetlib.py:347:44   	aabb            	U   	tl.IAC + tl.IAC + b'aabb' + tl.IAC + b'cc' +"
  - "Lib/test/test_tempfile.py:23:5      	textmode    	U   	has_textmode = (tempfile._text_openflags"
  - "Lib/test/test_tempfile.py:102:10    	ndir        	U   	(ndir, nbase) = os.path.split"
  - "Lib/test/test_tempfile.py:103:9     	npre        	U   	npre = nbase[:len(pre)]"
  - "Lib/test/test_tempfile.py:104:9     	nsuf        	U   	nsuf = nbase[len(nbase)"
  - "Lib/test/test_tempfile.py:160:9     	unexp       	U   	unexp = []"
  - "Lib/test/test_tempfile.py:378:11    	mkstemped   	U   	class mkstemped:"
  - "Lib/test/test_tempfile.py:379:10    	bflags      	U   	_bflags = tempfile._bin_openflags"
  - "Lib/test/test_tempfile.py:380:10    	tflags      	U   	_tflags = tempfile._text_openflags"
  - "Lib/test/test_tempfile.py:644:9     	adir        	U   	adir = os.path.abspath(dir"
  - "Lib/test/test_tempfile.py:871:11    	mktemped    	U   	class mktemped:"
  - "Lib/test/test_tempfile.py:1359:24   	abdc        	U   	roundtrip(\"abdc\\n\", \"w+\")"
  - "Lib/test/test_tempfile.py:1447:14   	explict     	U   	def test_explict_cleanup_ignore_errors"
  - "Lib/test/test_tempfile.py:1507:71   	gced        	U   	TemporaryDirectory is gced.\"\"\""
  - "Lib/test/test_textwrap.py:19:20     	textin              	U   	def show(self, textin):"
  - "Lib/test/test_textwrap.py:130:53    	Hmmph               	U   	Anyone for \"tennis?\"\\nHmmph!'"
  - "Lib/test/test_textwrap.py:176:46    	peters'ly           	U   	reformatting-posts-from-tim-peters'ly\")"
  - "Lib/test/test_textwrap.py:302:50    	dryrun              	U   	option, or --dry-run or --dryrun\""
  - "Lib/test/test_textwrap.py:332:32    	wibble              	U   	self.check_split(\"the 'wibble-wobble' widget\","
  - "Lib/test/test_textwrap.py:354:45    	wubba               	U   	split(\"blah (ding dong), wubba\","
  - "Lib/test/test_textwrap.py:427:17    	yaba                	U   	text = \"yaba daba-doo\""
  - "Lib/test/test_textwrap.py:427:22    	daba                	U   	text = \"yaba daba-doo\""
  - "Lib/test/test_textwrap.py:440:21    	Empf                	U   	text = \"Die Empf\\xe4nger-Auswahl\""
  - "Lib/test/test_textwrap.py:440:29    	nger                	U   	text = \"Die Empf\\xe4nger-Auswahl\""
  - "Lib/test/test_textwrap.py:440:34    	Auswahl             	U   	= \"Die Empf\\xe4nger-Auswahl\""
  - "Lib/test/test_textwrap.py:586:40    	supercalifragilis   	U   	['Did you say \"supercalifragilis',"
  - "Lib/test/test_textwrap.py:587:27    	ticexpialidocious   	U   	'ticexpialidocious?\" How *do*',"
  - "Lib/test/test_textwrap.py:609:28    	supercalifr         	U   	'\"supercalifr',"
  - "Lib/test/test_textwrap.py:610:27    	agilisticexp        	U   	'agilisticexp',"
  - "Lib/test/test_textwrap.py:611:27    	ialidocious         	U   	'ialidocious?',"
  - "Lib/test/test_textwrap.py:618:14    	nobreak             	U   	def test_nobreak_long(self):"
  - "Lib/test/test_textwrap.py:647:9     	enyzme              	U   	We used enyzme 2-succinyl-6-hydroxy"
  - "Lib/test/test_textwrap.py:647:18    	succinyl            	U   	We used enyzme 2-succinyl-6-hydroxy-2,4-cyclohexadiene"
  - "Lib/test/test_textwrap.py:647:41    	cyclohexadiene      	U   	succinyl-6-hydroxy-2,4-cyclohexadiene-1-carboxylate synthase"
  - "Lib/test/test_textwrap.py:647:70    	synthase            	U   	cyclohexadiene-1-carboxylate synthase."
  - "Lib/test/test_textwrap.py:659:22    	cyclohexad          	U   	'cyclohexad', 'iene-1-', 'carboxylat"
  - "Lib/test/test_textwrap.py:659:36    	iene                	U   	'cyclohexad', 'iene-1-', 'carboxylat',"
  - "Lib/test/test_textwrap.py:659:47    	carboxylat          	U   	cyclohexad', 'iene-1-', 'carboxylat', 'e', 'synthase.']"
  - "Lib/test/test_textwrap.py:671:47    	uccinyl             	U   	used', 'enyzme 2-s', 'uccinyl-6-', 'hydroxy-2,',"
  - "Lib/test/test_textwrap.py:672:24    	cyclohex            	U   	'4-cyclohex', 'adiene-1-c', 'arboxylate"
  - "Lib/test/test_textwrap.py:672:36    	adiene              	U   	'4-cyclohex', 'adiene-1-c', 'arboxylate',"
  - "Lib/test/test_textwrap.py:672:50    	arboxylate          	U   	cyclohex', 'adiene-1-c', 'arboxylate', 'synthase.']"
  - "Lib/test/test_textwrap.py:772:21    	nomargin            	U   	def test_dedent_nomargin(self):"
  - "Lib/test/test_textwrap.py:1076:29   	Helloo              	U   	self.check_shorten(\"Helloo\", 5, \"[...]\")"
  - "Lib/test/test_thread.py:42:9    	newtask     	U   	def newtask(self):"
  - "Lib/test/test_thread.py:230:14  	forkinthread	U   	def test_forkinthread(self):"
  - "Lib/test/test_threading_local.py:18:19      	weaklist    	U   	def target(local, weaklist):"
  - "Lib/test/test_threading_local.py:45:9       	deadlist    	U   	deadlist = [weak for weak in"
  - "Lib/test/test_threading_local.py:49:15      	someothervar	U   	local.someothervar = None"
  - "Lib/test/test_threading.py:56:53    	nrunning    	U   	testcase, sema, mutex, nrunning):"
  - "Lib/test/test_threading.py:142:9    	numrunning  	U   	numrunning = Counter()"
  - "Lib/test/test_threading.py:307:44   	asynch      	U   	attempting to raise asynch exception in worker"
  - "Lib/test/test_threading.py:395:19   	nondaemon   	U   	def test_join_nondaemon_on_shutdown(self):"
  - "Lib/test/test_threading.py:625:42   	nonmain     	U   	thread_after_fork_from_nonmain_thread(self):"
  - "Lib/test/test_threading.py:687:27   	Subinterp   	U   	# Test similar to SubinterpThreadingTests.test_threads"
  - "Lib/test/test_threading.py:932:43   	Wdefault    	U   	assert_python_ok(\"-Wdefault\", \"-c\", \"pass\","
  - "Lib/test/test_threading.py:980:17   	joiningfunc 	U   	def joiningfunc(mainthread):"
  - "Lib/test/test_threading.py:980:29   	mainthread  	U   	def joiningfunc(mainthread):"
  - "Lib/test/test_threading.py:1013:13  	childpid    	U   	childpid = os.fork()"
  - "Lib/test/test_threading.py:1416:38  	noerror     	U   	multithread_modify_file_noerror(self):"
  - "Lib/test/test_threading.py:1668:29  	subthread   	U   	test_interrupt_main_subthread(self):"
  - "Lib/test/test_time.py:91:33     	gettime         	U   	hasattr(time, 'clock_gettime'):"
  - "Lib/test/test_time.py:110:49    	getcpuclockid   	U   	hasattr(time, 'pthread_getcpuclockid'),"
  - "Lib/test/test_time.py:129:47    	getres          	U   	hasattr(time, 'clock_getres'),"
  - "Lib/test/test_time.py:136:47    	settime         	U   	hasattr(time, 'clock_settime'),"
  - "Lib/test/test_time.py:219:35    	gettmarg        	U   	Start check at -2 since gettmarg() increments value before"
  - "Lib/test/test_time.py:275:13    	strf            	U   	strf_output = time.strftime"
  - "Lib/test/test_time.py:305:13    	bigyear         	U   	for bigyear in TIME_MAXYEAR, TIME"
  - "Lib/test/test_time.py:330:17    	testval         	U   	testval = time.mktime((year"
  - "Lib/test/test_time.py:460:7     	borks           	U   	# borks the glibc's internal"
  - "Lib/test/test_time.py:618:9     	yearstr         	U   	def yearstr(self, y):"
  - "Lib/test/test_time.py:645:15    	dyear           	U   	def test_4dyear(self):"
  - "Lib/test/test_time.py:706:19    	timemodule      	U   	# Modules/timemodule.c checks for underflow"
  - "Lib/test/test_time.py:719:11    	Pytime          	U   	class TestPytime(unittest.TestCase):"
  - "Lib/test/test_time.py:747:16    	localtimes      	U   	# Make localtimes from the UNIX times"
  - "Lib/test/test_time.py:799:46    	pytime          	U   	icoseconds are only tested to pytime_converter accepting"
  - "Lib/test/test_time.py:972:16    	Timeval         	U   	def test_AsTimeval(self):"
  - "Lib/test/test_time.py:995:55    	Timespec        	U   	testcapi, 'PyTime_AsTimespec'),"
  - "Lib/test/test_time.py:1044:13   	floatpart       	U   	floatpart, intpart = math.modf"
  - "Lib/test/test_timeit.py:352:41  	stringio	U   	captured_stderr() as error_stringio:"
  - "Lib/test/test_timeit.py:356:55  	nsec    	U   	unit. Please select nsec, usec, msec, or sec"
  - "Lib/test/test_timeout.py:140:50     	unprecision 	U   	should account for timing unprecision"
  - "Lib/test/test_timeout.py:161:9      	blackhole   	U   	blackhole = resolve_address('blackhole"
  - "Lib/test/test_timeout.py:163:11     	Blackhole   	U   	# Blackhole has been configured"
  - "Lib/test/test_timeout.py:170:14     	firewalling 	U   	# to firewalling or general network configurat"
  - "Lib/test/test_timeout.py:171:69     	whitehole   	U   	blackhole, a corresponding 'whitehole'"
  - "Lib/test/test_timeout.py:184:11     	timeframe   	U   	# timeframe)."
  - "Lib/test/test_tokenize.py:222:17    	toktype     	U   	for toktype, token, start, end,"
  - "Lib/test/test_tokenize.py:652:30    	Örter       	U   	self.check_tokenize(\"Örter = 'places'\\ngrün ="
  - "Lib/test/test_tokenize.py:652:47    	ngrün       	U   	tokenize(\"Örter = 'places'\\ngrün = 'green'\", \"\"\"\\"
  - "Lib/test/test_tokenize.py:657:17    	grün        	U   	NAME 'grün' (2, 0) (2,"
  - "Lib/test/test_tokenize.py:957:5     	decistmt    	U   	def decistmt(s):"
  - "Lib/test/test_tokenize.py:960:9     	toknum      	U   	for toknum, tokval, _, _, _ in"
  - "Lib/test/test_tokenize.py:960:17    	tokval      	U   	for toknum, tokval, _, _, _ in g:"
  - "Lib/test/test_tokenize.py:1169:33   	noncommented	U   	test_cookie_second_line_noncommented_first_line(self):"
  - "Lib/test/test_tokenize.py:1378:14   	oneline     	U   	def test_oneline_defs(self):"
  - "Lib/test/test_tokenize.py:1390:36   	opstr       	U   	assertExactTypeEqual(self, opstr, *optypes):"
  - "Lib/test/test_tokenize.py:1390:44   	optypes     	U   	tExactTypeEqual(self, opstr, *optypes):"
  - "Lib/test/test_tokenize.py:1628:22   	ucpu        	U   	# pass the '-ucpu' option to process the"
  - "Lib/test/test_tokenize.py:1666:9    	codelines   	U   	codelines = self.roundtrip(code"
  - "Lib/test/test_tomllib/__init__.py:2:32      	Taneli  	U   	FileCopyrightText: 2021 Taneli Hukkinen"
  - "Lib/test/test_tomllib/__init__.py:2:39      	Hukkinen	U   	ileCopyrightText: 2021 Taneli Hukkinen"
  - "Lib/test/test_tomllib/burntsushi.py:5:41    	burntsushi  	U   	tests that are in the \"burntsushi\" format.\"\"\""
  - "Lib/test/test_tomllib/burntsushi.py:82:27   	Burntsushi  	U   	raise AssertionError(\"Burntsushi fixtures should be dicts"
  - "Lib/test/test_tomllib/data/invalid/array-missing-comma.toml:1:1     	arrr	U   	arrr = [true false]"
  - "Lib/test/test_tomllib/data/invalid/invalid-escaped-unicode.toml:1:21    	uabag   	U   	escaped-unicode = \"\\uabag\""
  - "Lib/test/test_tomllib/data/invalid/invalid-hex.toml:1:8     	xgabba  	U   	hex = 0xgabba00f1"
  - "Lib/test/test_tomllib/data/invalid/keys-and-vals/ends-early-table-def.toml:1:2      	fwfw	U   	[fwfw.wafw"
  - "Lib/test/test_tomllib/data/invalid/keys-and-vals/ends-early-table-def.toml:1:7      	wafw	U   	[fwfw.wafw"
  - "Lib/test/test_tomllib/data/invalid/literal-str/unclosed.toml:1:11       	dwdd	U   	unclosed='dwdd"
  - "Lib/test/test_tomllib/data/invalid/missing-closing-double-square-bracket.toml:2:1       	blaa	U   	blaa=2"
  - "Lib/test/test_tomllib/data/invalid/missing-closing-square-bracket.toml:1:18     	missingö	U   	[closing-bracket.missingö"
  - "Lib/test/test_tomllib/data/invalid/unclosed-multiline-string.toml:2:1       	diibaa  	U   	diibaa"
  - "Lib/test/test_tomllib/data/invalid/unclosed-multiline-string.toml:3:1       	blibae  	U   	blibae ete"
  - "Lib/test/test_tomllib/data/invalid/unclosed-multiline-string.toml:4:1       	eteta   	U   	eteta"
  - "Lib/test/test_tomllib/data/valid/array/array-subtables.json:4:9     	subtab  	U   	{\"subtab\":"
  - "Lib/test/test_tomllib/data/valid/dates-and-times/datetimes.json:2:24    	datetime	U   	local-dt\": {\"type\":\"datetime-local\",\"value\":\"198"
  - "Lib/test/test_tomllib/data/valid/multiline-basic-str/ends-in-whitespace-escape.json:1:3     	beee    	U   	{\"beee\": {\"type\": \"string\""
  - "Lib/test/test_tomllib/data/valid/multiline-basic-str/ends-in-whitespace-escape.json:1:39    	heeee   	U   	\"string\", \"value\": \"heeee\\ngeeee\"}}"
  - "Lib/test/test_tomllib/data/valid/multiline-basic-str/ends-in-whitespace-escape.json:1:45    	ngeeee  	U   	string\", \"value\": \"heeee\\ngeeee\"}}"
  - "Lib/test/test_tomllib/data/valid/multiline-basic-str/ends-in-whitespace-escape.toml:3:1     	geeee   	U   	geeee\\"
  - "Lib/test/test_tomllib/test_error.py:34:31   	nfwfw   	U   	tomllib.loads(\"\\n\\nfwfw=\")"
  - "Lib/test/test_tomllib/test_misc.py:44:15    	notnum      	U   	notnum1=nan"
  - "Lib/test/test_tomllib/test_misc.py:68:16    	bliibaa     	U   	[bliibaa.diibaa]"
  - "Lib/test/test_tomllib/test_misc.py:69:15    	offsettime  	U   	offsettime=[1979-05-27T00:32:0"
  - "Lib/test/test_trace.py:12:11    	tracedmodules   	U   	from test.tracedmodules import testmod"
  - "Lib/test/test_trace.py:79:5     	mylist          	U   	mylist = [traced_doubler(i"
  - "Lib/test/test_trace.py:123:47   	countfuncs      	U   	Trace(count=1, trace=0, countfuncs=0, countcallers=0)"
  - "Lib/test/test_trace.py:123:61   	countcallers    	U   	trace=0, countfuncs=0, countcallers=0)"
  - "Lib/test/test_trace.py:194:20   	compehentions   	U   	# List compehentions work differently in"
  - "Lib/test/test_trace.py:272:11   	Funcs           	U   	class TestFuncs(unittest.TestCase):"
  - "Lib/test/test_trace.py:277:14   	filemod         	U   	self.filemod = my_file_and_modname"
  - "Lib/test/test_trace.py:293:48   	calledfuncs     	U   	self.tracer.results().calledfuncs, expected)"
  - "Lib/test/test_trace.py:438:26   	fullmodname     	U   	modname = trace._fullmodname(sys.modules[modname"
  - "Lib/test/test_trace.py:460:5    	codefile        	U   	codefile = 'tmp.py'"
  - "Lib/test/test_trace.py:461:5    	coverfile       	U   	coverfile = 'tmp.cover'"
  - "Lib/test/test_trace.py:467:22   	spœm            	U   	x = 'spœm'"
  - "Lib/test/test_trace.py:482:9    	tracecoverpath  	U   	tracecoverpath = os.path.join(tracedir"
  - "Lib/test/test_trace.py:529:14   	listfuncs       	U   	def test_listfuncs_flag_success(self):"
  - "Lib/test/test_trace.py:557:9    	coverfilename   	U   	coverfilename = f'{TESTFN}.cover'"
  - "Lib/test/test_traceback.py:98:14    	nocaret     	U   	def test_nocaret(self):"
  - "Lib/test/test_traceback.py:157:21   	firstlines  	U   	def do_test(firstlines, message, charset, lineno"
  - "Lib/test/test_traceback.py:271:9    	excfile     	U   	excfile = StringIO()"
  - "Lib/test/test_traceback.py:329:47   	tbstderr    	U   	output(\"stderr\") as tbstderr:"
  - "Lib/test/test_traceback.py:331:13   	tbfile      	U   	tbfile = StringIO()"
  - "Lib/test/test_traceback.py:333:47   	excstderr   	U   	output(\"stderr\") as excstderr:"
  - "Lib/test/test_traceback.py:335:13   	excfmt      	U   	excfmt = traceback.format_exc"
  - "Lib/test/test_traceback.py:370:43   	ststderr    	U   	output(\"stderr\") as ststderr:"
  - "Lib/test/test_traceback.py:372:9    	stfile      	U   	stfile = StringIO()"
  - "Lib/test/test_traceback.py:376:9    	stfmt       	U   	stfmt = traceback.format_stack"
  - "Lib/test/test_traceback.py:879:29   	extact      	U   	It's enough to test extact_tb, extract_stack and"
  - "Lib/test/test_traceback.py:923:13   	nolim       	U   	nolim = extract()"
  - "Lib/test/test_tuple.py:70:14    	tupleresizebug  	U   	def test_tupleresizebug(self):"
  - "Lib/test/test_tuple.py:113:25   	zlimit          	U   	# fails if z > `zlimit`."
  - "Lib/test/test_tuple.py:114:13   	tryone          	U   	def tryone_inner(tag, nbins, hashes"
  - "Lib/test/test_tuple.py:176:9    	cands           	U   	cands = list(range(-10, -"
  - "Lib/test/test_tuple.py:209:40   	sdevs           	U   	collisions is no more than 4 sdevs above the theoretically"
  - "Lib/test/test_tuple.py:226:9    	inps            	U   	inps = base + list(product"
  - "Lib/test/test_tuple.py:401:4    	randomish       	U   	# \"randomish\" here instead. But"
  - "Lib/test/test_tuple.py:470:33   	waaaaay         	U   	statistical sense that's waaaaay too many collisions"
  - "Lib/test/test_type_comments.py:16:1     	asyncdef            	U   	asyncdef = \"\"\"\\"
  - "Lib/test/test_type_comments.py:25:1     	asyncvar            	U   	asyncvar = \"\"\"\\"
  - "Lib/test/test_type_comments.py:30:1     	asynccomp           	U   	asynccomp = \"\"\"\\"
  - "Lib/test/test_type_comments.py:44:1     	underscorednumber   	U   	underscorednumber = \"\"\"\\"
  - "Lib/test/test_type_comments.py:48:1     	redundantdef        	U   	redundantdef = \"\"\"\\"
  - "Lib/test/test_type_comments.py:54:1     	nonasciidef         	U   	nonasciidef = \"\"\"\\"
  - "Lib/test/test_type_comments.py:56:19    	àçčéñt              	U   	# type: () -> àçčéñt"
  - "Lib/test/test_type_comments.py:60:1     	forstmt             	U   	forstmt = \"\"\"\\"
  - "Lib/test/test_type_comments.py:65:1     	withstmt            	U   	withstmt = \"\"\"\\"
  - "Lib/test/test_type_comments.py:70:1     	vardecl             	U   	vardecl = \"\"\"\\"
  - "Lib/test/test_type_comments.py:89:10    	fabvk               	U   	# named 'fabvk' would have two positional"
  - "Lib/test/test_type_comments.py:90:58    	longargs            	U   	is verified in test_longargs()"
  - "Lib/test/test_type_comments.py:198:5    	favk                	U   	def favk("
  - "Lib/test/test_type_comments.py:231:33   	minver              	U   	parse_all(self, source, minver=lowest, maxver=highest"
  - "Lib/test/test_type_comments.py:231:48   	maxver              	U   	source, minver=lowest, maxver=highest, expected_regex"
  - "Lib/test/test_type_comments.py:406:40   	ignorewhatever      	U   	ways(\"pass # type: ignorewhatever\\n\")"
  - "Lib/test/test_type_comments.py:407:40   	ignoreé             	U   	ways(\"pass # type: ignoreé\\n\")"
  - "Lib/test/test_types.py:144:23   	zsize       	U   	xsize, ysize, zsize = 238, 356, 4"
  - "Lib/test/test_types.py:201:32   	xyzabcde    	U   	'xyz' + 'abcde' != 'xyzabcde': self.fail('string"
  - "Lib/test/test_types.py:202:24   	xyzxyzxyz   	U   	if 'xyz'*3 != 'xyzxyzxyz': self.fail('string"
  - "Lib/test/test_types.py:417:9    	rfmt        	U   	rfmt = \">20n\""
  - "Lib/test/test_types.py:418:9    	lfmt        	U   	lfmt = \"<20n\""
  - "Lib/test/test_types.py:419:9    	cfmt        	U   	cfmt = \"^20n\""
  - "Lib/test/test_types.py:593:23   	Xobns       	U   	for code in 'xXobns':"
  - "Lib/test/test_types.py:1051:15  	dictmissing 	U   	class dictmissing(dict):"
  - "Lib/test/test_types.py:1066:14  	customdict  	U   	def test_customdict(self):"
  - "Lib/test/test_types.py:1657:14  	attrget     	U   	def test_attrget(self):"
  - "Lib/test/test_types.py:1666:14  	attrset     	U   	def test_attrset(self):"
  - "Lib/test/test_types.py:1677:14  	attrdel     	U   	def test_attrdel(self):"
  - "Lib/test/test_types.py:1877:19  	corogen     	U   	def test_duck_corogen(self):"
  - "Lib/test/test_types.py:2037:19  	corofunc    	U   	async def corofunc():"
  - "Lib/test/test_types.py:2083:24  	itercoro    	U   	def test_returning_itercoro(self):"
  - "Lib/test/test_types.py:2088:9   	gencoro     	U   	gencoro = gen()"
  - "Lib/test/test_types.py:2102:14  	genfunc     	U   	def test_genfunc(self):"
  - "Lib/test/test_typing.py:248:17  	bivariant   	U   	def test_no_bivariant(self):"
  - "Lib/test/test_typing.py:719:47  	maximium    	U   	runtime to maintain maximium flexibility."
  - "Lib/test/test_typing.py:987:17  	ameth       	U   	def ameth(self) -> int:"
  - "Lib/test/test_typing.py:1985:20 	subscr      	U   	def test_multi_subscr_base(self):"
  - "Lib/test/test_typing.py:2236:35 	variabcles  	U   	Mapping, etc., and type variabcles are considered immutable"
  - "Lib/test/test_typing.py:2946:21 	Noode       	U   	def foo(a: 'Noode[T]'):"
  - "Lib/test/test_typing.py:2955:21 	whatevers   	U   	def foo(a: 'whatevers') -> {}:"
  - "Lib/test/test_typing.py:2993:13 	clazz       	U   	for clazz in [C, D, E, F]:"
  - "Lib/test/test_typing.py:3177:10 	xrepr       	U   	some_xrepr: 'XRepr'"
  - "Lib/test/test_typing.py:3231:72 	globalns    	U   	will find the right globalns"
  - "Lib/test/test_typing.py:3285:13 	testf       	U   	def testf(x, y): ..."
  - "Lib/test/test_typing.py:3288:13 	testg       	U   	def testg(x: None): ..."
  - "Lib/test/test_typing.py:3308:37 	decoratored 	U   	get_type_hints_wrapped_decoratored_func(self):"
  - "Lib/test/test_typing.py:4188:9  	jelle       	U   	jelle = CoolEmployeeWithDefault"
  - "Lib/test/test_typing.py:4188:42 	Jelle       	U   	CoolEmployeeWithDefault('Jelle')"
  - "Lib/test/test_typing.py:4399:16 	Dnew        	U   	EmpDnew = pickle.loads(ZZ)"
  - "Lib/test/test_typing.py:4466:15 	Untotal     	U   	class Untotal(TypedDict, total=False"
  - "Lib/test/test_typing.py:4467:13 	untotal     	U   	untotal: str"
  - "Lib/test/test_typing.py:4885:14 	stringized  	U   	def test_stringized_usage(self):"
  - "Lib/test/test_typing.py:5023:23 	paramspecs  	U   	def test_multiple_paramspecs_in_user_generics(self"
  - "Lib/test/test_ucn.py:24:9       	checkletter 	U   	def checkletter(self, name, code):"
  - "Lib/test/test_ucn.py:77:55      	uafe        	U   	SYLLABLE GGWEOSS\", \"\\uafe8\")"
  - "Lib/test/test_ucn.py:80:52      	ubba        	U   	HANGUL SYLLABLE MWIK\", \"\\ubba0\")"
  - "Lib/test/test_ucn.py:177:13     	seqname     	U   	for seqname, codepoints in sequences"
  - "Lib/test/test_unicode_file_functions.py:14:19   	Gott	U   	'3_Gr\\xfc\\xdf-Gott',"
  - "Lib/test/test_unicode_file.py:42:18     	copyish 	U   	self._do_copyish(filename, filename)"
  - "Lib/test/test_unicode_file.py:129:55    	checkdir	U   	chdir with unicode, checkdir with encoded"
  - "Lib/test/test_unicode.py:64:9       	checkequalnofix         	U   	def checkequalnofix(self, result, object"
  - "Lib/test/test_unicode.py:73:19      	usub                    	U   	class usub(str):"
  - "Lib/test/test_unicode.py:85:51      	Ufffffffe               	U   	SyntaxError, eval, '\\'\\\\Ufffffffe\\'')"
  - "Lib/test/test_unicode.py:86:51      	Uffffffff               	U   	SyntaxError, eval, '\\'\\\\Uffffffff\\'')"
  - "Lib/test/test_unicode.py:211:46     	memchr                  	U   	implementation details of the memchr fast path"
  - "Lib/test/test_unicode.py:242:46     	memrchr                 	U   	implementation details of the memrchr fast path"
  - "Lib/test/test_unicode.py:322:31     	bbbc                    	U   	self.checkequalnofix('bbbc', 'abababc', 'translate"
  - "Lib/test/test_unicode.py:322:39     	abababc                 	U   	checkequalnofix('bbbc', 'abababc', 'translate',"
  - "Lib/test/test_unicode.py:324:31     	iiic                    	U   	self.checkequalnofix('iiic', 'abababc', 'translate"
  - "Lib/test/test_unicode.py:326:31     	iiix                    	U   	self.checkequalnofix('iiix', 'abababc', 'translate"
  - "Lib/test/test_unicode.py:330:31     	xyyx                    	U   	self.checkequalnofix('xyyx', 'xzx', 'translate"
  - "Lib/test/test_unicode.py:340:40     	abdcdcbdddd             	U   	checkequalnofix('xyzzy', 'abdcdcbdddd', 'translate', tbl)"
  - "Lib/test/test_unicode.py:461:32     	sval                    	U   	def __init__(self, sval): self.sval = sval"
  - "Lib/test/test_unicode.py:562:22     	lecmp                   	U   	def test_lecmp(s, s2):"
  - "Lib/test/test_unicode.py:639:47     	Fcitlecases             	U   	ckequalnofix(True, 'Greek \\u1FFcitlecases ...', 'istitle')"
  - "Lib/test/test_unicode.py:763:14     	𝖀𝖓𝖎𝖈𝖔𝖉𝖊          	U   	u = '𝖀𝖓𝖎𝖈𝖔𝖉𝖊'"
  - "Lib/test/test_unicode.py:794:41     	DFFFB                   	U   	A\\uD800B\\uDFFF', 'A\\uDFFFB\\uD800',"
  - "Lib/test/test_unicode.py:795:30     	DFFFA                   	U   	'A\\uD800B\\uDFFFA', 'A\\uDFFFB\\uD800A'"
  - "Lib/test/test_unicode.py:834:33     	fffe                    	U   	self.assertEqual('\\U0008fffe'.lower(), '\\U0008fffe"
  - "Lib/test/test_unicode.py:879:27     	ﬁnnish                  	U   	self.assertEqual('ﬁnnish'.capitalize(), 'Finnish"
  - "Lib/test/test_unicode.py:954:29     	abdb                    	U   	self.assertIn('a', 'abdb')"
  - "Lib/test/test_unicode.py:955:29     	bdab                    	U   	self.assertIn('a', 'bdab')"
  - "Lib/test/test_unicode.py:956:29     	bdaba                   	U   	self.assertIn('a', 'bdaba')"
  - "Lib/test/test_unicode.py:957:29     	bdba                    	U   	self.assertIn('a', 'bdba')"
  - "Lib/test/test_unicode.py:966:35     	abcxxxx                 	U   	assertNotIn('abcd', 'abcxxxx')"
  - "Lib/test/test_unicode.py:1135:56    	resultx                 	U   	.format('result'), 'resultx')"
  - "Lib/test/test_unicode.py:1136:56    	resultxx                	U   	.format('result'), 'resultxx')"
  - "Lib/test/test_unicode.py:1186:67    	nonprintable            	U   	8'), \"'\\\\u0378'\") # nonprintable"
  - "Lib/test/test_unicode.py:1549:25    	strsubclass             	U   	def test_issue28598_strsubclass_rhs(self):"
  - "Lib/test/test_unicode.py:1746:56    	Wenn                    	U   	9b\\u306b\\u306f\\u300cWenn ist das'"
  - "Lib/test/test_unicode.py:1747:15    	Nunstuck                	U   	' Nunstuck git und'.encode('utf"
  - "Lib/test/test_unicode.py:2439:20    	wstr                    	U   	# fill wstr internal field"
  - "Lib/test/test_unicode.py:2610:13    	cargs                   	U   	cargs = tuple("
  - "Lib/test/test_unicode.py:2839:14    	aswidechar              	U   	def test_aswidechar(self):"
  - "Lib/test/test_unicode.py:2877:14    	aswidecharstring        	U   	def test_aswidecharstring(self):"
  - "Lib/test/test_unicode.py:2901:14    	asucs                   	U   	def test_asucs4(self):"
  - "Lib/test/test_unicode.py:2904:29    	udfffc                  	U   	'a\\ud800b\\udfffc', '\\ud834\\udd1e']:"
  - "Lib/test/test_unicode.py:2918:14    	asutf                   	U   	def test_asutf8(self):"
  - "Lib/test/test_unicode.py:2932:20    	andsize                 	U   	def test_asutf8andsize(self):"
  - "Lib/test/test_unicode.py:2946:14    	findchar                	U   	def test_findchar(self):"
  - "Lib/test/test_unicode.py:2969:14    	copycharacters          	U   	def test_copycharacters(self):"
  - "Lib/test/test_unicode.py:3013:39    	encodedecimal           	U   	testcapi import unicode_encodedecimal"
  - "Lib/test/test_unicode.py:3032:39    	transformdecimaltoascii 	U   	testcapi import unicode_transformdecimaltoascii as transform_decimal"
  - "Lib/test/test_unicodedata.py:23:5       	expectedchecksum	U   	expectedchecksum = '9129d6f2bdf008a8"
  - "Lib/test/test_unicodedata.py:153:46     	FFFE            	U   	self.db.category('\\uFFFE'), 'Cn')"
  - "Lib/test/test_unicodedata.py:357:14     	linebreak       	U   	def test_linebreak_7643(self):"
  - "Lib/test/test_urllib_response.py:30:9       	closehook   	U   	closehook_called = False"
  - "Lib/test/test_urllib_response.py:50:9       	infourl     	U   	infourl = urllib.response.addinfourl"
  - "Lib/test/test_urllib.py:61:5    	fakehttp            	U   	def fakehttp(fakedata, mock_close"
  - "Lib/test/test_urllib.py:61:14   	fakedata            	U   	def fakehttp(fakedata, mock_close=False):"
  - "Lib/test/test_urllib.py:94:24   	fakesock            	U   	type(self).fakesock = self.sock"
  - "Lib/test/test_urllib.py:114:9   	unfakehttp          	U   	def unfakehttp(self):"
  - "Lib/test/test_urllib.py:119:9   	fakeftp             	U   	def fakeftp(self):"
  - "Lib/test/test_urllib.py:134:9   	unfakeftp           	U   	def unfakeftp(self):"
  - "Lib/test/test_urllib.py:227:14  	relativelocalfile   	U   	def test_relativelocalfile(self):"
  - "Lib/test/test_urllib.py:252:46  	anotherdomain       	U   	PROXY', 'localhost, anotherdomain.com, newdomain.com:"
  - "Lib/test/test_urllib.py:252:65  	newdomain           	U   	anotherdomain.com, newdomain.com:1234')"
  - "Lib/test/test_urllib.py:284:34  	prelocalhost        	U   	assertFalse(bypass('prelocalhost'))"
  - "Lib/test/test_urllib.py:329:46  	noproxy             	U   	proxy'] = 'localhost, noproxy.com, my.proxy:1234'"
  - "Lib/test/test_urllib.py:367:14  	willclose           	U   	def test_willclose(self):"
  - "Lib/test/test_urllib.py:379:13  	schemeless          	U   	schemeless_url = f\"//localhost"
  - "Lib/test/test_urllib.py:384:63  	codepaths           	U   	different url opening codepaths. Plain"
  - "Lib/test/test_urllib.py:503:41  	maxtries            	U   	range(FancyURLopener().maxtries):"
  - "Lib/test/test_urllib.py:523:22  	localfile           	U   	def test_missing_localfile(self):"
  - "Lib/test/test_urllib.py:530:19  	notexists           	U   	def test_file_notexists(self):"
  - "Lib/test/test_urllib.py:532:13  	fileurl             	U   	tmp_fileurl = 'file://localhost"
  - "Lib/test/test_urllib.py:566:14  	userpass            	U   	def test_userpass_inurl(self):"
  - "Lib/test/test_urllib.py:566:23  	inurl               	U   	def test_userpass_inurl(self):"
  - "Lib/test/test_urllib.py:630:68  	IFVSTH              	U   	;base64,dGVzdCBkYXRhIFVSTHMgOjs\""
  - "Lib/test/test_urllib.py:636:18  	AAAAAXNSR           	U   	\"QOjdAAAAAXNSR0IArs4c6QAAAA9JREFUCNdj"
  - "Lib/test/test_urllib.py:636:35  	QAAAA               	U   	QOjdAAAAAXNSR0IArs4c6QAAAA9JREFUCNdj%0AYGBg%2BP"
  - "Lib/test/test_urllib.py:636:41  	JREFUC              	U   	QOjdAAAAAXNSR0IArs4c6QAAAA9JREFUCNdj%0AYGBg%2BP//PwAGAQL"
  - "Lib/test/test_urllib.py:636:65  	AGAQL               	U   	JREFUCNdj%0AYGBg%2BP//PwAGAQL%2BCm8 \""
  - "Lib/test/test_urllib.py:637:17  	AAAABJRU            	U   	\"vHgAAAABJRU5ErkJggg%3D%3D%0A%20"
  - "Lib/test/test_urllib.py:637:29  	Jggg                	U   	\"vHgAAAABJRU5ErkJggg%3D%3D%0A%20\")"
  - "Lib/test/test_urllib.py:774:14  	reporthook          	U   	def test_reporthook(self):"
  - "Lib/test/test_urllib.py:776:13  	hooktester          	U   	def hooktester(block_count, block_read"
  - "Lib/test/test_urllib.py:935:40  	xfcb                	U   	urllib.parse.quote(\"a\\xfcb\", encoding=\"latin-1"
  - "Lib/test/test_urllib.py:996:34  	Bbeta               	U   	'alpha%2Bbeta+gamma')"
  - "Lib/test/test_urllib.py:1056:44 	xmlcharref          	U   	in BMP, Latin-1, with xmlcharref error handling"
  - "Lib/test/test_urllib.py:1110:24 	badpercent          	U   	def test_unquoting_badpercent(self):"
  - "Lib/test/test_urllib.py:1180:25 	Cckner              	U   	given = 'br%C3%BCckner_sapporo_20050930.doc"
  - "Lib/test/test_urllib.py:1213:25 	fcckner             	U   	expect = 'br\\u00fcckner_sapporo_20050930.doc"
  - "Lib/test/test_urllib.py:1271:19 	blueberryjam        	U   	expect = 'blueberryjam'"
  - "Lib/test/test_urllib.py:1278:34 	rsyltet             	U   	expect = 'bl\\u00e5b\\u00e6rsyltet\\u00f8y'"
  - "Lib/test/test_urllib.py:1294:14 	inputtype           	U   	def help_inputtype(self, given, test_type"
  - "Lib/test/test_urllib.py:1347:14 	doseq               	U   	def test_doseq(self):"
  - "Lib/test/test_urllib.py:1499:31 	pathame             	U   	\"url2pathame() failed; %s != %s\""
  - "Lib/test/test_urllib.py:1503:58 	pathnam             	U   	unquoting works for pathnam2url() and"
  - "Lib/test/test_urllib2_localnet.py:68:22     	webserver   	U   	\"\"\"Stops the webserver if it's currently running"
  - "Lib/test/test_urllib2_localnet.py:138:27    	cnonce      	U   	\"%(cnonce)s:%(qop)s:%(HA2)s\""
  - "Lib/test/test_urllib2_localnet.py:224:12    	AUTHHEAD    	U   	def do_AUTHHEAD(self):"
  - "Lib/test/test_urllib2_localnet.py:552:47    	weeble      	U   	handler.requests, [\"/weeble\"])"
  - "Lib/test/test_urllib2_localnet.py:601:25    	cadefault   	U   	def test_https_with_cadefault(self):"
  - "Lib/test/test_urllib2.py:80:23      	reasonstr   	U   	def test_URLError_reasonstr(self):"
  - "Lib/test/test_urllib2.py:85:14      	Hdrs        	U   	class RequestHdrsTests(unittest.TestCase"
  - "Lib/test/test_urllib2.py:121:11     	unredirected	U   	r.unredirected_hdrs dictionaries"
  - "Lib/test/test_urllib2.py:138:38     	Unredirected	U   	unredirected_header(\"Unredirected-spam\", \"Eggs\")"
  - "Lib/test/test_urllib2.py:175:59     	nibar       	U   	foo/bar\", \"foobar\", \"nibar\")"
  - "Lib/test/test_urllib2.py:190:53     	ninini      	U   	example.com/baz/\", \"baz\", \"ninini\")"
  - "Lib/test/test_urllib2.py:516:21     	httpcon     	U   	# properties of httpcon"
  - "Lib/test/test_urllib2.py:520:14     	httpconn    	U   	self.httpconn = MockHTTPClass()"
  - "Lib/test/test_urllib2.py:552:41     	authuri     	U   	password(self, realm, authuri):"
  - "Lib/test/test_urllib2.py:707:5      	sanepathname	U   	def sanepathname2url(path):"
  - "Lib/test/test_urllib2.py:712:5      	urlpath     	U   	urlpath = urllib.request.pathname"
  - "Lib/test/test_urllib2.py:746:23     	rhaponicum  	U   	data = \"rheum rhaponicum\""
  - "Lib/test/test_urllib2.py:794:9      	towrite     	U   	towrite = b\"hello, world\\n\""
  - "Lib/test/test_urllib2.py:819:21     	respurl     	U   	respurl = r.geturl()"
  - "Lib/test/test_urllib2.py:916:46     	badpost     	U   	http://example.com/\",\"badpost\")"
  - "Lib/test/test_urllib2.py:924:13     	newreq      	U   	newreq = h.do_request_(req"
  - "Lib/test/test_urllib2.py:1088:31    	someproxy   	U   	ds_req.set_proxy(\"someproxy:3128\", None)"
  - "Lib/test/test_urllib2.py:1122:14    	fixpath     	U   	def test_fixpath_in_weirdurls(self):"
  - "Lib/test/test_urllib2.py:1122:25    	weirdurls   	U   	def test_fixpath_in_weirdurls(self):"
  - "Lib/test/test_urllib2.py:1133:46    	getspam     	U   	newreq.selector, '/?getspam')"
  - "Lib/test/test_urllib2.py:1151:9     	newr        	U   	newr = h.http_response(req"
  - "Lib/test/test_urllib2.py:1306:9     	hdeh        	U   	hdeh = urllib.request.HTTPDefaultE"
  - "Lib/test/test_urllib2.py:1456:11    	httpsconn   	U   	# httpsconn req_headers do not have"
  - "Lib/test/test_urllib2.py:1480:18    	notinbypass 	U   	'notinbypass'):"
  - "Lib/test/test_urllib2.py:1521:27    	Otherscheme 	U   	other_no_realm = 'Otherscheme xxx'"
  - "Lib/test/test_urllib2.py:1865:62    	userinfo    	U   	may optionally include userinfo"
  - "Lib/test/test_urllib2.py:1999:18    	fullurl     	U   	def test_url_fullurl_get_full_url(self):"
  - "Lib/test/test_urllib2net.py:174:40  	bitdiddle   	U   	socket.gethostname() == 'bitdiddle':"
  - "Lib/test/test_urllib2net.py:188:16  	bauth       	U   	## bauth = HTTPBasicAuthHandler"
  - "Lib/test/test_urllib2net.py:189:67  	jhylton     	U   	realm', localhost, 'jhylton',"
  - "Lib/test/test_urllib2net.py:191:16  	dauth       	U   	## dauth = HTTPDigestAuthHandler"
  - "Lib/test/test_urllib2net.py:197:14  	urlwithfrag 	U   	def test_urlwithfrag(self):"
  - "Lib/test/test_urllib2net.py:198:9   	urlwith     	U   	urlwith_frag = \"http://www.pythontest"
  - "Lib/test/test_urllib2net.py:205:27  	withfrag    	U   	def test_redirect_url_withfrag(self):"
  - "Lib/test/test_urllibnet.py:133:25   	sadflkjsasf 	U   	bogus_domain = \"sadflkjsasf.i.nvali.d.\""
  - "Lib/test/test_urllibnet.py:133:39   	nvali       	U   	domain = \"sadflkjsasf.i.nvali.d.\""
  - "Lib/test/test_urllibnet.py:195:61   	fileheaders 	U   	as (file_location, fileheaders):"
  - "Lib/test/test_urllibnet.py:196:13   	datevalue   	U   	datevalue = fileheaders.get('Date"
  - "Lib/test/test_urlparse.py:73:14     	Roundtrips      	U   	def checkRoundtrips(self, url, parsed, split"
  - "Lib/test/test_urlparse.py:151:29    	hinet           	U   	('mms://wms.sys.hinet.net/cts/Drama/09006"
  - "Lib/test/test_urlparse.py:216:31    	relurl          	U   	checkJoin(self, base, relurl, expected):"
  - "Lib/test/test_urlparse.py:219:28    	baseb           	U   	bytes_components = baseb, relurlb, expectedb"
  - "Lib/test/test_urlparse.py:219:35    	relurlb         	U   	components = baseb, relurlb, expectedb = ["
  - "Lib/test/test_urlparse.py:219:44    	expectedb       	U   	components = baseb, relurlb, expectedb = ["
  - "Lib/test/test_urlparse.py:224:46    	newscheme       	U   	Python', './Python','x-newscheme://foo.com/stuff','x"
  - "Lib/test/test_urlparse.py:385:14    	urljoins        	U   	def test_urljoins(self):"
  - "Lib/test/test_urlparse.py:416:31    	pathtorepo      	U   	self.checkJoin('svn://pathtorepo/dir1', 'dir2', 'svn"
  - "Lib/test/test_urlparse.py:448:35    	affe            	U   	dead:beef:cafe:5417:affe:8fa3:deaf:feed', 54"
  - "Lib/test/test_urlparse.py:477:13    	urlparsed       	U   	urlparsed = urllib.parse.urlparse"
  - "Lib/test/test_urlparse.py:506:18    	defrag          	U   	for url, defrag, frag in str_cases"
  - "Lib/test/test_urlparse.py:617:102   	nment           	U   	query\\n=\\tsomething#frag\\nment\""
  - "Lib/test/test_urlparse.py:674:38    	maddr           	U   	sip:alice@atlanta.com;maddr=239.255.255.1;ttl=1"
  - "Lib/test/test_urlparse.py:716:14    	withoutscheme   	U   	def test_withoutscheme(self):"
  - "Lib/test/test_urlparse.py:735:14    	portseparator   	U   	def test_portseparator(self):"
  - "Lib/test/test_urlparse.py:753:14    	usingsys        	U   	def test_usingsys(self):"
  - "Lib/test/test_urlparse.py:757:14    	anyscheme       	U   	def test_anyscheme(self):"
  - "Lib/test/test_urlparse.py:977:51    	Fanother        	U   	result, \"a=some%20value%2Fanother\")"
  - "Lib/test/test_urlparse.py:1025:14   	telurl          	U   	def test_telurl_params(self):"
  - "Lib/test/test_urlparse.py:1074:9    	denorm          	U   	denorm_chars = ["
  - "Lib/test/test_urlparse.py:1103:42   	opaquestring    	U   	assertEqual(splittype('type:opaquestring'), ('type', 'opaquestring"
  - "Lib/test/test_userdict.py:119:9     	ikeys   	U   	ikeys = []"
  - "Lib/test/test_userlist.py:49:14     	mixedcmp	U   	def test_mixedcmp(self):"
  - "Lib/test/test_userlist.py:55:14     	mixedadd	U   	def test_mixedadd(self):"
  - "Lib/test/test_userstring.py:49:15   	ustr	U   	class ustr2(UserString):"
  - "Lib/test/test_utf8_mode.py:49:14    	xoption 	U   	def test_xoption(self):"
  - "Lib/test/test_utf8source.py:9:14    	Питон   	U   	\"Питон\".encode(\"utf-8\"),"
  - "Lib/test/test_uu.py:17:1    	encodedtext         	U   	encodedtext = b\"\"\"\\"
  - "Lib/test/test_uu.py:49:5    	encodedtextwrapped  	U   	def encodedtextwrapped(mode, filename, backtick"
  - "Lib/test/test_uu.py:95:14   	truncatedinput      	U   	def test_truncatedinput(self):"
  - "Lib/test/test_uu.py:104:14  	missingbegin        	U   	def test_missingbegin(self):"
  - "Lib/test/test_uu.py:152:9   	safefilename        	U   	safefilename = b\"test.txt\\\\n\\\\roverflow"
  - "Lib/test/test_uu.py:190:14  	tmpin               	U   	self.tmpin = os_helper.TESTFN"
  - "Lib/test/test_uu.py:191:14  	tmpout              	U   	self.tmpout = os_helper.TESTFN_ASCII"
  - "Lib/test/test_uu.py:202:45  	fout                	U   	self.tmpout, 'wb') as fout:"
  - "Lib/test/test_uu.py:241:14  	decodetwice         	U   	def test_decodetwice(self):"
  - "Lib/test/test_uuid.py:149:15    	fffefdfcfffefffefffefffefdfcfbfa	U   	'fffefdfcfffefffefffefffefdfcfbfa',"
  - "Lib/test/test_uuid.py:221:9     	badvalue                        	U   	badvalue = lambda f: self.assertRaises"
  - "Lib/test/test_uuid.py:222:9     	badtype                         	U   	badtype = lambda f: self.assertRaises"
  - "Lib/test/test_uuid.py:287:21    	bble                            	U   	for bble in [[], [('bytes_le"
  - "Lib/test/test_uuid.py:737:43    	Ipkts                           	U   	Address Ipkts Ierrs Opkts Oerrs"
  - "Lib/test/test_uuid.py:737:49    	Ierrs                           	U   	Address Ipkts Ierrs Opkts Oerrs Coll"
  - "Lib/test/test_uuid.py:737:58    	Opkts                           	U   	Ipkts Ierrs Opkts Oerrs Coll"
  - "Lib/test/test_uuid.py:737:64    	Oerrs                           	U   	Ipkts Ierrs Opkts Oerrs Coll"
  - "Lib/test/test_uuid.py:764:60    	Idrop                           	U   	Ipkts Ierrs Idrop Opkts Oerrs Coll"
  - "Lib/test/test_uuid.py:765:1     	vtnet                           	U   	vtnet 1500 <Link#1>"
  - "Lib/test/test_uuid.py:800:16    	encap                           	U   	fake Link encap:UNSPEC hwaddr 00-0"
  - "Lib/test/test_uuid.py:800:30    	hwaddr                          	U   	Link encap:UNSPEC hwaddr 00-00"
  - "Lib/test/test_uuid.py:801:1     	cscotun                         	U   	cscotun0 Link encap:UNSPEC"
  - "Lib/test/test_uuid.py:846:33    	lanscan                         	U   	unittest.skipUnless(_uuid._lanscan_getnode in _uuid._GETTERS"
  - "Lib/test/test_venv.py:29:54     	venvs           	U   	executable can create venvs from within"
  - "Lib/test/test_venv.py:54:18     	bindir          	U   	self.bindir = 'Scripts'"
  - "Lib/test/test_venv.py:188:9     	envpy           	U   	envpy = os.path.join(self"
  - "Lib/test/test_venv.py:253:14    	unoverwritable  	U   	def test_unoverwritable_fails(self):"
  - "Lib/test/test_venv.py:393:31    	pipefail        	U   	f.write(\"set -euo pipefail\\n\""
  - "Lib/test/test_weakref.py:73:14      	cbcalled        	U   	self.cbcalled = 0"
  - "Lib/test/test_weakref.py:123:14     	cfunction       	U   	def test_cfunction(self):"
  - "Lib/test/test_weakref.py:221:34     	getweakrefcount 	U   	assertEqual(weakref.getweakrefcount(o), 2,"
  - "Lib/test/test_weakref.py:336:45     	makeref         	U   	without_callback(self, makeref):"
  - "Lib/test/test_weakref.py:412:9      	lyst            	U   	lyst = List()"
  - "Lib/test/test_weakref.py:521:14     	getweakrefs     	U   	def test_getweakrefs(self):"
  - "Lib/test/test_weakref.py:602:17     	endeth          	U   	# There endeth the first part. It"
  - "Lib/test/test_weakref.py:616:61     	deallocs        	U   	call the base classes' deallocs too,"
  - "Lib/test/test_weakref.py:629:17     	acallback       	U   	def acallback(self, ignore):"
  - "Lib/test/test_weakref.py:976:17     	wself           	U   	wself = weakref.ref(self)"
  - "Lib/test/test_weakref.py:977:24     	wparent         	U   	def cb(wparent):"
  - "Lib/test/test_weakref.py:1025:7     	Subclassable    	U   	class SubclassableWeakrefTestCase(TestBase"
  - "Lib/test/test_weakref.py:1418:16    	iterkeyrefs     	U   	# Test iterkeyrefs()"
  - "Lib/test/test_weakref.py:1493:67    	testcontext     	U   	iterating(self, dict, testcontext):"
  - "Lib/test/test_weakref.py:1510:9     	ddict           	U   	ddict = copy.copy(dict)"
  - "Lib/test/test_weakref.py:2150:17    	Finalizer       	U   	class MyFinalizer(weakref.finalize):"
  - "Lib/test/test_weakset.py:38:9       	weaksetmethods  	U   	weaksetmethods = dir(WeakSet)"
  - "Lib/test/test_webbrowser.py:80:24   	autoraise   	U   	def test_open_with_autoraise_false(self):"
  - "Lib/test/test_webbrowser.py:224:21  	tryorder    	U   	self._saved_tryorder = webbrowser._tryorder"
  - "Lib/test/test_webbrowser.py:294:29  	fakebrowser 	U   	webbrowser.get('fakebrowser')"
  - "Lib/test/test_with.py:5:14      	mbland          	U   	__email__ = \"mbland at acm dot org\""
  - "Lib/test/test_with.py:236:7     	Nonexceptional  	U   	class NonexceptionalTestCase(unittest.TestCase"
  - "Lib/test/test_with.py:663:22    	Doesnt          	U   	def testExitFalseDoesntSwallowException(self"
  - "Lib/test/test_wsgiref.py:4:16       	httpservers 	U   	from test.test_httpservers import NoLogRequestHandler"
  - "Lib/test/test_wsgiref.py:69:9       	amock       	U   	def run_amock(app=hello_app, data"
  - "Lib/test/test_wsgiref.py:73:5       	olderr      	U   	olderr = sys.stderr"
  - "Lib/test/test_wsgiref.py:444:27     	spammity    	U   	SCRIPT_NAME=\"/spammity\", PATH_INFO=\"/spam\""
  - "Lib/test/test_wsgiref.py:584:63     	overriden   	U   	variables which are not overriden"
  - "Lib/test/test_wsgiref.py:728:9      	stdpat      	U   	stdpat = ("
  - "Lib/test/test_wsgiref.py:733:9      	shortpat    	U   	shortpat = ("
  - "Lib/test/test_wsgiref.py:786:19     	Crashy      	U   	class CrashyIterable(object):"
  - "Lib/test/test_xdrlib.py:77:14   	uhyper  	U   	def test_uhyper(self):"
  - "Lib/test/test_xml_etree.py:40:49    	xmltestdata     	U   	simple.xml\", subdir=\"xmltestdata\")"
  - "Lib/test/test_xml_etree.py:61:4     	nexttag         	U   	<nexttag />"
  - "Lib/test/test_xml_etree.py:62:4     	nextsection     	U   	<nextsection>"
  - "Lib/test/test_xml_etree.py:123:5    	checkwarnings   	U   	def checkwarnings(*filters, quiet=False"
  - "Lib/test/test_xml_etree.py:132:5    	convlinesep     	U   	def convlinesep(data):"
  - "Lib/test/test_xml_etree.py:227:13   	direlem         	U   	direlem = dir(element)"
  - "Lib/test/test_xml_etree.py:318:14   	simpleops       	U   	def test_simpleops(self):"
  - "Lib/test/test_xml_etree.py:340:34   	subtag          	U   	subelement = ET.Element(\"subtag\")"
  - "Lib/test/test_xml_etree.py:377:9    	stringfile      	U   	stringfile = io.BytesIO(SAMPLE"
  - "Lib/test/test_xml_etree.py:453:19   	testb           	U   	elem.set('testb', 'test2')"
  - "Lib/test/test_xml_etree.py:461:22   	testc           	U   	elem.attrib['testc'] = 'test2'"
  - "Lib/test/test_xml_etree.py:479:9    	subelem         	U   	subelem = elem.makeelement("
  - "Lib/test/test_xml_etree.py:545:14   	parseliteral    	U   	def test_parseliteral(self):"
  - "Lib/test/test_xml_etree.py:1105:9   	stringlist      	U   	stringlist = ET.tostringlist(elem"
  - "Lib/test/test_xml_etree.py:1130:13  	bxml            	U   	def bxml(encoding):"
  - "Lib/test/test_xml_etree.py:1370:18  	olist           	U   	check(\"//olist/item\", ['//', 'olist"
  - "Lib/test/test_xml_etree.py:1442:25  	cirriculum      	U   	e = ET.Element('cirriculum', status='public', company"
  - "Lib/test/test_xml_etree.py:1696:31  	pitarget        	U   	self._feed(parser, \"<?pitarget?>\\n\")"
  - "Lib/test/test_xml_etree.py:1706:9   	eventset        	U   	eventset = {'end', 'start'}"
  - "Lib/test/test_xml_etree.py:2054:18  	xmltoolkit      	U   	def test_bug_xmltoolkit21(self):"
  - "Lib/test/test_xml_etree.py:2143:45  	ldots           	U   	DOCTYPE doc [<!ENTITY ldots '&#x8230;'>]>\""
  - "Lib/test/test_xml_etree.py:2176:22  	rsquo           	U   	ENTITIES = {'rsquo': '\\u2019', 'lsquo'"
  - "Lib/test/test_xml_etree.py:2176:41  	lsquo           	U   	'rsquo': '\\u2019', 'lsquo': '\\u2018'}"
  - "Lib/test/test_xml_etree.py:2182:2   	subdoc          	U   	<subdoc-abstract>"
  - "Lib/test/test_xml_etree.py:2335:9   	newelem         	U   	newelem = ET.XML(SAMPLE_XML"
  - "Lib/test/test_xml_etree.py:2424:9   	xmlattr         	U   	xmlattr = root.get('b')"
  - "Lib/test/test_xml_etree.py:2590:11  	dummyref        	U   	d.dummyref = ET.Element('joe',"
  - "Lib/test/test_xml_etree.py:2591:9   	wref            	U   	wref = weakref.ref(d)"
  - "Lib/test/test_xml_etree.py:2893:14  	istype          	U   	def test_istype(self):"
  - "Lib/test/test_xml_etree.py:2926:17  	newmethod       	U   	def newmethod(self):"
  - "Lib/test/test_xml_etree.py:3126:32  	nsmaps          	U   	test_findall_different_nsmaps(self):"
  - "Lib/test/test_xml_etree.py:3133:9   	nsmap           	U   	nsmap = {'xx': 'X'}"
  - "Lib/test/test_xml_etree.py:3214:10  	ilist           	U   	def _ilist(self, elem, tag=None"
  - "Lib/test/test_xml_etree.py:3319:28  	sometext        	U   	sample2 = '''<toplevel>sometext</toplevel>'''"
  - "Lib/test/test_xml_etree.py:3392:35  	texttail        	U   	assertEqual(a.text, \"texttail\")"
  - "Lib/test/test_xml_etree.py:3449:26  	elementfactory  	U   	def test_treebuilder_elementfactory_none(self):"
  - "Lib/test/test_xml_etree.py:3492:13  	myfactory       	U   	def myfactory(tag, attrib):"
  - "Lib/test/test_xml_etree.py:3523:23  	TAL's           	U   	# Mimic SimpleTAL's behaviour (issue #1"
  - "Lib/test/test_xml_etree.py:3691:26  	elemlist        	U   	def _elem_tags(self, elemlist):"
  - "Lib/test/test_xml_etree.py:3697:40  	numchildren     	U   	with_children(self, numchildren):"
  - "Lib/test/test_xml_etree.py:4278:24  	attrx           	U   	<a x:attr=\"attrx\">"
  - "Lib/test/test_xml_etree.py:4279:20  	abtext          	U   	<b>abtext</b>"
  - "Lib/test/test_xml_etree.py:4281:16  	btext           	U   	<b>btext</b>"
  - "Lib/test/test_xml_etree.py:4353:19  	roundtripped    	U   	# output, not roundtripped C14N (see above)."
  - "Lib/test/test_xml_etree.py:4358:9   	datadir         	U   	datadir = findfile(\"c14n-20"
  - "Lib/test/test_xml_etree.py:4404:21  	qattrs          	U   	qattrs = ["
  - "Lib/test/test_xml_etree.py:4409:21  	qtags           	U   	qtags = ["
  - "Lib/test/test_xml_etree.py:4424:43  	Redecl          	U   	if input_file == 'inNsRedecl' and not rewrite_prefixes"
  - "Lib/test/test_xml_etree.py:4426:31  	Redeclared      	U   	f\"Redeclared namespace handling is"
  - "Lib/test/test_xmlrpc.py:32:12   	anotherlist     	U   	'anotherlist': ['.zyx.41'],"
  - "Lib/test/test_xmlrpc.py:38:12   	ukey            	U   	'ukey\\u4000': 'regular value"
  - "Lib/test/test_xmlrpc.py:67:10   	newdt           	U   	(newdt,) = result"
  - "Lib/test/test_xmlrpc.py:116:45  	methodresponse  	U   	methodresponse=True))"
  - "Lib/test/test_xmlrpc.py:195:9   	strg            	U   	strg = xmlrpclib.dumps(arg"
  - "Lib/test/test_xmlrpc.py:306:17  	biginteger      	U   	check('<biginteger>9876543210012345678"
  - "Lib/test/test_xmlrpc.py:309:17  	bigdecimal      	U   	check('<bigdecimal>9876543210.01234567"
  - "Lib/test/test_xmlrpc.py:317:56  	Nlcg            	U   	Authorization', 'Basic dXNlcg==')], {}))"
  - "Lib/test/test_xmlrpc.py:479:10  	newf            	U   	(newf,), m = xmlrpclib.loads"
  - "Lib/test/test_xmlrpc.py:543:9   	dtime           	U   	dtime = xmlrpclib.DateTime"
  - "Lib/test/test_xmlrpc.py:561:9   	dbytes          	U   	dbytes = dstr.encode('ascii"
  - "Lib/test/test_xmlrpc.py:620:22  	numrequests     	U   	def http_server(evt, numrequests, requestHandler=None"
  - "Lib/test/test_xmlrpc.py:660:46  	têšt            	U   	function(lambda x: x, 'têšt')"
  - "Lib/test/test_xmlrpc.py:906:13  	divhelp         	U   	divhelp = p.system.methodHelp"
  - "Lib/test/test_xmlrpc.py:922:13  	myfunction      	U   	myfunction = p.system.methodHelp"
  - "Lib/test/test_xmlrpc.py:937:13  	divsig          	U   	divsig = p.system.methodSignature"
  - "Lib/test/test_xmlrpc.py:1141:11 	Keepalive       	U   	class BaseKeepaliveServerTestCase(BaseServerTestC"
  - "Lib/test/test_xmlrpc.py:1150:18 	reqidx          	U   	self.reqidx = len(self.myRequests"
  - "Lib/test/test_xmlrpc.py:1438:9  	flagval         	U   	flagval = xmlrpc.server.SimpleXMLRPCS"
  - "Lib/test/test_xmlrpc.py:1516:19 	sysout          	U   	# get sysout output"
  - "Lib/test/test_xmlrpc.py:1564:63 	datapassing     	U   	inorder to avoid all the datapassing"
  - "Lib/test/test_xmlrpc.py:1594:9  	mybytes         	U   	mybytes, mydate = self.log"
  - "Lib/test/test_xmlrpc.py:1603:14 	xmlrpcserver    	U   	def test_xmlrpcserver_has_use_builtin_types"
  - "Lib/test/test_yield_from.py:866:35  	Vorpal  	U   	raise ValueError(\"Vorpal bunny encountered\")"
  - "Lib/test/test_yield_from.py:1019:40 	stacktop	U   	and in particular f_stacktop was NULL)."
  - "Lib/test/test_zipapp.py:251:24  	pathobj 	U   	def test_read_from_pathobj(self):"
  - "Lib/test/test_zipfile.py:32:26      	datafiles   	U   	DATAFILES_DIR = 'zipfile_datafiles'"
  - "Lib/test/test_zipfile.py:34:23      	ziptest     	U   	SMALL_TEST_DATA = [('_ziptest1', '1q2w3e4r5t'),"
  - "Lib/test/test_zipfile.py:35:47      	qawsedrftg  	U   	ziptest2dir/_ziptest2', 'qawsedrftg'),"
  - "Lib/test/test_zipfile.py:36:59      	azsxdcfvgb  	U   	ziptest3dir/_ziptest3', 'azsxdcfvgb'),"
  - "Lib/test/test_zipfile.py:64:51      	zipfp       	U   	f, \"w\", **kwargs) as zipfp:"
  - "Lib/test/test_zipfile.py:67:29      	strfile     	U   	zipfp.writestr(\"strfile\", self.data)"
  - "Lib/test/test_zipfile.py:138:40     	zipopen     	U   	zipfp.open(TESTFN) as zipopen1:"
  - "Lib/test/test_zipfile.py:256:21     	linedata    	U   	linedata = zipopen.readline("
  - "Lib/test/test_zipfile.py:269:17     	ziplines    	U   	ziplines = zipopen.readlines"
  - "Lib/test/test_zipfile.py:270:23     	zipline     	U   	for line, zipline in zip(self.line_gen"
  - "Lib/test/test_zipfile.py:277:13     	iterlines   	U   	def zip_iterlines_test(self, f, compression"
  - "Lib/test/test_zipfile.py:298:43     	openobj     	U   	zipfp.open(\"strfile\") as openobj:"
  - "Lib/test/test_zipfile.py:330:74     	zipf        	U   	self.compression) as zipf:"
  - "Lib/test/test_zipfile.py:341:9      	zipfiledata 	U   	zipfiledata = fp.getvalue()"
  - "Lib/test/test_zipfile.py:468:13     	zinfo       	U   	zinfo = zipfp.getinfo('strfile"
  - "Lib/test/test_zipfile.py:478:23     	arcnames    	U   	def test_absolute_arcnames(self):"
  - "Lib/test/test_zipfile.py:497:17     	fpin        	U   	# line \"fpin.seek(-22, 2)\" in _EndRecData"
  - "Lib/test/test_zipfile.py:659:34     	storeme     	U   	zipfp.write(TESTFN, 'storeme', zipfile.ZIP_STORED"
  - "Lib/test/test_zipfile.py:660:34     	deflateme   	U   	zipfp.write(TESTFN, 'deflateme', zipfile.ZIP_DEFLATED"
  - "Lib/test/test_zipfile.py:662:13     	dinfo       	U   	dinfo = zipfp.getinfo('deflateme"
  - "Lib/test/test_zipfile.py:689:15     	filecount   	U   	self._filecount_limit = zipfile.ZIP"
  - "Lib/test/test_zipfile.py:766:9      	numfiles    	U   	numfiles = 15"
  - "Lib/test/test_zipfile.py:1197:32    	testpackage 	U   	zipfp.writepy(fn, \"testpackage\")"
  - "Lib/test/test_zipfile.py:1207:9     	packagedir  	U   	packagedir = os.path.dirname(email"
  - "Lib/test/test_zipfile.py:1237:43    	filterfunc  	U   	writepy(packagedir, filterfunc=lambda whatever: False"
  - "Lib/test/test_zipfile.py:1257:9     	optlevel    	U   	optlevel = 1 if __debug__ else"
  - "Lib/test/test_zipfile.py:1358:24    	fdata       	U   	for fpath, fdata in SMALL_TEST_DATA:"
  - "Lib/test/test_zipfile.py:1366:21    	writtenfile 	U   	writtenfile = zipfp.extract(fpath"
  - "Lib/test/test_zipfile.py:1369:21    	correctfile 	U   	correctfile = os.path.join(os.getcwd"
  - "Lib/test/test_zipfile.py:1400:28    	extdir      	U   	with temp_dir() as extdir:"
  - "Lib/test/test_zipfile.py:1455:16    	hacknames   	U   	common_hacknames = ["
  - "Lib/test/test_zipfile.py:1503:22    	fixedname   	U   	for arcname, fixedname in hacknames:"
  - "Lib/test/test_zipfile.py:1630:29    	приклад     	U   	zipfp.writestr('приклад', b'sample')"
  - "Lib/test/test_zipfile.py:1698:23    	zipfiles    	U   	\"\"\"Check that zipfiles with missing bytes at"
  - "Lib/test/test_zipfile.py:1761:13    	dirsize     	U   	for dirsize in 1, 2**32-1:"
  - "Lib/test/test_zipfile.py:1857:51    	zipfr       	U   	TESTFN, mode=\"r\") as zipfr:"
  - "Lib/test/test_zipfile.py:2275:9     	datacount   	U   	datacount = randint(16, 64)*1"
  - "Lib/test/test_zipfile.py:2422:47    	zopen       	U   	zipf.open('ones') as zopen:"
  - "Lib/test/test_zipfile.py:2693:9     	zipfilecmd  	U   	def zipfilecmd(self, *args, **kwargs"
  - "Lib/test/test_zipfile.py:2844:11    	alpharep    	U   	def build_alpharep_fixture():"
  - "Lib/test/test_zipfile.py:2905:17    	ondisk      	U   	def zipfile_ondisk(self, alpharep):"
  - "Lib/test/test_zipfile.py:3023:23    	simplediv   	U   	def test_traverse_simplediv(self, alpharep):"
  - "Lib/test/test_zipimport.py:52:12    	ziptestmodule   	U   	TESTMOD = \"ziptestmodule\""
  - "Lib/test/test_zipimport.py:53:13    	ziptestpackage  	U   	TESTPACK = \"ziptestpackage\""
  - "Lib/test/test_zipimport.py:101:17   	dname           	U   	dname = os.path.dirname(path"
  - "Lib/test/test_zipimport.py:227:9    	badmagic        	U   	badmagic_pyc = bytearray(test"
  - "Lib/test/test_zipimport.py:246:9    	badtime         	U   	badtime_pyc = bytearray(test"
  - "Lib/test/test_zipimport.py:263:9    	packdir         	U   	packdir = TESTPACK + os.sep"
  - "Lib/test/test_zipimport.py:332:9    	mpath           	U   	mpath = list(mod.__path__"
  - "Lib/test/test_zipimport.py:507:27   	archivepath     	U   	# test prefix and archivepath members"
  - "Lib/test/test_zipimport.py:783:32   	Adfjdk          	U   	self.assertZipFailure('AdfjdkFJKDFJjdklfjs')"
  - "Lib/test/test_zipimport.py:783:38   	FJKDF           	U   	assertZipFailure('AdfjdkFJKDFJjdklfjs')"
  - "Lib/test/test_zipimport.py:783:43   	Jjdklfjs        	U   	assertZipFailure('AdfjdkFJKDFJjdklfjs')"
  - "Lib/test/test_zlib.py:92:14     	badlevel                	U   	def test_badlevel(self):"
  - "Lib/test/test_zlib.py:109:14    	badcompressobj          	U   	def test_badcompressobj(self):"
  - "Lib/test/test_zlib.py:116:14    	baddecompressobj        	U   	def test_baddecompressobj(self):"
  - "Lib/test/test_zlib.py:120:28    	badflush                	U   	def test_decompressobj_badflush(self):"
  - "Lib/test/test_zlib.py:242:9     	datasrc                 	U   	datasrc = HAMLET_SCENE * 12"
  - "Lib/test/test_zlib.py:243:9     	datazip                 	U   	datazip = zlib.compress(datasrc"
  - "Lib/test/test_zlib.py:272:31    	zdict                   	U   	zdict=b\"\")"
  - "Lib/test/test_zlib.py:282:14    	compressoptions         	U   	def test_compressoptions(self):"
  - "Lib/test/test_zlib.py:297:14    	compressincremental     	U   	def test_compressincremental(self):"
  - "Lib/test/test_zlib.py:305:9     	combuf                  	U   	combuf = b''.join(bufs)"
  - "Lib/test/test_zlib.py:312:14    	decompinc               	U   	def test_decompinc(self, flush=False, source"
  - "Lib/test/test_zlib.py:323:9     	decombuf                	U   	decombuf = zlib.decompress(combuf"
  - "Lib/test/test_zlib.py:353:14    	decompincflush          	U   	def test_decompincflush(self):"
  - "Lib/test/test_zlib.py:356:14    	decompimax              	U   	def test_decompimax(self, source=None, cx"
  - "Lib/test/test_zlib.py:383:14    	decompressmaxlen        	U   	def test_decompressmaxlen(self, flush=False):"
  - "Lib/test/test_zlib.py:415:14    	decompressmaxlenflush   	U   	def test_decompressmaxlenflush(self):"
  - "Lib/test/test_zlib.py:420:14    	maxlenmisc              	U   	def test_maxlenmisc(self):"
  - "Lib/test/test_zlib.py:446:9     	ddata                   	U   	ddata = dco.decompress(cdata"
  - "Lib/test/test_zlib.py:498:33    	Wichmann                	U   	# In 2.3 and later, WichmannHill is the RNG of the"
  - "Lib/test/test_zlib.py:628:9     	uncomp                  	U   	uncomp = dco.decompress(comp"
  - "Lib/test/test_zlib.py:660:14    	compresscopy            	U   	def test_compresscopy(self):"
  - "Lib/test/test_zlib.py:684:14    	badcompresscopy         	U   	def test_badcompresscopy(self):"
  - "Lib/test/test_zlib.py:694:14    	decompresscopy          	U   	def test_decompresscopy(self):"
  - "Lib/test/test_zlib.py:719:14    	baddecompresscopy       	U   	def test_baddecompresscopy(self):"
  - "Lib/test/test_zlib.py:731:14    	compresspickle          	U   	def test_compresspickle(self):"
  - "Lib/test/test_zlib.py:738:14    	decompresspickle        	U   	def test_decompresspickle(self):"
  - "Lib/test/test_zlib.py:883:16    	unproportioned          	U   	Nor any unproportioned thought his act."
  - "Lib/test/test_zlib.py:901:33    	ownself                 	U   	above all: to thine ownself be true,"
  - "Lib/test/testcodec.py:1:31      	charmapcodec	U   	Codecs (used by test_charmapcodec)"
  - "Lib/test/testtar.tar:1:7        	conttype        	U   	ustar/conttype"
  - "Lib/test/testtar.tar:1:266      	tarfile         	U   	ustar00tarfile"
  - "Lib/test/testtar.tar:39:21      	ideosyncratic   	U   	For instance: ABC's ideosyncratic syntax (all uppercase"
  - "Lib/test/testtar.tar:50:11      	Palo            	U   	Center in Palo Alto). Imagine what"
  - "Lib/test/testtar.tar:55:33      	ideosyncracies  	U   	individual creation has its ideosyncracies, and occasionally its"
  - "Lib/test/testtar.tar:115:164    	regtype         	U   	ustar/regtype"
  - "Lib/test/testtar.tar:229:164    	dirtype         	U   	ustar/dirtype/"
  - "Lib/test/testtar.tar:229:1188   	lnktype         	U   	ustar/lnktype"
  - "Lib/test/testtar.tar:229:1700   	symtype         	U   	ustar/symtype"
  - "Lib/test/testtar.tar:229:2212   	blktype         	U   	ustar/blktype"
  - "Lib/test/testtar.tar:229:2724   	chrtype         	U   	ustar/chrtype"
  - "Lib/test/testtar.tar:229:3236   	fifotype        	U   	ustar/fifotype"
  - "Lib/test/testtar.tar:686:15     	numblocks       	U   	27 GNU.sparse.numblocks=11"
  - "Lib/test/testtar.tar:1202:683   	suntar          	U   	misc/regtype-suntar"
  - "Lib/test/testtar.tar:1553:5     	linkpath        	U   	526 linkpath=pax/123/123/123/123"
  - "Lib/test/testtar.tar:1554:1445  	Üäöüß           	U   	path=pax/umlauts-ÄÖÜäöüß"
  - "Lib/test/testtar.tar:2264:11    	nlink           	U   	18 SCHILY.nlink=1"
  - "Lib/test/tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt:7:50      	doctest 	U   	text (stolen from test_doctest2.py)."
  - "Lib/test/tokenize_tests.txt:155:16  	restt   	U   	def d01v(a=1, *restt, **restd): pass"
  - "Lib/test/tokenize_tests.txt:155:25  	restd   	U   	d01v(a=1, *restt, **restd): pass"
  - "Lib/test/xmltestdata/c14n-20/c14nComment.xml:1:2        	dsig            	U   	<dsig:CanonicalizationMethod"
  - "Lib/test/xmltestdata/c14n-20/c14nComment.xml:1:7        	Canonicalization	U   	<dsig:CanonicalizationMethod xmlns:dsig=\"http"
  - "Lib/test/xmltestdata/c14n-20/doc.xsl:2:6        	stylesheet  	U   	<xsl:stylesheet version=\"1.0\""
  - "Lib/test/xmltestdata/c14n-20/inC14N5.xml:6:24       	viewgif 	U   	NOTATION gif SYSTEM \"viewgif.exe\">"
  - "Lib/test/xmltestdata/c14n-20/README:14:36   	Keio    	U   	3 W3C® (MIT, ERCIM, Keio, Beihang),"
  - "Lib/test/xmltestdata/c14n-20/README:14:42   	Beihang 	U   	(MIT, ERCIM, Keio, Beihang),"
  - "Lib/test/ziptestdata/exe_with_z64:9:8       	zipfile 	U   	import zipfile"
  - "Lib/test/ziptestdata/exe_with_z64:16:28     	infolist	U   	file_info in exe_zip.infolist():"
  - "Lib/test/ziptestdata/exe_with_zip:26:26     	testdata	U   	\\*OI_?SEEtestdata_module_inside_zip.pyUT"
  - "Lib/test/ziptestdata/README.md:4:58     	infozip's   	U   	file. You must have infozip's zip utility"
  - "Lib/test/ziptestdata/README.md:11:1     	zipimport   	U   	zipimport machinery (that'd look"
  - "Lib/textwrap.py:67:5    	uspace      	U   	uspace = ord(' ')"
  - "Lib/textwrap.py:149:9   	Munge       	U   	Munge whitespace in text:"
  - "Lib/textwrap.py:192:9   	patsearch   	U   	patsearch = self.sentence_end"
  - "Lib/this.py:1:19    	Clguba          	U   	s = \"\"\"Gur Mra bs Clguba, ol Gvz Crgref"
  - "Lib/this.py:1:34    	Crgref          	U   	Mra bs Clguba, ol Gvz Crgref"
  - "Lib/this.py:3:1     	Ornhgvshy       	U   	Ornhgvshy vf orggre guna htyl"
  - "Lib/this.py:3:14    	orggre          	U   	Ornhgvshy vf orggre guna htyl."
  - "Lib/this.py:3:21    	guna            	U   	Ornhgvshy vf orggre guna htyl."
  - "Lib/this.py:3:26    	htyl            	U   	Ornhgvshy vf orggre guna htyl."
  - "Lib/this.py:4:1     	Rkcyvpvg        	U   	Rkcyvpvg vf orggre guna vzcyvpvg"
  - "Lib/this.py:4:25    	vzcyvpvg        	U   	Rkcyvpvg vf orggre guna vzcyvpvg."
  - "Lib/this.py:5:1     	Fvzcyr          	U   	Fvzcyr vf orggre guna pbzcyrk"
  - "Lib/this.py:5:23    	pbzcyrk         	U   	Fvzcyr vf orggre guna pbzcyrk."
  - "Lib/this.py:6:1     	Pbzcyrk         	U   	Pbzcyrk vf orggre guna pbzcyvpngrq"
  - "Lib/this.py:6:24    	pbzcyvpngrq     	U   	Pbzcyrk vf orggre guna pbzcyvpngrq."
  - "Lib/this.py:7:1     	Syng            	U   	Syng vf orggre guna arfgrq"
  - "Lib/this.py:7:21    	arfgrq          	U   	Syng vf orggre guna arfgrq."
  - "Lib/this.py:8:1     	Fcnefr          	U   	Fcnefr vf orggre guna qrafr"
  - "Lib/this.py:8:23    	qrafr           	U   	Fcnefr vf orggre guna qrafr."
  - "Lib/this.py:9:1     	Ernqnovyvgl     	U   	Ernqnovyvgl pbhagf."
  - "Lib/this.py:9:13    	pbhagf          	U   	Ernqnovyvgl pbhagf."
  - "Lib/this.py:10:1    	Fcrpvny         	U   	Fcrpvny pnfrf nera'g fcrpvny"
  - "Lib/this.py:10:9    	pnfrf           	U   	Fcrpvny pnfrf nera'g fcrpvny rabhtu"
  - "Lib/this.py:10:15   	nera'g          	U   	Fcrpvny pnfrf nera'g fcrpvny rabhtu gb oernx"
  - "Lib/this.py:10:22   	fcrpvny         	U   	Fcrpvny pnfrf nera'g fcrpvny rabhtu gb oernx gur"
  - "Lib/this.py:10:30   	rabhtu          	U   	pnfrf nera'g fcrpvny rabhtu gb oernx gur ehyrf."
  - "Lib/this.py:10:40   	oernx           	U   	g fcrpvny rabhtu gb oernx gur ehyrf."
  - "Lib/this.py:10:50   	ehyrf           	U   	rabhtu gb oernx gur ehyrf."
  - "Lib/this.py:11:1    	Nygubhtu        	U   	Nygubhtu cenpgvpnyvgl orngf chevgl"
  - "Lib/this.py:11:10   	cenpgvpnyvgl    	U   	Nygubhtu cenpgvpnyvgl orngf chevgl."
  - "Lib/this.py:11:23   	orngf           	U   	Nygubhtu cenpgvpnyvgl orngf chevgl."
  - "Lib/this.py:11:29   	chevgl          	U   	Nygubhtu cenpgvpnyvgl orngf chevgl."
  - "Lib/this.py:12:1    	Reebef          	U   	Reebef fubhyq arire cnff fvyragyl"
  - "Lib/this.py:12:8    	fubhyq          	U   	Reebef fubhyq arire cnff fvyragyl"
  - "Lib/this.py:12:15   	arire           	U   	Reebef fubhyq arire cnff fvyragyl."
  - "Lib/this.py:12:21   	cnff            	U   	Reebef fubhyq arire cnff fvyragyl."
  - "Lib/this.py:12:26   	fvyragyl        	U   	Reebef fubhyq arire cnff fvyragyl."
  - "Lib/this.py:13:1    	Hayrff          	U   	Hayrff rkcyvpvgyl fvyraprq"
  - "Lib/this.py:13:8    	rkcyvpvgyl      	U   	Hayrff rkcyvpvgyl fvyraprq."
  - "Lib/this.py:13:19   	fvyraprq        	U   	Hayrff rkcyvpvgyl fvyraprq."
  - "Lib/this.py:14:8    	snpr            	U   	Va gur snpr bs nzovthvgl, ershfr"
  - "Lib/this.py:14:16   	nzovthvgl       	U   	Va gur snpr bs nzovthvgl, ershfr gur grzcgngvba"
  - "Lib/this.py:14:27   	ershfr          	U   	gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff"
  - "Lib/this.py:14:38   	grzcgngvba      	U   	nzovthvgl, ershfr gur grzcgngvba gb thrff."
  - "Lib/this.py:14:52   	thrff           	U   	ershfr gur grzcgngvba gb thrff."
  - "Lib/this.py:15:1    	Gurer           	U   	Gurer fubhyq or bar-- naq"
  - "Lib/this.py:15:27   	cersrenoyl      	U   	fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl"
  - "Lib/this.py:15:38   	bayl            	U   	bar-- naq cersrenoyl bayl bar --boivbhf jnl gb"
  - "Lib/this.py:15:49   	boivbhf         	U   	cersrenoyl bayl bar --boivbhf jnl gb qb vg."
  - "Lib/this.py:16:41   	svefg           	U   	znl abg or boivbhf ng svefg hayrff lbh'er Qhgpu"
  - "Lib/this.py:16:47   	hayrff          	U   	or boivbhf ng svefg hayrff lbh'er Qhgpu."
  - "Lib/this.py:16:54   	lbh'er          	U   	boivbhf ng svefg hayrff lbh'er Qhgpu."
  - "Lib/this.py:16:61   	Qhgpu           	U   	svefg hayrff lbh'er Qhgpu."
  - "Lib/this.py:18:19   	bsgra           	U   	Nygubhtu arire vf bsgra orggre guna *evtug*"
  - "Lib/this.py:18:38   	evtug           	U   	vf bsgra orggre guna *evtug* abj."
  - "Lib/this.py:19:8    	vzcyrzragngvba  	U   	Vs gur vzcyrzragngvba vf uneq gb rkcynva,"
  - "Lib/this.py:19:26   	uneq            	U   	gur vzcyrzragngvba vf uneq gb rkcynva, vg'f n onq"
  - "Lib/this.py:19:34   	rkcynva         	U   	vzcyrzragngvba vf uneq gb rkcynva, vg'f n onq vqrn."
  - "Lib/this.py:19:54   	vqrn            	U   	rkcynva, vg'f n onq vqrn."
  - "Lib/this.py:20:26   	rnfl            	U   	gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or"
  - "Lib/this.py:20:55   	tbbq            	U   	rkcynva, vg znl or n tbbq vqrn."
  - "Lib/this.py:21:1    	Anzrfcnprf      	U   	Anzrfcnprf ner bar ubaxvat terng"
  - "Lib/this.py:21:20   	ubaxvat         	U   	Anzrfcnprf ner bar ubaxvat terng vqrn -- yrg'f"
  - "Lib/this.py:21:28   	terng           	U   	Anzrfcnprf ner bar ubaxvat terng vqrn -- yrg'f qb zber"
  - "Lib/this.py:21:42   	yrg'f           	U   	ubaxvat terng vqrn -- yrg'f qb zber bs gubfr!\"\""
  - "Lib/this.py:21:51   	zber            	U   	terng vqrn -- yrg'f qb zber bs gubfr!\"\"\""
  - "Lib/this.py:21:59   	gubfr           	U   	-- yrg'f qb zber bs gubfr!\"\"\""
  - "Lib/threading.py:317:9      	gotit       	U   	gotit = False"
  - "Lib/threading.py:989:42     	pystate     	U   	underlying thread state (see pystate.h) gets deleted."
  - "Lib/threading.py:1038:39    	rebindings  	U   	just make redundant rebindings of ._is_stopped and"
  - "Lib/threading.py:1352:38    	Itamar      	U   	class was contributed by Itamar Shtull-Trauring"
  - "Lib/threading.py:1352:45    	Shtull      	U   	contributed by Itamar Shtull-Trauring"
  - "Lib/threading.py:1352:52    	Trauring    	U   	contributed by Itamar Shtull-Trauring"
  - "Lib/threading.py:1490:12    	atexits     	U   	_threading_atexits = []"
  - "Lib/threading.py:1541:9     	tlock       	U   	tlock = _main_thread._tstate"
  - "Lib/threading.py:1556:20    	deamon      	U   	# Join all non-deamon threads"
  - "Lib/timeit.py:112:13    	stmtprefix  	U   	stmtprefix = setup + '\\n'"
  - "Lib/timeit.py:176:11    	gcold       	U   	# gcold = gc.isenabled()"
  - "Lib/timeit.py:264:51    	tcpvh       	U   	getopt(args, \"n:u:s:r:tcpvh\","
  - "Lib/tokenize.py:25:22   	Montanaro   	U   	'Skip Montanaro, Raymond Hettinger,"
  - "Lib/tokenize.py:26:25   	Foord       	U   	'Michael Foord')"
  - "Lib/tokenize.py:191:9   	startline   	U   	startline = False"
  - "Lib/tokenize.py:229:9   	prevstring  	U   	prevstring = False"
  - "Lib/tokenize.py:272:9   	Untokenized 	U   	Untokenized source will match input"
  - "Lib/tokenize.py:419:30  	srow        	U   	token string; a 2-tuple (srow, scol) of ints specifying"
  - "Lib/tokenize.py:419:36  	scol        	U   	string; a 2-tuple (srow, scol) of ints specifying"
  - "Lib/tokenize.py:420:61  	erow        	U   	the source; a 2-tuple (erow, ecol) of"
  - "Lib/tokenize.py:435:12  	parenlev    	U   	lnum = parenlev = continued = 0"
  - "Lib/tokenize.py:437:14  	needcont    	U   	contstr, needcont = '', 0"
  - "Lib/tokenize.py:438:5   	contline    	U   	contline = None"
  - "Lib/tokenize.py:466:62  	strstart    	U   	multi-line string\", strstart)"
  - "Lib/tokenize.py:467:13  	endmatch    	U   	endmatch = endprog.match(line"
  - "Lib/tokenize.py:467:24  	endprog     	U   	endmatch = endprog.match(line)"
  - "Lib/tokenize.py:512:67  	dedents     	U   	# count indents or dedents"
  - "Lib/tokenize.py:530:13  	pseudomatch 	U   	pseudomatch = _compile(PseudoToken"
  - "Lib/tokenize.py:533:17  	spos        	U   	spos, epos, pos = (lnum,"
  - "Lib/trace.py:6:11       	Zooko           	U   	# Author: Zooko O'Whielacronx"
  - "Lib/trace.py:6:17       	O'Whielacronx   	U   	# Author: Zooko O'Whielacronx"
  - "Lib/trace.py:10:19      	Mojam           	U   	# Copyright 2000, Mojam Media, Inc., all rights"
  - "Lib/trace.py:13:19      	Bioreason       	U   	# Copyright 1999, Bioreason, Inc., all rights reserved"
  - "Lib/trace.py:14:18      	Dalke           	U   	# Author: Andrew Dalke"
  - "Lib/trace.py:16:24      	Automatrix      	U   	Copyright 1995-1997, Automatrix, Inc., all rights reserved"
  - "Lib/trace.py:35:14      	trackcalls      	U   	trace.py --trackcalls spam.py eggs"
  - "Lib/trace.py:89:44      	cmpcache        	U   	mustn't mean ignoring \"cmpcache\" but ignoring"
  - "Lib/trace.py:133:5      	comparepath     	U   	comparepath = os.path.normcase(path"
  - "Lib/trace.py:225:13     	lastfile        	U   	lastfile = lastcfile = \"\""
  - "Lib/trace.py:225:24     	lastcfile       	U   	lastfile = lastcfile = \"\""
  - "Lib/trace.py:226:19     	pfile           	U   	for ((pfile, pmod, pfunc), (cfile"
  - "Lib/trace.py:226:26     	pmod            	U   	for ((pfile, pmod, pfunc), (cfile, cmod"
  - "Lib/trace.py:226:32     	pfunc           	U   	for ((pfile, pmod, pfunc), (cfile, cmod, cfunc"
  - "Lib/trace.py:226:48     	cmod            	U   	pmod, pfunc), (cfile, cmod, cfunc)) \\"
  - "Lib/trace.py:271:13     	coverpath       	U   	coverpath = os.path.join(dir,"
  - "Lib/trace.py:389:18     	ignoremods      	U   	ignoremods=(), ignoredirs=(), infile"
  - "Lib/trace.py:412:14     	pathtobasename  	U   	self.pathtobasename = {} # for memoizing"
  - "Lib/trace.py:422:18     	globaltrace     	U   	self.globaltrace = self.globaltrace_trackcalle"
  - "Lib/trace.py:427:18     	localtrace      	U   	self.localtrace = self.localtrace_trace"
  - "Lib/trace.py:512:41     	classobj        	U   	# ditto for new.classobj()"
  - "Lib/trace.py:577:13     	bname           	U   	bname = os.path.basename(filename"
  - "Lib/traceback.py:42:27      	Tracebacks  	U   	Printing and Extracting Tracebacks."
  - "Lib/traceback.py:162:5      	valuestr    	U   	valuestr = _some_str(value)"
  - "Lib/traceback.py:363:9      	fnames      	U   	fnames = set()"
  - "Lib/traceback.py:605:9      	smod        	U   	smod = self.exc_type.__module"
  - "Lib/traceback.py:629:15     	rtext       	U   	# rtext = \" foo\""
  - "Lib/traceback.py:630:15     	ltext       	U   	# ltext = \"foo\""
  - "Lib/traceback.py:647:21     	caretspace  	U   	caretspace = ((c if c.isspace("
  - "Lib/types.py:161:71     	atributes   	U   	of accessing virtual atributes"
  - "Lib/types.py:196:9      	fdoc        	U   	fdoc = fget.__doc__ if self"
  - "Lib/types.py:216:16     	isgen       	U   	self.__isgen = gen.__class__ is GeneratorT"
  - "Lib/typing.py:214:5     	tvars           	U   	tvars = []"
  - "Lib/typing.py:223:37    	elen            	U   	generic(cls, parameters, elen):"
  - "Lib/typing.py:229:5     	alen            	U   	alen = len(parameters)"
  - "Lib/typing.py:247:16    	tvar            	U   	for p, tvar in zip(params, cls."
  - "Lib/typing.py:727:31    	Bivariant       	U   	raise ValueError(\"Bivariant types are not supported"
  - "Lib/typing.py:987:61    	nparams         	U   	'_name', '_inst', '_nparams',"
  - "Lib/typing.py:1365:13   	gvars           	U   	gvars = None"
  - "Lib/typing.py:1374:17   	tvarset         	U   	tvarset = set(tvars)"
  - "Lib/typing.py:1375:17   	gvarset         	U   	gvarset = set(gvars)"
  - "Lib/typing.py:1488:21   	instancehook    	U   	# the lack of __instancehook__."
  - "Lib/typing.py:1840:13   	nsobj           	U   	nsobj = obj"
  - "Lib/typing.py:1902:16   	unsubscripted   	U   	\"\"\"Get the unsubscripted version of a type."
  - "Lib/typing.py:2246:11   	nmtuple         	U   	def _make_nmtuple(name, types, module"
  - "Lib/unittest/case.py:389:35     	typeobj         	U   	addTypeEqualityFunc(self, typeobj, function):"
  - "Lib/unittest/case.py:819:26     	automagically   	U   	# subtypes won't automagically use the detailed comparison"
  - "Lib/unittest/case.py:1073:29    	ducktyping      	U   	assertSetEqual uses ducktyping to support different"
  - "Lib/unittest/case.py:1219:13    	secondlines     	U   	secondlines = second.splitlines"
  - "Lib/unittest/loader.py:81:29    	entrancy	U   	# avoid infinite re-entrancy."
  - "Lib/unittest/loader.py:283:30   	minimise	U   	# in sys.path to minimise likelihood of conflicts"
  - "Lib/unittest/loader.py:449:26   	noext   	U   	fullpath_noext = _jython_aware_splitext"
  - "Lib/unittest/mock.py:80:7       	Autospecced 	U   	# Autospecced functions will return"
  - "Lib/unittest/mock.py:117:34     	skipfirst   	U   	signature(func, mock, skipfirst, instance=False):"
  - "Lib/unittest/mock.py:122:9      	checksig    	U   	def checksig(self, /, *args, **kwargs"
  - "Lib/unittest/mock.py:129:30     	funcopy     	U   	copy_func_details(func, funcopy):"
  - "Lib/unittest/mock.py:493:15     	asyncs      	U   	_spec_asyncs = []"
  - "Lib/unittest/mock.py:638:44     	assret      	U   	startswith(('assert', 'assret', 'asert', 'aseert'"
  - "Lib/unittest/mock.py:638:54     	asert       	U   	assert', 'assret', 'asert', 'aseert', 'assrt'"
  - "Lib/unittest/mock.py:638:63     	aseert      	U   	'assret', 'asert', 'aseert', 'assrt')):"
  - "Lib/unittest/mock.py:835:25     	autospecced 	U   	# If an autospecced object is attached using"
  - "Lib/unittest/mock.py:966:13     	kall        	U   	for kall in expected:"
  - "Lib/unittest/mock.py:1256:66    	autospeccing	U   	arguments related to autospeccing."
  - "Lib/unittest/mock.py:1258:15    	autospect   	U   	typos = (\"autospect\", \"auto_spec\", \"set"
  - "Lib/unittest/mock.py:1344:48    	keywargs    	U   	self, patched, args, keywargs):"
  - "Lib/unittest/mock.py:1347:37    	patchings   	U   	patching in patched.patchings:"
  - "Lib/unittest/mock.py:1368:64    	newkeywargs 	U   	keywargs) as (newargs, newkeywargs):"
  - "Lib/unittest/mock.py:1461:17    	Klass       	U   	Klass = AsyncMock"
  - "Lib/unittest/mock.py:1819:23    	unpatch     	U   	self._unpatch_dict()"
  - "Lib/unittest/mock.py:1883:12    	Unpatch     	U   	\"\"\"Unpatch the dict.\"\"\""
  - "Lib/unittest/mock.py:1916:12    	stopall     	U   	def _patch_stopall():"
  - "Lib/unittest/mock.py:1935:27    	idivmod     	U   	because there is no idivmod"
  - "Lib/unittest/mock.py:2207:43    	propogate   	U   	It is impossible to propogate a StopIteration"
  - "Lib/unittest/mock.py:2391:31    	asynctest   	U   	on Martin Richard's asynctest project."
  - "Lib/unittest/result.py:32:34    	exceptioninfo   	U   	tuples of (testcase, exceptioninfo), where exceptioninfo"
  - "Lib/unittest/result.py:225:22   	usercode        	U   	'''Truncates usercode tb at the first unittest"
  - "Lib/unittest/suite.py:111:17    	isnotsuite  	U   	if _isnotsuite(test):"
  - "Lib/unittest/test/__init__.py:17:59     	testmock	U   	dTestsFromName('unittest.test.testmock'))"
  - "Lib/unittest/test/_test_warnings.py:17:5    	warnfun 	U   	def warnfun():"
  - "Lib/unittest/test/test_assertions.py:33:14      	Amost   	U   	def test_AmostEqualWithDelta(self)"
  - "Lib/unittest/test/test_assertions.py:135:37     	kota    	U   	assertNotRegex('Ala ma kota', r'r+')"
  - "Lib/unittest/test/test_case.py:121:19   	testfoo     	U   	Test('testfoo')"
  - "Lib/unittest/test/test_case.py:711:54   	warninfo    	U   	DeprecationWarning) as warninfo:"
  - "Lib/unittest/test/test_case.py:998:60   	aaabccd     	U   	count_diff_all_purpose('aaabccd', 'abbbcce'))"
  - "Lib/unittest/test/test_case.py:998:71   	abbbcce     	U   	purpose('aaabccd', 'abbbcce'))"
  - "Lib/unittest/test/test_case.py:1237:27  	asdfabasdf  	U   	self.assertRegex('asdfabasdf', r'ab+')"
  - "Lib/unittest/test/test_case.py:1239:28  	saaas       	U   	'saaas', r'aaaa')"
  - "Lib/unittest/test/test_case.py:1531:51  	barz        	U   	_runtime_warn, \"barz\")"
  - "Lib/unittest/test/test_case.py:1938:13  	ninstance   	U   	ninstance = 0"
  - "Lib/unittest/test/test_discovery.py:423:40  	startdir    	U   	abspath('/toplevel'): ['startdir'],"
  - "Lib/unittest/test/test_discovery.py:539:38  	skipperoo   	U   	raise unittest.SkipTest('skipperoo')"
  - "Lib/unittest/test/test_discovery.py:838:21  	packagename 	U   	def _import(packagename, *args, **kwargs):"
  - "Lib/unittest/test/test_loader.py:408:43     	sdasfasfasdf	U   	loader.loadTestsFromName('sdasfasfasdf')"
  - "Lib/unittest/test/test_loader.py:588:42     	testmethod  	U   	loadTestsFromName__relative_testmethod(self):"
  - "Lib/unittest/test/test_program.py:82:22     	faketest        	U   	sys.argv = ['faketest']"
  - "Lib/unittest/test/test_program.py:143:7     	Initialisable   	U   	class InitialisableProgram(unittest.TestProgram"
  - "Lib/unittest/test/test_program.py:248:36    	somevalue       	U   	sys.warnoptions[:] = ['somevalue']"
  - "Lib/unittest/test/test_program.py:316:14    	initialising    	U   	# If initialising raises a type error"
  - "Lib/unittest/test/test_result.py:58:34      	aforenamed      	U   	Accordingly, tests for the aforenamed attributes are incorporated"
  - "Lib/unittest/test/test_result.py:343:29     	tracebacklocals 	U   	self.assertEqual('A tracebacklocals', formatted_exc)"
  - "Lib/unittest/test/test_result.py:569:20     	Tesult          	U   	def testOldTestTesultSetup(self):"
  - "Lib/unittest/test/test_runner.py:1137:9     	expectedresult  	U   	expectedresult = (runner.stream, DESCRIPTION"
  - "Lib/unittest/test/test_setups.py:149:24     	torndown    	U   	def test_class_not_torndown_when_setup_fails(self"
  - "Lib/unittest/test/test_setups.py:442:46     	teardowns   	U   	executes_setups_and_teardowns(self):"
  - "Lib/unittest/test/test_suite.py:313:23  	noncallable     	U   	def test_addTest__noncallable(self):"
  - "Lib/unittest/test/test_suite.py:317:23  	casesuiteclass  	U   	def test_addTest__casesuiteclass(self):"
  - "Lib/unittest/test/test_suite.py:353:40  	noniterables    	U   	removeAtIndex raises for noniterables this next line will"
  - "Lib/unittest/test/testmock/testasync.py:577:42  	sessionmock         	U   	session = MagicMock(name='sessionmock')"
  - "Lib/unittest/test/testmock/testasync.py:690:54  	bahave              	U   	mock and the real thing bahave the same"
  - "Lib/unittest/test/testmock/testasync.py:691:57  	coroutinefunction   	U   	actually async, so not a coroutinefunction"
  - "Lib/unittest/test/testmock/testasync.py:699:54  	corourtine          	U   	test aiter and anext corourtine with {mock_type}\"):"
  - "Lib/unittest/test/testmock/testasync.py:829:9   	kalls               	U   	kalls = [call('foo')]"
  - "Lib/unittest/test/testmock/testasync.py:1022:34 	bamf                	U   	self._runnable_test('bamf'))"
  - "Lib/unittest/test/testmock/testcallable.py:2:11     	fuzzyman    	U   	# E-mail: fuzzyman AT voidspace DOT org"
  - "Lib/unittest/test/testmock/testcallable.py:2:23     	voidspace   	U   	E-mail: fuzzyman AT voidspace DOT org DOT uk"
  - "Lib/unittest/test/testmock/testhelpers.py:56:28     	zinga           	U   	mock.method(d, zinga=d, alpha=d)"
  - "Lib/unittest/test/testmock/testhelpers.py:381:16    	someclass       	U   	def _check_someclass_mock(self, mock):"
  - "Lib/unittest/test/testmock/testhelpers.py:765:19    	attributeerrors 	U   	def test_skip_attributeerrors(self):"
  - "Lib/unittest/test/testmock/testhelpers.py:905:17    	subprop         	U   	def subprop(self): pass"
  - "Lib/unittest/test/testmock/testhelpers.py:957:13    	myfunc          	U   	def myfunc(x, y): pass"
  - "Lib/unittest/test/testmock/testhelpers.py:1080:27   	returnvalue     	U   	def test_propertymock_returnvalue(self):"
  - "Lib/unittest/test/testmock/testhelpers.py:1106:17   	staticfunc      	U   	def staticfunc(): pass"
  - "Lib/unittest/test/testmock/testhelpers.py:1117:17   	classfunc       	U   	def classfunc(cls): pass"
  - "Lib/unittest/test/testmock/testmock.py:35:9     	cmeth           	U   	def cmeth(cls, a, b, c, d=None"
  - "Lib/unittest/test/testmock/testmock.py:38:9     	smeth           	U   	def smeth(a, b, c, d=None): pass"
  - "Lib/unittest/test/testmock/testmock.py:158:32   	kablooie        	U   	raise SystemError('kablooie')"
  - "Lib/unittest/test/testmock/testmock.py:204:40   	Bazinga         	U   	effect = ValueError('Bazinga!')"
  - "Lib/unittest/test/testmock/testmock.py:616:30   	nondefault      	U   	test_wraps_call_with_nondefault_return_value(self):"
  - "Lib/unittest/test/testmock/testmock.py:805:14   	baseexceptional 	U   	def test_baseexceptional_side_effect(self):"
  - "Lib/unittest/test/testmock/testmock.py:1714:27  	sideeffect      	U   	def test_reset_return_sideeffect(self):"
  - "Lib/unittest/test/testmock/testmock.py:1913:9   	mopen           	U   	mopen = mock.mock_open(read"
  - "Lib/unittest/test/testmock/testmock.py:1919:14  	namedtemp       	U   	mock_namedtemp = mock.mock_open(mock"
  - "Lib/unittest/test/testmock/testmock.py:1921:18  	filehandle      	U   	mock_filehandle = mock_namedtemp.return"
  - "Lib/unittest/test/testmock/testmock.py:2162:48  	testpatch       	U   	unittest.mock.patch. In testpatch.PatchTest"
  - "Lib/unittest/test/testmock/testmock.py:2210:44  	Runtim          	U   	explicitly and throw a RuntimError if found."
  - "Lib/unittest/test/testmock/testpatch.py:97:21   	patchobject             	U   	def test_single_patchobject(self):"
  - "Lib/unittest/test/testmock/testpatch.py:353:20  	frooble                 	U   	@patch('%s.frooble' % builtin_string, sentinel"
  - "Lib/unittest/test/testmock/testpatch.py:353:56  	Frooble                 	U   	builtin_string, sentinel.Frooble, create=True)"
  - "Lib/unittest/test/testmock/testpatch.py:398:26  	doesnotexists           	U   	fobj = open('doesnotexists.txt')"
  - "Lib/unittest/test/testmock/testpatch.py:410:17  	woot                    	U   	def woot():"
  - "Lib/unittest/test/testmock/testpatch.py:660:44  	delong                  	U   	os.environ', {'konrad_delong': 'some value'})"
  - "Lib/unittest/test/testmock/testpatch.py:1122:33 	weeeee                  	U   	existent_attr = '%s.weeeee' % foo_name"
  - "Lib/unittest/test/testmock/testpatch.py:1505:13 	additionals             	U   	for additionals in [good, bad], [bad"
  - "Lib/unittest/test/testmock/testpatch.py:1653:21 	squizz                  	U   	p1 = patch('squizz.squozz')"
  - "Lib/unittest/test/testmock/testpatch.py:1653:28 	squozz                  	U   	p1 = patch('squizz.squozz')"
  - "Lib/unittest/test/testmock/testpatch.py:1743:14 	falsey                  	U   	def test_falsey_spec(self):"
  - "Lib/unittest/test/testmock/testpatch.py:1748:64 	doesnotexit             	U   	AttributeError, getattr, m, 'doesnotexit')"
  - "Lib/unittest/test/testmock/testpatch.py:1808:19 	mypatch                 	U   	class mypatch(_patch):"
  - "Lib/unittest/test/testmock/testpatch.py:1823:9  	origdic                 	U   	origdic1 = dic1.copy()"
  - "Lib/unittest/test/testmock/testpatch.py:1897:20 	orderdict               	U   	def test_patch_orderdict(self):"
  - "Lib/unittest/test/testmock/testpatch.py:1903:35 	cdefghijklmnopqrstuvwxyz	U   	update_values = list(zip('cdefghijklmnopqrstuvwxyz', range(26)))"
  - "Lib/unittest/test/testmock/testsentinel.py:12:57    	whateverelse	U   	sentinel.whatever, sentinel.whateverelse,"
  - "Lib/unittest/util.py:18:28      	suffixlen   	U   	shorten(s, prefixlen, suffixlen):"
  - "Lib/urllib/parse.py:6:9     	Masinter    	U   	and L. Masinter, January 2005."
  - "Lib/urllib/parse.py:8:61    	Hinden      	U   	Addresses in URL's by R.Hinden, B.Carpenter"
  - "Lib/urllib/parse.py:14:66   	Zawinski    	U   	Hoffman , L Masinter, J. Zawinski, July 1998."
  - "Lib/urllib/parse.py:20:3    	Cahill      	U   	McCahill, December 1994"
  - "Lib/urllib/parse.py:48:44   	shttp       	U   	, 'file', 'https', 'shttp', 'mms',"
  - "Lib/urllib/parse.py:49:19   	prospero    	U   	'prospero', 'rtsp', 'rtspu',"
  - "Lib/urllib/parse.py:49:31   	rtsp        	U   	'prospero', 'rtsp', 'rtspu', 'sftp',"
  - "Lib/urllib/parse.py:49:39   	rtspu       	U   	prospero', 'rtsp', 'rtspu', 'sftp',"
  - "Lib/urllib/parse.py:54:17   	snews       	U   	'snews', 'prospero', 'rtsp"
  - "Lib/urllib/parse.py:161:26  	hostinfo    	U   	hostname = self._hostinfo[0]"
  - "Lib/urllib/parse.py:396:24  	splitparams 	U   	url, params = _splitparams(url)"
  - "Lib/urllib/parse.py:411:6   	splitnetloc 	U   	def _splitnetloc(url, start=0):"
  - "Lib/urllib/parse.py:414:9   	wdelim      	U   	wdelim = url.find(c, start"
  - "Lib/urllib/parse.py:419:6   	checknetloc 	U   	def _checknetloc(netloc):"
  - "Lib/urllib/parse.py:533:5   	bscheme     	U   	bscheme, bnetloc, bpath, bparams"
  - "Lib/urllib/parse.py:533:14  	bnetloc     	U   	bscheme, bnetloc, bpath, bparams, bquery"
  - "Lib/urllib/parse.py:533:30  	bparams     	U   	bscheme, bnetloc, bpath, bparams, bquery, bfragment"
  - "Lib/urllib/parse.py:533:39  	bquery      	U   	bnetloc, bpath, bparams, bquery, bfragment = \\"
  - "Lib/urllib/parse.py:533:47  	bfragment   	U   	bpath, bparams, bquery, bfragment = \\"
  - "Lib/urllib/parse.py:596:28  	defragmented	U   	Returns a tuple of the defragmented URL and the fragment"
  - "Lib/urllib/parse.py:609:2   	hexdig      	U   	_hexdig = '0123456789ABCDEFabcdef"
  - "Lib/urllib/parse.py:642:2   	asciire     	U   	_asciire = re.compile('([\\x0"
  - "Lib/urllib/parse.py:1032:2  	typeprog    	U   	_typeprog = None"
  - "Lib/urllib/parse.py:1053:2  	hostprog    	U   	_hostprog = None"
  - "Lib/urllib/parse.py:1103:2  	portprog    	U   	_portprog = None"
  - "Lib/urllib/parse.py:1118:22 	defport     	U   	def splitnport(host, defport=-1):"
  - "Lib/urllib/parse.py:1135:13 	nport       	U   	nport = int(port)"
  - "Lib/urllib/request.py:55:29     	klem            	U   	user='klem',"
  - "Lib/urllib/request.py:56:31     	geheim          	U   	passwd='geheim$parole')"
  - "Lib/urllib/request.py:222:6     	tempfiles       	U   	_url_tempfiles = []"
  - "Lib/urllib/request.py:262:13    	blocknum        	U   	blocknum = 0"
  - "Lib/urllib/request.py:653:61    	newurl          	U   	code, msg, headers, newurl):"
  - "Lib/urllib/request.py:674:14    	conciliant      	U   	# Be conciliant with URIs containing"
  - "Lib/urllib/request.py:818:13    	creds           	U   	creds = base64.b64encode(user"
  - "Lib/urllib/request.py:876:13    	dport           	U   	dport = {\"http\": 80,"
  - "Lib/urllib/request.py:986:37    	authreq         	U   	error_auth_reqed(self, authreq, host, req, headers"
  - "Lib/urllib/request.py:1077:2    	randombytes     	U   	_randombytes = os.urandom"
  - "Lib/urllib/request.py:1125:9    	chal            	U   	chal = parse_keqv_list(filter"
  - "Lib/urllib/request.py:1168:13   	entdig          	U   	entdig = self.get_entity_digest"
  - "Lib/urllib/request.py:1179:13   	respdig         	U   	respdig = KD(H(A1), \"%s:%s\""
  - "Lib/urllib/request.py:1186:13   	ncvalue         	U   	ncvalue = '%08x' % self.nonce"
  - "Lib/urllib/request.py:1188:13   	noncebit        	U   	noncebit = \"%s:%s:%s:%s:%s\""
  - "Lib/urllib/request.py:1214:19   	sess            	U   	# XXX MD5-sess"
  - "Lib/urllib/request.py:1508:13   	mtype           	U   	mtype = mimetypes.guess_type"
  - "Lib/urllib/request.py:1517:21   	origurl         	U   	origurl = 'file://' + host"
  - "Lib/urllib/request.py:1572:17   	retrlen         	U   	fp, retrlen = fw.retrfile(file,"
  - "Lib/urllib/request.py:1721:14   	tempcache       	U   	self.tempcache = None"
  - "Lib/urllib/request.py:1768:9    	urltype         	U   	urltype, url = _splittype(fullurl"
  - "Lib/urllib/request.py:1773:22   	proxyhost       	U   	urltype, proxyhost = _splittype(proxy)"
  - "Lib/urllib/request.py:1809:13   	tempfilename    	U   	or (tempfilename, headers) for a remote"
  - "Lib/urllib/request.py:1892:13   	realhost        	U   	realhost = host"
  - "Lib/urllib/request.py:2025:13   	urlfile         	U   	urlfile = file"
  - "Lib/urllib/request.py:2269:20   	proxyselector   	U   	proxyhost, proxyselector = _splithost(proxyhost"
  - "Lib/urllib/request.py:2460:9    	ftpobj          	U   	ftpobj = addclosehook(conn"
  - "Lib/urllib/request.py:2538:5    	hostonly        	U   	hostonly, port = _splitport(host"
  - "Lib/urllib/request.py:2563:31   	scproxy         	U   	settings come from _scproxy._get_proxy_settings"
  - "Lib/urllib/response.py:40:40    	hookargs	U   	self, fp, closehook, *hookargs):"
  - "Lib/urllib/robotparser.py:73:25     	useragents  	U   	if \"*\" in entry.useragents:"
  - "Lib/urllib/robotparser.py:123:31    	rulelines   	U   	entry.rulelines.append(RuleLine(line"
  - "Lib/urllib/robotparser.py:154:25    	useragent   	U   	def can_fetch(self, useragent, url):"
  - "Lib/uu.py:43:8      	Uuencode    	U   	\"\"\"Uuencode file\"\"\""
  - "Lib/uu.py:112:13    	hdrfields   	U   	hdrfields = hdr.split(b' ', 2"
  - "Lib/uu.py:161:17    	uudecode    	U   	\"\"\"uuencode/uudecode main program\"\"\""
  - "Lib/uuid.py:450:29  	macaddr 	U   	# (Only) on AIX the macaddr value given is not prefixed"
  - "Lib/uuid.py:617:65  	dlload  	U   	are prefixed by a dll/dlload() method"
  - "Lib/venv/__init__.py:118:18     	exename         	U   	dirname, exename = os.path.split(os.path"
  - "Lib/venv/__init__.py:123:13     	binname         	U   	binname = 'Scripts'"
  - "Lib/venv/__init__.py:124:13     	incpath         	U   	incpath = 'Include'"
  - "Lib/venv/__init__.py:141:28     	binpath         	U   	context.bin_path = binpath = os.path.join(env_dir"
  - "Lib/venv/__init__.py:219:25     	venvlauncher    	U   	# copies of venvlauncher.exe"
  - "Lib/venv/__init__.py:221:13     	srcfn           	U   	srcfn = os.path.join(os.path"
  - "Lib/venv/__init__.py:234:33     	venvwlauncher   	U   	basename = 'venvwlauncher'"
  - "Lib/venv/__init__.py:297:25     	tcldir          	U   	tcldir = os.path.basename(root"
  - "Lib/venv/__init__.py:386:21     	dstdir          	U   	dstdir = binpath"
  - "Lib/venv/__init__.py:391:17     	dstfile         	U   	dstfile = os.path.join(dstdir"
  - "Lib/venv/scripts/common/Activate.ps1:11:12      	Venv    	U   	.Parameter VenvDir"
  - "Lib/venv/scripts/common/Activate.ps1:19:66      	venv    	U   	single space (ie. '(.venv) ')."
  - "Lib/venv/scripts/common/Activate.ps1:149:14     	keyval  	U   	$keyval = $PSItem -split \"\\s"
  - "Lib/venv/scripts/common/Activate.ps1:174:28     	Fullname	U   	Verbose \"VenvExecDir Fullname: '$($VenvExecDir.FullName"
  - "Lib/venv/scripts/nt/activate.bat:4:61       	chcp	U   	SystemRoot%\\System32\\chcp.com\"') do ("
  - "Lib/venv/scripts/posix/activate.csh:3:14    	Davide  	U   	# Created by Davide Di Blasi <davidedb@gmail"
  - "Lib/venv/scripts/posix/activate.csh:3:24    	Blasi   	U   	Created by Davide Di Blasi <davidedb@gmail.com"
  - "Lib/venv/scripts/posix/activate.csh:4:39    	Svetlov 	U   	Python 3.3 venv by Andrew Svetlov <andrew.svetlov@gmail"
  - "Lib/venv/scripts/posix/activate.csh:6:52    	setenv  	U   	VIRTUAL_PATH != 0 && setenv PATH \"$_OLD_VIRTUAL"
  - "Lib/warnings.py:13:6    	showwarnmsg     	U   	_showwarnmsg_impl(msg)"
  - "Lib/warnings.py:18:13   	formatwarnmsg   	U   	return _formatwarnmsg_impl(msg)"
  - "Lib/warnings.py:194:6   	processoptions  	U   	def _processoptions(args):"
  - "Lib/warnings.py:211:15  	getaction       	U   	action = _getaction(action)"
  - "Lib/warnings.py:213:17  	getcategory     	U   	category = _getcategory(category)"
  - "Lib/warnings.py:364:18  	defaultaction   	U   	action = defaultaction"
  - "Lib/warnings.py:379:9   	oncekey         	U   	oncekey = (text, category)"
  - "Lib/warnings.py:380:12  	onceregistry    	U   	if onceregistry.get(oncekey):"
  - "Lib/warnings.py:387:9   	altkey          	U   	altkey = (text, category,"
  - "Lib/warnings.py:521:29  	regexs          	U   	either if the compiled regexs are None, match anything"
  - "Lib/weakref.py:574:35   	exitfunc	U   	atexit.register(self._exitfunc)"
  - "Lib/webbrowser.py:213:51    	newwin      	U   	for new=0 (open). If newwin is not None, it is"
  - "Lib/webbrowser.py:214:38    	newtab      	U   	new=1 (open_new). If newtab is not None, it is used"
  - "Lib/webbrowser.py:354:25    	kfmclient   	U   	See the output of ``kfmclient --commands``"
  - "Lib/webbrowser.py:377:15    	kfmclient's 	U   	# kfmclient's return code unfortunately"
  - "Lib/webbrowser.py:465:67    	gvfs        	U   	environ and shutil.which(\"gvfs-open\"):"
  - "Lib/webbrowser.py:480:33    	iceweasel   	U   	browser in (\"firefox\", \"iceweasel\", \"iceape\", \"seamonkey"
  - "Lib/webbrowser.py:480:46    	iceape      	U   	firefox\", \"iceweasel\", \"iceape\", \"seamonkey\"):"
  - "Lib/webbrowser.py:480:56    	seamonkey   	U   	iceweasel\", \"iceape\", \"seamonkey\"):"
  - "Lib/webbrowser.py:502:7     	Skipstone   	U   	# Skipstone, another Gtk/Mozilla"
  - "Lib/webbrowser.py:503:22    	skipstone   	U   	if shutil.which(\"skipstone\"):"
  - "Lib/webbrowser.py:528:37    	OSXOSA      	U   	register(\"MacOSX\", None, MacOSXOSAScript('default'))"
  - "Lib/webbrowser.py:535:25    	serenityos  	U   	if sys.platform == \"serenityos\":"
  - "Lib/webbrowser.py:544:9     	iexplore    	U   	iexplore = os.path.join(os.environ"
  - "Lib/webbrowser.py:584:9     	userchoices 	U   	userchoices = os.environ[\"BROWSER"
  - "Lib/webbrowser.py:607:20    	startfile   	U   	os.startfile(url)"
  - "Lib/webbrowser.py:648:34    	Omni        	U   	if self.name == \"OmniWeb\":"
  - "Lib/webbrowser.py:659:48    	osascript   	U   	AppleScript through osascript command"
  - "Lib/webbrowser.py:660:13    	osapipe     	U   	osapipe = os.popen(\"osascript"
  - "Lib/webbrowser.py:663:31    	osascript's 	U   	# Write script to osascript's stdin"
  - "Lib/wsgiref/handlers.py:74:42   	simplehttp  	U   	software.startswith('simplehttp/')"
  - "Lib/wsgiref/handlers.py:350:36  	retarget    	U   	Subclasses may override to retarget the output or change"
  - "Lib/wsgiref/handlers.py:529:8   	metabase    	U   	or metabase allowPathInfoForScriptMapping"
  - "Lib/wsgiref/handlers.py:541:37  	vhost       	U   	can only be made on a vhost level, affecting all"
  - "Lib/wsgiref/simple_server.py:132:47     	backpointer 	U   	handler = self # backpointer for logging"
  - "Lib/wsgiref/util.py:157:2   	hoppish 	U   	_hoppish = {"
  - "Lib/wsgiref/validate.py:1:16    	Bicking 	U   	# (c) 2005 Ian Bicking and contributors; written"
  - "Lib/wsgiref/validate.py:3:8     	licenced	U   	# Also licenced under the Apache License"
  - "Lib/xdrlib.py:20:12     	ivars       	U   	Public ivars:"
  - "Lib/xdrlib.py:153:26    	unextracted 	U   	raise Error('unextracted data remains')"
  - "Lib/xml/__init__.py:11:8    	Megginson   	U   	Megginson and ported to Python"
  - "Lib/xml/__init__.py:11:54   	Garshol     	U   	Python by Lars Marius Garshol. This"
  - "Lib/xml/dom/expatbuilder.py:54:41   	idref       	U   	minidom.TypeInfo(None, \"idref\"),"
  - "Lib/xml/dom/expatbuilder.py:55:41   	idrefs      	U   	minidom.TypeInfo(None, \"idrefs\"),"
  - "Lib/xml/dom/expatbuilder.py:56:41   	nmtoken     	U   	minidom.TypeInfo(None, \"nmtoken\"),"
  - "Lib/xml/dom/expatbuilder.py:57:41   	nmtokens    	U   	minidom.TypeInfo(None, \"nmtokens\"),"
  - "Lib/xml/dom/expatbuilder.py:107:22  	euri        	U   	def isIdNS(self, euri, ename, auri, aname"
  - "Lib/xml/dom/expatbuilder.py:107:28  	ename       	U   	def isIdNS(self, euri, ename, auri, aname):"
  - "Lib/xml/dom/expatbuilder.py:107:35  	auri        	U   	isIdNS(self, euri, ename, auri, aname):"
  - "Lib/xml/dom/expatbuilder.py:375:13  	filt        	U   	filt = self._filter.startContainer"
  - "Lib/xml/dom/expatbuilder.py:377:42  	descendents 	U   	ignore this node & all descendents"
  - "Lib/xml/dom/expatbuilder.py:637:9   	nsattrs     	U   	nsattrs = self._getNSattrs("
  - "Lib/xml/dom/expatbuilder.py:690:20  	entref      	U   	# this entref is the one that we made"
  - "Lib/xml/dom/minidom.py:13:33    	linearizer  	U   	some of the writer and linearizer code into conformance"
  - "Lib/xml/dom/minidom.py:49:40    	newl        	U   	oprettyxml(self, indent=\"\\t\", newl=\"\\n\", encoding=None"
  - "Lib/xml/dom/minidom.py:304:13   	datachars   	U   	\"Writes datachars to writer.\""
  - "Lib/xml/dom/minidom.py:403:9    	nsuri       	U   	nsuri = self.namespaceURI"
  - "Lib/xml/dom/minidom.py:758:30   	nssplit     	U   	prefix, localname = _nssplit(qualifiedName)"
  - "Lib/xml/dom/minidom.py:869:43   	addindent   	U   	writer, indent=\"\", addindent=\"\", newl=\"\"):"
  - "Lib/xml/dom/minidom.py:1039:13  	dotdotdot   	U   	dotdotdot = \"...\""
  - "Lib/xml/dom/minidom.py:1443:59  	Xerces      	U   	obvious candidate. Since Xerces raises"
  - "Lib/xml/dom/minidom.py:1658:13  	childclone  	U   	childclone = _clone_node(n, deep"
  - "Lib/xml/dom/xmlbuilder.py:79:50     	xform   	U   	self._settings[(_name_xform(name), state)]"
  - "Lib/xml/dom/xmlbuilder.py:197:39    	cnode   	U   	parseWithContext(self, input, cnode, action):"
  - "Lib/xml/dom/xmlbuilder.py:251:31    	getplist	U   	for param in info.getplist():"
  - "Lib/xml/dom/xmlbuilder.py:359:23    	snode   	U   	def saveXML(self, snode):"
  - "Lib/xml/etree/__init__.py:1:46      	fredrik 	U   	008-02-13 08:05:08Z fredrik $"
  - "Lib/xml/etree/ElementInclude.py:131:57  	hrefs   	U   	max_depth, _parent_hrefs):"
  - "Lib/xml/etree/ElementTree.py:194:38     	Subelements 	U   	creates a shallow copy. Subelements will be shared with"
  - "Lib/xml/etree/ElementTree.py:546:10     	setroot     	U   	def _setroot(self, element):"
  - "Lib/xml/etree/ElementTree.py:741:17     	qnames      	U   	qnames, namespaces = _namespaces"
  - "Lib/xml/etree/ElementTree.py:747:11     	lxml        	U   	# lxml.etree compatibility"
  - "Lib/xml/etree/ElementTree.py:914:32     	basefont    	U   	= (\"area\", \"base\", \"basefont\", \"br\", \"col\", \"frame"
  - "Lib/xml/etree/ElementTree.py:915:32     	isindex     	U   	\"img\", \"input\", \"isindex\", \"link\", \"meta\", \"param"
  - "Lib/xml/etree/ElementTree.py:959:13     	ltag        	U   	ltag = tag.lower()"
  - "Lib/xml/etree/ElementTree.py:1243:5     	pullparser  	U   	pullparser = XMLPullParser(events"
  - "Lib/xml/etree/ElementTree.py:1288:23    	setevents   	U   	self._parser._setevents(self._events_queue,"
  - "Lib/xml/etree/ElementTree.py:1618:10    	raiseerror  	U   	def _raiseerror(self, value):"
  - "Lib/xml/etree/ElementTree.py:1624:10    	fixname     	U   	def _fixname(self, key):"
  - "Lib/xml/etree/ElementTree.py:1739:36    	serialised  	U   	XML to its C14N 2.0 serialised form."
  - "Lib/xml/etree/ElementTree.py:1775:5     	Serialises  	U   	Serialises parse events to XML"
  - "Lib/xml/sax/__init__.py:43:5    	inpsrc  	U   	inpsrc = InputSource()"
  - "Lib/xml/sax/_exceptions.py:69:15    	colnum  	U   	self._colnum = self._locator.getColumnNumb"
  - "Lib/xml/sax/expatreader.py:39:10    	mkproxy 	U   	def _mkproxy(o):"
  - "Lib/xml/sax/expatreader.py:349:9    	newattrs	U   	newattrs = {}"
  - "Lib/xml/sax/expatreader.py:357:17   	apair   	U   	apair = (None, aname)"
  - "Lib/xml/sax/handler.py:217:60   	ndata       	U   	publicId, systemId, ndata):"
  - "Lib/xml/sax/handler.py:374:34   	identfier   	U   	system_id the system identfier of the external subset"
  - "Lib/xml/sax/saxutils.py:71:6    	gettextwriter   	U   	def _gettextwriter(out, encoding):"
  - "Lib/xml/sax/saxutils.py:358:9   	basehead        	U   	basehead = os.path.dirname(os"
  - "Lib/xml/sax/saxutils.py:359:9   	sysidfilename   	U   	sysidfilename = os.path.join(basehead"
  - "Lib/xml/sax/xmlreader.py:209:16     	bytefile	U   	self.__bytefile = None"
  - "Lib/xml/sax/xmlreader.py:210:16     	charfile	U   	self.__charfile = None"
  - "Lib/xml/sax/xmlreader.py:351:14     	nsname  	U   	for (nsname, qname) in self._qnames"
  - "Lib/xmlrpc/client.py:33:29      	microtuning     	U   	0-02 fl More dumps microtuning"
  - "Lib/xmlrpc/client.py:38:64      	Rucker          	U   	possible (from James Rucker)"
  - "Lib/xmlrpc/client.py:39:24      	pythondoc       	U   	002-04-07 fl Added pythondoc comments"
  - "Lib/xmlrpc/client.py:41:53      	Kuchling        	U   	constants (from Andrew Kuchling)"
  - "Lib/xmlrpc/client.py:52:17      	doko            	U   	# 2014-12-02 ch/doko Add workaround for"
  - "Lib/xmlrpc/client.py:106:30     	boxcared        	U   	MultiCall Executor of boxcared xmlrpc requests"
  - "Lib/xmlrpc/client.py:113:18     	Unmarshal       	U   	Unmarshaller Unmarshal an XML-RPC response"
  - "Lib/xmlrpc/client.py:124:24     	unmarshalling   	U   	to an unmarshalling object"
  - "Lib/xmlrpc/client.py:534:19     	twouters        	U   	# XXX(twouters): using \"_arbitrary"
  - "Lib/xmlrpc/client.py:914:13     	mkdatetime      	U   	mkdatetime = _datetime_type"
  - "Lib/xmlrpc/client.py:915:13     	mkbytes         	U   	mkbytes = base64.decodebytes"
  - "Lib/xmlrpc/client.py:937:4      	keyparam        	U   	# @keyparam methodname If given"
  - "Lib/xmlrpc/client.py:985:9      	xmlheader       	U   	xmlheader = \"<?xml version='1"
  - "Lib/xmlrpc/client.py:1256:9     	chost           	U   	chost, self._extra_headers"
  - "Lib/xmlrpc/server.py:609:8      	Multipath   	U   	\"\"\"Multipath XML-RPC Server"
  - "Lib/xmlrpc/server.py:855:25     	argstring   	U   	the _get_method_argstring(method_name) method"
  - "Lib/zipfile.py:180:25   	xids        	U   	_strip_extra(extra, xids):"
  - "Lib/zipfile.py:223:33   	endrec      	U   	EndRecData64(fpin, offset, endrec):"
  - "Lib/zipfile.py:237:10   	diskno      	U   	sig, diskno, reloff, disks = struct"
  - "Lib/zipfile.py:237:18   	reloff      	U   	sig, diskno, reloff, disks = struct.unpack"
  - "Lib/zipfile.py:250:9    	dircount    	U   	dircount, dircount2, dirsize"
  - "Lib/zipfile.py:250:39   	diroffset   	U   	dircount2, dirsize, diroffset = \\"
  - "Lib/zipfile.py:421:9    	dosdate     	U   	dosdate = (dt[0] - 1980) <<"
  - "Lib/zipfile.py:422:9    	dostime     	U   	dostime = dt[3] << 11 | dt["
  - "Lib/zipfile.py:546:2    	crctable    	U   	_crctable = None"
  - "Lib/zipfile.py:560:16   	Decrypter   	U   	# zd = _ZipDecrypter(mypwd)"
  - "Lib/zipfile.py:560:26   	mypwd       	U   	zd = _ZipDecrypter(mypwd)"
  - "Lib/zipfile.py:587:9    	decrypter   	U   	def decrypter(data):"
  - "Lib/zipfile.py:668:10   	wavpack     	U   	97: 'wavpack',"
  - "Lib/zipfile.py:669:10   	ppmd        	U   	98: 'ppmd',"
  - "Lib/zipfile.py:1110:9   	filepos     	U   	filepos = self._orig_file_size"
  - "Lib/zipfile.py:1312:19  	fpclose     	U   	self._fpclose(fp)"
  - "Lib/zipfile.py:1368:13  	centdir     	U   	centdir = fp.read(sizeCentralDir"
  - "Lib/zipfile.py:1539:13  	fheader     	U   	fheader = zef_file.read(sizeFileHeade"
  - "Lib/zipfile.py:1618:15  	writecheck  	U   	self._writecheck(zinfo)"
  - "Lib/zipfile.py:1800:57  	drwxrwxr    	U   	= 0o40775 << 16 # drwxrwxr-x"
  - "Lib/zipfile.py:1929:18  	locrec      	U   	zip64locrec = struct.pack("
  - "Lib/zipfile.py:1984:13  	initname    	U   	initname = os.path.join(pathname"
  - "Lib/zipfile.py:2045:30  	archivename 	U   	\"\"Return (filename, archivename) for the path."
  - "Lib/zipfile.py:2168:2   	dedupe      	U   	_dedupe = dict.fromkeys"
  - "Lib/zipfile.py:2442:13  	badfile     	U   	badfile = zf.testzip()"
  - "Lib/zipfile.py:2461:32  	zippath     	U   	def addToZip(zf, path, zippath):"
  - "Lib/zipimport.py:51:11      	myimport        	U   	'/tmp/myimport.zip', or '/tmp/myimport"
  - "Lib/zipimport.py:51:48      	mydirectory     	U   	or '/tmp/myimport.zip/mydirectory', if mydirectory is"
  - "Lib/zipimport.py:344:8      	searchorder     	U   	# _zip_searchorder defines how we search"
  - "Lib/zipimport.py:347:18     	initzipimport   	U   	# are swapped by initzipimport() if we run in optimized"
  - "Lib/zipimport.py:373:17     	isbytecode      	U   	for suffix, isbytecode, ispackage in _zip_searchorde"
  - "Lib/zipimport.py:493:35     	fseek           	U   	On Windows, calling fseek to skip over the fields"
  - "Lib/zipimport.py:534:7      	abcdefghijklmno 	U   	'`abcdefghijklmno'"
  - "Lib/zipimport.py:632:41     	unmarshal       	U   	contents of a .py[co] file, unmarshal the data"
  - "LICENSE-logo:36:7       	creativecommons 	U   	wiki.creativecommons.org/Considerations_for"
  - "LICENSE-logo:139:15     	sublicensable   	U   	non-sublicensable, non-exclusive, irrevocable"
  - "LICENSE-logo:205:34     	waivable        	U   	under any voluntary or waivable statutory or compulsory"
  - "pdc.sh:26:90    	Dwarnings   	U   	cargo clippy --all -- -Dwarnings\" \"cargo test --all\""
  - "README.md:9:4       	codecov         	U   	[![codecov](https://codecov.io"
  - "README.md:66:46     	conda           	U   	RustPython through the `conda` package manager, though"
  - "README.md:82:8      	wasmer          	U   	Run by wasmer"
  - "README.md:87:8      	wapm            	U   	Run by wapm"
  - "README.md:157:4     	Greptime        	U   	- [GreptimeDB](https://github.com"
  - "README.md:158:4     	pyckitup        	U   	- [pyckitup](https://github.com"
  - "README.md:222:2     	windelbouwman   	U   	[windelbouwman/rspython](https://github"
  - "README.md:222:16    	rspython        	U   	[windelbouwman/rspython](https://github.com"
  - "README.md:223:2     	shinglyu        	U   	[shinglyu/RustPython](https:/"
  - "scripts/codecoverage-rustc-wrapper.sh:17:13     	Cinstrument 	U   	EXTRA=(-Cinstrument-coverage)"
  - "scripts/install-openssl.ps1:1:12    	Actix       	U   	# From the Actix Web windows workflow"
  - "scripts/install-openssl.ps1:3:1     	vcpkg       	U   	vcpkg integrate install"
  - "scripts/install-openssl.ps1:5:46    	libcrypto   	U   	installed\\x64-windows\\bin\\libcrypto-1_1-x64.dll C:\\vcpkg"
  - "scripts/redox/comment-cargo.sh:7:11     	mktemp  	U   	tmpfile=$(mktemp)"
  - "scripts/redox/install.sh:30:36      	nrustpython 	U   	packages\\]/[packages]\\nrustpython = {}/' filesystem.toml"
  - "scripts/redox/recipe.sh:7:11    	realpath	U   	dest=\"$(realpath \"$1\")\""
  - "src/lib.rs:13:81    	otherthing  	U   	pass\", module_name = \"otherthing\"));"
  - "src/lib.rs:75:17    	setmode     	U   	fn _setmode(fd: i32, flags: i32"
  - "src/lib.rs:92:9     	exitcode    	U   	let exitcode = interp.run(move |vm"
  - "src/lib.rs:118:13   	getpip      	U   	let get_getpip = rustpython_vm::py"
  - "src/lib.rs:121:17   	urllib      	U   	__import__(\"urllib.request\").request.urlopen"
  - "src/lib.rs:121:42   	urlopen     	U   	urllib.request\").request.urlopen(\"https://bootstrap.pypa"
  - "src/lib.rs:137:4    	ensurepip   	U   	fn ensurepip(_: Scope, vm: &VirtualMachine"
  - "src/lib.rs:217:9    	Speedscope  	U   	Speedscope,"
  - "src/settings.rs:238:17  	xopts   	U   	if let Some(xopts) = matches.values_of"
  - "src/shell.rs:10:5       	readline    	U   	readline::{Readline, ReadlineResult"
  - "src/shell.rs:10:16      	Readline    	U   	readline::{Readline, ReadlineResult},"
  - "src/shell.rs:185:25     	isinstance  	U   	if exc.fast_isinstance(vm.ctx.exceptions.system"
  - "stdlib/build.rs:8:39    	ossl    	U   	println!(\"cargo:rustc-cfg=ossl101\");"
  - "stdlib/build.rs:25:39   	osslconf	U   	println!(\"cargo:rustc-cfg=osslconf=\\\"{conf}\\\"\");"
  - "stdlib/Cargo.toml:10:10     	libz                	U   	zlib = [\"libz-sys\", \"flate2/zlib\""
  - "stdlib/Cargo.toml:10:22     	flate               	U   	zlib = [\"libz-sys\", \"flate2/zlib\"]"
  - "stdlib/Cargo.toml:42:10     	bidi                	U   	unic-ucd-bidi = \"0.9.0\""
  - "stdlib/Cargo.toml:66:1      	puruspe             	U   	puruspe = \"0.1.5\""
  - "stdlib/Cargo.toml:83:3      	mmap                	U   	# mmap"
  - "stdlib/Cargo.toml:89:1      	termios             	U   	termios = \"0.3.3\""
  - "stdlib/Cargo.toml:101:1     	libsqlite           	U   	libsqlite3-sys = { version ="
  - "stdlib/Cargo.toml:104:1     	schannel            	U   	schannel = \"0.1.19\""
  - "stdlib/Cargo.toml:111:16    	handleapi           	U   	\"winsock2\", \"handleapi\", \"ws2def\", \"std\","
  - "stdlib/Cargo.toml:111:46    	winbase             	U   	, \"ws2def\", \"std\", \"winbase\", \"wincrypt\", \"fileapi"
  - "stdlib/Cargo.toml:111:57    	wincrypt            	U   	\"std\", \"winbase\", \"wincrypt\", \"fileapi\", \"processenv"
  - "stdlib/Cargo.toml:111:69    	fileapi             	U   	winbase\", \"wincrypt\", \"fileapi\", \"processenv\","
  - "stdlib/Cargo.toml:111:80    	processenv          	U   	wincrypt\", \"fileapi\", \"processenv\","
  - "stdlib/Cargo.toml:112:4     	namedpipeapi        	U   	\"namedpipeapi\", \"winnt\", \"processthreadsapi"
  - "stdlib/Cargo.toml:112:29    	processthreadsapi   	U   	namedpipeapi\", \"winnt\", \"processthreadsapi\", \"errhandlingapi\","
  - "stdlib/Cargo.toml:112:50    	errhandlingapi      	U   	processthreadsapi\", \"errhandlingapi\", \"winuser\", \"synchapi"
  - "stdlib/Cargo.toml:112:68    	winuser             	U   	\"errhandlingapi\", \"winuser\", \"synchapi\", \"wincon"
  - "stdlib/Cargo.toml:112:79    	synchapi            	U   	errhandlingapi\", \"winuser\", \"synchapi\", \"wincon\","
  - "stdlib/Cargo.toml:112:91    	wincon              	U   	winuser\", \"synchapi\", \"wincon\","
  - "stdlib/Cargo.toml:113:33    	ifdef               	U   	default\", \"vcruntime\", \"ifdef\", \"netioapi\""
  - "stdlib/Cargo.toml:113:42    	netioapi            	U   	vcruntime\", \"ifdef\", \"netioapi\""
  - "stdlib/src/array.rs:20:22   	notimplemented  	U   	class_or_notimplemented,"
  - "stdlib/src/array.rs:44:43   	scode           	U   	$t:ty, $c:literal, $scode:literal)),*$(,)?) ="
  - "stdlib/src/array.rs:271:20  	getitem         	U   	fn getitem_by_index(&self, i: isize"
  - "stdlib/src/array.rs:337:20  	delitem         	U   	fn delitem_by_index(&mut self,"
  - "stdlib/src/array.rs:390:20  	imul            	U   	fn imul(&mut self, value: isize"
  - "stdlib/src/array.rs:509:13  	pyfloat         	U   	pyfloat_from_f32"
  - "stdlib/src/array.rs:800:12  	tounicode       	U   	fn tounicode(&self, vm: &VirtualMachine"
  - "stdlib/src/array.rs:831:12  	fromfile        	U   	fn fromfile(&self, f: PyObjectRef"
  - "stdlib/src/array.rs:925:12  	tolist          	U   	fn tolist(&self, vm: &VirtualMachine"
  - "stdlib/src/array.rs:950:12  	deepcopy        	U   	fn deepcopy(&self, _memo: PyObjectRef"
  - "stdlib/src/array.rs:1121:13 	proto           	U   	proto: usize,"
  - "stdlib/src/array.rs:1299:12 	setstate        	U   	fn setstate(&self, state: PyObjectRef"
  - "stdlib/src/array.rs:1328:9  	arraytype       	U   	arraytype: PyTypeRef,"
  - "stdlib/src/array.rs:1465:22 	issubclass      	U   	if !typ.fast_issubclass(PyArray::class(vm))"
  - "stdlib/src/binascii.rs:9:20     	binascii    	U   	#[pymodule(name = \"binascii\")]"
  - "stdlib/src/binascii.rs:56:8     	unhex       	U   	fn unhex_nibble(c: u8) -> Option"
  - "stdlib/src/binascii.rs:209:28   	uuencodes   	U   	// there are a few uuencodes out there that use"
  - "stdlib/src/binascii.rs:254:28   	roken       	U   	// roken case from broken python"
  - "stdlib/src/binascii.rs:265:28   	hexval      	U   	// hexval"
  - "stdlib/src/binascii.rs:309:21   	odatalen    	U   	let mut odatalen = 0;"
  - "stdlib/src/binascii.rs:313:21   	inidx       	U   	let mut inidx;"
  - "stdlib/src/binascii.rs:314:21   	outidx      	U   	let mut outidx;"
  - "stdlib/src/binascii.rs:508:29   	inend       	U   	let mut inend = idx + 1;"
  - "stdlib/src/bisect.rs:113:8      	insort  	U   	fn insort_left(BisectArgs { a"
  - "stdlib/src/cmath.rs:38:8    	isinf   	U   	fn isinf(z: ArgIntoComplex)"
  - "stdlib/src/cmath.rs:44:8    	isfinite	U   	fn isfinite(z: ArgIntoComplex)"
  - "stdlib/src/cmath.rs:49:8    	isnan   	U   	fn isnan(z: ArgIntoComplex)"
  - "stdlib/src/cmath.rs:156:8   	isclose 	U   	fn isclose(args: IsCloseArgs, vm"
  - "stdlib/src/contextvars.rs:1:17      	contextvars 	U   	pub(crate) use _contextvars::make_module;"
  - "stdlib/src/csv.rs:94:9      	quotechar   	U   	quotechar: u8,"
  - "stdlib/src/csv.rs:197:44    	nends       	U   	res, nread, nwritten, nends) = reader.read_record"
  - "stdlib/src/csv.rs:261:12    	writerow    	U   	fn writerow(&self, row: PyObjectRef"
  - "stdlib/src/csv.rs:316:12    	writerows   	U   	fn writerows(&self, rows: ArgIterable"
  - "stdlib/src/faulthandler.rs:3:20     	faulthandler	U   	#[pymodule(name = \"faulthandler\")]"
  - "stdlib/src/faulthandler.rs:21:13    	traceback   	U   	fn dump_traceback("
  - "stdlib/src/fcntl.rs:1:16    	fcntl   	U   	pub(crate) use fcntl::make_module;"
  - "stdlib/src/fcntl.rs:12:45   	fnctl   	U   	these from <asm-generic/fnctl.h> (please file an issue"
  - "stdlib/src/fcntl.rs:16:35   	stropts 	U   	these are/were from <stropts.h>, which may not be"
  - "stdlib/src/fcntl.rs:58:13   	Fildes  	U   	io::Fildes(fd): io::Fildes,"
  - "stdlib/src/gc.rs:43:12      	refererts   	U   	fn get_refererts(_args: FuncArgs, vm"
  - "stdlib/src/grp.rs:12:14     	unistd      	U   	use nix::unistd;"
  - "stdlib/src/grp.rs:29:48     	cstring     	U   	unwrap_or_else(|e| e.into_cstring().to_string_lossy()"
  - "stdlib/src/grp.rs:82:12     	setgrent    	U   	// setgrent, getgrent, etc are not"
  - "stdlib/src/grp.rs:82:22     	getgrent    	U   	// setgrent, getgrent, etc are not thread"
  - "stdlib/src/grp.rs:82:67     	fgetgrent   	U   	thread safe. Could use fgetgrent_r, but this is easier"
  - "stdlib/src/grp.rs:93:24     	endgrent    	U   	unsafe { libc::endgrent() };"
  - "stdlib/src/hashlib.rs:1:16      	hashlib         	U   	pub(crate) use hashlib::make_module;"
  - "stdlib/src/hashlib.rs:26:9      	usedforsecurity 	U   	usedforsecurity: bool,"
  - "stdlib/src/hashlib.rs:104:12    	hexdigest       	U   	fn hexdigest(&self) -> String {"
  - "stdlib/src/json.rs:72:13    	pystr       	U   	pystr: PyStrRef,"
  - "stdlib/src/json.rs:88:28    	scanstring  	U   	return scanstring(pystr, next_idx, OptionalArg"
  - "stdlib/src/json/machinery.rs:44:7       	fedcba  	U   	//fedcba9876543210_fedcba987"
  - "stdlib/src/lib.rs:110:27    	sysmodule   	U   	// crate::vm::sysmodule::sysconfigdata_name"
  - "stdlib/src/math.rs:45:8     	fabs        	U   	fn fabs(x: ArgIntoFloat, vm"
  - "stdlib/src/math.rs:221:8    	isqrt       	U   	fn isqrt(x: PyObjectRef, vm:"
  - "stdlib/src/math.rs:346:38   	powi        	U   	map(|x| (x / scale).powi(2))"
  - "stdlib/src/math.rs:559:8    	ldexp       	U   	fn ldexp("
  - "stdlib/src/math.rs:582:13   	argvec      	U   	let argvec = args.into_vec();"
  - "stdlib/src/math.rs:615:8    	fsum        	U   	fn fsum(seq: ArgIterable<ArgIntoFloat"
  - "stdlib/src/math.rs:623:17   	xsave       	U   	let xsave = x;"
  - "stdlib/src/math.rs:644:22   	nonfinite   	U   	// a nonfinite x could arise either"
  - "stdlib/src/math.rs:647:20   	summands    	U   	// summands"
  - "stdlib/src/math.rs:805:8    	modf        	U   	fn modf(x: ArgIntoFloat) ->"
  - "stdlib/src/math.rs:828:8    	fmod        	U   	fn fmod(x: f64, y: f64) -> f"
  - "stdlib/src/math.rs:860:17   	absx        	U   	let absx = x.abs();"
  - "stdlib/src/math.rs:861:17   	absy        	U   	let absy = y.abs();"
  - "stdlib/src/mmap.rs:24:27    	Mmap        	U   	use memmap2::{Advice, Mmap, MmapMut, MmapOptions"
  - "stdlib/src/mmap.rs:39:44    	Dont        	U   	DONTNEED => Advice::DontNeed,"
  - "stdlib/src/mmap.rs:47:45    	Mergeable   	U   	MERGEABLE => Advice::Mergeable,"
  - "stdlib/src/mmap.rs:49:47    	Unmergeable 	U   	UNMERGEABLE => Advice::Unmergeable,"
  - "stdlib/src/mmap.rs:538:18   	resizeable  	U   	fn check_resizeable(&self, vm: &VirtualMachine"
  - "stdlib/src/mmap.rs:635:12   	rfind       	U   	fn rfind(&self, options: FindOptions"
  - "stdlib/src/mmap.rs:648:46   	rposition   	U   	buf.windows(sub.len()).rposition(|window| window == sub"
  - "stdlib/src/mmap.rs:825:71   	mremap      	U   	resizing not available--no mremap()\".to_owned()))"
  - "stdlib/src/posixsubprocess.rs:7:18      	Errno   	U   	use nix::{errno::Errno, unistd};"
  - "stdlib/src/posixsubprocess.rs:31:13     	cstrs   	U   	let cstrs_to_ptrs = |cstrs: &"
  - "stdlib/src/posixsubprocess.rs:31:22     	ptrs    	U   	let cstrs_to_ptrs = |cstrs: &[CStrPathLike"
  - "stdlib/src/posixsubprocess.rs:40:13     	envp    	U   	let envp = args.env_list.as_ref"
  - "stdlib/src/posixsubprocess.rs:85:30     	procargs	U   	args: &ForkExecArgs, procargs: ProcArgs) -> ! {"
  - "stdlib/src/posixsubprocess.rs:142:17    	chdir   	U   	unistd::chdir(cwd.s.as_c_str())?"
  - "stdlib/src/posixsubprocess.rs:169:18    	setuid  	U   	// TODO: setuid"
  - "stdlib/src/posixsubprocess.rs:196:42    	readdir 	U   	fds by brute force if readdir doesn't work:"
  - "stdlib/src/pyexpat.rs:1:4       	Pyexpat     	U   	/* Pyexpat builtin module"
  - "stdlib/src/pyexpat.rs:46:23     	xmlparser   	U   	#[pyclass(name = \"xmlparser\", module = false)]"
  - "stdlib/src/pyexpat.rs:138:42    	isfinal     	U   	self, data: PyStrRef, _isfinal: OptionalArg<bool>,"
  - "stdlib/src/pystruct.rs:311:9    	clearcache  	U   	fn _clearcache() {}"
  - "stdlib/src/random.rs:16:16      	rngs        	U   	use rand::{rngs::StdRng, RngCore, SeedableRng"
  - "stdlib/src/random.rs:16:39      	Seedable    	U   	rngs::StdRng, RngCore, SeedableRng};"
  - "stdlib/src/random.rs:116:12     	getrandbits 	U   	fn getrandbits(&self, k: isize, vm"
  - "stdlib/src/random.rs:135:25     	wordarray   	U   	let wordarray = (0..words)"
  - "stdlib/src/random.rs:150:37     	biguint     	U   	Ok(BigInt::from_biguint(sign, uint))"
  - "stdlib/src/re.rs:49:9       	ignorecase  	U   	ignorecase: bool,"
  - "stdlib/src/re.rs:53:9       	dotall      	U   	dotall: bool,"
  - "stdlib/src/re.rs:135:8      	findall     	U   	fn findall("
  - "stdlib/src/re.rs:160:33     	replacen    	U   	out = pattern.regex.replacen("
  - "stdlib/src/re.rs:342:12     	subn        	U   	fn subn(&self, repl: PyStrRef"
  - "stdlib/src/resource.rs:43:22    	illumos 	U   	target_os = \"illumos\""
  - "stdlib/src/resource.rs:56:75    	freebds 	U   	emscripten\", target_os = \"freebds\"))]"
  - "stdlib/src/resource.rs:64:30    	rusage  	U   	pyclass(name = \"struct_rusage\")]"
  - "stdlib/src/resource.rs:66:12    	Rusage  	U   	struct Rusage {"
  - "stdlib/src/resource.rs:67:12    	utime   	U   	ru_utime: f64,"
  - "stdlib/src/resource.rs:68:12    	stime   	U   	ru_stime: f64,"
  - "stdlib/src/resource.rs:69:12    	maxrss  	U   	ru_maxrss: libc::c_long,"
  - "stdlib/src/resource.rs:70:12    	ixrss   	U   	ru_ixrss: libc::c_long,"
  - "stdlib/src/resource.rs:71:12    	idrss   	U   	ru_idrss: libc::c_long,"
  - "stdlib/src/resource.rs:72:12    	isrss   	U   	ru_isrss: libc::c_long,"
  - "stdlib/src/resource.rs:73:12    	minflt  	U   	ru_minflt: libc::c_long,"
  - "stdlib/src/resource.rs:74:12    	majflt  	U   	ru_majflt: libc::c_long,"
  - "stdlib/src/resource.rs:75:12    	nswap   	U   	ru_nswap: libc::c_long,"
  - "stdlib/src/resource.rs:76:12    	inblock 	U   	ru_inblock: libc::c_long,"
  - "stdlib/src/resource.rs:77:12    	oublock 	U   	ru_oublock: libc::c_long,"
  - "stdlib/src/resource.rs:78:12    	msgsnd  	U   	ru_msgsnd: libc::c_long,"
  - "stdlib/src/resource.rs:79:12    	msgrcv  	U   	ru_msgrcv: libc::c_long,"
  - "stdlib/src/resource.rs:80:12    	nsignals	U   	ru_nsignals: libc::c_long,"
  - "stdlib/src/resource.rs:81:12    	nvcsw   	U   	ru_nvcsw: libc::c_long,"
  - "stdlib/src/resource.rs:82:12    	nivcsw  	U   	ru_nivcsw: libc::c_long,"
  - "stdlib/src/select.rs:58:37      	WSAFDIs     	U   	winapi::um::winsock2::__WSAFDIsSet;"
  - "stdlib/src/select.rs:97:17      	fdset       	U   	let mut fdset = std::mem::MaybeUninit"
  - "stdlib/src/select.rs:122:5      	nfds        	U   	nfds: libc::c_int,"
  - "stdlib/src/select.rs:123:5      	readfds     	U   	readfds: &mut FdSet,"
  - "stdlib/src/select.rs:124:5      	writefds    	U   	writefds: &mut FdSet,"
  - "stdlib/src/select.rs:125:5      	errfds      	U   	errfds: &mut FdSet,"
  - "stdlib/src/select.rs:173:9      	rlist       	U   	rlist: PyObjectRef,"
  - "stdlib/src/select.rs:174:9      	wlist       	U   	wlist: PyObjectRef,"
  - "stdlib/src/select.rs:271:19     	pollfd      	U   	use libc::pollfd;"
  - "stdlib/src/select.rs:295:25     	revents     	U   	revents: 0,"
  - "stdlib/src/select.rs:314:52     	eventmask   	U   	Fildes(fd): Fildes, eventmask: OptionalArg<u16>)"
  - "stdlib/src/socket.rs:29:71      	Addrs           	U   	SocketAddr, ToSocketAddrs},"
  - "stdlib/src/socket.rs:38:33      	mstcpip         	U   	use winapi::shared::mstcpip::*;"
  - "stdlib/src/socket.rs:41:36      	ipdef           	U   	use winapi::shared::ws2ipdef::*;"
  - "stdlib/src/socket.rs:48:32      	tcpip           	U   	pub use winapi::um::ws2tcpip::*;"
  - "stdlib/src/socket.rs:311:32     	riscv           	U   	target_arch = \"riscv64gc\","
  - "stdlib/src/socket.rs:709:18     	errcode         	U   	macro_rules! errcode {"
  - "stdlib/src/socket.rs:1025:67    	errorfds        	U   	SelectKind::Connect fills the errorfds fd_set, so if we wake"
  - "stdlib/src/socket.rs:1093:28    	getsockopt      	U   	c::getsockopt("
  - "stdlib/src/socket.rs:1181:13    	bufsize         	U   	bufsize: usize,"
  - "stdlib/src/socket.rs:1212:12    	recvfrom        	U   	fn recvfrom("
  - "stdlib/src/socket.rs:1278:12    	sendall         	U   	fn sendall("
  - "stdlib/src/socket.rs:1297:25    	subbuf          	U   	let subbuf = &buf[buf_offset.."
  - "stdlib/src/socket.rs:1307:12    	sendto          	U   	fn sendto("
  - "stdlib/src/socket.rs:1358:12    	getsockname     	U   	fn getsockname(&self, vm: &VirtualMachine"
  - "stdlib/src/socket.rs:1364:12    	getpeername     	U   	fn getpeername(&self, vm: &VirtualMachine"
  - "stdlib/src/socket.rs:1371:12    	gettimeout      	U   	fn gettimeout(&self) -> Option<f6"
  - "stdlib/src/socket.rs:1381:12    	setblocking     	U   	fn setblocking(&self, block: bool)"
  - "stdlib/src/socket.rs:1392:12    	settimeout      	U   	fn settimeout(&self, timeout: Option"
  - "stdlib/src/socket.rs:1413:25    	flagsize        	U   	let mut flagsize = std::mem::size_of"
  - "stdlib/src/socket.rs:1453:12    	setsockopt      	U   	fn setsockopt("
  - "stdlib/src/socket.rs:1458:13    	optlen          	U   	optlen: OptionalArg<u32>,"
  - "stdlib/src/socket.rs:1616:25    	abstractaddrlen 	U   	let abstractaddrlen = addr_len - sun_path"
  - "stdlib/src/socket.rs:1617:25    	abstractpath    	U   	let abstractpath = &path_u8[..abstractaddrlen"
  - "stdlib/src/socket.rs:1645:8     	inet            	U   	fn inet_aton(ip_string: PyStrRef"
  - "stdlib/src/socket.rs:1669:9     	servicename     	U   	servicename: PyStrRef,"
  - "stdlib/src/socket.rs:1670:9     	protocolname    	U   	protocolname: OptionalArg<PyStrRef"
  - "stdlib/src/socket.rs:1807:30    	subsec          	U   	tv_usec: dur.subsec_micros() as _,"
  - "stdlib/src/socket.rs:1839:8     	getaddrinfo     	U   	fn getaddrinfo("
  - "stdlib/src/socket.rs:1885:41    	getnameinfo     	U   	hostname, _) = dns_lookup::getnameinfo(&addr, 0)"
  - "stdlib/src/socket.rs:1998:17    	ainfo           	U   	let mut ainfo = res.next().unwrap"
  - "stdlib/src/socket.rs:2091:23    	iface           	U   	.map(|iface| {"
  - "stdlib/src/socket.rs:2107:46    	Luid            	U   	name(&entry.InterfaceLuid).map_err(|err| err.into"
  - "stdlib/src/socket.rs:2115:17    	luid            	U   	luid: &winapi::shared::ifdef"
  - "stdlib/src/socket.rs:2215:35    	idna            	U   	encode_text(pyname, \"idna\", None, vm)?;"
  - "stdlib/src/socket.rs:2295:13    	strerr          	U   	let strerr = {"
  - "stdlib/src/socket.rs:2303:51    	hstrerror       	U   	CStr::from_ptr(libc::hstrerror(err.error_num()))"
  - "stdlib/src/sqlite.rs:15:24      	pagecount   	U   	sqlite3_backup_pagecount, sqlite3_backup_remaining"
  - "stdlib/src/sqlite.rs:25:65      	autocommit  	U   	finalize, sqlite3_get_autocommit, sqlite3_interrupt,"
  - "stdlib/src/sqlite.rs:26:44      	libversion  	U   	insert_rowid, sqlite3_libversion, sqlite3_limit, sqlite"
  - "stdlib/src/sqlite.rs:28:75      	nomem       	U   	sqlite3_result_error_nomem,"
  - "stdlib/src/sqlite.rs:56:71      	Hashable    	U   	Comparable, Constructor, Hashable, IterNext,"
  - "stdlib/src/sqlite.rs:368:12     	retrive     	U   	fn retrive(&self) -> (&PyObject"
  - "stdlib/src/sqlite.rs:724:40     	bytearray   	U   	cls.is(vm.ctx.types.bytearray_type))"
  - "stdlib/src/sqlite.rs:924:31     	implicity   	U   	self.db_lock(vm)?.implicity_commit(vm)"
  - "stdlib/src/sqlite.rs:1117:27    	colation    	U   	// create_colation do not call destructor"
  - "stdlib/src/sqlite.rs:1339:9     	rowcount    	U   	rowcount: i64,"
  - "stdlib/src/sqlite.rs:1542:12    	fetchone    	U   	fn fetchone(zelf: PyRef<Self>, vm"
  - "stdlib/src/sqlite.rs:1550:12    	fetchmany   	U   	fn fetchmany("
  - "stdlib/src/sqlite.rs:1567:12    	fetchall    	U   	fn fetchall(zelf: PyRef<Self>, vm"
  - "stdlib/src/sqlite.rs:2127:60    	assigment   	U   	implemented_error(\"Blob slice assigment is not implmented\".to"
  - "stdlib/src/sqlite.rs:2127:77    	implmented  	U   	slice assigment is not implmented\".to_owned()))"
  - "stdlib/src/sqlite.rs:2211:16    	lstrip      	U   	if lstrip_sql(tail).is_some()"
  - "stdlib/src/ssl.rs:108:42    	Proto       	U   	MINIMUM_SUPPORTED: i32 = ProtoVersion::MinSupported"
  - "stdlib/src/ssl.rs:110:11    	PROTO       	U   	const PROTO_SSLv3: i32 = ProtoVersion"
  - "stdlib/src/ssl.rs:532:31    	cipherlist  	U   	fn set_ciphers(&self, cipherlist: PyStrRef, vm: &VirtualMachin"
  - "stdlib/src/ssl.rs:614:47    	pbuf        	U   	server = protos.with_ref(|pbuf| {"
  - "stdlib/src/ssl.rs:626:72    	Alpn        	U   	client).ok_or(ssl::AlpnError::NOACK)"
  - "stdlib/src/ssl.rs:721:17    	certfile    	U   	certfile,"
  - "stdlib/src/ssl.rs:722:17    	keyfile     	U   	keyfile,"
  - "stdlib/src/ssl.rs:838:9     	Nonblocking 	U   	Nonblocking,"
  - "stdlib/src/ssl.rs:951:12    	getpeercert 	U   	fn getpeercert("
  - "stdlib/src/ssl.rs:1148:22   	rsplit      	U   	.rsplit_once(&['/', '\\\\'][."
  - "stdlib/src/ssl.rs:1151:21   	errstr      	U   	let errstr = e.reason().unwrap"
  - "stdlib/src/ssl.rs:1292:59   	ipaddress   	U   	Some(ip) = gen_name.ipaddress() {"
  - "stdlib/src/ssl.rs:1354:63   	cacerts     	U   	system/etc/security/cacerts\";"
  - "stdlib/src/ssl.rs:1461:28   	Oids        	U   	ValidUses::Oids(oids) => PyFrozenSet"
  - "stdlib/src/ssl.rs:1461:33   	oids        	U   	ValidUses::Oids(oids) => PyFrozenSet::from"
  - "stdlib/src/syslog.rs:68:9       	logoption   	U   	logoption: OptionalArg<i32>,"
  - "stdlib/src/syslog.rs:121:8      	closelog    	U   	fn closelog() {"
  - "stdlib/src/syslog.rs:130:19     	maskpri     	U   	fn setlogmask(maskpri: i32) -> i32 {"
  - "stdlib/src/syslog.rs:142:12     	upto        	U   	fn log_upto(pri: i32) -> i32 {"
  - "stdlib/src/termios.rs:10:18     	Termios     	U   	use termios::Termios;"
  - "stdlib/src/termios.rs:15:37     	ttydefaults 	U   	supply these from <sys/ttydefaults.h> (please file an issue"
  - "stdlib/src/termios.rs:22:42     	cygwin      	U   	only found NSWTCH on cygwin, so please alert the"
  - "stdlib/src/termios.rs:171:13    	noncanon    	U   	let noncanon = (termios.c_lflag"
  - "stdlib/src/termios.rs:171:35    	lflag       	U   	noncanon = (termios.c_lflag & termios::ICANON)"
  - "stdlib/src/termios.rs:182:23    	iflag       	U   	termios.c_iflag.to_pyobject(vm),"
  - "stdlib/src/termios.rs:183:23    	oflag       	U   	termios.c_oflag.to_pyobject(vm),"
  - "stdlib/src/termios.rs:184:23    	cflag       	U   	termios.c_cflag.to_pyobject(vm),"
  - "stdlib/src/termios.rs:186:22    	cfgetispeed 	U   	termios::cfgetispeed(&termios).to_pyobject"
  - "stdlib/src/termios.rs:187:22    	cfgetospeed 	U   	termios::cfgetospeed(&termios).to_pyobject"
  - "stdlib/src/termios.rs:195:42    	ispeed      	U   	oflag, cflag, lflag, ispeed, ospeed, cc] ="
  - "stdlib/src/termios.rs:195:50    	ospeed      	U   	cflag, lflag, ispeed, ospeed, cc] ="
  - "stdlib/src/termios.rs:206:18    	cfsetispeed 	U   	termios::cfsetispeed(&mut termios, ispeed"
  - "stdlib/src/termios.rs:208:18    	cfsetospeed 	U   	termios::cfsetospeed(&mut termios, ospeed"
  - "stdlib/src/termios.rs:235:8     	tcsendbreak 	U   	fn tcsendbreak(fd: i32, duration: i"
  - "stdlib/src/termios.rs:241:8     	tcdrain     	U   	fn tcdrain(fd: i32, vm: &VirtualMachine"
  - "stdlib/src/termios.rs:247:8     	tcflush     	U   	fn tcflush(fd: i32, queue: i32"
  - "stdlib/src/termios.rs:253:8     	tcflow      	U   	fn tcflow(fd: i32, action: i3"
  - "stdlib/src/unicodedata.rs:35:24     	Bidi	U   	use unic_ucd_bidi::BidiClass;"
  - "stdlib/src/unicodedata.rs:126:32    	nfkc	U   	\"NFKC\" => text.nfkc().collect::<String>"
  - "stdlib/src/unicodedata.rs:128:32    	nfkd	U   	\"NFKD\" => text.nfkd().collect::<String>"
  - "stdlib/src/uuid.rs:34:75    	nanos   	U   	as_secs(), now.subsec_nanos());"
  - "stdlib/src/zlib.rs:118:77   	miniz           	U   	only enabled for zlib; miniz_oxide doesn't"
  - "stdlib/src/zlib.rs:266:28   	Decompressobj   	U   	decompressobj(args: DecompressobjArgs, vm: &VirtualMachine"
  - "stdlib/src/zlib.rs:322:39   	pyref           	U   	unused_data = vm.new_pyref(unused);"
  - "vm/build.rs:33:10   	sysvars 	U   	\"sysvars! {{ {} }}\","
  - "vm/Cargo.toml:45:1      	chrono      	U   	chrono = { version = \"0.4."
  - "vm/Cargo.toml:45:45     	wasmbind    	U   	4.19\", features = [\"wasmbind\"] }"
  - "vm/Cargo.toml:63:1      	timsort     	U   	timsort = \"0.1.2\""
  - "vm/Cargo.toml:72:1      	memoffset   	U   	memoffset = \"0.6.5\""
  - "vm/Cargo.toml:111:1     	winreg      	U   	winreg = \"0.10.1\""
  - "vm/Cargo.toml:126:54    	memoryapi   	U   	ifdef\", \"netioapi\", \"memoryapi\","
  - "vm/Cargo.toml:130:6     	bindgen     	U   	wasm-bindgen = \"0.2.80\""
  - "vm/src/anystr.rs:72:58      	substr          	U   	&'s S, len: usize, substr: F) -> Option<(PyObjectRef"
  - "vm/src/anystr.rs:186:9      	splitw          	U   	splitw: SW,"
  - "vm/src/anystr.rs:195:13     	splited         	U   	let splited = if let Some(pattern"
  - "vm/src/anystr.rs:214:11     	startsendswith  	U   	fn py_startsendswith<T, F>("
  - "vm/src/anystr.rs:303:11     	ljust           	U   	fn py_ljust(&self, width: usize"
  - "vm/src/anystr.rs:307:11     	rjust           	U   	fn py_rjust(&self, width: usize"
  - "vm/src/anystr.rs:354:11     	removeprefix    	U   	fn py_removeprefix<FC>(&self, prefix:"
  - "vm/src/anystr.rs:366:11     	removesuffix    	U   	fn py_removesuffix<FC>(&self, suffix:"
  - "vm/src/anystr.rs:416:11     	iscase          	U   	fn py_iscase<F, G>(&'s self, is_case"
  - "vm/src/anystr.rs:422:23     	islower         	U   	// _Py_bytes_islower"
  - "vm/src/anystr.rs:423:23     	isupper         	U   	// Py_bytes_isupper"
  - "vm/src/buffer.rs:20:17      	Endianness  	U   	pub(crate) enum Endianness {"
  - "vm/src/buffer.rs:163:46     	schar       	U   	native_info!(raw::c_schar),"
  - "vm/src/buffer.rs:456:24     	primint     	U   	macro_rules! make_pack_primint {"
  - "vm/src/builtins/asyncgenerator.rs:9:54      	Unconstructible 	U   	IterNext, IterNextIterable, Unconstructible},"
  - "vm/src/builtins/asyncgenerator.rs:86:13     	aclose          	U   	aclose: false,"
  - "vm/src/builtins/builtinfunc.rs:141:26   	getattr     	U   	// TODO: return (getattr, (self.object, self"
  - "vm/src/builtins/builtinfunc.rs:262:13   	builtinfunc 	U   	let builtinfunc_getattr = vm.builtins"
  - "vm/src/builtins/builtinfunc.rs:263:13   	classname   	U   	let classname = vm.builtins.get_attr"
  - "vm/src/builtins/bytearray.rs:7:5        	anystr      	U   	anystr::{self, AnyStr},"
  - "vm/src/builtins/bytearray.rs:10:5       	bytesinner  	U   	bytesinner::{"
  - "vm/src/builtins/bytearray.rs:34:80      	Unhashable  	U   	omparisonOp, Unconstructible, Unhashable,"
  - "vm/src/builtins/bytearray.rs:243:8      	maketrans   	U   	fn maketrans(from: PyBytesInner,"
  - "vm/src/builtins/bytearray.rs:320:8      	isalnum     	U   	fn isalnum(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:325:8      	isalpha     	U   	fn isalpha(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:330:8      	isascii     	U   	fn isascii(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:335:8      	isdigit     	U   	fn isdigit(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:345:8      	isspace     	U   	fn isspace(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:355:8      	istitle     	U   	fn istitle(&self) -> bool {"
  - "vm/src/builtins/bytearray.rs:375:8      	swapcase    	U   	fn swapcase(&self) -> Self {"
  - "vm/src/builtins/bytearray.rs:390:8      	fromhex     	U   	fn fromhex(cls: PyTypeRef, string"
  - "vm/src/builtins/bytearray.rs:434:8      	endswith    	U   	fn endswith(&self, options: anystr"
  - "vm/src/builtins/bytearray.rs:451:8      	startswith  	U   	fn startswith("
  - "vm/src/builtins/bytearray.rs:490:8      	rindex      	U   	fn rindex(&self, options: ByteInnerFind"
  - "vm/src/builtins/bytearray.rs:515:8      	rstrip      	U   	fn rstrip(&self, chars: OptionalOption"
  - "vm/src/builtins/bytearray.rs:571:66     	memoryview  	U   	bytearray even it's bytes or memoryview"
  - "vm/src/builtins/bytearray.rs:583:8      	rpartition  	U   	fn rpartition(&self, sep: PyBytesInner"
  - "vm/src/builtins/bytearray.rs:594:8      	expandtabs  	U   	fn expandtabs(&self, options: anystr"
  - "vm/src/builtins/bytes.rs:516:45     	emplemented 	U   	'utf-8' and 'ascii' emplemented"
  - "vm/src/builtins/code.rs:139:13  	codeobj 	U   	fn into_codeobj(self, ctx: &Context"
  - "vm/src/builtins/complex.rs:51:61    	coereced	U   	complex originally or coereced into one"
  - "vm/src/builtins/complex.rs:112:18   	powc    	U   	let ans = v1.powc(v2);"
  - "vm/src/builtins/complex.rs:303:8    	truediv 	U   	fn truediv("
  - "vm/src/builtins/dict.rs:15:5    	dictdatatype        	U   	dictdatatype::{self, DictKey},"
  - "vm/src/builtins/dict.rs:179:22  	setdefault          	U   	self.entries.setdefault(vm, &*key, default)"
  - "vm/src/builtins/dict.rs:217:8   	fromkeys            	U   	fn fromkeys("
  - "vm/src/builtins/dict.rs:226:16  	pydict              	U   	Ok(pydict) => {"
  - "vm/src/builtins/dict.rs:369:13  	dicted              	U   	let dicted: Result<PyDictRef,"
  - "vm/src/builtins/dict.rs:403:8   	popitem             	U   	fn popitem(&self, vm: &VirtualMachine"
  - "vm/src/builtins/dict.rs:902:10  	reversekeyiterator  	U   	dict_reversekeyiterator_type,"
  - "vm/src/builtins/dict.rs:915:10  	reversevalueiterator	U   	dict_reversevalueiterator_type,"
  - "vm/src/builtins/dict.rs:1007:18 	dictkeys            	U   	ref _dictkeys @ PyDictKeys => {}"
  - "vm/src/builtins/dict.rs:1020:8  	isdisjoint          	U   	fn isdisjoint(zelf: PyRef<Self>, other"
  - "vm/src/builtins/float.rs:474:13     	numer   	U   	let numer = vm.ctx.new_bigint"
  - "vm/src/builtins/function.rs:2:5     	jitfunc     	U   	mod jitfunc;"
  - "vm/src/builtins/function.rs:79:17   	fastlocals  	U   	let mut fastlocals = frame.fastlocals.lock"
  - "vm/src/builtins/function.rs:118:13  	argpos      	U   	let argpos = |range: std::ops:"
  - "vm/src/builtins/function.rs:171:17  	ndefs       	U   	let ndefs = defaults.map_or(0"
  - "vm/src/builtins/function.rs:173:17  	nrequired   	U   	let nrequired = code.arg_count - ndefs"
  - "vm/src/builtins/function.rs:487:8   	getattro    	U   	fn getattro(zelf: &Py<Self>, name"
  - "vm/src/builtins/function.rs:541:25  	qname       	U   	if let Some(qname) = vm.get_attribute"
  - "vm/src/builtins/function.rs:560:13  	funcself    	U   	let funcself = self.object.clone"
  - "vm/src/builtins/function/jitfunc.rs:92:14   	Jitting 	U   	\"Jitting function requires arguments"
  - "vm/src/builtins/genericalias.rs:185:8   	instancecheck   	U   	fn instancecheck(_zelf: PyRef<Self>,"
  - "vm/src/builtins/genericalias.rs:207:7   	typevar         	U   	fn is_typevar(obj: &PyObjectRef, vm"
  - "vm/src/builtins/genericalias.rs:228:17  	subparam        	U   	for subparam in &subparams {"
  - "vm/src/builtins/genericalias.rs:248:5   	argitems        	U   	argitems: &[PyObjectRef],"
  - "vm/src/builtins/int.rs:407:8    	modpow      	U   	fn modpow(&self, other: PyObjectRef"
  - "vm/src/builtins/int.rs:608:33   	byteorder   	U   	value = match (args.byteorder, signed) {"
  - "vm/src/builtins/memory.rs:47:37     	memeoryview         	U   	the possible another memeoryview is viewing from it"
  - "vm/src/builtins/memory.rs:54:8      	memoryview's        	U   	// memoryview's options could be different"
  - "vm/src/builtins/memory.rs:239:18    	fortain             	U   	// TODO: fortain order"
  - "vm/src/builtins/memory.rs:489:29    	setted              	U   	// no suboffset setted, stride must be positive"
  - "vm/src/builtins/memory.rs:492:13    	newlen              	U   	let newlen = range.len();"
  - "vm/src/builtins/memory.rs:524:40    	dimention           	U   	length of the first dimention"
  - "vm/src/builtins/memory.rs:875:23    	pybuffer            	U   	.into_pybuffer_with_descriptor(self"
  - "vm/src/builtins/memory.rs:1063:55   	memoryviewiterator  	U   	class(ctx, ctx.types.memoryviewiterator_type);"
  - "vm/src/builtins/mod.rs:5:16     	asyncgenerator  	U   	pub(crate) mod asyncgenerator;"
  - "vm/src/builtins/mod.rs:33:16    	genericalias    	U   	pub(crate) mod genericalias;"
  - "vm/src/builtins/mod.rs:80:22    	Traceback       	U   	pub use traceback::PyTraceback;"
  - "vm/src/builtins/mod.rs:85:16    	weakref         	U   	pub(crate) mod weakref;"
  - "vm/src/builtins/module.rs:89:73     	dictoffsets 	U   	dict method above once dictoffsets land"
  - "vm/src/builtins/object.rs:156:19    	setattr     	U   	/// Implement setattr(self, name, value)."
  - "vm/src/builtins/object.rs:167:19    	delattr     	U   	/// Implement delattr(self, name)."
  - "vm/src/builtins/object.rs:174:13    	setattro    	U   	fn slot_setattro("
  - "vm/src/builtins/object.rs:294:29    	getattribute	U   	vm_trace!(\"object.__getattribute__({:?}, {:?})\", obj"
  - "vm/src/builtins/object.rs:354:13    	reducelib   	U   	let reducelib = vm.import(\"__reducelib"
  - "vm/src/builtins/object.rs:358:13    	copyreg     	U   	let copyreg = vm.import(\"copyreg"
  - "vm/src/builtins/property.rs:31:5    	fget	U   	fget: Option<PyObjectRef"
  - "vm/src/builtins/property.rs:33:5    	fset	U   	fset: Option<PyObjectRef"
  - "vm/src/builtins/range.rs:298:19     	paramters   	U   	let range_paramters: Vec<PyObjectRef> ="
  - "vm/src/builtins/range.rs:347:26     	substart    	U   	let (mut substart, mut substop, mut substep"
  - "vm/src/builtins/range.rs:347:40     	substop     	U   	let (mut substart, mut substop, mut substep) ="
  - "vm/src/builtins/range.rs:347:53     	substep     	U   	substart, mut substop, mut substep) ="
  - "vm/src/builtins/range.rs:584:31     	isizes      	U   	start, stop, step are isizes, we can use a faster"
  - "vm/src/builtins/set.rs:72:35    	frozenset   	U   	module = false, name = \"frozenset\")]"
  - "vm/src/builtins/set.rs:274:8    	issuperset  	U   	fn issuperset(&self, other: ArgIterable"
  - "vm/src/builtins/set.rs:283:8    	issubset    	U   	fn issubset(&self, other: ArgIterable"
  - "vm/src/builtins/set.rs:688:8    	iand        	U   	fn iand(zelf: PyRef<Self>, set"
  - "vm/src/builtins/set.rs:719:8    	ixor        	U   	fn ixor(zelf: PyRef<Self>, set"
  - "vm/src/builtins/slice.rs:1:4        	sliceobject 	U   	// sliceobject.{h,c} in CPython"
  - "vm/src/builtins/str.rs:426:48   	cmpxchg     	U   	len, we don't need a cmpxchg loop, since it'll always"
  - "vm/src/builtins/str.rs:501:8    	casefold    	U   	// casefold is much more aggressive"
  - "vm/src/builtins/str.rs:574:29   	rsplitn     	U   	|v, s, n, vm| v.rsplitn(n, s).map(|s| vm.ctx"
  - "vm/src/builtins/str.rs:680:8    	isnumeric   	U   	fn isnumeric(&self) -> bool {"
  - "vm/src/builtins/str.rs:698:8    	isdecimal   	U   	fn isdecimal(&self) -> bool {"
  - "vm/src/builtins/str.rs:820:8    	isprintable 	U   	fn isprintable(&self) -> bool {"
  - "vm/src/builtins/str.rs:1078:8   	isidentifier	U   	fn isidentifier(&self) -> bool {"
  - "vm/src/builtins/str.rs:1494:15  	Getint      	U   	(\"Getint\", \"getInt\"),"
  - "vm/src/builtins/str.rs:1495:21  	Ωppercases  	U   	(\"Greek Ωppercases ...\", \"greek ωppercases"
  - "vm/src/builtins/str.rs:1495:45  	ωppercases  	U   	ppercases ...\", \"greek ωppercases ...\"),"
  - "vm/src/builtins/str.rs:1496:21  	ῼitlecases  	U   	(\"Greek ῼitlecases ...\", \"greek ῳitlecases"
  - "vm/src/builtins/str.rs:1496:45  	ῳitlecases  	U   	itlecases ...\", \"greek ῳitlecases ...\"),"
  - "vm/src/builtins/str.rs:1659:33  	rmatch      	U   	(offset, _) in self.rmatch_indices(|c: char| c"
  - "vm/src/builtins/super.rs:106:28     	supercheck  	U   	let obj_type = supercheck(typ.clone(), obj.clone"
  - "vm/src/builtins/super.rs:129:13     	typname     	U   	let typname = &self.typ.name();"
  - "vm/src/builtins/tuple.rs:44:13      	pytuple         	U   	fn into_pytuple(self, vm: &VirtualMachine"
  - "vm/src/builtins/tuple.rs:59:19      	intopyobj       	U   	macro_rules! impl_intopyobj_tuple {"
  - "vm/src/builtins/tuple.rs:311:39     	tuplesubclass   	U   	just return tup, or tuplesubclass(tup), which'll copy"
  - "vm/src/builtins/type.rs:39:9    	heaptype    	U   	pub heaptype_ext: Option<Pin<Box"
  - "vm/src/builtins/type.rs:179:19  	linearise   	U   	let mro = linearise_mro(mros)?;"
  - "vm/src/builtins/type.rs:293:21  	intrinsics  	U   	// try std::intrinsics::likely once it is stablized"
  - "vm/src/builtins/type.rs:293:51  	stablized   	U   	intrinsics::likely once it is stablized"
  - "vm/src/builtins/type.rs:641:17  	metatype    	U   	fn slot_new(metatype: PyTypeRef, args: FuncArgs"
  - "vm/src/builtins/type.rs:871:21  	initter     	U   	if let Some(initter) = typ.get_super_attr"
  - "vm/src/builtins/type.rs:1064:21 	dictoffset  	U   	// cls.slot_dictoffset != 0 && !cls.flags.contains"
  - "vm/src/builtins/type.rs:1132:20 	unionable   	U   	if !union_::is_unionable(zelf.clone(), vm) |"
  - "vm/src/builtins/type.rs:1159:16 	Linearising 	U   	vm_trace!(\"Linearising MRO: {:?}\", bases);"
  - "vm/src/builtins/type.rs:1166:37 	Mros        	U   	base = &base_mro[0]; // Mros cannot be empty."
  - "vm/src/builtins/type.rs:1201:27 	Metaclass   	U   	= _PyType_CalculateMetaclass"
  - "vm/src/bytesinner.rs:846:12     	stringlib   	U   	// stringlib_replace in CPython"
  - "vm/src/bytesinner.rs:1049:48    	byteset     	U   	offset) = haystack.find_byteset(ASCII_WHITESPACES)"
  - "vm/src/bytesinner.rs:1124:13    	unchunked   	U   	let unchunked = len - chunked;"
  - "vm/src/cformat.rs:90:39     	bytesobject 	U   	// formatfloat in bytesobject.c generates its own"
  - "vm/src/codecs.rs:109:45     	incrementalencoder  	U   	self.0.as_object(), \"incrementalencoder\", args)"
  - "vm/src/codecs.rs:121:45     	incrementaldecoder  	U   	self.0.as_object(), \"incrementaldecoder\", args)"
  - "vm/src/coroutine.rs:33:9    	weakreflist 	U   	// _weakreflist"
  - "vm/src/dictdatatype.rs:19:62    	pyhash  	U   	compatible with actual pyhash value"
  - "vm/src/dictdatatype.rs:662:29   	usecases	U   	dictionary. Typical usecases are:"
  - "vm/src/frame.rs:94:6    	Lasti       	U   	type Lasti = atomic::AtomicU32"
  - "vm/src/frame.rs:353:13  	instrs      	U   	let instrs = &self.code.instructions"
  - "vm/src/frame.rs:915:21  	aiterable   	U   	let aiterable = self.pop_value();"
  - "vm/src/frame.rs:1298:36 	Kwargs      	U   	vm.new_type_error(\"Kwargs must be a dict.\".to"
  - "vm/src/frame.rs:1592:61 	matmul      	U   	MatrixMultiply => vm._matmul(a_ref, b_ref),"
  - "vm/src/frame.rs:1618:61 	imatmul     	U   	MatrixMultiply => vm._imatmul(a_ref, b_ref),"
  - "vm/src/frame.rs:1619:52 	ipow        	U   	BinaryOperator::Power => vm._ipow(a_ref, b_ref),"
  - "vm/src/frame.rs:1620:53 	itruediv    	U   	BinaryOperator::Divide => vm._itruediv(a_ref, b_ref),"
  - "vm/src/frame.rs:1621:58 	ifloordiv   	U   	:FloorDivide => vm._ifloordiv(a_ref, b_ref),"
  - "vm/src/frame.rs:1622:53 	imod        	U   	BinaryOperator::Modulo => vm._imod(a_ref, b_ref),"
  - "vm/src/frame.rs:1623:53 	ilshift     	U   	BinaryOperator::Lshift => vm._ilshift(a_ref, b_ref),"
  - "vm/src/frame.rs:1624:53 	irshift     	U   	BinaryOperator::Rshift => vm._irshift(a_ref, b_ref),"
  - "vm/src/frame.rs:1677:13 	displayhook 	U   	let displayhook = vm"
  - "vm/src/function/argument.rs:113:13  	kwargc  	U   	let kwargc = kwarg_names.len()"
  - "vm/src/function/argument.rs:114:13  	posargc 	U   	let posargc = total_argc - kwargc"
  - "vm/src/function/argument.rs:116:13  	posargs 	U   	let posargs = args.by_ref().take"
  - "vm/src/function/argument.rs:200:46  	arity   	U   	e.into_exception(T::arity(), given_args, vm))"
  - "vm/src/function/argument.rs:267:53  	keyqord 	U   	error(format!(\"Required keyqord only argument {name"
  - "vm/src/function/builtin.rs:148:13   	intonativefunc  	U   	fn test_intonativefunc_noalloc() {"
  - "vm/src/function/builtin.rs:148:28   	noalloc         	U   	test_intonativefunc_noalloc() {"
  - "vm/src/function/getset.rs:114:13    	noresult	U   	fn into_noresult(self) -> PyResult<("
  - "vm/src/function/protocol.rs:64:5    	iterfn  	U   	iterfn: Option<crate::types"
  - "vm/src/import.rs:16:47      	inlines     	U   	bootstrap needs these and it inlines checks to sys.modules"
  - "vm/src/import.rs:25:13      	impmod      	U   	let impmod = import_builtin(vm"
  - "vm/src/import.rs:62:17      	zipimporter 	U   	let zipimporter = zipimport.get_attr"
  - "vm/src/intern.rs:35:29      	Internable  	U   	unsafe fn intern<S: Internable>(&self, s: S, typ: PyTypeRef"
  - "vm/src/macros.rs:62:9       	uncasted    	U   	/// the uncasted object is required."
  - "vm/src/macros.rs:88:27      	downcasted  	U   	With a binding to the downcasted type:"
  - "vm/src/macros.rs:187:54     	logbuffers  	U   	Might soon overflow your logbuffers"
  - "vm/src/object/core.rs:42:79     	vtable      	U   	manually creating a vtable, and putting"
  - "vm/src/object/core.rs:93:15     	Vtable      	U   	trait VtableHelper {"
  - "vm/src/object/core.rs:200:54    	Weaks       	U   	actually own the PyObjectWeaks inside `list`, and every"
  - "vm/src/object/core.rs:218:32    	arrayvec    	U   	// TODO: can be an arrayvec"
  - "vm/src/object/core.rs:227:66    	incref      	U   	want ownership (and so incref these *while the lock"
  - "vm/src/object/core.rs:361:17    	pyinner     	U   	let pyinner = (self as *const Self"
  - "vm/src/object/core.rs:767:24    	decref      	U   	// the decref right above set ref"
  - "vm/src/object/core.rs:1080:5    	Paritally   	U   	/// Paritally initialize a struct"
  - "vm/src/object/core.rs:1218:8    	miri        	U   	fn miri_test_type_initialization"
  - "vm/src/object/core.rs:1225:35   	dfghjkl     	U   	obj = ctx.new_bytes(b\"dfghjkl\".to_vec());"
  - "vm/src/protocol/buffer.rs:132:32    	Manaully	U   	wrap PyBuffer in the ManaullyDrop to prevent drop"
  - "vm/src/protocol/buffer.rs:265:43    	conti   	U   	segment<F>(&self, try_conti: bool, mut f: F)"
  - "vm/src/protocol/iter.rs:121:13  	getiter 	U   	let getiter = {"
  - "vm/src/protocol/iter.rs:239:19  	iret    	U   	.map(|iret| iret.into_result()"
  - "vm/src/protocol/object.rs:453:30    	icls        	U   	} else if let Ok(icls) = PyTypeRef::try_from"
  - "vm/src/protocol/object.rs:522:26    	unhashable  	U   	format!(\"unhashable type: '{}'\", self.class"
  - "vm/src/protocol/sequence.rs:119:30  	apear       	U   	/ if both arguments apear to be sequences, try"
  - "vm/src/protocol/sequence.rs:231:59  	unsliceable 	U   	format!(\"'{}' object is unsliceable\", self.obj.class())"
  - "vm/src/py_serde.rs:206:39   	deserializers   	U   	can be reused by other deserializers without such limit"
  - "vm/src/stdlib/ast.rs:43:17      	numargs 	U   	let numargs = args.args.len();"
  - "vm/src/stdlib/atexit.rs:1:9     	atexit  	U   	pub use atexit::_run_exitfuncs;"
  - "vm/src/stdlib/builtins.rs:347:8     	hasattr     	U   	fn hasattr(obj: PyObjectRef, attr"
  - "vm/src/stdlib/builtins.rs:393:26    	normalish   	U   	// everything is normalish, we can just rely on"
  - "vm/src/stdlib/builtins.rs:648:40    	ternop      	U   	Err(vm.new_unsupported_ternop_error(&x, &y, &z, \"pow"
  - "vm/src/stdlib/builtins.rs:999:33    	hierarachy  	U   	ordered by exception_hierarachy.txt"
  - "vm/src/stdlib/codecs.rs:351:17  	pycodecs	U   	fn delegate_pycodecs("
  - "vm/src/stdlib/codecs.rs:373:8   	mbcs    	U   	fn mbcs_encode(args: FuncArgs"
  - "vm/src/stdlib/codecs.rs:425:8   	charmap 	U   	fn charmap_encode(args: FuncArgs"
  - "vm/src/stdlib/collections.rs:27:30      	Deque   	U   	std::collections::VecDeque;"
  - "vm/src/stdlib/collections.rs:30:23      	deque   	U   	#[pyclass(name = \"deque\")]"
  - "vm/src/stdlib/collections.rs:34:9       	maxlen  	U   	maxlen: Option<usize>,"
  - "vm/src/stdlib/errno.rs:42:44    	winerrs 	U   	should be here once winerrs are translated to errnos"
  - "vm/src/stdlib/functools.rs:1:17     	functools   	U   	pub(crate) use _functools::make_module;"
  - "vm/src/stdlib/io.rs:56:35   	unsupportedop   	U   	or_init(|| _io::make_unsupportedop(ctx))"
  - "vm/src/stdlib/io.rs:211:19  	seekfrom        	U   	pub(super) fn seekfrom("
  - "vm/src/stdlib/io.rs:247:12  	getvalue        	U   	fn getvalue(&self) -> Vec<u8> {"
  - "vm/src/stdlib/io.rs:356:14  	seekable        	U   	fn check_seekable(file: &PyObject, vm"
  - "vm/src/stdlib/io.rs:442:12  	isatty          	U   	fn isatty(_self: PyObjectRef)"
  - "vm/src/stdlib/io.rs:453:13  	iobase          	U   	iobase_close(&instance, vm"
  - "vm/src/stdlib/io.rs:479:12  	readlines       	U   	fn readlines("
  - "vm/src/stdlib/io.rs:505:12  	writelines      	U   	fn writelines("
  - "vm/src/stdlib/io.rs:532:34  	Seekable        	U   	pymethod(name = \"_checkSeekable\")]"
  - "vm/src/stdlib/io.rs:598:48  	readinto        	U   	call_method(&instance, \"readinto\", (b.clone(),))?,"
  - "vm/src/stdlib/io.rs:659:13  	bufobj          	U   	bufobj: PyObjectRef,"
  - "vm/src/stdlib/io.rs:914:21  	memobj          	U   	let memobj = PyMemoryView::from"
  - "vm/src/stdlib/io.rs:1144:25 	readbuf         	U   	let readbuf = VecBuffer::from(std"
  - "vm/src/stdlib/io.rs:1345:17 	fileobj         	U   	pub fn repr_fileobj_name(obj: &PyObject"
  - "vm/src/stdlib/io.rs:1555:13 	exeption        	U   	exeption_chain(flush_res, close"
  - "vm/src/stdlib/io.rs:2022:8  	textio          	U   	fn textio_encode_utf8(s: PyStrRef"
  - "vm/src/stdlib/io.rs:2496:25 	getstate        	U   	let decoder_getstate = || {"
  - "vm/src/stdlib/io.rs:2512:21 	ndecoded        	U   	let ndecoded = decoder_decode(input"
  - "vm/src/stdlib/io.rs:3678:10 	stacklevel      	U   	_stacklevel: OptionalArg<i32>,"
  - "vm/src/stdlib/io.rs:3917:28 	msvcrt          	U   	crate::stdlib::msvcrt::setmode_binary(fd)"
  - "vm/src/stdlib/itertools.rs:86:59    	leat        	U   	from(\"function takes at leat 1 arguments (0 given"
  - "vm/src/stdlib/itertools.rs:426:23   	starmap     	U   	#[pyclass(name = \"starmap\")]"
  - "vm/src/stdlib/itertools.rs:428:23   	Starmap     	U   	struct PyItertoolsStarmap {"
  - "vm/src/stdlib/itertools.rs:481:23   	takewhile   	U   	#[pyclass(name = \"takewhile\")]"
  - "vm/src/stdlib/itertools.rs:483:23   	Takewhile   	U   	struct PyItertoolsTakewhile {"
  - "vm/src/stdlib/itertools.rs:562:23   	dropwhile   	U   	#[pyclass(name = \"dropwhile\")]"
  - "vm/src/stdlib/itertools.rs:564:23   	Dropwhile   	U   	struct PyItertoolsDropwhile {"
  - "vm/src/stdlib/itertools.rs:831:23   	islice      	U   	#[pyclass(name = \"islice\")]"
  - "vm/src/stdlib/itertools.rs:833:23   	Islice      	U   	struct PyItertoolsIslice {"
  - "vm/src/stdlib/itertools.rs:987:23   	filterfalse 	U   	#[pyclass(name = \"filterfalse\")]"
  - "vm/src/stdlib/itertools.rs:1175:12  	teedata     	U   	// teedata a python class"
  - "vm/src/stdlib/itertools.rs:1757:21  	numactive   	U   	let mut numactive = zelf.iterators.len"
  - "vm/src/stdlib/marshal.rs:121:17     	pyint   	U   	pyint @ PyInt => {"
  - "vm/src/stdlib/marshal.rs:153:17     	pylist  	U   	pylist @ PyList => {"
  - "vm/src/stdlib/marshal.rs:158:17     	pyset   	U   	pyset @ PySet => {"
  - "vm/src/stdlib/marshal.rs:163:17     	pyfrozen	U   	pyfrozen @ PyFrozenSet => {"
  - "vm/src/stdlib/msvcrt.rs:13:17   	minwindef   	U   	shared::minwindef::UINT,"
  - "vm/src/stdlib/msvcrt.rs:28:13   	getch       	U   	fn _getch() -> i32;"
  - "vm/src/stdlib/msvcrt.rs:30:13   	getche      	U   	fn _getche() -> i32;"
  - "vm/src/stdlib/msvcrt.rs:31:13   	getwche     	U   	fn _getwche() -> u32;"
  - "vm/src/stdlib/msvcrt.rs:32:13   	putch       	U   	fn _putch(c: u32) -> i32;"
  - "vm/src/stdlib/nt.rs:40:65   	widecstring 	U   	GetFileAttributesW(path.to_widecstring(vm)?.as_ptr()) };"
  - "vm/src/stdlib/nt.rs:48:23   	Simlink     	U   	pub(super) struct SimlinkArgs {"
  - "vm/src/stdlib/nt.rs:112:8   	cwait       	U   	// cwait is available on MSVC"
  - "vm/src/stdlib/nt.rs:115:19  	termstat    	U   	fn _cwait(termstat: *mut i32, procHandle"
  - "vm/src/stdlib/nt.rs:167:17  	stdhandle   	U   	let stdhandle = match fd {"
  - "vm/src/stdlib/nt.rs:180:21  	csbi        	U   	let mut csbi = wincon::CONSOLE_SCREEN"
  - "vm/src/stdlib/nt.rs:196:13  	wexecv      	U   	fn _wexecv(cmdname: *const u16"
  - "vm/src/stdlib/nt.rs:196:20  	cmdname     	U   	fn _wexecv(cmdname: *const u16, argv:"
  - "vm/src/stdlib/nt.rs:252:13  	wpath       	U   	let wpath = path.to_widecstring"
  - "vm/src/stdlib/nt.rs:315:13  	wbuf        	U   	let wbuf = windows::core::PCWSTR"
  - "vm/src/stdlib/nt.rs:339:30  	ntdef       	U   	use winapi::shared::{ntdef::ULARGE_INTEGER, winerror"
  - "vm/src/stdlib/operator.rs:251:8     	iconcat     	U   	fn iconcat(a: PyObjectRef, b: PyObjectRe"
  - "vm/src/stdlib/operator.rs:345:9     	attrgetter  	U   	/// attrgetter(attr, ...) --> attrgetter"
  - "vm/src/stdlib/operator.rs:405:17    	nattr       	U   	let nattr = args.args.len();"
  - "vm/src/stdlib/operator.rs:443:9     	itemgetter  	U   	/// itemgetter(item, ...) --> itemgetter"
  - "vm/src/stdlib/operator.rs:510:9     	methodcaller	U   	/// methodcaller(name, ...) --> methodcaller"
  - "vm/src/stdlib/operator.rs:559:25    	pargs       	U   	let mut pargs = vec![zelf.name.as"
  - "vm/src/stdlib/os.rs:129:17  	pathlike        	U   	let pathlike = match_class!(match"
  - "vm/src/stdlib/os.rs:167:42  	osstr           	U   	Bytes(b) => bytes_as_osstr(b.as_bytes(), vm),"
  - "vm/src/stdlib/os.rs:279:13  	excp            	U   	let excp = self.error.into_pyexception"
  - "vm/src/stdlib/os.rs:563:38  	mkdirat         	U   	res = unsafe { libc::mkdirat(fd, path.as_ptr(), mode"
  - "vm/src/stdlib/os.rs:578:8   	mkdirs          	U   	fn mkdirs(path: PyStrRef, vm:"
  - "vm/src/stdlib/os.rs:592:8   	listdir         	U   	fn listdir(path: OptionalArg<PathOrFd"
  - "vm/src/stdlib/os.rs:689:8   	readlink        	U   	fn readlink(path: PyPathLike, dir"
  - "vm/src/stdlib/os.rs:702:9   	pathval         	U   	pathval: PathBuf,"
  - "vm/src/stdlib/os.rs:884:17  	entryref        	U   	let entryref: &mut Option<fs::ReadDir"
  - "vm/src/stdlib/os.rs:964:26  	structsequence  	U   	// TODO: unnamed structsequence fields"
  - "vm/src/stdlib/os.rs:998:49  	atimensec       	U   	stat.st_atime, stat.st_atimensec);"
  - "vm/src/stdlib/os.rs:999:49  	mtimensec       	U   	stat.st_mtime, stat.st_mtimensec);"
  - "vm/src/stdlib/os.rs:1000:49 	ctimensec       	U   	stat.st_ctime, stat.st_ctimensec);"
  - "vm/src/stdlib/os.rs:1004:34 	atim            	U   	atime = (stat.st_atim.tv_sec, stat.st_atim"
  - "vm/src/stdlib/os.rs:1005:34 	mtim            	U   	mtime = (stat.st_mtim.tv_sec, stat.st_mtim"
  - "vm/src/stdlib/os.rs:1006:34 	ctim            	U   	ctime = (stat.st_ctim.tv_sec, stat.st_ctim"
  - "vm/src/stdlib/os.rs:1082:33 	fileutils       	U   	// Based on CPython fileutils.c' attributes_to_mode"
  - "vm/src/stdlib/os.rs:1097:20 	systime         	U   	let sec = |systime: SystemTime| match systime"
  - "vm/src/stdlib/os.rs:1128:44 	xstat           	U   	replicate CPython's win32_xstat"
  - "vm/src/stdlib/os.rs:1160:21 	fstatat         	U   	let fstatat_ret = dir_fd.get_opt"
  - "vm/src/stdlib/os.rs:1210:8  	curdir          	U   	fn curdir_inner(vm: &VirtualMachine"
  - "vm/src/stdlib/os.rs:1215:8  	getcwd          	U   	fn getcwd(vm: &VirtualMachine"
  - "vm/src/stdlib/os.rs:1330:12 	Utime           	U   	struct UtimeArgs {"
  - "vm/src/stdlib/os.rs:1538:21 	cutime          	U   	tms_cutime: 0,"
  - "vm/src/stdlib/os.rs:1539:21 	cstime          	U   	tms_cstime: 0,"
  - "vm/src/stdlib/os.rs:1643:17 	loadavg         	U   	let mut loadavg = [0f64; 3];"
  - "vm/src/stdlib/os.rs:1658:8  	waitstatus      	U   	fn waitstatus_to_exitcode(status:"
  - "vm/src/stdlib/os.rs:1692:47 	consoleapi      	U   	unsafe { winapi::um::consoleapi::GetConsoleCP() },"
  - "vm/src/stdlib/os.rs:1729:13 	nodename        	U   	pub nodename: String,"
  - "vm/src/stdlib/posix_compat.rs:26:12     	unimpl  	U   	os_unimpl(\"os.access\", vm)"
  - "vm/src/stdlib/posix.rs:6:75     	Fcntl           	U   	fcntl::fcntl(fd, fcntl::FcntlArg::F_GETFD)?);"
  - "vm/src/stdlib/posix.rs:161:35   	Posix           	U   	POSIX_SPAWN_OPEN: i32 = PosixSpawnFileActionIdentifier"
  - "vm/src/stdlib/posix.rs:324:26   	symlinkat       	U   	nix::unistd::symlinkat(&*src, args.dir_fd.get"
  - "vm/src/stdlib/posix.rs:386:26   	Fchownat        	U   	nix::unistd::FchownatFlags::FollowSymlink"
  - "vm/src/stdlib/posix.rs:433:12   	Mknod           	U   	struct MknodArgs {"
  - "vm/src/stdlib/posix.rs:505:8    	sched           	U   	fn sched_get_priority_max(policy"
  - "vm/src/stdlib/posix.rs:533:12   	Sched           	U   	struct SchedParam {"
  - "vm/src/stdlib/posix.rs:622:17   	Setscheduler    	U   	struct SchedSetschedulerArgs {"
  - "vm/src/stdlib/posix.rs:766:13   	oflags          	U   	let oflags = fcntl::OFlag::from"
  - "vm/src/stdlib/posix.rs:844:8    	lchmod          	U   	fn lchmod(path: PyPathLike, mode"
  - "vm/src/stdlib/posix.rs:927:13   	ppid            	U   	let ppid = unistd::getppid()"
  - "vm/src/stdlib/posix.rs:939:13   	egid            	U   	let egid = unistd::getegid()"
  - "vm/src/stdlib/posix.rs:945:13   	pgid            	U   	let pgid ="
  - "vm/src/stdlib/posix.rs:971:13   	euid            	U   	let euid = unistd::geteuid()"
  - "vm/src/stdlib/posix.rs:1051:17  	ruid            	U   	fn setreuid(ruid: Option<Uid>, euid:"
  - "vm/src/stdlib/posix.rs:1087:8   	openpty         	U   	fn openpty(vm: &VirtualMachine"
  - "vm/src/stdlib/posix.rs:1150:17  	rgid            	U   	let mut rgid = 0;"
  - "vm/src/stdlib/posix.rs:1152:17  	sgid            	U   	let mut sgid = 0;"
  - "vm/src/stdlib/posix.rs:1333:64  	addopen         	U   	posix_spawn_file_actions_addopen("
  - "vm/src/stdlib/posix.rs:1345:64  	addclose        	U   	posix_spawn_file_actions_addclose(&mut file_actions, fd"
  - "vm/src/stdlib/posix.rs:1351:64  	adddup          	U   	posix_spawn_file_actions_adddup2(&mut file_actions,"
  - "vm/src/stdlib/posix.rs:1363:21  	attrp           	U   	let mut attrp = unsafe {"
  - "vm/src/stdlib/posix.rs:1365:37  	spawnattr       	U   	assert!(libc::posix_spawnattr_init(sa.as_mut_ptr("
  - "vm/src/stdlib/posix.rs:1379:52  	setsigdefault   	U   	libc::posix_spawnattr_setsigdefault(&mut attrp, set.as_ref"
  - "vm/src/stdlib/posix.rs:1449:8   	wifsignaled     	U   	fn wifsignaled(status: i32) -> bool"
  - "vm/src/stdlib/posix.rs:1453:8   	wifstopped      	U   	fn wifstopped(status: i32) -> bool"
  - "vm/src/stdlib/posix.rs:1457:8   	wifexited       	U   	fn wifexited(status: i32) -> bool"
  - "vm/src/stdlib/posix.rs:1461:8   	wtermsig        	U   	fn wtermsig(status: i32) -> i32"
  - "vm/src/stdlib/posix.rs:1465:8   	wstopsig        	U   	fn wstopsig(status: i32) -> i32"
  - "vm/src/stdlib/posix.rs:1469:8   	wexitstatus     	U   	fn wexitstatus(status: i32) -> i32"
  - "vm/src/stdlib/posix.rs:1503:65  	winsize         	U   	libc::TIOCGWINSZ, libc::winsize);"
  - "vm/src/stdlib/posix.rs:1507:20  	xpixel          	U   	ws_xpixel: 0,"
  - "vm/src/stdlib/posix.rs:1508:20  	ypixel          	U   	ws_ypixel: 0,"
  - "vm/src/stdlib/posix.rs:1517:13  	libstd          	U   	// from libstd:"
  - "vm/src/stdlib/posix.rs:1524:42  	copyfile        	U   	mut libc::c_void, // copyfile_state_t (unused)"
  - "vm/src/stdlib/posix.rs:1598:28  	cuserid         	U   	// function or to `cuserid()`. See man getlogin"
  - "vm/src/stdlib/posix.rs:1654:13  	retval          	U   	let retval = unsafe { libc::getpriority"
  - "vm/src/stdlib/posix.rs:1686:40  	Pathconf        	U   	s.as_str().parse::<PathconfVar>().map_err(|_| {"
  - "vm/src/stdlib/posix.rs:1919:8   	sendfile        	U   	fn sendfile(args: SendFileArgs,"
  - "vm/src/stdlib/pwd.rs:37:17      	pathbuf     	U   	let pathbuf_lossy = |p: std::path"
  - "vm/src/stdlib/pwd.rs:72:8       	getpwuid    	U   	fn getpwuid(uid: PyIntRef, vm:"
  - "vm/src/stdlib/pwd.rs:94:12      	setpwent    	U   	// setpwent, getpwent, etc are not"
  - "vm/src/stdlib/pwd.rs:94:22      	getpwent    	U   	// setpwent, getpwent, etc are not thread"
  - "vm/src/stdlib/pwd.rs:94:67      	fgetpwent   	U   	thread safe. Could use fgetpwent_r, but this is easier"
  - "vm/src/stdlib/pwd.rs:105:24     	endpwent    	U   	unsafe { libc::endpwent() };"
  - "vm/src/stdlib/signal.rs:22:18   	Wakeup      	U   	type WakeupFd = libc::SOCKET;"
  - "vm/src/stdlib/signal.rs:106:69  	sigint      	U   	expect(\"Failed to set sigint handler\");"
  - "vm/src/stdlib/signal.rs:150:8   	getsignal   	U   	fn getsignal(signalnum: i32, vm:"
  - "vm/src/stdlib/signal.rs:190:12  	wakeup      	U   	fn set_wakeup_fd(args: SetWakeupFdArgs"
  - "vm/src/stdlib/signal.rs:261:17  	sigbyte     	U   	let sigbyte = signum as u8;"
  - "vm/src/stdlib/sre.rs:33:8       	getcodesize 	U   	fn getcodesize() -> usize {"
  - "vm/src/stdlib/sre.rs:174:12     	pymatch     	U   	fn pymatch("
  - "vm/src/stdlib/sre.rs:195:12     	fullmatch   	U   	fn fullmatch("
  - "vm/src/stdlib/sre.rs:236:25     	matchlist   	U   	let mut matchlist: Vec<PyObjectRef> ="
  - "vm/src/stdlib/sre.rs:258:12     	finditer    	U   	fn finditer("
  - "vm/src/stdlib/sre.rs:311:25     	splitlist   	U   	let mut splitlist: Vec<PyObjectRef> ="
  - "vm/src/stdlib/sre.rs:434:25     	sublist     	U   	let mut sublist: Vec<PyObjectRef> ="
  - "vm/src/stdlib/sre.rs:685:12     	groupdict   	U   	fn groupdict("
  - "vm/src/stdlib/sys.rs:261:9      	xoptions            	U   	fn _xoptions(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:275:8      	warnoptions         	U   	fn warnoptions(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:362:14     	modulepath          	U   	let (modulepath, attrname) = if last"
  - "vm/src/stdlib/sys.rs:413:8      	getrecursionlimit   	U   	fn getrecursionlimit(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:442:8      	getprofile          	U   	fn getprofile(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:458:8      	gettrace            	U   	fn gettrace(vm: &VirtualMachine"
  - "vm/src/stdlib/sys.rs:468:13     	sysinfoapi          	U   	sysinfoapi::GetVersionExW,"
  - "vm/src/stdlib/sys.rs:477:17     	osvi                	U   	let osvi = &mut version as LPOSVERSION"
  - "vm/src/stdlib/sys.rs:600:8      	setprofile          	U   	fn setprofile(profilefunc: PyObjectRef"
  - "vm/src/stdlib/sys.rs:600:19     	profilefunc         	U   	fn setprofile(profilefunc: PyObjectRef, vm: &VirtualMac"
  - "vm/src/stdlib/sys.rs:628:8      	settrace            	U   	fn settrace(tracefunc: PyObjectRef"
  - "vm/src/stdlib/thread.rs:297:25  	sents   	U   	SENTINELS.with(|sents| {"
  - "vm/src/stdlib/thread.rs:348:12  	ldict   	U   	fn ldict(&self, vm: &VirtualMachine"
  - "vm/src/stdlib/time.rs:29:9      	Datelike    	U   	Datelike, Timelike,"
  - "vm/src/stdlib/time.rs:29:19     	Timelike    	U   	Datelike, Timelike,"
  - "vm/src/stdlib/time.rs:132:21    	nsecs       	U   	let nsecs = (float.fract() *"
  - "vm/src/stdlib/time.rs:143:25    	localtime   	U   	/// Construct a localtime from the optional seconds"
  - "vm/src/stdlib/time.rs:196:8     	asctime     	U   	fn asctime(t: OptionalArg<PyStructTime"
  - "vm/src/stdlib/time.rs:209:8     	strftime    	U   	fn strftime(format: PyStrRef, t"
  - "vm/src/stdlib/time.rs:216:8     	strptime    	U   	fn strptime("
  - "vm/src/stdlib/time.rs:252:24    	muldiv      	U   	pub(super) fn time_muldiv(ticks: i64, mul: i6"
  - "vm/src/stdlib/time.rs:372:55    	basetype    	U   	because this is not a basetype"
  - "vm/src/stdlib/time.rs:586:34    	nanosleep   	U   	res = unsafe { libc::nanosleep(&ts, &mut ts) };"
  - "vm/src/stdlib/time.rs:615:48    	gethrvtime  	U   	nanos(unsafe { libc::gethrvtime() }))"
  - "vm/src/stdlib/time.rs:680:21    	profileapi  	U   	use winapi::um::profileapi::{QueryPerformanceCounter"
  - "vm/src/stdlib/time.rs:683:17    	filetime    	U   	fn u64_from_filetime(time: FILETIME) -> u"
  - "vm/src/stdlib/time.rs:821:13    	ktime       	U   	let ktime = u64_from_filetime"
  - "vm/src/stdlib/winapi.rs:39:13   	minwinbase      	U   	minwinbase::STILL_ACTIVE,"
  - "vm/src/stdlib/winapi.rs:69:8    	husize          	U   	fn husize(h: HANDLE) -> usize"
  - "vm/src/stdlib/winapi.rs:213:22  	getenvironment  	U   	.map(|m| getenvironment(m, vm))"
  - "vm/src/stdlib/winapi.rs:217:17  	attrlist        	U   	let mut attrlist ="
  - "vm/src/stdlib/winapi.rs:218:13  	getattributelist	U   	getattributelist(args.startup_info.get"
  - "vm/src/stdlib/winapi.rs:242:13  	procinfo        	U   	let procinfo = unsafe {"
  - "vm/src/stdlib/winapi.rs:307:9   	handlelist      	U   	handlelist: Option<Vec<usize>>"
  - "vm/src/stdlib/winapi.rs:412:14  	ctypes          	U   	// TODO: ctypes.LibraryLoader.LoadLibrary"
  - "vm/src/stdlib/winreg.rs:55:42   	HKEY    	U   	= \"winreg\", name = \"HKEYType\")]"
  - "vm/src/stdlib/winreg.rs:57:14   	Hkey    	U   	struct PyHkey {"
  - "vm/src/stdlib/winreg.rs:85:36   	predef  	U   	let null_key = RegKey::predef(0 as ::winreg::HKEY"
  - "vm/src/stdlib/winreg.rs:127:32  	hkey    	U   	Self::Constant(hkey) => {"
  - "vm/src/stdlib/winreg.rs:193:24  	regval  	U   	.and_then(|regval| {"
  - "vm/src/stdlib/winreg.rs:195:33  	vtype   	U   	let ty = regval.vtype.clone() as usize;"
  - "vm/src/types/slot.rs:48:37      	Getattro	U   	getattro: AtomicCell<Option<GetattroFunc>>,"
  - "vm/src/types/slot.rs:49:37      	Setattro	U   	setattro: AtomicCell<Option<SetattroFunc>>,"
  - "vm/src/vm/compile.rs:32:17      	runpy   	U   	let runpy = self.import(\"runpy"
  - "vm/src/vm/context.rs:46:66      	strs	U   	str in here, no non-strs and no subclasses"
  - "vm/src/vm/context.rs:129:7      	idiv	U   	__idiv__,"
  - "vm/src/vm/context.rs:178:7      	rdiv	U   	__rdiv__,"
  - "vm/src/vm/mod.rs:221:13     	getregentry 	U   	let getregentry = encoding_module.get"
  - "vm/src/vm/mod.rs:534:29     	pyiter      	U   	return self.map_pyiter(value, func);"
  - "vm/src/vm/setting.rs:40:10      	Xfoo	U   	/// -Xfoo[=bar]"
  - "vm/src/vm/setting.rs:46:10      	Xdev	U   	/// -Xdev"
  - "vm/src/vm/setting.rs:52:10      	Wfoo	U   	/// -Wfoo"
  - "vm/src/vm/thread.rs:38:24   	intp	U   	let vm_owns_obj = |intp: NonNull<VirtualMachine"
  - "vm/src/vm/vm_new.rs:60:27   	costructor  	U   	// TODO: this costructor might be invalid, because"
  - "wasm/demo/package.json:7:10     	codemirror  	U   	\"codemirror\": \"^5.42.0\","
  - "wasm/demo/package.json:33:21    	Liddle      	U   	\"author\": \"Ryan Liddle\","
  - "wasm/demo/snippets/asyncbrowser.py:2:8      	asyncweb	U   	import asyncweb"
  - "wasm/demo/snippets/import_pypi.py:2:8       	whlimport   	U   	import whlimport"
  - "wasm/demo/snippets/import_pypi.py:19:5      	fmter       	U   	fmter = pygments.formatters"
  - "wasm/demo/snippets/import_pypi.py:19:52     	noclasses   	U   	formatters.html.HtmlFormatter(noclasses=True, style=\"default"
  - "wasm/demo/snippets/mandelbrot.py:4:5        	mandel  	U   	def mandel():"
  - "wasm/lib/Cargo.toml:11:16   	cdylib  	U   	crate-type = [\"cdylib\", \"rlib\"]"
  - "wasm/lib/Cargo.toml:11:26   	rlib    	U   	crate-type = [\"cdylib\", \"rlib\"]"
  - "wasm/lib/Cargo.toml:28:29   	bingden 	U   	parking_lot use wasm-bingden for instant"
  - "wasm/lib/Lib/_microdistlib.py:24:5      	distname	U   	distname = m.groups()[0]"
  - "wasm/lib/Lib/asyncweb.py:204:18     	jsclosure   	U   	@browser.jsclosure_once"
  - "wasm/lib/Lib/asyncweb.py:209:47     	jsfloat     	U   	cb.detach(), browser.jsfloat(ms))"
  - "wasm/lib/Lib/browser.py:14:6    	jsstr   	U   	\"jsstr\","
  - "wasm/lib/Lib/whlimport.py:9:9       	microdistlib	U   	import _microdistlib"
  - "wasm/lib/Lib/whlimport.py:45:9      	urlobj      	U   	urlobj = urlparse(pkg)"
  - "wasm/lib/Lib/whlimport.py:65:37     	distlib     	U   	VersionMatcher from distlib"
  - "wasm/lib/Lib/whlimport.py:76:53     	packagetype 	U   	ver_downloads if dl[\"packagetype\"] == \"bdist_wheel\")"
  - "wasm/lib/Lib/whlimport.py:106:13    	zname       	U   	for zname, z in cls._packages"
  - "wasm/lib/src/browser_module.rs:32:45    	Unkown      	U   	Err(vm.new_type_error(\"Unkown fetch response_format"
  - "wasm/lib/src/browser_module.rs:85:43    	typeerror   	U   	err| convert::js_py_typeerror(vm, err))?;"
  - "wasm/lib/src/convert.rs:34:9    	jserr   	U   	let jserr = vm.try_class(\"_js"
  - "wasm/lib/src/convert.rs:117:33  	jsresult	U   	pyresult_to_jsresult(vm, result)"
  - "wasm/lib/src/convert.rs:190:58  	Byffer  	U   	if it's not an ArrayByffer it could either be a"
  - "wasm/lib/src/js_module.rs:29:56     	instanceof  	U   	lhs, rhs) { return lhs instanceof rhs; }"
  - "wasm/lib/src/js_module.rs:85:17     	jsvalue     	U   	fn into_jsvalue(self) -> JsValue {"
  - "wasm/lib/src/js_module.rs:321:29    	pyargs      	U   	let mut pyargs = vec![PyJsValue::new"
  - "wasm/lib/src/js_module.rs:349:27    	jsval       	U   	.map(|(_, jsval)| jsval.clone())"
  - "wasm/lib/src/js_module.rs:577:62    	awaitpromise	U   	non-None value to an awaitpromise\".to_owned(),"
  - "wasm/lib/src/vm_class.rs:83:55      	varible 	U   	a normal-ish static varible, like Atomic* types"
  - "wasm/notebook/package.json:9:10     	katex   	U   	\"katex\": \"^0.12.0\","
  - "wasm/notebook/README.md:99:73   	Etherpad	U   	Think Google Doc or Etherpad editing but for code"
  - "wasm/notebook/snippets/python-js.txt:15:7       	xrightarrow 	U   	H(t) \\xrightarrow{write} \\Big[A(t+1),"
  - "wasm/notebook/snippets/python-markdown-math.txt:45:23   	infty   	U   	f\\relax{x} = \\int_{-\\infty}^\\infty"
  - "wasm/notebook/snippets/python-markdown-math.txt:50:8    	Bmatrix 	U   	\\begin{Bmatrix}"
  - "wasm/notebook/snippets/python-markdown-math.txt:55:2    	dbinom  	U   	\\dbinom{n}{k}"
  - "wasm/notebook/snippets/python-markdown-math.txt:67:14   	randint 	U   	rnd = random.randint(1,5)"
  - "wasm/notebook/src/index.js:9:25     	stex    	U   	import 'codemirror/mode/stex/stex';"
  - "wasm/notebook/src/index.js:20:10    	iomd    	U   	import { iomdParser } from './parse"
  - "wasm/notebook/src/index.js:142:5    	pyvm    	U   	let pyvm = null;"
  - "wasm/notebook/src/index.js:232:39   	somthing	U   	each type of chunk, do somthing"
  - "wasm/notebook/src/parse.js:19:32    	Iomd	U   	function iomdParser(fullIomd) {"
  - "wasm/notebook/src/process.js:20:21      	Katex       	U   	// Render Math with Katex"
  - "wasm/notebook/src/process.js:22:14      	definetly   	U   	// TODO: definetly add error handling."
  - "wasm/README.md:1:16     	webassembly 	U   	# Compiling to webassembly"
  - "wasm/tests/conftest.py:23:12    	sessionstart    	U   	def pytest_sessionstart(session):"
  - "wasm/tests/conftest.py:34:12    	sessionfinish   	U   	def pytest_sessionfinish(session):"
  - "wasm/tests/conftest.py:92:5     	wdriver         	U   	def wdriver(request):"
  - "whats_left.py:5:3       	cpymods         	U   	# cpymods - a dictionary mapping"
  - "whats_left.py:78:6      	fpectl          	U   	\"fpectl\","
  - "whats_left.py:81:6      	macpath         	U   	\"macpath\","
  - "whats_left.py:99:6      	xxmodule        	U   	'xxmodule', 'xxsubtype', 'xxlimited"
  - "whats_left.py:99:18     	xxsubtype       	U   	'xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz"
  - "whats_left.py:99:31     	xxlimited       	U   	xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz'"
  - "whats_left.py:99:45     	xxtestfuzz      	U   	xxsubtype', 'xxlimited', '_xxtestfuzz'"
  - "whats_left.py:348:16    	incompatability 	U   	def method_incompatability_reason(typ, method_name"
  - "whats_left.py:363:9     	implementeds    	U   	not_implementeds = {}"
  - "whats_left.py:386:5     	rustpymods      	U   	rustpymods = {mod: dir_of_mod_or"
  - "whats_left.py:397:18    	cpymod          	U   	for modname, cpymod in cpymods.items():"
  - "whats_left.py:398:9     	rustpymod       	U   	rustpymod = rustpymods.get(modname"
