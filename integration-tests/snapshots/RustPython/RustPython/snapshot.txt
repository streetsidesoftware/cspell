
Repository: RustPython/RustPython
Url: "https://github.com/RustPython/RustPython.git"
Args: ["**"]
Lines:
 CSpell: Files checked: 670, Issues found: 776 in 107 files.
 exit code: 1
Cargo.toml:106:28    - Unknown word (nsis)       -- package.metadata.packager.nsis]
Cargo.toml:190:1     - Unknown word (rustix)     -- rustix = { version = "1.0"
Cargo.toml:82:62     - Unknown word (redoxer)    -- to compile/check with redoxer
DEVELOPMENT.md:131:26    - Unknown word (subcrates)  -- src`: using the other subcrates to bring rustpython
LICENSE-logo:139:15    - Unknown word (sublicensable) -- non-sublicensable, non-exclusive, irrevocable
LICENSE-logo:205:34    - Unknown word (waivable)      -- under any voluntary or waivable statutory or compulsory
README.md:102:8     - Unknown word (wapm)       -- Run by wapm
README.md:105:3     - Unknown word (wapm)       -- $ wapm install rustpython
README.md:106:3     - Unknown word (wapm)       -- $ wapm run rustpython
README.md:116:39    - Unknown word (wasip)      -- release --target wasm32-wasip1 --features="freeze
README.md:119:139   - Unknown word (wasip)      -- rustup target add wasm32-wasip1`.
README.md:167:4     - Unknown word (FOSDEM)     -- - [FOSDEM 2019](https://www.youtube
README.md:175:4     - Unknown word (Greptime)   -- - [GreptimeDB](https://github.com
README.md:176:4     - Unknown word (pyckitup)   -- - [pyckitup](https://github.com
README.md:244:16    - Unknown word (rspython)      -- [windelbouwman/rspython](https://github.com
README.md:244:2     - Unknown word (windelbouwman) -- [windelbouwman/rspython](https://github
README.md:245:2     - Unknown word (shinglyu)      -- [shinglyu/RustPython](https:/
README.md:93:29     - Unknown word (wasip)      -- build --target wasm32-wasip1 --no-default-features
README.md:96:8      - Unknown word (wasmer)     -- Run by wasmer
README.md:99:1      - Unknown word (wasmer)     -- wasmer run --dir `pwd` -- target
README.md:99:41     - Unknown word (wasip)      -- pwd` -- target/wasm32-wasip1/release/rustpython
benches/benchmarks/fannkuch.py:14:5      - Unknown word (fannkuch)   -- def fannkuch(n):
benches/benchmarks/fannkuch.py:54:25     - Unknown word (fannkuch)   -- #runner.bench_func('fannkuch', fannkuch, arg)
benches/benchmarks/fannkuch.py:54:36     - Unknown word (fannkuch)   -- bench_func('fannkuch', fannkuch, arg)
benches/benchmarks/fannkuch.py:55:5      - Unknown word (fannkuch)   -- fannkuch(arg)
benches/benchmarks/fannkuch.py:5:16      - Unknown word (Sokolov)    -- Contributed by Sokolov Yura, modified by Tupteq
benches/benchmarks/fannkuch.py:5:24      - Unknown word (Yura)       -- Contributed by Sokolov Yura, modified by Tupteq
benches/benchmarks/fannkuch.py:5:42      - Unknown word (Tupteq)     -- Sokolov Yura, modified by Tupteq.
benches/benchmarks/nbody.py:5:15      - Unknown word (Tupteq)     -- # modified by Tupteq, Fredrik Johansson,
benches/benchmarks/nbody.py:5:23      - Unknown word (Fredrik)    -- modified by Tupteq, Fredrik Johansson, and Daniel
benches/benchmarks/nbody.py:5:31      - Unknown word (Johansson)  -- modified by Tupteq, Fredrik Johansson, and Daniel Nanz
benches/benchmarks/nbody.py:5:53      - Unknown word (Nanz)       -- Johansson, and Daniel Nanz
benches/benchmarks/pystone.py:109:23    - Unknown word (DHRYSTONE)  -- String2Loc = "DHRYSTONE PROGRAM, 2'ND STRING
benches/benchmarks/pystone.py:128:5     - Unknown word (benchtime)  -- benchtime = clock() - starttime
benches/benchmarks/pystone.py:129:8     - Unknown word (benchtime)  -- if benchtime == 0.0:
benches/benchmarks/pystone.py:130:17    - Unknown word (Benchtime)  -- loopsPerBenchtime = 0.0
benches/benchmarks/pystone.py:132:17    - Unknown word (Benchtime)  -- loopsPerBenchtime = (loops / benchtime
benches/benchmarks/pystone.py:132:38    - Unknown word (benchtime)  -- loopsPerBenchtime = (loops / benchtime)
benches/benchmarks/pystone.py:133:12    - Unknown word (benchtime)  -- return benchtime, loopsPerBenchtime
benches/benchmarks/pystone.py:133:31    - Unknown word (Benchtime)  -- return benchtime, loopsPerBenchtime
benches/benchmarks/pystone.py:19:51     - Unknown word (Arndt)      -- version 1.1.1 by Chris Arndt:
benches/benchmarks/pystone.py:52:40     - Unknown word (Discr)      -- self, PtrComp = None, Discr = 0, EnumComp = 0,
benches/benchmarks/pystone.py:55:14     - Unknown word (Discr)      -- self.Discr = Discr
benches/benchmarks/pystone.py:55:22     - Unknown word (Discr)      -- self.Discr = Discr
benches/benchmarks/pystone.py:61:42     - Unknown word (Discr)      -- Record(self.PtrComp, self.Discr, self.EnumComp,
benches/benchmarks/pystone.py:95:12     - Unknown word (Discr)      -- PtrGlb.Discr = Ident1
benches/benchmarks/pystone.py:98:26     - Unknown word (DHRYSTONE)  -- PtrGlb.StringComp = "DHRYSTONE PROGRAM, SOME STRING
benches/benchmarks/pystone.py:99:19     - Unknown word (DHRYSTONE)  -- String1Loc = "DHRYSTONE PROGRAM, 1'ST STRING
benches/benchmarks/pystone.py:9:29      - Unknown word (Weicker)    -- Reinhold P. Weicker, CACM Vol 27, No 1
benches/benchmarks/pystone.py:9:39      - Unknown word (CACM)       -- Reinhold P. Weicker,  CACM Vol 27, No 10, 10/8
common/src/lock/cell_lock.rs:131:23    - Unknown word (upgradably) -- deadlock("upgradably+sharedly ", "RwLock
common/src/lock/cell_lock.rs:131:34    - Unknown word (sharedly)   -- deadlock("upgradably+sharedly ", "RwLock")
common/src/lock/cell_lock.rs:180:35    - Unknown word (sharedly)   -- deadlock("recursively+sharedly ", "RwLock")
common/src/lock/cell_lock.rs:72:23     - Unknown word (sharedly)   -- deadlock("sharedly ", "RwLock")
compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__nested_double_async_with.snap:29:42     - Unknown word (woohoo)     -- LoadNameAny (6, woohoo)
compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__nested_double_async_with.snap:3:184     - Unknown word (woohoo)     -- async with woohoo():\n
compiler/src/lib.rs:94:27     - Unknown word (hackily)    -- TODO: do this less hackily; ruff's parser should
deny.toml:156:45    - Unknown word (dotgraphs)  -- ghlighting used when creating dotgraphs for crates
deny.toml:188:11    - Unknown word (reqwest)    -- #crate = "reqwest"
deny.toml:193:7     - Unknown word (rustls)     -- # "rustls",
deny.toml:194:9     - Unknown word (rustls)     -- # "__rustls",
deny.toml:196:13    - Unknown word (rustls)     -- # "hyper-rustls",
deny.toml:197:7     - Unknown word (rustls)     -- # "rustls",
deny.toml:198:14    - Unknown word (pemfile)    -- # "rustls-pemfile",
deny.toml:198:7     - Unknown word (rustls)     -- # "rustls-pemfile",
deny.toml:199:18    - Unknown word (webpki)     -- # "rustls-tls-webpki-roots",
deny.toml:201:7     - Unknown word (webpki)     -- # "webpki-roots",
deny.toml:210:21    - Unknown word (gnullvm)    -- "windows_x86_64_gnullvm",
deny.toml:215:22    - Unknown word (gnullvm)    -- "windows_aarch64_gnullvm",
example_projects/aheui-rust.md:1:3       - Unknown word (aheui)      -- # aheui-rust
example_projects/aheui-rust.md:4:14      - Unknown word (frozenlib)  -- - Creating a frozenlib: https://github.com
example_projects/barebone/Cargo.toml:2:17      - Unknown word (barebone)   -- name = "example-barebone"
example_projects/frozen_stdlib/src/main.rs:4:16      - Unknown word (aheui)      -- /// See also: `aheui-rust.md` for freezing
examples/parse_folder.rs:59:35     - Unknown word (Erreur)     -- Err(y) => error!("Erreur in file {:?} {:?}",
extra_tests/custom_text_test_runner.py:7:22      - Unknown word (Abtin)      -- Copyright (c) 2015 Abtin Gramian
extra_tests/custom_text_test_runner.py:7:28      - Unknown word (Gramian)    -- Copyright (c) 2015 Abtin Gramian
extra_tests/jsontests.py:3:11      - Unknown word (libregrtest) -- from test.libregrtest.runtest import findtests
extra_tests/snippets/3.1.2.18.py:3:9       - Unknown word (Jython)     -- assert "Jython" == "J" + word[1:]
extra_tests/snippets/builtin_bool.py:33:7      - Unknown word (Falsey)     -- class Falsey:
extra_tests/snippets/builtin_bool.py:37:12     - Unknown word (Falsey)     -- assert not Falsey()
extra_tests/snippets/builtin_bytearray.py:100:30    - Unknown word (efghij)     -- -6:] == bytearray(b"efghij")
extra_tests/snippets/builtin_bytearray.py:101:32    - Unknown word (bdfh)       -- 8:2] == bytearray(b"bdfh")
extra_tests/snippets/builtin_bytearray.py:102:33    - Unknown word (igec)       -- :-2] == bytearray(b"igec")
extra_tests/snippets/builtin_bytearray.py:163:25    - Unknown word (hhjjk)      -- bytearray.fromhex(b"hhjjk")
extra_tests/snippets/builtin_bytearray.py:165:21    - Unknown word (koki)       -- assert [bytearray(b"koki").center(i, b"|") for
extra_tests/snippets/builtin_bytearray.py:166:7     - Unknown word (koki)       -- b"koki",
extra_tests/snippets/builtin_bytearray.py:167:7     - Unknown word (koki)       -- b"koki",
extra_tests/snippets/builtin_bytearray.py:168:8     - Unknown word (koki)       -- b"|koki",
extra_tests/snippets/builtin_bytearray.py:169:8     - Unknown word (koki)       -- b"|koki|",
extra_tests/snippets/builtin_bytearray.py:17:33     - Unknown word (jilj)       -- bytearray("bla", encoding=b"jilj")
extra_tests/snippets/builtin_bytearray.py:192:58    - Unknown word (xkokx)      -- bytearray(b"x")) == b"xkokx"
extra_tests/snippets/builtin_bytearray.py:224:57    - Unknown word (kokxx)      -- bytearray(b"x")) == b"kokxx"
extra_tests/snippets/builtin_bytearray.py:256:57    - Unknown word (xxkok)      -- bytearray(b"x")) == b"xxkok"
extra_tests/snippets/builtin_bytearray.py:25:20     - Unknown word (omkmok)     -- assert bytearray(b"omkmok\Xaa") == bytearray(
extra_tests/snippets/builtin_bytearray.py:261:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(b"aze") ==
extra_tests/snippets/builtin_bytearray.py:262:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(b"az") == 4
extra_tests/snippets/builtin_bytearray.py:263:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(b"a") == 5
extra_tests/snippets/builtin_bytearray.py:265:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(bytearray(b
extra_tests/snippets/builtin_bytearray.py:266:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(memoryview(b
extra_tests/snippets/builtin_bytearray.py:282:28    - Unknown word (kmoomk)           -- jiljl", bytearray(b"kmoomk"), memoryview(b"aaaa
extra_tests/snippets/builtin_bytearray.py:282:8     - Unknown word (jiljl)            -- (b"jiljl", bytearray(b"kmoomk
extra_tests/snippets/builtin_bytearray.py:283:18    - Unknown word (jiljlkmoomkaaaa)  -- ) == bytearray(b"jiljlkmoomkaaaa")
extra_tests/snippets/builtin_bytearray.py:288:22    - Unknown word (abcxyz)           -- ) == bytearray(b"123abcxyz")
extra_tests/snippets/builtin_bytearray.py:315:32    - Unknown word (cdaaaaa)          -- bytearray(b"abcd").index(b"cdaaaaa")
extra_tests/snippets/builtin_bytearray.py:326:34    - Unknown word (cdaaaaa)          -- bytearray(b"abcd").find(b"cdaaaaa") == -1
extra_tests/snippets/builtin_bytearray.py:331:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").find(b"a") == 0
extra_tests/snippets/builtin_bytearray.py:332:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").rfind(b"a") == 8
extra_tests/snippets/builtin_bytearray.py:333:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").rfind(b"a", 2, 6)
extra_tests/snippets/builtin_bytearray.py:334:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").rfind(b"a", None,
extra_tests/snippets/builtin_bytearray.py:335:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").rfind(b"a", 2, None
extra_tests/snippets/builtin_bytearray.py:349:20    - Unknown word (hjhtuyjyujuyj)    -- assert bytearray(b"hjhtuyjyujuyj").translate(
extra_tests/snippets/builtin_bytearray.py:351:18    - Unknown word (btuybyubuyb)      -- ) == bytearray(b"btuybyubuyb")
extra_tests/snippets/builtin_bytearray.py:352:20    - Unknown word (hjhtuyjyujuyj)    -- assert bytearray(b"hjhtuyjyujuyj").translate(
extra_tests/snippets/builtin_bytearray.py:354:18    - Unknown word (abatuybyubuyb)    -- ) == bytearray(b"abatuybyubuyb")
extra_tests/snippets/builtin_bytearray.py:355:20    - Unknown word (hjhtuyjyujuyj)    -- assert bytearray(b"hjhtuyjyujuyj").translate(
extra_tests/snippets/builtin_bytearray.py:357:18    - Unknown word (abatuybyubuyb)    -- ) == bytearray(b"abatuybyubuyb")
extra_tests/snippets/builtin_bytearray.py:358:20    - Unknown word (hjhtuyfjtyhuhjuyj) -- assert bytearray(b"hjhtuyfjtyhuhjuyj").translate(None, bytearray
extra_tests/snippets/builtin_bytearray.py:359:7     - Unknown word (juyfjyujuyj)       -- b"juyfjyujuyj"
extra_tests/snippets/builtin_bytearray.py:361:20    - Unknown word (hjhtuyfjtyhuhjuyj) -- assert bytearray(b"hjhtuyfjtyhuhjuyj").translate(None, delete
extra_tests/snippets/builtin_bytearray.py:362:7     - Unknown word (juyfjyujuyj)       -- b"juyfjyujuyj"
extra_tests/snippets/builtin_bytearray.py:368:46    - Unknown word (cmowz)             -- example.com").strip(b"cmowz.") == bytearray(b"example
extra_tests/snippets/builtin_bytearray.py:370:47    - Unknown word (cmowz)             -- example.com").lstrip(b"cmowz.") == bytearray(b"example
extra_tests/snippets/builtin_bytearray.py:372:64    - Unknown word (mississ)           -- ipz") == bytearray(b"mississ")
extra_tests/snippets/builtin_bytearray.py:54:23     - Unknown word (abcdé)      -- assert len(bytearray("abcdé", "utf8")) == 6
extra_tests/snippets/builtin_bytearray.py:636:17    - Unknown word (appen)             -- a = bytearray(b"appen")
extra_tests/snippets/builtin_bytearray.py:656:29    - Unknown word (abcdabcdabcd)      -- a * 3 == bytearray(b'abcdabcdabcd')
extra_tests/snippets/builtin_bytearray.py:657:29    - Unknown word (abcdabcdabcd)      -- * a == bytearray(b'abcdabcdabcd')
extra_tests/snippets/builtin_bytearray.py:661:25    - Unknown word (abcdabcdabcd)      -- assert a == bytearray(b'abcdabcdabcd')
extra_tests/snippets/builtin_bytearray.py:686:25    - Unknown word (whello)            -- assert a == bytearray(b"whello, world"), a
extra_tests/snippets/builtin_bytearray.py:689:25    - Unknown word (whello)            -- assert a == bytearray(b"whello, worlwd"), a
extra_tests/snippets/builtin_bytearray.py:689:33    - Unknown word (worlwd)            -- bytearray(b"whello, worlwd"), a
extra_tests/snippets/builtin_bytearray.py:692:25    - Unknown word (owhello)           -- assert a == bytearray(b"owhello, worlwd"), a
extra_tests/snippets/builtin_bytearray.py:692:34    - Unknown word (worlwd)            -- bytearray(b"owhello, worlwd"), a
extra_tests/snippets/builtin_bytearray.py:695:25    - Unknown word (owhello)           -- assert a == bytearray(b"owhello, worlwdo"), a
extra_tests/snippets/builtin_bytearray.py:695:34    - Unknown word (worlwdo)           -- bytearray(b"owhello, worlwdo"), a
extra_tests/snippets/builtin_bytearray.py:699:17    - Unknown word (abcdabcd)          -- a = bytearray(b'abcdabcd')
extra_tests/snippets/builtin_bytearray.py:702:25    - Unknown word (abdabcd)           -- assert a == bytearray(b'abdabcd')
extra_tests/snippets/builtin_bytearray.py:708:25    - Unknown word (dlrow)             -- assert a == bytearray(b'dlrow ,olleh')
extra_tests/snippets/builtin_bytearray.py:708:32    - Unknown word (olleh)             -- bytearray(b'dlrow ,olleh')
extra_tests/snippets/builtin_bytearray.py:726:24    - Unknown word (bpython)           -- assert bytearray('rust%bpython%b', 'utf-8') % (b'
extra_tests/snippets/builtin_bytearray.py:72:33     - Unknown word (unashable)  -- bytearray(b"abcd")) # unashable
extra_tests/snippets/builtin_bytearray.py:737:18    - Unknown word (xffab)             -- a = bytearray(b'\xffab\x80\0\0\370\0\0')
extra_tests/snippets/builtin_bytearray.py:738:87    - Unknown word (xffab)             -- codecs\nencode\np1\n(V\xffab\x80\\u0000\\u0000\xf
extra_tests/snippets/builtin_bytearray.py:739:109   - Unknown word (xbfab)             -- x0c\x00\x00\x00\xc3\xbfab\xc2\x80\x00\x00\xc3
extra_tests/snippets/builtin_bytearray.py:740:115   - Unknown word (xbfab)             -- x0c\x00\x00\x00\xc3\xbfab\xc2\x80\x00\x00\xc3
extra_tests/snippets/builtin_bytearray.py:741:71    - Unknown word (xffab)             -- nbytearray\nq\x00C\t\xffab\x80\x00\x00\xf8\x00
extra_tests/snippets/builtin_bytearray.py:742:124   - Unknown word (xffab)             -- tbytearray\x94\x93\x94C\t\xffab\x80\x00\x00\xf8\x00
extra_tests/snippets/builtin_bytearray.py:79:29     - Unknown word (abcdab)     -- a + b == bytearray(b"abcdab")
extra_tests/snippets/builtin_bytes.py:13:29     - Unknown word (jilj)       -- bytes("bla", encoding=b"jilj")
extra_tests/snippets/builtin_bytes.py:148:21    - Unknown word (hhjjk)      -- bytes.fromhex(b"hhjjk")
extra_tests/snippets/builtin_bytes.py:150:11    - Unknown word (koki)       -- assert [b"koki".center(i, b"|") for
extra_tests/snippets/builtin_bytes.py:151:7     - Unknown word (koki)       -- b"koki",
extra_tests/snippets/builtin_bytes.py:152:7     - Unknown word (koki)       -- b"koki",
extra_tests/snippets/builtin_bytes.py:153:8     - Unknown word (koki)       -- b"|koki",
extra_tests/snippets/builtin_bytes.py:154:8     - Unknown word (koki)       -- b"|koki|",
extra_tests/snippets/builtin_bytes.py:177:47    - Unknown word (xkokx)      -- bytearray(b"x")) == b"xkokx"
extra_tests/snippets/builtin_bytes.py:209:46    - Unknown word (kokxx)      -- bytearray(b"x")) == b"kokxx"
extra_tests/snippets/builtin_bytes.py:23:10     - Unknown word (omkmok)     -- assert b"omkmok\Xaa" == bytes([111,
extra_tests/snippets/builtin_bytes.py:241:46    - Unknown word (xxkok)      -- bytearray(b"x")) == b"xxkok"
extra_tests/snippets/builtin_bytes.py:246:10    - Unknown word (azeazerazeazopia) -- assert b"azeazerazeazopia".count(b"aze") == 3
extra_tests/snippets/builtin_bytes.py:247:10    - Unknown word (azeazerazeazopia) -- assert b"azeazerazeazopia".count(b"az") == 4
extra_tests/snippets/builtin_bytes.py:248:10    - Unknown word (azeazerazeazopia) -- assert b"azeazerazeazopia".count(b"a") == 5
extra_tests/snippets/builtin_bytes.py:250:10    - Unknown word (azeazerazeazopia) -- assert b"azeazerazeazopia".count(bytearray(b"aze
extra_tests/snippets/builtin_bytes.py:251:10    - Unknown word (azeazerazeazopia) -- assert b"azeazerazeazopia".count(memoryview(b
extra_tests/snippets/builtin_bytes.py:267:17    - Unknown word (jiljl)            -- b"".join((b"jiljl", bytearray(b"kmoomk
extra_tests/snippets/builtin_bytes.py:267:37    - Unknown word (kmoomk)           -- jiljl", bytearray(b"kmoomk"), memoryview(b"aaaa
extra_tests/snippets/builtin_bytes.py:268:10    - Unknown word (jiljlkmoomkaaaa)  -- == b"jiljlkmoomkaaaa"
extra_tests/snippets/builtin_bytes.py:273:46    - Unknown word (abcxyz)           -- ", b"xyz")) == b"123abcxyz"
extra_tests/snippets/builtin_bytes.py:300:21    - Unknown word (cdaaaaa)          -- b"abcd".index(b"cdaaaaa")
extra_tests/snippets/builtin_bytes.py:311:23    - Unknown word (cdaaaaa)          -- assert b"abcd".find(b"cdaaaaa") == -1
extra_tests/snippets/builtin_bytes.py:316:10    - Unknown word (abcdabcda)        -- assert b"abcdabcda".find(b"a") == 0
extra_tests/snippets/builtin_bytes.py:317:10    - Unknown word (abcdabcda)        -- assert b"abcdabcda".rfind(b"a") == 8
extra_tests/snippets/builtin_bytes.py:318:10    - Unknown word (abcdabcda)        -- assert b"abcdabcda".rfind(b"a", 2, 6)
extra_tests/snippets/builtin_bytes.py:319:10    - Unknown word (abcdabcda)        -- assert b"abcdabcda".rfind(b"a", None,
extra_tests/snippets/builtin_bytes.py:320:10    - Unknown word (abcdabcda)        -- assert b"abcdabcda".rfind(b"a", 2, None
extra_tests/snippets/builtin_bytes.py:334:10    - Unknown word (hjhtuyjyujuyj)    -- assert b"hjhtuyjyujuyj".translate(bytes.maketrans
extra_tests/snippets/builtin_bytes.py:334:77    - Unknown word (btuybyubuyb)      -- b"ab"), b"h") == b"btuybyubuyb"
extra_tests/snippets/builtin_bytes.py:336:7     - Unknown word (hjhtuyjyujuyj)    -- b"hjhtuyjyujuyj".translate(bytes.maketrans
extra_tests/snippets/builtin_bytes.py:336:74    - Unknown word (abatuybyubuyb)    -- b"ab"), b"a") == b"abatuybyubuyb"
extra_tests/snippets/builtin_bytes.py:338:10    - Unknown word (hjhtuyjyujuyj)    -- assert b"hjhtuyjyujuyj".translate(bytes.maketrans
extra_tests/snippets/builtin_bytes.py:338:71    - Unknown word (abatuybyubuyb)    -- b"hj", b"ab")) == b"abatuybyubuyb"
extra_tests/snippets/builtin_bytes.py:339:10    - Unknown word (hjhtuyfjtyhuhjuyj) -- assert b"hjhtuyfjtyhuhjuyj".translate(None, b"ht
extra_tests/snippets/builtin_bytes.py:339:57    - Unknown word (juyfjyujuyj)       -- translate(None, b"ht") == b"juyfjyujuyj"
extra_tests/snippets/builtin_bytes.py:340:10    - Unknown word (hjhtuyfjtyhuhjuyj) -- assert b"hjhtuyfjtyhuhjuyj".translate(None, delete
extra_tests/snippets/builtin_bytes.py:340:64    - Unknown word (juyfjyujuyj)       -- delete=b"ht") == b"juyfjyujuyj"
extra_tests/snippets/builtin_bytes.py:345:35    - Unknown word (cmowz)             -- example.com".strip(b"cmowz.") == b"example"
extra_tests/snippets/builtin_bytes.py:347:36    - Unknown word (cmowz)             -- example.com".lstrip(b"cmowz.") == b"example.com
extra_tests/snippets/builtin_bytes.py:349:43    - Unknown word (mississ)           -- rstrip(b"ipz") == b"mississ"
extra_tests/snippets/builtin_bytes.py:40:19     - Unknown word (abcdé)      -- assert len(bytes("abcdé", "utf8")) == 6
extra_tests/snippets/builtin_bytes.py:603:19    - Unknown word (abcdabcdabcd)      -- assert a * 3 == b'abcdabcdabcd'
extra_tests/snippets/builtin_bytes.py:604:19    - Unknown word (abcdabcdabcd)      -- assert 3 * a == b'abcdabcdabcd'
extra_tests/snippets/builtin_bytes.py:615:15    - Unknown word (bpython)           -- assert b'rust%bpython%b' % (b' ', b'!') =
extra_tests/snippets/builtin_bytes.py:64:19     - Unknown word (abcdab)     -- assert a + b == b"abcdab"
extra_tests/snippets/builtin_bytes.py:85:20     - Unknown word (efghij)     -- assert d[-6:] == b"efghij"
extra_tests/snippets/builtin_bytes.py:86:22     - Unknown word (bdfh)       -- assert d[1:8:2] == b"bdfh"
extra_tests/snippets/builtin_bytes.py:87:23     - Unknown word (igec)       -- assert d[8:1:-2] == b"igec"
extra_tests/snippets/builtin_float.py:267:6     - Unknown word (infi)       -- "infi", # misspelt infinities
extra_tests/snippets/builtin_float.py:268:7     - Unknown word (Infinit)    -- "-Infinit",
extra_tests/snippets/builtin_float.py:278:6     - Unknown word (nfinity)    -- "nfinity",
extra_tests/snippets/builtin_float.py:279:6     - Unknown word (inity)      -- "inity",
extra_tests/snippets/builtin_float.py:280:6     - Unknown word (iinity)     -- "iinity",
extra_tests/snippets/builtin_float.py:281:7     - Unknown word (xnan)       -- "0xnan",
extra_tests/snippets/builtin_float.py:393:21    - Unknown word (xbep)       -- identical(fromHex("0xbep0"), 190.0)
extra_tests/snippets/builtin_list.py:253:13    - Unknown word (refrences)  -- # make sure refrences are assigned correctly
extra_tests/snippets/builtin_list.py:358:13    - Unknown word (refrences)  -- # make sure refrences are assigned correctly
extra_tests/snippets/builtin_list.py:660:26    - Unknown word (daedlock)   -- Test for list entering daedlock or not (https://github
extra_tests/snippets/builtin_pow.py:144:9     - Unknown word (fiveto)     -- fiveto = float(5 ** n)
extra_tests/snippets/builtin_pow.py:145:24    - Unknown word (fiveto)     -- # For small n, fiveto will be odd.  Eventually
extra_tests/snippets/builtin_pow.py:146:38    - Unknown word (thereafer)  -- mantissa bits, though, and thereafer fiveto will be even
extra_tests/snippets/builtin_pow.py:146:48    - Unknown word (fiveto)     -- though, and thereafer fiveto will be even.
extra_tests/snippets/builtin_pow.py:147:20    - Unknown word (fiveto)     -- expected = fiveto % 2.0 and -1.0 or 1
extra_tests/snippets/builtin_pow.py:148:19    - Unknown word (fiveto)     -- eq(pow(a, fiveto), expected)
extra_tests/snippets/builtin_pow.py:64:5      - Unknown word (asseq)      -- asseq = assert_equal
extra_tests/snippets/builtin_pow.py:67:9      - Unknown word (asseq)      -- asseq = assert_almost_equal
extra_tests/snippets/builtin_pow.py:79:21     - Unknown word (asseq)      -- asseq(
extra_tests/snippets/builtin_property.py:15:5      - Unknown word (Fubar)      -- f = Fubar()
extra_tests/snippets/builtin_property.py:19:13     - Unknown word (Fubar)      -- assert type(Fubar.foo) is property
extra_tests/snippets/builtin_property.py:4:7       - Unknown word (Fubar)      -- class Fubar:
extra_tests/snippets/builtin_set.py:384:27    - Unknown word (aruguments) -- TODO: Assert that empty aruguments raises exception.
extra_tests/snippets/builtin_str.py:100:7     - Unknown word (koki)       -- "|koki|",
extra_tests/snippets/builtin_str.py:174:153   - Unknown word (hoho)       -- 'Hallo', 'HELLO', 'hoho', 'haha', 'another'
extra_tests/snippets/builtin_str.py:174:161   - Unknown word (haha)       -- , 'HELLO', 'hoho', 'haha', 'another', 'yetanother
extra_tests/snippets/builtin_str.py:174:180   - Unknown word (yetanother) -- 'haha', 'another', 'yetanother', 'last', '.']
extra_tests/snippets/builtin_str.py:174:42    - Unknown word (dhoho)      -- x0cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u
extra_tests/snippets/builtin_str.py:174:50    - Unknown word (ehaha)      -- cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u2028yetanother
extra_tests/snippets/builtin_str.py:174:72    - Unknown word (yetanother) -- ehaha\x85another\u2028yetanother\u2029last\r\n.'.splitlines
extra_tests/snippets/builtin_str.py:175:182   - Unknown word (hoho)       -- x1c', 'HELLO\x1d', 'hoho\x1e', 'haha\x85', 'another
extra_tests/snippets/builtin_str.py:175:194   - Unknown word (haha)       -- HELLO\x1d', 'hoho\x1e', 'haha\x85', 'another\u202
extra_tests/snippets/builtin_str.py:175:223   - Unknown word (yetanother) -- , 'another\u2028', 'yetanother\u2029', 'last\r\n',
extra_tests/snippets/builtin_str.py:175:42    - Unknown word (dhoho)      -- x0cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u
extra_tests/snippets/builtin_str.py:175:50    - Unknown word (ehaha)      -- cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u2028yetanother
extra_tests/snippets/builtin_str.py:175:72    - Unknown word (yetanother) -- ehaha\x85another\u2028yetanother\u2029last\r\n.'.splitlines
extra_tests/snippets/builtin_str.py:340:7     - Unknown word (isisprintable) -- # str.isisprintable
extra_tests/snippets/builtin_str.py:37:21     - Unknown word (xyxyxy)     -- assert "xy" * 3 == "xyxyxy"
extra_tests/snippets/builtin_str.py:41:21     - Unknown word (xyxyxy)     -- assert 3 * "xy" == "xyxyxy"
extra_tests/snippets/builtin_str.py:645:10    - Unknown word (foobarfoo)     -- s = 'foobarfoo'
extra_tests/snippets/builtin_str.py:646:12    - Unknown word (foobarfoo)     -- s_ref='foobarfoo'
extra_tests/snippets/builtin_str.py:656:28    - Unknown word (afoo)          -- assert s.removeprefix('afoo') == s_ref
extra_tests/snippets/builtin_str.py:661:15    - Unknown word (foobarfoo)     -- s_uc = '😱foobarfoo🖖'
extra_tests/snippets/builtin_str.py:662:19    - Unknown word (foobarfoo)     -- s_ref_uc = '😱foobarfoo🖖'
extra_tests/snippets/builtin_str.py:689:8     - Unknown word (foobarfoo)     -- s='foobarfoo'
extra_tests/snippets/builtin_str.py:701:28    - Unknown word (fooa)          -- assert s.removesuffix('fooa') == s_ref
extra_tests/snippets/builtin_str.py:96:10     - Unknown word (koki)       -- assert ["koki".center(i, "|") for
extra_tests/snippets/builtin_str.py:97:6      - Unknown word (koki)       -- "koki",
extra_tests/snippets/builtin_str.py:98:6      - Unknown word (koki)       -- "koki",
extra_tests/snippets/builtin_str.py:99:7      - Unknown word (koki)       -- "|koki",
extra_tests/snippets/builtin_str_encode.py:11:42     - Unknown word (estás)     -- UnicodeEncodeError, "¿como estás?".encode, "ascii")
extra_tests/snippets/builtin_str_encode.py:19:25     - Unknown word (𝕐𝕥)       -- round_trip("☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣")
extra_tests/snippets/builtin_str_encode.py:20:19     - Unknown word (ק𝔂t)       -- round_trip("💀👌 ק𝔂tℍⓞ𝓷 ３  🔥👤")
extra_tests/snippets/builtin_str_unicode.py:26:40     - Unknown word (abcij)      -- encode("idna") == b'xn--abcij-zb5f'
extra_tests/snippets/builtin_str_unicode.py:31:48     - Unknown word (pythn)      -- encode("idna") == b"xn--pythn-mua.org"
extra_tests/snippets/builtin_str_unicode.py:32:49     - Unknown word (pythn)      -- encode("idna") == b"xn--pythn-mua.org."
extra_tests/snippets/builtin_str_unicode.py:35:14     - Unknown word (pythn)      -- assert b"xn--pythn-mua.org".decode("idna
extra_tests/snippets/builtin_str_unicode.py:36:14     - Unknown word (pythn)      -- assert b"xn--pythn-mua.org.".decode("idna
extra_tests/snippets/builtin_str_unicode_slice.py:35:19     - Unknown word (רֵאשִ)      -- hebrew_text = "בְּרֵאשִׁית, בָּרָא אֱלֹהִים
extra_tests/snippets/builtin_str_unicode_slice.py:35:36     - Unknown word (אֱלֹהִים)   -- בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, ו
extra_tests/snippets/builtin_str_unicode_slice.py:35:50     - Unknown word (הַשָּׁמַיִם) -- ָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
extra_tests/snippets/builtin_str_unicode_slice.py:35:63     - Unknown word (וְאֵת)       -- ם, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
extra_tests/snippets/builtin_str_unicode_slice.py:35:69     - Unknown word (הָאָרֶץ)     -- הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
extra_tests/snippets/builtin_str_unicode_slice.py:47:32     - Unknown word (מַיִם)       -- hebrew_text[-20:50] == 'מַיִם, וְא'
extra_tests/snippets/builtin_str_unicode_slice.py:49:35     - Unknown word (רֵאשִ)       -- text[:-30:1] == 'בְּרֵאשִׁית, בָּרָא אֱלֹהִים
extra_tests/snippets/builtin_str_unicode_slice.py:49:52     - Unknown word (אֱלֹהִים)    -- בְּרֵאשִׁית, בָּרָא אֱלֹהִים, '
extra_tests/snippets/builtin_str_unicode_slice.py:51:42     - Unknown word (אֱלֹהִים)    -- :-30] == 'ת, בָּרָא אֱלֹהִים, '
extra_tests/snippets/builtin_str_unicode_slice.py:56:34     - Unknown word (אםהֱאּ)      -- hebrew_text[30:10:-3] == 'אםהֱאּ '
extra_tests/snippets/builtin_str_unicode_slice.py:58:37     - Unknown word (םיִהֹלֱא)    -- text[30:10:-1] == 'א ,םיִהֹלֱא אָרָּב ,'
extra_tests/snippets/builtin_str_unicode_slice.py:58:46     - Unknown word (אָרּ)        -- -1] == 'א ,םיִהֹלֱא אָרָּב ,'
extra_tests/snippets/builtin_type.py:273:9     - Unknown word (stmethod)   -- def stmethod():
extra_tests/snippets/builtin_type.py:292:25    - Unknown word (stmethod)   -- assert MyTypeWithMethod.stmethod.__name__ == 'stmethod
extra_tests/snippets/builtin_type.py:292:47    - Unknown word (stmethod)   -- stmethod.__name__ == 'stmethod'
extra_tests/snippets/builtin_type.py:293:27    - Unknown word (stmethod)   -- assert MyTypeWithMethod().stmethod.__name__ == 'stmethod
extra_tests/snippets/builtin_type.py:293:49    - Unknown word (stmethod)   -- stmethod.__name__ == 'stmethod'
extra_tests/snippets/builtin_type.py:331:3     - Unknown word (Regresesion) -- # Regresesion to
extra_tests/snippets/example_interactive.py:26:16     - Unknown word (lnotab)     -- # assert c2.co_lnotab == 0, c2.co_lnotab
extra_tests/snippets/example_interactive.py:26:35     - Unknown word (lnotab)     -- co_lnotab == 0, c2.co_lnotab # b'\x00\x01' # Line
extra_tests/snippets/intro/3.1.2.5.py:1:9       - Unknown word (unununium)  -- assert 'unununium' == 3 * 'un' + 'ium
extra_tests/snippets/intro/3.1.2.6.py:1:26      - Unknown word (thon)       -- assert 'Python' == 'Py' 'thon'
extra_tests/snippets/protocol_index_bad.py:15:9      - Unknown word (setslice)   -- def run_setslice():
extra_tests/snippets/protocol_index_bad.py:23:9      - Unknown word (delslice)   -- def run_delslice():
extra_tests/snippets/protocol_index_bad.py:31:9      - Unknown word (setslice)   -- run_setslice()
extra_tests/snippets/protocol_index_bad.py:32:9      - Unknown word (delslice)   -- run_delslice()
extra_tests/snippets/stdlib_array.py:116:3     - Unknown word (teset)      -- # teset array.__contains__
extra_tests/snippets/stdlib_binascii.py:18:3      - Unknown word (unhexlify)  -- # unhexlify tests
extra_tests/snippets/stdlib_binascii.py:19:15     - Unknown word (unhexlify)  -- uh = binascii.unhexlify
extra_tests/snippets/stdlib_binascii.py:47:33     - Unknown word (Ghvbg)      -- equal(dec_b64(b"UnVzdFB5dGhvbg==\n"), b"RustPython
extra_tests/snippets/stdlib_binascii.py:50:18     - Unknown word (𝕐𝕥)       -- "☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣".encode(),
extra_tests/snippets/stdlib_binascii.py:5:3       - Unknown word (hexlify)    -- # hexlify tests
extra_tests/snippets/stdlib_binascii.py:6:14      - Unknown word (hexlify)    -- h = binascii.hexlify
extra_tests/snippets/stdlib_collections_deque.py:17:5      - Unknown word (klass)      -- klass = type(iter(deque()
extra_tests/snippets/stdlib_collections_deque.py:22:17     - Unknown word (klass)      -- d = klass(deque(s), i)
extra_tests/snippets/stdlib_collections_deque.py:28:17     - Unknown word (klass)      -- d = klass(deque(s), i)
extra_tests/snippets/stdlib_collections_deque.py:7:5       - Unknown word (klass)      -- klass = type(iter(deque()
extra_tests/snippets/stdlib_collections_deque.py:9:9       - Unknown word (klass)      -- d = klass(deque(s))
extra_tests/snippets/stdlib_ctypes.py:205:31    - Unknown word (RTLD)       -- mode |= ( _os.RTLD_MEMBER | _os.RTLD_NOW
extra_tests/snippets/stdlib_ctypes.py:26:14     - Unknown word (PYTHONAPI)  -- FUNCFLAG_PYTHONAPI as _FUNCFLAG_PYTHONAPI
extra_tests/snippets/stdlib_ctypes.py:26:37     - Unknown word (PYTHONAPI)  -- PYTHONAPI as _FUNCFLAG_PYTHONAPI, \
extra_tests/snippets/stdlib_datetime.py:1043:13   - Unknown word (todayagain) -- todayagain = self.theclass.fromtimestamp
extra_tests/snippets/stdlib_datetime.py:1044:25   - Unknown word (todayagain) -- if today == todayagain:
extra_tests/snippets/stdlib_datetime.py:1060:21   - Unknown word (todayagain) -- if today != todayagain:
extra_tests/snippets/stdlib_datetime.py:1061:36   - Unknown word (todayagain) -- self.assertAlmostEqual(todayagain, today,
extra_tests/snippets/stdlib_datetime.py:1158:20   - Unknown word (excercise)  -- #at least, excercise them to make sure that
extra_tests/snippets/stdlib_datetime.py:1212:9    - Unknown word (justasbig)  -- justasbig = timedelta(0, 0, n
extra_tests/snippets/stdlib_datetime.py:1213:27   - Unknown word (justasbig)  -- assert_equal(big, justasbig)
extra_tests/snippets/stdlib_datetime.py:1275:23   - Unknown word (OTHERSTUFF) -- for badarg in OTHERSTUFF:
extra_tests/snippets/stdlib_datetime.py:1391:17   - Unknown word (newmeth)    -- def newmeth(self, start):
extra_tests/snippets/stdlib_datetime.py:1403:26   - Unknown word (newmeth)    -- assert_equal(dt2.newmeth(-7), dt1.year + dt1
extra_tests/snippets/stdlib_datetime.py:152:14    - Unknown word (ACDT)       -- self.ACDT = timezone(timedelta
extra_tests/snippets/stdlib_datetime.py:152:53    - Unknown word (ACDT)       -- timedelta(hours=9.5), 'ACDT')
extra_tests/snippets/stdlib_datetime.py:157:25    - Unknown word (ACDT)       -- for tz in [self.ACDT, self.EST, timezone
extra_tests/snippets/stdlib_datetime.py:163:25    - Unknown word (ACDT)       -- for tz in [self.ACDT, self.EST, timezone
extra_tests/snippets/stdlib_datetime.py:2015:9    - Unknown word (alsobog)    -- alsobog = AlsoBogus()
extra_tests/snippets/stdlib_datetime.py:2016:50   - Unknown word (alsobog)    -- ValueError, dt.astimezone, alsobog) # also naive
extra_tests/snippets/stdlib_datetime.py:2030:17   - Unknown word (newmeth)    -- def newmeth(self, start):
extra_tests/snippets/stdlib_datetime.py:2042:26   - Unknown word (newmeth)    -- assert_equal(dt2.newmeth(-7), dt1.year + dt1
extra_tests/snippets/stdlib_datetime.py:2118:23   - Unknown word (OTHERSTUFF) -- for badarg in OTHERSTUFF:
extra_tests/snippets/stdlib_datetime.py:228:35    - Unknown word (ACDT)       -- tz in [self.EST, self.ACDT, Eastern]:
extra_tests/snippets/stdlib_datetime.py:2334:17   - Unknown word (newmeth)    -- def newmeth(self, start):
extra_tests/snippets/stdlib_datetime.py:2356:23   - Unknown word (atribute)   -- theclass as a class atribute, and theclass(1, 1,
extra_tests/snippets/stdlib_datetime.py:2413:17   - Unknown word (aofs)       -- aofs = abs(offset)
extra_tests/snippets/stdlib_datetime.py:2414:31   - Unknown word (aofs)       -- h, m = divmod(aofs, 60)
extra_tests/snippets/stdlib_datetime.py:2473:55   - Unknown word (comparands) -- gets ignored if the comparands have
extra_tests/snippets/stdlib_datetime.py:2495:50   - Unknown word (uctoffset)  -- re different members, uctoffset is not ignored.
extra_tests/snippets/stdlib_datetime.py:2496:59   - Unknown word (depedent)   -- actually have an operand-depedent offset,
extra_tests/snippets/stdlib_datetime.py:257:17    - Unknown word (pickler)    -- for pickler, unpickler, proto in
extra_tests/snippets/stdlib_datetime.py:257:26    - Unknown word (unpickler)  -- for pickler, unpickler, proto in pickle_choices
extra_tests/snippets/stdlib_datetime.py:258:27    - Unknown word (unpickler)  -- tz_copy = unpickler.loads(pickler.dumps
extra_tests/snippets/stdlib_datetime.py:258:43    - Unknown word (pickler)    -- copy = unpickler.loads(pickler.dumps(tz, proto))
extra_tests/snippets/stdlib_datetime.py:2605:15   - Unknown word (Badtzname)  -- class Badtzname(tzinfo):
extra_tests/snippets/stdlib_datetime.py:2608:34   - Unknown word (Badtzname)  -- time(2, 3, 4, tzinfo=Badtzname())
extra_tests/snippets/stdlib_datetime.py:2614:13   - Unknown word (Badtzname)  -- Badtzname.tz = '\ud800'
extra_tests/snippets/stdlib_datetime.py:261:13    - Unknown word (pickler)    -- for pickler, unpickler, proto in
extra_tests/snippets/stdlib_datetime.py:261:22    - Unknown word (unpickler)  -- for pickler, unpickler, proto in pickle_choices
extra_tests/snippets/stdlib_datetime.py:262:23    - Unknown word (unpickler)  -- tz_copy = unpickler.loads(pickler.dumps
extra_tests/snippets/stdlib_datetime.py:262:39    - Unknown word (pickler)    -- copy = unpickler.loads(pickler.dumps(tz, proto))
extra_tests/snippets/stdlib_datetime.py:27:1      - Unknown word (OTHERSTUFF) -- OTHERSTUFF = (10, 34.5, "abc",
extra_tests/snippets/stdlib_datetime.py:2805:17   - Unknown word (afer)       -- # Equal afer adjustment.
extra_tests/snippets/stdlib_datetime.py:2845:23   - Unknown word (uctoffset)  -- # Try a bogus uctoffset.
extra_tests/snippets/stdlib_datetime.py:2938:9    - Unknown word (timeaware)  -- timeaware = now.time().replace
extra_tests/snippets/stdlib_datetime.py:2939:54   - Unknown word (timeaware)  -- combine(now.date(), timeaware)
extra_tests/snippets/stdlib_datetime.py:2939:9    - Unknown word (nowaware)   -- nowaware = self.theclass.combine
extra_tests/snippets/stdlib_datetime.py:2940:23   - Unknown word (nowaware)   -- self.assertIs(nowaware.tzinfo, tz55)
extra_tests/snippets/stdlib_datetime.py:2941:22   - Unknown word (nowaware)   -- assert_equal(nowaware.timetz(), timeaware
extra_tests/snippets/stdlib_datetime.py:2941:41   - Unknown word (timeaware)  -- equal(nowaware.timetz(), timeaware)
extra_tests/snippets/stdlib_datetime.py:2944:48   - Unknown word (nowaware)   -- TypeError, lambda: now - nowaware)
extra_tests/snippets/stdlib_datetime.py:2945:42   - Unknown word (nowaware)   -- raises(TypeError, lambda: nowaware - now)
extra_tests/snippets/stdlib_datetime.py:2958:9    - Unknown word (nowawareplus) -- nowawareplus = nowaware + delta
extra_tests/snippets/stdlib_datetime.py:2960:9    - Unknown word (nowawareplus) -- nowawareplus2 = delta + nowaware
extra_tests/snippets/stdlib_datetime.py:2961:23   - Unknown word (nowawareplus) -- self.assertIs(nowawareplus2.tzinfo, tz55)
extra_tests/snippets/stdlib_datetime.py:2962:22   - Unknown word (nowawareplus) -- assert_equal(nowawareplus, nowawareplus2)
extra_tests/snippets/stdlib_datetime.py:2962:36   - Unknown word (nowawareplus) -- equal(nowawareplus, nowawareplus2)
extra_tests/snippets/stdlib_datetime.py:3022:13   - Unknown word (weirdtz)      -- for weirdtz in [FixedOffset(timedelta
extra_tests/snippets/stdlib_datetime.py:3022:71   - Unknown word (weirdtz)      -- hours=15, minutes=58), "weirdtz", 0),
extra_tests/snippets/stdlib_datetime.py:3023:68   - Unknown word (weirdtz)      -- hours=15, minutes=58), "weirdtz"),]:
extra_tests/snippets/stdlib_datetime.py:3025:36   - Unknown word (weirdtz)      -- now = datetime.now(weirdtz)
extra_tests/snippets/stdlib_datetime.py:3026:43   - Unknown word (weirdtz)      -- assertIs(now.tzinfo, weirdtz)
extra_tests/snippets/stdlib_datetime.py:3144:15   - Unknown word (UOFS)         -- class UOFS(DST):
extra_tests/snippets/stdlib_datetime.py:3145:32   - Unknown word (uofs)         -- def __init__(self, uofs, dofs=None):
extra_tests/snippets/stdlib_datetime.py:3145:38   - Unknown word (dofs)         -- _init__(self, uofs, dofs=None):
extra_tests/snippets/stdlib_datetime.py:3146:36   - Unknown word (dofs)         -- DST.__init__(self, dofs)
extra_tests/snippets/stdlib_datetime.py:3147:22   - Unknown word (uofs)         -- self.uofs = timedelta(minutes
extra_tests/snippets/stdlib_datetime.py:3147:47   - Unknown word (uofs)         -- = timedelta(minutes=uofs)
extra_tests/snippets/stdlib_datetime.py:3149:29   - Unknown word (uofs)         -- return self.uofs
extra_tests/snippets/stdlib_datetime.py:3152:53   - Unknown word (UOFS)         -- 20, 30, 40, tzinfo=UOFS(-53, dstvalue))
extra_tests/snippets/stdlib_datetime.py:3173:15   - Unknown word (NOFS)         -- class NOFS(DST):
extra_tests/snippets/stdlib_datetime.py:3176:49   - Unknown word (NOFS)         -- 20, 30, 40, tzinfo=NOFS())
extra_tests/snippets/stdlib_datetime.py:3197:52   - Unknown word (UOFS)         -- 1, 0, 0, 37, tzinfo=UOFS(1439))
extra_tests/snippets/stdlib_datetime.py:3201:64   - Unknown word (UOFS)         -- 37, 999999, tzinfo=UOFS(-1439))
extra_tests/snippets/stdlib_datetime.py:3222:17   - Unknown word (ofsstr)       -- ofsstr = ofs is not None and
extra_tests/snippets/stdlib_datetime.py:3223:37   - Unknown word (ofsstr)       -- tailstr = timestr + ofsstr
extra_tests/snippets/stdlib_datetime.py:3440:31   - Unknown word (reprname)     -- init__(self, hours, reprname, stdname, dstname):
extra_tests/snippets/stdlib_datetime.py:3442:14   - Unknown word (reprname)     -- self.reprname = reprname
extra_tests/snippets/stdlib_datetime.py:3442:25   - Unknown word (reprname)     -- self.reprname = reprname
extra_tests/snippets/stdlib_datetime.py:3447:21   - Unknown word (reprname)     -- return self.reprname
extra_tests/snippets/stdlib_datetime.py:3491:5    - Unknown word (dston)        -- dston = datetime(2002, 4,
extra_tests/snippets/stdlib_datetime.py:3497:40   - Unknown word (dston)        -- heckinside(self, dt, tz, utc, dston, dstoff):
extra_tests/snippets/stdlib_datetime.py:3503:9    - Unknown word (asutc)        -- asutc = dt.astimezone(utc
extra_tests/snippets/stdlib_datetime.py:3504:26   - Unknown word (asutc)        -- there_and_back = asutc.astimezone(tz)
extra_tests/snippets/stdlib_datetime.py:3514:25   - Unknown word (dston)        -- if dt.date() == dston.date() and dt.hour
extra_tests/snippets/stdlib_datetime.py:3536:24   - Unknown word (asutc)        -- nexthour_utc = asutc + HOUR
extra_tests/snippets/stdlib_datetime.py:3536:9    - Unknown word (nexthour)     -- nexthour_utc = asutc + HOUR
extra_tests/snippets/stdlib_datetime.py:3537:23   - Unknown word (nexthour)     -- nexthour_tz = nexthour_utc.astimezone(tz)
extra_tests/snippets/stdlib_datetime.py:3537:9    - Unknown word (nexthour)     -- nexthour_tz = nexthour_utc.astimezone
extra_tests/snippets/stdlib_datetime.py:3541:26   - Unknown word (nexthour)     -- assert_equal(nexthour_tz, dt.replace(hour
extra_tests/snippets/stdlib_datetime.py:3542:13   - Unknown word (nexthour)     -- nexthour_utc += HOUR
extra_tests/snippets/stdlib_datetime.py:3556:9    - Unknown word (asutc)        -- asutc = dt.astimezone(utc
extra_tests/snippets/stdlib_datetime.py:3557:26   - Unknown word (asutc)        -- there_and_back = asutc.astimezone(tz)
extra_tests/snippets/stdlib_datetime.py:3561:22   - Unknown word (dston)        -- dston = self.dston.replace(tzinfo=tz)
extra_tests/snippets/stdlib_datetime.py:3561:9    - Unknown word (dston)        -- dston = self.dston.replace
extra_tests/snippets/stdlib_datetime.py:3609:9    - Unknown word (ninewest)     -- ninewest = FixedOffset(-9*60
extra_tests/snippets/stdlib_datetime.py:3610:44   - Unknown word (ninewest)     -- fourback.replace(tzinfo=ninewest)
extra_tests/snippets/stdlib_datetime.py:3624:9    - Unknown word (sixutc)       -- sixutc = self.dston.replace
extra_tests/snippets/stdlib_datetime.py:3629:15   - Unknown word (sixutc)       -- got = sixutc.astimezone(Eastern)
extra_tests/snippets/stdlib_datetime.py:3646:17   - Unknown word (asutcbase)    -- asutcbase = asutc.replace(tzinfo
extra_tests/snippets/stdlib_datetime.py:3647:21   - Unknown word (tzhour)       -- for tzhour in (0, 1, 1, 2):
extra_tests/snippets/stdlib_datetime.py:3648:61   - Unknown word (tzhour)       -- dstoff.replace(hour=tzhour)
extra_tests/snippets/stdlib_datetime.py:3651:33   - Unknown word (asutcbase)    -- asutc = asutcbase.replace(minute=minute
extra_tests/snippets/stdlib_datetime.py:3652:25   - Unknown word (astz)         -- astz = asutc.astimezone(tz
extra_tests/snippets/stdlib_datetime.py:3653:38   - Unknown word (astz)         -- assert_equal(astz.replace(tzinfo=None
extra_tests/snippets/stdlib_datetime.py:3654:21   - Unknown word (asutcbase)    -- asutcbase += HOUR
extra_tests/snippets/stdlib_datetime.py:3667:15   - Unknown word (notok)        -- class notok(ok):
extra_tests/snippets/stdlib_datetime.py:3669:51   - Unknown word (notok)        -- ValueError, now.astimezone, notok())
extra_tests/snippets/stdlib_datetime.py:3675:22   - Unknown word (notok)        -- class tricky_notok(ok):
extra_tests/snippets/stdlib_datetime.py:3682:57   - Unknown word (notok)        -- dt.astimezone, tricky_notok())
extra_tests/snippets/stdlib_datetime.py:3698:62   - Unknown word (FEDT)         -- FEastern", "FEST", "FEDT")
extra_tests/snippets/stdlib_datetime.py:3768:3    - Unknown word (Neverthelss)  -- # Neverthelss, comparison should work
extra_tests/snippets/stdlib_datetime.py:509:13    - Unknown word (pickler)    -- for pickler, unpickler, proto in
extra_tests/snippets/stdlib_datetime.py:509:22    - Unknown word (unpickler)  -- for pickler, unpickler, proto in pickle_choices
extra_tests/snippets/stdlib_datetime.py:539:23    - Unknown word (OTHERSTUFF) -- for badarg in OTHERSTUFF:
extra_tests/snippets/stdlib_datetime.py:726:9     - Unknown word (zerotd)     -- zerotd = timedelta(0)
extra_tests/snippets/stdlib_datetime.py:727:54    - Unknown word (zerotd)     -- eroDivisionError, truediv, t, zerotd)
extra_tests/snippets/stdlib_datetime.py:728:55    - Unknown word (zerotd)     -- roDivisionError, floordiv, t, zerotd)
extra_tests/snippets/stdlib_datetime.py:744:9     - Unknown word (zerotd)     -- zerotd = timedelta(0)
extra_tests/snippets/stdlib_datetime.py:745:50    - Unknown word (zerotd)     -- ZeroDivisionError, mod, t, zerotd)
extra_tests/snippets/stdlib_datetime.py:841:13    - Unknown word (fromord)    -- fromord = self.theclass.fromordinal
extra_tests/snippets/stdlib_datetime.py:842:29    - Unknown word (fromord)    -- assert_equal(d, fromord)
extra_tests/snippets/stdlib_datetime.py:843:24    - Unknown word (fromord)    -- if hasattr(fromord, "hour"):
extra_tests/snippets/stdlib_datetime.py:846:30    - Unknown word (fromord)    -- assert_equal(fromord.hour, 0)
extra_tests/snippets/stdlib_datetime.py:847:30    - Unknown word (fromord)    -- assert_equal(fromord.minute, 0)
extra_tests/snippets/stdlib_datetime.py:882:9     - Unknown word (aord)       -- aord = a.toordinal()
extra_tests/snippets/stdlib_datetime.py:883:27    - Unknown word (aord)       -- b = a.fromordinal(aord)
extra_tests/snippets/stdlib_datetime.py:886:57    - Unknown word (aord)       -- lambda: a.fromordinal(aord - 1))
extra_tests/snippets/stdlib_datetime.py:889:37    - Unknown word (aord)       -- equal(b.toordinal(), aord + 1)
extra_tests/snippets/stdlib_datetime.py:890:51    - Unknown word (aord)       -- theclass.fromordinal(aord + 1))
extra_tests/snippets/stdlib_hashlib.py:34:30     - Unknown word (fubar)      -- hashlib.new("blake2s", b"fubar")
extra_tests/snippets/stdlib_io_bytesio.py:49:37     - Unknown word (accpets)    -- that the write method accpets bytearray
extra_tests/snippets/stdlib_itertools.py:185:5     - Unknown word (underten)   -- def underten(x):
extra_tests/snippets/stdlib_itertools.py:229:9     - Unknown word (underten)   -- it = tw(underten, [1, 3, 5, 20, 2, 4
extra_tests/snippets/stdlib_itertools.py:230:171   - Unknown word (nbtp)       -- naI8\natp4\nRp5\nI0\nbtp6\nRp7\nI0\nb.'
extra_tests/snippets/stdlib_itertools.py:230:33    - Unknown word (citertools) -- pickle.dumps(it, 0) == b'citertools\ntakewhile\np0\n(c_
extra_tests/snippets/stdlib_itertools.py:230:71    - Unknown word (nunderten)  -- ntakewhile\np0\n(c__main__\nunderten\np1\nc__builtin__\niter
extra_tests/snippets/stdlib_itertools.py:231:33    - Unknown word (citertools) -- pickle.dumps(it, 1) == b'citertools\ntakewhile\nq\x00(c
extra_tests/snippets/stdlib_itertools.py:231:72    - Unknown word (nunderten)  -- ntakewhile\nq\x00(c__main__\nunderten\nq\x01c__builtin__\niter
extra_tests/snippets/stdlib_itertools.py:232:41    - Unknown word (citertools) -- it, 2) == b'\x80\x02citertools\ntakewhile\nq\x00c_
extra_tests/snippets/stdlib_itertools.py:232:79    - Unknown word (nunderten)  -- ntakewhile\nq\x00c__main__\nunderten\nq\x01c__builtin__\niter
extra_tests/snippets/stdlib_itertools.py:233:41    - Unknown word (citertools) -- it, 3) == b'\x80\x03citertools\ntakewhile\nq\x00c_
extra_tests/snippets/stdlib_itertools.py:233:79    - Unknown word (nunderten)  -- ntakewhile\nq\x00c__main__\nunderten\nq\x01cbuiltins\niter
extra_tests/snippets/stdlib_itertools.py:234:148   - Unknown word (underten)   -- __main__\x94\x8c\x08underten\x94\x93\x94\x8c\x08builtins
extra_tests/snippets/stdlib_itertools.py:235:148   - Unknown word (underten)   -- __main__\x94\x8c\x08underten\x94\x93\x94\x8c\x08builtins
extra_tests/snippets/stdlib_itertools.py:243:171   - Unknown word (nbtp)       -- naI8\natp4\nRp5\nI4\nbtp6\nRp7\nI1\nb.'
extra_tests/snippets/stdlib_itertools.py:243:33    - Unknown word (citertools) -- pickle.dumps(it, 0) == b'citertools\ntakewhile\np0\n(c_
extra_tests/snippets/stdlib_itertools.py:243:71    - Unknown word (nunderten)  -- ntakewhile\np0\n(c__main__\nunderten\np1\nc__builtin__\niter
extra_tests/snippets/stdlib_itertools.py:247:148   - Unknown word (underten)   -- __main__\x94\x8c\x08underten\x94\x93\x94\x8c\x08builtins
extra_tests/snippets/stdlib_itertools.py:325:171   - Unknown word (nbtp)       -- naI8\natp4\nRp5\nI0\nbtp6\nRp7\nI0\nb.'
extra_tests/snippets/stdlib_itertools.py:332:171   - Unknown word (nbtp)       -- naI8\natp4\nRp5\nI4\nbtp6\nRp7\nI1\nb.'
extra_tests/snippets/stdlib_itertools.py:367:67    - Unknown word (ACEF)       -- 1,0,1,1])) == list("ACEF")
extra_tests/snippets/stdlib_itertools.py:372:77    - Unknown word (ACEF)       -- ,"",1,9])) == list("ACEF")
extra_tests/snippets/stdlib_itertools.py:54:24     - Unknown word (evaluted)   -- iterables are lazily evaluted
extra_tests/snippets/stdlib_logging.py:10:16     - Unknown word (WOOT)       -- logging.error('WOOT')
extra_tests/snippets/stdlib_logging.py:15:10     - Unknown word (WOOT)       -- assert 'WOOT' in res
extra_tests/snippets/stdlib_math.py:11:9      - Unknown word (Conversible) -- # class Conversible():
extra_tests/snippets/stdlib_math.py:16:39     - Unknown word (Conversible) -- 1.1111) == math.log(Conversible())
extra_tests/snippets/stdlib_math.py:18:3      - Unknown word (roundings)   -- # roundings
extra_tests/snippets/stdlib_os.py:121:14    - Unknown word (BOYA)       -- CONTENT3 = b"BOYA"
extra_tests/snippets/stdlib_os.py:290:48    - Unknown word (getpwall)   -- pw_uid for u in pwd.getpwall()]
extra_tests/snippets/stdlib_os.py:519:63    - Unknown word (VDISABLE)   -- "PC_MAX_INPUT", "PC_VDISABLE"]:
extra_tests/snippets/stdlib_re.py:18:17     - Unknown word (abcabca)    -- s = p.sub('x', 'abcabca')
extra_tests/snippets/stdlib_re.py:20:14     - Unknown word (xcxca)      -- assert s == 'xcxca'
extra_tests/snippets/stdlib_re.py:40:35     - Unknown word (abcdddd)    -- compile('abcd*').match('abcdddd').group() == 'abcdddd
extra_tests/snippets/stdlib_re.py:40:57     - Unknown word (abcdddd)    -- abcdddd').group() == 'abcdddd'
extra_tests/snippets/stdlib_re.py:42:36     - Unknown word (abce)       -- compile('abcd*e').match('abce').group() == 'abce'
extra_tests/snippets/stdlib_re.py:42:55     - Unknown word (abce)       -- 'abce').group() == 'abce'
extra_tests/snippets/stdlib_re.py:43:37     - Unknown word (abcddeee)   -- compile('abcd*e+').match('abcddeee').group() == 'abcddeee
extra_tests/snippets/stdlib_re.py:43:60     - Unknown word (abcddeee)   -- abcddeee').group() == 'abcddeee'
extra_tests/snippets/stdlib_re.py:44:35     - Unknown word (abcddd)     -- compile('abcd+').match('abcddd').group() == 'abcddd
extra_tests/snippets/stdlib_re.py:44:56     - Unknown word (abcddd)     -- abcddd').group() == 'abcddd'
extra_tests/snippets/stdlib_re.py:52:41     - Unknown word (abcdcdcd)   -- a)(b)(cd)*').match('abcdcdcd').group(0, 1, 2, 3)
extra_tests/snippets/stdlib_re.py:52:75     - Unknown word (abcdcdcd)   -- group(0, 1, 2, 3) == ('abcdcdcd', 'a', 'b', 'cd')
extra_tests/snippets/stdlib_re.py:5:11      - Unknown word (ello)       -- needle = 'ello'
extra_tests/snippets/stdlib_re.py:64:41     - Unknown word (Xtest)      -- ', 'X', 'test') == 'Xtest'
extra_tests/snippets/stdlib_select.py:26:1      - Unknown word (recvr)      -- recvr = socket.socket()
extra_tests/snippets/stdlib_select.py:28:1      - Unknown word (recvr)      -- recvr.bind(("127.0.0.1",
extra_tests/snippets/stdlib_select.py:30:1      - Unknown word (recvr)      -- recvr.listen()
extra_tests/snippets/stdlib_select.py:32:1      - Unknown word (recvr)      -- recvr.settimeout(10.0)
extra_tests/snippets/stdlib_select.py:34:1      - Unknown word (sendr)      -- sendr = socket.socket()
extra_tests/snippets/stdlib_select.py:36:1      - Unknown word (sendr)      -- sendr.connect(("127.0.0.1
extra_tests/snippets/stdlib_select.py:37:1      - Unknown word (sendr)      -- sendr.send(b"aaaa")
extra_tests/snippets/stdlib_select.py:39:1      - Unknown word (rres)       -- rres, wres, xres = select
extra_tests/snippets/stdlib_select.py:39:35     - Unknown word (recvr)      -- xres = select.select([recvr], [sendr], [])
extra_tests/snippets/stdlib_select.py:39:44     - Unknown word (sendr)      -- select.select([recvr], [sendr], [])
extra_tests/snippets/stdlib_select.py:42:21     - Unknown word (rres)       -- assert recvr in rres
extra_tests/snippets/stdlib_select.py:44:8      - Unknown word (sendr)      -- assert sendr in wres
extra_tests/snippets/stdlib_socket.py:164:13    - Unknown word (gaierror)   -- (socket.gaierror, "gaierror"),
extra_tests/snippets/stdlib_socket.py:164:24    - Unknown word (gaierror)   -- (socket.gaierror, "gaierror"),
extra_tests/snippets/stdlib_sqlite.py:47:22     - Unknown word (aggtxt)     -- cx.create_aggregate("aggtxt", 1, AggrText)
extra_tests/snippets/stdlib_sqlite.py:48:21     - Unknown word (aggtxt)     -- cur.execute("select aggtxt(key) from foo")
extra_tests/snippets/stdlib_subprocess.py:18:36     - Unknown word (unixy)      -- make work in a non-unixy environment (something
extra_tests/snippets/stdlib_zlib.py:36:38     - Unknown word (amet)       -- Lorem ipsum dolor sit amet", "utf-8")
extra_tests/snippets/stdlib_zlib.py:39:54     - Unknown word (amet)       -- xffLorem ipsum dolor sit amet\x83\xd5\t\xc5",
extra_tests/snippets/syntax_async.py:8:16      - Unknown word (Entrada)    -- print("Entrada")
extra_tests/snippets/syntax_class.py:229:20    - Unknown word (dbca)       -- assert D().f() == 'dbca', "Mro resolution using
extra_tests/snippets/syntax_class.py:42:9      - Unknown word (fubar)      -- def fubar(cls, x):
extra_tests/snippets/syntax_class.py:48:9      - Unknown word (kungfu)     -- def kungfu(x):
extra_tests/snippets/syntax_class.py:59:5      - Unknown word (fubar)      -- bar.fubar(2)
extra_tests/snippets/syntax_class.py:60:5      - Unknown word (fubar)      -- Bar.fubar(2)
extra_tests/snippets/syntax_class.py:62:5      - Unknown word (kungfu)     -- bar.kungfu(3)
extra_tests/snippets/syntax_class.py:63:5      - Unknown word (kungfu)     -- Bar.kungfu(3)
extra_tests/snippets/syntax_fstring.py:144:1     - Unknown word (tenπ)       -- tenπ = 31.4
extra_tests/snippets/syntax_fstring.py:145:21    - Unknown word (tenπ)       -- self.assertEqual(f'{tenπ=:.2f}', 'tenπ=31.40
extra_tests/snippets/syntax_fstring.py:145:35    - Unknown word (tenπ)       -- assertEqual(f'{tenπ=:.2f}', 'tenπ=31.40')
extra_tests/snippets/syntax_fstring.py:16:14     - Unknown word (tersing)    -- # lets start tersing
extra_tests/snippets/syntax_fstring.py:22:24     - Unknown word (barfoo)     -- assert f"{foo}foo" == 'barfoo'
extra_tests/snippets/syntax_fstring.py:23:27     - Unknown word (foobarfoo)  -- assert f"foo{foo}foo" == 'foobarfoo'
extra_tests/snippets/syntax_fstring.py:29:36     - Unknown word (barbarfoo)  -- f"{foo}" 'foo' == 'barbarfoo'
extra_tests/snippets/syntax_function2.py:23:5      - Unknown word (fubar)      -- def fubar():
extra_tests/snippets/syntax_function2.py:26:8      - Unknown word (fubar)      -- assert fubar() == (42,)
extra_tests/snippets/syntax_function2.py:66:23     - Unknown word (abcw)       -- assert f5.__doc__ == 'abcw00t', f5.__doc__
extra_tests/snippets/syntax_function_args.py:76:5      - Unknown word (fubar)      -- def fubar(x, y, obj=None):
extra_tests/snippets/syntax_function_args.py:82:1      - Unknown word (fubar)      -- fubar(obj=6, *rest)
extra_tests/snippets/syntax_global_nonlocal.py:3:28      - Unknown word (funkyness)  -- global and nonlocal funkyness
extra_tests/snippets/syntax_short_circuit_bool.py:14:14     - Unknown word (booled)     -- self.booled = False
extra_tests/snippets/syntax_short_circuit_bool.py:17:25     - Unknown word (booled)     -- assert not self.booled
extra_tests/snippets/syntax_short_circuit_bool.py:18:14     - Unknown word (booled)     -- self.booled = True
extra_tests/snippets/syntax_statement.py:4:15      - Unknown word (seperated)  -- # small ones, seperated by ';':
extra_tests/snippets/syntax_try.py:35:12     - Unknown word (kablam)     -- print('kablam')
extra_tests/snippets/syntax_try.py:49:12     - Unknown word (kablam)     -- print('kablam')
extra_tests/snippets/syntax_try.py:62:12     - Unknown word (kablam)     -- print('kablam')
extra_tests/snippets/syntax_try.py:73:16     - Unknown word (kablam)     -- print('kablam')
extra_tests/snippets/syntax_try.py:82:5      - Unknown word (fubar)      -- fubar
extra_tests/snippets/syntax_with.py:30:16     - Unknown word (Ajuus)      -- print('Ajuus')
extra_tests/snippets/syntax_with.py:5:16      - Unknown word (Entrada)    -- print('Entrada')
extra_tests/snippets/testutils.py:68:28     - Unknown word (klass)      -- assert_isinstance(obj, klass):
extra_tests/snippets/testutils.py:69:43     - Unknown word (klass)      -- lambda: isinstance(obj, klass), ['isisntance(', _typed
extra_tests/snippets/testutils.py:69:53     - Unknown word (isisntance) -- isinstance(obj, klass), ['isisntance(', _typed(obj), ','
extra_tests/snippets/testutils.py:69:85     - Unknown word (klass)      -- , _typed(obj), ',', klass, ')'])
extra_tests/test_snippets.py:27:5      - Unknown word (pushd)      -- def pushd(path):
installer-config/installer.nsi:108:37    - Unknown word (MANUPRODUCTKEY)         -- LANGDLL_REGISTRY_KEY "${MANUPRODUCTKEY}"
installer-config/installer.nsi:114:2     - Unknown word (insertmacro)            -- !insertmacro MUI_PAGE_WELCOME
installer-config/installer.nsi:119:4     - Unknown word (insertmacro)            -- !insertmacro MUI_PAGE_LICENSE "$
installer-config/installer.nsi:125:4     - Unknown word (insertmacro)            -- !insertmacro MULTIUSER_PAGE_INSTALLMODE
installer-config/installer.nsi:130:25    - Unknown word (installtion)            -- only if a previous installtion was detected
installer-config/installer.nsi:136:32    - Unknown word (isntallation)           -- installer stores the isntallation info in registry
installer-config/installer.nsi:141:16    - Unknown word (potentional)            -- ; This has a potentional issue that there maybe
installer-config/installer.nsi:155:24    - Unknown word (msiexec)                -- ${StrLoc} $R0 $R1 "msiexec" ">"
installer-config/installer.nsi:163:18    - Unknown word (SHCTX)                  -- ReadRegStr $R0 SHCTX "${UNINSTKEY}" ""
installer-config/installer.nsi:164:18    - Unknown word (SHCTX)                  -- ReadRegStr $R1 SHCTX "${UNINSTKEY}" "UninstallStri
installer-config/installer.nsi:167:18    - Unknown word (installar)              -- ; Compare this installar version with the existing
installer-config/installer.nsi:174:20    - Unknown word (SHCTX)                  -- ReadRegStr $R0 SHCTX "${UNINSTKEY}" "DisplayVersio
installer-config/installer.nsi:178:3     - Unknown word (nsis)                   -- nsis_tauri_utils::SemverCompare
installer-config/installer.nsi:178:8     - Unknown word (tauri)                  -- nsis_tauri_utils::SemverCompare
installer-config/installer.nsi:185:6     - Unknown word (insertmacro)            -- !insertmacro MUI_HEADER_TEXT "$(alreadyIns
installer-config/installer.nsi:192:59    - Unknown word (choow)                  -- alreadyInstalled)" "$(choowHowToInstall)"
installer-config/installer.nsi:192:6     - Unknown word (insertmacro)            -- !insertmacro MUI_HEADER_TEXT "$(alreadyIns
installer-config/installer.nsi:198:12    - Unknown word (ALLOWDOWNGRADES)        -- !if "${ALLOWDOWNGRADES}" == "true"
installer-config/installer.nsi:203:59    - Unknown word (choow)                  -- alreadyInstalled)" "$(choowHowToInstall)"
installer-config/installer.nsi:225:10    - Unknown word (ALLOWDOWNGRADES)        -- !if "${ALLOWDOWNGRADES}" == "false"
installer-config/installer.nsi:259:20    - Unknown word (reinst)                 -- StrCmp $R1 "1" reinst_uninstall reinst_done
installer-config/installer.nsi:259:37    - Unknown word (reinst)                 -- 1" reinst_uninstall reinst_done ; $R1 == "1", then
installer-config/installer.nsi:260:18    - Unknown word (reinst)                 -- StrCmp $R1 "1" reinst_done ; Same version
installer-config/installer.nsi:262:3     - Unknown word (reinst)                 -- reinst_uninstall:
installer-config/installer.nsi:270:21    - Unknown word (SHCTX)                  -- ReadRegStr $4 SHCTX "${MANUPRODUCTKEY}"
installer-config/installer.nsi:270:30    - Unknown word (MANUPRODUCTKEY)         -- ReadRegStr $4 SHCTX "${MANUPRODUCTKEY}" ""
installer-config/installer.nsi:271:22    - Unknown word (SHCTX)                  -- ReadRegStr $R1 SHCTX "${UNINSTKEY}" "UninstallStri
installer-config/installer.nsi:27:9      - Unknown word (INSTALLERICON) -- !define INSTALLERICON "{{installer_icon}}
installer-config/installer.nsi:280:29    - Unknown word (INSTDIR)                -- OrIf} ${FileExists} "$INSTDIR\${MAINBINARYNAME}.exe
installer-config/installer.nsi:292:14    - Unknown word (INSTDIR)                -- RMDir $INSTDIR
installer-config/installer.nsi:294:3     - Unknown word (reinst)                 -- reinst_done:
installer-config/installer.nsi:297:21    - Unknown word (directoy)               -- ; 5. Choose install directoy page
installer-config/installer.nsi:307:23    - Unknown word (INSTFILES)              -- insertmacro MUI_PAGE_INSTFILES
installer-config/installer.nsi:315:24    - Unknown word (SHOWREADME)             -- define MUI_FINISHPAGE_SHOWREADME
installer-config/installer.nsi:316:24    - Unknown word (SHOWREADME)             -- define MUI_FINISHPAGE_SHOWREADME_TEXT "$(createDesktop
installer-config/installer.nsi:317:24    - Unknown word (SHOWREADME)             -- define MUI_FINISHPAGE_SHOWREADME_FUNCTION CreateDesktopShortcu
installer-config/installer.nsi:319:30    - Unknown word (INSTDIR)                -- MUI_FINISHPAGE_RUN "$INSTDIR\${MAINBINARYNAME}.exe
installer-config/installer.nsi:349:25    - Unknown word (INSTFILES)              -- insertmacro MUI_UNPAGE_INSTFILES
installer-config/installer.nsi:355:18    - Unknown word (RESERVEFILE)            -- !insertmacro MUI_RESERVEFILE_LANGDLL
installer-config/installer.nsi:376:2     - Unknown word (macroend)               -- !macroend
installer-config/installer.nsi:37:9      - Unknown word (ALLOWDOWNGRADES) -- !define ALLOWDOWNGRADES "{{allow_downgrades
installer-config/installer.nsi:390:10    - Unknown word (INSTDIR)                -- ${If} $INSTDIR == ""
installer-config/installer.nsi:40:9      - Unknown word (MANUPRODUCTKEY)  -- !define MANUPRODUCTKEY "Software\${MANUFACTURER
installer-config/installer.nsi:41:9      - Unknown word (UNINSTALLERSIGNCOMMAND) -- !define UNINSTALLERSIGNCOMMAND "{{uninstaller_sign
installer-config/installer.nsi:420:10    - Unknown word (ALLOWDOWNGRADES)        -- !if "${ALLOWDOWNGRADES}" == "false"
installer-config/installer.nsi:442:3     - Unknown word (nsis)                  -- nsis_tauri_utils::FindProcess
installer-config/installer.nsi:442:8     - Unknown word (tauri)                 -- nsis_tauri_utils::FindProcess
installer-config/installer.nsi:448:14    - Unknown word (tauri)                 -- nsis_tauri_utils::KillProcess
installer-config/installer.nsi:448:9     - Unknown word (nsis)                  -- nsis_tauri_utils::KillProcess
installer-config/installer.nsi:470:2     - Unknown word (macroend)              -- !macroend
installer-config/installer.nsi:514:24    - Unknown word (MANUPRODUCTKEY)        -- WriteRegStr SHCTX "${MANUPRODUCTKEY}" "" $INSTDIR
installer-config/installer.nsi:60:8      - Unknown word (UNINSTALLERSIGNCOMMAND) -- !if "${UNINSTALLERSIGNCOMMAND}" != ""
installer-config/installer.nsi:614:10    - Unknown word (REBOOTOK)              -- RMDir /REBOOTOK "$INSTDIR\\{{this}}
installer-config/installer.nsi:61:22     - Unknown word (UNINSTALLERSIGNCOMMAND) -- !uninstfinalize '${UNINSTALLERSIGNCOMMAND}'
installer-config/installer.nsi:620:12    - Unknown word (SMPROGRAMS)            -- Delete "$SMPROGRAMS\$AppStartMenuFolder
installer-config/installer.nsi:621:11    - Unknown word (SMPROGRAMS)            -- RMDir "$SMPROGRAMS\$AppStartMenuFolder
installer-config/installer.nsi:635:26    - Unknown word (MANUPRODUCTKEY)        -- DeleteRegValue HKCU "${MANUPRODUCTKEY}" "Installer Language
installer-config/installer.nsi:668:21    - Unknown word (SMPROGRAMS)            -- CreateDirectory "$SMPROGRAMS\$AppStartMenuFolder
installer-config/installer.nsi:669:20    - Unknown word (SMPROGRAMS)            -- CreateShortcut "$SMPROGRAMS\$AppStartMenuFolder
installer-config/installer.nsi:670:24    - Unknown word (SMPROGRAMS)            -- ApplicationID::Set "$SMPROGRAMS\$AppStartMenuFolder
installer-config/installer.nsi:75:33     - Unknown word (INSTDIR)                -- MULTIUSER_INSTALLMODE_INSTDIR "${PRODUCTNAME}"
installer-config/installer.nsi:86:21     - Unknown word (EXECUTIONLEVEL)         -- !define MULTIUSER_EXECUTIONLEVEL Highest
installer-config/installer.nsi:91:8      - Unknown word (INSTALLERICON)          -- !if "${INSTALLERICON}" != ""
installer-config/installer.nsi:92:23     - Unknown word (INSTALLERICON)          -- !define MUI_ICON "${INSTALLERICON}"
installer-config/installer.nsi:97:15     - Unknown word (WELCOMEFINISHPAGE)      -- !define MUI_WELCOMEFINISHPAGE_BITMAP "${SIDEBARIMAGE
installer-config/installer.wxs:165:33    - Unknown word (msiexec)                        -- Target="[System64Folder]msiexec.exe"
installer-config/installer.wxs:277:23    - Unknown word (WVRTINSTALLED)                  -- <Property Id="WVRTINSTALLED">
installer-config/installer.wxs:278:33    - Unknown word (WVRT)                           -- <RegistrySearch Id="WVRTInstalledSystem" Root
installer-config/installer.wxs:279:33    - Unknown word (WVRT)                           -- <RegistrySearch Id="WVRTInstalledUser" Root=
installer-config/installer.wxs:282:24    - Unknown word (bootstrapper)                   -- {{#if download_bootstrapper}}
installer-config/installer.wxs:283:44    - Unknown word (Bootstrapper)                   -- Id='DownloadAndInvokeBootstrapper' Directory="INSTALLDIR
installer-config/installer.wxs:285:46    - Unknown word (Bootstrapper)                   -- Action='DownloadAndInvokeBootstrapper' Before='InstallFinalize
installer-config/installer.wxs:286:40    - Unknown word (WVRTINSTALLED)                  -- CDATA[NOT(REMOVE OR WVRTINSTALLED)]]>
installer-config/installer.wxs:291:31    - Unknown word (bootstrapper)                   -- -- Embedded webview bootstrapper mode -->
installer-config/installer.wxs:292:24    - Unknown word (bootstrapper)                   -- {{#if webview2_bootstrapper_path}}
installer-config/installer.wxs:293:76    - Unknown word (bootstrapper)                   -- SourceFile="{{webview2_bootstrapper_path}}"/>
installer-config/installer.wxs:294:33    - Unknown word (Bootstrapper)                   -- CustomAction Id='InvokeBootstrapper' BinaryKey='MicrosoftEdgeWebv
installer-config/installer.wxs:296:35    - Unknown word (Bootstrapper)                   -- Custom Action='InvokeBootstrapper' Before='InstallFinalize
installer-config/installer.wxs:297:40    - Unknown word (WVRTINSTALLED)                  -- CDATA[NOT(REMOVE OR WVRTINSTALLED)]]>
installer-config/installer.wxs:308:40    - Unknown word (WVRTINSTALLED)                  -- CDATA[NOT(REMOVE OR WVRTINSTALLED)]]>
installer-config/installer.wxs:30:45     - Unknown word (amus)       -- REINSTALLMODE" Value="amus" />
installer-config/installer.wxs:39:48     - Unknown word (UPGRADINGPRODUCTCODE) -- veShortcuts>Installed AND NOT UPGRADINGPRODUCTCODE</RemoveShortcuts>
installer-config/installer.wxs:67:23     - Unknown word (WIXUI)                -- <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEX
installer-config/installer.wxs:67:29     - Unknown word (EXITDIALOGOPTIONALCHECKBOXTEXT) -- <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="!(loc.LaunchApp
installer-config/installer.wxs:68:23     - Unknown word (WIXUI)                          -- <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX
installer-config/installer.wxs:68:29     - Unknown word (EXITDIALOGOPTIONALCHECKBOX)     -- <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX" Value="1"/>
installer-config/installer.wxs:74:102    - Unknown word (WIXUI)                          -- "LaunchApplication">WIXUI_EXITDIALOGOPTIONALCHECKBOX
installer-config/installer.wxs:74:108    - Unknown word (EXITDIALOGOPTIONALCHECKBOX)     -- LaunchApplication">WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
installer-config/installer.wxs:76:27     - Unknown word (WIXUI)                          -- <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR
scripts/bench.sh:1:29      - Unknown word (fannkuch)   -- BENCH in "int" "nbody" "fannkuch" "scimark"; do
scripts/bench.sh:1:40      - Unknown word (scimark)    -- "nbody" "fannkuch" "scimark"; do
scripts/install-openssl.ps1:1:12      - Unknown word (Actix)      -- # From the Actix Web windows workflow
scripts/redox/recipe.sh:3:1       - Unknown word (CARGOFLAGS) -- CARGOFLAGS=--no-default-features
scripts/redox/run-redoxer.sh:12:47     - Unknown word (redoxer)    -- root/rustpython-lib redoxer build --release
scripts/redox/run-redoxer.sh:17:1      - Unknown word (redoxer)    -- redoxer exec -f "$DIR" -- .
scripts/release-wapm.sh:10:39     - Unknown word (wasip)      -- release --target wasm32-wasip1 --no-default-features
scripts/release-wapm.sh:10:95     - Unknown word (WAPM)       -- features="${FEATURES_FOR_WAPM[*]}"
scripts/release-wapm.sh:12:1      - Unknown word (wapm)       -- wapm publish
scripts/release-wapm.sh:6:14      - Unknown word (WAPM)       -- FEATURES_FOR_WAPM=(stdlib zlib)
src/settings.rs:241:63    - Unknown word (PYTHONNOUSERSITE)        -- user_site || env_bool("PYTHONNOUSERSITE"));
src/settings.rs:243:71    - Unknown word (PYTHONDONTWRITEBYTECODE) -- bytecode || env_bool("PYTHONDONTWRITEBYTECODE"));
src/settings.rs:249:33    - Unknown word (PYTHONINTMAXSTRDIGITS)   -- Some(val) = get_env("PYTHONINTMAXSTRDIGITS") {
src/settings.rs:254:74    - Unknown word (PYTHONINTMAXSTRDIGITS)   -- int_max_str_digits: PYTHONINTMAXSTRDIGITS: invalid limit; must
src/settings.rs:67:49     - Unknown word (PYTHONDONTWRITEBYTECODE) -- files on import; also PYTHONDONTWRITEBYTECODE=x
src/settings.rs:84:58     - Unknown word (PYTHONNOUSERSITE)        -- directory to sys.path; also PYTHONNOUSERSITE=x
src/settings.rs:87:51     - Unknown word (PYTHONUNBUFFERED)        -- effect on stdin; also PYTHONUNBUFFERED=x
stdlib/Cargo.toml:102:1     - Unknown word (rustix)     -- rustix = { workspace = true
stdlib/Cargo.toml:82:41     - Unknown word (libbz)      -- "0.5", features = ["libbz2-rs-sys"] }
stdlib/build.rs:10:27     - Unknown word (ossl)       -- (0x1_01_00_07_0, "ossl110g"),
stdlib/build.rs:2:44      - Unknown word (osslconf)   -- rustc-check-cfg=cfg(osslconf, values("OPENSSL_NO
stdlib/build.rs:37:39     - Unknown word (osslconf)   -- println!("cargo:rustc-cfg=osslconf=\"{conf}\"");
stdlib/build.rs:6:9       - Unknown word (ossl)       -- let ossl_vers = [
stdlib/build.rs:7:27      - Unknown word (ossl)       -- (0x1_00_01_00_0, "ossl101"),
stdlib/build.rs:8:27      - Unknown word (ossl)       -- (0x1_00_02_00_0, "ossl102"),
stdlib/build.rs:9:27      - Unknown word (ossl)       -- (0x1_01_00_00_0, "ossl110"),
stdlib/src/gc.rs:43:12     - Unknown word (refererts)  -- fn get_refererts(_args: FuncArgs, vm
vm/Cargo.toml:100:1     - Unknown word (rustix)     -- rustix = { workspace = true
vm/src/builtins/function/jitfunc.rs:114:14    - Unknown word (Jitting)    -- "Jitting function requires return
vm/src/builtins/function/jitfunc.rs:89:14     - Unknown word (Jitting)    -- "Jitting function requires arguments
vm/src/builtins/memory.rs:641:18    - Unknown word (fortain)    -- // TODO: fortain order
vm/src/builtins/str.rs:2253:21   - Unknown word (Ωppercases) -- ("Greek Ωppercases ...", "greek ωppercases
vm/src/builtins/str.rs:2253:45   - Unknown word (ωppercases) -- ppercases ...", "greek ωppercases ..."),
vm/src/builtins/str.rs:2254:21   - Unknown word (ῼitlecases) -- ("Greek ῼitlecases ...", "greek ῳitlecases
vm/src/builtins/str.rs:2254:45   - Unknown word (ῳitlecases) -- itlecases ...", "greek ῳitlecases ..."),
vm/src/builtins/str.rs:2268:20   - Unknown word (Ωppercases) -- "Greek Ωppercases ...",
vm/src/builtins/str.rs:2269:20   - Unknown word (ῼitlecases) -- "Greek ῼitlecases ...",
vm/src/builtins/str.rs:577:48    - Unknown word (cmpxchg)    -- len, we don't need a cmpxchg loop, since it'll always
vm/src/builtins/super.rs:273:26    - Unknown word (cmeth)      -- def cmeth(cls, arg):\n
vm/src/builtins/super.rs:274:30    - Unknown word (cmeth)      -- super().cmeth(arg)\n";
vm/src/function/argument.rs:121:13    - Unknown word (kwargc)     -- let kwargc = kwarg_names.len()
vm/src/function/argument.rs:122:36    - Unknown word (kwargc)     -- posargc = total_argc - kwargc;
vm/src/function/builtin.rs:69:26     - Unknown word (sizedness)  -- requirements of zero-sizedness apply, see that documentation
vm/src/object/traverse_object.rs:47:56     - Unknown word (maintaince) -- pointer* to a struct for maintaince weak ref, so no ownership
vm/src/object/traverse_object.rs:67:56     - Unknown word (maintaince) -- pointer* to a struct for maintaince weak ref, so no ownership
vm/src/protocol/buffer.rs:389:22    - Unknown word (fortain)    -- // TODO: support fortain order
vm/src/stdlib/builtins.rs:441:26    - Unknown word (normalish)  -- // everything is normalish, we can just rely on
vm/src/stdlib/typing.rs:164:34    - Unknown word (gigity)     -- println!("gigity");
vm/src/vm/setting.rs:39:10     - Unknown word (Xfoo)       -- /// -Xfoo[=bar]
vm/src/vm/setting.rs:42:10     - Unknown word (Wfoo)       -- /// -Wfoo
vm/src/vm/setting.rs:75:13     - Unknown word (PYTHONUNBUFFERED) -- /// -u, PYTHONUNBUFFERED=x
vm/sre_engine/Cargo.toml:3:13      - Unknown word (Kangzhi)    -- authors = ["Kangzhi Shi <shikangzhi@gmail
wapm.toml:11:25     - Unknown word (wasip)      -- source = "target/wasm32-wasip1/release/rustpython
wasm/README.md:1:16      - Unknown word (webassembly) -- # Compiling to webassembly
wasm/demo/package.json:34:21     - Unknown word (Liddle)     -- "author": "Ryan Liddle",
wasm/demo/snippets/asyncbrowser.py:15:5      - Unknown word (asyncweb)   -- asyncweb.run(main(delay))
wasm/demo/snippets/asyncbrowser.py:2:8       - Unknown word (asyncweb)   -- import asyncweb
wasm/demo/snippets/import_pypi.py:11:2      - Unknown word (asyncweb)   -- @asyncweb.main
wasm/demo/snippets/import_pypi.py:13:11     - Unknown word (whlimport)  -- await whlimport.load_package("pygments
wasm/demo/snippets/import_pypi.py:18:5      - Unknown word (fmter)      -- fmter = pygments.formatters
wasm/demo/snippets/import_pypi.py:19:58     - Unknown word (fmter)      -- hi, mom!')", lexer, fmter))
wasm/demo/snippets/import_pypi.py:6:8       - Unknown word (asyncweb)   -- import asyncweb
wasm/demo/snippets/import_pypi.py:7:8       - Unknown word (whlimport)  -- import whlimport
wasm/demo/snippets/import_pypi.py:9:1       - Unknown word (whlimport)  -- whlimport.setup()
wasm/lib/Cargo.toml:12:26     - Unknown word (rlib)       -- crate-type = ["cdylib", "rlib"]
wasm/lib/Lib/_microdistlib.py:127:14    - Unknown word (distname)   -- rs = distname
wasm/lib/Lib/_microdistlib.py:129:25    - Unknown word (distname)   -- rs = '%s %s' % (distname, ', '.join(['%s %s'
wasm/lib/Lib/_microdistlib.py:130:27    - Unknown word (distname)   -- return Container(name=distname, extras=extras, constraints
wasm/lib/Lib/_microdistlib.py:24:5      - Unknown word (distname)   -- distname = m.groups()[0]
wasm/lib/Lib/asyncweb.py:204:18    - Unknown word (jsclosure)  -- @browser.jsclosure_once
wasm/lib/Lib/asyncweb.py:209:47    - Unknown word (jsfloat)    -- cb.detach(), browser.jsfloat(ms))
wasm/lib/Lib/browser.py:14:6      - Unknown word (jsstr)      -- "jsstr",
wasm/lib/Lib/browser.py:15:6      - Unknown word (jsclosure)  -- "jsclosure",
wasm/lib/Lib/browser.py:16:6      - Unknown word (jsclosure)  -- "jsclosure_once",
wasm/lib/Lib/browser.py:17:6      - Unknown word (jsfloat)    -- "jsfloat",
wasm/lib/Lib/browser.py:34:1      - Unknown word (jsstr)      -- jsstr = window.new_from_str
wasm/lib/Lib/browser.py:35:1      - Unknown word (jsclosure)  -- jsclosure = window.new_closure
wasm/lib/Lib/browser.py:36:1      - Unknown word (jsclosure)  -- jsclosure_once = window.new_closure
wasm/lib/Lib/browser.py:37:2      - Unknown word (jsfloat)    -- _jsfloat = window.new_from_float
wasm/lib/Lib/browser.py:43:5      - Unknown word (jsfloat)    -- def jsfloat(n):
wasm/lib/Lib/browser.py:44:13     - Unknown word (jsfloat)    -- return _jsfloat(float(n))
wasm/lib/Lib/browser.py:53:17     - Unknown word (jsstr)      -- _alert.call(jsstr(msg))
wasm/lib/Lib/browser.py:62:26     - Unknown word (jsstr)      -- return _confirm.call(jsstr(msg)).as_bool()
wasm/lib/Lib/browser.py:75:9      - Unknown word (jsstr)      -- jsstr(msg), jsstr(default
wasm/lib/Lib/whlimport.py:106:13    - Unknown word (zname)        -- for zname, z in cls._packages
wasm/lib/Lib/whlimport.py:110:50    - Unknown word (zname)        -- cls, origin=f"zip:{zname}/{fullpath}", is_package
wasm/lib/Lib/whlimport.py:33:11     - Unknown word (asyncweb)     -- await asyncweb.wait_all(_load_package
wasm/lib/Lib/whlimport.py:3:8       - Unknown word (asyncweb)   -- import asyncweb
wasm/lib/Lib/whlimport.py:53:12     - Unknown word (asyncweb)     -- deps = asyncweb.spawn(asyncweb.wait
wasm/lib/Lib/whlimport.py:53:27     - Unknown word (asyncweb)     -- deps = asyncweb.spawn(asyncweb.wait_all(_load_package
wasm/lib/Lib/whlimport.py:64:12     - Unknown word (microdistlib) -- pkg = _microdistlib.parse_requirement(pkg
wasm/lib/Lib/whlimport.py:9:9       - Unknown word (microdistlib) -- import _microdistlib
wasm/notebook/package.json:18:10     - Unknown word (lezer)      -- "lezer-loader": "^0.3.0",
wasm/notebook/package.json:34:21     - Unknown word (Liddle)     -- "author": "Ryan Liddle",
wasm/notebook/package.json:9:10      - Unknown word (katex)      -- "katex": "^0.12.0",
wasm/notebook/src/index.js:142:5     - Unknown word (pyvm)       -- let pyvm = null;
wasm/notebook/src/index.js:171:9     - Unknown word (pyvm)       -- if (pyvm) {
wasm/notebook/src/index.js:172:9     - Unknown word (pyvm)       -- pyvm.destroy();
wasm/notebook/src/index.js:173:9     - Unknown word (pyvm)       -- pyvm = null;
wasm/notebook/src/index.js:175:5     - Unknown word (pyvm)       -- pyvm = rp.vmStore.init('notebook
wasm/notebook/src/index.js:20:10     - Unknown word (iomd)       -- import { iomdParser } from './parse
wasm/notebook/src/index.js:230:22    - Unknown word (iomd)       -- let parsedCode = iomdParser(mainCode);
wasm/notebook/src/index.js:9:25      - Unknown word (stex)       -- import 'codemirror/mode/stex/stex';
wasm/notebook/src/index.js:9:30      - Unknown word (stex)       -- codemirror/mode/stex/stex';
wasm/notebook/src/parse.js:19:17     - Unknown word (iomd)       -- export function iomdParser(fullIomd) {
wasm/notebook/src/parse.js:19:32     - Unknown word (Iomd)       -- function iomdParser(fullIomd) {
wasm/notebook/src/parse.js:20:11     - Unknown word (iomd)       -- const iomdLines = fullIomd.split
wasm/notebook/src/parse.js:20:27     - Unknown word (Iomd)       -- const iomdLines = fullIomd.split('\n');
wasm/notebook/src/parse.js:51:29     - Unknown word (iomd)       -- (const [i, line] of iomdLines.entries()) {
wasm/notebook/src/parse.js:84:15     - Unknown word (iomd)       -- pushChunk(iomdLines.length);
wasm/notebook/src/process.js:20:21     - Unknown word (Katex)      -- // Render Math with Katex
wasm/notebook/src/process.js:23:12     - Unknown word (katex)      -- return katex.renderToString(math
wasm/notebook/src/process.js:28:20     - Unknown word (pyvm)       -- function runPython(pyvm, code, error) {
wasm/notebook/src/process.js:30:9      - Unknown word (pyvm)       -- pyvm.exec(code);
wasm/notebook/src/process.js:7:20      - Unknown word (katex)      -- import katex from 'katex';
wasm/notebook/src/process.js:7:8       - Unknown word (katex)      -- import katex from 'katex';
wasm/notebook/src/process.js:8:20      - Unknown word (katex)      -- import 'katex/dist/katex.min.css';
wasm/notebook/src/process.js:8:9       - Unknown word (katex)      -- import 'katex/dist/katex.min.css'
wasm/tests/conftest.py:92:5      - Unknown word (wdriver)    -- def wdriver(request):
wasm/tests/test_demo.py:19:15     - Unknown word (wdriver)    -- def test_demo(wdriver, script, output):
wasm/tests/test_demo.py:21:21     - Unknown word (wdriver)    -- script_output = wdriver.execute_script(script
wasm/tests/test_exec_mode.py:1:20      - Unknown word (wdriver)    -- def test_eval_mode(wdriver):
wasm/tests/test_exec_mode.py:2:12      - Unknown word (wdriver)    -- assert wdriver.execute_script("return
wasm/tests/test_exec_mode.py:5:20      - Unknown word (wdriver)    -- def test_exec_mode(wdriver):
wasm/tests/test_exec_mode.py:6:12      - Unknown word (wdriver)    -- assert wdriver.execute_script("return
wasm/tests/test_exec_mode.py:9:27      - Unknown word (wdriver)    -- test_exec_single_mode(wdriver):
wasm/tests/test_inject_module.py:1:30      - Unknown word (wdriver)    -- inject_module_basic(wdriver):
wasm/tests/test_inject_module.py:2:5       - Unknown word (wdriver)    -- wdriver.execute_script(
whats_left.py:290:1     - Unknown word (cpymods)            -- cpymods = {gen_modules()!r}
whats_left.py:308:1     - Unknown word (cpymods)            -- cpymods = {}
whats_left.py:337:9     - Unknown word (implementeds)       -- not_implementeds = {}
whats_left.py:345:17    - Unknown word (implementeds)       -- not_implementeds[name] = missing_methods
whats_left.py:348:16    - Unknown word (implementeds)       -- if not_implementeds:
whats_left.py:360:5     - Unknown word (rustpymods)         -- rustpymods = {mod: dir_of_mod_or
whats_left.py:371:18    - Unknown word (cpymod)             -- for modname, cpymod in cpymods.items():
whats_left.py:371:28    - Unknown word (cpymods)            -- for modname, cpymod in cpymods.items():
whats_left.py:372:21    - Unknown word (rustpymods)         -- rustpymod = rustpymods.get(modname)
whats_left.py:372:9     - Unknown word (rustpymod)          -- rustpymod = rustpymods.get(modname
whats_left.py:373:12    - Unknown word (rustpymod)          -- if rustpymod is None:
whats_left.py:375:25    - Unknown word (rustpymod)          -- elif isinstance(rustpymod, Exception):
whats_left.py:376:51    - Unknown word (rustpymod)          -- import"][modname] = rustpymod.__class__.__name__
whats_left.py:376:86    - Unknown word (rustpymod)          -- class__.__name__ + str(rustpymod)
whats_left.py:378:44    - Unknown word (cpymod)             -- mplemented_items = sorted(set(cpymod) & set(rustpymod))
whats_left.py:379:37    - Unknown word (cpymod)             -- missing_items = set(cpymod) - set(rustpymod)
whats_left.py:384:63    - Unknown word (cpymod)             -- rustpymod[item]["sig"], cpymod[item]["sig"])
whats_left.py:386:46    - Unknown word (cpymod)             -- rustpymod[item]["sig"] != cpymod[item]["sig"]
whats_left.py:404:33    - Unknown word (cpymods)            -- cpython_modules"] = cpymods
whats_left.py:405:17    - Unknown word (implementeds)       -- result["not_implementeds"] = not_implementeds
whats_left.py:405:38    - Unknown word (implementeds)       -- implementeds"] = not_implementeds
whats_left.py:460:23    - Unknown word (rustpy)             -- for i, (item, rustpy_value, cpython_value
whats_left.py:463:16    - Unknown word (rustpy)             -- if rustpy_value is None or rustpy
whats_left.py:463:40    - Unknown word (rustpy)             -- rustpy_value is None or rustpy_value.startswith("ValueError
whats_left.py:464:17    - Unknown word (rustpy)             -- rustpy_value = f" {rustpy_value
whats_left.py:464:36    - Unknown word (rustpy)             -- rustpy_value = f" {rustpy_value}"
whats_left.py:5:3       - Unknown word (cpymods)    -- # cpymods - a dictionary mapping
whats_left.py:73:18     - Unknown word (xxsubtype)  -- 'xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz
whats_left.py:73:31     - Unknown word (xxlimited)  -- xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz',
whats_left.py:73:45     - Unknown word (xxtestfuzz) -- xxsubtype', 'xxlimited', '_xxtestfuzz',
whats_left.py:73:6      - Unknown word (xxmodule)   -- 'xxmodule', 'xxsubtype', 'xxlimited
whats_left.py:74:22     - Unknown word (testcapi)   -- '_testbuffer', '_testcapi', '_testimportmultiple
whats_left.py:74:35     - Unknown word (testimportmultiple) -- testbuffer', '_testcapi', '_testimportmultiple', '_testinternalcapi
whats_left.py:74:58     - Unknown word (testinternalcapi)   -- testimportmultiple', '_testinternalcapi', '_testmultiphase'
whats_left.py:74:98     - Unknown word (testlimitedcapi)    -- _testmultiphase', '_testlimitedcapi'
