
Repository: RustPython/RustPython
Url: "https://github.com/RustPython/RustPython.git"
Args: ["**"]
Lines:
 CSpell: Files checked: 596, Issues found: 2689 in 305 files
 exit code: 1
./Cargo.toml:110:82    - Unknown word (termcolor)  -- features = ["atty", "termcolor"] }
./Cargo.toml:153:62    - Unknown word (redoxer)    -- to compile/check with redoxer
./Cargo.toml:16:44     - Unknown word (pylib)      -- derive", "jit", "vm", "pylib", "stdlib", "wasm/lib
./Cargo.toml:71:1      - Unknown word (rustyline)  -- rustyline = "11"
./Cargo.toml:76:1      - Unknown word (thiserror)  -- thiserror = "1.0"
./Cargo.toml:79:1      - Unknown word (widestring) -- widestring = "0.5.1"
./Cargo.toml:86:49     - Unknown word (flamescope) -- flame-it", "flame", "flamescope"]
./DEVELOPMENT.md:110:5     - Unknown word (speedscope) -- The speedscope json format (default
./DEVELOPMENT.md:128:26    - Unknown word (subcrates)  -- src`: using the other subcrates to bring rustpython
./DEVELOPMENT.md:24:20     - Unknown word (rustup)     -- - If you have `rustup` on your system, enter
./DEVELOPMENT.md:33:72     - Unknown word (automake)   -- make sure autoconf, automake,
./DEVELOPMENT.md:43:49     - Unknown word (codestyle)  -- com/rust-lang/rustfmt) codestyle. Please format your
./Dockerfile.bin:13:5      - Unknown word (RUSTPYTHONPATH) -- ENV RUSTPYTHONPATH /usr/lib/rustpython
./Dockerfile.bin:3:1       - Unknown word (WORKDIR)    -- WORKDIR /rustpython
./LICENSE-logo:139:15    - Unknown word (sublicensable)   -- non-sublicensable, non-exclusive, irrevocable
./LICENSE-logo:205:34    - Unknown word (waivable)        -- under any voluntary or waivable statutory or compulsory
./LICENSE-logo:36:7      - Unknown word (creativecommons) -- wiki.creativecommons.org/Considerations_for
./README.md:100:8     - Unknown word (wasmer)     -- Run by wasmer
./README.md:106:8     - Unknown word (wapm)       -- Run by wapm
./README.md:16:4      - Unknown word (WAPM)       -- [![WAPM package](https://wapm
./README.md:171:4     - Unknown word (FOSDEM)     -- - [FOSDEM 2019](https://www.youtube
./README.md:179:4     - Unknown word (Greptime)   -- - [GreptimeDB](https://github.com
./README.md:180:4     - Unknown word (pyckitup)   -- - [pyckitup](https://github.com
./README.md:246:16    - Unknown word (rspython)      -- [windelbouwman/rspython](https://github.com
./README.md:246:2     - Unknown word (windelbouwman) -- [windelbouwman/rspython](https://github
./README.md:247:2     - Unknown word (shinglyu)      -- [shinglyu/RustPython](https:/
./README.md:9:4       - Unknown word (codecov)    -- [![codecov](https://codecov.io
./benches/README.md:58:1      - Unknown word (rustflags)  -- rustflags = [
./benches/benchmarks/fannkuch.py:14:5      - Unknown word (fannkuch)   -- def fannkuch(n):
./benches/benchmarks/fannkuch.py:5:16      - Unknown word (Sokolov)    -- Contributed by Sokolov Yura, modified by Tupteq
./benches/benchmarks/fannkuch.py:5:24      - Unknown word (Yura)       -- Contributed by Sokolov Yura, modified by Tupteq
./benches/benchmarks/fannkuch.py:5:42      - Unknown word (Tupteq)     -- Sokolov Yura, modified by Tupteq.
./benches/benchmarks/fannkuch.py:8:10      - Unknown word (pyperf)     -- # import pyperf
./benches/benchmarks/nbody.py:5:23      - Unknown word (Fredrik)    -- modified by Tupteq, Fredrik Johansson, and Daniel
./benches/benchmarks/nbody.py:5:31      - Unknown word (Johansson)  -- modified by Tupteq, Fredrik Johansson, and Daniel Nanz
./benches/benchmarks/nbody.py:5:53      - Unknown word (Nanz)       -- Johansson, and Daniel Nanz
./benches/benchmarks/pystone.py:128:5     - Unknown word (benchtime)  -- benchtime = clock() - starttime
./benches/benchmarks/pystone.py:130:17    - Unknown word (Benchtime)  -- loopsPerBenchtime = 0.0
./benches/benchmarks/pystone.py:19:51     - Unknown word (Arndt)      -- version 1.1.1 by Chris Arndt:
./benches/benchmarks/pystone.py:52:40     - Unknown word (Discr)      -- self, PtrComp = None, Discr = 0, EnumComp = 0,
./benches/benchmarks/pystone.py:5:2       - Unknown word (PYSTONE)    -- "PYSTONE" Benchmark Program
./benches/benchmarks/pystone.py:7:57      - Unknown word (Pystone)    -- corresponds to C/1.1 plus 2 Pystone fixes)
./benches/benchmarks/pystone.py:90:5      - Unknown word (nulltime)   -- nulltime = clock() - starttime
./benches/benchmarks/pystone.py:98:26     - Unknown word (DHRYSTONE)  -- PtrGlb.StringComp = "DHRYSTONE PROGRAM, SOME STRING
./benches/benchmarks/pystone.py:9:29      - Unknown word (Weicker)    -- Reinhold P. Weicker, CACM Vol 27, No 1
./benches/benchmarks/pystone.py:9:39      - Unknown word (CACM)       -- Reinhold P. Weicker,  CACM Vol 27, No 10, 10/8
./benches/execution.rs:24:10     - Unknown word (rustpy)     -- fn bench_rustpy_code(b: &mut Bencher
./benches/execution.rs:95:18     - Unknown word (pystone)    -- pub fn benchmark_pystone(group: &mut BenchmarkGroup
./benches/microbenchmarks.rs:173:40    - Unknown word (microbenchmarks) -- c.benchmark_group("microbenchmarks");
./benches/microbenchmarks.rs:35:35     - Unknown word (microbenchmark) -- panic!("Error running microbenchmark")
./benches/test_benchmarks.py:19:18     - Unknown word (nbody)      -- ['benchmarks/nbody.py'],
./common/Cargo.toml:30:1      - Unknown word (siphasher)  -- siphasher = "0.3"
./common/src/boxvec.rs:1:8       - Unknown word (unresizable) -- //! An unresizable vector backed by a
./common/src/boxvec.rs:264:23    - Unknown word (nonoverlapping) -- ptr::copy_nonoverlapping(other.as_ptr(), dst
./common/src/boxvec.rs:582:5     - Unknown word (Rawptr)         -- /// Rawptr add but uses arithmetic
./common/src/boxvec.rs:703:7     - Unknown word (CAPERROR)       -- const CAPERROR: &str = "insufficient
./common/src/float_ops.rs:5:8       - Unknown word (ufrexp)     -- pub fn ufrexp(value: f64) -> (f64
./common/src/hash.rs:21:25     - Unknown word (siphash)    -- const ALGO: &str = "siphash24";
./common/src/hash.rs:67:58     - Unknown word (hashf)      -- E>(&self, iter: I, hashf: F) -> Result<PyHash
./common/src/lib.rs:9:9       - Unknown word (boxvec)     -- pub mod boxvec;
./common/src/linked_list.rs:97:45     - Unknown word (noalias)    -- compiler to put the `noalias` attribute on mutable
./common/src/lock.rs:18:28     - Unknown word (unsync)     -- pub use once_cell::unsync::{Lazy, OnceCell};
./common/src/lock/cell_lock.rs:131:23    - Unknown word (upgradably) -- deadlock("upgradably+sharedly ", "RwLock
./common/src/lock/cell_lock.rs:72:23     - Unknown word (sharedly)   -- deadlock("sharedly ", "RwLock")
./common/src/os.rs:26:17     - Unknown word (osstr)      -- pub fn bytes_as_osstr(b: &[u8]) -> Result
./common/src/rc.rs:6:28      - Unknown word (newtypes)   -- type aliases instead of newtypes because you can't do
./common/src/static_cell.rs:16:28     - Unknown word (localkey)   -- pub const fn _from_localkey(inner: &'static LocalKey
./common/src/static_cell.rs:79:28     - Unknown word (oncecell)   -- pub const fn _from_oncecell(inner: OnceCell<T>)
./common/src/str.rs:202:52    - Unknown word (unicodes)   -- compatible, escaping unicodes into escape
./common/src/str.rs:46:43     - Unknown word (uncomputed) -- MAX as a sentinel for "uncomputed"
./compiler/codegen/src/snapshots/rustpython_compiler_core__compile__tests__nested_double_async_with.snap:3:184     - Unknown word (woohoo)     -- async with woohoo():\n
./derive-impl/src/lib.rs:21:5      - Unknown word (pytraverse) -- mod pytraverse;
./examples/atexit_example.py:4:5       - Unknown word (myexit)     -- def myexit():
./examples/parse_folder.rs:68:35     - Unknown word (Erreur)     -- Err(y) => error!("Erreur in file {:?} {:?}",
./extra_tests/custom_text_test_runner.py:220:39    - Unknown word (occured)    -- tests or some failure occured execution time may not
./extra_tests/custom_text_test_runner.py:7:22      - Unknown word (Abtin)      -- Copyright (c) 2015 Abtin Gramian
./extra_tests/custom_text_test_runner.py:7:28      - Unknown word (Gramian)    -- Copyright (c) 2015 Abtin Gramian
./extra_tests/custom_text_test_runner.py:88:36     - Unknown word (getargspec) -- [p for p in inspect.getargspec(func_ref).args if p
./extra_tests/jsontests.py:27:1      - Unknown word (resultsfile) -- resultsfile = os.path.join(os.path
./extra_tests/jsontests.py:3:11      - Unknown word (libregrtest) -- from test.libregrtest.runtest import findtests
./extra_tests/jsontests.py:3:38      - Unknown word (findtests)   -- libregrtest.runtest import findtests
./extra_tests/jsontests.py:7:1       - Unknown word (testnames)   -- testnames = findtests()
./extra_tests/snippets/builtin_all.py:1:6       - Unknown word (testutils)  -- from testutils import assert_raises
./extra_tests/snippets/builtin_bool.py:33:7      - Unknown word (Falsey)     -- class Falsey:
./extra_tests/snippets/builtin_bool.py:48:3      - Unknown word (Bools)      -- # Bools are also ints.
./extra_tests/snippets/builtin_bytearray.py:100:30    - Unknown word (efghij)     -- -6:] == bytearray(b"efghij")
./extra_tests/snippets/builtin_bytearray.py:101:32    - Unknown word (bdfh)       -- 8:2] == bytearray(b"bdfh")
./extra_tests/snippets/builtin_bytearray.py:102:33    - Unknown word (igec)       -- :-2] == bytearray(b"igec")
./extra_tests/snippets/builtin_bytearray.py:163:25    - Unknown word (hhjjk)      -- bytearray.fromhex(b"hhjjk")
./extra_tests/snippets/builtin_bytearray.py:165:21    - Unknown word (koki)       -- assert [bytearray(b"koki").center(i, b"|") for
./extra_tests/snippets/builtin_bytearray.py:17:33     - Unknown word (jilj)       -- bytearray("bla", encoding=b"jilj")
./extra_tests/snippets/builtin_bytearray.py:192:58    - Unknown word (xkokx)      -- bytearray(b"x")) == b"xkokx"
./extra_tests/snippets/builtin_bytearray.py:224:57    - Unknown word (kokxx)      -- bytearray(b"x")) == b"kokxx"
./extra_tests/snippets/builtin_bytearray.py:256:57    - Unknown word (xxkok)      -- bytearray(b"x")) == b"xxkok"
./extra_tests/snippets/builtin_bytearray.py:25:20     - Unknown word (omkmok)     -- assert bytearray(b"omkmok\Xaa") == bytearray(
./extra_tests/snippets/builtin_bytearray.py:261:20    - Unknown word (azeazerazeazopia) -- assert bytearray(b"azeazerazeazopia").count(b"aze") ==
./extra_tests/snippets/builtin_bytearray.py:282:28    - Unknown word (kmoomk)           -- jiljl", bytearray(b"kmoomk"), memoryview(b"aaaa
./extra_tests/snippets/builtin_bytearray.py:282:8     - Unknown word (jiljl)            -- (b"jiljl", bytearray(b"kmoomk
./extra_tests/snippets/builtin_bytearray.py:283:18    - Unknown word (jiljlkmoomkaaaa)  -- ) == bytearray(b"jiljlkmoomkaaaa")
./extra_tests/snippets/builtin_bytearray.py:288:22    - Unknown word (abcxyz)           -- ) == bytearray(b"123abcxyz")
./extra_tests/snippets/builtin_bytearray.py:315:32    - Unknown word (cdaaaaa)          -- bytearray(b"abcd").index(b"cdaaaaa")
./extra_tests/snippets/builtin_bytearray.py:331:20    - Unknown word (abcdabcda)        -- assert bytearray(b"abcdabcda").find(b"a") == 0
./extra_tests/snippets/builtin_bytearray.py:349:20    - Unknown word (hjhtuyjyujuyj)    -- assert bytearray(b"hjhtuyjyujuyj").translate(
./extra_tests/snippets/builtin_bytearray.py:351:18    - Unknown word (btuybyubuyb)      -- ) == bytearray(b"btuybyubuyb")
./extra_tests/snippets/builtin_bytearray.py:354:18    - Unknown word (abatuybyubuyb)    -- ) == bytearray(b"abatuybyubuyb")
./extra_tests/snippets/builtin_bytearray.py:358:20    - Unknown word (hjhtuyfjtyhuhjuyj) -- assert bytearray(b"hjhtuyfjtyhuhjuyj").translate(None, bytearray
./extra_tests/snippets/builtin_bytearray.py:359:7     - Unknown word (juyfjyujuyj)       -- b"juyfjyujuyj"
./extra_tests/snippets/builtin_bytearray.py:368:46    - Unknown word (cmowz)             -- example.com").strip(b"cmowz.") == bytearray(b"example
./extra_tests/snippets/builtin_bytearray.py:372:64    - Unknown word (mississ)           -- ipz") == bytearray(b"mississ")
./extra_tests/snippets/builtin_bytearray.py:54:23     - Unknown word (abcdé)      -- assert len(bytearray("abcdé", "utf8")) == 6
./extra_tests/snippets/builtin_bytearray.py:588:55    - Unknown word (keepends)          -- rkl\r\n").splitlines(keepends=True) == [
./extra_tests/snippets/builtin_bytearray.py:636:17    - Unknown word (appen)             -- a = bytearray(b"appen")
./extra_tests/snippets/builtin_bytearray.py:656:29    - Unknown word (abcdabcdabcd)      -- a * 3 == bytearray(b'abcdabcdabcd')
./extra_tests/snippets/builtin_bytearray.py:686:25    - Unknown word (whello)            -- assert a == bytearray(b"whello, world"), a
./extra_tests/snippets/builtin_bytearray.py:689:33    - Unknown word (worlwd)            -- bytearray(b"whello, worlwd"), a
./extra_tests/snippets/builtin_bytearray.py:692:25    - Unknown word (owhello)           -- assert a == bytearray(b"owhello, worlwd"), a
./extra_tests/snippets/builtin_bytearray.py:695:34    - Unknown word (worlwdo)           -- bytearray(b"owhello, worlwdo"), a
./extra_tests/snippets/builtin_bytearray.py:699:17    - Unknown word (abcdabcd)          -- a = bytearray(b'abcdabcd')
./extra_tests/snippets/builtin_bytearray.py:702:25    - Unknown word (abdabcd)           -- assert a == bytearray(b'abdabcd')
./extra_tests/snippets/builtin_bytearray.py:708:25    - Unknown word (dlrow)             -- assert a == bytearray(b'dlrow ,olleh')
./extra_tests/snippets/builtin_bytearray.py:708:32    - Unknown word (olleh)             -- bytearray(b'dlrow ,olleh')
./extra_tests/snippets/builtin_bytearray.py:726:24    - Unknown word (bpython)           -- assert bytearray('rust%bpython%b', 'utf-8') % (b'
./extra_tests/snippets/builtin_bytearray.py:72:33     - Unknown word (unashable)  -- bytearray(b"abcd")) # unashable
./extra_tests/snippets/builtin_bytearray.py:737:18    - Unknown word (xffab)             -- a = bytearray(b'\xffab\x80\0\0\370\0\0')
./extra_tests/snippets/builtin_bytearray.py:738:134   - Unknown word (Vlatin)            -- \\u0000\\u0000\np2\nVlatin1\np3\ntp4\nRp5\ntp6
./extra_tests/snippets/builtin_bytearray.py:739:109   - Unknown word (xbfab)             -- x0c\x00\x00\x00\xc3\xbfab\xc2\x80\x00\x00\xc3
./extra_tests/snippets/builtin_bytearray.py:741:40    - Unknown word (cbuiltins)         -- dumps(a, 3) == b'\x80\x03cbuiltins\nbytearray\nq\x00C\t
./extra_tests/snippets/builtin_bytearray.py:79:29     - Unknown word (abcdab)     -- a + b == bytearray(b"abcdab")
./extra_tests/snippets/builtin_bytearray.py:95:17     - Unknown word (abcdefghij) -- d = bytearray(b"abcdefghij")
./extra_tests/snippets/builtin_bytearray.py:99:30     - Unknown word (cdef)       -- 2:6] == bytearray(b"cdef")
./extra_tests/snippets/builtin_bytes.py:631:18    - Unknown word (bytess)     -- return b"bytess"
./extra_tests/snippets/builtin_dict_union.py:4:10      - Unknown word (dunion)     -- def test_dunion_ior0():
./extra_tests/snippets/builtin_exceptions.py:105:77    - Unknown word (excs)       -- ok, will print two excs
./extra_tests/snippets/builtin_exceptions.py:272:48    - Unknown word (winerror)   -- startswith("win") or w.winerror == None
./extra_tests/snippets/builtin_exceptions.py:95:9      - Unknown word (excepthook) -- sys.excepthook(type(exc), exc, exc
./extra_tests/snippets/builtin_float.py:267:6     - Unknown word (infi)       -- "infi", # misspelt infinities
./extra_tests/snippets/builtin_float.py:268:7     - Unknown word (Infinit)    -- "-Infinit",
./extra_tests/snippets/builtin_float.py:278:6     - Unknown word (nfinity)    -- "nfinity",
./extra_tests/snippets/builtin_float.py:279:6     - Unknown word (inity)      -- "inity",
./extra_tests/snippets/builtin_float.py:280:6     - Unknown word (iinity)     -- "iinity",
./extra_tests/snippets/builtin_float.py:281:7     - Unknown word (xnan)       -- "0xnan",
./extra_tests/snippets/builtin_float.py:393:21    - Unknown word (xbep)       -- identical(fromHex("0xbep0"), 190.0)
./extra_tests/snippets/builtin_int.py:365:1     - Unknown word (subint)     -- subint = int.__new__(SubInt
./extra_tests/snippets/builtin_list.py:253:13    - Unknown word (refrences)  -- # make sure refrences are assigned correctly
./extra_tests/snippets/builtin_list.py:639:26    - Unknown word (daedlock)   -- Test for list entering daedlock or not (https://github
./extra_tests/snippets/builtin_memoryview.py:39:14     - Unknown word (tobytes)    -- assert m.tobytes() == b'123456789'
./extra_tests/snippets/builtin_object.py:6:1       - Unknown word (myobj)      -- myobj = MyObject()
./extra_tests/snippets/builtin_pow.py:144:9     - Unknown word (fiveto)     -- fiveto = float(5 ** n)
./extra_tests/snippets/builtin_pow.py:146:38    - Unknown word (thereafer)  -- mantissa bits, though, and thereafer fiveto will be even
./extra_tests/snippets/builtin_pow.py:29:5      - Unknown word (powtest)    -- def powtest(type):
./extra_tests/snippets/builtin_pow.py:46:13     - Unknown word (othertype)  -- for othertype in (int,):
./extra_tests/snippets/builtin_pow.py:64:5      - Unknown word (asseq)      -- asseq = assert_equal
./extra_tests/snippets/builtin_pow.py:85:10     - Unknown word (powint)     -- def test_powint():
./extra_tests/snippets/builtin_pow.py:89:10     - Unknown word (powfloat)   -- def test_powfloat():
./extra_tests/snippets/builtin_property.py:4:7       - Unknown word (Fubar)      -- class Fubar:
./extra_tests/snippets/builtin_set.py:384:27    - Unknown word (aruguments) -- TODO: Assert that empty aruguments raises exception.
./extra_tests/snippets/builtin_str.py:174:153   - Unknown word (hoho)       -- 'Hallo', 'HELLO', 'hoho', 'haha', 'another'
./extra_tests/snippets/builtin_str.py:174:161   - Unknown word (haha)       -- , 'HELLO', 'hoho', 'haha', 'another', 'yetanother
./extra_tests/snippets/builtin_str.py:174:42    - Unknown word (dhoho)      -- x0cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u
./extra_tests/snippets/builtin_str.py:174:50    - Unknown word (ehaha)      -- cHallo\x1cHELLO\x1dhoho\x1ehaha\x85another\u2028yetanother
./extra_tests/snippets/builtin_str.py:174:72    - Unknown word (yetanother) -- ehaha\x85another\u2028yetanother\u2029last\r\n.'.splitlines
./extra_tests/snippets/builtin_str.py:340:7     - Unknown word (isisprintable) -- # str.isisprintable
./extra_tests/snippets/builtin_str.py:37:21     - Unknown word (xyxyxy)     -- assert "xy" * 3 == "xyxyxy"
./extra_tests/snippets/builtin_str.py:645:10    - Unknown word (foobarfoo)     -- s = 'foobarfoo'
./extra_tests/snippets/builtin_str.py:656:28    - Unknown word (afoo)          -- assert s.removeprefix('afoo') == s_ref
./extra_tests/snippets/builtin_str.py:701:28    - Unknown word (fooa)          -- assert s.removesuffix('fooa') == s_ref
./extra_tests/snippets/builtin_str_encode.py:11:42     - Unknown word (estás)     -- UnicodeEncodeError, "¿como estás?".encode, "ascii")
./extra_tests/snippets/builtin_str_encode.py:19:25     - Unknown word (𝕐𝕥)       -- round_trip("☢🐣 ᖇ𝓤𝕊тⓟ𝕐𝕥卄σ𝔫 ♬👣")
./extra_tests/snippets/builtin_str_encode.py:20:19     - Unknown word (ק𝔂t)       -- round_trip("💀👌 ק𝔂tℍⓞ𝓷 ３  🔥👤")
./extra_tests/snippets/builtin_str_unicode.py:26:40     - Unknown word (abcij)      -- encode("idna") == b'xn--abcij-zb5f'
./extra_tests/snippets/builtin_str_unicode.py:31:48     - Unknown word (pythn)      -- encode("idna") == b"xn--pythn-mua.org"
./extra_tests/snippets/builtin_str_unicode.py:31:9      - Unknown word (pyth)       -- assert "pyth\xf6n.org".encode("idna
./extra_tests/snippets/builtin_str_unicode_slice.py:35:19     - Unknown word (רֵאשִ)      -- hebrew_text = "בְּרֵאשִׁית, בָּרָא אֱלֹהִים
./extra_tests/snippets/builtin_str_unicode_slice.py:35:36     - Unknown word (אֱלֹהִים)   -- בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, ו
./extra_tests/snippets/builtin_str_unicode_slice.py:35:50     - Unknown word (הַשָּׁמַיִם) -- ָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
./extra_tests/snippets/builtin_str_unicode_slice.py:35:63     - Unknown word (וְאֵת)       -- ם, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
./extra_tests/snippets/builtin_str_unicode_slice.py:35:69     - Unknown word (הָאָרֶץ)     -- הַשָּׁמַיִם, וְאֵת הָאָרֶץ"
./extra_tests/snippets/builtin_str_unicode_slice.py:47:32     - Unknown word (מַיִם)       -- hebrew_text[-20:50] == 'מַיִם, וְא'
./extra_tests/snippets/builtin_str_unicode_slice.py:56:34     - Unknown word (אםהֱאּ)      -- hebrew_text[30:10:-3] == 'אםהֱאּ '
./extra_tests/snippets/builtin_str_unicode_slice.py:58:37     - Unknown word (םיִהֹלֱא)    -- text[30:10:-1] == 'א ,םיִהֹלֱא אָרָּב ,'
./extra_tests/snippets/builtin_str_unicode_slice.py:58:46     - Unknown word (אָרּ)        -- -1] == 'א ,םיִהֹלֱא אָרָּב ,'
./extra_tests/snippets/builtin_super.py:4:26      - Unknown word (thisclass)  -- assert test_super_list.__thisclass__ == list
./extra_tests/snippets/builtin_type.py:269:9     - Unknown word (clsmethod)  -- def clsmethod(cls):
./extra_tests/snippets/builtin_type.py:273:9     - Unknown word (stmethod)   -- def stmethod():
./extra_tests/snippets/builtin_type.py:331:3     - Unknown word (Regresesion) -- # Regresesion to
./extra_tests/snippets/example_fizzbuzz.py:1:5       - Unknown word (fizzbuzz)   -- def fizzbuzz(n):
./extra_tests/snippets/example_interactive.py:15:14     - Unknown word (argcount)   -- assert c2.co_argcount == 2
./extra_tests/snippets/example_interactive.py:22:14     - Unknown word (firstlineno) -- assert c2.co_firstlineno == 5, str(c2.co_firstlineno
./extra_tests/snippets/example_interactive.py:23:53     - Unknown word (NEWLOCALS)   -- int) # 'OPTIMIZED, NEWLOCALS, NOFREE'
./extra_tests/snippets/example_interactive.py:23:64     - Unknown word (NOFREE)      -- OPTIMIZED, NEWLOCALS, NOFREE'
./extra_tests/snippets/example_interactive.py:25:14     - Unknown word (kwonlyargcount) -- assert c2.co_kwonlyargcount == 1, (c2.co_kwonlyargcount
./extra_tests/snippets/example_interactive.py:26:16     - Unknown word (lnotab)         -- # assert c2.co_lnotab == 0, c2.co_lnotab
./extra_tests/snippets/forbidden_instantiation.py:18:1      - Unknown word (reviter)    -- reviter_types = [list, dict
./extra_tests/snippets/intro/3.1.2.5.py:1:9       - Unknown word (unununium)  -- assert 'unununium' == 3 * 'un' + 'ium
./extra_tests/snippets/intro/3.1.2.6.py:1:26      - Unknown word (thon)       -- assert 'Python' == 'Py' 'thon'
./extra_tests/snippets/protocol_index_bad.py:15:9      - Unknown word (setslice)   -- def run_setslice():
./extra_tests/snippets/protocol_index_bad.py:23:9      - Unknown word (delslice)   -- def run_delslice():
./extra_tests/snippets/stdlib_array.py:104:29    - Unknown word (enviroment) -- as 2 bytes character enviroment with CPython is failing
./extra_tests/snippets/stdlib_array.py:116:3     - Unknown word (teset)      -- # teset array.__contains__
./extra_tests/snippets/stdlib_binascii.py:18:3      - Unknown word (unhexlify)  -- # unhexlify tests
./extra_tests/snippets/stdlib_binascii.py:47:33     - Unknown word (Ghvbg)      -- equal(dec_b64(b"UnVzdFB5dGhvbg==\n"), b"RustPython
./extra_tests/snippets/stdlib_binascii.py:5:3       - Unknown word (hexlify)    -- # hexlify tests
./extra_tests/snippets/stdlib_collections.py:7:3       - Unknown word (appendleft) -- d.appendleft(3)
./extra_tests/snippets/stdlib_collections_deque.py:7:5       - Unknown word (klass)      -- klass = type(iter(deque()
./extra_tests/snippets/stdlib_datetime.py:1043:13   - Unknown word (todayagain) -- todayagain = self.theclass.fromtimestamp
./extra_tests/snippets/stdlib_datetime.py:1158:20   - Unknown word (excercise)  -- #at least, excercise them to make sure that
./extra_tests/snippets/stdlib_datetime.py:1212:9    - Unknown word (justasbig)  -- justasbig = timedelta(0, 0, n
./extra_tests/snippets/stdlib_datetime.py:134:3     - Unknown word (unsupport)  -- # unsupport format in strptime returns
./extra_tests/snippets/stdlib_datetime.py:1368:13   - Unknown word (newargs)    -- newargs = args[:]
./extra_tests/snippets/stdlib_datetime.py:1391:17   - Unknown word (newmeth)    -- def newmeth(self, start):
./extra_tests/snippets/stdlib_datetime.py:152:14    - Unknown word (ACDT)       -- self.ACDT = timezone(timedelta
./extra_tests/snippets/stdlib_datetime.py:166:13    - Unknown word (tzrep)      -- tzrep = repr(tz)
./extra_tests/snippets/stdlib_datetime.py:2015:9    - Unknown word (alsobog)    -- alsobog = AlsoBogus()
./extra_tests/snippets/stdlib_datetime.py:229:13    - Unknown word (utctime)    -- utctime = self.DT.replace(tzinfo
./extra_tests/snippets/stdlib_datetime.py:2356:23   - Unknown word (atribute)   -- theclass as a class atribute, and theclass(1, 1,
./extra_tests/snippets/stdlib_datetime.py:2413:17   - Unknown word (aofs)       -- aofs = abs(offset)
./extra_tests/snippets/stdlib_datetime.py:2473:55   - Unknown word (comparands) -- gets ignored if the comparands have
./extra_tests/snippets/stdlib_datetime.py:2495:50   - Unknown word (uctoffset)  -- re different members, uctoffset is not ignored.
./extra_tests/snippets/stdlib_datetime.py:2496:59   - Unknown word (depedent)   -- actually have an operand-depedent offset,
./extra_tests/snippets/stdlib_datetime.py:257:17    - Unknown word (pickler)    -- for pickler, unpickler, proto in
./extra_tests/snippets/stdlib_datetime.py:257:26    - Unknown word (unpickler)  -- for pickler, unpickler, proto in pickle_choices
./extra_tests/snippets/stdlib_datetime.py:2605:15   - Unknown word (Badtzname)  -- class Badtzname(tzinfo):
./extra_tests/snippets/stdlib_datetime.py:27:1      - Unknown word (OTHERSTUFF) -- OTHERSTUFF = (10, 34.5, "abc",
./extra_tests/snippets/stdlib_datetime.py:2805:17   - Unknown word (afer)       -- # Equal afer adjustment.
./extra_tests/snippets/stdlib_datetime.py:289:31    - Unknown word (theclass)   -- Subclasses must define 'theclass', and theclass(1, 1
./extra_tests/snippets/stdlib_datetime.py:2938:9    - Unknown word (timeaware)  -- timeaware = now.time().replace
./extra_tests/snippets/stdlib_datetime.py:2939:9    - Unknown word (nowaware)   -- nowaware = self.theclass.combine
./extra_tests/snippets/stdlib_datetime.py:2958:9    - Unknown word (nowawareplus) -- nowawareplus = nowaware + delta
./extra_tests/snippets/stdlib_datetime.py:2973:59   - Unknown word (randomtimezone) -- randrange(-1439, 1440), "randomtimezone")
./extra_tests/snippets/stdlib_datetime.py:3022:13   - Unknown word (weirdtz)        -- for weirdtz in [FixedOffset(timedelta
./extra_tests/snippets/stdlib_datetime.py:3061:9    - Unknown word (utcdatetime)    -- utcdatetime = datetime.utcfromtimestamp
./extra_tests/snippets/stdlib_datetime.py:3098:32   - Unknown word (dstvalue)       -- def __init__(self, dstvalue):
./extra_tests/snippets/stdlib_datetime.py:3144:15   - Unknown word (UOFS)           -- class UOFS(DST):
./extra_tests/snippets/stdlib_datetime.py:3145:32   - Unknown word (uofs)           -- def __init__(self, uofs, dofs=None):
./extra_tests/snippets/stdlib_datetime.py:3173:15   - Unknown word (NOFS)           -- class NOFS(DST):
./extra_tests/snippets/stdlib_datetime.py:3181:15   - Unknown word (BOFS)           -- class BOFS(DST):
./extra_tests/snippets/stdlib_datetime.py:3221:17   - Unknown word (timestr)        -- timestr = '04:05:59' + (us and
./extra_tests/snippets/stdlib_datetime.py:3222:17   - Unknown word (ofsstr)         -- ofsstr = ofs is not None and
./extra_tests/snippets/stdlib_datetime.py:3223:17   - Unknown word (tailstr)        -- tailstr = timestr + ofsstr
./extra_tests/snippets/stdlib_datetime.py:3272:9    - Unknown word (fnone)          -- fnone = FixedOffset(None,
./extra_tests/snippets/stdlib_datetime.py:3342:53   - Unknown word (utcoffsets)     -- members are distinct, utcoffsets aren't
./extra_tests/snippets/stdlib_datetime.py:3392:23   - Unknown word (datetimetz)     -- def test_subclass_datetimetz(self):
./extra_tests/snippets/stdlib_datetime.py:3431:1    - Unknown word (DSTSTART)       -- DSTSTART = datetime(1, 4, 1,
./extra_tests/snippets/stdlib_datetime.py:3436:1    - Unknown word (DSTEND)         -- DSTEND = datetime(1, 10, 2
./extra_tests/snippets/stdlib_datetime.py:3440:31   - Unknown word (reprname)       -- init__(self, hours, reprname, stdname, dstname):
./extra_tests/snippets/stdlib_datetime.py:3440:50   - Unknown word (dstname)        -- reprname, stdname, dstname):
./extra_tests/snippets/stdlib_datetime.py:3441:14   - Unknown word (stdoffset)      -- self.stdoffset = timedelta(hours=hours
./extra_tests/snippets/stdlib_datetime.py:3491:5    - Unknown word (dston)          -- dston = datetime(2002, 4,
./extra_tests/snippets/stdlib_datetime.py:3492:5    - Unknown word (dstoff)         -- dstoff = datetime(2002, 10
./extra_tests/snippets/stdlib_datetime.py:3497:9    - Unknown word (checkinside)    -- def checkinside(self, dt, tz, utc, dston
./extra_tests/snippets/stdlib_datetime.py:3503:9    - Unknown word (asutc)          -- asutc = dt.astimezone(utc
./extra_tests/snippets/stdlib_datetime.py:3536:9    - Unknown word (nexthour)       -- nexthour_utc = asutc + HOUR
./extra_tests/snippets/stdlib_datetime.py:3549:9    - Unknown word (checkoutside)   -- def checkoutside(self, dt, tz, utc):
./extra_tests/snippets/stdlib_datetime.py:3583:46   - Unknown word (endcases)       -- name of this test, the endcases are excruciating.
./extra_tests/snippets/stdlib_datetime.py:3608:9    - Unknown word (fourback)       -- fourback = self.dston - timedelta
./extra_tests/snippets/stdlib_datetime.py:3609:9    - Unknown word (ninewest)       -- ninewest = FixedOffset(-9*60
./extra_tests/snippets/stdlib_datetime.py:3624:9    - Unknown word (sixutc)         -- sixutc = self.dston.replace
./extra_tests/snippets/stdlib_datetime.py:3646:17   - Unknown word (asutcbase)      -- asutcbase = asutc.replace(tzinfo
./extra_tests/snippets/stdlib_datetime.py:3647:21   - Unknown word (tzhour)         -- for tzhour in (0, 1, 1, 2):
./extra_tests/snippets/stdlib_datetime.py:3648:21   - Unknown word (expectedbase)   -- expectedbase = self.dstoff.replace
./extra_tests/snippets/stdlib_datetime.py:3652:25   - Unknown word (astz)           -- astz = asutc.astimezone(tz
./extra_tests/snippets/stdlib_datetime.py:3698:62   - Unknown word (FEDT)           -- FEastern", "FEST", "FEDT")
./extra_tests/snippets/stdlib_datetime.py:3706:9    - Unknown word (fstart)         -- fstart = start.replace(tzinfo
./extra_tests/snippets/stdlib_datetime.py:3768:3    - Unknown word (Neverthelss)    -- # Neverthelss, comparison should work
./extra_tests/snippets/stdlib_datetime.py:726:9     - Unknown word (zerotd)     -- zerotd = timedelta(0)
./extra_tests/snippets/stdlib_datetime.py:73:38     - Unknown word (dstoffset)  -- self, offset, name, dstoffset=42):
./extra_tests/snippets/stdlib_datetime.py:841:13    - Unknown word (fromord)    -- fromord = self.theclass.fromordinal
./extra_tests/snippets/stdlib_datetime.py:870:24    - Unknown word (maxday)     -- for month, maxday in zip(range(1, 13)
./extra_tests/snippets/stdlib_datetime.py:882:9     - Unknown word (aord)       -- aord = a.toordinal()
./extra_tests/snippets/stdlib_datetime.py:90:7      - Unknown word (Picklable)  -- class PicklableFixedOffset(FixedOffset
./extra_tests/snippets/stdlib_hashlib.py:34:30     - Unknown word (fubar)      -- hashlib.new("blake2s", b"fubar")
./extra_tests/snippets/stdlib_imghdr.py:15:21     - Unknown word (rast)       -- ('python.ras', 'rast'),
./extra_tests/snippets/stdlib_imghdr.py:23:57     - Unknown word (imghdrdata) -- dirname(__file__), 'imghdrdata')
./extra_tests/snippets/stdlib_io.py:31:11     - Unknown word (closefd)    -- assert fi.closefd
./extra_tests/snippets/stdlib_io.py:38:2      - Unknown word (nres)       -- nres = fio.read(1)
./extra_tests/snippets/stdlib_io_bytesio.py:49:37     - Unknown word (accpets)    -- that the write method accpets bytearray
./extra_tests/snippets/stdlib_itertools.py:185:5     - Unknown word (underten)   -- def underten(x):
./extra_tests/snippets/stdlib_itertools.py:230:171   - Unknown word (nbtp)       -- naI8\natp4\nRp5\nI0\nbtp6\nRp7\nI0\nb.'
./extra_tests/snippets/stdlib_itertools.py:230:33    - Unknown word (citertools) -- pickle.dumps(it, 0) == b'citertools\ntakewhile\np0\n(c_
./extra_tests/snippets/stdlib_itertools.py:230:71    - Unknown word (nunderten)  -- ntakewhile\np0\n(c__main__\nunderten\np1\nc__builtin__\niter
./extra_tests/snippets/stdlib_itertools.py:367:67    - Unknown word (ACEF)       -- 1,0,1,1])) == list("ACEF")
./extra_tests/snippets/stdlib_itertools.py:537:58    - Unknown word (fillvalue)  -- range(3), [9, 8, 7, 99], fillvalue='d')) \
./extra_tests/snippets/stdlib_itertools.py:54:24     - Unknown word (evaluted)   -- iterables are lazily evaluted
./extra_tests/snippets/stdlib_json.py:65:33     - Unknown word (jsons)      -- reject non-str keys in jsons
./extra_tests/snippets/stdlib_logging.py:10:16     - Unknown word (WOOT)       -- logging.error('WOOT')
./extra_tests/snippets/stdlib_math.py:11:9      - Unknown word (Conversible) -- # class Conversible():
./extra_tests/snippets/stdlib_math.py:18:3      - Unknown word (roundings)   -- # roundings
./extra_tests/snippets/stdlib_os.py:120:14    - Unknown word (BOYA)       -- CONTENT3 = b"BOYA"
./extra_tests/snippets/stdlib_os.py:289:48    - Unknown word (getpwall)   -- pw_uid for u in pwd.getpwall()]
./extra_tests/snippets/stdlib_re.py:18:17     - Unknown word (abcabca)    -- s = p.sub('x', 'abcabca')
./extra_tests/snippets/stdlib_re.py:20:14     - Unknown word (xcxca)      -- assert s == 'xcxca'
./extra_tests/snippets/stdlib_re.py:34:11     - Unknown word (bigcharset) -- # test op bigcharset
./extra_tests/snippets/stdlib_re.py:40:35     - Unknown word (abcdddd)    -- compile('abcd*').match('abcdddd').group() == 'abcdddd
./extra_tests/snippets/stdlib_re.py:42:36     - Unknown word (abce)       -- compile('abcd*e').match('abce').group() == 'abce'
./extra_tests/snippets/stdlib_re.py:43:37     - Unknown word (abcddeee)   -- compile('abcd*e+').match('abcddeee').group() == 'abcddeee
./extra_tests/snippets/stdlib_re.py:44:35     - Unknown word (abcddd)     -- compile('abcd+').match('abcddd').group() == 'abcddd
./extra_tests/snippets/stdlib_re.py:52:41     - Unknown word (abcdcdcd)   -- a)(b)(cd)*').match('abcdcdcd').group(0, 1, 2, 3)
./extra_tests/snippets/stdlib_re.py:5:11      - Unknown word (ello)       -- needle = 'ello'
./extra_tests/snippets/stdlib_re.py:64:41     - Unknown word (Xtest)      -- ', 'X', 'test') == 'Xtest'
./extra_tests/snippets/stdlib_select.py:26:1      - Unknown word (recvr)      -- recvr = socket.socket()
./extra_tests/snippets/stdlib_select.py:34:1      - Unknown word (sendr)      -- sendr = socket.socket()
./extra_tests/snippets/stdlib_select.py:39:1      - Unknown word (rres)       -- rres, wres, xres = select
./extra_tests/snippets/stdlib_socket.py:164:13    - Unknown word (gaierror)   -- (socket.gaierror, "gaierror"),
./extra_tests/snippets/stdlib_sqlite.py:21:7      - Unknown word (Aggr)          -- class AggrSum:
./extra_tests/snippets/stdlib_sqlite.py:31:22     - Unknown word (mysum)         -- cx.create_aggregate("mysum", 1, AggrSum)
./extra_tests/snippets/stdlib_sqlite.py:47:22     - Unknown word (aggtxt)        -- cx.create_aggregate("aggtxt", 1, AggrText)
./extra_tests/snippets/stdlib_sqlite.py:7:4       - Unknown word (executescript) -- cx.executescript(";")
./extra_tests/snippets/stdlib_sqlite.py:9:4       - Unknown word (executemany)   -- cx.executemany("INSERT INTO foo(key
./extra_tests/snippets/stdlib_struct.py:45:15     - Unknown word (calcsize)   -- assert struct.calcsize("B") == 1
./extra_tests/snippets/stdlib_subprocess.py:18:36     - Unknown word (unixy)      -- make work in a non-unixy environment (something
./extra_tests/snippets/stdlib_sys.py:20:12     - Unknown word (getfilesystemencoding) -- assert sys.getfilesystemencoding() == 'utf-8'
./extra_tests/snippets/stdlib_sys.py:21:12     - Unknown word (getfilesystemencodeerrors) -- assert sys.getfilesystemencodeerrors().startswith('surrogate
./extra_tests/snippets/stdlib_sys.py:29:12     - Unknown word (maxunicode)                -- assert sys.maxunicode == 1114111
./extra_tests/snippets/stdlib_sys.py:67:5      - Unknown word (setrecursionlimit)         -- sys.setrecursionlimit(200)
./extra_tests/snippets/stdlib_sys.py:74:18     - Unknown word (getwindowsversion)         -- winver = sys.getwindowsversion()
./extra_tests/snippets/stdlib_sys_getframe.py:4:20      - Unknown word (getframe)   -- locals_dict = sys._getframe().f_locals
./extra_tests/snippets/stdlib_xdrlib.py:1:25      - Unknown word (superceeded) -- This probably will be superceeded by the python unittests
./extra_tests/snippets/stdlib_xdrlib.py:1:51      - Unknown word (unittests)   -- superceeded by the python unittests when that works.
./extra_tests/snippets/stdlib_zlib.py:36:38     - Unknown word (amet)       -- Lorem ipsum dolor sit amet", "utf-8")
./extra_tests/snippets/syntax_async.py:108:33    - Unknown word (Aexit)      -- class LacksAenterAndAexit(object):
./extra_tests/snippets/syntax_async.py:8:16      - Unknown word (Entrada)    -- print("Entrada")
./extra_tests/snippets/syntax_async.py:95:17     - Unknown word (Aenter)     -- def testAenterAttributeError1(self
./extra_tests/snippets/syntax_class.py:229:20    - Unknown word (dbca)       -- assert D().f() == 'dbca', "Mro resolution using
./extra_tests/snippets/syntax_class.py:269:17    - Unknown word (mcls)       -- def __new__(mcls):
./extra_tests/snippets/syntax_class.py:48:9      - Unknown word (kungfu)     -- def kungfu(x):
./extra_tests/snippets/syntax_del.py:30:5      - Unknown word (mytest)     -- mytest = MyTest()
./extra_tests/snippets/syntax_fstring.py:144:1     - Unknown word (tenπ)       -- tenπ = 31.4
./extra_tests/snippets/syntax_fstring.py:16:14     - Unknown word (tersing)    -- # lets start tersing
./extra_tests/snippets/syntax_fstring.py:22:24     - Unknown word (barfoo)     -- assert f"{foo}foo" == 'barfoo'
./extra_tests/snippets/syntax_fstring.py:29:36     - Unknown word (barbarfoo)  -- f"{foo}" 'foo' == 'barbarfoo'
./extra_tests/snippets/syntax_function2.py:56:5      - Unknown word (revdocstr)  -- def revdocstr(f):
./extra_tests/snippets/syntax_function2.py:66:23     - Unknown word (abcw)       -- assert f5.__doc__ == 'abcw00t', f5.__doc__
./extra_tests/snippets/syntax_function_args.py:37:13     - Unknown word (kwdefaults) -- assert va.__kwdefaults__ is None
./extra_tests/snippets/syntax_generator.py:124:13    - Unknown word (coro)       -- def wrapper(coro):
./extra_tests/snippets/syntax_generator.py:171:13    - Unknown word (yieldfrom)  -- assert g.gi_yieldfrom is it
./extra_tests/snippets/syntax_global_nonlocal.py:3:28      - Unknown word (funkyness)  -- global and nonlocal funkyness
./extra_tests/snippets/syntax_short_circuit_bool.py:14:14     - Unknown word (booled)     -- self.booled = False
./extra_tests/snippets/syntax_short_circuit_bool.py:1:38      - Unknown word (bools)      -- carefully avoids evaluating bools more than once in a
./extra_tests/snippets/syntax_statement.py:4:15      - Unknown word (seperated)  -- # small ones, seperated by ';':
./extra_tests/snippets/syntax_try.py:35:12     - Unknown word (kablam)     -- print('kablam')
./extra_tests/snippets/syntax_with.py:30:16     - Unknown word (Ajuus)      -- print('Ajuus')
./extra_tests/snippets/testutils.py:18:14     - Unknown word (failmsg)    -- self.failmsg = msg
./extra_tests/snippets/testutils.py:69:53     - Unknown word (isisntance) -- isinstance(obj, klass), ['isisntance(', _typed(obj), ','
./extra_tests/test_snippets.py:27:5      - Unknown word (pushd)      -- def pushd(path):
./extra_tests/test_snippets.py:54:41     - Unknown word (jobserver)  -- = 'info,cargo=error,jobserver=error'
./jit/Cargo.toml:10:1      - Unknown word (autotests)  -- autotests = false
./jit/Cargo.toml:18:1      - Unknown word (cranelift)  -- cranelift = "0.88.0"
./jit/src/instructions.rs:125:46    - Unknown word (fcmp)       -- self.builder.ins().fcmp(FloatCC::NotEqual, val
./jit/src/instructions.rs:126:39    - Unknown word (bint)       -- Ok(self.builder.ins().bint(types::I8, val))
./jit/src/instructions.rs:129:47    - Unknown word (iconst)     -- self.builder.ins().iconst(types::I64, 0);
./jit/src/instructions.rs:243:36    - Unknown word (brnz)       -- self.builder.ins().brnz(val, then_block, &[
./jit/src/instructions.rs:386:68    - Unknown word (ifcout)     -- self.builder.ins().iadd_ifcout(a, b);
./jit/src/instructions.rs:387:44    - Unknown word (trapif)     -- self.builder.ins().trapif(
./jit/src/instructions.rs:410:55    - Unknown word (ushr)       -- self.builder.ins().ushr_imm(b, 63);
./jit/src/instructions.rs:411:44    - Unknown word (trapnz)     -- self.builder.ins().trapnz(
./jit/src/instructions.rs:417:48    - Unknown word (ishl)       -- self.builder.ins().ishl(a, b)
./jit/src/instructions.rs:419:48    - Unknown word (sshr)       -- self.builder.ins().sshr(a, b)
./jit/src/instructions.rs:435:60    - Unknown word (fadd)       -- Float(self.builder.ins().fadd(a, b))
./jit/src/instructions.rs:438:60    - Unknown word (fsub)       -- Float(self.builder.ins().fsub(a, b))
./jit/src/instructions.rs:441:60    - Unknown word (fmul)       -- Float(self.builder.ins().fmul(a, b))
./jit/src/instructions.rs:444:60    - Unknown word (fdiv)       -- Float(self.builder.ins().fdiv(a, b))
./jit/src/instructions.rs:461:79    - Unknown word (ifbout)     -- t special-case isub_ifbout
./jit/src/instructions.rs:467:40    - Unknown word (ineg)       -- self.builder.ins().ineg(b);
./jit/src/lib.rs:13:32     - Unknown word (jitted)     -- error("function can't be jitted")]
./jit/src/lib.rs:18:5      - Unknown word (Cranelift)  -- CraneliftError(#[from] ModuleError
./jit/src/lib.rs:285:23    - Unknown word (wasmtime)   -- TODO: confirm with wasmtime ppl that it's not unsound
./jit/src/lib.rs:38:65     - Unknown word (libcall)    -- cranelift_module::default_libcall_names())
./jit/tests/common.rs:68:17     - Unknown word (oparg)      -- let mut oparg_state = OpArgState:
./pdc.sh:15:20     - Unknown word (pycache)    -- PRE_GLOBAL=("clear_pycache")
./pdc.sh:26:90     - Unknown word (Dwarnings)  -- cargo clippy --all -- -Dwarnings" "cargo test --all"
./scripts/codecoverage-rustc-wrapper.sh:17:13     - Unknown word (Cinstrument) -- EXTRA=(-Cinstrument-coverage)
./scripts/install-openssl.ps1:1:12      - Unknown word (Actix)      -- # From the Actix Web windows workflow
./scripts/install-openssl.ps1:3:1       - Unknown word (vcpkg)      -- vcpkg integrate install
./scripts/redox/recipe.sh:3:1       - Unknown word (CARGOFLAGS) -- CARGOFLAGS=--no-default-features
./scripts/redox/recipe.sh:4:8       - Unknown word (BUILDTIME)  -- export BUILDTIME_RUSTPYTHONPATH=/lib
./src/lib.rs:114:13    - Unknown word (getpip)     -- let get_getpip = rustpython_vm::py
./src/lib.rs:12:35     - Unknown word (mymod)      -- vm.add_native_module("mymod".to_owned(), Box::new
./src/lib.rs:13:81     - Unknown word (otherthing) -- pass", module_name = "otherthing"));
./src/lib.rs:213:9     - Unknown word (Speedscope) -- Speedscope,
./src/settings.rs:130:46    - Unknown word (pycs)       -- name("check-hash-based-pycs")
./src/settings.rs:147:66    - Unknown word (PYTHONUNBUFFERED) -- effect on stdin; also PYTHONUNBUFFERED=x",
./src/settings.rs:216:49    - Unknown word (PYTHONNOUSERSITE) -- environment && env::var_os("PYTHONNOUSERSITE").is_some())
./src/settings.rs:226:49    - Unknown word (PYTHONDONTWRITEBYTECODE) -- environment && env::var_os("PYTHONDONTWRITEBYTECODE").is_some())
./src/settings.rs:257:49    - Unknown word (PYTHONWARNDEFAULTENCODING) -- environment && env::var_os("PYTHONWARNDEFAULTENCODING").is_some())
./src/settings.rs:314:37    - Unknown word (PYTHONHASHSEED)            -- seed = match env::var("PYTHONHASHSEED") {
./src/shell/helper.rs:20:13     - Unknown word (startpos)   -- let mut startpos = 0;
./stdlib/Cargo.toml:102:1     - Unknown word (libsqlite)  -- libsqlite3-sys = { version =
./stdlib/Cargo.toml:112:16    - Unknown word (handleapi)  -- "winsock2", "handleapi", "ws2def", "std",
./stdlib/Cargo.toml:112:46    - Unknown word (winbase)    -- , "ws2def", "std", "winbase", "wincrypt", "fileapi
./stdlib/Cargo.toml:112:57    - Unknown word (wincrypt)   -- "std", "winbase", "wincrypt", "fileapi", "processenv
./stdlib/Cargo.toml:112:69    - Unknown word (fileapi)    -- winbase", "wincrypt", "fileapi", "processenv",
./stdlib/Cargo.toml:112:80    - Unknown word (processenv) -- wincrypt", "fileapi", "processenv",
./stdlib/Cargo.toml:113:29    - Unknown word (processthreadsapi) -- namedpipeapi", "winnt", "processthreadsapi", "errhandlingapi",
./stdlib/Cargo.toml:113:4     - Unknown word (namedpipeapi) -- "namedpipeapi", "winnt", "processthreadsapi
./stdlib/Cargo.toml:113:50    - Unknown word (errhandlingapi)    -- processthreadsapi", "errhandlingapi", "winuser", "synchapi
./stdlib/Cargo.toml:113:68    - Unknown word (winuser)           -- "errhandlingapi", "winuser", "synchapi", "wincon
./stdlib/Cargo.toml:113:79    - Unknown word (synchapi)          -- errhandlingapi", "winuser", "synchapi", "wincon",
./stdlib/Cargo.toml:113:91    - Unknown word (wincon)            -- winuser", "synchapi", "wincon",
./stdlib/Cargo.toml:114:20    - Unknown word (vcruntime)         -- "impl-default", "vcruntime", "ifdef", "netioapi
./stdlib/Cargo.toml:114:42    - Unknown word (netioapi)          -- vcruntime", "ifdef", "netioapi"
./stdlib/Cargo.toml:43:1      - Unknown word (puruspe)    -- puruspe = "0.1.5"
./stdlib/build.rs:25:39     - Unknown word (osslconf)   -- println!("cargo:rustc-cfg=osslconf=\"{conf}\"");
./stdlib/build.rs:8:39      - Unknown word (ossl)       -- println!("cargo:rustc-cfg=ossl101");
./stdlib/src/array.rs:1442:9    - Unknown word (mformat)    -- mformat_code: MachineFormatCode
./stdlib/src/array.rs:75:43     - Unknown word (scode)      -- $t:ty, $c:literal, $scode:literal)),*$(,)?) =
./stdlib/src/binascii.rs:105:15    - Unknown word (CRCTAB)     -- const CRCTAB_HQX: [u16; 256] = [
./stdlib/src/binascii.rs:331:28    - Unknown word (roken)      -- // roken case from broken python
./stdlib/src/binascii.rs:342:28    - Unknown word (hexval)     -- // hexval
./stdlib/src/binascii.rs:370:9     - Unknown word (quotetabs)  -- quotetabs: bool,
./stdlib/src/binascii.rs:372:9     - Unknown word (istext)     -- istext: bool,
./stdlib/src/binascii.rs:385:21    - Unknown word (linelen)    -- let mut linelen = 0;
./stdlib/src/binascii.rs:386:21    - Unknown word (odatalen)   -- let mut odatalen = 0;
./stdlib/src/binascii.rs:390:21    - Unknown word (inidx)      -- let mut inidx;
./stdlib/src/binascii.rs:391:21    - Unknown word (outidx)     -- let mut outidx;
./stdlib/src/binascii.rs:570:8     - Unknown word (rlecode)    -- fn rlecode_hqx(s: ArgAsciiBuffer
./stdlib/src/binascii.rs:571:15    - Unknown word (RUNCHAR)    -- const RUNCHAR: u8 = 0x90; // b'\x
./stdlib/src/binascii.rs:605:8     - Unknown word (rledecode)  -- fn rledecode_hqx(s: ArgAsciiBuffer
./stdlib/src/csv.rs:198:34    - Unknown word (nwritten)   -- let (res, nread, nwritten, nends) = reader.read
./stdlib/src/csv.rs:198:44    - Unknown word (nends)      -- res, nread, nwritten, nends) = reader.read_record
./stdlib/src/fcntl.rs:12:45     - Unknown word (fnctl)      -- these from <asm-generic/fnctl.h> (please file an issue
./stdlib/src/fcntl.rs:13:19     - Unknown word (MAND)       -- // LOCK_MAND, LOCK_READ, LOCK_WRITE
./stdlib/src/fcntl.rs:14:36     - Unknown word (EXLCK)      -- SETLKW64, FASYNC, F_EXLCK, F_SHLCK, DN_ACCESS
./stdlib/src/fcntl.rs:14:45     - Unknown word (SHLCK)      -- FASYNC, F_EXLCK, F_SHLCK, DN_ACCESS, DN_MODIFY
./stdlib/src/fcntl.rs:15:39     - Unknown word (MULTISHOT)  -- RENAME, DN_ATTRIB, DN_MULTISHOT
./stdlib/src/fcntl.rs:16:35     - Unknown word (stropts)    -- these are/were from <stropts.h>, which may not be
./stdlib/src/fcntl.rs:17:48     - Unknown word (FLUSHBAND)  -- I_LOOK, I_FLUSH, I_FLUSHBAND, I_SETSIG, I_GETSIG
./stdlib/src/fcntl.rs:18:16     - Unknown word (SRDOPT)     -- // I_SRDOPT, I_GRDOPT, I_NREAD,
./stdlib/src/fcntl.rs:18:26     - Unknown word (GRDOPT)     -- / I_SRDOPT, I_GRDOPT, I_NREAD, I_FDINSERT
./stdlib/src/fcntl.rs:18:45     - Unknown word (FDINSERT)   -- I_GRDOPT, I_NREAD, I_FDINSERT, I_STR, I_SWROPT, I
./stdlib/src/fcntl.rs:18:64     - Unknown word (SWROPT)     -- I_FDINSERT, I_STR, I_SWROPT, I_GWROPT, I_SENDFD
./stdlib/src/fcntl.rs:18:74     - Unknown word (GWROPT)     -- I_STR, I_SWROPT, I_GWROPT, I_SENDFD,
./stdlib/src/fcntl.rs:18:84     - Unknown word (SENDFD)     -- SWROPT, I_GWROPT, I_SENDFD,
./stdlib/src/fcntl.rs:19:16     - Unknown word (RECVFD)     -- // I_RECVFD, I_LIST, I_ATMARK, I
./stdlib/src/fcntl.rs:19:44     - Unknown word (CKBAND)     -- I_LIST, I_ATMARK, I_CKBAND, I_GETBAND, I_CANPUT
./stdlib/src/fcntl.rs:19:54     - Unknown word (GETBAND)    -- ATMARK, I_CKBAND, I_GETBAND, I_CANPUT, I_SETCLTIME
./stdlib/src/fcntl.rs:19:65     - Unknown word (CANPUT)     -- CKBAND, I_GETBAND, I_CANPUT, I_SETCLTIME, I_GETCLTIME
./stdlib/src/fcntl.rs:19:75     - Unknown word (SETCLTIME)  -- GETBAND, I_CANPUT, I_SETCLTIME, I_GETCLTIME,
./stdlib/src/fcntl.rs:19:88     - Unknown word (GETCLTIME)  -- CANPUT, I_SETCLTIME, I_GETCLTIME,
./stdlib/src/fcntl.rs:20:43     - Unknown word (PUNLINK)    -- I_UNLINK, I_PLINK, I_PUNLINK
./stdlib/src/fcntl.rs:48:24     - Unknown word (GETLEASE)   -- F_ADD_SEALS, F_GETLEASE, F_GETPIPE_SZ, F_GET
./stdlib/src/fcntl.rs:48:36     - Unknown word (GETPIPE)    -- SEALS, F_GETLEASE, F_GETPIPE_SZ, F_GET_SEALS, F_NOTIFY
./stdlib/src/fcntl.rs:49:40     - Unknown word (SETLEASE)   -- SHRINK, F_SEAL_WRITE, F_SETLEASE, F_SETPIPE_SZ,
./stdlib/src/fcntl.rs:49:52     - Unknown word (SETPIPE)    -- WRITE, F_SETLEASE, F_SETPIPE_SZ,
./stdlib/src/gc.rs:43:12     - Unknown word (refererts)  -- fn get_refererts(_args: FuncArgs, vm
./stdlib/src/grp.rs:84:8      - Unknown word (getgrall)   -- fn getgrall(vm: &VirtualMachine
./stdlib/src/grp.rs:85:67     - Unknown word (fgetgrent)  -- thread safe. Could use fgetgrent_r, but this is easier
./stdlib/src/grp.rs:86:16     - Unknown word (GETGRALL)   -- static GETGRALL: parking_lot::Mutex
./stdlib/src/hashlib.rs:335:9     - Unknown word (digestmod)  -- digestmod: bool, // TODO: RUSTPYTHON
./stdlib/src/json/machinery.rs:44:7      - Unknown word (fedcba)     -- //fedcba9876543210_fedcba987
./stdlib/src/json/machinery.rs:5:30      - Unknown word (LOJKINE)    -- Copyright (c) 2018, Ophir LOJKINE
./stdlib/src/lib.rs:114:59    - Unknown word (RUSPYTHON)  -- make_module, // TODO: RUSPYTHON fix strange fail on
./stdlib/src/lib.rs:126:27    - Unknown word (sysmodule)  -- // crate::vm::sysmodule::sysconfigdata_name
./stdlib/src/lib.rs:126:38    - Unknown word (sysconfigdata) -- crate::vm::sysmodule::sysconfigdata_name() => sysconfigdata
./stdlib/src/locale.rs:59:72     - Unknown word (ABMON)      -- , ABDAY_6, ABDAY_7, ABMON_1, ABMON_10, ABMON_
./stdlib/src/math.rs:138:26    - Unknown word (logx)       -- log2(x, vm).map(|logx| logx / base.log2()
./stdlib/src/math.rs:584:13    - Unknown word (argvec)     -- let argvec = args.into_vec();
./stdlib/src/math.rs:625:17    - Unknown word (xsave)      -- let xsave = x;
./stdlib/src/math.rs:646:22    - Unknown word (nonfinite)  -- // a nonfinite x could arise either
./stdlib/src/math.rs:649:20    - Unknown word (summands)   -- // summands
./stdlib/src/math.rs:862:17    - Unknown word (absx)       -- let absx = x.abs();
./stdlib/src/math.rs:863:17    - Unknown word (absy)       -- let absy = y.abs();
./stdlib/src/mmap.rs:139:20    - Unknown word (DENYWRITE)   -- use libc::{MAP_DENYWRITE, MAP_EXECUTABLE, MAP
./stdlib/src/mmap.rs:157:22    - Unknown word (ALLOCATIONGRANULARITY) -- #[pyattr(name = "ALLOCATIONGRANULARITY", once)]
./stdlib/src/mmap.rs:43:24     - Unknown word (DONTFORK)   -- libc::MADV_DONTFORK => Advice::DontFork
./stdlib/src/mmap.rs:45:24     - Unknown word (DOFORK)     -- libc::MADV_DOFORK => Advice::DoFork,
./stdlib/src/mmap.rs:49:24     - Unknown word (UNMERGEABLE) -- libc::MADV_UNMERGEABLE => Advice::Unmergeable
./stdlib/src/mmap.rs:49:47     - Unknown word (Unmergeable) -- UNMERGEABLE => Advice::Unmergeable,
./stdlib/src/mmap.rs:51:24     - Unknown word (HUGEPAGE)    -- libc::MADV_HUGEPAGE => Advice::HugePage
./stdlib/src/mmap.rs:53:24     - Unknown word (NOHUGEPAGE)  -- libc::MADV_NOHUGEPAGE => Advice::NoHugePage
./stdlib/src/mmap.rs:562:18    - Unknown word (resizeable)            -- fn check_resizeable(&self, vm: &VirtualMachine
./stdlib/src/mmap.rs:57:24     - Unknown word (DONTDUMP)    -- libc::MADV_DONTDUMP => Advice::DontDump
./stdlib/src/mmap.rs:59:24     - Unknown word (DODUMP)      -- libc::MADV_DODUMP => Advice::DoDump,
./stdlib/src/mmap.rs:61:24     - Unknown word (HWPOISON)    -- libc::MADV_HWPOISON => Advice::HwPoison
./stdlib/src/mmap.rs:646:46    - Unknown word (rposition)             -- buf.windows(sub.len()).rposition(|window| window == sub
./stdlib/src/posixsubprocess.rs:150:43    - Unknown word (SIGXFZ)     -- restore signals SIGPIPE, SIGXFZ, SIGXFSZ to SIG_DFL
./stdlib/src/posixsubprocess.rs:28:17     - Unknown word (preexec)    -- if args.preexec_fn.is_some() {
./stdlib/src/posixsubprocess.rs:31:13     - Unknown word (cstrs)      -- let cstrs_to_ptrs = |cstrs: &
./stdlib/src/posixsubprocess.rs:72:21     - Unknown word (cwrite)     -- p2cread: i32, p2cwrite: i32, c2pread: i32,
./stdlib/src/posixsubprocess.rs:73:19     - Unknown word (errwrite)   -- errread: i32, errwrite: i32, errpipe_read:
./stdlib/src/posixsubprocess.rs:73:34     - Unknown word (errpipe)    -- i32, errwrite: i32, errpipe_read: i32, errpipe_write
./stdlib/src/posixsubprocess.rs:73:5      - Unknown word (errread)    -- errread: i32, errwrite: i32
./stdlib/src/pyexpat.rs:138:42    - Unknown word (isfinal)    -- self, data: PyStrRef, _isfinal: OptionalArg<bool>,
./stdlib/src/random.rs:135:25    - Unknown word (wordarray)  -- let wordarray = (0..words)
./stdlib/src/random.rs:16:16     - Unknown word (rngs)       -- use rand::{rngs::StdRng, RngCore, SeedableRng
./stdlib/src/random.rs:16:39     - Unknown word (Seedable)   -- rngs::StdRng, RngCore, SeedableRng};
./stdlib/src/resource.rs:24:21     - Unknown word (OFILE)      -- // TODO: RLIMIT_OFILE,
./stdlib/src/resource.rs:31:72     - Unknown word (emscripten) -- android", target_os = "emscripten"))]
./stdlib/src/resource.rs:33:23     - Unknown word (MSGQUEUE)   -- use libc::{RLIMIT_MSGQUEUE, RLIMIT_NICE, RLIMIT
./stdlib/src/resource.rs:37:22     - Unknown word (RTTIME)     -- use libc::RLIMIT_RTTIME;
./stdlib/src/resource.rs:43:22     - Unknown word (illumos)    -- target_os = "illumos"
./stdlib/src/resource.rs:46:22     - Unknown word (SBSIZE)     -- use libc::RLIMIT_SBSIZE;
./stdlib/src/resource.rs:50:23     - Unknown word (NPTS)       -- use libc::{RLIMIT_NPTS, RLIMIT_SWAP};
./stdlib/src/resource.rs:56:75     - Unknown word (freebds)    -- emscripten", target_os = "freebds"))]
./stdlib/src/select.rs:128:5     - Unknown word (errfds)     -- errfds: &mut FdSet,
./stdlib/src/select.rs:177:9     - Unknown word (wlist)      -- wlist: PyObjectRef,
./stdlib/src/select.rs:178:9     - Unknown word (xlist)      -- xlist: PyObjectRef,
./stdlib/src/select.rs:59:37     - Unknown word (WSAFDIs)    -- winapi::um::winsock2::__WSAFDIsSet;
./stdlib/src/socket.rs:100:61    - Unknown word (ERRQUEUE)         -- DEST_NAME, SCM_J1939_ERRQUEUE, SCM_J1939_PRIO, SOL
./stdlib/src/socket.rs:110:20    - Unknown word (VRRP)             -- use c::IPPROTO_VRRP;
./stdlib/src/socket.rs:119:40    - Unknown word (RCVALL)           -- RESERVED, IPPROTO_IPV4, RCVALL_IPLEVEL, RCVALL_OFF
./stdlib/src/socket.rs:119:47    - Unknown word (IPLEVEL)          -- IPPROTO_IPV4, RCVALL_IPLEVEL, RCVALL_OFF, RCVALL
./stdlib/src/socket.rs:120:16    - Unknown word (SOCKETLEVELONLY)  -- RCVALL_SOCKETLEVELONLY, SIO_KEEPALIVE_VALS
./stdlib/src/socket.rs:1260:25   - Unknown word (subbuf)           -- let subbuf = &buf[buf_offset..
./stdlib/src/socket.rs:1350:12   - Unknown word (getblocking)      -- fn getblocking(&self) -> bool {
./stdlib/src/socket.rs:1376:25   - Unknown word (flagsize)         -- let mut flagsize = std::mem::size_of
./stdlib/src/socket.rs:141:54    - Unknown word (ASSOCLEN)         -- ENCRYPT, ALG_SET_AEAD_ASSOCLEN, ALG_SET_AEAD_AUTHSIZE
./stdlib/src/socket.rs:1421:13   - Unknown word (optlen)           -- optlen: OptionalArg<u32>,
./stdlib/src/socket.rs:144:85    - Unknown word (DNRTMSG)          -- NETLINK_CRYPTO, NETLINK_DNRTMSG,
./stdlib/src/socket.rs:145:81    - Unknown word (USERSOCK)         -- NETLINK_ROUTE, NETLINK_USERSOCK,
./stdlib/src/socket.rs:146:17    - Unknown word (XFRM)             -- NETLINK_XFRM, SOL_ALG, SO_PASSSEC
./stdlib/src/socket.rs:146:35    - Unknown word (PASSSEC)          -- NETLINK_XFRM, SOL_ALG, SO_PASSSEC, SO_PEERSEC,
./stdlib/src/socket.rs:146:47    - Unknown word (PEERSEC)          -- ALG, SO_PASSSEC, SO_PEERSEC,
./stdlib/src/socket.rs:1561:25   - Unknown word (abstractpath)     -- if let Some(abstractpath) = unix_addr.as_abstract
./stdlib/src/socket.rs:184:28    - Unknown word (ATMPVC)           -- AF_ALG, AF_ASH, AF_ATMPVC, AF_ATMSVC, AF_AX25
./stdlib/src/socket.rs:188:21    - Unknown word (BINDTODEVICE)     -- SOL_UDP, SO_BINDTODEVICE, SO_MARK, TCP_CORK,
./stdlib/src/socket.rs:188:89    - Unknown word (QUICKACK)         -- ACCEPT, TCP_LINGER2, TCP_QUICKACK,
./stdlib/src/socket.rs:189:13    - Unknown word (SYNCNT)           -- TCP_SYNCNT, TCP_WINDOW_CLAMP,
./stdlib/src/socket.rs:1936:17   - Unknown word (ainfo)            -- let mut ainfo = res.next().unwrap
./stdlib/src/socket.rs:2043:46   - Unknown word (Luid)             -- name(&entry.InterfaceLuid).map_err(|err| err.into
./stdlib/src/socket.rs:2051:17   - Unknown word (luid)             -- luid: &winapi::shared::ifdef
./stdlib/src/socket.rs:2051:51   - Unknown word (LUID)             -- :shared::ifdef::NET_LUID,
./stdlib/src/socket.rs:2058:54   - Unknown word (ustr)             -- widestring::WideCString::from_ustr_truncate(
./stdlib/src/socket.rs:2231:13   - Unknown word (strerr)           -- let strerr = {
./stdlib/src/socket.rs:2298:8    - Unknown word (getdefaulttimeout) -- fn getdefaulttimeout() -> Option<f64> {
./stdlib/src/socket.rs:2308:8    - Unknown word (setdefaulttimeout) -- fn setdefaulttimeout(timeout: Option<Duration
./stdlib/src/socket.rs:266:21    - Unknown word (UDPLITE)          -- use c::{IPPROTO_UDPLITE, TCP_CONGESTION};
./stdlib/src/socket.rs:275:24    - Unknown word (CSCOV)            -- const UDPLITE_SEND_CSCOV: i32 = 10;
./stdlib/src/socket.rs:312:32    - Unknown word (loongarch)        -- target_arch = "loongarch64",
./stdlib/src/socket.rs:317:32    - Unknown word (riscv)            -- target_arch = "riscv64gc",
./stdlib/src/socket.rs:38:33     - Unknown word (mstcpip)    -- use winapi::shared::mstcpip::*;
./stdlib/src/socket.rs:396:16    - Unknown word (PASSCRED)         -- use c::{SO_PASSCRED, SO_PEERCRED};
./stdlib/src/socket.rs:416:15    - Unknown word (RECVTOS)          -- use c::IP_RECVTOS;
./stdlib/src/socket.rs:41:36     - Unknown word (ipdef)      -- use winapi::shared::ws2ipdef::*;
./stdlib/src/socket.rs:45:26     - Unknown word (EXCLUSIVEADDRUSE) -- SO_ERROR, SO_EXCLUSIVEADDRUSE, SO_LINGER, SO_OOBINLINE
./stdlib/src/socket.rs:647:11    - Unknown word (BDADDR)           -- const BDADDR_ANY: &str = "00:00:
./stdlib/src/socket.rs:662:30    - Unknown word (ICLFXBM)          -- IPPROTO_CBT, IPPROTO_ICLFXBM, IPPROTO_IGP, IPPROTO
./stdlib/src/socket.rs:85:47     - Unknown word (NETROM)           -- SOL_AX25, SOL_IPX, SOL_NETROM, SOL_ROSE};
./stdlib/src/socket.rs:89:15     - Unknown word (SETFIB)           -- use c::SO_SETFIB;
./stdlib/src/socket.rs:940:88    - Unknown word (scopeid)          -- host, port[, flowinfo[, scopeid]])"
./stdlib/src/socket.rs:94:78     - Unknown word (ISOTP)            -- FLAG, CAN_ERR_MASK, CAN_ISOTP, CAN_J1939,
./stdlib/src/socket.rs:987:67    - Unknown word (errorfds)         -- SelectKind::Connect fills the errorfds fd_set, so if we wake
./stdlib/src/ssl.rs:1345:63   - Unknown word (cacerts)    -- system/etc/security/cacerts";
./stdlib/src/ssl.rs:1454:51   - Unknown word (PCCERT)     -- as_ptr() as wincrypt::PCCERT_CONTEXT;
./stdlib/src/ssl.rs:222:22    - Unknown word (SSLEOF)     -- #[pyattr(name = "SSLEOFError", once)]
./stdlib/src/ssl.rs:461:43    - Unknown word (SSLV)       -- options |= SslOptions::NO_SSLV2;
./stdlib/src/ssl.rs:521:31    - Unknown word (cipherlist) -- fn set_ciphers(&self, cipherlist: PyStrRef, vm: &VirtualMachin
./stdlib/src/ssl.rs:633:76    - Unknown word (cadata)     -- &args.capath, &args.cadata) {
./stdlib/src/ssl.rs:72:33     - Unknown word (ECDH)       -- ifdef SSL_OP_SINGLE_ECDH_USE
./stdlib/src/syslog.rs:132:19    - Unknown word (maskpri)    -- fn setlogmask(maskpri: i32) -> i32 {
./stdlib/src/termios.rs:106:18    - Unknown word (CBAUDEX)         -- B576000, CBAUDEX,
./stdlib/src/termios.rs:137:46    - Unknown word (IUCLC)           -- target::{CBAUD, CIBAUD, IUCLC, OLCUC, XCASE};
./stdlib/src/termios.rs:137:53    - Unknown word (OLCUC)           -- CBAUD, CIBAUD, IUCLC, OLCUC, XCASE};
./stdlib/src/termios.rs:137:60    - Unknown word (XCASE)           -- CIBAUD, IUCLC, OLCUC, XCASE};
./stdlib/src/termios.rs:13:58     - Unknown word (CIBAUD)     -- 0000, B4000000, and CIBAUD
./stdlib/src/termios.rs:150:31    - Unknown word (VSWTC)           -- termios::os::target::{VSWTC, VSWTC as VSWTCH};
./stdlib/src/termios.rs:150:47    - Unknown word (VSWTCH)          -- target::{VSWTC, VSWTC as VSWTCH};
./stdlib/src/termios.rs:16:14     - Unknown word (CDEL)       -- // CDEL, CDSUSP, CEOF, CEOL
./stdlib/src/termios.rs:16:61     - Unknown word (CESC)       -- CEOL2, CEOT, CERASE, CESC, CFLUSH, CINTR, CKILL
./stdlib/src/termios.rs:171:13    - Unknown word (noncanon)        -- let noncanon = (termios.c_lflag
./stdlib/src/termios.rs:17:14     - Unknown word (CNUL)       -- // CNUL, COMMON, CQUIT, CRPRNT
./stdlib/src/termios.rs:17:65     - Unknown word (CSWTCH)     -- CSTART, CSTOP, CSUSP, CSWTCH, CWERASE
./stdlib/src/termios.rs:20:14     - Unknown word (IOCSIZE)    -- // IOCSIZE_MASK, IOCSIZE_SHIFT
./stdlib/src/termios.rs:22:32     - Unknown word (NSWTCH)     -- NOTE: I have only found NSWTCH on cygwin, so please
./stdlib/src/termios.rs:29:14     - Unknown word (TCSBRKP)    -- // TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS
./stdlib/src/termios.rs:29:23     - Unknown word (TIOCGICOUNT) -- // TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFI
./stdlib/src/termios.rs:29:36     - Unknown word (TIOCGLCKTRMIOS) -- TCSBRKP, TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR
./stdlib/src/termios.rs:29:52     - Unknown word (TIOCSERCONFIG)  -- TIOCGICOUNT, TIOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMUL
./stdlib/src/termios.rs:29:67     - Unknown word (TIOCSERGETLSR)  -- IOCGLCKTRMIOS, TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMULTI,
./stdlib/src/termios.rs:29:82     - Unknown word (TIOCSERGETMULTI) -- TIOCSERCONFIG, TIOCSERGETLSR, TIOCSERGETMULTI,
./stdlib/src/termios.rs:30:14     - Unknown word (TIOCSERGSTRUCT)  -- // TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULT
./stdlib/src/termios.rs:30:30     - Unknown word (TIOCSERGWILD)    -- TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWIL
./stdlib/src/termios.rs:30:44     - Unknown word (TIOCSERSETMULTI) -- TIOCSERGSTRUCT, TIOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWILD, TIOCSER
./stdlib/src/termios.rs:30:61     - Unknown word (TIOCSERSWILD)    -- IOCSERGWILD, TIOCSERSETMULTI, TIOCSERSWILD, TIOCSER_TEMT,
./stdlib/src/termios.rs:30:75     - Unknown word (TIOCSER)         -- IOCSERSETMULTI, TIOCSERSWILD, TIOCSER_TEMT,
./stdlib/src/termios.rs:30:83     - Unknown word (TEMT)            -- TIOCSERSWILD, TIOCSER_TEMT,
./stdlib/src/termios.rs:31:14     - Unknown word (TIOCSLCKTRMIOS)  -- // TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT
./stdlib/src/termios.rs:31:30     - Unknown word (TIOCSSERIAL)     -- TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT
./stdlib/src/termios.rs:31:43     - Unknown word (TIOCTTYGSTRUCT)  -- TIOCSLCKTRMIOS, TIOCSSERIAL, TIOCTTYGSTRUCT
./stdlib/src/termios.rs:64:34     - Unknown word (TCGETS)          -- IBSHIFT, TCFLSH, TCGETA, TCGETS, TCSBRK, TCSETA, TCSETAF
./stdlib/src/termios.rs:64:42     - Unknown word (TCSBRK)          -- TCFLSH, TCGETA, TCGETS, TCSBRK, TCSETA, TCSETAF, TCSETAW
./stdlib/src/termios.rs:64:76     - Unknown word (TCSETS)          -- TCSETA, TCSETAF, TCSETAW, TCSETS, TCSETSF,
./stdlib/src/termios.rs:64:84     - Unknown word (TCSETSF)         -- TCSETAF, TCSETAW, TCSETS, TCSETSF,
./stdlib/src/termios.rs:64:9      - Unknown word (IBSHIFT)         -- IBSHIFT, TCFLSH, TCGETA, TCGETS
./stdlib/src/termios.rs:65:18     - Unknown word (TCXONC)          -- TCSETSW, TCXONC, TIOCGSERIAL, TIOCGSOFTCAR
./stdlib/src/termios.rs:65:26     - Unknown word (TIOCGSERIAL)     -- TCSETSW, TCXONC, TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ
./stdlib/src/termios.rs:65:39     - Unknown word (TIOCGSOFTCAR)    -- TCXONC, TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ, TIOCLINUX
./stdlib/src/termios.rs:65:53     - Unknown word (TIOCINQ)         -- TIOCGSERIAL, TIOCGSOFTCAR, TIOCINQ, TIOCLINUX, TIOCSSOFTCAR
./stdlib/src/termios.rs:65:62     - Unknown word (TIOCLINUX)       -- TIOCGSOFTCAR, TIOCINQ, TIOCLINUX, TIOCSSOFTCAR, XTABS
./stdlib/src/termios.rs:65:73     - Unknown word (TIOCSSOFTCAR)    -- TIOCINQ, TIOCLINUX, TIOCSSOFTCAR, XTABS,
./stdlib/src/termios.rs:65:9      - Unknown word (TCSETSW)         -- TCSETSW, TCXONC, TIOCGSERIAL
./vm/Cargo.toml:127:54    - Unknown word (memoryapi)  -- ifdef", "netioapi", "memoryapi",
./vm/Cargo.toml:47:43     - Unknown word (wasmbind)   -- true, features = ["wasmbind"] }
./vm/Cargo.toml:70:1      - Unknown word (caseless)   -- caseless = "0.2.1"
./vm/Cargo.toml:71:1      - Unknown word (getrandom)  -- getrandom = { version = "0.2.
./vm/Cargo.toml:76:1      - Unknown word (memoffset)  -- memoffset = "0.6.5"
./vm/Lib/python_builtins/__reducelib.py:50:17     - Unknown word (slotnames)  -- names = slotnames(cls) # not checking
./vm/Lib/python_builtins/__reducelib.py:65:5      - Unknown word (listitems)  -- listitems = iter(obj) if isinstance
./vm/build.rs:38:10     - Unknown word (sysvars)    -- "sysvars! {{ {} }}",
./vm/src/anystr.rs:189:9     - Unknown word (splitw)     -- splitw: SW,
./vm/src/anystr.rs:217:11    - Unknown word (startsendswith) -- fn py_startsendswith<'a, T, F>(
./vm/src/buffer.rs:456:24    - Unknown word (primint)    -- macro_rules! make_pack_primint {
./vm/src/builtins/asyncgenerator.rs:5:16      - Unknown word (Coro)       -- coroutine::Coro,
./vm/src/builtins/bytearray.rs:10:5      - Unknown word (bytesinner) -- bytesinner::{
./vm/src/builtins/bytearray.rs:151:8     - Unknown word (irepeat)    -- fn irepeat(zelf: &Py<Self>, n:
./vm/src/builtins/bytes.rs:544:45    - Unknown word (emplemented) -- 'utf-8' and 'ascii' emplemented
./vm/src/builtins/code.rs:23:8      - Unknown word (posonlyargcount) -- co_posonlyargcount: OptionalArg<u32>,
./vm/src/builtins/complex.rs:55:61     - Unknown word (coereced)   -- complex originally or coereced into one
./vm/src/builtins/descriptor.rs:231:33    - Unknown word (objclass)       -- "<descriptor>.__objclass__.__qualname__ is not
./vm/src/builtins/descriptor.rs:29:20     - Unknown word (vectorcallfunc) -- // vectorcall: vectorcallfunc,
./vm/src/builtins/descriptor.rs:29:8      - Unknown word (vectorcall) -- // vectorcall: vectorcallfunc,
./vm/src/builtins/dict.rs:1018:10   - Unknown word (reverseitemiterator) -- dict_reverseitemiterator_type,
./vm/src/builtins/dict.rs:14:5      - Unknown word (dictdatatype) -- dictdatatype::{self, DictKey},
./vm/src/builtins/dict.rs:335:13    - Unknown word (dicted)       -- let dicted: Result<PyDictRef,
./vm/src/builtins/dict.rs:992:10    - Unknown word (reversekeyiterator) -- dict_reversekeyiterator_type,
./vm/src/builtins/frame.rs:57:10     - Unknown word (lasti)      -- fn f_lasti(&self) -> u32 {
./vm/src/builtins/function.rs:131:13    - Unknown word (argpos)     -- let argpos = |range: std::ops:
./vm/src/builtins/function.rs:141:17    - Unknown word (posonly)    -- let mut posonly_passed_as_kwarg = Vec
./vm/src/builtins/function.rs:188:17    - Unknown word (ndefs)      -- let ndefs = defaults.map_or(0
./vm/src/builtins/function.rs:190:17    - Unknown word (nrequired)  -- let nrequired = code.arg_count as
./vm/src/builtins/function.rs:2:5       - Unknown word (jitfunc)    -- mod jitfunc;
./vm/src/builtins/function.rs:572:13    - Unknown word (funcself)   -- let funcself = self.object.clone
./vm/src/builtins/function.rs:80:13     - Unknown word (nexpected)  -- let nexpected_args = code.arg_count
./vm/src/builtins/function.rs:86:16     - Unknown word (starargs)   -- // and starargs and kwargs.
./vm/src/builtins/function.rs:90:17     - Unknown word (fastlocals) -- let mut fastlocals = frame.fastlocals.lock
./vm/src/builtins/function/jitfunc.rs:89:14     - Unknown word (Jitting)    -- "Jitting function requires arguments
./vm/src/builtins/genericalias.rs:254:9     - Unknown word (tvars)      -- fn subs_tvars(
./vm/src/builtins/genericalias.rs:257:5     - Unknown word (argitems)   -- argitems: &[PyObjectRef],
./vm/src/builtins/list.rs:323:26    - Unknown word (keyfunc)    -- // this prevents keyfunc from messing with the
./vm/src/builtins/list.rs:579:40    - Unknown word (reverseiterator) -- false, name = "list_reverseiterator", traverse)]
./vm/src/builtins/memory.rs:150:29    - Unknown word (suboffset)   -- let (shape, stride, suboffset) = self.desc.dim_desc
./vm/src/builtins/memory.rs:47:37     - Unknown word (memeoryview) -- the possible another memeoryview is viewing from it
./vm/src/builtins/memory.rs:615:8     - Unknown word (suboffsets)  -- fn suboffsets(&self, vm: &VirtualMachine
./vm/src/builtins/memory.rs:644:18    - Unknown word (fortain)     -- // TODO: fortain order
./vm/src/builtins/memory.rs:710:8     - Unknown word (tolist)      -- fn tolist(&self, vm: &VirtualMachine
./vm/src/builtins/memory.rs:724:8     - Unknown word (toreadonly)  -- fn toreadonly(&self, vm: &VirtualMachine
./vm/src/builtins/module.rs:125:73    - Unknown word (dictoffsets)  -- dict method above once dictoffsets land
./vm/src/builtins/module.rs:20:18     - Unknown word (traverseproc) -- // traverse: traverseproc
./vm/src/builtins/module.rs:51:8      - Unknown word (weaklist)     -- // weaklist
./vm/src/builtins/range.rs:525:35    - Unknown word (longrange)  -- module = false, name = "longrange_iterator")]
./vm/src/builtins/str.rs:1616:21   - Unknown word (Ωppercases) -- ("Greek Ωppercases ...", "greek ωppercases
./vm/src/builtins/str.rs:1616:45   - Unknown word (ωppercases) -- ppercases ...", "greek ωppercases ..."),
./vm/src/builtins/str.rs:1617:21   - Unknown word (ῼitlecases) -- ("Greek ῼitlecases ...", "greek ῳitlecases
./vm/src/builtins/str.rs:1617:45   - Unknown word (ῳitlecases) -- itlecases ...", "greek ῳitlecases ..."),
./vm/src/builtins/str.rs:1628:16   - Unknown word (Titlecased) -- "A Titlecased Line",
./vm/src/builtins/str.rs:1644:21   - Unknown word (Titlecase)  -- "Not\ta Titlecase String",
./vm/src/builtins/str.rs:1777:33   - Unknown word (rmatch)     -- (offset, _) in self.rmatch_indices(|c: char| c
./vm/src/builtins/str.rs:780:18    - Unknown word (titlecased) -- /// Return a titlecased version of the string
./vm/src/builtins/str.rs:789:39    - Unknown word (titlecase)  -- title.extend(c.to_titlecase());
./vm/src/builtins/super.rs:272:26    - Unknown word (cmeth)      -- def cmeth(cls, arg):\n
./vm/src/builtins/super.rs:32:28     - Unknown word (supercheck) -- let obj_type = supercheck(typ.clone(), obj.clone
./vm/src/builtins/tuple.rs:307:39    - Unknown word (tuplesubclass) -- just return tup, or tuplesubclass(tup), which'll copy
./vm/src/builtins/tuple.rs:308:12    - Unknown word (structseq)     -- // structseq)
./vm/src/builtins/type.rs:311:51    - Unknown word (stablized)  -- intrinsics::likely once it is stablized
./vm/src/bytesinner.rs:1077:48   - Unknown word (byteset)    -- offset) = haystack.find_byteset(ASCII_WHITESPACES)
./vm/src/bytesinner.rs:1152:13   - Unknown word (unchunked)  -- let unchunked = len - chunked;
./vm/src/bytesinner.rs:872:12    - Unknown word (stringlib)  -- // stringlib_replace in CPython
./vm/src/cformat.rs:90:24     - Unknown word (formatfloat) -- // formatfloat in bytesobject.c generates
./vm/src/cformat.rs:90:39     - Unknown word (bytesobject) -- // formatfloat in bytesobject.c generates its own
./vm/src/codecs.rs:155:18    - Unknown word (xmlcharrefreplace) -- "xmlcharrefreplace_errors" => xmlcharrefreplace
./vm/src/codecs.rs:156:18    - Unknown word (backslashreplace)  -- "backslashreplace_errors" => backslashreplace
./vm/src/codecs.rs:157:18    - Unknown word (namereplace)       -- "namereplace_errors" => namereplace
./vm/src/codecs.rs:158:18    - Unknown word (surrogatepass)     -- "surrogatepass_errors" => surrogatepass
./vm/src/codecs.rs:159:18    - Unknown word (surrogateescape)   -- "surrogateescape_errors" => surrogateescape
./vm/src/coroutine.rs:33:9      - Unknown word (weakreflist) -- // _weakreflist
./vm/src/dictdatatype.rs:172:25    - Unknown word (idxs)       -- let mut idxs = GenIndexes::new(entry
./vm/src/dictdatatype.rs:22:62     - Unknown word (pyhash)     -- compatible with actual pyhash value
./vm/src/dictdatatype.rs:685:29    - Unknown word (usecases)   -- dictionary. Typical usecases are:
./vm/src/frame.rs:350:13    - Unknown word (instrs)     -- let instrs = &self.code.instructions
./vm/src/frame.rs:775:75    - Unknown word (binop)      -- op } => self.execute_binop(vm, op.get(arg)),
./vm/src/frame.rs:782:74    - Unknown word (unop)       -- op } => self.execute_unop(vm, op.get(arg)),
./vm/src/frame.rs:877:21    - Unknown word (aenter)     -- let aenter_res = vm
./vm/src/frame.rs:881:21    - Unknown word (aexit)      -- let aexit = mgr
./vm/src/frame.rs:91:6      - Unknown word (Lasti)      -- type Lasti = atomic::AtomicU32
./vm/src/frame.rs:974:21    - Unknown word (aiterable)  -- let aiterable = self.pop_value();
./vm/src/function/argument.rs:120:13    - Unknown word (kwargc)     -- let kwargc = kwarg_names.len()
./vm/src/function/argument.rs:121:13    - Unknown word (posargc)    -- let posargc = total_argc - kwargc
./vm/src/function/argument.rs:123:13    - Unknown word (posargs)    -- let posargs = args.by_ref().take
./vm/src/function/argument.rs:274:53    - Unknown word (keyqord)    -- error(format!("Required keyqord only argument {name
./vm/src/function/fspath.rs:97:15     - Unknown word (widecstring) -- pub fn to_widecstring(&self, vm: &VirtualMachine
./vm/src/function/getset.rs:138:13    - Unknown word (noresult)   -- fn into_noresult(self) -> PyResult<(
./vm/src/function/method.rs:17:17     - Unknown word (NOARGS)     -- // METH_NOARGS and METH_O must not
./vm/src/function/method.rs:36:38     - Unknown word (Stackless)  -- bit is preserved for Stackless Python
./vm/src/function/method.rs:37:18     - Unknown word (STACKLESS)  -- // const STACKLESS = 0x0100;
./vm/src/function/protocol.rs:77:5      - Unknown word (iterfn)     -- iterfn: Option<crate::types
./vm/src/import.rs:87:25     - Unknown word (codeobj)    -- let module = import_codeobj(vm, module_name, frozen
./vm/src/object/core.rs:1253:35   - Unknown word (dfghjkl)    -- obj = ctx.new_bytes(b"dfghjkl".to_vec());
./vm/src/object/core.rs:169:51    - Unknown word (weakrefs)   -- have never been any weakrefs in this list
./vm/src/object/core.rs:207:54    - Unknown word (Weaks)      -- actually own the PyObjectWeaks inside `list`, and every
./vm/src/object/core.rs:225:32    - Unknown word (arrayvec)   -- // TODO: can be an arrayvec
./vm/src/object/core.rs:368:17    - Unknown word (pyinner)    -- let pyinner = (self as *const Self
./vm/src/object/traverse.rs:159:26    - Unknown word (extremly)   -- because long tuple is extremly rare in almost every
./vm/src/object/traverse.rs:25:33     - Unknown word (repeatly)   -- some field is called repeatly, panic and deadlock
./vm/src/object/traverse.rs:27:46     - Unknown word (Pyef)       -- a `PyObjectRef` or `Pyef<T>` in `traverse()`
./vm/src/object/traverse_object.rs:54:56     - Unknown word (maintaince) -- pointer* to a struct for maintaince weak ref, so no ownership
./vm/src/protocol/buffer.rs:134:32    - Unknown word (Manaully)   -- wrap PyBuffer in the ManaullyDrop to prevent drop
./vm/src/protocol/buffer.rs:267:43    - Unknown word (conti)      -- segment<F>(&self, try_conti: bool, mut f: F)
./vm/src/protocol/buffer.rs:282:35    - Unknown word (CONTI)      -- each_segment<F, const CONTI: bool>(&self, mut index
./vm/src/protocol/iter.rs:128:13    - Unknown word (getiter)    -- let getiter = {
./vm/src/protocol/object.rs:30:44     - Unknown word (opid)       -- compare(self, other: Self, opid: PyComparisonOp, vm
./vm/src/protocol/object.rs:458:30    - Unknown word (icls)         -- } else if let Ok(icls) =
./vm/src/protocol/object.rs:60:30     - Unknown word (defaultvalue) -- fn length_hint(self, defaultvalue: usize, vm: &VirtualMachine
./vm/src/protocol/sequence.rs:126:30    - Unknown word (apear)      -- / if both arguments apear to be sequences, try
./vm/src/protocol/sequence.rs:238:59    - Unknown word (unsliceable) -- format!("'{}' object is unsliceable", self.obj.class())
./vm/src/py_io.rs:73:17     - Unknown word (sval)       -- let sval = s.as_str();
./vm/src/py_serde.rs:206:39    - Unknown word (deserializers) -- can be reused by other deserializers without such limit
./vm/src/stdlib/ast.rs:45:17     - Unknown word (numargs)    -- let numargs = args.args.len();
./vm/src/stdlib/atexit.rs:1:22      - Unknown word (exitfuncs)  -- pub use atexit::_run_exitfuncs;
./vm/src/stdlib/atexit.rs:50:9      - Unknown word (ncallbacks) -- fn _ncallbacks(vm: &VirtualMachine
./vm/src/stdlib/builtins.rs:374:42    - Unknown word (breakpointhook) -- attr(vm.ctx.intern_str("breakpointhook"), vm)
./vm/src/stdlib/builtins.rs:407:26    - Unknown word (normalish)      -- // everything is normalish, we can just rely on
./vm/src/stdlib/builtins.rs:561:45    - Unknown word (iret)           -- iterator).next(vm).map(|iret| match iret {
./vm/src/stdlib/codecs.rs:351:17    - Unknown word (pycodecs)   -- fn delegate_pycodecs(
./vm/src/stdlib/codecs.rs:381:8     - Unknown word (readbuffer) -- fn readbuffer_encode(args: FuncArgs
./vm/src/stdlib/collections.rs:142:12    - Unknown word (extendleft) -- fn extendleft(&self, iter: PyObjectRef
./vm/src/stdlib/collections.rs:224:12    - Unknown word (popleft)    -- fn popleft(&self, vm: &VirtualMachine
./vm/src/stdlib/errno.rs:30:13     - Unknown word (errname)    -- ($($errname:ident),*$(,)?) => {
./vm/src/stdlib/errno.rs:43:44     - Unknown word (winerrs)    -- should be here once winerrs are translated to errnos
./vm/src/stdlib/errno.rs:43:70     - Unknown word (errnos)     -- winerrs are translated to errnos but it messes up some
./vm/src/stdlib/errno.rs:46:15     - Unknown word (WSAHOS)     -- pub const WSAHOS: i32 = WSAHOST_NOT_FOUND
./vm/src/stdlib/errno.rs:46:29     - Unknown word (WSAHOST)    -- const WSAHOS: i32 = WSAHOST_NOT_FOUND as i32;
./vm/src/stdlib/errno.rs:512:31    - Unknown word (WSASY)      -- TODO: e!(cfg(windows), WSASY),
./vm/src/stdlib/errno.rs:513:22    - Unknown word (WSAEHOSTDOWN) -- e!(cfg(windows), WSAEHOSTDOWN),
./vm/src/stdlib/errno.rs:517:22    - Unknown word (WSAELOOP)     -- e!(cfg(windows), WSAELOOP),
./vm/src/stdlib/errno.rs:518:22    - Unknown word (WSAEMFILE)    -- e!(cfg(windows), WSAEMFILE),
./vm/src/stdlib/errno.rs:519:22    - Unknown word (WSAESTALE)    -- e!(cfg(windows), WSAESTALE),
./vm/src/stdlib/errno.rs:520:22    - Unknown word (WSAVERNOTSUPPORTED) -- e!(cfg(windows), WSAVERNOTSUPPORTED),
./vm/src/stdlib/errno.rs:522:22    - Unknown word (WSAEPROCLIM)        -- e!(cfg(windows), WSAEPROCLIM),
./vm/src/stdlib/errno.rs:523:22    - Unknown word (WSAEFAULT)          -- e!(cfg(windows), WSAEFAULT),
./vm/src/stdlib/errno.rs:524:22    - Unknown word (WSANOTINITIALISED)  -- e!(cfg(windows), WSANOTINITIALISED),
./vm/src/stdlib/errno.rs:525:22    - Unknown word (WSAEUSERS)          -- e!(cfg(windows), WSAEUSERS),
./vm/src/stdlib/errno.rs:526:31    - Unknown word (WSAMAKEASYNCREPL)   -- TODO: e!(cfg(windows), WSAMAKEASYNCREPL),
./vm/src/stdlib/errno.rs:527:22    - Unknown word (WSAENOPROTOOPT)     -- e!(cfg(windows), WSAENOPROTOOPT),
./vm/src/stdlib/errno.rs:530:22    - Unknown word (WSAENOTEMPTY)       -- e!(cfg(windows), WSAENOTEMPTY),
./vm/src/stdlib/errno.rs:531:22    - Unknown word (WSAESHUTDOWN)       -- e!(cfg(windows), WSAESHUTDOWN),
./vm/src/stdlib/errno.rs:533:22    - Unknown word (WSAETOOMANYREFS)    -- e!(cfg(windows), WSAETOOMANYREFS),
./vm/src/stdlib/errno.rs:534:22    - Unknown word (WSAEACCES)          -- e!(cfg(windows), WSAEACCES),
./vm/src/stdlib/errno.rs:535:31    - Unknown word (WSATR)              -- TODO: e!(cfg(windows), WSATR),
./vm/src/stdlib/errno.rs:536:22    - Unknown word (WSABASEERR)         -- e!(cfg(windows), WSABASEERR),
./vm/src/stdlib/errno.rs:537:31    - Unknown word (WSADESCRIPTIO)      -- TODO: e!(cfg(windows), WSADESCRIPTIO),
./vm/src/stdlib/errno.rs:538:22    - Unknown word (WSAEMSGSIZE)        -- e!(cfg(windows), WSAEMSGSIZE),
./vm/src/stdlib/errno.rs:539:22    - Unknown word (WSAEBADF)           -- e!(cfg(windows), WSAEBADF),
./vm/src/stdlib/errno.rs:541:31    - Unknown word (WSAGETSELECTERRO)   -- TODO: e!(cfg(windows), WSAGETSELECTERRO),
./vm/src/stdlib/errno.rs:543:22    - Unknown word (WSAENOBUFS)         -- e!(cfg(windows), WSAENOBUFS),
./vm/src/stdlib/errno.rs:544:22    - Unknown word (WSAEDISCON)         -- e!(cfg(windows), WSAEDISCON),
./vm/src/stdlib/errno.rs:546:22    - Unknown word (WSAEPROTOTYPE)      -- e!(cfg(windows), WSAEPROTOTYPE),
./vm/src/stdlib/errno.rs:549:22    - Unknown word (WSAEADDRNOTAVAIL)   -- e!(cfg(windows), WSAEADDRNOTAVAIL),
./vm/src/stdlib/errno.rs:550:22    - Unknown word (WSAEALREADY)        -- e!(cfg(windows), WSAEALREADY),
./vm/src/stdlib/errno.rs:551:22    - Unknown word (WSAEPROTONOSUPPORT) -- e!(cfg(windows), WSAEPROTONOSUPPORT),
./vm/src/stdlib/errno.rs:552:22    - Unknown word (WSASYSNOTREADY)     -- e!(cfg(windows), WSASYSNOTREADY),
./vm/src/stdlib/errno.rs:554:22    - Unknown word (WSAEPFNOSUPPORT)    -- e!(cfg(windows), WSAEPFNOSUPPORT),
./vm/src/stdlib/errno.rs:555:22    - Unknown word (WSAEOPNOTSUPP)      -- e!(cfg(windows), WSAEOPNOTSUPP),
./vm/src/stdlib/errno.rs:556:22    - Unknown word (WSAEISCONN)         -- e!(cfg(windows), WSAEISCONN),
./vm/src/stdlib/errno.rs:557:22    - Unknown word (WSAEDQUOT)          -- e!(cfg(windows), WSAEDQUOT),
./vm/src/stdlib/errno.rs:558:22    - Unknown word (WSAENOTCONN)        -- e!(cfg(windows), WSAENOTCONN),
./vm/src/stdlib/errno.rs:559:22    - Unknown word (WSAEREMOTE)         -- e!(cfg(windows), WSAEREMOTE),
./vm/src/stdlib/errno.rs:560:22    - Unknown word (WSAEINVAL)          -- e!(cfg(windows), WSAEINVAL),
./vm/src/stdlib/errno.rs:562:31    - Unknown word (WSAGETSELECTEVEN)   -- TODO: e!(cfg(windows), WSAGETSELECTEVEN),
./vm/src/stdlib/errno.rs:563:22    - Unknown word (WSAESOCKTNOSUPPORT) -- e!(cfg(windows), WSAESOCKTNOSUPPORT),
./vm/src/stdlib/errno.rs:564:31    - Unknown word (WSAGETASYNCERRO)    -- TODO: e!(cfg(windows), WSAGETASYNCERRO),
./vm/src/stdlib/errno.rs:565:31    - Unknown word (WSAMAKESELECTREPL)  -- TODO: e!(cfg(windows), WSAMAKESELECTREPL),
./vm/src/stdlib/errno.rs:566:31    - Unknown word (WSAGETASYNCBUFLE)   -- TODO: e!(cfg(windows), WSAGETASYNCBUFLE),
./vm/src/stdlib/errno.rs:567:22    - Unknown word (WSAEDESTADDRREQ)    -- e!(cfg(windows), WSAEDESTADDRREQ),
./vm/src/stdlib/errno.rs:569:22    - Unknown word (WSAENETRESET)       -- e!(cfg(windows), WSAENETRESET),
./vm/src/stdlib/errno.rs:570:31    - Unknown word (WSAN)               -- TODO: e!(cfg(windows), WSAN),
./vm/src/stdlib/errno.rs:636:9     - Unknown word (ERFKILL)            -- ERFKILL
./vm/src/stdlib/errno.rs:8:9       - Unknown word (errorcode)  -- let errorcode = vm.ctx.new_dict()
./vm/src/stdlib/imp.rs:161:9     - Unknown word (withdata)     -- withdata: OptionalArg<bool>,
./vm/src/stdlib/imp.rs:53:48     - Unknown word (unimportable) -- present but marked as unimportable, stops search).
./vm/src/stdlib/io.rs:1349:17   - Unknown word (fileobj)       -- pub fn repr_fileobj_name(obj: &PyObject
./vm/src/stdlib/io.rs:2040:11   - Unknown word (cratio)        -- b2cratio: f64,
./vm/src/stdlib/io.rs:2228:21   - Unknown word (encodefunc)    -- let encodefunc = encoding_name.and
./vm/src/stdlib/io.rs:2505:21   - Unknown word (ndecoded)      -- let ndecoded = decoder_decode(input
./vm/src/stdlib/io.rs:3436:12   - Unknown word (rawmode)       -- fn rawmode(&self) -> &'static str
./vm/src/stdlib/io.rs:3815:47   - Unknown word (NOINHERIT)     -- :O_BINARY | libc::O_NOINHERIT;
./vm/src/stdlib/io.rs:57:35     - Unknown word (unsupportedop) -- or_init(|| _io::make_unsupportedop(ctx))
./vm/src/stdlib/io.rs:663:13    - Unknown word (bufobj)        -- bufobj: PyObjectRef,
./vm/src/stdlib/io.rs:918:21    - Unknown word (memobj)        -- let memobj = PyMemoryView::from
./vm/src/stdlib/io.rs:924:21    - Unknown word (writebuf)      -- let writebuf = VecBuffer::from(v
./vm/src/stdlib/itertools.rs:1179:12   - Unknown word (teedata)    -- // teedata a python class
./vm/src/stdlib/itertools.rs:1757:21   - Unknown word (numactive)  -- let mut numactive = zelf.iterators.len
./vm/src/stdlib/itertools.rs:86:59     - Unknown word (leat)       -- from("function takes at leat 1 arguments (0 given
./vm/src/stdlib/marshal.rs:52:21     - Unknown word (pycomplex)  -- ref pycomplex @ PyComplex => {
./vm/src/stdlib/marshal.rs:65:21     - Unknown word (pyfrozen)   -- ref pyfrozen @ PyFrozenSet => {
./vm/src/stdlib/msvcrt.rs:13:17     - Unknown word (minwindef)  -- shared::minwindef::UINT,
./vm/src/stdlib/msvcrt.rs:19:13     - Unknown word (FAILCRITICALERRORS) -- SEM_FAILCRITICALERRORS, SEM_NOALIGNMENTFAULTEXCEPT
./vm/src/stdlib/msvcrt.rs:19:37     - Unknown word (NOALIGNMENTFAULTEXCEPT) -- FAILCRITICALERRORS, SEM_NOALIGNMENTFAULTEXCEPT, SEM_NOGPFAULTERRORBOX
./vm/src/stdlib/msvcrt.rs:19:65     - Unknown word (NOGPFAULTERRORBOX)      -- NOALIGNMENTFAULTEXCEPT, SEM_NOGPFAULTERRORBOX,
./vm/src/stdlib/msvcrt.rs:20:13     - Unknown word (NOOPENFILEERRORBOX)     -- SEM_NOOPENFILEERRORBOX,
./vm/src/stdlib/msvcrt.rs:29:13     - Unknown word (getwch)                 -- fn _getwch() -> u32;
./vm/src/stdlib/msvcrt.rs:30:13     - Unknown word (getche)                 -- fn _getche() -> i32;
./vm/src/stdlib/msvcrt.rs:31:13     - Unknown word (getwche)                -- fn _getwche() -> u32;
./vm/src/stdlib/msvcrt.rs:32:13     - Unknown word (putch)                  -- fn _putch(c: u32) -> i32;
./vm/src/stdlib/msvcrt.rs:33:13     - Unknown word (putwch)                 -- fn _putwch(c: u16) -> u32;
./vm/src/stdlib/nt.rs:112:8     - Unknown word (cwait)      -- // cwait is available on MSVC
./vm/src/stdlib/nt.rs:115:19    - Unknown word (termstat)   -- fn _cwait(termstat: *mut i32, procHandle
./vm/src/stdlib/nt.rs:167:17    - Unknown word (stdhandle)  -- let stdhandle = match fd {
./vm/src/stdlib/nt.rs:180:21    - Unknown word (csbi)       -- let mut csbi = wincon::CONSOLE_SCREEN
./vm/src/stdlib/nt.rs:196:13    - Unknown word (wexecv)     -- fn _wexecv(cmdname: *const u16
./vm/src/stdlib/nt.rs:196:20    - Unknown word (cmdname)    -- fn _wexecv(cmdname: *const u16, argv:
./vm/src/stdlib/nt.rs:242:9     - Unknown word (getfinalpathname) -- fn _getfinalpathname(path: OsPath, vm: &VirtualMac
./vm/src/stdlib/nt.rs:251:9     - Unknown word (getfullpathname)  -- fn _getfullpathname(path: OsPath, vm: &VirtualMac
./vm/src/stdlib/nt.rs:252:13    - Unknown word (wpath)            -- let wpath = path.to_widecstring
./vm/src/stdlib/nt.rs:284:9     - Unknown word (getvolumepathname) -- fn _getvolumepathname(path: OsPath, vm: &VirtualMac
./vm/src/stdlib/nt.rs:299:14    - Unknown word (splitroot)         -- fn _path_splitroot(path: OsPath, vm: &VirtualMac
./vm/src/stdlib/nt.rs:304:13    - Unknown word (backslashed)       -- let backslashed: Vec<_> = orig
./vm/src/stdlib/nt.rs:315:35    - Unknown word (PCWSTR)            -- wbuf = windows::core::PCWSTR::from_raw(backslashed
./vm/src/stdlib/nt.rs:337:9     - Unknown word (getdiskusage)      -- fn _getdiskusage(path: OsPath, vm: &VirtualMac
./vm/src/stdlib/nt.rs:339:30    - Unknown word (ntdef)             -- use winapi::shared::{ntdef::ULARGE_INTEGER, winerror
./vm/src/stdlib/operator.rs:392:17    - Unknown word (nattr)      -- let nattr = args.args.len();
./vm/src/stdlib/operator.rs:535:25    - Unknown word (pargs)      -- let mut pargs = vec![zelf.name.as
./vm/src/stdlib/os.rs:1134:8    - Unknown word (getcwdb)        -- fn getcwdb(vm: &VirtualMachine
./vm/src/stdlib/os.rs:1265:19   - Unknown word (modif)          -- let (acc, modif) = match (args.times
./vm/src/stdlib/os.rs:1334:27   - Unknown word (utimensat)      -- libc::utimensat(
./vm/src/stdlib/os.rs:1606:47   - Unknown word (consoleapi)     -- unsafe { winapi::um::consoleapi::GetConsoleCP() },
./vm/src/stdlib/os.rs:360:8     - Unknown word (closerange) -- fn closerange(fd_low: i32, fd_high
./vm/src/stdlib/os.rs:488:8     - Unknown word (mkdirs)     -- fn mkdirs(path: PyStrRef, vm:
./vm/src/stdlib/os.rs:499:11    - Unknown word (LISTDIR)    -- const LISTDIR_FD: bool = cfg!(all
./vm/src/stdlib/os.rs:502:8     - Unknown word (listdir)    -- fn listdir(path: OptionalArg<OsPathOrFd
./vm/src/stdlib/os.rs:612:9     - Unknown word (pathval)    -- pathval: PathBuf,
./vm/src/stdlib/os.rs:798:17    - Unknown word (entryref)   -- let entryref: &mut Option<fs::ReadDir
./vm/src/stdlib/os.rs:878:26    - Unknown word (structsequence) -- // TODO: unnamed structsequence fields
./vm/src/stdlib/os.rs:920:34    - Unknown word (ctim)           -- ctime = (stat.st_ctim.tv_sec, stat.st_ctim
./vm/src/stdlib/os.rs:996:33    - Unknown word (fileutils)      -- // Based on CPython fileutils.c' attributes_to_mode
./vm/src/stdlib/os.rs:999:48    - Unknown word (IFEXEC)         -- S_IFDIR | 0o111; /* IFEXEC for user,group,other
./vm/src/stdlib/posix.rs:1465:21   - Unknown word (attrp)      -- let mut attrp = unsafe {
./vm/src/stdlib/posix.rs:1605:34   - Unknown word (winsz)      -- nix::ioctl_read_bad!(winsz, libc::TIOCGWINSZ, libc
./vm/src/stdlib/posix.rs:77:16     - Unknown word (GRND)       -- use libc::{GRND_NONBLOCK, GRND_RANDOM
./vm/src/stdlib/pwd.rs:37:17     - Unknown word (pathbuf)    -- let pathbuf_lossy = |p: std::path
./vm/src/stdlib/pwd.rs:94:67     - Unknown word (fgetpwent)  -- thread safe. Could use fgetpwent_r, but this is easier
./vm/src/stdlib/pwd.rs:95:16     - Unknown word (GETPWALL)   -- static GETPWALL: parking_lot::Mutex
./vm/src/stdlib/signal.rs:113:9     - Unknown word (signalnum)  -- signalnum: i32,
./vm/src/stdlib/signal.rs:263:17    - Unknown word (sigbyte)    -- let sigbyte = signum as u8;
./vm/src/stdlib/signal.rs:82:16     - Unknown word (SIGPWR)     -- use libc::{SIGPWR, SIGSTKFLT};
./vm/src/stdlib/signal.rs:82:24     - Unknown word (SIGSTKFLT)  -- use libc::{SIGPWR, SIGSTKFLT};
./vm/src/stdlib/sre.rs:174:12    - Unknown word (pymatch)     -- fn pymatch(
./vm/src/stdlib/sre.rs:236:25    - Unknown word (matchlist)   -- let mut matchlist: Vec<PyObjectRef> =
./vm/src/stdlib/sre.rs:295:19    - Unknown word (subx)        -- Self::subx(zelf, sub_args, false
./vm/src/stdlib/sre.rs:30:57     - Unknown word (CODESIZE)   -- SRE_MAGIC as MAGIC, CODESIZE, MAXGROUPS, MAXREPEAT
./vm/src/stdlib/sre.rs:30:67     - Unknown word (MAXGROUPS)  -- as MAGIC, CODESIZE, MAXGROUPS, MAXREPEAT};
./vm/src/stdlib/sre.rs:30:78     - Unknown word (MAXREPEAT)  -- CODESIZE, MAXGROUPS, MAXREPEAT};
./vm/src/stdlib/sre.rs:311:25    - Unknown word (splitlist)   -- let mut splitlist: Vec<PyObjectRef> =
./vm/src/stdlib/sre.rs:33:8      - Unknown word (getcodesize) -- fn getcodesize() -> usize {
./vm/src/stdlib/sre.rs:37:14     - Unknown word (iscased)     -- fn ascii_iscased(ch: i32) -> bool {
./vm/src/stdlib/sre.rs:525:9     - Unknown word (lastindex)   -- lastindex: isize,
./vm/src/stdlib/sre.rs:576:12    - Unknown word (lastgroup)   -- fn lastgroup(&self) -> Option<PyStrRef
./vm/src/stdlib/sre.rs:686:12    - Unknown word (groupdict)   -- fn groupdict(
./vm/src/stdlib/sre.rs:84:9      - Unknown word (groupindex)  -- groupindex: PyDictRef,
./vm/src/stdlib/sre.rs:85:9      - Unknown word (indexgroup)  -- indexgroup: PyObjectRef,
./vm/src/stdlib/sre.rs:91:12     - Unknown word (isbytes)     -- // isbytes will be hanging (-1
./vm/src/stdlib/sys.rs:104:8     - Unknown word (platlibdir) -- fn platlibdir(_vm: &VirtualMachine
./vm/src/stdlib/sys.rs:105:33    - Unknown word (PLATLIBDIR) -- option_env!("RUSTPYTHON_PLATLIBDIR").unwrap_or("lib")
./vm/src/stdlib/sys.rs:151:38    - Unknown word (PYVENV)     -- Ok(var) = env::var("__PYVENV_LAUNCHER__") {
./vm/src/stdlib/sys.rs:273:9     - Unknown word (xoptions)   -- fn _xoptions(vm: &VirtualMachine
./vm/src/stdlib/sys.rs:287:8     - Unknown word (warnoptions) -- fn warnoptions(vm: &VirtualMachine
./vm/src/stdlib/sys.rs:30:81     - Unknown word (multiarch)  -- TODO: copy CPython's multiarch exactly,
./vm/src/stdlib/sys.rs:339:38    - Unknown word (PYTHONBREAKPOINT) -- var = std::env::var("PYTHONBREAKPOINT")
./vm/src/stdlib/sys.rs:34:34     - Unknown word (debugbuild) -- name = "_rustpython_debugbuild")]
./vm/src/stdlib/sys.rs:35:22     - Unknown word (DEBUGBUILD) -- const RUSTPYTHON_DEBUGBUILD: bool = cfg!(debug_assertions
./vm/src/stdlib/sys.rs:37:22     - Unknown word (abiflags)   -- #[pyattr(name = "abiflags")]
./vm/src/stdlib/sys.rs:38:22     - Unknown word (ABIFLAGS)   -- pub(crate) const ABIFLAGS: &str = "";
./vm/src/stdlib/sys.rs:3:70      - Unknown word (MULTIARCH)  -- module_def, DOC, MAXSIZE, MULTIARCH};
./vm/src/stdlib/sys.rs:408:8     - Unknown word (getdefaultencoding) -- fn getdefaultencoding() -> &'static str {
./vm/src/stdlib/sys.rs:413:8     - Unknown word (getrefcount)        -- fn getrefcount(obj: PyObjectRef) -
./vm/src/stdlib/sys.rs:418:8     - Unknown word (getrecursionlimit)  -- fn getrecursionlimit(vm: &VirtualMachine
./vm/src/stdlib/sys.rs:423:12    - Unknown word (Getsizeof)          -- struct GetsizeofArgs {
./vm/src/stdlib/sys.rs:430:8     - Unknown word (getsizeof)          -- fn getsizeof(args: GetsizeofArgs
./vm/src/stdlib/sys.rs:47:22     - Unknown word (hexversion) -- #[pyattr(name = "hexversion")]
./vm/src/stdlib/sys.rs:486:13    - Unknown word (sysinfoapi)         -- sysinfoapi::GetVersionExW,
./vm/src/stdlib/sys.rs:487:21    - Unknown word (LPOSVERSIONINFOEXW) -- winnt::{LPOSVERSIONINFOEXW, LPOSVERSIONINFOW, OSVERSIONI
./vm/src/stdlib/sys.rs:487:41    - Unknown word (LPOSVERSIONINFOW)   -- LPOSVERSIONINFOEXW, LPOSVERSIONINFOW, OSVERSIONINFOEXW},
./vm/src/stdlib/sys.rs:487:59    - Unknown word (OSVERSIONINFOEXW)   -- IONINFOEXW, LPOSVERSIONINFOW, OSVERSIONINFOEXW},
./vm/src/stdlib/sys.rs:48:11     - Unknown word (HEXVERSION) -- const HEXVERSION: usize = version::VERSION
./vm/src/stdlib/sys.rs:495:17    - Unknown word (osvi)               -- let osvi = &mut version as LPOSVERSION
./vm/src/stdlib/sys.rs:496:59    - Unknown word (OSVERSIONINFOW)     -- accepts a pointer of OSVERSIONINFOW, but winapi crate's
./vm/src/stdlib/sys.rs:52:11     - Unknown word (MAXUNICODE) -- const MAXUNICODE: u32 = std::char::MAX
./vm/src/stdlib/sys.rs:625:19    - Unknown word (profilefunc)        -- fn setprofile(profilefunc: PyObjectRef, vm: &VirtualMac
./vm/src/stdlib/sys.rs:653:17    - Unknown word (tracefunc)          -- fn settrace(tracefunc: PyObjectRef, vm: &VirtualMac
./vm/src/stdlib/sys.rs:714:18    - Unknown word (PYTHONSAFEPATH)     -- /// -P, `PYTHONSAFEPATH`
./vm/src/stdlib/sys.rs:764:51    - Unknown word (PYTHREAD)           -- stdlib::thread::_thread::PYTHREAD_NAME,
./vm/src/stdlib/sys.rs:862:9     - Unknown word (releaselevel)       -- releaselevel: &'static str,
./vm/src/stdlib/sys.rs:872:36    - Unknown word (RELEASELEVEL)       -- releaselevel: version::RELEASELEVEL,
./vm/src/stdlib/sys.rs:93:33     - Unknown word (BASEPREFIX) -- option_env!("RUSTPYTHON_BASEPREFIX").unwrap_or_else(||
./vm/src/stdlib/sysconfigdata.rs:20:19     - Unknown word (GETRANDOM)  -- "HAVE_GETRANDOM" => 1,
./vm/src/stdlib/thread.rs:301:25    - Unknown word (sents)      -- SENTINELS.with(|sents| {
./vm/src/stdlib/time.rs:17:19     - Unknown word (Timelike)   -- Datelike, Timelike,
./vm/src/stdlib/time.rs:17:9      - Unknown word (Datelike)   -- Datelike, Timelike,
./vm/src/stdlib/time.rs:181:11    - Unknown word (CFMT)       -- const CFMT: &str = "%a %b %e %H
./vm/src/stdlib/time.rs:250:24    - Unknown word (muldiv)     -- pub(super) fn time_muldiv(ticks: i64, mul: i6
./vm/src/stdlib/time.rs:251:13    - Unknown word (intpart)    -- let intpart = ticks / div;
./vm/src/stdlib/time.rs:399:21    - Unknown word (HIGHRES)    -- use libc::CLOCK_HIGHRES;
./vm/src/stdlib/time.rs:582:48    - Unknown word (gethrvtime) -- nanos(unsafe { libc::gethrvtime() }))
./vm/src/stdlib/time.rs:635:21    - Unknown word (profileapi) -- use winapi::um::profileapi::{QueryPerformanceCounter
./vm/src/stdlib/winapi.rs:186:31    - Unknown word (STARTUPINFOEXW) -- let mut si = winbase::STARTUPINFOEXW::default();
./vm/src/stdlib/winapi.rs:213:22    - Unknown word (getenvironment) -- .map(|m| getenvironment(m, vm))
./vm/src/stdlib/winapi.rs:218:13    - Unknown word (getattributelist) -- getattributelist(args.startup_info.get
./vm/src/stdlib/winapi.rs:251:41    - Unknown word (STARTUPINFO)      -- | winbase::EXTENDED_STARTUPINFO_PRESENT
./vm/src/stdlib/winapi.rs:307:9     - Unknown word (handlelist)       -- handlelist: Option<Vec<usize>>
./vm/src/stdlib/winapi.rs:39:13     - Unknown word (minwinbase) -- minwinbase::STILL_ACTIVE,
./vm/src/stdlib/winapi.rs:47:63     - Unknown word (READMODE)   -- ACCESS_INBOUND, PIPE_READMODE_MESSAGE, PIPE_TYPE_MESSAGE
./vm/src/stdlib/winapi.rs:48:79     - Unknown word (STARTF)     -- REALTIME_PRIORITY_CLASS, STARTF_USESHOWWINDOW,
./vm/src/stdlib/winapi.rs:48:86     - Unknown word (USESHOWWINDOW) -- PRIORITY_CLASS, STARTF_USESHOWWINDOW,
./vm/src/stdlib/winapi.rs:49:24     - Unknown word (USESTDHANDLES) -- STARTF_USESTDHANDLES, STD_ERROR_HANDLE, STD
./vm/src/stdlib/winapi.rs:56:87     - Unknown word (WRITECOPY)     -- READWRITE, PAGE_EXECUTE_WRITECOPY,
./vm/src/stdlib/winapi.rs:58:22     - Unknown word (WRITECOMBINE)  -- PAGE_WRITECOMBINE, PAGE_WRITECOPY, PROCESS
./vm/src/stdlib/winapi.rs:69:8      - Unknown word (husize)        -- fn husize(h: HANDLE) -> usize
./vm/src/stdlib/winreg.rs:191:13    - Unknown word (regval)     -- let regval = key
./vm/src/stdlib/winreg.rs:50:77     - Unknown word (QWORD)      -- MULTI_SZ, REG_NONE, REG_QWORD,
./vm/src/stdlib/winreg.rs:85:36     - Unknown word (predef)     -- let null_key = RegKey::predef(0 as ::winreg::HKEY
./vm/src/types/slot.rs:137:28    - Unknown word (TPFLAGS)    -- CPython default: Py_TPFLAGS_HAVE_STACKLESS_EXTENSION
./vm/src/types/slot.rs:141:43    - Unknown word (Subclassable) -- types created in Python. Subclassable and are a
./vm/src/types/slot.rs:379:29    - Unknown word (subslot)      -- macro_rules! toggle_subslot {
./vm/src/vm/mod.rs:558:29    - Unknown word (pyiter)     -- return self.map_pyiter(value, func);
./vm/src/vm/setting.rs:43:10     - Unknown word (Xfoo)       -- /// -Xfoo[=bar]
./vm/src/vm/setting.rs:55:10     - Unknown word (Wfoo)       -- /// -Wfoo
./vm/src/vm/thread.rs:38:24     - Unknown word (intp)       -- let vm_owns_obj = |intp: NonNull<VirtualMachine
./vm/src/vm/vm_new.rs:173:28    - Unknown word (ternop)     -- pub fn new_unsupported_ternop_error(
./wasm/README.md:1:16      - Unknown word (webassembly) -- # Compiling to webassembly
./wasm/demo/package.json:33:21     - Unknown word (Liddle)     -- "author": "Ryan Liddle",
./wasm/demo/package.json:7:10      - Unknown word (codemirror) -- "codemirror": "^5.42.0",
./wasm/demo/snippets/asyncbrowser.py:2:8       - Unknown word (asyncweb)   -- import asyncweb
./wasm/demo/snippets/import_pypi.py:19:5      - Unknown word (fmter)      -- fmter = pygments.formatters
./wasm/demo/snippets/import_pypi.py:19:52     - Unknown word (noclasses)  -- formatters.html.HtmlFormatter(noclasses=True, style="default
./wasm/demo/snippets/import_pypi.py:2:8       - Unknown word (whlimport)  -- import whlimport
./wasm/demo/snippets/mandelbrot.py:4:5       - Unknown word (mandel)     -- def mandel():
./wasm/lib/Cargo.toml:11:16     - Unknown word (cdylib)     -- crate-type = ["cdylib", "rlib"]
./wasm/lib/Cargo.toml:11:26     - Unknown word (rlib)       -- crate-type = ["cdylib", "rlib"]
./wasm/lib/Lib/_microdistlib.py:24:5      - Unknown word (distname)   -- distname = m.groups()[0]
./wasm/lib/Lib/asyncweb.py:204:18    - Unknown word (jsclosure)  -- @browser.jsclosure_once
./wasm/lib/Lib/asyncweb.py:209:47    - Unknown word (jsfloat)    -- cb.detach(), browser.jsfloat(ms))
./wasm/lib/Lib/browser.py:14:6      - Unknown word (jsstr)      -- "jsstr",
./wasm/lib/Lib/whlimport.py:106:13    - Unknown word (zname)        -- for zname, z in cls._packages
./wasm/lib/Lib/whlimport.py:132:9     - Unknown word (zipname)      -- zipname, slash, path = origin
./wasm/lib/Lib/whlimport.py:152:6     - Unknown word (searchorder)  -- _zip_searchorder = (
./wasm/lib/Lib/whlimport.py:161:17    - Unknown word (isbytecode)   -- for suffix, isbytecode, ispackage in _zip_searchorde
./wasm/lib/Lib/whlimport.py:45:9      - Unknown word (urlobj)       -- urlobj = urlparse(pkg)
./wasm/lib/Lib/whlimport.py:65:37     - Unknown word (distlib)      -- VersionMatcher from distlib
./wasm/lib/Lib/whlimport.py:76:53     - Unknown word (packagetype)  -- ver_downloads if dl["packagetype"] == "bdist_wheel")
./wasm/lib/Lib/whlimport.py:9:9       - Unknown word (microdistlib) -- import _microdistlib
./wasm/lib/src/convert.rs:117:33    - Unknown word (jsresult)   -- pyresult_to_jsresult(vm, result)
./wasm/lib/src/convert.rs:34:9      - Unknown word (jserr)      -- let jserr = vm.try_class("_js
./wasm/lib/src/js_module.rs:578:62    - Unknown word (awaitpromise) -- non-None value to an awaitpromise".to_owned(),
./wasm/notebook/README.md:99:73     - Unknown word (Etherpad)   -- Think Google Doc or Etherpad editing but for code
./wasm/notebook/package.json:9:10      - Unknown word (katex)      -- "katex": "^0.12.0",
./wasm/notebook/snippets/python-js.txt:15:7      - Unknown word (xrightarrow) -- H(t) \xrightarrow{write} \Big[A(t+1),
./wasm/notebook/snippets/python-markdown-math.txt:50:8      - Unknown word (Bmatrix)    -- \begin{Bmatrix}
./wasm/notebook/src/index.js:142:5     - Unknown word (pyvm)       -- let pyvm = null;
./wasm/notebook/src/index.js:20:10     - Unknown word (iomd)       -- import { iomdParser } from './parse
./wasm/notebook/src/index.js:9:25      - Unknown word (stex)       -- import 'codemirror/mode/stex/stex';
./wasm/notebook/src/parse.js:19:32     - Unknown word (Iomd)       -- function iomdParser(fullIomd) {
./wasm/notebook/src/parse.js:5:44      - Unknown word (hashcode)   -- implementation of java's hashcode method
./wasm/notebook/src/process.js:20:21     - Unknown word (Katex)      -- // Render Math with Katex
./wasm/tests/conftest.py:23:12     - Unknown word (sessionstart) -- def pytest_sessionstart(session):
./wasm/tests/conftest.py:34:12     - Unknown word (sessionfinish) -- def pytest_sessionfinish(session):
./wasm/tests/conftest.py:92:5      - Unknown word (wdriver)       -- def wdriver(request):
./wasm/tests/requirements.txt:3:1       - Unknown word (certifi)    -- certifi
./whats_left.py:100:18    - Unknown word (xxsubtype)  -- 'xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz
./whats_left.py:100:31    - Unknown word (xxlimited)  -- xxmodule', 'xxsubtype', 'xxlimited', '_xxtestfuzz'
./whats_left.py:100:45    - Unknown word (xxtestfuzz) -- xxsubtype', 'xxlimited', '_xxtestfuzz'
./whats_left.py:100:6     - Unknown word (xxmodule)   -- 'xxmodule', 'xxsubtype', 'xxlimited
./whats_left.py:101:22    - Unknown word (testcapi)   -- '_testbuffer', '_testcapi', '_testimportmultiple
./whats_left.py:101:35    - Unknown word (testimportmultiple) -- testbuffer', '_testcapi', '_testimportmultiple', '_testinternalcapi
./whats_left.py:101:58    - Unknown word (testinternalcapi)   -- testimportmultiple', '_testinternalcapi', '_testmultiphase'
./whats_left.py:101:7     - Unknown word (testbuffer) -- '_testbuffer', '_testcapi', '_testimportmu
./whats_left.py:101:79    - Unknown word (testmultiphase)     -- testinternalcapi', '_testmultiphase',
./whats_left.py:364:9     - Unknown word (implementeds)       -- not_implementeds = {}
./whats_left.py:387:5     - Unknown word (rustpymods)         -- rustpymods = {mod: dir_of_mod_or
./whats_left.py:398:18    - Unknown word (cpymod)             -- for modname, cpymod in cpymods.items():
./whats_left.py:399:9     - Unknown word (rustpymod)          -- rustpymod = rustpymods.get(modname
./whats_left.py:5:3       - Unknown word (cpymods)    -- # cpymods - a dictionary mapping
./whats_left.py:79:6      - Unknown word (fpectl)     -- "fpectl",
./whats_left.py:82:6      - Unknown word (macpath)    -- "macpath",
