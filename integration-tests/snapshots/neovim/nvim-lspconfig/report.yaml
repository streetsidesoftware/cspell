---
Repository: neovim/nvim-lspconfig
Url: https://github.com/neovim/nvim-lspconfig.git
Args: ["**"]
Summary:
  files: 237
  filesWithIssues: 233
  issues: 3361
  errors: 0
Errors: []

issues: 
  - "CONTRIBUTING.md:3:4     	Neovim          	U   	- [Neovim](https://neovim.io/"
  - "CONTRIBUTING.md:4:23    	luacheck        	U   	Lint task requires [luacheck](https://github.com"
  - "CONTRIBUTING.md:4:89    	stylua          	U   	luacheck#installation) and [stylua](https://github.com"
  - "CONTRIBUTING.md:5:42    	docgen          	U   	generated by `scripts/docgen.lua`."
  - "CONTRIBUTING.md:8:13    	lspconfig       	U   	## Scope of lspconfig"
  - "CONTRIBUTING.md:10:341  	nvim            	U   	dedicated plugin such as nvim-jdtls, nvim-metals,"
  - "CONTRIBUTING.md:10:346  	jdtls           	U   	plugin such as nvim-jdtls, nvim-metals, etc."
  - "CONTRIBUTING.md:24:121  	pyright         	U   	server is a unique name (`pyright`, `clangd`) or a commonly"
  - "CONTRIBUTING.md:24:132  	clangd          	U   	unique name (`pyright`, `clangd`) or a commonly used"
  - "CONTRIBUTING.md:24:306  	jsonnet         	U   	convention `x_ls` (`jsonnet_ls`)."
  - "CONTRIBUTING.md:52:27   	langserver      	U   	bin_name = 'pyright-langserver'"
  - "CONTRIBUTING.md:60:4    	pyproject       	U   	'pyproject.toml',"
  - "CONTRIBUTING.md:64:4    	Pipfile         	U   	'Pipfile',"
  - "CONTRIBUTING.md:65:4    	pyrightconfig   	U   	'pyrightconfig.json',"
  - "CONTRIBUTING.md:70:24   	organizeimports 	U   	command = 'pyright.organizeimports',"
  - "CONTRIBUTING.md:71:32   	bufnr           	U   	arguments = { vim.uri_from_bufnr(0) },"
  - "CONTRIBUTING.md:93:5    	Pyright         	U   	PyrightOrganizeImports = {"
  - "CONTRIBUTING.md:110:17  	neovim          	U   	lspconfig, like neovim core, follows the [convention"
  - "CONTRIBUTING.md:133:36  	luafile         	U   	Es +'set rtp+=$PWD' +'luafile scripts/docgen.lua'"
  - "doc/lspconfig.txt:1:29      	Nvim                	U   	lspconfig.txt* For Nvim version 0.7+"
  - "doc/lspconfig.txt:17:7      	autocommand         	U   	- an autocommand mapping that either"
  - "doc/lspconfig.txt:29:1      	QUICKSTART          	U   	QUICKSTART"
  - "doc/lspconfig.txt:29:70     	quickstart          	U   	*lspconfig-quickstart*"
  - "doc/lspconfig.txt:35:5      	require'lspconfig   	U   	require'lspconfig'.clangd.setup{}"
  - "doc/lspconfig.txt:46:11     	METAMETHOD          	U   	THE SETUP METAMETHOD"
  - "doc/lspconfig.txt:49:36     	metamethod          	U   	exposes a `setup {}` metamethod which makes it easy"
  - "doc/lspconfig.txt:60:49     	Nvim's              	U   	to wrap the call to Nvim's built-in"
  - "doc/lspconfig.txt:140:46    	blankspace          	U   	entry corresponds to the blankspace delimited part of"
  - "doc/lspconfig.txt:310:16    	newindex            	U   	The `configs.__newindex` metamethod consumes"
  - "doc/lspconfig.txt:320:13    	texlab              	U   	configs.texlab.buf_build = buf_build"
  - "doc/lspconfig.txt:340:30    	fname               	U   	root_dir = function(fname)"
  - "doc/lspconfig.txt:348:42    	autocmd             	U   	enable the FileType autocmd >"
  - "doc/lspconfig.txt:360:25    	overridable         	U   	each server, optionally overridable by the `filetypes` table"
  - "doc/lspconfig.txt:486:18    	noremap             	U   	local opts = { noremap=true, silent=true }"
  - "doc/lspconfig.txt:487:7     	keymap              	U   	vim.keymap.set('n', '<space>e'"
  - "doc/lspconfig.txt:490:50    	setloclist          	U   	space>q', vim.diagnostic.setloclist, opts)"
  - "doc/lspconfig.txt:496:41    	omnifunc            	U   	buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc"
  - "doc/lspconfig.txt:500:11    	bufopts             	U   	local bufopts = { noremap=true, silent"
  - "doc/lspconfig.txt:627:1     	composability       	U   	composability and flexibility of integratin"
  - "doc/lspconfig.txt:632:66    	featureful          	U   	usability. For more featureful"
  - "doc/lspconfig.txt:651:24    	norl                	U   	vim:tw=78:ts=8:ft=help:norl:"
  - "doc/server_configurations.md:9:4        	anakin          	U   	- [anakin_language_server](#anakin"
  - "doc/server_configurations.md:10:4       	angularls       	U   	- [angularls](#angularls)"
  - "doc/server_configurations.md:11:4       	ansiblels       	U   	- [ansiblels](#ansiblels)"
  - "doc/server_configurations.md:12:4       	antlersls       	U   	- [antlersls](#antlersls)"
  - "doc/server_configurations.md:16:4       	astro           	U   	- [astro](#astro)"
  - "doc/server_configurations.md:18:4       	bashls          	U   	- [bashls](#bashls)"
  - "doc/server_configurations.md:19:4       	beancount       	U   	- [beancount](#beancount)"
  - "doc/server_configurations.md:24:4       	bufls           	U   	- [bufls](#bufls)"
  - "doc/server_configurations.md:26:4       	ccls            	U   	- [ccls](#ccls)"
  - "doc/server_configurations.md:31:4       	codeqlls        	U   	- [codeqlls](#codeqlls)"
  - "doc/server_configurations.md:32:4       	coffeesense     	U   	- [coffeesense](#coffeesense)"
  - "doc/server_configurations.md:35:4       	cssls           	U   	- [cssls](#cssls)"
  - "doc/server_configurations.md:36:4       	cssmodules      	U   	- [cssmodules_ls](#cssmodules_ls)"
  - "doc/server_configurations.md:38:4       	dafny           	U   	- [dafny](#dafny)"
  - "doc/server_configurations.md:40:4       	dartls          	U   	- [dartls](#dartls)"
  - "doc/server_configurations.md:41:4       	denols          	U   	- [denols](#denols)"
  - "doc/server_configurations.md:42:4       	dhall           	U   	- [dhall_lsp_server](#dhall_lsp"
  - "doc/server_configurations.md:43:4       	diagnosticls    	U   	- [diagnosticls](#diagnosticls)"
  - "doc/server_configurations.md:45:4       	dockerls        	U   	- [dockerls](#dockerls)"
  - "doc/server_configurations.md:46:4       	dolmenls        	U   	- [dolmenls](#dolmenls)"
  - "doc/server_configurations.md:47:4       	dotls           	U   	- [dotls](#dotls)"
  - "doc/server_configurations.md:51:4       	elixirls        	U   	- [elixirls](#elixirls)"
  - "doc/server_configurations.md:52:4       	elmls           	U   	- [elmls](#elmls)"
  - "doc/server_configurations.md:56:4       	erlangls        	U   	- [erlangls](#erlangls)"
  - "doc/server_configurations.md:57:4       	esbonio         	U   	- [esbonio](#esbonio)"
  - "doc/server_configurations.md:64:4       	fortls          	U   	- [fortls](#fortls)"
  - "doc/server_configurations.md:65:4       	fsautocomplete  	U   	- [fsautocomplete](#fsautocomplete)"
  - "doc/server_configurations.md:67:4       	fstar           	U   	- [fstar](#fstar)"
  - "doc/server_configurations.md:69:4       	gdscript        	U   	- [gdscript](#gdscript)"
  - "doc/server_configurations.md:70:4       	ghcide          	U   	- [ghcide](#ghcide)"
  - "doc/server_configurations.md:71:4       	ghdl            	U   	- [ghdl_ls](#ghdl_ls)"
  - "doc/server_configurations.md:74:4       	glslls          	U   	- [glslls](#glslls)"
  - "doc/server_configurations.md:75:4       	golangci        	U   	- [golangci_lint_ls](#golangci_lint"
  - "doc/server_configurations.md:76:4       	gopls           	U   	- [gopls](#gopls)"
  - "doc/server_configurations.md:78:4       	grammarly       	U   	- [grammarly](#grammarly)"
  - "doc/server_configurations.md:80:4       	groovyls        	U   	- [groovyls](#groovyls)"
  - "doc/server_configurations.md:81:4       	haxe            	U   	- [haxe_language_server](#haxe"
  - "doc/server_configurations.md:83:4       	hhvm            	U   	- [hhvm](#hhvm)"
  - "doc/server_configurations.md:86:4       	hoon            	U   	- [hoon_ls](#hoon_ls)"
  - "doc/server_configurations.md:88:4       	idris           	U   	- [idris2_lsp](#idris2_lsp)"
  - "doc/server_configurations.md:89:4       	intelephense    	U   	- [intelephense](#intelephense)"
  - "doc/server_configurations.md:93:4       	jqls            	U   	- [jqls](#jqls)"
  - "doc/server_configurations.md:94:4       	jsonls          	U   	- [jsonls](#jsonls)"
  - "doc/server_configurations.md:96:4       	julials         	U   	- [julials](#julials)"
  - "doc/server_configurations.md:99:4       	leanls          	U   	- [leanls](#leanls)"
  - "doc/server_configurations.md:100:4      	lelwel          	U   	- [lelwel_ls](#lelwel_ls)"
  - "doc/server_configurations.md:101:4      	lemminx         	U   	- [lemminx](#lemminx)"
  - "doc/server_configurations.md:102:4      	ltex            	U   	- [ltex](#ltex)"
  - "doc/server_configurations.md:110:4      	mlir            	U   	- [mlir_lsp_server](#mlir_lsp"
  - "doc/server_configurations.md:111:9      	pdll            	U   	- [mlir_pdll_lsp_server](#mlir_pdll"
  - "doc/server_configurations.md:114:4      	neocmake        	U   	- [neocmake](#neocmake)"
  - "doc/server_configurations.md:117:4      	nimls           	U   	- [nimls](#nimls)"
  - "doc/server_configurations.md:120:4      	nxls            	U   	- [nxls](#nxls)"
  - "doc/server_configurations.md:121:4      	ocamlls         	U   	- [ocamlls](#ocamlls)"
  - "doc/server_configurations.md:122:4      	ocamllsp        	U   	- [ocamllsp](#ocamllsp)"
  - "doc/server_configurations.md:124:4      	omnisharp       	U   	- [omnisharp](#omnisharp)"
  - "doc/server_configurations.md:125:4      	opencl          	U   	- [opencl_ls](#opencl_ls)"
  - "doc/server_configurations.md:126:4      	openscad        	U   	- [openscad_ls](#openscad_ls)"
  - "doc/server_configurations.md:128:4      	pasls           	U   	- [pasls](#pasls)"
  - "doc/server_configurations.md:129:4      	perlls          	U   	- [perlls](#perlls)"
  - "doc/server_configurations.md:130:4      	perlnavigator   	U   	- [perlnavigator](#perlnavigator)"
  - "doc/server_configurations.md:131:4      	perlpls         	U   	- [perlpls](#perlpls)"
  - "doc/server_configurations.md:132:4      	phan            	U   	- [phan](#phan)"
  - "doc/server_configurations.md:133:4      	phpactor        	U   	- [phpactor](#phpactor)"
  - "doc/server_configurations.md:136:4      	prismals        	U   	- [prismals](#prismals)"
  - "doc/server_configurations.md:138:4      	prosemd         	U   	- [prosemd_lsp](#prosemd_lsp)"
  - "doc/server_configurations.md:141:4      	purescriptls    	U   	- [purescriptls](#purescriptls)"
  - "doc/server_configurations.md:142:4      	pylsp           	U   	- [pylsp](#pylsp)"
  - "doc/server_configurations.md:146:4      	qmlls           	U   	- [qmlls](#qmlls)"
  - "doc/server_configurations.md:150:4      	raku            	U   	- [raku_navigator](#raku_navigator"
  - "doc/server_configurations.md:154:4      	rescriptls      	U   	- [rescriptls](#rescriptls)"
  - "doc/server_configurations.md:156:4      	rnix            	U   	- [rnix](#rnix)"
  - "doc/server_configurations.md:157:4      	robotframework  	U   	- [robotframework_ls](#robotframework"
  - "doc/server_configurations.md:164:4      	scry            	U   	- [scry](#scry)"
  - "doc/server_configurations.md:166:4      	sixtyfps        	U   	- [sixtyfps](#sixtyfps)"
  - "doc/server_configurations.md:167:4      	slint           	U   	- [slint_lsp](#slint_lsp)"
  - "doc/server_configurations.md:170:4      	solang          	U   	- [solang](#solang)"
  - "doc/server_configurations.md:171:4      	solargraph      	U   	- [solargraph](#solargraph)"
  - "doc/server_configurations.md:176:4      	sourcekit       	U   	- [sourcekit](#sourcekit)"
  - "doc/server_configurations.md:177:4      	sourcery        	U   	- [sourcery](#sourcery)"
  - "doc/server_configurations.md:179:4      	sqlls           	U   	- [sqlls](#sqlls)"
  - "doc/server_configurations.md:180:4      	sqls            	U   	- [sqls](#sqls)"
  - "doc/server_configurations.md:181:4      	starlark        	U   	- [starlark_rust](#starlark_rust"
  - "doc/server_configurations.md:183:4      	stylelint       	U   	- [stylelint_lsp](#stylelint_lsp"
  - "doc/server_configurations.md:185:4      	svlangserver    	U   	- [svlangserver](#svlangserver)"
  - "doc/server_configurations.md:186:4      	svls            	U   	- [svls](#svls)"
  - "doc/server_configurations.md:188:4      	tailwindcss     	U   	- [tailwindcss](#tailwindcss)"
  - "doc/server_configurations.md:189:4      	taplo           	U   	- [taplo](#taplo)"
  - "doc/server_configurations.md:190:4      	tblgen          	U   	- [tblgen_lsp_server](#tblgen"
  - "doc/server_configurations.md:193:4      	terraformls     	U   	- [terraformls](#terraformls)"
  - "doc/server_configurations.md:195:4      	textlsp         	U   	- [textlsp](#textlsp)"
  - "doc/server_configurations.md:196:4      	tflint          	U   	- [tflint](#tflint)"
  - "doc/server_configurations.md:201:4      	typeprof        	U   	- [typeprof](#typeprof)"
  - "doc/server_configurations.md:203:4      	unocss          	U   	- [unocss](#unocss)"
  - "doc/server_configurations.md:204:4      	uvls            	U   	- [uvls](#uvls)"
  - "doc/server_configurations.md:205:4      	vala            	U   	- [vala_ls](#vala_ls)"
  - "doc/server_configurations.md:206:4      	vdmj            	U   	- [vdmj](#vdmj)"
  - "doc/server_configurations.md:207:4      	verible         	U   	- [verible](#verible)"
  - "doc/server_configurations.md:208:4      	veridian        	U   	- [veridian](#veridian)"
  - "doc/server_configurations.md:209:4      	veryl           	U   	- [veryl_ls](#veryl_ls)"
  - "doc/server_configurations.md:210:4      	vimls           	U   	- [vimls](#vimls)"
  - "doc/server_configurations.md:211:4      	visualforce     	U   	- [visualforce_ls](#visualforce_ls"
  - "doc/server_configurations.md:214:4      	vtsls           	U   	- [vtsls](#vtsls)"
  - "doc/server_configurations.md:215:4      	vuels           	U   	- [vuels](#vuels)"
  - "doc/server_configurations.md:216:4      	wgsl            	U   	- [wgsl_analyzer](#wgsl_analyzer"
  - "doc/server_configurations.md:217:4      	yamlls          	U   	- [yamlls](#yamlls)"
  - "doc/server_configurations.md:285:6      	anakinls        	U   	{ \"anakinls\" }"
  - "doc/server_configurations.md:299:7      	pyflakes        	U   	pyflakes_errors = { \"ImportStarNotPerm"
  - "doc/server_configurations.md:319:15     	ngserver        	U   	local cmd = {\"ngserver\", \"--stdio\", \"--tsProbeLocati"
  - "doc/server_configurations.md:457:34     	jorje           	U   	path = '/path/to/apex-jorje-lsp.jar',"
  - "doc/server_configurations.md:474:6      	apexcode        	U   	{ \"apexcode\" }"
  - "doc/server_configurations.md:482:17     	sfdx            	U   	root_pattern('sfdx-project.json')"
  - "doc/server_configurations.md:526:53     	FQBN            	U   	Board Name FQBN Core"
  - "doc/server_configurations.md:541:6      	fqbn            	U   	\"fqbn\": \"arduino:avr:uno\""
  - "doc/server_configurations.md:605:13     	vmasm           	U   	{ \"asm\", \"vmasm\" }"
  - "doc/server_configurations.md:619:17     	astrojs         	U   	npm install -g @astrojs/language-server"
  - "doc/server_configurations.md:801:7      	mktemp          	U   	(cd $(mktemp -d) \\"
  - "doc/server_configurations.md:836:25     	blurprint       	U   	Language server for the blurprint markup language, written"
  - "doc/server_configurations.md:876:2      	brightscript    	U   	`brightscript` can be installed via"
  - "doc/server_configurations.md:878:16     	brighterscript  	U   	npm install -g brighterscript"
  - "doc/server_configurations.md:940:23     	bufbuild        	U   	go install github.com/bufbuild/buf-language-server"
  - "doc/server_configurations.md:943:12     	Protobuf        	U   	bufls is a Protobuf language server compatible"
  - "doc/server_configurations.md:960:6      	proto           	U   	{ \"proto\" }"
  - "doc/server_configurations.md:1031:25    	frounding       	U   	excludeArgs = { \"-frounding-math\"} ;"
  - "doc/server_configurations.md:1054:18    	objc            	U   	{ \"c\", \"cpp\", \"objc\", \"objcpp\" }"
  - "doc/server_configurations.md:1054:26    	objcpp          	U   	c\", \"cpp\", \"objc\", \"objcpp\" }"
  - "doc/server_configurations.md:1078:18    	myproject       	U   	ln -s /path/to/myproject/build/compile_commands"
  - "doc/server_configurations.md:1090:3     	Clangd          	U   	- ClangdSwitchSourceHeader: Switch"
  - "doc/server_configurations.md:1103:36    	cuda            	U   	\"objc\", \"objcpp\", \"cuda\", \"proto\" }"
  - "doc/server_configurations.md:1145:6     	clar            	U   	{ \"clar\", \"clarity\" }"
  - "doc/server_configurations.md:1244:6     	codeql          	U   	{ \"codeql\", \"execute\", \"language"
  - "doc/server_configurations.md:1383:17    	langservers     	U   	npm i -g vscode-langservers-extracted"
  - "doc/server_configurations.md:1417:43    	bufdir          	U   	package.json\", \".git\") or bufdir"
  - "doc/server_configurations.md:1511:28    	Dafny           	U   	NeoVim support for the Dafny language server."
  - "doc/server_configurations.md:1544:25    	cuelang         	U   	Dagger's lsp server for cuelang."
  - "doc/server_configurations.md:1557:6     	cuelsp          	U   	{ \"cuelsp\" }"
  - "doc/server_configurations.md:1603:16    	Unimported      	U   	suggestFromUnimportedLibraries = true"
  - "doc/server_configurations.md:1608:17    	pubspec         	U   	root_pattern(\"pubspec.yaml\")"
  - "doc/server_configurations.md:1615:11    	Todos           	U   	showTodos = true"
  - "doc/server_configurations.md:1625:1     	Deno's          	U   	Deno's built-in language server"
  - "doc/server_configurations.md:1627:28    	codefences      	U   	appropriately highlight codefences returned from denols"
  - "doc/server_configurations.md:1644:3     	Denols          	U   	- DenolsCache: Cache a module"
  - "doc/server_configurations.md:1649:6     	deno            	U   	{ \"deno\", \"lsp\" }"
  - "doc/server_configurations.md:1827:34    	opam            	U   	can be installed via `opam`"
  - "doc/server_configurations.md:1847:14    	tptp            	U   	{ \"smt2\", \"tptp\", \"p\", \"cnf\", \"icnf"
  - "doc/server_configurations.md:1847:34    	icnf            	U   	tptp\", \"p\", \"cnf\", \"icnf\", \"zf\" }"
  - "doc/server_configurations.md:1997:33    	hanzi           	U   	symbols_only_follow_by_hanzi = false"
  - "doc/server_configurations.md:2027:20    	neovim's        	U   	Note: In order for neovim's built-in language server"
  - "doc/server_configurations.md:2098:16    	eelixir         	U   	{ \"elixir\", \"eelixir\", \"heex\", \"surface\""
  - "doc/server_configurations.md:2098:27    	heex            	U   	elixir\", \"eelixir\", \"heex\", \"surface\" }"
  - "doc/server_configurations.md:2135:8     	Analyse         	U   	elmAnalyseTrigger = \"change\""
  - "doc/server_configurations.md:2151:17    	lifeart         	U   	npm install -g @lifeart/ember-language-server"
  - "doc/server_configurations.md:2201:83    	eruby           	U   	sass\", \"scss\", \"less\", \"eruby\" }"
  - "doc/server_configurations.md:2261:8     	rebar           	U   	- [rebar3 3.9.1+](https://github"
  - "doc/server_configurations.md:2294:1     	Esbonio         	U   	Esbonio is a language server"
  - "doc/server_configurations.md:2314:21    	virtualenv      	U   	cmd = { '/path/to/virtualenv/bin/python', '-m',"
  - "doc/server_configurations.md:2564:18    	flowconfig      	U   	root_pattern(\".flowconfig\")"
  - "doc/server_configurations.md:2680:52    	FSAC            	U   	provided by FsAutoComplete (FSAC)."
  - "doc/server_configurations.md:2692:168   	adelarsq        	U   	fsharp/vim-fsharp), and [adelarsq/neofsharp.vim](https"
  - "doc/server_configurations.md:2692:177   	neofsharp       	U   	fsharp), and [adelarsq/neofsharp.vim](https://github"
  - "doc/server_configurations.md:2890:17    	lhaskell        	U   	{ \"haskell\", \"lhaskell\" }"
  - "doc/server_configurations.md:2894:49    	bazel           	U   	\"hie-bios\", \"BUILD.bazel\", \"cabal.config\", \"package"
  - "doc/server_configurations.md:2902:23    	VHDL            	U   	language server for VHDL, using ghdl as its backend"
  - "doc/server_configurations.md:2904:22    	pyghdl          	U   	ghdl-ls` is part of pyghdl, for installation instruction"
  - "doc/server_configurations.md:2922:6     	vhdl            	U   	{ \"vhdl\" }"
  - "doc/server_configurations.md:3021:36    	GLSL            	U   	server implementation for GLSL"
  - "doc/server_configurations.md:3024:10    	glsl            	U   	via the `glsl-language-server` AUR"
  - "doc/server_configurations.md:3075:23    	nametake        	U   	go install github.com/nametake/golangci-lint-langserver"
  - "doc/server_configurations.md:3095:12    	gomod           	U   	{ \"go\", \"gomod\" }"
  - "doc/server_configurations.md:3130:21    	gowork          	U   	{ \"go\", \"gomod\", \"gowork\", \"gotmpl\" }"
  - "doc/server_configurations.md:3130:31    	gotmpl          	U   	\"gomod\", \"gowork\", \"gotmpl\" }"
  - "doc/server_configurations.md:3148:66    	gradlew         	U   	vscode-gradle using `./gradlew installDist` and point"
  - "doc/server_configurations.md:3191:42    	Grammarly's     	U   	language server uses Grammarly's API, any document you"
  - "doc/server_configurations.md:3219:40    	YRCX            	U   	client_BaDkMgx4X19X9UxxYRCXZo\""
  - "doc/server_configurations.md:3263:31    	graphqlrc       	U   	root_pattern('.git', '.graphqlrc*', '.graphql.config"
  - "doc/server_configurations.md:3314:5     	Haxe            	U   	The Haxe language server can"
  - "doc/server_configurations.md:3318:17    	vshaxe          	U   	npx lix run vshaxe-build -t language-server"
  - "doc/server_configurations.md:3332:16    	HXML            	U   	By default, an HXML compiler arguments file"
  - "doc/server_configurations.md:3332:58    	hxml            	U   	arguments file named `build.hxml` is expected in"
  - "doc/server_configurations.md:3394:14    	verilog         	U   	{ \"vhdl\", \"verilog\", \"systemverilog\" }"
  - "doc/server_configurations.md:3394:25    	systemverilog   	U   	\"vhdl\", \"verilog\", \"systemverilog\" }"
  - "doc/server_configurations.md:3411:28    	HHVM            	U   	below for how to setup HHVM & typechecker:"
  - "doc/server_configurations.md:3411:35    	typechecker     	U   	how to setup HHVM & typechecker:"
  - "doc/server_configurations.md:3433:18    	hhconfig        	U   	root_pattern(\".hhconfig\")"
  - "doc/server_configurations.md:3445:5     	hlint           	U   	hlintOn = bool;"
  - "doc/server_configurations.md:3451:65    	floskell        	U   	brittany\", alternate \"floskell\");"
  - "doc/server_configurations.md:3510:6     	lspinfo         	U   	- `lspinfo` :"
  - "doc/server_configurations.md:3528:34    	cabalfmt        	U   	cabalFormattingProvider = \"cabalfmt\","
  - "doc/server_configurations.md:3543:23    	Hoon            	U   	language server for Hoon."
  - "doc/server_configurations.md:3547:25    	urbit           	U   	Start a fake ~zod with `urbit -F zod`."
  - "doc/server_configurations.md:3548:34    	Urbit           	U   	language server at the Urbit Dojo prompt with: `"
  - "doc/server_configurations.md:3647:5     	Idris           	U   	The Idris 2 language server."
  - "doc/server_configurations.md:3767:77    	gotos           	U   	completion, imports, gotos and formatting and some"
  - "doc/server_configurations.md:3779:55    	JDTLS           	U   	jvm arguments with the JDTLS_JVM_ARGS environment"
  - "doc/server_configurations.md:3784:25    	javaagent       	U   	export JDTLS_JVM_ARGS=\"-javaagent:$HOME/.local/share/java"
  - "doc/server_configurations.md:3840:21    	getcwd          	U   	} or vim.fn.getcwd()"
  - "doc/server_configurations.md:3890:13    	GOPATH          	U   	cp $(go env GOPATH)/bin/jq-lsp /usr/local"
  - "doc/server_configurations.md:3895:40    	setfiletype     	U   	BufRead,BufNewFile *.jq setfiletype jq\\]\\])"
  - "doc/server_configurations.md:3985:45    	Jsonnet         	U   	Protocol (LSP) server for Jsonnet."
  - "doc/server_configurations.md:4007:17    	libsonnet       	U   	{ \"jsonnet\", \"libsonnet\" }"
  - "doc/server_configurations.md:4015:17    	jsonnetfile     	U   	root_pattern(\"jsonnetfile.json\")"
  - "doc/server_configurations.md:4052:222   	joinpath        	U   	ls_install_path = joinpath(\\n get(DEPOT"
  - "doc/server_configurations.md:4052:346   	pushfirst       	U   	lspconfig\"\\n )\\n pushfirst!(LOAD_PATH, ls_install"
  - "doc/server_configurations.md:4052:416   	popfirst        	U   	LanguageServer\\n popfirst!(LOAD_PATH)\\n depot"
  - "doc/server_configurations.md:4052:744   	isempty         	U   	nothing ? nothing : isempty(p) ? nothing : p\\n"
  - "doc/server_configurations.md:4052:1432  	runlinter       	U   	depot_path)\\n server.runlinter = true\\n run(server"
  - "doc/server_configurations.md:4072:12    	fwcd            	U   	but by fwcd."
  - "doc/server_configurations.md:4145:17    	leanpkg         	U   	root_pattern(\"leanpkg.toml\") or root_pattern"
  - "doc/server_configurations.md:4196:17    	lakefile        	U   	root_pattern(\"lakefile.lean\", \"lean-toolchain"
  - "doc/server_configurations.md:4244:208   	xattr           	U   	Gatekeeper quarantine with `xattr -d com.apple.quarantine"
  - "doc/server_configurations.md:4292:27    	sweave          	U   	support org files or R sweave, users can define a"
  - "doc/server_configurations.md:4313:45    	plaintex        	U   	\"markdown\", \"org\", \"plaintex\", \"rst\", \"rnoweb\","
  - "doc/server_configurations.md:4313:64    	rnoweb          	U   	\"plaintex\", \"rst\", \"rnoweb\", \"tex\", \"pandoc\" }"
  - "doc/server_configurations.md:4313:81    	pandoc          	U   	, \"rnoweb\", \"tex\", \"pandoc\" }"
  - "doc/server_configurations.md:4400:18    	luarc           	U   	root_pattern(\".luarc.json\", \".luarc.jsonc"
  - "doc/server_configurations.md:4400:49    	luacheckrc      	U   	, \".luarc.jsonc\", \".luacheckrc\", \".stylua.toml\", \"stylua"
  - "doc/server_configurations.md:4458:7     	asmsyntax       	U   	vim.g.asmsyntax = 'asm68k'"
  - "doc/server_configurations.md:4537:39    	coursier        	U   	make sure to have [coursier](https://get-coursier"
  - "doc/server_configurations.md:4658:34    	MLIR            	U   	Server for the LLVM MLIR language"
  - "doc/server_configurations.md:4693:34    	PDLL            	U   	Server for the LLVM PDLL language"
  - "doc/server_configurations.md:4724:25    	metamath        	U   	Language Server for the metamath-zero theorem prover"
  - "doc/server_configurations.md:4810:6     	neocmakelsp     	U   	{ \"neocmakelsp\", \"--stdio\" }"
  - "doc/server_configurations.md:4849:72    	autostarting    	U   	(a prerequisite for autostarting a server),"
  - "doc/server_configurations.md:4881:75    	oxalica         	U   	profile install github:oxalica/nil` to install."
  - "doc/server_configurations.md:4915:2     	nimlsp          	U   	`nimlsp` can be installed via"
  - "doc/server_configurations.md:5018:6     	ttcn            	U   	{ \"ttcn\" }"
  - "doc/server_configurations.md:5118:56    	ocamllex        	U   	ocaml.interface\", \"ocaml.ocamllex\", \"reason\", \"dune\""
  - "doc/server_configurations.md:5166:1     	Omni            	U   	OmniSharp server based on"
  - "doc/server_configurations.md:5186:69    	codebases       	U   	is useful for big C# codebases"
  - "doc/server_configurations.md:5193:61    	rulesets        	U   	analyzers, code fixes and rulesets."
  - "doc/server_configurations.md:5200:36    	unimported      	U   	support for showing unimported types and unimported"
  - "doc/server_configurations.md:5210:17    	prereleases     	U   	sdk_include_prereleases = true,"
  - "doc/server_configurations.md:5400:8     	FPCDIR          	U   	export FPCDIR='/usr/lib/fpc/src'"
  - "doc/server_configurations.md:5401:31    	ppcx            	U   	'/usr/lib/fpc/3.2.2/ppcx64' # Path to the Free"
  - "doc/server_configurations.md:5402:8     	LAZARUSDIR      	U   	export LAZARUSDIR='/usr/lib/lazarus'"
  - "doc/server_configurations.md:5403:8     	FPCTARGET       	U   	export FPCTARGET=''"
  - "doc/server_configurations.md:5404:8     	FPCTARGETCPU    	U   	export FPCTARGETCPU='x86_64' #"
  - "doc/server_configurations.md:5453:99    	nostdio         	U   	\"--port 13603\", \"--nostdio 0\", \"--version 2.1."
  - "doc/server_configurations.md:5506:101   	perltidy        	U   	perlnavigator` at your `perltidy` and `perlcritic` configurati"
  - "doc/server_configurations.md:5506:116   	perlcritic      	U   	your `perltidy` and `perlcritic` configurations."
  - "doc/server_configurations.md:5700:46    	pwsh            	U   	languageserver is started in `pwsh` (PowerShell Core)."
  - "doc/server_configurations.md:5717:59    	PSES            	U   	NoProfile', '-Command', \"c:/PSES/Start-EditorServices"
  - "doc/server_configurations.md:5809:6     	swipl           	U   	{ \"swipl\", \"-g\", \"use_module"
  - "doc/server_configurations.md:5928:49    	hiera           	U   	\".puppet-lint.rc\", \"hiera.yaml\", \".git\")"
  - "doc/server_configurations.md:5940:6     	purescript      	U   	The `purescript-language-server` can"
  - "doc/server_configurations.md:5964:17    	spago           	U   	root_pattern('spago.dhall', 'psc-package"
  - "doc/server_configurations.md:5978:49    	pycodestyle     	U   	set the `pylsp.plugins.pycodestyle.ignore` option:"
  - "doc/server_configurations.md:5994:36    	pyls            	U   	a community fork of `pyls`."
  - "doc/server_configurations.md:6029:36    	featureset      	U   	an extremely limited featureset. It currently only supports"
  - "doc/server_configurations.md:6125:6     	qmljs           	U   	{ \"qmljs\" }"
  - "doc/server_configurations.md:6207:19    	CRAN            	U   	It is released on CRAN and can be easily installed"
  - "doc/server_configurations.md:6248:14    	raco            	U   	Install via `raco`: `raco pkg install"
  - "doc/server_configurations.md:6280:3     	Raku            	U   	A Raku language server"
  - "doc/server_configurations.md:6437:36    	remarkrc        	U   	given the following `.remarkrc.json`:"
  - "doc/server_configurations.md:6565:9     	rustup          	U   	cmd = {\"rustup\", \"run\", \"nightly\","
  - "doc/server_configurations.md:6595:73    	nixpkgs         	U   	completion and formatting via nixpkgs-fmt."
  - "doc/server_configurations.md:6658:22    	robotidy        	U   	util.root_pattern('robotidy.toml', 'pyproject.toml"
  - "doc/server_configurations.md:7016:2     	Slint           	U   	`Slint`'s language server"
  - "doc/server_configurations.md:7279:52    	remappings      	U   	json, just create a `remappings.txt` with:"
  - "doc/server_configurations.md:7424:17    	Sourcery        	U   	--- The Sourcery token for authenticating"
  - "doc/server_configurations.md:7565:1     	Sqls            	U   	Sqls can be installed via"
  - "doc/server_configurations.md:7565:46    	lighttiger      	U   	via `go get github.com/lighttiger2505/sqls`. Instructions"
  - "doc/server_configurations.md:7605:22    	refactorings    	U   	but does not support refactorings."
  - "doc/server_configurations.md:7638:11    	Steepfile       	U   	You need `Steepfile` to make it work. Generate"
  - "doc/server_configurations.md:7673:42    	stylelintplus   	U   	passing a `settings.stylelintplus` object to `stylelint"
  - "doc/server_configurations.md:7700:29    	sugarss         	U   	css\", \"less\", \"scss\", \"sugarss\", \"vue\", \"wxss\", \"javascript"
  - "doc/server_configurations.md:7700:47    	wxss            	U   	\"sugarss\", \"vue\", \"wxss\", \"javascript\", \"javascriptre"
  - "doc/server_configurations.md:7734:6     	svelteserver    	U   	{ \"svelteserver\", \"--stdio\" }"
  - "doc/server_configurations.md:7750:27    	Verilog         	U   	Language server for SystemVerilog."
  - "doc/server_configurations.md:7765:3     	Svlangserver    	U   	- SvlangserverBuildIndex: Instructs"
  - "doc/server_configurations.md:7855:6     	stree           	U   	{ \"stree\", \"lsp\" }"
  - "doc/server_configurations.md:7863:18    	streerc         	U   	root_pattern(\".streerc\", \"Gemfile\", \".git\""
  - "doc/server_configurations.md:7891:6     	aspnetcorerazor 	U   	{ \"aspnetcorerazor\", \"astro\", \"astro-markdown"
  - "doc/server_configurations.md:7891:76    	htmldjango      	U   	blade\", \"django-html\", \"htmldjango\", \"edge\", \"eelixir\""
  - "doc/server_configurations.md:7891:142   	gohtml          	U   	ejs\", \"erb\", \"eruby\", \"gohtml\", \"haml\", \"handlebars"
  - "doc/server_configurations.md:7891:152   	haml            	U   	\"eruby\", \"gohtml\", \"haml\", \"handlebars\", \"hbs"
  - "doc/server_configurations.md:7934:21    	Taplo           	U   	Language server for Taplo, a TOML toolkit."
  - "doc/server_configurations.md:7991:6     	tablegen        	U   	{ \"tablegen\" }"
  - "doc/server_configurations.md:8005:1     	luarocks        	U   	luarocks install --dev teal-language"
  - "doc/server_configurations.md:8027:17    	tlconfig        	U   	root_pattern(\"tlconfig.lua\", \".git\")"
  - "doc/server_configurations.md:8151:3     	Texlab          	U   	- TexlabBuild: Build the current"
  - "doc/server_configurations.md:8172:7     	bibtex          	U   	bibtexFormatter = \"texlab\""
  - "doc/server_configurations.md:8174:40    	nonstopmode     	U   	pdf\", \"-interaction=nonstopmode\", \"-synctex=1\", \"%f"
  - "doc/server_configurations.md:8174:56    	synctex         	U   	interaction=nonstopmode\", \"-synctex=1\", \"%f\" },"
  - "doc/server_configurations.md:8175:23    	latexmk         	U   	executable = \"latexmk\","
  - "doc/server_configurations.md:8179:7     	chktex          	U   	chktex = {"
  - "doc/server_configurations.md:8188:25    	latexindent     	U   	latexFormatter = \"latexindent\","
  - "doc/server_configurations.md:8234:7     	analysers       	U   	analysers = {"
  - "doc/server_configurations.md:8235:9     	languagetool    	U   	languagetool = {"
  - "doc/server_configurations.md:8262:3     	pluggable       	U   	A pluggable Terraform linter that"
  - "doc/server_configurations.md:8342:17    	Tiltfile        	U   	autocmd BufRead Tiltfile setf=tiltfile"
  - "doc/server_configurations.md:8342:26    	setf            	U   	autocmd BufRead Tiltfile setf=tiltfile"
  - "doc/server_configurations.md:8342:31    	tiltfile        	U   	BufRead Tiltfile setf=tiltfile"
  - "doc/server_configurations.md:8637:5     	VDMJ            	U   	The VDMJ language server can"
  - "doc/server_configurations.md:8670:6     	vdmsl           	U   	{ \"vdmsl\", \"vdmpp\", \"vdmrt\""
  - "doc/server_configurations.md:8670:15    	vdmpp           	U   	{ \"vdmsl\", \"vdmpp\", \"vdmrt\" }"
  - "doc/server_configurations.md:8670:24    	vdmrt           	U   	\"vdmsl\", \"vdmpp\", \"vdmrt\" }"
  - "doc/server_configurations.md:8680:5     	logfile         	U   	logfile = \"path.join(vim.fn"
  - "doc/server_configurations.md:8680:33    	stdpath         	U   	= \"path.join(vim.fn.stdpath 'cache', 'vdm-lsp.log"
  - "doc/server_configurations.md:8681:5     	mavenrepo       	U   	mavenrepo = \"$HOME/.m2/repository"
  - "doc/server_configurations.md:8765:21    	Veryl           	U   	Language server for Veryl"
  - "doc/server_configurations.md:8830:59    	autoload        	U   	runtime\", \"nvim\", \".git\", \"autoload\", \"plugin\" },"
  - "doc/server_configurations.md:8831:7     	runtimepath     	U   	runtimepath = true"
  - "doc/server_configurations.md:8834:5     	iskeyword       	U   	iskeyword = \"@,48-57,_,192-25"
  - "doc/server_configurations.md:8837:11    	Runtimepath     	U   	fromRuntimepath = true,"
  - "doc/server_configurations.md:8838:11    	Vimruntime      	U   	fromVimruntime = true"
  - "doc/server_configurations.md:8840:5     	vimruntime      	U   	vimruntime = \"\""
  - "doc/server_configurations.md:8857:21    	Visualforce     	U   	Language server for Visualforce."
  - "doc/server_configurations.md:8859:40    	vsix            	U   	installation, download the .vsix archive file from the"
  - "doc/server_configurations.md:8860:2     	forcedotcom     	U   	[forcedotcom/salesforcedx-vscode"
  - "doc/server_configurations.md:8860:14    	salesforcedx    	U   	[forcedotcom/salesforcedx-vscode](https://github"
  - "doc/server_configurations.md:8925:6     	vlang           	U   	{ \"vlang\" }"
  - "doc/server_configurations.md:8985:29    	yourusernamehere	U   	global_ts = '/home/[yourusernamehere]/.npm/lib/node_modules"
  - "doc/server_configurations.md:9129:7     	vetur           	U   	vetur = {"
  - "doc/server_configurations.md:9207:10    	modeline        	U   	1. Add a modeline to the file. A modeline"
  - "doc/server_configurations.md:9236:43    	yammls          	U   	is special-cased in yammls, see the following upstream"
  - "doc/server_configurations.txt:2987:3    	pnpm    	U   	pnpm add -D @glint/core"
  - "doc/server_configurations.txt:7891:273  	nunjucks	U   	\"mustache\", \"njk\", \"nunjucks\", \"php\", \"razor\", \"slim"
  - "doc/server_configurations.txt:7891:332  	postcss 	U   	twig\", \"css\", \"less\", \"postcss\", \"sass\", \"scss\", \"stylus"
  - "flake.nix:2:18      	Quickstart  	U   	description = \"Quickstart configurations for the"
  - "flake.nix:4:36      	numtide     	U   	utils.url = \"github:numtide/flake-utils\";"
  - "flake.nix:8:11      	pkgs        	U   	let pkgs = nixpkgs.legacyPackages"
  - "lua/lspconfig.lua:22:5      	sumneko 	U   	sumneko_lua = {"
  - "lua/lspconfig/configs.lua:34:39     	augroup     	U   	group = api.nvim_create_augroup('lspconfig', { clear"
  - "lua/lspconfig/configs.lua:92:15     	bufname     	U   	local bufname = api.nvim_buf_get_name"
  - "lua/lspconfig/configs.lua:105:24    	fnameescape 	U   	pattern = fn.fnameescape(root_dir) .. '/*',"
  - "lua/lspconfig/configs.lua:116:46    	bufs        	U   	ipairs(api.nvim_list_bufs()) do"
  - "lua/lspconfig/configs.lua:127:46    	lspconfig's 	U   	this is the root from lspconfig's perspective, as we use"
  - "lua/lspconfig/configs.lua:233:42    	buftype     	U   	buf_get_option(bufnr, 'buftype') == 'nofile' then"
  - "lua/lspconfig/configs.lua:233:56    	nofile      	U   	bufnr, 'buftype') == 'nofile' then"
  - "lua/lspconfig/server_configurations/apex_ls.lua:13:13   	Ddebug          	U   	'-Ddebug.internal.errors=true"
  - "lua/lspconfig/server_configurations/apex_ls.lua:16:13   	Dlwc            	U   	'-Dlwc.typegeneration.disabled"
  - "lua/lspconfig/server_configurations/apex_ls.lua:16:18   	typegeneration  	U   	'-Dlwc.typegeneration.disabled=true',"
  - "lua/lspconfig/server_configurations/astro.lua:12:95     	tsserverlibrary 	U   	typescript', 'lib', 'tsserverlibrary.js'))"
  - "lua/lspconfig/server_configurations/beancount.lua:10:34     	beancout	U   	this is the path to the beancout journal file"
  - "lua/lspconfig/server_configurations/codeqlls.lua:9:35       	qlpack  	U   	util.root_pattern 'qlpack.yml',"
  - "lua/lspconfig/server_configurations/elmls.lua:19:13     	ashkan  	U   	-- TODO(ashkan) if we comment this"
  - "lua/lspconfig/server_configurations/eslint.lua:111:23   	fnamemodify 	U   	name = vim.fn.fnamemodify(new_root_dir, ':t')"
  - "lua/lspconfig/server_configurations/eslint.lua:126:15   	sysname     	U   	local sysname = vim.loop.os_uname"
  - "lua/lspconfig/server_configurations/glint.lua:33:9      	glintrc 	U   	'.glintrc.yml',"
  - "lua/lspconfig/server_configurations/groovyls.lua:12:33      	Jenkinsfile 	U   	return util.root_pattern 'Jenkinsfile'(fname) or util.find"
  - "lua/lspconfig/server_configurations/hls.lua:32:13   	chanid  	U   	local chanid = vim.fn.jobstart({"
  - "lua/lspconfig/server_configurations/hls.lua:32:29   	jobstart	U   	local chanid = vim.fn.jobstart({ cfg.cmd[1], '--version"
  - "lua/lspconfig/server_configurations/hls.lua:33:14   	jobwait 	U   	vim.fn.jobwait { chanid }"
  - "lua/lspconfig/server_configurations/idris2_lsp.lua:7:37     	ipkg	U   	util.root_pattern '*.ipkg',"
  - "lua/lspconfig/server_configurations/intelephense.lua:34:77      	tmpdir  	U   	dir. Defaults to os.tmpdir()."
  - "lua/lspconfig/server_configurations/intelephense.lua:36:9       	licence 	U   	licenceKey = Optional licence"
  - "lua/lspconfig/server_configurations/jdtls.lua:50:32     	codeaction  	U   	function on_textdocument_codeaction(err, actions, ctx)"
  - "lua/lspconfig/server_configurations/jdtls.lua:52:15     	steelsojka  	U   	-- TODO: (steelsojka) Handle more than one"
  - "lua/lspconfig/server_configurations/jdtls.lua:67:29     	applyedit   	U   	function on_workspace_applyedit(err, workspace_edit"
  - "lua/lspconfig/server_configurations/jdtls.lua:74:12     	echohl      	U   	command 'echohl ModeMsg'"
  - "lua/lspconfig/server_configurations/jsonnet_ls.lua:23:33    	JSONNET 	U   	not new_config.cmd_env.JSONNET_PATH then"
  - "lua/lspconfig/server_configurations/lean3ls.lua:21:18   	endpos  	U   	local _, endpos = fname:find '/lean"
  - "lua/lspconfig/server_configurations/ocamllsp.lua:6:3        	ocamlinterface  	U   	ocamlinterface = 'ocaml.interface'"
  - "lua/lspconfig/server_configurations/ocamllsp.lua:12:37      	ftype           	U   	language_id = function(_, ftype)"
  - "lua/lspconfig/server_configurations/omnisharp.lua:47:70     	getpid      	U   	hostPID', tostring(vim.fn.getpid()) })"
  - "lua/lspconfig/server_configurations/omnisharp.lua:73:50     	Prereleases 	U   	config.cmd, 'Sdk:IncludePrereleases=true')"
  - "lua/lspconfig/server_configurations/please.lua:7:36     	plzconfig   	U   	util.root_pattern '.plzconfig',"
  - "lua/lspconfig/server_configurations/reason_ls.lua:7:35      	bsconfig	U   	util.root_pattern('bsconfig.json', '.git'),"
  - "lua/lspconfig/server_configurations/scheme_langserver.lua:5:4       	Akku	U   	'Akku.manifest',"
  - "lua/lspconfig/server_configurations/sourcery.lua:16:53      	APPDATA     	U   	windows and vim.fn.getenv 'APPDATA' or vim.fn.expand '"
  - "lua/lspconfig/server_configurations/sourcery.lua:19:13      	filereadable	U   	if vim.fn.filereadable(auth_file_path) =="
  - "lua/lspconfig/server_configurations/sourcery.lua:20:28      	readfile    	U   	local content = vim.fn.readfile(auth_file_path)"
  - "lua/lspconfig/server_configurations/sqlls.lua:7:36      	sqllsrc 	U   	util.root_pattern '.sqllsrc.json',"
  - "lua/lspconfig/server_configurations/stylelint_lsp.lua:11:5      	stylelintrc 	U   	'.stylelintrc',"
  - "lua/lspconfig/server_configurations/svlangserver.lua:20:35      	cword   	U   	= { vim.fn.expand '<cword>' },"
  - "lua/lspconfig/server_configurations/texlab.lua:14:3     	Unconfigured	U   	Unconfigured = 3,"
  - "lua/lspconfig/server_configurations/texlab.lua:71:34    	latexmkrc   	U   	util.root_pattern '.latexmkrc'(fname) or util.find"
  - "lua/lspconfig/server_configurations/textlsp.lua:20:69   	enaled  	U   	page. LanguageTool is enaled here"
  - "lua/lspconfig/server_configurations/vdmj.lua:24:9       	subdirs     	U   	local subdirs = function(file)"
  - "lua/lspconfig/server_configurations/vdmj.lua:29:29      	readdir     	U   	candidates = vim.fn.readdir(path, subdirs)"
  - "lua/lspconfig/server_configurations/vdmj.lua:35:37      	startpath   	U   	find_vscode_ancestor(startpath)"
  - "lua/lspconfig/server_configurations/vdmj.lua:103:11     	classpath   	U   	local classpath = table.concat({"
  - "lua/lspconfig/server_configurations/vdmj.lua:114:9      	Dlsp        	U   	'-Dlsp.log.filename=' .. config"
  - "lua/lspconfig/ui/lspinfo.lua:11:7       	helptags        	U   	local helptags = {"
  - "lua/lspconfig/ui/lspinfo.lua:93:39      	helptag         	U   	vim.tbl_map(function(helptag)"
  - "lua/lspconfig/ui/lspinfo.lua:115:17     	realpath        	U   	fname = uv.fs_realpath(fname) or fn.fnamemodify"
  - "lua/lspconfig/ui/lspinfo.lua:127:49     	trimempty       	U   	vim.split(root, sep, { trimempty = true })"
  - "lua/lspconfig/ui/lspinfo.lua:188:27     	breakindent     	U   	windows.default_options.breakindent = true"
  - "lua/lspconfig/ui/lspinfo.lua:189:27     	breakindentopt  	U   	windows.default_options.breakindentopt = 'shift:25'"
  - "lua/lspconfig/ui/lspinfo.lua:190:27     	showbreak       	U   	windows.default_options.showbreak = 'NONE'"
  - "lua/lspconfig/ui/lspinfo.lua:194:30     	bufhidden       	U   	nvim_set_option_value('bufhidden', 'wipe', { buf = bufnr"
  - "lua/lspconfig/ui/lspinfo.lua:276:20     	autocmds        	U   	api.nvim_clear_autocmds { group = augroup, buffer"
  - "lua/lspconfig/ui/lspinfo.lua:282:57     	nowait          	U   	close, { buffer = bufnr, nowait = true })"
  - "lua/lspconfig/ui/lspinfo.lua:291:10     	matchadd        	U   	vim.fn.matchadd("
  - "lua/lspconfig/ui/lspinfo.lua:348:25     	concealcursor   	U   	vim.wo[info.win_id].concealcursor = 'niv'"
  - "lua/lspconfig/ui/lspinfo.lua:349:25     	conceallevel    	U   	vim.wo[info.win_id].conceallevel = 2"
  - "lua/lspconfig/ui/windows.lua:1:57       	vnim        	U   	modified from plenary.vnim by"
  - "lua/lspconfig/ui/windows.lua:2:7        	Devries     	U   	-- TJ Devries. It is not a stable"
  - "lua/lspconfig/ui/windows.lua:11:18      	deepcopy    	U   	original = vim.deepcopy(original)"
  - "lua/lspconfig/ui/windows.lua:59:41      	percentags  	U   	that takes up certain percentags of the current screen"
  - "lua/lspconfig/ui/windows.lua:109:36     	winhl       	U   	set_option(win_id, 'winhl', 'FloatBorder:LspInfoBorder"
  - "lua/lspconfig/ui/windows.lua:119:36     	cursorcolumn	U   	set_option(win_id, 'cursorcolumn', false)"
  - "lua/lspconfig/ui/windows.lua:121:35     	shiftwidth  	U   	buf_set_option(bufnr, 'shiftwidth', 2)"
  - "lua/lspconfig/util.lua:25:74    	zipfile     	U   	or bufname:match '^zipfile://' or bufname:match"
  - "lua/lspconfig/util.lua:25:105   	tarfile     	U   	or bufname:match '^tarfile:' then"
  - "lua/lspconfig/util.lua:76:32    	nargs       	U   	Splits strings like \"-nargs=* -complete=customlist"
  - "lua/lspconfig/util.lua:76:50    	customlist  	U   	\"-nargs=* -complete=customlist,v:lua.something\" into"
  - "lua/lspconfig/util.lua:92:79    	fargs       	U   	name][1](unpack(info.fargs))"
  - "lua/lspconfig/util.lua:181:41   	rootdir     	U   	path until we find the rootdir."
  - "lua/lspconfig/util.lua:356:70   	Filetyp     	U   	project. file A trigger Filetyp event"
  - "lua/lspconfig/util.lua:360:48   	regisert    	U   	workspaceFolders then regisert File B root into workspaceFol"
  - "lua/lspconfig/util.lua:461:47   	worktrees   	U   	directories and git files (worktrees)"
  - "lua/lspconfig/util.lua:551:45   	servername  	U   	client_by_name(bufnr, servername)"
  - "nvim-lspconfig-scm-1.rockspec:1:8       	MODREV  	U   	local _MODREV, _SPECREV = 'scm',"
  - "nvim-lspconfig-scm-1.rockspec:1:17      	SPECREV 	U   	local _MODREV, _SPECREV = 'scm', '-1'"
  - "nvim-lspconfig-scm-1.rockspec:3:1       	rockspec	U   	rockspec_format = \"3.0\""
  - "nvim-lspconfig-scm-1.rockspec:8:56      	Neovim's	U   	common configurations for Neovim's built-in language server"
  - "plugin/lspconfig.lua:62:14      	scriptnames 	U   	-- script in scriptnames to be executed is lspconfig"
  - "plugin/lspconfig.lua:150:26     	tabnew      	U   	vim.cmd(string.format('tabnew %s', lsp.get_log_path"
  - "README.md:20:10     	wbthomason  	U   	use 'wbthomason/packer.nvim' -- Package"
  - "README.md:46:129    	keymaps     	U   	figuration provides suggested keymaps for the most commonly"
  - "scripts/docgen.lua:51:29    	indentlvl   	U   	function make_section(indentlvl, sep, parts)"
  - "scripts/docgen.lua:154:15   	tempdir     	U   	local tempdir = os.getenv 'DOCGEN"
  - "scripts/docgen.lua:154:36   	DOCGEN      	U   	tempdir = os.getenv 'DOCGEN_TEMPDIR' or uv.fs_mkdtemp"
  - "scripts/docgen.lua:154:43   	TEMPDIR     	U   	= os.getenv 'DOCGEN_TEMPDIR' or uv.fs_mkdtemp '"
  - "scripts/docgen.lua:199:40   	excape      	U   	local function excape_markdown_punctuations"
  - "scripts/docgen.lua:275:9    	copyfile    	U   	uv.fs_copyfile('doc/server_configurations"
  - "scripts/run_test.sh:11:6    	functionaltest  	U   	make functionaltest \\"
  - "scripts/run_test.sh:12:18   	lpath           	U   	BUSTED_ARGS=\"--lpath=$PJ_ROOT/?.lua --lpath"
  - "test/lspconfig_spec.lua:22:13   	doesnt  	U   	it('doesnt escape if not needed"
  - "test/lspconfig_spec.lua:211:26  	subpaths	U   	it('strips zipfile subpaths', function()"
  - "test/minimal_init.lua:9:28      	VIMRUNTIME  	U   	cmd [[set runtimepath=$VIMRUNTIME]]"
  - "test/minimal_init.lua:13:14     	packpath    	U   	vim.cmd('set packpath=' .. join_paths(temp"
  - "test/minimal_init.lua:18:11     	isdirectory 	U   	if vim.fn.isdirectory(lspconfig_path) ~="
