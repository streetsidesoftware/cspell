---
Repository: neovim/nvim-lspconfig
Url: https://github.com/neovim/nvim-lspconfig.git
Args: '["**"]'
Summary:
  files: 305
  filesWithIssues: 301
  issues: 4008
  errors: 0
Errors: []

issues:
  - "CONTRIBUTING.md:3:4         Neovim              U       - [Neovim](https://neovim.io/"
  - "CONTRIBUTING.md:4:23        luacheck            U       Lint task requires [luacheck](https://github.com"
  - "CONTRIBUTING.md:4:89        stylua              U       luacheck#installation) and [stylua](https://github.com"
  - "CONTRIBUTING.md:8:13        lspconfig           U       ## Scope of lspconfig"
  - "CONTRIBUTING.md:10:341      nvim                U       dedicated plugin such as nvim-jdtls, nvim-metals,"
  - "CONTRIBUTING.md:10:346      jdtls               U       plugin such as nvim-jdtls, nvim-metals, etc."
  - "CONTRIBUTING.md:24:121      pyright             U       server is a unique name (`pyright`, `clangd`) or a commonly"
  - "CONTRIBUTING.md:24:132      clangd              U       unique name (`pyright`, `clangd`) or a commonly used"
  - "CONTRIBUTING.md:24:306      jsonnet             U       convention `x_ls` (`jsonnet_ls`)."
  - "CONTRIBUTING.md:48:4        pyproject           U       'pyproject.toml',"
  - "CONTRIBUTING.md:52:4        Pipfile             U       'Pipfile',"
  - "CONTRIBUTING.md:53:4        pyrightconfig       U       'pyrightconfig.json',"
  - "CONTRIBUTING.md:58:24       organizeimports     U       command = 'pyright.organizeimports',"
  - "CONTRIBUTING.md:59:32       bufnr               U       arguments = { vim.uri_from_bufnr(0) },"
  - "CONTRIBUTING.md:66:22       langserver          U       cmd = { 'pyright-langserver', '--stdio' },"
  - "CONTRIBUTING.md:81:5        Pyright             U       PyrightOrganizeImports = {"
  - "CONTRIBUTING.md:98:17       neovim              U       lspconfig, like neovim core, follows the [convention"
  - "CONTRIBUTING.md:121:36      luafile             U       Es +'set rtp+=$PWD' +'luafile scripts/docgen.lua'"
  - "doc/lspconfig.txt:1:29          Nvim                    U       lspconfig.txt* For Nvim version 0.8+"
  - "doc/lspconfig.txt:17:7          autocommand             U       - an autocommand mapping that either"
  - "doc/lspconfig.txt:29:1          QUICKSTART              U       QUICKSTART"
  - "doc/lspconfig.txt:29:70         quickstart              U       *lspconfig-quickstart*"
  - "doc/lspconfig.txt:35:5          require'lspconfig       U       require'lspconfig'.clangd.setup{}"
  - "doc/lspconfig.txt:46:11         METAMETHOD              U       THE SETUP METAMETHOD"
  - "doc/lspconfig.txt:49:36         metamethod              U       exposes a `setup {}` metamethod which makes it easy"
  - "doc/lspconfig.txt:60:49         Nvim's                  U       to wrap the call to Nvim's built-in"
  - "doc/lspconfig.txt:140:46        blankspace              U       entry corresponds to the blankspace delimited part of"
  - "doc/lspconfig.txt:310:16        newindex                U       The `configs.__newindex` metamethod consumes"
  - "doc/lspconfig.txt:320:13        texlab                  U       configs.texlab.buf_build = buf_build"
  - "doc/lspconfig.txt:340:30        fname                   U       root_dir = function(fname)"
  - "doc/lspconfig.txt:348:42        autocmd                 U       enable the FileType autocmd >"
  - "doc/lspconfig.txt:360:25        overridable             U       each server, optionally overridable by the `filetypes` table"
  - "doc/lspconfig.txt:498:7         keymap                  U       vim.keymap.set('n', '<space>e'"
  - "doc/lspconfig.txt:501:50        setloclist              U       space>q', vim.diagnostic.setloclist)"
  - "doc/lspconfig.txt:506:33        augroup                 U       vim.api.nvim_create_augroup('UserLspConfig', {}"
  - "doc/lspconfig.txt:509:22        omnifunc                U       vim.bo[ev.buf].omnifunc = 'v:lua.vim.lsp.omnifunc"
  - "doc/lspconfig.txt:627:66        featureful              U       usability. For more featureful"
  - "doc/lspconfig.txt:646:24        norl                    U       vim:tw=78:ts=8:ft=help:norl:"
  - "doc/server_configurations.md:10:4           anakin              U       - [anakin_language_server](#anakin"
  - "doc/server_configurations.md:11:4           angularls           U       - [angularls](#angularls)"
  - "doc/server_configurations.md:12:4           ansiblels           U       - [ansiblels](#ansiblels)"
  - "doc/server_configurations.md:13:4           antlersls           U       - [antlersls](#antlersls)"
  - "doc/server_configurations.md:18:4           astro               U       - [astro](#astro)"
  - "doc/server_configurations.md:19:4           autotools           U       - [autotools_ls](#autotools_ls)"
  - "doc/server_configurations.md:22:4           bashls              U       - [bashls](#bashls)"
  - "doc/server_configurations.md:23:4           beancount           U       - [beancount](#beancount)"
  - "doc/server_configurations.md:31:4           bufls               U       - [bufls](#bufls)"
  - "doc/server_configurations.md:35:4           ccls                U       - [ccls](#ccls)"
  - "doc/server_configurations.md:37:4           circom              U       - [circom-lsp](#circom-lsp)"
  - "doc/server_configurations.md:43:4           codeqlls            U       - [codeqlls](#codeqlls)"
  - "doc/server_configurations.md:44:4           coffeesense         U       - [coffeesense](#coffeesense)"
  - "doc/server_configurations.md:45:4           contextive          U       - [contextive](#contextive)"
  - "doc/server_configurations.md:49:4           cssls               U       - [cssls](#cssls)"
  - "doc/server_configurations.md:50:4           cssmodules          U       - [cssmodules_ls](#cssmodules_ls)"
  - "doc/server_configurations.md:54:4           dafny               U       - [dafny](#dafny)"
  - "doc/server_configurations.md:56:4           dartls              U       - [dartls](#dartls)"
  - "doc/server_configurations.md:57:4           dcmls               U       - [dcmls](#dcmls)"
  - "doc/server_configurations.md:58:4           denols              U       - [denols](#denols)"
  - "doc/server_configurations.md:59:4           dhall               U       - [dhall_lsp_server](#dhall_lsp"
  - "doc/server_configurations.md:60:4           diagnosticls        U       - [diagnosticls](#diagnosticls)"
  - "doc/server_configurations.md:63:4           dockerls            U       - [dockerls](#dockerls)"
  - "doc/server_configurations.md:64:4           dolmenls            U       - [dolmenls](#dolmenls)"
  - "doc/server_configurations.md:65:4           dotls               U       - [dotls](#dotls)"
  - "doc/server_configurations.md:68:4           ecsact              U       - [ecsact](#ecsact)"
  - "doc/server_configurations.md:70:4           elixirls            U       - [elixirls](#elixirls)"
  - "doc/server_configurations.md:71:4           elmls               U       - [elmls](#elmls)"
  - "doc/server_configurations.md:77:4           erlangls            U       - [erlangls](#erlangls)"
  - "doc/server_configurations.md:78:4           esbonio             U       - [esbonio](#esbonio)"
  - "doc/server_configurations.md:86:4           fortls              U       - [fortls](#fortls)"
  - "doc/server_configurations.md:87:4           fsautocomplete      U       - [fsautocomplete](#fsautocomplete)"
  - "doc/server_configurations.md:89:4           fstar               U       - [fstar](#fstar)"
  - "doc/server_configurations.md:91:4           gdscript            U       - [gdscript](#gdscript)"
  - "doc/server_configurations.md:92:4           ghcide              U       - [ghcide](#ghcide)"
  - "doc/server_configurations.md:93:4           ghdl                U       - [ghdl_ls](#ghdl_ls)"
  - "doc/server_configurations.md:96:4           glsl                U       - [glsl_analyzer](#glsl_analyzer"
  - "doc/server_configurations.md:97:4           glslls              U       - [glslls](#glslls)"
  - "doc/server_configurations.md:98:4           golangci            U       - [golangci_lint_ls](#golangci_lint"
  - "doc/server_configurations.md:99:4           gopls               U       - [gopls](#gopls)"
  - "doc/server_configurations.md:101:4          grammarly           U       - [grammarly](#grammarly)"
  - "doc/server_configurations.md:103:4          groovyls            U       - [groovyls](#groovyls)"
  - "doc/server_configurations.md:105:4          haxe                U       - [haxe_language_server](#haxe"
  - "doc/server_configurations.md:108:4          hhvm                U       - [hhvm](#hhvm)"
  - "doc/server_configurations.md:111:4          hoon                U       - [hoon_ls](#hoon_ls)"
  - "doc/server_configurations.md:113:4          htmx                U       - [htmx](#htmx)"
  - "doc/server_configurations.md:115:4          idris               U       - [idris2_lsp](#idris2_lsp)"
  - "doc/server_configurations.md:116:4          intelephense        U       - [intelephense](#intelephense)"
  - "doc/server_configurations.md:120:4          jqls                U       - [jqls](#jqls)"
  - "doc/server_configurations.md:121:4          jsonls              U       - [jsonls](#jsonls)"
  - "doc/server_configurations.md:123:4          julials             U       - [julials](#julials)"
  - "doc/server_configurations.md:126:4          leanls              U       - [leanls](#leanls)"
  - "doc/server_configurations.md:127:4          lelwel              U       - [lelwel_ls](#lelwel_ls)"
  - "doc/server_configurations.md:128:4          lemminx             U       - [lemminx](#lemminx)"
  - "doc/server_configurations.md:130:4          ltex                U       - [ltex](#ltex)"
  - "doc/server_configurations.md:141:4          mlir                U       - [mlir_lsp_server](#mlir_lsp"
  - "doc/server_configurations.md:142:9          pdll                U       - [mlir_pdll_lsp_server](#mlir_pdll"
  - "doc/server_configurations.md:147:4          nelua               U       - [nelua_lsp](#nelua_lsp)"
  - "doc/server_configurations.md:148:4          neocmake            U       - [neocmake](#neocmake)"
  - "doc/server_configurations.md:153:4          nimls               U       - [nimls](#nimls)"
  - "doc/server_configurations.md:154:4          nixd                U       - [nixd](#nixd)"
  - "doc/server_configurations.md:157:4          nushell             U       - [nushell](#nushell)"
  - "doc/server_configurations.md:158:4          nxls                U       - [nxls](#nxls)"
  - "doc/server_configurations.md:159:4          ocamlls             U       - [ocamlls](#ocamlls)"
  - "doc/server_configurations.md:160:4          ocamllsp            U       - [ocamllsp](#ocamllsp)"
  - "doc/server_configurations.md:162:4          omnisharp           U       - [omnisharp](#omnisharp)"
  - "doc/server_configurations.md:163:4          opencl              U       - [opencl_ls](#opencl_ls)"
  - "doc/server_configurations.md:164:4          openedge            U       - [openedge_ls](#openedge_ls)"
  - "doc/server_configurations.md:165:4          openscad            U       - [openscad_ls](#openscad_ls)"
  - "doc/server_configurations.md:168:4          pasls               U       - [pasls](#pasls)"
  - "doc/server_configurations.md:169:4          perlls              U       - [perlls](#perlls)"
  - "doc/server_configurations.md:170:4          perlnavigator       U       - [perlnavigator](#perlnavigator)"
  - "doc/server_configurations.md:171:4          perlpls             U       - [perlpls](#perlpls)"
  - "doc/server_configurations.md:173:4          phan                U       - [phan](#phan)"
  - "doc/server_configurations.md:174:4          phpactor            U       - [phpactor](#phpactor)"
  - "doc/server_configurations.md:175:4          pkgbuild            U       - [pkgbuild_language_server](#pkgbuild"
  - "doc/server_configurations.md:179:4          prismals            U       - [prismals](#prismals)"
  - "doc/server_configurations.md:181:4          prosemd             U       - [prosemd_lsp](#prosemd_lsp)"
  - "doc/server_configurations.md:184:4          purescriptls        U       - [purescriptls](#purescriptls)"
  - "doc/server_configurations.md:185:4          pylsp               U       - [pylsp](#pylsp)"
  - "doc/server_configurations.md:186:4          pylyzer             U       - [pylyzer](#pylyzer)"
  - "doc/server_configurations.md:190:4          qmlls               U       - [qmlls](#qmlls)"
  - "doc/server_configurations.md:194:4          raku                U       - [raku_navigator](#raku_navigator"
  - "doc/server_configurations.md:196:4          regols              U       - [regols](#regols)"
  - "doc/server_configurations.md:199:4          rescriptls          U       - [rescriptls](#rescriptls)"
  - "doc/server_configurations.md:201:4          rnix                U       - [rnix](#rnix)"
  - "doc/server_configurations.md:202:4          robotframework      U       - [robotframework_ls](#robotframework"
  - "doc/server_configurations.md:204:4          rubocop             U       - [rubocop](#rubocop)"
  - "doc/server_configurations.md:211:4          scry                U       - [scry](#scry)"
  - "doc/server_configurations.md:213:4          sixtyfps            U       - [sixtyfps](#sixtyfps)"
  - "doc/server_configurations.md:214:4          slangd              U       - [slangd](#slangd)"
  - "doc/server_configurations.md:215:4          slint               U       - [slint_lsp](#slint_lsp)"
  - "doc/server_configurations.md:218:4          snyk                U       - [snyk_ls](#snyk_ls)"
  - "doc/server_configurations.md:219:4          solang              U       - [solang](#solang)"
  - "doc/server_configurations.md:220:4          solargraph          U       - [solargraph](#solargraph)"
  - "doc/server_configurations.md:224:16         nomicfoundation     U       - [solidity_ls_nomicfoundation](#solidity_ls_nomicfoundation"
  - "doc/server_configurations.md:226:4          sourcekit           U       - [sourcekit](#sourcekit)"
  - "doc/server_configurations.md:227:4          sourcery            U       - [sourcery](#sourcery)"
  - "doc/server_configurations.md:229:4          spyglassmc          U       - [spyglassmc_language_server](#spyglassmc"
  - "doc/server_configurations.md:230:4          sqlls               U       - [sqlls](#sqlls)"
  - "doc/server_configurations.md:231:4          sqls                U       - [sqls](#sqls)"
  - "doc/server_configurations.md:232:4          standardrb          U       - [standardrb](#standardrb)"
  - "doc/server_configurations.md:233:4          starlark            U       - [starlark_rust](#starlark_rust"
  - "doc/server_configurations.md:234:4          statix              U       - [statix](#statix)"
  - "doc/server_configurations.md:239:4          svlangserver        U       - [svlangserver](#svlangserver)"
  - "doc/server_configurations.md:240:4          svls                U       - [svls](#svls)"
  - "doc/server_configurations.md:241:10         mesonls             U       - [swift_mesonls](#swift_mesonls)"
  - "doc/server_configurations.md:244:4          taplo               U       - [taplo](#taplo)"
  - "doc/server_configurations.md:245:4          tblgen              U       - [tblgen_lsp_server](#tblgen"
  - "doc/server_configurations.md:247:4          templ               U       - [templ](#templ)"
  - "doc/server_configurations.md:249:4          terraformls         U       - [terraformls](#terraformls)"
  - "doc/server_configurations.md:251:4          textlsp             U       - [textlsp](#textlsp)"
  - "doc/server_configurations.md:252:4          tflint              U       - [tflint](#tflint)"
  - "doc/server_configurations.md:254:4          thriftls            U       - [thriftls](#thriftls)"
  - "doc/server_configurations.md:257:4          ttags               U       - [ttags](#ttags)"
  - "doc/server_configurations.md:260:4          typeprof            U       - [typeprof](#typeprof)"
  - "doc/server_configurations.md:262:4          typst               U       - [typst_lsp](#typst_lsp)"
  - "doc/server_configurations.md:263:4          uiua                U       - [uiua](#uiua)"
  - "doc/server_configurations.md:265:4          unocss              U       - [unocss](#unocss)"
  - "doc/server_configurations.md:266:4          uvls                U       - [uvls](#uvls)"
  - "doc/server_configurations.md:268:4          vala                U       - [vala_ls](#vala_ls)"
  - "doc/server_configurations.md:270:4          vdmj                U       - [vdmj](#vdmj)"
  - "doc/server_configurations.md:271:4          verible             U       - [verible](#verible)"
  - "doc/server_configurations.md:272:4          veridian            U       - [veridian](#veridian)"
  - "doc/server_configurations.md:273:4          veryl               U       - [veryl_ls](#veryl_ls)"
  - "doc/server_configurations.md:274:4          vhdl                U       - [vhdl_ls](#vhdl_ls)"
  - "doc/server_configurations.md:275:4          vimls               U       - [vimls](#vimls)"
  - "doc/server_configurations.md:276:4          visualforce         U       - [visualforce_ls](#visualforce_ls"
  - "doc/server_configurations.md:279:4          vtsls               U       - [vtsls](#vtsls)"
  - "doc/server_configurations.md:280:4          vuels               U       - [vuels](#vuels)"
  - "doc/server_configurations.md:281:4          wgsl                U       - [wgsl_analyzer](#wgsl_analyzer"
  - "doc/server_configurations.md:282:4          yamlls              U       - [yamlls](#yamlls)"
  - "doc/server_configurations.md:384:6          anakinls            U       { \"anakinls\" }"
  - "doc/server_configurations.md:398:7          pyflakes            U       pyflakes_errors = { \"ImportStarNotPerm"
  - "doc/server_configurations.md:418:15         ngserver            U       local cmd = {\"ngserver\", \"--stdio\", \"--tsProbeLocati"
  - "doc/server_configurations.md:556:34         jorje               U       path = '/path/to/apex-jorje-lsp.jar',"
  - "doc/server_configurations.md:573:6          apexcode            U       { \"apexcode\" }"
  - "doc/server_configurations.md:581:17         sfdx                U       root_pattern('sfdx-project.json')"
  - "doc/server_configurations.md:625:53         FQBN                U       Board Name FQBN Core"
  - "doc/server_configurations.md:638:9          fqbn                U       default_fqbn: arduino:avr:uno"
  - "doc/server_configurations.md:677:31         quickfix            U       valueSet = { \"\", \"quickfix\", \"refactor\", \"refactor"
  - "doc/server_configurations.md:851:13         vmasm               U       { \"asm\", \"vmasm\" }"
  - "doc/server_configurations.md:864:48         sgconfig            U       projects that have `sgconfig.y[a]ml` in their root"
  - "doc/server_configurations.md:902:17         astrojs             U       npm install -g @astrojs/language-server"
  - "doc/server_configurations.md:1184:7         mktemp              U       (cd $(mktemp -d) \\"
  - "doc/server_configurations.md:1220:19        biomejs             U       npm install [-g] @biomejs/biome"
  - "doc/server_configurations.md:1296:2         brightscript        U       `brightscript` can be installed via"
  - "doc/server_configurations.md:1298:16        brighterscript      U       npm install -g brighterscript"
  - "doc/server_configurations.md:1385:18        buckconfig          U       root_pattern(\".buckconfig\")"
  - "doc/server_configurations.md:1429:23        bufbuild            U       go install github.com/bufbuild/buf-language-server"
  - "doc/server_configurations.md:1432:12        Protobuf            U       bufls is a Protobuf language server compatible"
  - "doc/server_configurations.md:1449:6         proto               U       { \"proto\" }"
  - "doc/server_configurations.md:1570:17        Scarb               U       root_pattern(\"Scarb.toml\", \"cairo_project"
  - "doc/server_configurations.md:1593:25        frounding           U       excludeArgs = { \"-frounding-math\"} ;"
  - "doc/server_configurations.md:1616:18        objc                U       { \"c\", \"cpp\", \"objc\", \"objcpp\", \"cuda\""
  - "doc/server_configurations.md:1616:26        objcpp              U       c\", \"cpp\", \"objc\", \"objcpp\", \"cuda\" }"
  - "doc/server_configurations.md:1616:36        cuda                U       \"objc\", \"objcpp\", \"cuda\" }"
  - "doc/server_configurations.md:1681:2         Circom              U       [Circom Language Server](https"
  - "doc/server_configurations.md:1720:18        myproject           U       ln -s /path/to/myproject/build/compile_commands"
  - "doc/server_configurations.md:1732:3         Clangd              U       - ClangdSwitchSourceHeader: Switch"
  - "doc/server_configurations.md:1787:6         clar                U       { \"clar\", \"clarity\" }"
  - "doc/server_configurations.md:1976:21        Contextive          U       Language Server for Contextive."
  - "doc/server_configurations.md:2114:17        langservers         U       npm i -g vscode-langservers-extracted"
  - "doc/server_configurations.md:2154:43        bufdir              U       package.json\", \".git\") or bufdir"
  - "doc/server_configurations.md:2338:21        Dafny               U       Support for the Dafny language server."
  - "doc/server_configurations.md:2376:25        cuelang             U       Dagger's lsp server for cuelang."
  - "doc/server_configurations.md:2389:6         cuelsp              U       { \"cuelsp\" }"
  - "doc/server_configurations.md:2440:17        pubspec             U       root_pattern(\"pubspec.yaml\")"
  - "doc/server_configurations.md:2447:11        Todos               U       showTodos = true"
  - "doc/server_configurations.md:2486:1         Deno's              U       Deno's built-in language server"
  - "doc/server_configurations.md:2488:28        codefences          U       appropriately highlight codefences returned from denols"
  - "doc/server_configurations.md:2505:3         Denols              U       - DenolsCache: Cache a module"
  - "doc/server_configurations.md:2510:6         deno                U       { \"deno\", \"lsp\" }"
  - "doc/server_configurations.md:2628:75        caterva             U       for LaTeX, ConTeXt et caterva. It provides"
  - "doc/server_configurations.md:2649:13        plaintex            U       { \"tex\", \"plaintex\", \"context\" }"
  - "doc/server_configurations.md:2741:34        opam                U       can be installed via `opam`"
  - "doc/server_configurations.md:2761:14        tptp                U       { \"smt2\", \"tptp\", \"p\", \"cnf\", \"icnf"
  - "doc/server_configurations.md:2761:34        icnf                U       tptp\", \"p\", \"cnf\", \"icnf\", \"zf\" }"
  - "doc/server_configurations.md:2911:33        hanzi               U       symbols_only_follow_by_hanzi = false"
  - "doc/server_configurations.md:2928:21        Ecsact              U       Language server for Ecsact."
  - "doc/server_configurations.md:2977:20        neovim's            U       Note: In order for neovim's built-in language server"
  - "doc/server_configurations.md:3050:16        eelixir             U       { \"elixir\", \"eelixir\", \"heex\", \"surface\""
  - "doc/server_configurations.md:3050:27        heex                U       elixir\", \"eelixir\", \"heex\", \"surface\" }"
  - "doc/server_configurations.md:3091:8         Analyse             U       elmAnalyseTrigger = \"change\""
  - "doc/server_configurations.md:3126:17        rebar               U       root_pattern('rebar.config', 'erlang.mk"
  - "doc/server_configurations.md:3141:17        lifeart             U       npm install -g @lifeart/ember-language-server"
  - "doc/server_configurations.md:3173:17        olrtg               U       npm install -g @olrtg/emmet-language-server"
  - "doc/server_configurations.md:3191:13        eruby               U       { \"css\", \"eruby\", \"html\", \"htmldjango"
  - "doc/server_configurations.md:3191:30        htmldjango          U       , \"eruby\", \"html\", \"htmldjango\", \"javascriptreact\""
  - "doc/server_configurations.md:3320:1         Esbonio             U       Esbonio is a language server"
  - "doc/server_configurations.md:3340:21        virtualenv          U       cmd = { '/path/to/virtualenv/bin/python', '-m',"
  - "doc/server_configurations.md:3622:18        flowconfig          U       root_pattern(\".flowconfig\")"
  - "doc/server_configurations.md:3738:52        FSAC                U       provided by FsAutoComplete (FSAC)."
  - "doc/server_configurations.md:3750:168       adelarsq            U       fsharp/vim-fsharp), and [adelarsq/neofsharp.vim](https"
  - "doc/server_configurations.md:3750:177       neofsharp           U       fsharp), and [adelarsq/neofsharp.vim](https://github"
  - "doc/server_configurations.md:3948:17        lhaskell            U       { \"haskell\", \"lhaskell\" }"
  - "doc/server_configurations.md:3952:49        bazel               U       \"hie-bios\", \"BUILD.bazel\", \"cabal.config\", \"package"
  - "doc/server_configurations.md:3960:23        VHDL                U       language server for VHDL, using ghdl as its backend"
  - "doc/server_configurations.md:3962:22        pyghdl              U       ghdl-ls` is part of pyghdl, for installation instruction"
  - "doc/server_configurations.md:4079:21        GLSL                U       Language server for GLSL"
  - "doc/server_configurations.md:4100:22        tesc                U       { \"glsl\", \"vert\", \"tesc\", \"tese\", \"frag\", \"geom"
  - "doc/server_configurations.md:4100:30        tese                U       glsl\", \"vert\", \"tesc\", \"tese\", \"frag\", \"geom\", \"comp"
  - "doc/server_configurations.md:4170:23        nametake            U       go install github.com/nametake/golangci-lint-langserver"
  - "doc/server_configurations.md:4190:12        gomod               U       { \"go\", \"gomod\" }"
  - "doc/server_configurations.md:4225:21        gowork              U       { \"go\", \"gomod\", \"gowork\", \"gotmpl\" }"
  - "doc/server_configurations.md:4225:31        gotmpl              U       \"gomod\", \"gowork\", \"gotmpl\" }"
  - "doc/server_configurations.md:4243:66        gradlew             U       vscode-gradle using `./gradlew installDist` and point"
  - "doc/server_configurations.md:4286:42        Grammarly's         U       language server uses Grammarly's API, any document you"
  - "doc/server_configurations.md:4314:40        YRCX                U       client_BaDkMgx4X19X9UxxYRCXZo\""
  - "doc/server_configurations.md:4358:31        graphqlrc           U       root_pattern('.git', '.graphqlrc*', '.graphql.config"
  - "doc/server_configurations.md:4409:61        Guix                U       lsp-server is using Guix. Unfortunately it is"
  - "doc/server_configurations.md:4409:175       guix                U       the provided channel guix.scm in the repo:"
  - "doc/server_configurations.md:4416:95        modeline            U       file type using `:help modeline` or adding https://gitlab"
  - "doc/server_configurations.md:4449:5         Haxe                U       The Haxe language server can"
  - "doc/server_configurations.md:4453:17        vshaxe              U       npx lix run vshaxe-build -t language-server"
  - "doc/server_configurations.md:4467:16        HXML                U       By default, an HXML compiler arguments file"
  - "doc/server_configurations.md:4467:58        hxml                U       arguments file named `build.hxml` is expected in"
  - "doc/server_configurations.md:4529:14        verilog             U       { \"vhdl\", \"verilog\", \"systemverilog\" }"
  - "doc/server_configurations.md:4529:25        systemverilog       U       \"vhdl\", \"verilog\", \"systemverilog\" }"
  - "doc/server_configurations.md:4585:28        HHVM                U       below for how to setup HHVM & typechecker:"
  - "doc/server_configurations.md:4585:35        typechecker         U       how to setup HHVM & typechecker:"
  - "doc/server_configurations.md:4607:18        hhconfig            U       root_pattern(\".hhconfig\")"
  - "doc/server_configurations.md:4619:5         hlint               U       hlintOn = bool;"
  - "doc/server_configurations.md:4625:65        floskell            U       brittany\", alternate \"floskell\");"
  - "doc/server_configurations.md:4684:6         lspinfo             U       - `lspinfo` :"
  - "doc/server_configurations.md:4696:34        cabalfmt            U       cabalFormattingProvider = \"cabalfmt\","
  - "doc/server_configurations.md:4711:23        Hoon                U       language server for Hoon."
  - "doc/server_configurations.md:4715:25        urbit               U       Start a fake ~zod with `urbit -F zod`."
  - "doc/server_configurations.md:4716:34        Urbit               U       language server at the Urbit Dojo prompt with: `"
  - "doc/server_configurations.md:4886:5         Idris               U       The Idris 2 language server."
  - "doc/server_configurations.md:5006:77        gotos               U       completion, imports, gotos and formatting and some"
  - "doc/server_configurations.md:5018:55        JDTLS               U       jvm arguments with the JDTLS_JVM_ARGS environment"
  - "doc/server_configurations.md:5023:25        javaagent           U       export JDTLS_JVM_ARGS=\"-javaagent:$HOME/.local/share/java"
  - "doc/server_configurations.md:5078:21        getcwd              U       } or vim.fn.getcwd()"
  - "doc/server_configurations.md:5128:13        GOPATH              U       cp $(go env GOPATH)/bin/jq-lsp /usr/local"
  - "doc/server_configurations.md:5133:40        setfiletype         U       BufRead,BufNewFile *.jq setfiletype jq\\]\\])"
  - "doc/server_configurations.md:5223:45        Jsonnet             U       Protocol (LSP) server for Jsonnet."
  - "doc/server_configurations.md:5245:17        libsonnet           U       { \"jsonnet\", \"libsonnet\" }"
  - "doc/server_configurations.md:5253:17        jsonnetfile         U       root_pattern(\"jsonnetfile.json\")"
  - "doc/server_configurations.md:5294:222       joinpath            U       ls_install_path = joinpath(\\n get(DEPOT"
  - "doc/server_configurations.md:5294:346       pushfirst           U       lspconfig\"\\n )\\n pushfirst!(LOAD_PATH, ls_install"
  - "doc/server_configurations.md:5294:416       popfirst            U       LanguageServer\\n popfirst!(LOAD_PATH)\\n depot"
  - "doc/server_configurations.md:5294:744       isempty             U       nothing ? nothing : isempty(p) ? nothing : p\\n"
  - "doc/server_configurations.md:5294:1432      runlinter           U       depot_path)\\n server.runlinter = true\\n run(server"
  - "doc/server_configurations.md:5314:12        fwcd                U       but by fwcd."
  - "doc/server_configurations.md:5396:17        leanpkg             U       root_pattern(\"leanpkg.toml\") or root_pattern"
  - "doc/server_configurations.md:5447:17        lakefile            U       root_pattern(\"lakefile.lean\", \"lean-toolchain"
  - "doc/server_configurations.md:5495:208       xattr               U       Gatekeeper quarantine with `xattr -d com.apple.quarantine"
  - "doc/server_configurations.md:5577:27        sweave              U       support org files or R sweave, users can define a"
  - "doc/server_configurations.md:5598:64        rnoweb              U       \"plaintex\", \"rst\", \"rnoweb\", \"tex\", \"pandoc\","
  - "doc/server_configurations.md:5598:81        pandoc              U       , \"rnoweb\", \"tex\", \"pandoc\", \"quarto\", \"rmd\" }"
  - "doc/server_configurations.md:5632:38        luarc               U       loop.fs_stat(path..'/.luarc.json') and not vim.loop"
  - "doc/server_configurations.md:5644:23        VIMRUNTIME          U       vim.env.VIMRUNTIME"
  - "doc/server_configurations.md:5648:35        runtimepath         U       or pull in all of 'runtimepath'. NOTE: this is a lot"
  - "doc/server_configurations.md:5689:49        luacheckrc          U       , \".luarc.jsonc\", \".luacheckrc\", \".stylua.toml\", \"stylua"
  - "doc/server_configurations.md:5787:7         asmsyntax           U       vim.g.asmsyntax = 'asm68k'"
  - "doc/server_configurations.md:5957:39        coursier            U       make sure to have [coursier](https://get-coursier"
  - "doc/server_configurations.md:6082:34        MLIR                U       Server for the LLVM MLIR language"
  - "doc/server_configurations.md:6117:34        PDLL                U       Server for the LLVM PDLL language"
  - "doc/server_configurations.md:6148:25        metamath            U       Language Server for the metamath-zero theorem prover"
  - "doc/server_configurations.md:6186:159       metaprogramming     U       systems programming and metaprogramming features."
  - "doc/server_configurations.md:6256:35        muttrc              U       server for (neo)mutt's muttrc. It can be installed"
  - "doc/server_configurations.md:6277:16        neomuttrc           U       { \"muttrc\", \"neomuttrc\" }"
  - "doc/server_configurations.md:6297:4         vimscript           U       in vimscript:"
  - "doc/server_configurations.md:6299:31        setf                U       BufNewFile,BufRead *.nelua setf nelua"
  - "doc/server_configurations.md:6355:6         neocmakelsp         U       { \"neocmakelsp\", \"--stdio\" }"
  - "doc/server_configurations.md:6431:72        autostarting        U       (a prerequisite for autostarting a server),"
  - "doc/server_configurations.md:6463:75        oxalica             U       profile install github:oxalica/nil` to install."
  - "doc/server_configurations.md:6502:16        nimlangserver       U       nimble install nimlangserver"
  - "doc/server_configurations.md:6536:2         nimlsp              U       `nimlsp` can be installed via"
  - "doc/server_configurations.md:6675:6         ttcn                U       { \"ttcn\" }"
  - "doc/server_configurations.md:6687:1         Nushell             U       Nushell built-in language server"
  - "doc/server_configurations.md:6808:56        ocamllex            U       ocaml.interface\", \"ocaml.ocamllex\", \"reason\", \"dune\""
  - "doc/server_configurations.md:6872:69        codebases           U       is useful for big C# codebases"
  - "doc/server_configurations.md:6879:61        rulesets            U       analyzers, code fixes and rulesets."
  - "doc/server_configurations.md:6896:17        prereleases         U       sdk_include_prereleases = true,"
  - "doc/server_configurations.md:7160:8         FPCDIR              U       export FPCDIR='/usr/lib/fpc/src'"
  - "doc/server_configurations.md:7161:31        ppcx                U       '/usr/lib/fpc/3.2.2/ppcx64' # Path to the Free"
  - "doc/server_configurations.md:7162:8         LAZARUSDIR          U       export LAZARUSDIR='/usr/lib/lazarus'"
  - "doc/server_configurations.md:7163:8         FPCTARGET           U       export FPCTARGET=''"
  - "doc/server_configurations.md:7164:8         FPCTARGETCPU        U       export FPCTARGETCPU='x86_64' #"
  - "doc/server_configurations.md:7213:99        nostdio             U       \"--port 13603\", \"--nostdio 0\" }"
  - "doc/server_configurations.md:7266:101       perltidy            U       perlnavigator` at your `perltidy` and `perlcritic` configurati"
  - "doc/server_configurations.md:7266:116       perlcritic          U       your `perltidy` and `perlcritic` configurations."
  - "doc/server_configurations.md:7443:39        Msys                U       for ArchLinux/Windows Msys2's PKGBUILD."
  - "doc/server_configurations.md:7443:47        PKGBUILD            U       ArchLinux/Windows Msys2's PKGBUILD."
  - "doc/server_configurations.md:7555:46        pwsh                U       languageserver is started in `pwsh` (PowerShell Core)."
  - "doc/server_configurations.md:7572:59        PSES                U       NoProfile', '-Command', \"c:/PSES/Start-EditorServices"
  - "doc/server_configurations.md:7664:6         swipl               U       { \"swipl\", \"-g\", \"use_module"
  - "doc/server_configurations.md:7783:49        hiera               U       \".puppet-lint.rc\", \"hiera.yaml\", \".git\")"
  - "doc/server_configurations.md:7795:6         purescript          U       The `purescript-language-server` can"
  - "doc/server_configurations.md:7819:17        spago               U       root_pattern('spago.dhall', 'psc-package"
  - "doc/server_configurations.md:7833:49        pycodestyle         U       set the `pylsp.plugins.pycodestyle.ignore` option:"
  - "doc/server_configurations.md:7849:36        pyls                U       a community fork of `pyls`."
  - "doc/server_configurations.md:7928:36        featureset          U       an extremely limited featureset. It currently only supports"
  - "doc/server_configurations.md:8025:6         qmljs               U       { \"qmljs\" }"
  - "doc/server_configurations.md:8107:19        CRAN                U       It is released on CRAN and can be easily installed"
  - "doc/server_configurations.md:8148:14        raco                U       Install via `raco`: `raco pkg install"
  - "doc/server_configurations.md:8180:3         Raku                U       A Raku language server"
  - "doc/server_configurations.md:8259:5         Rego                U       OPA Rego language server."
  - "doc/server_configurations.md:8263:23        kitagry             U       go install github.com/kitagry/regols@latest"
  - "doc/server_configurations.md:8281:6         rego                U       { \"rego\" }"
  - "doc/server_configurations.md:8375:36        remarkrc            U       given the following `.remarkrc.json`:"
  - "doc/server_configurations.md:8491:9         rustup              U       cmd = {\"rustup\", \"run\", \"nightly\","
  - "doc/server_configurations.md:8521:73        nixpkgs             U       completion and formatting via nixpkgs-fmt."
  - "doc/server_configurations.md:8584:22        robotidy            U       util.root_pattern('robotidy.toml', 'pyproject.toml"
  - "doc/server_configurations.md:8930:76        struct              U       enum\", \"interface\", \"struct\", \"typeParameter\","
  - "doc/server_configurations.md:9222:6         hlsl                U       { \"hlsl\", \"shaderslang\" }"
  - "doc/server_configurations.md:9222:14        shaderslang         U       { \"hlsl\", \"shaderslang\" }"
  - "doc/server_configurations.md:9237:2         Slint               U       `Slint`'s language server"
  - "doc/server_configurations.md:9362:9         Snyk                U       LSP for Snyk Open Source, Snyk Infrastruct"
  - "doc/server_configurations.md:9537:52        remappings          U       json, just create a `remappings.txt` with:"
  - "doc/server_configurations.md:9616:71        Nomic               U       language, built by the Nomic Foundation for the Ethereum"
  - "doc/server_configurations.md:9721:17        Sourcery            U       --- The Sourcery token for authenticating"
  - "doc/server_configurations.md:9822:31        datapacks           U       server for Minecraft datapacks."
  - "doc/server_configurations.md:9832:31        mcfunction          U       BufNewFile,BufRead *.mcfunction set filetype=mcfunction"
  - "doc/server_configurations.md:9907:1         Sqls                U       Sqls can be installed via"
  - "doc/server_configurations.md:10042:11       Steepfile           U       You need `Steepfile` to make it work. Generate"
  - "doc/server_configurations.md:10116:42       stylelintplus       U       passing a `settings.stylelintplus` object to `stylelint"
  - "doc/server_configurations.md:10143:29       sugarss             U       css\", \"less\", \"scss\", \"sugarss\", \"vue\", \"wxss\", \"javascript"
  - "doc/server_configurations.md:10143:47       wxss                U       \"sugarss\", \"vue\", \"wxss\", \"javascript\", \"javascriptre"
  - "doc/server_configurations.md:10177:6        svelteserver        U       { \"svelteserver\", \"--stdio\" }"
  - "doc/server_configurations.md:10193:27       Verilog             U       Language server for SystemVerilog."
  - "doc/server_configurations.md:10208:3        Svlangserver        U       - SvlangserverBuildIndex: Instructs"
  - "doc/server_configurations.md:10327:6        stree               U       { \"stree\", \"lsp\" }"
  - "doc/server_configurations.md:10335:18       streerc             U       root_pattern(\".streerc\", \"Gemfile\", \".git\""
  - "doc/server_configurations.md:10363:6        aspnetcorerazor     U       { \"aspnetcorerazor\", \"astro\", \"astro-markdown"
  - "doc/server_configurations.md:10363:153      gohtml              U       ejs\", \"erb\", \"eruby\", \"gohtml\", \"gohtmltmpl\", \"haml"
  - "doc/server_configurations.md:10363:163      gohtmltmpl          U       \"eruby\", \"gohtml\", \"gohtmltmpl\", \"haml\", \"handlebars"
  - "doc/server_configurations.md:10363:177      haml                U       gohtml\", \"gohtmltmpl\", \"haml\", \"handlebars\", \"hbs"
  - "doc/server_configurations.md:10406:21       Taplo               U       Language server for Taplo, a TOML toolkit."
  - "doc/server_configurations.md:10463:6        tablegen            U       { \"tablegen\" }"
  - "doc/server_configurations.md:10477:1        luarocks            U       luarocks install --dev teal-language"
  - "doc/server_configurations.md:10499:17       tlconfig            U       root_pattern(\"tlconfig.lua\", \".git\")"
  - "doc/server_configurations.md:10507:49       templating          U       server for the templ HTML templating language."
  - "doc/server_configurations.md:10652:3        Texlab              U       - TexlabBuild: Build the current"
  - "doc/server_configurations.md:10673:7        bibtex              U       bibtexFormatter = \"texlab\""
  - "doc/server_configurations.md:10675:40       nonstopmode         U       pdf\", \"-interaction=nonstopmode\", \"-synctex=1\", \"%f"
  - "doc/server_configurations.md:10675:56       synctex             U       interaction=nonstopmode\", \"-synctex=1\", \"%f\" },"
  - "doc/server_configurations.md:10676:23       latexmk             U       executable = \"latexmk\","
  - "doc/server_configurations.md:10680:7        chktex              U       chktex = {"
  - "doc/server_configurations.md:10689:25       latexindent         U       latexFormatter = \"latexindent\","
  - "doc/server_configurations.md:10740:7        analysers           U       analysers = {"
  - "doc/server_configurations.md:10741:9        languagetool        U       languagetool = {"
  - "doc/server_configurations.md:10881:17       Tiltfile            U       autocmd BufRead Tiltfile setf=tiltfile"
  - "doc/server_configurations.md:10881:31       tiltfile            U       BufRead Tiltfile setf=tiltfile"
  - "doc/server_configurations.md:11139:21       Typst               U       Language server for Typst."
  - "doc/server_configurations.md:11168:36       Uiua                U       language server of the Uiua interpreter."
  - "doc/server_configurations.md:11406:5        VDMJ                U       The VDMJ language server can"
  - "doc/server_configurations.md:11439:6        vdmsl               U       { \"vdmsl\", \"vdmpp\", \"vdmrt\""
  - "doc/server_configurations.md:11439:15       vdmpp               U       { \"vdmsl\", \"vdmpp\", \"vdmrt\" }"
  - "doc/server_configurations.md:11439:24       vdmrt               U       \"vdmsl\", \"vdmpp\", \"vdmrt\" }"
  - "doc/server_configurations.md:11449:5        logfile             U       logfile = \"path.join(vim.fn"
  - "doc/server_configurations.md:11449:33       stdpath             U       = \"path.join(vim.fn.stdpath 'cache', 'vdm-lsp.log"
  - "doc/server_configurations.md:11450:5        mavenrepo           U       mavenrepo = \"$HOME/.m2/repository"
  - "doc/server_configurations.md:11534:21       Veryl               U       Language server for Veryl"
  - "doc/server_configurations.md:11655:59       autoload            U       runtime\", \"nvim\", \".git\", \"autoload\", \"plugin\" },"
  - "doc/server_configurations.md:11659:5        iskeyword           U       iskeyword = \"@,48-57,_,192-25"
  - "doc/server_configurations.md:11662:11       Runtimepath         U       fromRuntimepath = true,"
  - "doc/server_configurations.md:11663:11       Vimruntime          U       fromVimruntime = true"
  - "doc/server_configurations.md:11665:5        vimruntime          U       vimruntime = \"\""
  - "doc/server_configurations.md:11682:21       Visualforce         U       Language server for Visualforce."
  - "doc/server_configurations.md:11684:40       vsix                U       installation, download the .vsix archive file from the"
  - "doc/server_configurations.md:11685:2        forcedotcom         U       [forcedotcom/salesforcedx-vscode"
  - "doc/server_configurations.md:11685:14       salesforcedx        U       [forcedotcom/salesforcedx-vscode](https://github"
  - "doc/server_configurations.md:11749:11       vlang               U       { \"v\", \"vlang\" }"
  - "doc/server_configurations.md:11809:29       yourusernamehere    U       global_ts = '/home/[yourusernamehere]/.npm/lib/node_modules"
  - "doc/server_configurations.md:11952:7        vetur               U       vetur = {"
  - "doc/server_configurations.md:12059:43       yammls              U       is special-cased in yammls, see the following upstream"
  - "doc/server_configurations.md:12151:22       YARA                U       An YLS plugin adding YARA linting capabilities"
  - "doc/server_configurations.md:12153:18       yara                U       This plugin runs yara.compile on every save"
  - "doc/server_configurations.txt:237:4         stylelint       U       - [stylelint_lsp](#stylelint_lsp"
  - "doc/server_configurations.txt:243:4         tailwindcss     U       - [tailwindcss](#tailwindcss)"
  - "doc/server_configurations.txt:10363:298     nunjucks        U       \"mustache\", \"njk\", \"nunjucks\", \"php\", \"razor\", \"slim"
  - "doc/server_configurations.txt:10363:357     postcss         U       twig\", \"css\", \"less\", \"postcss\", \"sass\", \"scss\", \"stylus"
  - "flake.nix:2:18          Quickstart      U       description = \"Quickstart configurations for the"
  - "flake.nix:5:36          numtide         U       utils.url = \"github:numtide/flake-utils\";"
  - "flake.nix:9:11          pkgs            U       let pkgs = nixpkgs.legacyPackages"
  - "flake.nix:15:18         luajit          U       pkgs.luajitPackages.vusted"
  - "flake.nix:15:33         vusted          U       pkgs.luajitPackages.vusted"
  - "lua/lspconfig.lua:22:5          sumneko     U       sumneko_lua = {"
  - "lua/lspconfig/async.lua:21:9        jobid       U       local jobid = vim.fn.jobstart(cmd"
  - "lua/lspconfig/async.lua:21:24       jobstart    U       local jobid = vim.fn.jobstart(cmd, {"
  - "lua/lspconfig/configs.lua:21:21         exepath         U       cmd[1] = vim.fn.exepath(cmd[1])"
  - "lua/lspconfig/configs.lua:121:13        bufname         U       local bufname = api.nvim_buf_get_name"
  - "lua/lspconfig/configs.lua:140:26        fnameescape     U       pattern = fn.fnameescape(root_dir) .. '/*',"
  - "lua/lspconfig/configs.lua:155:46        bufs            U       ipairs(api.nvim_list_bufs()) do"
  - "lua/lspconfig/configs.lua:166:48        lspconfig's     U       this is the root from lspconfig's perspective, as we use"
  - "lua/lspconfig/manager.lua:141:39        realpath    U       config.cmd_cwd and uv.fs_realpath(root_dir) then"
  - "lua/lspconfig/manager.lua:242:20        buftype     U       if vim.bo[bufnr].buftype == 'nofile' then"
  - "lua/lspconfig/manager.lua:242:32        nofile      U       bo[bufnr].buftype == 'nofile' then"
  - "lua/lspconfig/server_configurations/apex_ls.lua:13:13       Ddebug              U       '-Ddebug.internal.errors=true"
  - "lua/lspconfig/server_configurations/apex_ls.lua:16:13       Dlwc                U       '-Dlwc.typegeneration.disabled"
  - "lua/lspconfig/server_configurations/apex_ls.lua:16:18       typegeneration      U       '-Dlwc.typegeneration.disabled=true',"
  - "lua/lspconfig/server_configurations/beancount.lua:10:34         beancout    U       this is the path to the beancout journal file"
  - "lua/lspconfig/server_configurations/codeqlls.lua:9:35           qlpack      U       util.root_pattern 'qlpack.yml',"
  - "lua/lspconfig/server_configurations/elmls.lua:12:13         ashkan      U       -- TODO(ashkan) if we comment this"
  - "lua/lspconfig/server_configurations/eslint.lua:105:23       fnamemodify     U       name = vim.fn.fnamemodify(new_root_dir, ':t')"
  - "lua/lspconfig/server_configurations/eslint.lua:109:17       filereadable    U       if vim.fn.filereadable(new_root_dir .. '/eslint"
  - "lua/lspconfig/server_configurations/eslint.lua:125:15       sysname         U       local sysname = vim.loop.os_uname"
  - "lua/lspconfig/server_configurations/glint.lua:26:9          glintrc     U       '.glintrc.yml',"
  - "lua/lspconfig/server_configurations/gopls.lua:12:50         GOMODCACHE      U       run_command 'go env GOMODCACHE'"
  - "lua/lspconfig/server_configurations/hls.lua:27:13       chanid      U       local chanid = vim.fn.jobstart({"
  - "lua/lspconfig/server_configurations/hls.lua:28:14       jobwait     U       vim.fn.jobwait { chanid }"
  - "lua/lspconfig/server_configurations/idris2_lsp.lua:7:37         ipkg    U       util.root_pattern '*.ipkg',"
  - "lua/lspconfig/server_configurations/intelephense.lua:27:77          tmpdir      U       dir. Defaults to os.tmpdir()."
  - "lua/lspconfig/server_configurations/intelephense.lua:29:9           licence     U       licenceKey = Optional licence"
  - "lua/lspconfig/server_configurations/jdtls.lua:50:32         codeaction      U       function on_textdocument_codeaction(err, actions, ctx)"
  - "lua/lspconfig/server_configurations/jdtls.lua:52:15         steelsojka      U       -- TODO: (steelsojka) Handle more than one"
  - "lua/lspconfig/server_configurations/jdtls.lua:67:29         applyedit       U       function on_workspace_applyedit(err, workspace_edit"
  - "lua/lspconfig/server_configurations/jdtls.lua:74:12         echohl          U       command 'echohl ModeMsg'"
  - "lua/lspconfig/server_configurations/jsonnet_ls.lua:24:33        JSONNET     U       not new_config.cmd_env.JSONNET_PATH then"
  - "lua/lspconfig/server_configurations/lean3ls.lua:13:18       endpos      U       local _, endpos = fname:find '/lean"
  - "lua/lspconfig/server_configurations/ocamllsp.lua:6:3            ocamlinterface      U       ocamlinterface = 'ocaml.interface'"
  - "lua/lspconfig/server_configurations/ocamllsp.lua:12:37          ftype               U       language_id = function(_, ftype)"
  - "lua/lspconfig/server_configurations/omnisharp.lua:48:70         getpid          U       hostPID', tostring(vim.fn.getpid()) })"
  - "lua/lspconfig/server_configurations/omnisharp.lua:75:50         Prereleases     U       config.cmd, 'Sdk:IncludePrereleases=true')"
  - "lua/lspconfig/server_configurations/omnisharp.lua:83:37         deepcopy        U       config.capabilities = vim.deepcopy(new_config.capabilities"
  - "lua/lspconfig/server_configurations/openedge_ls.lua:19:43       Dorg    U       config.cmd + 1] = '-Dorg.slf4j.simpleLogger.defaultLog"
  - "lua/lspconfig/server_configurations/please.lua:7:36         plzconfig       U       util.root_pattern '.plzconfig',"
  - "lua/lspconfig/server_configurations/pyright.lua:65:7        nargs       U       nargs = 1,"
  - "lua/lspconfig/server_configurations/reason_ls.lua:7:35          bsconfig    U       util.root_pattern('bsconfig.json', '.git'),"
  - "lua/lspconfig/server_configurations/remark_ls.lua:15:9          remarkignore    U       '.remarkignore'"
  - "lua/lspconfig/server_configurations/rust_analyzer.lua:23:34         RUSTUP      U       rustup_home = os.getenv 'RUSTUP_HOME' or util.path.join"
  - "lua/lspconfig/server_configurations/scheme_langserver.lua:5:4           Akku    U       'Akku.manifest',"
  - "lua/lspconfig/server_configurations/sourcery.lua:16:53          APPDATA     U       windows and vim.fn.getenv 'APPDATA' or vim.fn.expand '"
  - "lua/lspconfig/server_configurations/sourcery.lua:20:28          readfile    U       local content = vim.fn.readfile(auth_file_path)"
  - "lua/lspconfig/server_configurations/spyglassmc_language_server.lua:7:40         mcmeta      U       util.root_pattern 'pack.mcmeta',"
  - "lua/lspconfig/server_configurations/sqlls.lua:7:36          sqllsrc     U       util.root_pattern '.sqllsrc.json',"
  - "lua/lspconfig/server_configurations/stylelint_lsp.lua:4:5           stylelintrc     U       '.stylelintrc',"
  - "lua/lspconfig/server_configurations/svlangserver.lua:13:35          cword       U       = { vim.fn.expand '<cword>' },"
  - "lua/lspconfig/server_configurations/texlab.lua:14:3         Unconfigured    U       Unconfigured = 3,"
  - "lua/lspconfig/server_configurations/texlab.lua:73:44        latexmkrc       U       root_pattern('.git', '.latexmkrc'),"
  - "lua/lspconfig/server_configurations/textlsp.lua:13:69       enaled      U       page. LanguageTool is enaled here"
  - "lua/lspconfig/server_configurations/vdmj.lua:24:9           subdirs         U       local subdirs = function(file)"
  - "lua/lspconfig/server_configurations/vdmj.lua:29:29          readdir         U       candidates = vim.fn.readdir(path, subdirs)"
  - "lua/lspconfig/server_configurations/vdmj.lua:35:37          startpath       U       find_vscode_ancestor(startpath)"
  - "lua/lspconfig/server_configurations/vdmj.lua:103:11         classpath       U       local classpath = table.concat({"
  - "lua/lspconfig/server_configurations/vdmj.lua:114:9          Dlsp            U       '-Dlsp.log.filename=' .. config"
  - "lua/lspconfig/ui/lspinfo.lua:12:7           helptags            U       local helptags = {"
  - "lua/lspconfig/ui/lspinfo.lua:110:39         helptag             U       vim.tbl_map(function(helptag)"
  - "lua/lspconfig/ui/lspinfo.lua:197:27         breakindent         U       windows.default_options.breakindent = true"
  - "lua/lspconfig/ui/lspinfo.lua:198:27         breakindentopt      U       windows.default_options.breakindentopt = 'shift:25'"
  - "lua/lspconfig/ui/lspinfo.lua:199:27         showbreak           U       windows.default_options.showbreak = 'NONE'"
  - "lua/lspconfig/ui/lspinfo.lua:203:35         bufhidden           U       buf_set_option(bufnr, 'bufhidden', 'wipe')"
  - "lua/lspconfig/ui/lspinfo.lua:283:20         autocmds            U       api.nvim_clear_autocmds { group = augroup, buffer"
  - "lua/lspconfig/ui/lspinfo.lua:289:57         nowait              U       close, { buffer = bufnr, nowait = true })"
  - "lua/lspconfig/ui/lspinfo.lua:298:10         matchadd            U       vim.fn.matchadd("
  - "lua/lspconfig/ui/lspinfo.lua:354:25         concealcursor       U       vim.wo[info.win_id].concealcursor = 'niv'"
  - "lua/lspconfig/ui/lspinfo.lua:355:25         conceallevel        U       vim.wo[info.win_id].conceallevel = 2"
  - "lua/lspconfig/ui/windows.lua:1:57           vnim            U       modified from plenary.vnim by"
  - "lua/lspconfig/ui/windows.lua:2:7            Devries         U       -- TJ Devries. It is not a stable"
  - "lua/lspconfig/ui/windows.lua:59:41          percentags      U       that takes up certain percentags of the current screen"
  - "lua/lspconfig/ui/windows.lua:109:36         winhl           U       set_option(win_id, 'winhl', 'FloatBorder:LspInfoBorder"
  - "lua/lspconfig/ui/windows.lua:119:36         cursorcolumn    U       set_option(win_id, 'cursorcolumn', false)"
  - "lua/lspconfig/ui/windows.lua:121:35         shiftwidth      U       buf_set_option(bufnr, 'shiftwidth', 2)"
  - "lua/lspconfig/util.lua:25:74        zipfile         U       or bufname:match '^zipfile://' or bufname:match"
  - "lua/lspconfig/util.lua:25:105       tarfile         U       or bufname:match '^tarfile:' then"
  - "lua/lspconfig/util.lua:76:50        customlist      U       \"-nargs=* -complete=customlist,v:lua.something\" into"
  - "lua/lspconfig/util.lua:92:79        fargs           U       name][1](unpack(info.fargs))"
  - "lua/lspconfig/util.lua:183:41       rootdir         U       path until we find the rootdir."
  - "lua/lspconfig/util.lua:273:47       worktrees       U       directories and git files (worktrees)"
  - "lua/lspconfig/util.lua:367:45       servername      U       client_by_name(bufnr, servername)"
  - "nvim-lspconfig-scm-1.rockspec:1:8           MODREV      U       local _MODREV, _SPECREV = 'scm',"
  - "nvim-lspconfig-scm-1.rockspec:1:17          SPECREV     U       local _MODREV, _SPECREV = 'scm', '-1'"
  - "nvim-lspconfig-scm-1.rockspec:3:1           rockspec    U       rockspec_format = \"3.0\""
  - "nvim-lspconfig-scm-1.rockspec:8:56          Neovim's    U       common configurations for Neovim's built-in language server"
  - "plugin/lspconfig.lua:62:14          scriptnames     U       -- script in scriptnames to be executed is lspconfig"
  - "plugin/lspconfig.lua:154:26         tabnew          U       vim.cmd(string.format('tabnew %s', lsp.get_log_path"
  - "README.md:16:69         packadd     U       through neovim builtin `packadd` or a plugin manager"
  - "README.md:39:129        keymaps     U       figuration provides suggested keymaps for the most commonly"
  - "scripts/docgen.lua:51:29        indentlvl       U       function make_section(indentlvl, sep, parts)"
  - "scripts/docgen.lua:154:15       tempdir         U       local tempdir = os.getenv 'DOCGEN"
  - "scripts/docgen.lua:154:36       DOCGEN          U       tempdir = os.getenv 'DOCGEN_TEMPDIR' or uv.fs_mkdtemp"
  - "scripts/docgen.lua:154:43       TEMPDIR         U       = os.getenv 'DOCGEN_TEMPDIR' or uv.fs_mkdtemp '"
  - "scripts/docgen.lua:275:9        copyfile        U       uv.fs_copyfile('doc/server_configurations"
  - "scripts/docgen.sh:2:71          docgen      U       PWD' +'luafile scripts/docgen.lua' +q"
  - "test/lspconfig_spec.lua:14:13       doesnt (doesn't)    U       it('doesnt escape if not needed"
  - "test/lspconfig_spec.lua:157:26      subpaths            U       it('strips zipfile subpaths', function()"
  - "test/minimal_init.lua:13:14         packpath        U       vim.cmd('set packpath=' .. join_paths(temp"
  - "test/minimal_init.lua:18:11         isdirectory     U       if vim.fn.isdirectory(lspconfig_path) ~="
  - "test/minimal_init.lua:33:34         noremap         U       = { buffer = bufnr, noremap = true, silent = true"
