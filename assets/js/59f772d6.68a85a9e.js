"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85981],{46039:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(18225);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}},80731:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/cspell-lib/functions/getLanguageIdsForBaseFilename","title":"Function: getLanguageIdsForBaseFilename()","description":"getLanguageIdsForBaseFilename(filename): string[]","source":"@site/docs/api/cspell-lib/functions/getLanguageIdsForBaseFilename.md","sourceDirName":"api/cspell-lib/functions","slug":"/api/cspell-lib/functions/getLanguageIdsForBaseFilename","permalink":"/docs/api/cspell-lib/functions/getLanguageIdsForBaseFilename","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/functions/getLanguageIdsForBaseFilename.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Function: getGlobalSettingsAsync()","permalink":"/docs/api/cspell-lib/functions/getGlobalSettingsAsync"},"next":{"title":"Function: getLanguagesForExt()","permalink":"/docs/api/cspell-lib/functions/getLanguagesForExt"}}');var i=t(37557),a=t(46039);const l={},r="Function: getLanguageIdsForBaseFilename()",o={},c=[{value:"Parameters",id:"parameters",level:2},{value:"filename",id:"filename",level:3},{value:"Returns",id:"returns",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"function-getlanguageidsforbasefilename",children:"Function: getLanguageIdsForBaseFilename()"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getLanguageIdsForBaseFilename"}),"(",(0,i.jsx)(n.code,{children:"filename"}),"): ",(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Defined in: packages/cspell-filetypes/dist/filetypes.d.ts:58"}),"\n",(0,i.jsx)(n.p,{children:"Find the matching file types for a given filename."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"filename",children:"filename"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"the full filename"}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,i.jsx)(n.p,{children:"an array of language ids that match the filename. The array is empty if no matches are found."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);