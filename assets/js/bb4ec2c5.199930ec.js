"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[33293],{48:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api/cspell/interfaces/DictionaryDefinitionAlternate","title":"Interface: ~~DictionaryDefinitionAlternate~~","description":"Defined in646","source":"@site/docs/api/cspell/interfaces/DictionaryDefinitionAlternate.md","sourceDirName":"api/cspell/interfaces","slug":"/api/cspell/interfaces/DictionaryDefinitionAlternate","permalink":"/docs/api/cspell/interfaces/DictionaryDefinitionAlternate","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell/interfaces/DictionaryDefinitionAlternate.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: CommandLineSettings","permalink":"/docs/api/cspell/interfaces/CommandLineSettings"},"next":{"title":"Interface: DictionaryDefinitionAugmented","permalink":"/docs/api/cspell/interfaces/DictionaryDefinitionAugmented"}}');var r=n(37557),d=n(46039);const l={},c="Interface: DictionaryDefinitionAlternate",t={},o=[{value:"Deprecated",id:"deprecated",level:2},{value:"Deprecation Message",id:"deprecation-message",level:2},{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"<del>description?</del>",id:"description",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"<del>file</del>",id:"file",level:3},{value:"Deprecated",id:"deprecated-1",level:4},{value:"Deprecation Message",id:"deprecation-message-1",level:4},{value:"<del>name</del>",id:"name",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"<del>noSuggest?</del>",id:"nosuggest",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"<del>repMap?</del>",id:"repmap",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"<del>type?</del>",id:"type",level:3},{value:"Default",id:"default",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"<del>useCompounds?</del>",id:"usecompounds",level:3},{value:"Inherited from",id:"inherited-from-5",level:4}];function a(e){const i={a:"a",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsxs)(i.h1,{id:"interface-dictionarydefinitionalternate",children:["Interface: ",(0,r.jsx)(i.del,{children:"DictionaryDefinitionAlternate"})]})}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:646"}),"\n",(0,r.jsx)(i.p,{children:"Only for legacy dictionary definitions."}),"\n",(0,r.jsx)(i.h2,{id:"deprecated",children:"Deprecated"}),"\n",(0,r.jsx)(i.p,{children:"true"}),"\n",(0,r.jsx)(i.h2,{id:"deprecation-message",children:"Deprecation Message"}),"\n",(0,r.jsxs)(i.p,{children:["Use ",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionPreferred",children:"DictionaryDefinitionPreferred"})," instead."]}),"\n",(0,r.jsx)(i.h2,{id:"extends",children:"Extends"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(i.h3,{id:"description",children:(0,r.jsx)(i.del,{children:"description?"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"description"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:549"}),"\n",(0,r.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#description",children:(0,r.jsx)(i.code,{children:"description"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"file",children:(0,r.jsx)(i.del,{children:"file"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"file"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:654"}),"\n",(0,r.jsx)(i.p,{children:"Path to the file, only for legacy dictionary definitions."}),"\n",(0,r.jsx)(i.h4,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,r.jsx)(i.p,{children:"true"}),"\n",(0,r.jsx)(i.h4,{id:"deprecation-message-1",children:"Deprecation Message"}),"\n",(0,r.jsxs)(i.p,{children:["Use ",(0,r.jsx)(i.code,{children:"path"})," instead."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"name",children:(0,r.jsx)(i.del,{children:"name"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"name"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:545"}),"\n",(0,r.jsx)(i.p,{children:"This is the name of a dictionary."}),"\n",(0,r.jsx)(i.p,{children:"Name Format:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,r.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,r.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,r.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,r.jsxs)(i.li,{children:["Must not contain ",(0,r.jsx)(i.code,{children:"*"}),", ",(0,r.jsx)(i.code,{children:"!"}),", ",(0,r.jsx)(i.code,{children:";"}),", ",(0,r.jsx)(i.code,{children:","}),", ",(0,r.jsx)(i.code,{children:"{"}),", ",(0,r.jsx)(i.code,{children:"}"}),", ",(0,r.jsx)(i.code,{children:"["}),", ",(0,r.jsx)(i.code,{children:"]"}),", ",(0,r.jsx)(i.code,{children:"~"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#name",children:(0,r.jsx)(i.code,{children:"name"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"nosuggest",children:(0,r.jsx)(i.del,{children:"noSuggest?"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"noSuggest"}),": ",(0,r.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:563"}),"\n",(0,r.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),"\n",(0,r.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#nosuggest",children:(0,r.jsx)(i.code,{children:"noSuggest"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"repmap",children:(0,r.jsx)(i.del,{children:"repMap?"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"repMap"}),": ",(0,r.jsx)(i.a,{href:"/docs/api/cspell/type-aliases/ReplaceMap",children:(0,r.jsx)(i.code,{children:"ReplaceMap"})})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:551"}),"\n",(0,r.jsx)(i.p,{children:"Replacement pairs."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#repmap",children:(0,r.jsx)(i.code,{children:"repMap"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"type",children:(0,r.jsx)(i.del,{children:"type?"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"type"}),": ",(0,r.jsx)(i.a,{href:"/docs/api/cspell/type-aliases/DictionaryFileTypes",children:(0,r.jsx)(i.code,{children:"DictionaryFileTypes"})})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:578"}),"\n",(0,r.jsx)(i.p,{children:"Type of file:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,r.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,r.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Default is S."}),"\n",(0,r.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),"\n",(0,r.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,r.jsx)(i.code,{children:".trie"})," files."]}),"\n",(0,r.jsx)(i.h4,{id:"default",children:"Default"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:'"S"\n'})}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#type",children:(0,r.jsx)(i.code,{children:"type"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"usecompounds",children:(0,r.jsx)(i.del,{children:"useCompounds?"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"useCompounds"}),": ",(0,r.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: cspell-types/dist/index.d.mts:553"}),"\n",(0,r.jsx)(i.p,{children:"Use Compounds."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionBase"})}),".",(0,r.jsx)(i.a,{href:"/docs/api/cspell/interfaces/DictionaryDefinitionBase#usecompounds",children:(0,r.jsx)(i.code,{children:"useCompounds"})})]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},46039:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var s=n(18225);const r={},d=s.createContext(r);function l(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);