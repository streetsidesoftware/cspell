name: Simple Workflow Debounce
description: Determine if a workflow / job should run.

inputs:
  tag:
    description: Optional name of the debounce tag.
    required: false
  hash:
    description: Optional hash as part debounce tag.
    required: false
  timeout:
    description: The timeout in seconds. Defaults to 60.
    required: false
  debug:
    description: Show Debug Info
    required: false
outputs:
  ok:
    description: Returns `true` if it is "oK" to run the workflow/job, otherwise ''.
    value: ${{ !!inputs.tag || '' }}
  bock:
    description: Returns `true` if the workflow/job should be dropped, otherwise ''.
    value: ${{ !inputs.tag || '' }}

runs:
  using: "composite"
  steps:
    - name: Show
      if: inputs.debug
      shell: bash
      env:
        INPUTS: ${{ toJSON(inputs) }}
        RUNNER: ${{ toJSON(runner) }}
      run: |
        echo "$debug"
        echo "$RUNNER"

    - name: Calc timeout
      id: timeout
      uses: ./.github/actions/output
      with:
        value: ${{ inputs.timeout || 60 }}

    - name: Calc Timestamp
      id: timestamp
      shell: bash
      run: |
        env TIMESTAMP=$(date +%s.%4N)
        echo full-timestamp=$TIMESTAMP >> $GITHUB_OUTPUT
        echo timestamp=$(echo $TIMESTAMP / 1 | bc) >> $GITHUB_OUTPUT
        echo block=$(echo $TIMESTAMP / ${{steps.timeout.outputs.value}} | bc) >> $GITHUB_OUTPUT
        echo block-prev=$(echo $TIMESTAMP / ${{steps.timeout.outputs.value}} - 1 | bc) >> $GITHUB_OUTPUT

    - name: Show Timestamp
      uses: ./.github/actions/echo
      with:
        value: ${{ toJSON(steps.timestamp.outputs) }}

    - name: Make Cache Content
      id: timestamp_info
      uses: ./.github/actions/output
      with:
        value: |
          {
            "timestamp": ${{steps.timestamp.outputs.timestamp}},
            "timestamp-full": ${{steps.timestamp.outputs.timestamp-full}},
            "block": ${{steps.timestamp.outputs.block}},
            "block-prev": ${{steps.timestamp.outputs.block-prev}},

            "run_id": "${{github.run_id}}",
            "run_number": ${{github.run_number}},
            "run_attempt": ${{github.run_attempt}}
          }

    - name: Show Cache Content
      uses: ./.github/actions/echo
      with:
        value: ${{ steps.timestamp_info.output.value }}

    - name: Calc Filename
      id: cache-path
      uses: ./.github/actions/output
      with:
        value: ${{ runner.temp }}/_debounce-.txt

    - id: cache-key
      uses: streetsidesoftware/action-set-output@v1
      with:
        value: >-
          debounce-${{ inputs.tag }}-${{ inputs.hash }}
        debug: true

    # - uses: actions/cache/restore@v3
    #   id: cache
    #   with:
    #     key: ${{ steps.cache-key.outputs.value }}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
    #     path: ${{ steps.cache-path.outputs.value }}
    #     restore-keys: |
    #       ${{ steps.cache-key.outputs.value }}

    # - name: Cached Results
    #   if: inputs.debug
    #   uses: ./.github/actions/echo
    #   with:
    #     value: >-
    #       Cache: ${{ toJSON(steps.cache) }}

    # - name: Write Timestamp
    #   shell: bash
    #   run: |
    #     date +%s > ${{ steps.cache-path.outputs.value }}

    # - name: Save Cache
    #   id: cache_save
    #   uses: actions/cache/save@v3
    #   with:
    #     key: ${{ steps.cache-key.outputs.value }}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
    #     path: ${{ steps.cache-path.outputs.value }}

    # - name: Cache Save Results
    #   if: inputs.debug
    #   uses: ./.github/actions/echo
    #   with:
    #     value: >-
    #       Cache: ${{ toJSON(steps.cache_save) }}

    # - uses: actions/cache/restore@v3
    #   id: cache-restore
    #   with:
    #     key: ${{ steps.cache-key.outputs.value }}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
    #     path: ${{ steps.cache-path.outputs.value }}
    #     restore-keys: |
    #       ${{ steps.cache-key.outputs.value }}

    # - name: Cached Results
    #   if: inputs.debug
    #   uses: ./.github/actions/echo
    #   with:
    #     value: >-
    #       Cache: ${{ toJSON(steps.cache-restore) }}
