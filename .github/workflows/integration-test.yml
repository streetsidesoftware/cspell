name: Integration Tests
on:
  pull_request:
    paths:
      - "packages/**/package.json"
      - "packages/**/*-lock.yaml"
      - "packages/**/*.ts"
      - "integration-tests/**"
      - "package.json"
      - "*-lock.yaml"
      - ".github/workflows/integration-test.yml"
      - "!docs/**"
  push:
    branches:
      - main
    paths:
      - "packages/**/package.json"
      - "packages/**/*-lock.yaml"
      - "packages/**/*.ts"
      - "integration-tests/**"
      - "package.json"
      - "*-lock.yaml"
      - ".github/workflows/integration-test.yml"
      - "!docs/**"
  # Run on demand
  workflow_dispatch:
    inputs:
      ref:
        description: Optional Branch or hash
        required: false

permissions:
  contents: read

env:
  RUNS_ON: ubuntu-latest
  NODE_VERSION: "16.x"
  NPM_VERSION: "8"

jobs:
  calc-ref:
    runs-on: ubuntu-latest
    env:
      REF_BRANCH: ${{ github.event.inputs.ref || github.ref }}
    outputs:
      ref: ${{ env.REF_BRANCH }}
      runs_on: ${{ env.RUNS_ON }}
      node_version: ${{ env.NODE_VERSION }}
    steps:
      - name: Refs
        run: |
          echo ref: "${{ env.REF_BRANCH }}"
          echo runs_on: "${{ env.RUNS_ON }}"
          echo node_version: ${{ env.NODE_VERSION }}

  load-integrations:
    needs:
      - calc-ref
    uses: ./.github/workflows/reuseable-list-integration-repos.yml
    with:
      ref: ${{ needs.calc-ref.outputs.ref }}

  build:
    needs:
      - calc-ref
    uses: "./.github/workflows/reuseable-build-dist-cache.yml"
    with:
      ref: ${{ needs.calc-ref.outputs.ref }}

  integration-tests:
    needs:
      - calc-ref
      - load-integrations
      - build
    runs-on: ${{ matrix.os }}

    env:
      REF_BRANCH: ${{ needs.calc-ref.outputs.ref }}

    strategy:
      # the integration tests are independent, so we want to run them all.
      fail-fast: false
      matrix:
        node-version:
          - ${{ needs.calc-ref.outputs.node_version }}

        os:
          - ${{ needs.calc-ref.outputs.runs_on }}

        # List of repositories to check.
        # Use `repo-list.sh` in `integration-tests` to generate.
        repo: ${{ fromJSON(needs.load-integrations.outputs.repos) }}
        # repo:
        #   - prettier/prettier
        #   - typescript-eslint/typescript-eslint

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - run: pnpm -v

      - name: Repo Info
        id: step-repo-info
        run: |
          echo "::set-output name=repo-info::$(jq -c '.repositories[] | select(.path == "${{ matrix.repo }}")' integration-tests/config/config.json)"
          echo "::set-output name=repo-hash::${{ hashFiles(
            'integration-tests/tsconfig.json',
            'integration-tests/config/repositories/${{matrix.repo}}/**',
            'integration-tests/snapshots/${{ matrix.repo }}/*',
            'integration-tests/repositories/*',
            'integration-tests/src/**/*.ts', 'integration-tests/tsconfig.json',
            'packages/*/src/**/*.ts', 'packages/*/tsconfig.json',
            'packages/*/*.ts',
            '*-lock.yaml'
          ) }}"

      - name: Cache Integration Run
        id: step-cache-run
        uses: actions/cache@v3
        with:
          key: int-repo-${{ steps.step-repo-info.outputs.repo-hash }}-${{ fromJSON(steps.step-repo-info.outputs.repo-info).commit }}
          path: |
            integration-tests/tsconfig.json

      - name: Cache Build
        id: step-cache-build
        uses: actions/cache@v3
        with:
          key: ${{ needs.build.outputs.key }}
          path: ${{ needs.build.outputs.path }}

      - name: Cached Results
        run: |
          echo Build Cache: ${{ steps.step-cache-build.outputs.cache-hit && 'Hit' || 'Miss' }}
          echo Run Cache: ${{ steps.step-cache-run.outputs.cache-hit && 'Hit' || 'Miss' }}

      - name: Cache Integration Test Repository Files
        if: ${{ !steps.step-cache-run.outputs.cache-hit }}
        uses: actions/cache@v3
        with:
          key: int-repo-temp-files-${{ matrix.repo }}-${{ fromJSON(steps.step-repo-info.outputs.repo-info).commit }}
          path: |
            integration-tests/repositories/temp/${{ matrix.repo }}

      - name: pnpm CI
        if: ${{ !steps.step-cache-build.outputs.cache-hit || !steps.step-cache-run.outputs.cache-hit }}
        run: pnpm i

      - name: Has pnpm has failed?
        if: ${{ failure() }}
        run: |
          ls -alF /home/runner/.pnpm/_logs/*.log
          cat /home/runner/.pnpm/_logs/*.log

      - name: Build
        if: ${{ !steps.step-cache-build.outputs.cache-hit }}
        run: pnpm run build

      - name: Run Integration Tests ${{ matrix.repo }}
        if: ${{ !steps.step-cache-run.outputs.cache-hit }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          cd integration-tests
          && pnpm i
          && pnpm run integration-tests -- ${{ matrix.repo }}

# cspell:ignore apollographql
# cspell:ignore aspnetboilerplate
# cspell:ignore caddyserver
# cspell:ignore logiciel twbs
# cspell:ignore MartinThoma googleapis
# cspell:ignore plasticrake tplink smarthome
