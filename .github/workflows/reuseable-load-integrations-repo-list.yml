# Reusable Workflow
name: R - Load Integrations Repo List

# Export list of repositories to check.
# Reads the list of integrations from ./.github/integrations.json
# Use `repo-list.sh` in `integration-tests` to generate.

on:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      dirty:
        description: Only include dirty repos
        required: false
        type: boolean
    outputs:
      repos:
        description: JSON list of integration test repositories
        value: ${{ jobs.load.outputs.repos }}
      ref:
        description: Branch or ref used
        value: ${{ jobs.load.outputs.ref }}

permissions:
  contents: read

env:
  RUNS_ON: ubuntu-latest
  NODE_VERSION: "18.x"
  NPM_VERSION: "9"

jobs:
  load:
    runs-on: ubuntu-latest
    env:
      REF_BRANCH: ${{ inputs.ref }}
      dirty: ${{ (inputs.dirty && '--dirty') || '' }}
    outputs:
      repos: ${{ env.REPOS }}
      ref: ${{ env.REF_BRANCH }}

    steps:
      - name: Inputs
        env:
          INPUTS: ${{ toJSON(inputs) }}
          DIRTY: ${{ env.dirty }}
        run: |
          echo "inputs: $INPUTS"
          echo "dirty: $DIRTY"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.REF_BRANCH }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - run: pnpm -v

      - run: pnpm i

      - name: Build Dependencies
        run: pnpm run --filter @cspell/cspell-types build

      - name: Update Integrations List
        env:
          DIRTY: ${{ env.dirty }}
        run: |
          cd integration-tests
          pnpm i
          pnpm run build
          echo "REPOS<<HEREDOC" >> $GITHUB_ENV
          ./tester.js list --json $DIRTY -t ${{ secrets.GITHUB_TOKEN }} >> $GITHUB_ENV
          echo HEREDOC >> $GITHUB_ENV

      - name: Show List
        run: |
          echo "$REPOS"
