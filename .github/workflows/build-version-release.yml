name: ' ðŸš€ Publish: 1. Create Version Release'

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry Run'
        type: boolean
        default: true

  workflow_call:
    secrets:
      token:
        required: true

permissions:
  contents: read

env:
  DRY_RUN: ${{ (inputs.dry_run && '--dry-run') || '' }}

jobs:
  release_version:
    runs-on: ubuntu-latest
    steps:
      - name: Show Inputs
        env:
          INPUTS: ${{ toJSON(inputs) }}

        run: |
          echo DRY_RUN: "$DRY_RUN"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup Node and Pnpm
        uses: ./.github/actions/setup-node
        with:
          node-version: 20.x

      - name: Version
        id: version
        run: |
          echo version=$(jq -r .version lerna.json) >> $GITHUB_OUTPUT

      - name: Setup Git
        run: |
          git config user.name streetsidesoftware[bot]
          git config user.email streetsidesoftware[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/streetsidesoftware/cspell.git"

      - name: Install
        run: pnpm i

      # - name: Debug
      #   run: |
      #     pnpx envinfo --system --npmPackages '@lerna-lite/*' --binaries --browsers

      - name: Push Version
        run: pnpm lerna version ${{ steps.version.outputs.version }} --no-private  --sync-workspace-lock --no-changelog --yes ${{ env.DRY_RUN }}
# cspell:ignore pnpx envinfo conventionalcommits
