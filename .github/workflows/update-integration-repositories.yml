name: Update Integration Test Repositories

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1" # Monday at 8 UTC

permissions:
  contents: read

env:
  NEW_BRANCH: "update-integration-repositories"
  REF_BRANCH: main
  RUNS_ON: ubuntu-latest
  NODE_VERSION: "16.x"
  NPM_VERSION: "8"

jobs:
  load-integrations:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.read-integrations.outputs.repos }}
      ref: ${{ env.REF_BRANCH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF_BRANCH }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - run: npm i -g npm@${{ env.NPM_VERSION }}
      - run: npm -v
      - id: read-integrations
        run: |
          REPOS=$(tr "\n" " " < .github/integrations.json)
          echo ::set-output name=repos::$REPOS

  build:
    needs:
      - load-integrations
    uses: "./.github/workflows/build-dist-cache.yml"
    with:
      ref: ${{ needs.load-integrations.outputs.ref }}

  integrations:
    runs-on: ubuntu-latest
    needs:
      - load-integrations
      - build

    strategy:
      # the integration tests are independent, so we want to run them all.
      fail-fast: false
      matrix:
        # List of repositories to check.
        # Use `repo-list.sh` in `integration-tests` to generate.
        repo: ${{ fromJSON(needs.load-integrations.outputs.repos) }}
        # repo:
        #   - prettier/prettier
        #   - typescript-eslint/typescript-eslint

    steps:
      - name: Build Results
        run: |
          echo "key: ${{ needs.build.outputs.key }}"
          echo "path: ${{ needs.build.outputs.path }}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF_BRANCH }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            packages/*/package-lock.json
            integration-tests/package-lock.json

      - run: npm i -g npm@${{ env.NPM_VERSION }}
      - run: npm -v

      - name: Cache Build
        id: step-cache-build
        uses: actions/cache@v3
        with:
          key: ${{ needs.build.outputs.key }}
          path: ${{ needs.build.outputs.path }}

      - name: Cached Results
        run: |
          echo Build Cache: ${{ steps.step-cache-build.outputs.cache-hit && 'Hit' || 'Miss' }}

      - name: Npm CI
        run: npm ci

      - name: Has Npm has failed?
        if: ${{ failure() }}
        run: |
          ls -alF /home/runner/.npm/_logs/*.log
          cat /home/runner/.npm/_logs/*.log

      - name: Check Build
        if: ${{ !steps.step-cache-build.outputs.cache-hit }}
        run: exit 1

      - name: Run Integration Tests ${{ matrix.repo }}
        if: ${{ !steps.step-cache-run.outputs.cache-hit }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          cd integration-tests
          && npm i
          && npm run update-repositories -- ${{ matrix.repo }}

      - name: Store Repo Diff
        id: step-repo-info
        run: |
          mkdir temp
          REPO=$(echo "${{ matrix.repo }}" | sed "s/[/]/__/g")
          echo "${{ matrix.repo }} =>" $REPO
          git diff > temp/$REPO.diff
      - name: store diff
        uses: actions/upload-artifact@v3
        with:
          name: diffs
          path: temp/*.diff
          retention-days: 1

  pr:
    runs-on: ubuntu-latest
    needs: integrations

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF_BRANCH }}

      - name: restore repos
        uses: actions/download-artifact@v3
        with:
          name: diffs
          path: temp
      - name: show downloaded
        run: ls -alF temp
      - name: show diff
        run: cat temp/*.diff

      - name: apply diff
        run: git apply --allow-empty temp/*.diff

      - name: Has changes
        run: |
          git --no-pager diff --compact-summary  --exit-code && echo "git_status=clean" >> $GITHUB_ENV || echo "git_status=dirty" >> $GITHUB_ENV
          git --no-pager diff --compact-summary
      - name: Gen Body
        run: |
          echo 'git_body<<DIFF' >> $GITHUB_ENV
          git --no-pager diff --compact-summary >> $GITHUB_ENV
          echo 'DIFF' >> $GITHUB_ENV
      - name: Echo git_status
        run: echo ${{ env.git_status }}
      - uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4 # v1.5 # cspell:ignore tibdex
        if: env.git_status == 'dirty'
        id: generate-token
        with:
          app_id: ${{ secrets.AUTOMATION_APP_ID }}
          private_key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
      - name: Create Pull Request
        if: env.git_status == 'dirty'
        uses: peter-evans/create-pull-request@f094b77505fb89581e68a1163fbd2fffece39da1 # v4
        with:
          commit-message: "ci: Workflow Bot -- Update Integration Snapshots"
          branch: ${{ env.NEW_BRANCH }}
          base: ${{ env.REF_BRANCH }}
          title: "ci: Workflow Bot -- Update Integration Snapshots (${{ env.REF_BRANCH }})"
          token: ${{ steps.generate-token.outputs.token }}
          body: ${{ env.git_body }}
          delete-branch: true
