name: Test
on:
  pull_request:
    paths:
      - ".github/workflows/test.yml"
      - "package-lock.json"
      - "package.json"
      - "packages/**/*.js"
      - "packages/**/*.ts"
      - "packages/**/package-lock.json"
      - "packages/**/package.json"
      - "packages/**/tsconfig.json"
      - "test-packages/**/*.js"
      - "test-packages/**/*.ts"
      - "test-packages/**/package-lock.json"
      - "test-packages/**/package.json"
      - "test-packages/**/tsconfig.json"
      - "test-fixtures/**"
      - "tsconfig*.json"
      - "!docs/**"
      - "!website/**"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"

permissions:
  contents: read

jobs:
  test-node-versions:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version:
          # List of supported node versions (latest is tested in `test-os`)
          - 14.x
          - 16.x
          - 18.x

        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            packages/*/package-lock.json
            integration-tests/package-lock.json

      - name: NX Cache
        uses: actions/cache@v3
        env:
          CALC_HASH_TS: ${{ hashFiles('**/*.ts') }}
          CALC_HASH_PKG: ${{ hashFiles('package*.json', 'packages/*/package*.json', 'integration-tests/*/package*.json') }}
        with:
          key: >
            nx-cache-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-${{ runner.os }}
          path: |
            temp/nxCache
          restore-keys: |
            nx-cache-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-
            nx-cache-${{ env.CALC_HASH_TS }}-
            nx-cache-

      - run: npm i -g npm@8
      - run: npm -v

      - name: Restore CSpell cache
        uses: actions/cache@v3
        with:
          key: cspell-cache-${{ runner.os }}-test-${{ hashFiles('**/*.ts', '**/*.md') }}
          path: |
            .cspell/.cspellcache
          restore-keys: |
            cspell-cache-${{ runner.os }}-test-
            cspell-cache-${{ runner.os }}-

      - run: npm ci
      - run: npm run build
      - run: npm test

      - name: verify trace command
        run: npm run test-bin-trace

      - name: verify the spell checker runs
        run: npm run test-bin-spell

      - name: verify the check command
        run: npm run test-bin-check

      # Ensure the repository is clean after build & test
      - run: git --no-pager diff --exit-code

  test-os:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version:
          # Test the latest node version here, move older versions to `test-old-node-versions`
          - 16.x

        os:
          - windows-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: NX Cache
        uses: actions/cache@v3
        env:
          CALC_HASH_TS: ${{ hashFiles('**/*.ts') }}
          CALC_HASH_PKG: ${{ hashFiles('package*.json', 'packages/*/package*.json', 'integration-tests/*/package*.json') }}
        with:
          key: >
            nx-cache-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-${{ runner.os }}
          path: |
            temp/nxCache
          restore-keys: |
            nx-cache-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-
            nx-cache-${{ env.CALC_HASH_TS }}-
            nx-cache-

      - run: npm i -g npm@8
      - run: npm -v

      - run: npm ci
      - run: npm run build
      - run: npm test

      - name: verify trace command
        run: npm run test-bin-trace

      - name: verify the spell checker runs
        run: npm run test-bin-spell

      - name: verify the check command
        run: npm run test-bin-check

      # Ensure the repository is clean after build & test
      - run: git --no-pager diff --compact-summary --exit-code

  test-full-build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version:
          - 18.x

        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            packages/*/package-lock.json
            integration-tests/package-lock.json

      - name: NX Cache
        uses: actions/cache@v3
        env:
          CALC_HASH_TS: ${{ hashFiles('**/*.ts') }}
          CALC_HASH_PKG: ${{ hashFiles('package*.json', 'packages/*/package*.json', 'integration-tests/*/package*.json') }}
        with:
          key: >
            nx-cache-full-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-${{ runner.os }}
          path: |
            temp/nxCache
          restore-keys: |
            nx-cache-full-${{ env.CALC_HASH_TS }}-${{ env.CALC_HASH_PKG }}-
            nx-cache-full-${{ env.CALC_HASH_TS }}-
            nx-cache-full-

      - run: npm i -g npm@8
      - run: npm -v

      - name: Swap tsconfig.json
        run: |
          cp tsconfig-full.json tsconfig.json

      - name: Display Config
        run: |
          echo "$(cat tsconfig.json)"

      - run: npm ci
      - run: npm run build
      - run: npm test
