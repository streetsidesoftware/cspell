"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[11096],{28:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/cspell-lib/functions/getLanguagesForExt","title":"Function: getLanguagesForExt()","description":"getLanguagesForExt(ext): FileTypeId[]","source":"@site/docs/api/cspell-lib/functions/getLanguagesForExt.md","sourceDirName":"api/cspell-lib/functions","slug":"/api/cspell-lib/functions/getLanguagesForExt","permalink":"/docsV2/docs/api/cspell-lib/functions/getLanguagesForExt","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/functions/getLanguagesForExt.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Function: getLanguageIdsForBaseFilename()","permalink":"/docsV2/docs/api/cspell-lib/functions/getLanguageIdsForBaseFilename"},"next":{"title":"Function: getLogger()","permalink":"/docsV2/docs/api/cspell-lib/functions/getLogger"}}');var i=t(86106),r=t(72300);const o={},a="Function: getLanguagesForExt()",c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"ext",id:"ext",level:3},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"function-getlanguagesforext",children:"Function: getLanguagesForExt()"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getLanguagesForExt"}),"(",(0,i.jsx)(n.code,{children:"ext"}),"): ",(0,i.jsx)(n.code,{children:"FileTypeId"}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Tries to find a matching language for a given file extension."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"ext",children:"ext"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"the file extension to look up."}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"FileTypeId"}),"[]"]}),"\n",(0,i.jsx)(n.p,{children:"an array of language ids that match the extension. The array is empty if no matches are found."}),"\n",(0,i.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:"packages/cspell-filetypes/dist/filetypes.d.ts:52"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},72300:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(7378);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);