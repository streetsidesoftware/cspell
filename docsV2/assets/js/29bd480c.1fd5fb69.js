"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[329],{1152:(e,i,d)=>{d.r(i),d.d(i,{assets:()=>t,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Configuration/auto_properties","title":"Properties","description":"Settings","source":"@site/docs/Configuration/auto_properties.md","sourceDirName":"Configuration","slug":"/Configuration/properties","permalink":"/docsV2/docs/Configuration/properties","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/Configuration/auto_properties.md","tags":[],"version":"current","frontMatter":{"title":"Properties","slug":"properties","toc_max_heading_level":5,"format":"md"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docsV2/docs/Configuration/"},"next":{"title":"Document Settings","permalink":"/docsV2/docs/Configuration/document-settings"}}');var s=d(6106),r=d(7735);const c={title:"Properties",slug:"properties",toc_max_heading_level:5,format:"md"},l="CSpell Configuration",t={},o=[{value:"Settings",id:"settings",level:2},{value:"Settings Fields",id:"settings-fields",level:3},{value:"<code>$schema</code>",id:"settings--schema",level:4},{value:"<code>allowCompoundWords</code>",id:"settings-allowcompoundwords",level:4},{value:"<code>cache</code>",id:"settings-cache",level:4},{value:"<code>caseSensitive</code>",id:"settings-casesensitive",level:4},{value:"<code>description</code>",id:"settings-description",level:4},{value:"<code>dictionaries</code>",id:"settings-dictionaries",level:4},{value:"<code>dictionaryDefinitions</code>",id:"settings-dictionarydefinitions",level:4},{value:"<code>enableFiletypes</code>",id:"settings-enablefiletypes",level:4},{value:"<code>enableGlobDot</code>",id:"settings-enableglobdot",level:4},{value:"<code>enabled</code>",id:"settings-enabled",level:4},{value:"<code>enabledFileTypes</code>",id:"settings-enabledfiletypes",level:4},{value:"<code>enabledLanguageIds</code>",id:"settings-enabledlanguageids",level:4},{value:"<code>failFast</code>",id:"settings-failfast",level:4},{value:"<code>features</code>",id:"settings-features",level:4},{value:"<code>files</code>",id:"settings-files",level:4},{value:"<code>flagWords</code>",id:"settings-flagwords",level:4},{value:"<code>gitignoreRoot</code>",id:"settings-gitignoreroot",level:4},{value:"<code>globRoot</code>",id:"settings-globroot",level:4},{value:"<code>id</code>",id:"settings-id",level:4},{value:"<code>ignorePaths</code>",id:"settings-ignorepaths",level:4},{value:"<code>ignoreRegExpList</code>",id:"settings-ignoreregexplist",level:4},{value:"<code>ignoreWords</code>",id:"settings-ignorewords",level:4},{value:"<code>import</code>",id:"settings-import",level:4},{value:"<code>includeRegExpList</code>",id:"settings-includeregexplist",level:4},{value:"<code>language</code>",id:"settings-language",level:4},{value:"<code>languageId</code>",id:"settings-languageid",level:4},{value:"<code>languageSettings</code>",id:"settings-languagesettings",level:4},{value:"<code>loadDefaultConfiguration</code>",id:"settings-loaddefaultconfiguration",level:4},{value:"<code>maxDuplicateProblems</code>",id:"settings-maxduplicateproblems",level:4},{value:"<code>maxNumberOfProblems</code>",id:"settings-maxnumberofproblems",level:4},{value:"<code>minWordLength</code>",id:"settings-minwordlength",level:4},{value:"<code>name</code>",id:"settings-name",level:4},{value:"<code>noConfigSearch</code>",id:"settings-noconfigsearch",level:4},{value:"<code>noSuggestDictionaries</code>",id:"settings-nosuggestdictionaries",level:4},{value:"<code>numSuggestions</code>",id:"settings-numsuggestions",level:4},{value:"<code>overrides</code>",id:"settings-overrides",level:4},{value:"<code>patterns</code>",id:"settings-patterns",level:4},{value:"<code>pnpFiles</code>",id:"settings-pnpfiles",level:4},{value:"<code>readonly</code>",id:"settings-readonly",level:4},{value:"<code>reporters</code>",id:"settings-reporters",level:4},{value:"<code>showStatus</code>",id:"settings-showstatus",level:4},{value:"<code>spellCheckDelayMs</code>",id:"settings-spellcheckdelayms",level:4},{value:"<code>suggestWords</code>",id:"settings-suggestwords",level:4},{value:"<code>suggestionNumChanges</code>",id:"settings-suggestionnumchanges",level:4},{value:"<code>suggestionsTimeout</code>",id:"settings-suggestionstimeout",level:4},{value:"<code>useGitignore</code>",id:"settings-usegitignore",level:4},{value:"<code>usePnP</code>",id:"settings-usepnp",level:4},{value:"<code>userWords</code>",id:"settings-userwords",level:4},{value:"<code>validateDirectives</code>",id:"settings-validatedirectives",level:4},{value:"<code>version</code>",id:"settings-version",level:4},{value:"<code>words</code>",id:"settings-words",level:4},{value:"CacheFormat",id:"cacheformat",level:2},{value:"CacheSettings",id:"cachesettings",level:2},{value:"CacheSettings Fields",id:"cachesettings-fields",level:3},{value:"<code>cacheFormat</code>",id:"cachesettings-cacheformat",level:4},{value:"<code>cacheLocation</code>",id:"cachesettings-cachelocation",level:4},{value:"<code>cacheStrategy</code>",id:"cachesettings-cachestrategy",level:4},{value:"<code>useCache</code>",id:"cachesettings-usecache",level:4},{value:"CacheStrategy",id:"cachestrategy",level:2},{value:"CharacterSet",id:"characterset",level:2},{value:"CharacterSetCosts",id:"charactersetcosts",level:2},{value:"CharacterSetCosts Fields",id:"charactersetcosts-fields",level:3},{value:"<code>characters</code>",id:"charactersetcosts-characters",level:4},{value:"<code>cost</code>",id:"charactersetcosts-cost",level:4},{value:"<code>penalty</code>",id:"charactersetcosts-penalty",level:4},{value:"CostMapDefInsDel",id:"costmapdefinsdel",level:2},{value:"CostMapDefInsDel Fields",id:"costmapdefinsdel-fields",level:3},{value:"<code>description</code>",id:"costmapdefinsdel-description",level:4},{value:"<code>insDel</code>",id:"costmapdefinsdel-insdel",level:4},{value:"<code>map</code>",id:"costmapdefinsdel-map",level:4},{value:"<code>penalty</code>",id:"costmapdefinsdel-penalty",level:4},{value:"<code>replace</code>",id:"costmapdefinsdel-replace",level:4},{value:"<code>swap</code>",id:"costmapdefinsdel-swap",level:4},{value:"CostMapDefReplace",id:"costmapdefreplace",level:2},{value:"CostMapDefReplace Fields",id:"costmapdefreplace-fields",level:3},{value:"<code>description</code>",id:"costmapdefreplace-description",level:4},{value:"<code>insDel</code>",id:"costmapdefreplace-insdel",level:4},{value:"<code>map</code>",id:"costmapdefreplace-map",level:4},{value:"<code>penalty</code>",id:"costmapdefreplace-penalty",level:4},{value:"<code>replace</code>",id:"costmapdefreplace-replace",level:4},{value:"<code>swap</code>",id:"costmapdefreplace-swap",level:4},{value:"CostMapDefSwap",id:"costmapdefswap",level:2},{value:"CostMapDefSwap Fields",id:"costmapdefswap-fields",level:3},{value:"<code>description</code>",id:"costmapdefswap-description",level:4},{value:"<code>insDel</code>",id:"costmapdefswap-insdel",level:4},{value:"<code>map</code>",id:"costmapdefswap-map",level:4},{value:"<code>penalty</code>",id:"costmapdefswap-penalty",level:4},{value:"<code>replace</code>",id:"costmapdefswap-replace",level:4},{value:"<code>swap</code>",id:"costmapdefswap-swap",level:4},{value:"CustomDictionaryPath",id:"customdictionarypath",level:2},{value:"CustomDictionaryScope",id:"customdictionaryscope",level:2},{value:"DictionaryDefinition",id:"dictionarydefinition",level:2},{value:"DictionaryDefinitionAlternate",id:"dictionarydefinitionalternate",level:2},{value:"DictionaryDefinitionAlternate Fields",id:"dictionarydefinitionalternate-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitionalternate-description",level:4},{value:"<code>file</code>",id:"dictionarydefinitionalternate-file",level:4},{value:"<code>name</code>",id:"dictionarydefinitionalternate-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitionalternate-nosuggest",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitionalternate-repmap",level:4},{value:"<code>type</code>",id:"dictionarydefinitionalternate-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitionalternate-usecompounds",level:4},{value:"DictionaryDefinitionAugmented",id:"dictionarydefinitionaugmented",level:2},{value:"DictionaryDefinitionAugmented Fields",id:"dictionarydefinitionaugmented-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitionaugmented-description",level:4},{value:"<code>dictionaryInformation</code>",id:"dictionarydefinitionaugmented-dictionaryinformation",level:4},{value:"<code>name</code>",id:"dictionarydefinitionaugmented-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitionaugmented-nosuggest",level:4},{value:"<code>path</code>",id:"dictionarydefinitionaugmented-path",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitionaugmented-repmap",level:4},{value:"<code>type</code>",id:"dictionarydefinitionaugmented-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitionaugmented-usecompounds",level:4},{value:"DictionaryDefinitionCustom",id:"dictionarydefinitioncustom",level:2},{value:"DictionaryDefinitionCustom Fields",id:"dictionarydefinitioncustom-fields",level:3},{value:"<code>addWords</code>",id:"dictionarydefinitioncustom-addwords",level:4},{value:"<code>description</code>",id:"dictionarydefinitioncustom-description",level:4},{value:"<code>name</code>",id:"dictionarydefinitioncustom-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitioncustom-nosuggest",level:4},{value:"<code>path</code>",id:"dictionarydefinitioncustom-path",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitioncustom-repmap",level:4},{value:"<code>scope</code>",id:"dictionarydefinitioncustom-scope",level:4},{value:"<code>type</code>",id:"dictionarydefinitioncustom-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitioncustom-usecompounds",level:4},{value:"DictionaryDefinitionInline",id:"dictionarydefinitioninline",level:2},{value:"DictionaryDefinitionInlineFlagWords",id:"dictionarydefinitioninlineflagwords",level:2},{value:"DictionaryDefinitionInlineFlagWords Fields",id:"dictionarydefinitioninlineflagwords-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitioninlineflagwords-description",level:4},{value:"<code>flagWords</code>",id:"dictionarydefinitioninlineflagwords-flagwords",level:4},{value:"<code>ignoreWords</code>",id:"dictionarydefinitioninlineflagwords-ignorewords",level:4},{value:"<code>name</code>",id:"dictionarydefinitioninlineflagwords-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitioninlineflagwords-nosuggest",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitioninlineflagwords-repmap",level:4},{value:"<code>suggestWords</code>",id:"dictionarydefinitioninlineflagwords-suggestwords",level:4},{value:"<code>type</code>",id:"dictionarydefinitioninlineflagwords-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitioninlineflagwords-usecompounds",level:4},{value:"<code>words</code>",id:"dictionarydefinitioninlineflagwords-words",level:4},{value:"DictionaryDefinitionInlineIgnoreWords",id:"dictionarydefinitioninlineignorewords",level:2},{value:"DictionaryDefinitionInlineIgnoreWords Fields",id:"dictionarydefinitioninlineignorewords-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitioninlineignorewords-description",level:4},{value:"<code>flagWords</code>",id:"dictionarydefinitioninlineignorewords-flagwords",level:4},{value:"<code>ignoreWords</code>",id:"dictionarydefinitioninlineignorewords-ignorewords",level:4},{value:"<code>name</code>",id:"dictionarydefinitioninlineignorewords-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitioninlineignorewords-nosuggest",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitioninlineignorewords-repmap",level:4},{value:"<code>suggestWords</code>",id:"dictionarydefinitioninlineignorewords-suggestwords",level:4},{value:"<code>type</code>",id:"dictionarydefinitioninlineignorewords-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitioninlineignorewords-usecompounds",level:4},{value:"<code>words</code>",id:"dictionarydefinitioninlineignorewords-words",level:4},{value:"DictionaryDefinitionInlineSuggestWords",id:"dictionarydefinitioninlinesuggestwords",level:2},{value:"DictionaryDefinitionInlineSuggestWords Fields",id:"dictionarydefinitioninlinesuggestwords-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitioninlinesuggestwords-description",level:4},{value:"<code>flagWords</code>",id:"dictionarydefinitioninlinesuggestwords-flagwords",level:4},{value:"<code>ignoreWords</code>",id:"dictionarydefinitioninlinesuggestwords-ignorewords",level:4},{value:"<code>name</code>",id:"dictionarydefinitioninlinesuggestwords-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitioninlinesuggestwords-nosuggest",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitioninlinesuggestwords-repmap",level:4},{value:"<code>suggestWords</code>",id:"dictionarydefinitioninlinesuggestwords-suggestwords",level:4},{value:"<code>type</code>",id:"dictionarydefinitioninlinesuggestwords-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitioninlinesuggestwords-usecompounds",level:4},{value:"<code>words</code>",id:"dictionarydefinitioninlinesuggestwords-words",level:4},{value:"DictionaryDefinitionInlineWords",id:"dictionarydefinitioninlinewords",level:2},{value:"DictionaryDefinitionInlineWords Fields",id:"dictionarydefinitioninlinewords-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitioninlinewords-description",level:4},{value:"<code>flagWords</code>",id:"dictionarydefinitioninlinewords-flagwords",level:4},{value:"<code>ignoreWords</code>",id:"dictionarydefinitioninlinewords-ignorewords",level:4},{value:"<code>name</code>",id:"dictionarydefinitioninlinewords-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitioninlinewords-nosuggest",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitioninlinewords-repmap",level:4},{value:"<code>suggestWords</code>",id:"dictionarydefinitioninlinewords-suggestwords",level:4},{value:"<code>type</code>",id:"dictionarydefinitioninlinewords-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitioninlinewords-usecompounds",level:4},{value:"<code>words</code>",id:"dictionarydefinitioninlinewords-words",level:4},{value:"DictionaryDefinitionPreferred",id:"dictionarydefinitionpreferred",level:2},{value:"DictionaryDefinitionPreferred Fields",id:"dictionarydefinitionpreferred-fields",level:3},{value:"<code>description</code>",id:"dictionarydefinitionpreferred-description",level:4},{value:"<code>name</code>",id:"dictionarydefinitionpreferred-name",level:4},{value:"<code>noSuggest</code>",id:"dictionarydefinitionpreferred-nosuggest",level:4},{value:"<code>path</code>",id:"dictionarydefinitionpreferred-path",level:4},{value:"<code>repMap</code>",id:"dictionarydefinitionpreferred-repmap",level:4},{value:"<code>type</code>",id:"dictionarydefinitionpreferred-type",level:4},{value:"<code>useCompounds</code>",id:"dictionarydefinitionpreferred-usecompounds",level:4},{value:"DictionaryFileTypes",id:"dictionaryfiletypes",level:2},{value:"DictionaryId",id:"dictionaryid",level:2},{value:"DictionaryInformation",id:"dictionaryinformation",level:2},{value:"DictionaryInformation Fields",id:"dictionaryinformation-fields",level:3},{value:"<code>accents</code>",id:"dictionaryinformation-accents",level:4},{value:"<code>adjustments</code>",id:"dictionaryinformation-adjustments",level:4},{value:"<code>alphabet</code>",id:"dictionaryinformation-alphabet",level:4},{value:"<code>costs</code>",id:"dictionaryinformation-costs",level:4},{value:"<code>hunspellInformation</code>",id:"dictionaryinformation-hunspellinformation",level:4},{value:"<code>ignore</code>",id:"dictionaryinformation-ignore",level:4},{value:"<code>locale</code>",id:"dictionaryinformation-locale",level:4},{value:"<code>suggestionEditCosts</code>",id:"dictionaryinformation-suggestioneditcosts",level:4},{value:"DictionaryNegRef",id:"dictionarynegref",level:2},{value:"DictionaryPath",id:"dictionarypath",level:2},{value:"DictionaryRef",id:"dictionaryref",level:2},{value:"DictionaryReference",id:"dictionaryreference",level:2},{value:"EditCosts",id:"editcosts",level:2},{value:"EditCosts Fields",id:"editcosts-fields",level:3},{value:"<code>accentCosts</code>",id:"editcosts-accentcosts",level:4},{value:"<code>baseCost</code>",id:"editcosts-basecost",level:4},{value:"<code>capsCosts</code>",id:"editcosts-capscosts",level:4},{value:"<code>firstLetterPenalty</code>",id:"editcosts-firstletterpenalty",level:4},{value:"<code>nonAlphabetCosts</code>",id:"editcosts-nonalphabetcosts",level:4},{value:"FSPathResolvable",id:"fspathresolvable",level:2},{value:"FeatureEnableOnly",id:"featureenableonly",level:2},{value:"Features",id:"features",level:2},{value:"Features Fields",id:"features-fields",level:3},{value:"<code>weighted-suggestions</code>",id:"features-weighted-suggestions",level:4},{value:"FsDictionaryPath",id:"fsdictionarypath",level:2},{value:"FsPath",id:"fspath",level:2},{value:"Glob",id:"glob",level:2},{value:"HunspellInformation",id:"hunspellinformation",level:2},{value:"HunspellInformation Fields",id:"hunspellinformation-fields",level:3},{value:"<code>aff</code>",id:"hunspellinformation-aff",level:4},{value:"<code>costs</code>",id:"hunspellinformation-costs",level:4},{value:"LanguageId",id:"languageid",level:2},{value:"LanguageIdMultiple",id:"languageidmultiple",level:2},{value:"LanguageIdMultipleNeg",id:"languageidmultipleneg",level:2},{value:"LanguageIdSingle",id:"languageidsingle",level:2},{value:"LanguageSetting",id:"languagesetting",level:2},{value:"LanguageSetting Fields",id:"languagesetting-fields",level:3},{value:"<code>allowCompoundWords</code>",id:"languagesetting-allowcompoundwords",level:4},{value:"<code>caseSensitive</code>",id:"languagesetting-casesensitive",level:4},{value:"<code>description</code>",id:"languagesetting-description",level:4},{value:"<code>dictionaries</code>",id:"languagesetting-dictionaries",level:4},{value:"<code>dictionaryDefinitions</code>",id:"languagesetting-dictionarydefinitions",level:4},{value:"<code>enabled</code>",id:"languagesetting-enabled",level:4},{value:"<code>flagWords</code>",id:"languagesetting-flagwords",level:4},{value:"<code>id</code>",id:"languagesetting-id",level:4},{value:"<code>ignoreRegExpList</code>",id:"languagesetting-ignoreregexplist",level:4},{value:"<code>ignoreWords</code>",id:"languagesetting-ignorewords",level:4},{value:"<code>includeRegExpList</code>",id:"languagesetting-includeregexplist",level:4},{value:"<code>languageId</code>",id:"languagesetting-languageid",level:4},{value:"<code>local</code>",id:"languagesetting-local",level:4},{value:"<code>locale</code>",id:"languagesetting-locale",level:4},{value:"<code>name</code>",id:"languagesetting-name",level:4},{value:"<code>noSuggestDictionaries</code>",id:"languagesetting-nosuggestdictionaries",level:4},{value:"<code>patterns</code>",id:"languagesetting-patterns",level:4},{value:"<code>suggestWords</code>",id:"languagesetting-suggestwords",level:4},{value:"<code>words</code>",id:"languagesetting-words",level:4},{value:"LocaleId",id:"localeid",level:2},{value:"MatchingFileType",id:"matchingfiletype",level:2},{value:"OverrideSettings",id:"overridesettings",level:2},{value:"OverrideSettings Fields",id:"overridesettings-fields",level:3},{value:"<code>allowCompoundWords</code>",id:"overridesettings-allowcompoundwords",level:4},{value:"<code>caseSensitive</code>",id:"overridesettings-casesensitive",level:4},{value:"<code>description</code>",id:"overridesettings-description",level:4},{value:"<code>dictionaries</code>",id:"overridesettings-dictionaries",level:4},{value:"<code>dictionaryDefinitions</code>",id:"overridesettings-dictionarydefinitions",level:4},{value:"<code>enableFiletypes</code>",id:"overridesettings-enablefiletypes",level:4},{value:"<code>enabled</code>",id:"overridesettings-enabled",level:4},{value:"<code>enabledFileTypes</code>",id:"overridesettings-enabledfiletypes",level:4},{value:"<code>enabledLanguageIds</code>",id:"overridesettings-enabledlanguageids",level:4},{value:"<code>filename</code>",id:"overridesettings-filename",level:4},{value:"<code>flagWords</code>",id:"overridesettings-flagwords",level:4},{value:"<code>id</code>",id:"overridesettings-id",level:4},{value:"<code>ignoreRegExpList</code>",id:"overridesettings-ignoreregexplist",level:4},{value:"<code>ignoreWords</code>",id:"overridesettings-ignorewords",level:4},{value:"<code>includeRegExpList</code>",id:"overridesettings-includeregexplist",level:4},{value:"<code>language</code>",id:"overridesettings-language",level:4},{value:"<code>languageId</code>",id:"overridesettings-languageid",level:4},{value:"<code>languageSettings</code>",id:"overridesettings-languagesettings",level:4},{value:"<code>loadDefaultConfiguration</code>",id:"overridesettings-loaddefaultconfiguration",level:4},{value:"<code>maxDuplicateProblems</code>",id:"overridesettings-maxduplicateproblems",level:4},{value:"<code>maxNumberOfProblems</code>",id:"overridesettings-maxnumberofproblems",level:4},{value:"<code>minWordLength</code>",id:"overridesettings-minwordlength",level:4},{value:"<code>name</code>",id:"overridesettings-name",level:4},{value:"<code>noSuggestDictionaries</code>",id:"overridesettings-nosuggestdictionaries",level:4},{value:"<code>numSuggestions</code>",id:"overridesettings-numsuggestions",level:4},{value:"<code>patterns</code>",id:"overridesettings-patterns",level:4},{value:"<code>pnpFiles</code>",id:"overridesettings-pnpfiles",level:4},{value:"<code>suggestWords</code>",id:"overridesettings-suggestwords",level:4},{value:"<code>suggestionNumChanges</code>",id:"overridesettings-suggestionnumchanges",level:4},{value:"<code>suggestionsTimeout</code>",id:"overridesettings-suggestionstimeout",level:4},{value:"<code>usePnP</code>",id:"overridesettings-usepnp",level:4},{value:"<code>words</code>",id:"overridesettings-words",level:4},{value:"Pattern",id:"pattern",level:2},{value:"PatternAdjustment",id:"patternadjustment",level:2},{value:"PatternAdjustment Fields",id:"patternadjustment-fields",level:3},{value:"<code>id</code>",id:"patternadjustment-id",level:4},{value:"<code>penalty</code>",id:"patternadjustment-penalty",level:4},{value:"<code>regexp</code>",id:"patternadjustment-regexp",level:4},{value:"PatternId",id:"patternid",level:2},{value:"PatternRef",id:"patternref",level:2},{value:"PredefinedPatterns",id:"predefinedpatterns",level:2},{value:"RegExpPatternDefinition",id:"regexppatterndefinition",level:2},{value:"RegExpPatternDefinition Fields",id:"regexppatterndefinition-fields",level:3},{value:"<code>description</code>",id:"regexppatterndefinition-description",level:4},{value:"<code>name</code>",id:"regexppatterndefinition-name",level:4},{value:"<code>pattern</code>",id:"regexppatterndefinition-pattern",level:4},{value:"RegExpPatternList",id:"regexppatternlist",level:2},{value:"ReplaceEntry",id:"replaceentry",level:2},{value:"ReplaceMap",id:"replacemap",level:2},{value:"ReporterModuleName",id:"reportermodulename",level:2},{value:"ReporterOptions",id:"reporteroptions",level:2},{value:"ReporterSettings",id:"reportersettings",level:2},{value:"Serializable",id:"serializable",level:2},{value:"SimpleGlob",id:"simpleglob",level:2},{value:"SuggestionCostMapDef",id:"suggestioncostmapdef",level:2},{value:"SuggestionCostsDefs",id:"suggestioncostsdefs",level:2},{value:"Version",id:"version",level:2},{value:"VersionLatest",id:"versionlatest",level:2},{value:"VersionLegacy",id:"versionlegacy",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"cspell-configuration",children:"CSpell Configuration"})}),"\n",(0,s.jsx)(i.h2,{id:"settings",children:"Settings"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings--schema",children:"$schema"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Url to JSON Schema"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-allowcompoundwords",children:"allowCompoundWords"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"True to enable compound word checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-cache",children:"cache"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachesettings",children:(0,s.jsx)(i.code,{children:"CacheSettings"})})}),(0,s.jsx)(i.td,{children:"Define cache settings."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-casesensitive",children:"caseSensitive"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Determines if words must match case and accent rules."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-dictionaries",children:"dictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-dictionarydefinitions",children:"dictionaryDefinitions"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Define additional available dictionaries."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-enablefiletypes",children:"enableFiletypes"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Enable / Disable checking file types (languageIds)."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-enableglobdot",children:"enableGlobDot"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["Enable scanning files and directories beginning with ",(0,s.jsx)(i.code,{children:"."})," (period)."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-enabled",children:"enabled"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Is the spell checker enabled."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-enabledfiletypes",children:"enabledFileTypes"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"object"})}),(0,s.jsx)(i.td,{children:"Enable / Disable checking file types (languageIds)."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-enabledlanguageids",children:"enabledLanguageIds"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Specify a list of file types to spell check. It is better to use  ",(0,s.jsx)(i.a,{href:"#settings-enabledfiletypes",children:"Settings.enabledFileTypes"}),"  to Enable / Disable checking files types."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-failfast",children:"failFast"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Exit with non-zero code as soon as an issue/error is encountered (useful for CI or git hooks)"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-features",children:"features"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#features",children:(0,s.jsx)(i.code,{children:"Features"})})}),(0,s.jsx)(i.td,{children:"Configure CSpell features."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-files",children:"files"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Glob patterns of files to be checked."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-gitignoreroot",children:"gitignoreRoot"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Tells the spell checker to stop searching for ",(0,s.jsx)(i.code,{children:".gitignore"})," files when it reaches a matching root."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-globroot",children:"globRoot"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#fspathresolvable",children:(0,s.jsx)(i.code,{children:"FSPathResolvable"})})}),(0,s.jsx)(i.td,{children:"The root to use for glob patterns found in this configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-id",children:"id"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional identifier."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-ignorepaths",children:"ignorePaths"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Glob patterns of files to be ignored."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-ignoreregexplist",children:"ignoreRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or pattern names to exclude from spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-import",children:"import"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Allows this configuration to inherit configuration for one or more other files."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-includeregexplist",children:"includeRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or defined pattern names to match for spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-language",children:"language"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})})}),(0,s.jsx)(i.td,{children:"Current active spelling language. This specifies the language locale to use in choosing the"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-languageid",children:"languageId"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})}),(0,s.jsx)(i.td,{children:"Forces the spell checker to assume a give language id. Used mainly as an Override."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-languagesettings",children:"languageSettings"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languagesetting",children:(0,s.jsx)(i.code,{children:"LanguageSetting"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Additional settings for individual languages."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-loaddefaultconfiguration",children:"loadDefaultConfiguration"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["By default, the bundled dictionary configurations are loaded. Explicitly setting this to ",(0,s.jsx)(i.code,{children:"false"})]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-maxduplicateproblems",children:"maxDuplicateProblems"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of times the same word can be flagged as an error in a file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-maxnumberofproblems",children:"maxNumberOfProblems"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of problems to report in a file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-minwordlength",children:"minWordLength"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The minimum length of a word before checking it against a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional name of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-noconfigsearch",children:"noConfigSearch"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Prevents searching for local configuration when checking individual documents."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-nosuggestdictionaries",children:"noSuggestDictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries that will not be used for suggestions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-numsuggestions",children:"numSuggestions"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Number of suggestions to make."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-overrides",children:"overrides"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#overridesettings",children:(0,s.jsx)(i.code,{children:"OverrideSettings"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Overrides are used to apply settings for specific files in your project."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-patterns",children:"patterns"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-pnpfiles",children:"pnpFiles"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["The PnP files to search for. Note: ",(0,s.jsx)(i.code,{children:".mjs"})," files are not currently supported."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-readonly",children:"readonly"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that the configuration file should not be modified."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-reporters",children:"reporters"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#reportersettings",children:(0,s.jsx)(i.code,{children:"ReporterSettings"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Define which reports to use."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-showstatus",children:"showStatus"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Show status."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-spellcheckdelayms",children:"spellCheckDelayMs"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Delay in ms after a document has changed before checking it for spelling errors."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-suggestionnumchanges",children:"suggestionNumChanges"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of changes allowed on a word to be considered a suggestions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-suggestionstimeout",children:"suggestionsTimeout"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum amount of time in milliseconds to generate suggestions for a word."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-usegitignore",children:"useGitignore"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["Tells the spell checker to load ",(0,s.jsx)(i.code,{children:".gitignore"})," files and skip files that match the globs in the ",(0,s.jsx)(i.code,{children:".gitignore"})," files found."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-usepnp",children:"usePnP"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["Packages managers like Yarn 2 use a ",(0,s.jsx)(i.code,{children:".pnp.cjs"})," file to assist in loading"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-userwords",children:"userWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Words to add to global dictionary -- should only be in the user config file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-validatedirectives",children:"validateDirectives"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Verify that the in-document directives are correct."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-version",children:"version"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#version",children:(0,s.jsx)(i.code,{children:"Version"})})}),(0,s.jsx)(i.td,{children:"Configuration format version of the settings file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#settings-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"settings-fields",children:"Settings Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings--schema",children:(0,s.jsx)(i.code,{children:"$schema"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Url to JSON Schema"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-allowcompoundwords",children:(0,s.jsx)(i.code,{children:"allowCompoundWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"True to enable compound word checking."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-cache",children:(0,s.jsx)(i.code,{children:"cache"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Define cache settings."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#cachesettings",children:(0,s.jsx)(i.code,{children:"CacheSettings"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-casesensitive",children:(0,s.jsx)(i.code,{children:"caseSensitive"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Determines if words must match case and accent rules."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/case-sensitive/",children:"Case Sensitivity"})," for more details."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"false"})," - Case is ignored and accents can be missing on the entire word.\nIncorrect accents or partially missing accents will be marked as incorrect."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"true"})," - Case and accents are enforced."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-dictionaries",children:(0,s.jsx)(i.code,{children:"dictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."}),(0,s.jsxs)(i.p,{children:["To remove a dictionary from the list, add ",(0,s.jsx)(i.code,{children:"!"})," before the name."]}),(0,s.jsxs)(i.p,{children:["For example, ",(0,s.jsx)(i.code,{children:"!typescript"})," will turn off the dictionary with the name ",(0,s.jsx)(i.code,{children:"typescript"}),"."]}),(0,s.jsxs)(i.p,{children:["See the ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries/",children:"Dictionaries"}),"\nand ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries-custom/",children:"Custom Dictionaries"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-dictionarydefinitions",children:(0,s.jsx)(i.code,{children:"dictionaryDefinitions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Define additional available dictionaries."}),(0,s.jsx)(i.p,{children:"For example, you can use the following to add a custom dictionary:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"dictionaryDefinitions": [\n  { "name": "custom-words", "path": "./custom-words.txt"}\n],\n"dictionaries": ["custom-words"]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-enablefiletypes",children:(0,s.jsx)(i.code,{children:"enableFiletypes"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),(0,s.jsxs)(i.p,{children:["These are in additional to the file types specified by  ",(0,s.jsx)(i.a,{href:"#settings-enabledlanguageids",children:"Settings.enabledLanguageIds"})," .\nTo disable a language, prefix with ",(0,s.jsx)(i.code,{children:"!"})," as in ",(0,s.jsx)(i.code,{children:"!json"}),","]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: individual file types"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"jsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n"})}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: enable all file types"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"*           // enable checking for all file types\n!json       // except for json\n"})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-enableglobdot",children:(0,s.jsx)(i.code,{children:"enableGlobDot"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Enable scanning files and directories beginning with ",(0,s.jsx)(i.code,{children:"."})," (period)."]}),(0,s.jsxs)(i.p,{children:["By default, CSpell does not scan ",(0,s.jsx)(i.code,{children:"hidden"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-enabled",children:(0,s.jsx)(i.code,{children:"enabled"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Is the spell checker enabled."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-enabledfiletypes",children:(0,s.jsx)(i.code,{children:"enabledFileTypes"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),(0,s.jsxs)(i.p,{children:["This setting replaces:  ",(0,s.jsx)(i.a,{href:"#settings-enabledlanguageids",children:"Settings.enabledLanguageIds"}),"  and  ",(0,s.jsx)(i.a,{href:"#settings-enablefiletypes",children:"Settings.enableFiletypes"})," ."]}),(0,s.jsx)(i.p,{children:"A Value of:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"true"})," - enable checking for the file type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"false"})," - disable checking for the file type"]}),"\n"]}),(0,s.jsxs)(i.p,{children:["A file type of ",(0,s.jsx)(i.code,{children:"*"})," is a wildcard that enables all file types."]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: enable all file types"})}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"File Type"}),(0,s.jsx)(i.th,{children:"Enabled"}),(0,s.jsx)(i.th,{children:"Comment"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"*"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"true"})}),(0,s.jsx)(i.td,{children:"Enable all file types."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"json"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"false"})}),(0,s.jsx)(i.td,{children:"Disable checking for json files."})]})]})]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"object"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-enabledlanguageids",children:(0,s.jsx)(i.code,{children:"enabledLanguageIds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Specify a list of file types to spell check. It is better to use  ",(0,s.jsx)(i.a,{href:"#settings-enabledfiletypes",children:"Settings.enabledFileTypes"}),"  to Enable / Disable checking files types."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-failfast",children:(0,s.jsx)(i.code,{children:"failFast"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Exit with non-zero code as soon as an issue/error is encountered (useful for CI or git hooks)"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-features",children:(0,s.jsx)(i.code,{children:"features"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Configure CSpell features."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#features",children:(0,s.jsx)(i.code,{children:"Features"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-files",children:(0,s.jsx)(i.code,{children:"files"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Glob patterns of files to be checked."}),(0,s.jsxs)(i.p,{children:["Glob patterns are relative to the ",(0,s.jsx)(i.code,{children:"globRoot"})," of the configuration file that defines them."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-gitignoreroot",children:(0,s.jsx)(i.code,{children:"gitignoreRoot"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Tells the spell checker to stop searching for ",(0,s.jsx)(i.code,{children:".gitignore"})," files when it reaches a matching root."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-globroot",children:(0,s.jsx)(i.code,{children:"globRoot"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["The root to use for glob patterns found in this configuration.\nDefault: location of the configuration file.\nFor compatibility reasons, config files with version 0.1, the glob root will\ndefault to be ",(0,s.jsx)(i.code,{children:"${cwd}"}),"."]}),(0,s.jsxs)(i.p,{children:["Use ",(0,s.jsx)(i.code,{children:"globRoot"})," to define a different location.\n",(0,s.jsx)(i.code,{children:"globRoot"})," can be relative to the location of this configuration file.\nDefining globRoot, does not impact imported configurations."]}),(0,s.jsx)(i.p,{children:"Special Values:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${cwd}"})," - will be replaced with the current working directory."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"."})," - will be the location of the containing configuration file."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#fspathresolvable",children:(0,s.jsx)(i.code,{children:"FSPathResolvable"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-id",children:(0,s.jsx)(i.code,{children:"id"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional identifier."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-ignorepaths",children:(0,s.jsx)(i.code,{children:"ignorePaths"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Glob patterns of files to be ignored."}),(0,s.jsxs)(i.p,{children:["Glob patterns are relative to the  ",(0,s.jsx)(i.a,{href:"#globroot",children:"globRoot"}),"  of the configuration file that defines them."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-ignoreregexplist",children:(0,s.jsx)(i.code,{children:"ignoreRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or pattern names to exclude from spell checking."}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'["href"]'})," - to exclude html href pattern."]}),(0,s.jsx)(i.p,{children:"Regular expressions use JavaScript regular expression syntax."}),(0,s.jsx)(i.p,{children:"Example: to ignore ALL-CAPS words"}),(0,s.jsx)(i.p,{children:"JSON"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"ignoreRegExpList": ["/\\\\b[A-Z]+\\\\b/g"]\n'})}),(0,s.jsx)(i.p,{children:"YAML"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"ignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n"})}),(0,s.jsxs)(i.p,{children:["By default, several patterns are excluded. See\n",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/patterns",children:"Configuration"})," for more details."]}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-import",children:(0,s.jsx)(i.code,{children:"import"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Allows this configuration to inherit configuration for one or more other files."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/imports/",children:"Importing / Extending Configuration"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-includeregexplist",children:(0,s.jsx)(i.code,{children:"includeRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or defined pattern names to match for spell checking."}),(0,s.jsx)(i.p,{children:"If this property is defined, only text matching the included patterns will be checked."}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-language",children:(0,s.jsx)(i.code,{children:"language"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Current active spelling language. This specifies the language locale to use in choosing the\ngeneral dictionary."}),(0,s.jsx)(i.p,{children:"For example:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'"en-GB" for British English.'}),"\n",(0,s.jsx)(i.li,{children:'"en,nl" to enable both English and Dutch.'}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-languageid",children:(0,s.jsx)(i.code,{children:"languageId"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Forces the spell checker to assume a give language id. Used mainly as an Override."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-languagesettings",children:(0,s.jsx)(i.code,{children:"languageSettings"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Additional settings for individual languages."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/language-settings/",children:"Language Settings"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languagesetting",children:(0,s.jsx)(i.code,{children:"LanguageSetting"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-loaddefaultconfiguration",children:(0,s.jsx)(i.code,{children:"loadDefaultConfiguration"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["By default, the bundled dictionary configurations are loaded. Explicitly setting this to ",(0,s.jsx)(i.code,{children:"false"}),"\nwill prevent ALL default configuration from being loaded."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-maxduplicateproblems",children:(0,s.jsx)(i.code,{children:"maxDuplicateProblems"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum number of times the same word can be flagged as an error in a file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-maxnumberofproblems",children:(0,s.jsx)(i.code,{children:"maxNumberOfProblems"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum number of problems to report in a file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-minwordlength",children:(0,s.jsx)(i.code,{children:"minWordLength"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The minimum length of a word before checking it against a dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional name of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-noconfigsearch",children:(0,s.jsx)(i.code,{children:"noConfigSearch"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Prevents searching for local configuration when checking individual documents."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-nosuggestdictionaries",children:(0,s.jsx)(i.code,{children:"noSuggestDictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-numsuggestions",children:(0,s.jsx)(i.code,{children:"numSuggestions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Number of suggestions to make."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-overrides",children:(0,s.jsx)(i.code,{children:"overrides"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Overrides are used to apply settings for specific files in your project."}),(0,s.jsx)(i.p,{children:"For example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'"overrides": [\n  // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n  {\n    "filename": "**/{*.hrr,*.crr}",\n    "languageId": "cpp"\n  },\n  // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n  {\n    "language": "nl",\n    "filename": "**/dutch/**/*.txt"\n  }\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#overridesettings",children:(0,s.jsx)(i.code,{children:"OverrideSettings"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-patterns",children:(0,s.jsx)(i.code,{children:"patterns"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and\n",(0,s.jsx)(i.a,{href:"#includeregexplist",children:"includeRegExpList"}),"  options."]}),(0,s.jsx)(i.p,{children:"For example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'"ignoreRegExpList": ["comments"],\n"patterns": [\n  {\n    "name": "comment-single-line",\n    "pattern": "/#.*/g"\n  },\n  {\n    "name": "comment-multi-line",\n    "pattern": "/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    "name": "comments",\n    "pattern": ["comment-single-line", "comment-multi-line"]\n  }\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-pnpfiles",children:(0,s.jsx)(i.code,{children:"pnpFiles"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The PnP files to search for. Note: ",(0,s.jsx)(i.code,{children:".mjs"})," files are not currently supported."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-readonly",children:(0,s.jsx)(i.code,{children:"readonly"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Indicate that the configuration file should not be modified.\nThis is used to prevent tools like the VS Code Spell Checker from\nmodifying the file to add words and other configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-reporters",children:(0,s.jsx)(i.code,{children:"reporters"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Define which reports to use.\n",(0,s.jsx)(i.code,{children:"default"})," - is a special name for the default cli reporter."]}),(0,s.jsx)(i.p,{children:"Examples:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'["default"]'})," - to use the default reporter"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'["@cspell/cspell-json-reporter"]'})," - use the cspell JSON reporter."]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:'[["@cspell/cspell-json-reporter", { "outFile": "out.json" }]]'})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'[ "default", ["@cspell/cspell-json-reporter", { "outFile": "out.json" }]]'})," - Use both the default reporter and the cspell-json-reporter."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#reportersettings",children:(0,s.jsx)(i.code,{children:"ReporterSettings"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-showstatus",children:(0,s.jsx)(i.code,{children:"showStatus"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Show status."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-spellcheckdelayms",children:(0,s.jsx)(i.code,{children:"spellCheckDelayMs"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Delay in ms after a document has changed before checking it for spelling errors."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-suggestionnumchanges",children:(0,s.jsx)(i.code,{children:"suggestionNumChanges"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The maximum number of changes allowed on a word to be considered a suggestions."}),(0,s.jsxs)(i.p,{children:["For example, appending an ",(0,s.jsx)(i.code,{children:"s"})," onto ",(0,s.jsx)(i.code,{children:"example"})," -> ",(0,s.jsx)(i.code,{children:"examples"})," is considered 1 change."]}),(0,s.jsx)(i.p,{children:"Range: between 1 and 5."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-suggestionstimeout",children:(0,s.jsx)(i.code,{children:"suggestionsTimeout"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum amount of time in milliseconds to generate suggestions for a word."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-usegitignore",children:(0,s.jsx)(i.code,{children:"useGitignore"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Tells the spell checker to load ",(0,s.jsx)(i.code,{children:".gitignore"})," files and skip files that match the globs in the ",(0,s.jsx)(i.code,{children:".gitignore"})," files found."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-usepnp",children:(0,s.jsx)(i.code,{children:"usePnP"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Packages managers like Yarn 2 use a ",(0,s.jsx)(i.code,{children:".pnp.cjs"})," file to assist in loading\npackages stored in the repository."]}),(0,s.jsx)(i.p,{children:"When true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-userwords",children:(0,s.jsx)(i.code,{children:"userWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Words to add to global dictionary -- should only be in the user config file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-validatedirectives",children:(0,s.jsx)(i.code,{children:"validateDirectives"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Verify that the in-document directives are correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-version",children:(0,s.jsx)(i.code,{children:"version"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Configuration format version of the settings file."}),(0,s.jsx)(i.p,{children:"This controls how the settings in the configuration file behave."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#version",children:(0,s.jsx)(i.code,{children:"Version"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"settings-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"cacheformat",children:"CacheFormat"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"cachesettings",children:"CacheSettings"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachesettings-cacheformat",children:"cacheFormat"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cacheformat",children:(0,s.jsx)(i.code,{children:"CacheFormat"})})}),(0,s.jsx)(i.td,{children:"Format of the cache file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachesettings-cachelocation",children:"cacheLocation"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#fspathresolvable",children:(0,s.jsx)(i.code,{children:"FSPathResolvable"})})}),(0,s.jsx)(i.td,{children:"Path to the cache location. Can be a file or a directory."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachesettings-cachestrategy",children:"cacheStrategy"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachestrategy",children:(0,s.jsx)(i.code,{children:"CacheStrategy"})})}),(0,s.jsx)(i.td,{children:"Strategy to use for detecting changed files, default: metadata"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#cachesettings-usecache",children:"useCache"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Store the results of processed files in order to only operate on the changed ones."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"cachesettings-fields",children:"CacheSettings Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"cachesettings-cacheformat",children:(0,s.jsx)(i.code,{children:"cacheFormat"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Format of the cache file."}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"legacy"})," - use absolute paths in the cache file"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"universal"})," - use a sharable format."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#cacheformat",children:(0,s.jsx)(i.code,{children:"CacheFormat"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"cachesettings-cachelocation",children:(0,s.jsx)(i.code,{children:"cacheLocation"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Path to the cache location. Can be a file or a directory.\nIf none specified ",(0,s.jsx)(i.code,{children:".cspellcache"})," will be used.\nRelative paths are relative to the config file in which it\nis defined."]}),(0,s.jsxs)(i.p,{children:["A prefix of ",(0,s.jsx)(i.code,{children:"${cwd}"})," is replaced with the current working directory."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#fspathresolvable",children:(0,s.jsx)(i.code,{children:"FSPathResolvable"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"cachesettings-cachestrategy",children:(0,s.jsx)(i.code,{children:"cacheStrategy"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Strategy to use for detecting changed files, default: metadata"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#cachestrategy",children:(0,s.jsx)(i.code,{children:"CacheStrategy"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"cachesettings-usecache",children:(0,s.jsx)(i.code,{children:"useCache"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Store the results of processed files in order to only operate on the changed ones."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"cachestrategy",children:"CacheStrategy"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The Strategy to use to detect if a file has changed."}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"metadata"})," - uses the file system timestamp and size to detect changes (fastest)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"content"})," - uses a hash of the file content to check file changes (slower - more accurate)."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"characterset",children:"CharacterSet"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["This is a set of characters that can include ",(0,s.jsx)(i.code,{children:"-"})," or ",(0,s.jsx)(i.code,{children:"|"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-"})," - indicates a range of characters: ",(0,s.jsx)(i.code,{children:"a-c"})," => ",(0,s.jsx)(i.code,{children:"abc"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"|"})," - is a group separator, indicating that the characters on either side\nare not related."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"charactersetcosts",children:"CharacterSetCosts"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#charactersetcosts-characters",children:"characters"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})})}),(0,s.jsxs)(i.td,{children:["This is a set of characters that can include ",(0,s.jsx)(i.code,{children:"-"})," or `"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#charactersetcosts-cost",children:"cost"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"the cost to insert / delete / replace / swap the characters in a group"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#charactersetcosts-penalty",children:"penalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The penalty cost to apply if the accent is used."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"charactersetcosts-fields",children:"CharacterSetCosts Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"charactersetcosts-characters",children:(0,s.jsx)(i.code,{children:"characters"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["This is a set of characters that can include ",(0,s.jsx)(i.code,{children:"-"})," or ",(0,s.jsx)(i.code,{children:"|"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-"})," - indicates a range of characters: ",(0,s.jsx)(i.code,{children:"a-c"})," => ",(0,s.jsx)(i.code,{children:"abc"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"|"})," - is a group separator, indicating that the characters on either side\nare not related."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"charactersetcosts-cost",children:(0,s.jsx)(i.code,{children:"cost"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"the cost to insert / delete / replace / swap the characters in a group"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"charactersetcosts-penalty",children:(0,s.jsx)(i.code,{children:"penalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The penalty cost to apply if the accent is used.\nThis is used to discourage"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"costmapdefinsdel",children:"CostMapDefInsDel"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"A description to describe the purpose of the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-insdel",children:"insDel"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-map",children:"map"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"The set of substrings to map, these are generally single character strings."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-penalty",children:"penalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Add a penalty to the final cost."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-replace",children:"replace"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to replace of of the substrings in the map with another substring in the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefinsdel-swap",children:"swap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to swap two adjacent substrings found in the map."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"costmapdefinsdel-fields",children:"CostMapDefInsDel Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A description to describe the purpose of the map."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-insdel",children:(0,s.jsx)(i.code,{children:"insDel"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-map",children:(0,s.jsx)(i.code,{children:"map"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The set of substrings to map, these are generally single character strings."}),(0,s.jsxs)(i.p,{children:["Multiple sets can be defined by using a ",(0,s.jsx)(i.code,{children:"|"})," to separate them."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"e\xe9\xea|a\xe5\xe1"'})," contains two different sets."]}),(0,s.jsxs)(i.p,{children:["To add a multi-character substring use ",(0,s.jsx)(i.code,{children:"()"}),"."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"f(ph)(gh)"'})," results in the following set: ",(0,s.jsx)(i.code,{children:"f"}),", ",(0,s.jsx)(i.code,{children:"ph"}),", ",(0,s.jsx)(i.code,{children:"gh"}),"."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["To match the beginning of a word, use ",(0,s.jsx)(i.code,{children:"^"}),": ",(0,s.jsx)(i.code,{children:'"(^I)""'}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["To match the end of a word, use ",(0,s.jsx)(i.code,{children:"$"}),": ",(0,s.jsx)(i.code,{children:'"(e$)(ing$)"'}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-penalty",children:(0,s.jsx)(i.code,{children:"penalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Add a penalty to the final cost.\nThis is used to discourage certain suggestions."}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:'# Match adding/removing `-` to the end of a word.\nmap: "$(-$)"\nreplace: 50\npenalty: 100\n'})}),(0,s.jsxs)(i.p,{children:["This makes adding a ",(0,s.jsx)(i.code,{children:"-"})," to the end of a word more expensive."]}),(0,s.jsx)(i.p,{children:"Think of it as taking the toll way for speed but getting the bill later."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-replace",children:(0,s.jsx)(i.code,{children:"replace"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to replace of of the substrings in the map with another substring in the map.\nExample: Map['a', 'i']\nThis would be the cost to substitute ",(0,s.jsx)(i.code,{children:"a"})," with ",(0,s.jsx)(i.code,{children:"i"}),": Like ",(0,s.jsx)(i.code,{children:"bat"})," to ",(0,s.jsx)(i.code,{children:"bit"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefinsdel-swap",children:(0,s.jsx)(i.code,{children:"swap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to swap two adjacent substrings found in the map.\nExample: Map['e', 'i']\nThis represents the cost to change ",(0,s.jsx)(i.code,{children:"ei"})," to ",(0,s.jsx)(i.code,{children:"ie"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"costmapdefreplace",children:"CostMapDefReplace"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"A description to describe the purpose of the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-insdel",children:"insDel"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-map",children:"map"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"The set of substrings to map, these are generally single character strings."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-penalty",children:"penalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Add a penalty to the final cost."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-replace",children:"replace"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to replace of of the substrings in the map with another substring in the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefreplace-swap",children:"swap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to swap two adjacent substrings found in the map."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"costmapdefreplace-fields",children:"CostMapDefReplace Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A description to describe the purpose of the map."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-insdel",children:(0,s.jsx)(i.code,{children:"insDel"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-map",children:(0,s.jsx)(i.code,{children:"map"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The set of substrings to map, these are generally single character strings."}),(0,s.jsxs)(i.p,{children:["Multiple sets can be defined by using a ",(0,s.jsx)(i.code,{children:"|"})," to separate them."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"e\xe9\xea|a\xe5\xe1"'})," contains two different sets."]}),(0,s.jsxs)(i.p,{children:["To add a multi-character substring use ",(0,s.jsx)(i.code,{children:"()"}),"."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"f(ph)(gh)"'})," results in the following set: ",(0,s.jsx)(i.code,{children:"f"}),", ",(0,s.jsx)(i.code,{children:"ph"}),", ",(0,s.jsx)(i.code,{children:"gh"}),"."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["To match the beginning of a word, use ",(0,s.jsx)(i.code,{children:"^"}),": ",(0,s.jsx)(i.code,{children:'"(^I)""'}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["To match the end of a word, use ",(0,s.jsx)(i.code,{children:"$"}),": ",(0,s.jsx)(i.code,{children:'"(e$)(ing$)"'}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-penalty",children:(0,s.jsx)(i.code,{children:"penalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Add a penalty to the final cost.\nThis is used to discourage certain suggestions."}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:'# Match adding/removing `-` to the end of a word.\nmap: "$(-$)"\nreplace: 50\npenalty: 100\n'})}),(0,s.jsxs)(i.p,{children:["This makes adding a ",(0,s.jsx)(i.code,{children:"-"})," to the end of a word more expensive."]}),(0,s.jsx)(i.p,{children:"Think of it as taking the toll way for speed but getting the bill later."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-replace",children:(0,s.jsx)(i.code,{children:"replace"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to replace of of the substrings in the map with another substring in the map.\nExample: Map['a', 'i']\nThis would be the cost to substitute ",(0,s.jsx)(i.code,{children:"a"})," with ",(0,s.jsx)(i.code,{children:"i"}),": Like ",(0,s.jsx)(i.code,{children:"bat"})," to ",(0,s.jsx)(i.code,{children:"bit"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefreplace-swap",children:(0,s.jsx)(i.code,{children:"swap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to swap two adjacent substrings found in the map.\nExample: Map['e', 'i']\nThis represents the cost to change ",(0,s.jsx)(i.code,{children:"ei"})," to ",(0,s.jsx)(i.code,{children:"ie"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"costmapdefswap",children:"CostMapDefSwap"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"A description to describe the purpose of the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-insdel",children:"insDel"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-map",children:"map"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"The set of substrings to map, these are generally single character strings."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-penalty",children:"penalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Add a penalty to the final cost."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-replace",children:"replace"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to replace of of the substrings in the map with another substring in the map."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#costmapdefswap-swap",children:"swap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to swap two adjacent substrings found in the map."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"costmapdefswap-fields",children:"CostMapDefSwap Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A description to describe the purpose of the map."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-insdel",children:(0,s.jsx)(i.code,{children:"insDel"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The cost to insert/delete one of the substrings in the map. Note: insert/delete costs are symmetrical."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-map",children:(0,s.jsx)(i.code,{children:"map"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The set of substrings to map, these are generally single character strings."}),(0,s.jsxs)(i.p,{children:["Multiple sets can be defined by using a ",(0,s.jsx)(i.code,{children:"|"})," to separate them."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"e\xe9\xea|a\xe5\xe1"'})," contains two different sets."]}),(0,s.jsxs)(i.p,{children:["To add a multi-character substring use ",(0,s.jsx)(i.code,{children:"()"}),"."]}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'"f(ph)(gh)"'})," results in the following set: ",(0,s.jsx)(i.code,{children:"f"}),", ",(0,s.jsx)(i.code,{children:"ph"}),", ",(0,s.jsx)(i.code,{children:"gh"}),"."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["To match the beginning of a word, use ",(0,s.jsx)(i.code,{children:"^"}),": ",(0,s.jsx)(i.code,{children:'"(^I)""'}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["To match the end of a word, use ",(0,s.jsx)(i.code,{children:"$"}),": ",(0,s.jsx)(i.code,{children:'"(e$)(ing$)"'}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-penalty",children:(0,s.jsx)(i.code,{children:"penalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Add a penalty to the final cost.\nThis is used to discourage certain suggestions."}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:'# Match adding/removing `-` to the end of a word.\nmap: "$(-$)"\nreplace: 50\npenalty: 100\n'})}),(0,s.jsxs)(i.p,{children:["This makes adding a ",(0,s.jsx)(i.code,{children:"-"})," to the end of a word more expensive."]}),(0,s.jsx)(i.p,{children:"Think of it as taking the toll way for speed but getting the bill later."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-replace",children:(0,s.jsx)(i.code,{children:"replace"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to replace of of the substrings in the map with another substring in the map.\nExample: Map['a', 'i']\nThis would be the cost to substitute ",(0,s.jsx)(i.code,{children:"a"})," with ",(0,s.jsx)(i.code,{children:"i"}),": Like ",(0,s.jsx)(i.code,{children:"bat"})," to ",(0,s.jsx)(i.code,{children:"bit"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"costmapdefswap-swap",children:(0,s.jsx)(i.code,{children:"swap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The cost to swap two adjacent substrings found in the map.\nExample: Map['e', 'i']\nThis represents the cost to change ",(0,s.jsx)(i.code,{children:"ei"})," to ",(0,s.jsx)(i.code,{children:"ie"})," or the reverse."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"customdictionarypath",children:"CustomDictionaryPath"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A File System Path to a dictionary file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#fsdictionarypath",children:(0,s.jsx)(i.code,{children:"FsDictionaryPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"customdictionaryscope",children:"CustomDictionaryScope"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Specifies the scope of a dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinition",children:"DictionaryDefinition"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionCustom"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionAugmented"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitioninline",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionInline"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionAlternate"})})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitionalternate",children:"DictionaryDefinitionAlternate"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-file",children:"file"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})}),(0,s.jsx)(i.td,{children:"Path to the file, only for legacy dictionary definitions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionalternate-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitionalternate-fields",children:"DictionaryDefinitionAlternate Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-file",children:(0,s.jsx)(i.code,{children:"file"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Path to the file, only for legacy dictionary definitions."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionalternate-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitionaugmented",children:"DictionaryDefinitionAugmented"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-dictionaryinformation",children:"dictionaryInformation"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation",children:(0,s.jsx)(i.code,{children:"DictionaryInformation"})})}),(0,s.jsx)(i.td,{})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-path",children:"path"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})}),(0,s.jsx)(i.td,{children:"Path to the file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionaugmented-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitionaugmented-fields",children:"DictionaryDefinitionAugmented Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-dictionaryinformation",children:(0,s.jsx)(i.code,{children:"dictionaryInformation"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation",children:(0,s.jsx)(i.code,{children:"DictionaryInformation"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-path",children:(0,s.jsx)(i.code,{children:"path"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Path to the file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionaugmented-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioncustom",children:"DictionaryDefinitionCustom"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-addwords",children:"addWords"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["When ",(0,s.jsx)(i.code,{children:"true"}),", let's the spell checker know that words can be added to this dictionary."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-path",children:"path"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#customdictionarypath",children:(0,s.jsx)(i.code,{children:"CustomDictionaryPath"})})}),(0,s.jsx)(i.td,{children:"Path to custom dictionary text file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-scope",children:"scope"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#customdictionaryscope",children:(0,s.jsx)(i.code,{children:"CustomDictionaryScope"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#customdictionaryscope",children:(0,s.jsx)(i.code,{children:"CustomDictionaryScope"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Defines the scope for when words will be added to the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioncustom-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitioncustom-fields",children:"DictionaryDefinitionCustom Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-addwords",children:(0,s.jsx)(i.code,{children:"addWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["When ",(0,s.jsx)(i.code,{children:"true"}),", let's the spell checker know that words can be added to this dictionary."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-path",children:(0,s.jsx)(i.code,{children:"path"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Path to custom dictionary text file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#customdictionarypath",children:(0,s.jsx)(i.code,{children:"CustomDictionaryPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-scope",children:(0,s.jsx)(i.code,{children:"scope"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Defines the scope for when words will be added to the dictionary."}),(0,s.jsxs)(i.p,{children:["Scope values: ",(0,s.jsx)(i.code,{children:"user"}),", ",(0,s.jsx)(i.code,{children:"workspace"}),", ",(0,s.jsx)(i.code,{children:"folder"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#customdictionaryscope",children:(0,s.jsx)(i.code,{children:"CustomDictionaryScope"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#customdictionaryscope",children:(0,s.jsx)(i.code,{children:"CustomDictionaryScope"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioncustom-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioninline",children:"DictionaryDefinitionInline"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Inline Dictionary Definitions"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionInlineWords"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionInlineIgnoreWords"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionInlineFlagWords"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords",children:(0,s.jsx)(i.code,{children:"DictionaryDefinitionInlineSuggestWords"})})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioninlineflagwords",children:"DictionaryDefinitionInlineFlagWords"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineflagwords-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitioninlineflagwords-fields",children:"DictionaryDefinitionInlineFlagWords Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineflagwords-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioninlineignorewords",children:"DictionaryDefinitionInlineIgnoreWords"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlineignorewords-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitioninlineignorewords-fields",children:"DictionaryDefinitionInlineIgnoreWords Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlineignorewords-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioninlinesuggestwords",children:"DictionaryDefinitionInlineSuggestWords"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinesuggestwords-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitioninlinesuggestwords-fields",children:"DictionaryDefinitionInlineSuggestWords Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinesuggestwords-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitioninlinewords",children:"DictionaryDefinitionInlineWords"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitioninlinewords-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitioninlinewords-fields",children:"DictionaryDefinitionInlineWords Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitioninlinewords-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionarydefinitionpreferred",children:"DictionaryDefinitionPreferred"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of the contents / purpose of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})}),(0,s.jsx)(i.td,{children:"This is the name of a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-nosuggest",children:"noSuggest"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Indicate that suggestions should not come from this dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-path",children:"path"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})}),(0,s.jsx)(i.td,{children:"Path to the file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-repmap",children:"repMap"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})}),(0,s.jsx)(i.td,{children:"Replacement pairs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-type",children:"type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})}),(0,s.jsx)(i.td,{children:"Type of file:"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionarydefinitionpreferred-usecompounds",children:"useCompounds"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Use Compounds."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionarydefinitionpreferred-fields",children:"DictionaryDefinitionPreferred Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-nosuggest",children:(0,s.jsx)(i.code,{children:"noSuggest"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-path",children:(0,s.jsx)(i.code,{children:"path"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Path to the file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionarypath",children:(0,s.jsx)(i.code,{children:"DictionaryPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-repmap",children:(0,s.jsx)(i.code,{children:"repMap"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Replacement pairs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#replacemap",children:(0,s.jsx)(i.code,{children:"ReplaceMap"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-type",children:(0,s.jsx)(i.code,{children:"type"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Type of file:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,s.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,s.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),(0,s.jsx)(i.p,{children:"Default is S."}),(0,s.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),(0,s.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,s.jsx)(i.code,{children:".trie"})," files."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryfiletypes",children:(0,s.jsx)(i.code,{children:"DictionaryFileTypes"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionarydefinitionpreferred-usecompounds",children:(0,s.jsx)(i.code,{children:"useCompounds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Use Compounds."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionaryfiletypes",children:"DictionaryFileTypes"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionaryid",children:"DictionaryId"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This is the name of a dictionary."}),(0,s.jsx)(i.p,{children:"Name Format:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,s.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,s.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,s.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,s.jsxs)(i.li,{children:["Must not contain ",(0,s.jsx)(i.code,{children:"*"}),", ",(0,s.jsx)(i.code,{children:"!"}),", ",(0,s.jsx)(i.code,{children:";"}),", ",(0,s.jsx)(i.code,{children:","}),", ",(0,s.jsx)(i.code,{children:"{"}),", ",(0,s.jsx)(i.code,{children:"}"}),", ",(0,s.jsx)(i.code,{children:"["}),", ",(0,s.jsx)(i.code,{children:"]"}),", ",(0,s.jsx)(i.code,{children:"~"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"dictionaryinformation",children:"DictionaryInformation"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-accents",children:"accents"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#charactersetcosts",children:(0,s.jsx)(i.code,{children:"CharacterSetCosts"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"The accent characters."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-adjustments",children:"adjustments"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#patternadjustment",children:(0,s.jsx)(i.code,{children:"PatternAdjustment"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A collection of patterns to test against the suggested words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-alphabet",children:"alphabet"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#charactersetcosts",children:(0,s.jsx)(i.code,{children:"CharacterSetCosts"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"The alphabet to use."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-costs",children:"costs"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts",children:(0,s.jsx)(i.code,{children:"EditCosts"})})}),(0,s.jsx)(i.td,{children:"Define edit costs."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-hunspellinformation",children:"hunspellInformation"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#hunspellinformation",children:(0,s.jsx)(i.code,{children:"HunspellInformation"})})}),(0,s.jsx)(i.td,{children:"Used by dictionary authors"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-ignore",children:"ignore"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})})}),(0,s.jsx)(i.td,{children:"An optional set of characters that can possibly be removed from a word before"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-locale",children:"locale"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"The locale of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#dictionaryinformation-suggestioneditcosts",children:"suggestionEditCosts"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#suggestioncostsdefs",children:(0,s.jsx)(i.code,{children:"SuggestionCostsDefs"})})}),(0,s.jsx)(i.td,{children:"Used in making suggestions. The lower the value, the more likely the suggestion"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"dictionaryinformation-fields",children:"DictionaryInformation Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-accents",children:(0,s.jsx)(i.code,{children:"accents"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The accent characters."}),(0,s.jsxs)(i.p,{children:["Default: ",(0,s.jsx)(i.code,{children:'"\\u0300-\\u0341"'})]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#charactersetcosts",children:(0,s.jsx)(i.code,{children:"CharacterSetCosts"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-adjustments",children:(0,s.jsx)(i.code,{children:"adjustments"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A collection of patterns to test against the suggested words.\nIf the word matches the pattern, then the penalty is applied."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#patternadjustment",children:(0,s.jsx)(i.code,{children:"PatternAdjustment"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-alphabet",children:(0,s.jsx)(i.code,{children:"alphabet"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The alphabet to use."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#charactersetcosts",children:(0,s.jsx)(i.code,{children:"CharacterSetCosts"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-costs",children:(0,s.jsx)(i.code,{children:"costs"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Define edit costs."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#editcosts",children:(0,s.jsx)(i.code,{children:"EditCosts"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-hunspellinformation",children:(0,s.jsx)(i.code,{children:"hunspellInformation"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Used by dictionary authors"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#hunspellinformation",children:(0,s.jsx)(i.code,{children:"HunspellInformation"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-ignore",children:(0,s.jsx)(i.code,{children:"ignore"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"An optional set of characters that can possibly be removed from a word before\nchecking it."}),(0,s.jsx)(i.p,{children:"This is useful in languages like Arabic where Harakat accents are optional."}),(0,s.jsx)(i.p,{children:"Note: All matching characters are removed or none. Partial removal is not supported."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#characterset",children:(0,s.jsx)(i.code,{children:"CharacterSet"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-locale",children:(0,s.jsx)(i.code,{children:"locale"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The locale of the dictionary.\nExample: ",(0,s.jsx)(i.code,{children:"nl,nl-be"})]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"dictionaryinformation-suggestioneditcosts",children:(0,s.jsx)(i.code,{children:"suggestionEditCosts"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Used in making suggestions. The lower the value, the more likely the suggestion\nwill be near the top of the suggestion list."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#suggestioncostsdefs",children:(0,s.jsx)(i.code,{children:"SuggestionCostsDefs"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionarynegref",children:"DictionaryNegRef"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"This a negative reference to a named dictionary."}),(0,s.jsx)(i.p,{children:"It is used to exclude or include a dictionary by name."}),(0,s.jsxs)(i.p,{children:["The reference starts with 1 or more ",(0,s.jsx)(i.code,{children:"!"}),"."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!<dictionary_name>"})," - Used to exclude the dictionary matching ",(0,s.jsx)(i.code,{children:"<dictionary_name>"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!!<dictionary_name>"})," - Used to re-include a dictionary matching ",(0,s.jsx)(i.code,{children:"<dictionary_name>"}),".\nOverrides ",(0,s.jsx)(i.code,{children:"!<dictionary_name>"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!!!<dictionary_name>"})," - Used to exclude a dictionary matching ",(0,s.jsx)(i.code,{children:"<dictionary_name>"}),".\nOverrides ",(0,s.jsx)(i.code,{children:"!!<dictionary_name>"}),"."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionarypath",children:"DictionaryPath"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["A File System Path to a dictionary file.\nPattern: ",(0,s.jsx)(i.code,{children:"^.*\\.(?:txt|trie|dic)(?:\\.gz)?$"})]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionaryref",children:"DictionaryRef"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#dictionaryid",children:(0,s.jsx)(i.code,{children:"DictionaryId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"dictionaryreference",children:"DictionaryReference"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Reference to a dictionary by name.\nOne of:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#dictionaryref",children:"DictionaryRef"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#dictionarynegref",children:"DictionaryNegRef"})}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryref",children:(0,s.jsx)(i.code,{children:"DictionaryRef"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#dictionarynegref",children:(0,s.jsx)(i.code,{children:"DictionaryNegRef"})})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"editcosts",children:"EditCosts"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts-accentcosts",children:"accentCosts"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to add / remove an accent"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts-basecost",children:"baseCost"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"This is the base cost for making an edit."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts-capscosts",children:"capsCosts"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The cost to change capitalization."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts-firstletterpenalty",children:"firstLetterPenalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The extra cost incurred for changing the first letter of a word."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#editcosts-nonalphabetcosts",children:"nonAlphabetCosts"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"This is the cost for characters not in the alphabet."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"editcosts-fields",children:"EditCosts Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"editcosts-accentcosts",children:(0,s.jsx)(i.code,{children:"accentCosts"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The cost to add / remove an accent\nThis should be very cheap, it helps with fixing accent issues."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"editcosts-basecost",children:(0,s.jsx)(i.code,{children:"baseCost"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"This is the base cost for making an edit."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"editcosts-capscosts",children:(0,s.jsx)(i.code,{children:"capsCosts"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The cost to change capitalization.\nThis should be very cheap, it helps with fixing capitalization issues."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"editcosts-firstletterpenalty",children:(0,s.jsx)(i.code,{children:"firstLetterPenalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The extra cost incurred for changing the first letter of a word.\nThis value should be less than ",(0,s.jsx)(i.code,{children:"100 - baseCost"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"editcosts-nonalphabetcosts",children:(0,s.jsx)(i.code,{children:"nonAlphabetCosts"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"This is the cost for characters not in the alphabet."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"fspathresolvable",children:"FSPathResolvable"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A File System Path."}),(0,s.jsx)(i.p,{children:"Special Properties:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"${cwd}"})," prefix - will be replaced with the current working directory."]}),"\n",(0,s.jsx)(i.li,{children:"Relative paths are relative to the configuration file."}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#fspath",children:(0,s.jsx)(i.code,{children:"FsPath"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"featureenableonly",children:"FeatureEnableOnly"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#features-weighted-suggestions",children:"weighted-suggestions"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#featureenableonly",children:(0,s.jsx)(i.code,{children:"FeatureEnableOnly"})})}),(0,s.jsx)(i.td,{children:"Enable/disable using weighted suggestions."})]})})]}),"\n",(0,s.jsx)(i.h3,{id:"features-fields",children:"Features Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"features-weighted-suggestions",children:(0,s.jsx)(i.code,{children:"weighted-suggestions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Enable/disable using weighted suggestions."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#featureenableonly",children:(0,s.jsx)(i.code,{children:"FeatureEnableOnly"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"fsdictionarypath",children:"FsDictionaryPath"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A File System Path. Relative paths are relative to the configuration file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"fspath",children:"FsPath"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A File System Path. Relative paths are relative to the configuration file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"glob",children:"Glob"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"These are glob expressions."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#simpleglob",children:(0,s.jsx)(i.code,{children:"SimpleGlob"})})})})]}),"\n",(0,s.jsx)(i.h2,{id:"hunspellinformation",children:"HunspellInformation"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#hunspellinformation-aff",children:"aff"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Selected Hunspell AFF content."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#hunspellinformation-costs",children:"costs"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"object"})}),(0,s.jsx)(i.td,{children:"The costs to apply when using the hunspell settings"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"hunspellinformation-fields",children:"HunspellInformation Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"hunspellinformation-aff",children:(0,s.jsx)(i.code,{children:"aff"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Selected Hunspell AFF content.\nThe content must be UTF-8"}),(0,s.jsx)(i.p,{children:"Sections:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"TRY"}),"\n",(0,s.jsx)(i.li,{children:"MAP"}),"\n",(0,s.jsx)(i.li,{children:"REP"}),"\n",(0,s.jsx)(i.li,{children:"KEY"}),"\n",(0,s.jsx)(i.li,{children:"ICONV"}),"\n",(0,s.jsx)(i.li,{children:"OCONV"}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-hunspell",children:"# Comment\nTRY aeistlunkodmrvpgjh\xe4\xf5b\xfco\xf6fcwzx\xf0q\xfe`\nMAP a\xe0\xe2\xe4A\xc0\xc2\xc4\nMAP e\xe9\xe8\xea\xebE\xc9\xc8\xca\xcb\nMAP i\xee\xefyI\xce\xcfY\nMAP o\xf4\xf6O\xd4\xd6\nMAP (IJ)(\u0132)\n"})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"hunspellinformation-costs",children:(0,s.jsx)(i.code,{children:"costs"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The costs to apply when using the hunspell settings"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"object"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"languageid",children:"LanguageId"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#languageidmultiple",children:(0,s.jsx)(i.code,{children:"LanguageIdMultiple"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#languageidmultipleneg",children:(0,s.jsx)(i.code,{children:"LanguageIdMultipleNeg"})})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"languageidmultiple",children:"LanguageIdMultiple"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A single string with a comma separated list of file types:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"typescript,cpp"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"json,jsonc,yaml"})}),"\n",(0,s.jsx)(i.li,{children:"etc."}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"languageidmultipleneg",children:"LanguageIdMultipleNeg"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A Negative File Type used to exclude files of that type."}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!typescript"})," - will exclude typescript files."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!cpp,!json"})," - will exclude cpp and json files."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!typescript,javascript"})," - will exclude typescript files and include javascript files."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"languageidsingle",children:"LanguageIdSingle"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A file type:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"*"})," - will match ALL file types."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"typescript"}),", ",(0,s.jsx)(i.code,{children:"cpp"}),", ",(0,s.jsx)(i.code,{children:"json"}),", etc."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"languagesetting",children:"LanguageSetting"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-allowcompoundwords",children:"allowCompoundWords"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"True to enable compound word checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-casesensitive",children:"caseSensitive"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Determines if words must match case and accent rules."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-dictionaries",children:"dictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-dictionarydefinitions",children:"dictionaryDefinitions"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Define additional available dictionaries."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-enabled",children:"enabled"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Is the spell checker enabled."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-id",children:"id"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional identifier."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-ignoreregexplist",children:"ignoreRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or pattern names to exclude from spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-includeregexplist",children:"includeRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or defined pattern names to match for spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-languageid",children:"languageId"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})}),(0,s.jsxs)(i.td,{children:["The language id.  Ex: ",(0,s.jsx)(i.code,{children:"typescript"}),", ",(0,s.jsx)(i.code,{children:"html"}),", or ",(0,s.jsx)(i.code,{children:"php"}),".  ",(0,s.jsx)(i.code,{children:"*"})," -- will match all languages."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-local",children:"local"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Deprecated - The locale filter, matches against the language. This can be a comma separated list. ",(0,s.jsx)(i.code,{children:"*"})," will match all locales."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-locale",children:"locale"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["The locale filter, matches against the language. This can be a comma separated list. ",(0,s.jsx)(i.code,{children:"*"})," will match all locales."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional name of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-nosuggestdictionaries",children:"noSuggestDictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries that will not be used for suggestions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-patterns",children:"patterns"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#languagesetting-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"languagesetting-fields",children:"LanguageSetting Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-allowcompoundwords",children:(0,s.jsx)(i.code,{children:"allowCompoundWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"True to enable compound word checking."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-casesensitive",children:(0,s.jsx)(i.code,{children:"caseSensitive"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Determines if words must match case and accent rules."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/case-sensitive/",children:"Case Sensitivity"})," for more details."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"false"})," - Case is ignored and accents can be missing on the entire word.\nIncorrect accents or partially missing accents will be marked as incorrect."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"true"})," - Case and accents are enforced."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-dictionaries",children:(0,s.jsx)(i.code,{children:"dictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."}),(0,s.jsxs)(i.p,{children:["To remove a dictionary from the list, add ",(0,s.jsx)(i.code,{children:"!"})," before the name."]}),(0,s.jsxs)(i.p,{children:["For example, ",(0,s.jsx)(i.code,{children:"!typescript"})," will turn off the dictionary with the name ",(0,s.jsx)(i.code,{children:"typescript"}),"."]}),(0,s.jsxs)(i.p,{children:["See the ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries/",children:"Dictionaries"}),"\nand ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries-custom/",children:"Custom Dictionaries"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-dictionarydefinitions",children:(0,s.jsx)(i.code,{children:"dictionaryDefinitions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Define additional available dictionaries."}),(0,s.jsx)(i.p,{children:"For example, you can use the following to add a custom dictionary:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"dictionaryDefinitions": [\n  { "name": "custom-words", "path": "./custom-words.txt"}\n],\n"dictionaries": ["custom-words"]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-enabled",children:(0,s.jsx)(i.code,{children:"enabled"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Is the spell checker enabled."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-id",children:(0,s.jsx)(i.code,{children:"id"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional identifier."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-ignoreregexplist",children:(0,s.jsx)(i.code,{children:"ignoreRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or pattern names to exclude from spell checking."}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'["href"]'})," - to exclude html href pattern."]}),(0,s.jsx)(i.p,{children:"Regular expressions use JavaScript regular expression syntax."}),(0,s.jsx)(i.p,{children:"Example: to ignore ALL-CAPS words"}),(0,s.jsx)(i.p,{children:"JSON"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"ignoreRegExpList": ["/\\\\b[A-Z]+\\\\b/g"]\n'})}),(0,s.jsx)(i.p,{children:"YAML"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"ignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n"})}),(0,s.jsxs)(i.p,{children:["By default, several patterns are excluded. See\n",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/patterns",children:"Configuration"})," for more details."]}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-includeregexplist",children:(0,s.jsx)(i.code,{children:"includeRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or defined pattern names to match for spell checking."}),(0,s.jsx)(i.p,{children:"If this property is defined, only text matching the included patterns will be checked."}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-languageid",children:(0,s.jsx)(i.code,{children:"languageId"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The language id.  Ex: ",(0,s.jsx)(i.code,{children:"typescript"}),", ",(0,s.jsx)(i.code,{children:"html"}),", or ",(0,s.jsx)(i.code,{children:"php"}),".  ",(0,s.jsx)(i.code,{children:"*"})," -- will match all languages."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-local",children:(0,s.jsx)(i.code,{children:"local"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Deprecated - The locale filter, matches against the language. This can be a comma separated list. ",(0,s.jsx)(i.code,{children:"*"})," will match all locales."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-locale",children:(0,s.jsx)(i.code,{children:"locale"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The locale filter, matches against the language. This can be a comma separated list. ",(0,s.jsx)(i.code,{children:"*"})," will match all locales."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional name of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-nosuggestdictionaries",children:(0,s.jsx)(i.code,{children:"noSuggestDictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-patterns",children:(0,s.jsx)(i.code,{children:"patterns"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and\n",(0,s.jsx)(i.a,{href:"#includeregexplist",children:"includeRegExpList"}),"  options."]}),(0,s.jsx)(i.p,{children:"For example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'"ignoreRegExpList": ["comments"],\n"patterns": [\n  {\n    "name": "comment-single-line",\n    "pattern": "/#.*/g"\n  },\n  {\n    "name": "comment-multi-line",\n    "pattern": "/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    "name": "comments",\n    "pattern": ["comment-single-line", "comment-multi-line"]\n  }\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"languagesetting-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"localeid",children:"LocaleId"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["This is a written language locale like: ",(0,s.jsx)(i.code,{children:"en"}),", ",(0,s.jsx)(i.code,{children:"en-GB"}),", ",(0,s.jsx)(i.code,{children:"fr"}),", ",(0,s.jsx)(i.code,{children:"es"}),", ",(0,s.jsx)(i.code,{children:"de"})," or ",(0,s.jsx)(i.code,{children:"en,fr"})," for both English and French"]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"matchingfiletype",children:"MatchingFileType"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageid",children:(0,s.jsx)(i.code,{children:"LanguageId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#languageid",children:(0,s.jsx)(i.code,{children:"LanguageId"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.h2,{id:"overridesettings",children:"OverrideSettings"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-allowcompoundwords",children:"allowCompoundWords"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"True to enable compound word checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-casesensitive",children:"caseSensitive"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Determines if words must match case and accent rules."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional description of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-dictionaries",children:"dictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-dictionarydefinitions",children:"dictionaryDefinitions"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Define additional available dictionaries."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-enablefiletypes",children:"enableFiletypes"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Enable / Disable checking file types (languageIds)."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-enabled",children:"enabled"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsx)(i.td,{children:"Is the spell checker enabled."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-enabledfiletypes",children:"enabledFileTypes"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"object"})}),(0,s.jsx)(i.td,{children:"Enable / Disable checking file types (languageIds)."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-enabledlanguageids",children:"enabledLanguageIds"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Specify a list of file types to spell check. It is better to use  ",(0,s.jsx)(i.a,{href:"#settings-enabledfiletypes",children:"Settings.enabledFileTypes"}),"  to Enable / Disable checking files types."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-filename",children:"filename"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Glob pattern or patterns to match against."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-flagwords",children:"flagWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-id",children:"id"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional identifier."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-ignoreregexplist",children:"ignoreRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or pattern names to exclude from spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-ignorewords",children:"ignoreWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be ignored. An ignored word will not show up as an error, even if it is"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-includeregexplist",children:"includeRegExpList"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})}),(0,s.jsx)(i.td,{children:"List of regular expression patterns or defined pattern names to match for spell checking."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-language",children:"language"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})})}),(0,s.jsx)(i.td,{children:"Sets the locale."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-languageid",children:"languageId"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})}),(0,s.jsx)(i.td,{children:"Sets the programming language id to match file type."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-languagesettings",children:"languageSettings"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#languagesetting",children:(0,s.jsx)(i.code,{children:"LanguageSetting"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Additional settings for individual languages."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-loaddefaultconfiguration",children:"loadDefaultConfiguration"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["By default, the bundled dictionary configurations are loaded. Explicitly setting this to ",(0,s.jsx)(i.code,{children:"false"})]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-maxduplicateproblems",children:"maxDuplicateProblems"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of times the same word can be flagged as an error in a file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-maxnumberofproblems",children:"maxNumberOfProblems"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of problems to report in a file."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-minwordlength",children:"minWordLength"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The minimum length of a word before checking it against a dictionary."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Optional name of configuration."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-nosuggestdictionaries",children:"noSuggestDictionaries"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"Optional list of dictionaries that will not be used for suggestions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-numsuggestions",children:"numSuggestions"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"Number of suggestions to make."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-patterns",children:"patterns"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-pnpfiles",children:"pnpFiles"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsxs)(i.td,{children:["The PnP files to search for. Note: ",(0,s.jsx)(i.code,{children:".mjs"})," files are not currently supported."]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-suggestwords",children:"suggestWords"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"A list of suggested replacements for words."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-suggestionnumchanges",children:"suggestionNumChanges"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum number of changes allowed on a word to be considered a suggestions."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-suggestionstimeout",children:"suggestionsTimeout"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The maximum amount of time in milliseconds to generate suggestions for a word."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-usepnp",children:"usePnP"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"boolean"})}),(0,s.jsxs)(i.td,{children:["Packages managers like Yarn 2 use a ",(0,s.jsx)(i.code,{children:".pnp.cjs"})," file to assist in loading"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#overridesettings-words",children:"words"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"List of words to be considered correct."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"overridesettings-fields",children:"OverrideSettings Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-allowcompoundwords",children:(0,s.jsx)(i.code,{children:"allowCompoundWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"True to enable compound word checking."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-casesensitive",children:(0,s.jsx)(i.code,{children:"caseSensitive"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Determines if words must match case and accent rules."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/case-sensitive/",children:"Case Sensitivity"})," for more details."]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"false"})," - Case is ignored and accents can be missing on the entire word.\nIncorrect accents or partially missing accents will be marked as incorrect."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"true"})," - Case and accents are enforced."]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional description of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-dictionaries",children:(0,s.jsx)(i.code,{children:"dictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."}),(0,s.jsxs)(i.p,{children:["To remove a dictionary from the list, add ",(0,s.jsx)(i.code,{children:"!"})," before the name."]}),(0,s.jsxs)(i.p,{children:["For example, ",(0,s.jsx)(i.code,{children:"!typescript"})," will turn off the dictionary with the name ",(0,s.jsx)(i.code,{children:"typescript"}),"."]}),(0,s.jsxs)(i.p,{children:["See the ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries/",children:"Dictionaries"}),"\nand ",(0,s.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries-custom/",children:"Custom Dictionaries"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-dictionarydefinitions",children:(0,s.jsx)(i.code,{children:"dictionaryDefinitions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Define additional available dictionaries."}),(0,s.jsx)(i.p,{children:"For example, you can use the following to add a custom dictionary:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"dictionaryDefinitions": [\n  { "name": "custom-words", "path": "./custom-words.txt"}\n],\n"dictionaries": ["custom-words"]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionarydefinition",children:(0,s.jsx)(i.code,{children:"DictionaryDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-enablefiletypes",children:(0,s.jsx)(i.code,{children:"enableFiletypes"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),(0,s.jsxs)(i.p,{children:["These are in additional to the file types specified by  ",(0,s.jsx)(i.a,{href:"#settings-enabledlanguageids",children:"Settings.enabledLanguageIds"})," .\nTo disable a language, prefix with ",(0,s.jsx)(i.code,{children:"!"})," as in ",(0,s.jsx)(i.code,{children:"!json"}),","]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: individual file types"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"jsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n"})}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: enable all file types"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"*           // enable checking for all file types\n!json       // except for json\n"})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-enabled",children:(0,s.jsx)(i.code,{children:"enabled"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Is the spell checker enabled."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-enabledfiletypes",children:(0,s.jsx)(i.code,{children:"enabledFileTypes"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),(0,s.jsxs)(i.p,{children:["This setting replaces:  ",(0,s.jsx)(i.a,{href:"#settings-enabledlanguageids",children:"Settings.enabledLanguageIds"}),"  and  ",(0,s.jsx)(i.a,{href:"#settings-enablefiletypes",children:"Settings.enableFiletypes"})," ."]}),(0,s.jsx)(i.p,{children:"A Value of:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"true"})," - enable checking for the file type"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"false"})," - disable checking for the file type"]}),"\n"]}),(0,s.jsxs)(i.p,{children:["A file type of ",(0,s.jsx)(i.code,{children:"*"})," is a wildcard that enables all file types."]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Example: enable all file types"})}),(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"File Type"}),(0,s.jsx)(i.th,{children:"Enabled"}),(0,s.jsx)(i.th,{children:"Comment"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"*"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"true"})}),(0,s.jsx)(i.td,{children:"Enable all file types."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"json"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"false"})}),(0,s.jsx)(i.td,{children:"Disable checking for json files."})]})]})]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"object"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-enabledlanguageids",children:(0,s.jsx)(i.code,{children:"enabledLanguageIds"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Specify a list of file types to spell check. It is better to use  ",(0,s.jsx)(i.a,{href:"#settings-enabledfiletypes",children:"Settings.enabledFileTypes"}),"  to Enable / Disable checking files types."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languageidsingle",children:(0,s.jsx)(i.code,{children:"LanguageIdSingle"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-filename",children:(0,s.jsx)(i.code,{children:"filename"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Glob pattern or patterns to match against."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#glob",children:(0,s.jsx)(i.code,{children:"Glob"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-flagwords",children:(0,s.jsx)(i.code,{children:"flagWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,s.jsx)(i.code,{children:"flagWords"})," override ",(0,s.jsx)(i.code,{children:"words"}),"."]}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"flagWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["single word entry - ",(0,s.jsx)(i.code,{children:"word"})]}),"\n",(0,s.jsxs)(i.li,{children:["with suggestions - ",(0,s.jsx)(i.code,{children:"word:suggestion"})," or ",(0,s.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),(0,s.jsx)(i.p,{children:"Example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-id",children:(0,s.jsx)(i.code,{children:"id"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional identifier."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-ignoreregexplist",children:(0,s.jsx)(i.code,{children:"ignoreRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or pattern names to exclude from spell checking."}),(0,s.jsxs)(i.p,{children:["Example: ",(0,s.jsx)(i.code,{children:'["href"]'})," - to exclude html href pattern."]}),(0,s.jsx)(i.p,{children:"Regular expressions use JavaScript regular expression syntax."}),(0,s.jsx)(i.p,{children:"Example: to ignore ALL-CAPS words"}),(0,s.jsx)(i.p,{children:"JSON"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'"ignoreRegExpList": ["/\\\\b[A-Z]+\\\\b/g"]\n'})}),(0,s.jsx)(i.p,{children:"YAML"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"ignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n"})}),(0,s.jsxs)(i.p,{children:["By default, several patterns are excluded. See\n",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/patterns",children:"Configuration"})," for more details."]}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-ignorewords",children:(0,s.jsx)(i.code,{children:"ignoreWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,s.jsx)(i.code,{children:"flagWords"}),"."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-includeregexplist",children:(0,s.jsx)(i.code,{children:"includeRegExpList"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"List of regular expression patterns or defined pattern names to match for spell checking."}),(0,s.jsx)(i.p,{children:"If this property is defined, only text matching the included patterns will be checked."}),(0,s.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,s.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#regexppatternlist",children:(0,s.jsx)(i.code,{children:"RegExpPatternList"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-language",children:(0,s.jsx)(i.code,{children:"language"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Sets the locale."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#localeid",children:(0,s.jsx)(i.code,{children:"LocaleId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-languageid",children:(0,s.jsx)(i.code,{children:"languageId"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Sets the programming language id to match file type."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#matchingfiletype",children:(0,s.jsx)(i.code,{children:"MatchingFileType"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-languagesettings",children:(0,s.jsx)(i.code,{children:"languageSettings"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Additional settings for individual languages."}),(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://cspell.org/configuration/language-settings/",children:"Language Settings"})," for more details."]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#languagesetting",children:(0,s.jsx)(i.code,{children:"LanguageSetting"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-loaddefaultconfiguration",children:(0,s.jsx)(i.code,{children:"loadDefaultConfiguration"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["By default, the bundled dictionary configurations are loaded. Explicitly setting this to ",(0,s.jsx)(i.code,{children:"false"}),"\nwill prevent ALL default configuration from being loaded."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-maxduplicateproblems",children:(0,s.jsx)(i.code,{children:"maxDuplicateProblems"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum number of times the same word can be flagged as an error in a file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-maxnumberofproblems",children:(0,s.jsx)(i.code,{children:"maxNumberOfProblems"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum number of problems to report in a file."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-minwordlength",children:(0,s.jsx)(i.code,{children:"minWordLength"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The minimum length of a word before checking it against a dictionary."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Optional name of configuration."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-nosuggestdictionaries",children:(0,s.jsx)(i.code,{children:"noSuggestDictionaries"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions."}),(0,s.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#dictionaryreference",children:(0,s.jsx)(i.code,{children:"DictionaryReference"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-numsuggestions",children:(0,s.jsx)(i.code,{children:"numSuggestions"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Number of suggestions to make."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-patterns",children:(0,s.jsx)(i.code,{children:"patterns"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Defines a list of patterns that can be used with the  ",(0,s.jsx)(i.a,{href:"#ignoreregexplist",children:"ignoreRegExpList"}),"  and\n",(0,s.jsx)(i.a,{href:"#includeregexplist",children:"includeRegExpList"}),"  options."]}),(0,s.jsx)(i.p,{children:"For example:"}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'"ignoreRegExpList": ["comments"],\n"patterns": [\n  {\n    "name": "comment-single-line",\n    "pattern": "/#.*/g"\n  },\n  {\n    "name": "comment-multi-line",\n    "pattern": "/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    "name": "comments",\n    "pattern": ["comment-single-line", "comment-multi-line"]\n  }\n]\n'})})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#regexppatterndefinition",children:(0,s.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-pnpfiles",children:(0,s.jsx)(i.code,{children:"pnpFiles"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["The PnP files to search for. Note: ",(0,s.jsx)(i.code,{children:".mjs"})," files are not currently supported."]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-suggestwords",children:(0,s.jsx)(i.code,{children:"suggestWords"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),(0,s.jsxs)(i.p,{children:["Format of ",(0,s.jsx)(i.code,{children:"suggestWords"})]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-suggestionnumchanges",children:(0,s.jsx)(i.code,{children:"suggestionNumChanges"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"The maximum number of changes allowed on a word to be considered a suggestions."}),(0,s.jsxs)(i.p,{children:["For example, appending an ",(0,s.jsx)(i.code,{children:"s"})," onto ",(0,s.jsx)(i.code,{children:"example"})," -> ",(0,s.jsx)(i.code,{children:"examples"})," is considered 1 change."]}),(0,s.jsx)(i.p,{children:"Range: between 1 and 5."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-suggestionstimeout",children:(0,s.jsx)(i.code,{children:"suggestionsTimeout"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The maximum amount of time in milliseconds to generate suggestions for a word."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-usepnp",children:(0,s.jsx)(i.code,{children:"usePnP"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsxs)(i.p,{children:["Packages managers like Yarn 2 use a ",(0,s.jsx)(i.code,{children:".pnp.cjs"})," file to assist in loading\npackages stored in the repository."]}),(0,s.jsx)(i.p,{children:"When true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"boolean"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"overridesettings-words",children:(0,s.jsx)(i.code,{children:"words"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"List of words to be considered correct."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"pattern",children:"Pattern"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"patternadjustment",children:"PatternAdjustment"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#patternadjustment-id",children:"id"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsxs)(i.td,{children:["Id of the Adjustment, i.e. ",(0,s.jsx)(i.code,{children:"short-compound"})]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#patternadjustment-penalty",children:"penalty"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"The amount of penalty to apply."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#patternadjustment-regexp",children:"regexp"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"RegExp pattern to match"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"patternadjustment-fields",children:"PatternAdjustment Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"patternadjustment-id",children:(0,s.jsx)(i.code,{children:"id"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:["Id of the Adjustment, i.e. ",(0,s.jsx)(i.code,{children:"short-compound"})]})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"patternadjustment-penalty",children:(0,s.jsx)(i.code,{children:"penalty"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The amount of penalty to apply."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"number"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"patternadjustment-regexp",children:(0,s.jsx)(i.code,{children:"regexp"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"RegExp pattern to match"})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"patternid",children:"PatternId"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"This matches the name in a pattern definition."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"patternref",children:"PatternRef"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A PatternRef is a Pattern or PatternId."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#pattern",children:(0,s.jsx)(i.code,{children:"Pattern"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#patternid",children:(0,s.jsx)(i.code,{children:"PatternId"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#predefinedpatterns",children:(0,s.jsx)(i.code,{children:"PredefinedPatterns"})})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"predefinedpatterns",children:"PredefinedPatterns"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"regexppatterndefinition",children:"RegExpPatternDefinition"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Field"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatterndefinition-description",children:"description"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Description of the pattern."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatterndefinition-name",children:"name"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#patternid",children:(0,s.jsx)(i.code,{children:"PatternId"})})}),(0,s.jsx)(i.td,{children:"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList."})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#regexppatterndefinition-pattern",children:"pattern"})}),(0,s.jsxs)(i.td,{children:[(0,s.jsx)(i.a,{href:"#pattern",children:(0,s.jsx)(i.code,{children:"Pattern"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#pattern",children:(0,s.jsx)(i.code,{children:"Pattern"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]}),(0,s.jsx)(i.td,{children:"RegExp pattern or array of RegExp patterns."})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"regexppatterndefinition-fields",children:"RegExpPatternDefinition Fields"}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"regexppatterndefinition-description",children:(0,s.jsx)(i.code,{children:"description"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Description of the pattern."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"regexppatterndefinition-name",children:(0,s.jsx)(i.code,{children:"name"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#patternid",children:(0,s.jsx)(i.code,{children:"PatternId"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h4,{id:"regexppatterndefinition-pattern",children:(0,s.jsx)(i.code,{children:"pattern"})}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"RegExp pattern or array of RegExp patterns."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#pattern",children:(0,s.jsx)(i.code,{children:"Pattern"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#pattern",children:(0,s.jsx)(i.code,{children:"Pattern"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"regexppatternlist",children:"RegExpPatternList"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"A list of pattern names or regular expressions."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#patternref",children:(0,s.jsx)(i.code,{children:"PatternRef"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"replaceentry",children:"ReplaceEntry"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"string"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"replacemap",children:"ReplaceMap"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#replaceentry",children:(0,s.jsx)(i.code,{children:"ReplaceEntry"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"reportermodulename",children:"ReporterModuleName"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"The module or path to the the reporter to load."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"reporteroptions",children:"ReporterOptions"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Options to send to the reporter. These are defined by the reporter."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"#serializable",children:(0,s.jsx)(i.code,{children:"Serializable"})})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"reportersettings",children:"ReporterSettings"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"Declare a reporter to use."}),(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"default"})," - is a special name for the default cli reporter."]}),(0,s.jsx)(i.p,{children:"Examples:"}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"default"'})," - to use the default reporter"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:'"@cspell/cspell-json-reporter"'})," - use the cspell JSON reporter."]}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:'["@cspell/cspell-json-reporter", { "outFile": "out.json" }]'})}),"\n"]})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#reportermodulename",children:(0,s.jsx)(i.code,{children:"ReporterModuleName"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#reportermodulename",children:(0,s.jsx)(i.code,{children:"ReporterModuleName"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"}),(0,s.jsx)("br",{}),(0,s.jsx)(i.code,{children:"Unknown"}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"serializable",children:"Serializable"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"number"}),(0,s.jsx)("br",{}),(0,s.jsx)(i.code,{children:"string"}),(0,s.jsx)("br",{}),(0,s.jsx)(i.code,{children:"boolean"}),(0,s.jsx)("br",{}),(0,s.jsx)(i.code,{children:"null"}),(0,s.jsx)("br",{}),(0,s.jsx)(i.code,{children:"object"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"simpleglob",children:"SimpleGlob"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Simple Glob string, the root will be globRoot."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"suggestioncostmapdef",children:"SuggestionCostMapDef"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsxs)("dd",{children:[(0,s.jsx)(i.p,{children:"A WeightedMapDef enables setting weights for edits between related characters and substrings."}),(0,s.jsxs)(i.p,{children:["Multiple groups can be defined using a ",(0,s.jsx)(i.code,{children:"|"}),".\nA multi-character substring is defined using ",(0,s.jsx)(i.code,{children:"()"}),"."]}),(0,s.jsx)(i.p,{children:"For example, in some languages, some letters sound alike."}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"  map: 'sc(sh)(sch)(ss)|t(tt)' # two groups.\n  replace: 50    # Make it 1/2 the cost of a normal edit to replace a `t` with `tt`.\n"})}),(0,s.jsx)(i.p,{children:"The following could be used to make inserting, removing, or replacing vowels cheaper."}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"  map: 'aeiouy'\n  insDel: 50     # Make it is cheaper to insert or delete a vowel.\n  replace: 45    # It is even cheaper to replace one with another.\n"})}),(0,s.jsx)(i.p,{children:"Note: the default edit distance is 100."})]}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#costmapdefreplace",children:(0,s.jsx)(i.code,{children:"CostMapDefReplace"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#costmapdefinsdel",children:(0,s.jsx)(i.code,{children:"CostMapDefInsDel"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#costmapdefswap",children:(0,s.jsx)(i.code,{children:"CostMapDefSwap"})})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"suggestioncostsdefs",children:"SuggestionCostsDefs"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#suggestioncostmapdef",children:(0,s.jsx)(i.code,{children:"SuggestionCostMapDef"})}),"\u200b",(0,s.jsx)(i.code,{children:"[]"})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"version",children:"Version"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"#versionlatest",children:(0,s.jsx)(i.code,{children:"VersionLatest"})}),(0,s.jsx)("br",{}),(0,s.jsx)(i.a,{href:"#versionlegacy",children:(0,s.jsx)(i.code,{children:"VersionLegacy"})})]})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"versionlatest",children:"VersionLatest"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Configuration File Version."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"versionlegacy",children:"VersionLegacy"}),"\n",(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{children:"Description"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:"Legacy Configuration File Versions."})}),(0,s.jsx)("dt",{children:"Type"}),(0,s.jsx)("dd",{children:(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"string"})})})]})]})}function a(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7735:(e,i,d)=>{d.d(i,{R:()=>c,x:()=>l});var n=d(7378);const s={},r=n.createContext(s);function c(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);