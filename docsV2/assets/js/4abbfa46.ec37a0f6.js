"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30895],{2300:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var s=n(7378);const l={},d=s.createContext(l);function r(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(d.Provider,{value:i},e.children)}},43582:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>t,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api/cspell-lib/interfaces/CSpellSettings","title":"Interface: CSpellSettings","description":"Defined in819","source":"@site/docs/api/cspell-lib/interfaces/CSpellSettings.md","sourceDirName":"api/cspell-lib/interfaces","slug":"/api/cspell-lib/interfaces/CSpellSettings","permalink":"/docsV2/docs/api/cspell-lib/interfaces/CSpellSettings","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/interfaces/CSpellSettings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: CSpellReporterModule","permalink":"/docsV2/docs/api/cspell-lib/interfaces/CSpellReporterModule"},"next":{"title":"Interface: CSpellSettingsWithSourceTrace","permalink":"/docsV2/docs/api/cspell-lib/interfaces/CSpellSettingsWithSourceTrace"}}');var l=n(86106),d=n(2300);const r={},c="Interface: CSpellSettings",t={},o=[{value:"Extends",id:"extends",level:2},{value:"Extended by",id:"extended-by",level:2},{value:"Properties",id:"properties",level:2},{value:"$schema?",id:"schema",level:3},{value:"Default",id:"default",level:4},{value:"Inherited from",id:"inherited-from",level:4},{value:"allowCompoundWords?",id:"allowcompoundwords",level:3},{value:"Default",id:"default-1",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"cache?",id:"cache",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"caseSensitive?",id:"casesensitive",level:3},{value:"Default",id:"default-2",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"description?",id:"description",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"dictionaries?",id:"dictionaries",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"dictionaryDefinitions?",id:"dictionarydefinitions",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"enabled?",id:"enabled",level:3},{value:"Default",id:"default-3",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"enabledFileTypes?",id:"enabledfiletypes",level:3},{value:"Title",id:"title",level:4},{value:"Since",id:"since",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"enabledLanguageIds?",id:"enabledlanguageids",level:3},{value:"Title",id:"title-1",level:4},{value:"Unique Items",id:"unique-items",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"enableFiletypes?",id:"enablefiletypes",level:3},{value:"Title",id:"title-2",level:4},{value:"Scope",id:"scope",level:4},{value:"Unique Items",id:"unique-items-1",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"enableGlobDot?",id:"enableglobdot",level:3},{value:"Default",id:"default-4",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"failFast?",id:"failfast",level:3},{value:"Default",id:"default-5",level:4},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"features?",id:"features",level:3},{value:"Since",id:"since-1",level:4},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"files?",id:"files",level:3},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"flagWords?",id:"flagwords",level:3},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"gitignoreRoot?",id:"gitignoreroot",level:3},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"globRoot?",id:"globroot",level:3},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"id?",id:"id",level:3},{value:"Inherited from",id:"inherited-from-18",level:4},{value:"ignorePaths?",id:"ignorepaths",level:3},{value:"Inherited from",id:"inherited-from-19",level:4},{value:"ignoreRandomStrings?",id:"ignorerandomstrings",level:3},{value:"Default",id:"default-6",level:4},{value:"Inherited from",id:"inherited-from-20",level:4},{value:"ignoreRegExpList?",id:"ignoreregexplist",level:3},{value:"Inherited from",id:"inherited-from-21",level:4},{value:"ignoreWords?",id:"ignorewords",level:3},{value:"Inherited from",id:"inherited-from-22",level:4},{value:"import?",id:"import",level:3},{value:"Inherited from",id:"inherited-from-23",level:4},{value:"includeRegExpList?",id:"includeregexplist",level:3},{value:"Inherited from",id:"inherited-from-24",level:4},{value:"language?",id:"language",level:3},{value:"Default",id:"default-7",level:4},{value:"Inherited from",id:"inherited-from-25",level:4},{value:"languageId?",id:"languageid",level:3},{value:"Inherited from",id:"inherited-from-26",level:4},{value:"languageSettings?",id:"languagesettings",level:3},{value:"Inherited from",id:"inherited-from-27",level:4},{value:"loadDefaultConfiguration?",id:"loaddefaultconfiguration",level:3},{value:"Default",id:"default-8",level:4},{value:"Inherited from",id:"inherited-from-28",level:4},{value:"maxDuplicateProblems?",id:"maxduplicateproblems",level:3},{value:"Default",id:"default-9",level:4},{value:"Inherited from",id:"inherited-from-29",level:4},{value:"maxNumberOfProblems?",id:"maxnumberofproblems",level:3},{value:"Default",id:"default-10",level:4},{value:"Inherited from",id:"inherited-from-30",level:4},{value:"minRandomLength?",id:"minrandomlength",level:3},{value:"Default",id:"default-11",level:4},{value:"Inherited from",id:"inherited-from-31",level:4},{value:"minWordLength?",id:"minwordlength",level:3},{value:"Default",id:"default-12",level:4},{value:"Inherited from",id:"inherited-from-32",level:4},{value:"name?",id:"name",level:3},{value:"Inherited from",id:"inherited-from-33",level:4},{value:"noConfigSearch?",id:"noconfigsearch",level:3},{value:"Default",id:"default-13",level:4},{value:"Inherited from",id:"inherited-from-34",level:4},{value:"noSuggestDictionaries?",id:"nosuggestdictionaries",level:3},{value:"Inherited from",id:"inherited-from-35",level:4},{value:"numSuggestions?",id:"numsuggestions",level:3},{value:"Default",id:"default-14",level:4},{value:"Inherited from",id:"inherited-from-36",level:4},{value:"overrides?",id:"overrides",level:3},{value:"Inherited from",id:"inherited-from-37",level:4},{value:"parser?",id:"parser",level:3},{value:"Since",id:"since-2",level:4},{value:"Inherited from",id:"inherited-from-38",level:4},{value:"patterns?",id:"patterns",level:3},{value:"Inherited from",id:"inherited-from-39",level:4},{value:"pnpFiles?",id:"pnpfiles",level:3},{value:"Default",id:"default-15",level:4},{value:"Inherited from",id:"inherited-from-40",level:4},{value:"readonly?",id:"readonly",level:3},{value:"Default",id:"default-16",level:4},{value:"Inherited from",id:"inherited-from-41",level:4},{value:"reporters?",id:"reporters",level:3},{value:"Default",id:"default-17",level:4},{value:"Inherited from",id:"inherited-from-42",level:4},{value:"<del>showStatus?</del>",id:"showstatus",level:3},{value:"Deprecated",id:"deprecated",level:4},{value:"Inherited from",id:"inherited-from-43",level:4},{value:"<del>spellCheckDelayMs?</del>",id:"spellcheckdelayms",level:3},{value:"Deprecated",id:"deprecated-1",level:4},{value:"Inherited from",id:"inherited-from-44",level:4},{value:"suggestionNumChanges?",id:"suggestionnumchanges",level:3},{value:"Default",id:"default-18",level:4},{value:"Inherited from",id:"inherited-from-45",level:4},{value:"suggestionsTimeout?",id:"suggestionstimeout",level:3},{value:"Default",id:"default-19",level:4},{value:"Inherited from",id:"inherited-from-46",level:4},{value:"suggestWords?",id:"suggestwords",level:3},{value:"Inherited from",id:"inherited-from-47",level:4},{value:"useGitignore?",id:"usegitignore",level:3},{value:"Default",id:"default-20",level:4},{value:"Inherited from",id:"inherited-from-48",level:4},{value:"usePnP?",id:"usepnp",level:3},{value:"Default",id:"default-21",level:4},{value:"Inherited from",id:"inherited-from-49",level:4},{value:"userWords?",id:"userwords",level:3},{value:"Inherited from",id:"inherited-from-50",level:4},{value:"validateDirectives?",id:"validatedirectives",level:3},{value:"Inherited from",id:"inherited-from-51",level:4},{value:"version?",id:"version",level:3},{value:"Default",id:"default-22",level:4},{value:"Inherited from",id:"inherited-from-52",level:4},{value:"words?",id:"words",level:3},{value:"Inherited from",id:"inherited-from-53",level:4}];function h(e){const i={a:"a",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"interface-cspellsettings",children:"Interface: CSpellSettings"})}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:819"}),"\n",(0,l.jsx)(i.p,{children:"In the below JSDoc comment, we helpfully specify an example configuration for the end-user to\nreference. And this example will get captured by the automatic documentation generator."}),"\n",(0,l.jsx)(i.p,{children:'However, specifying the glob pattern inside of a JSDoc is tricky, because the glob contains the\nsame symbol as the end-of-JSDoc symbol. To work around this, we insert a zero-width space in\nbetween the "*" and the "/" symbols.'}),"\n",(0,l.jsx)(i.h2,{id:"extends",children:"Extends"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LegacySettings",children:(0,l.jsx)(i.code,{children:"LegacySettings"})})]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"extended-by",children:"Extended by"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/CSpellSettingsWithSourceTrace",children:(0,l.jsx)(i.code,{children:"CSpellSettingsWithSourceTrace"})})}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(i.h3,{id:"schema",children:"$schema?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"$schema"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:839"}),"\n",(0,l.jsx)(i.p,{children:"Url to JSON Schema"}),"\n",(0,l.jsx)(i.h4,{id:"default",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json"\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#$schema",children:(0,l.jsx)(i.code,{children:"$schema"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"allowcompoundwords",children:"allowCompoundWords?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"allowCompoundWords"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1221"}),"\n",(0,l.jsx)(i.p,{children:"True to enable compound word checking."}),"\n",(0,l.jsx)(i.h4,{id:"default-1",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#allowcompoundwords",children:(0,l.jsx)(i.code,{children:"allowCompoundWords"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"cache",children:"cache?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"cache"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/CacheSettings",children:(0,l.jsx)(i.code,{children:"CacheSettings"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1146"}),"\n",(0,l.jsx)(i.p,{children:"Define cache settings."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#cache",children:(0,l.jsx)(i.code,{children:"cache"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"casesensitive",children:"caseSensitive?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"caseSensitive"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1233"}),"\n",(0,l.jsx)(i.p,{children:"Determines if words must match case and accent rules."}),"\n",(0,l.jsxs)(i.p,{children:["See ",(0,l.jsx)(i.a,{href:"https://cspell.org/docs/case-sensitive/",children:"Case Sensitivity"})," for more details."]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"false"})," - Case is ignored and accents can be missing on the entire word.\nIncorrect accents or partially missing accents will be marked as incorrect."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"true"})," - Case and accents are enforced."]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"default-2",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#casesensitive",children:(0,l.jsx)(i.code,{children:"caseSensitive"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"description",children:"description?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"description"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1210"}),"\n",(0,l.jsx)(i.p,{children:"Optional description of configuration."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#description",children:(0,l.jsx)(i.code,{children:"description"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"dictionaries",children:"dictionaries?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"dictionaries"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1257"}),"\n",(0,l.jsx)(i.p,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."}),"\n",(0,l.jsxs)(i.p,{children:["To remove a dictionary from the list, add ",(0,l.jsx)(i.code,{children:"!"})," before the name."]}),"\n",(0,l.jsxs)(i.p,{children:["For example, ",(0,l.jsx)(i.code,{children:"!typescript"})," will turn off the dictionary with the name ",(0,l.jsx)(i.code,{children:"typescript"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["See the ",(0,l.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries/",children:"Dictionaries"}),"\nand ",(0,l.jsx)(i.a,{href:"https://cspell.org/docs/dictionaries-custom/",children:"Custom Dictionaries"})," for more details."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#dictionaries",children:(0,l.jsx)(i.code,{children:"dictionaries"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"dictionarydefinitions",children:"dictionaryDefinitions?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"dictionaryDefinitions"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/DictionaryDefinition",children:(0,l.jsx)(i.code,{children:"DictionaryDefinition"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1246"}),"\n",(0,l.jsx)(i.p,{children:"Define additional available dictionaries."}),"\n",(0,l.jsx)(i.p,{children:"For example, you can use the following to add a custom dictionary:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-json",children:'"dictionaryDefinitions": [\n  { "name": "custom-words", "path": "./custom-words.txt"}\n],\n"dictionaries": ["custom-words"]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#dictionarydefinitions",children:(0,l.jsx)(i.code,{children:"dictionaryDefinitions"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"enabled",children:"enabled?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"enabled"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1215"}),"\n",(0,l.jsx)(i.p,{children:"Is the spell checker enabled."}),"\n",(0,l.jsx)(i.h4,{id:"default-3",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"true\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-7",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#enabled",children:(0,l.jsx)(i.code,{children:"enabled"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"enabledfiletypes",children:"enabledFileTypes?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"enabledFileTypes"}),": ",(0,l.jsx)(i.code,{children:"Record"}),"<",(0,l.jsx)(i.code,{children:"string"}),", ",(0,l.jsx)(i.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1024"}),"\n",(0,l.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),"\n",(0,l.jsxs)(i.p,{children:["This setting replaces: ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/AdvancedCSpellSettingsWithSourceTrace#enabledlanguageids",children:"Settings.enabledLanguageIds"})," and ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/AdvancedCSpellSettingsWithSourceTrace#enablefiletypes",children:"Settings.enableFiletypes"}),"."]}),"\n",(0,l.jsx)(i.p,{children:"A Value of:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"true"})," - enable checking for the file type"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"false"})," - disable checking for the file type"]}),"\n"]}),"\n",(0,l.jsxs)(i.p,{children:["A file type of ",(0,l.jsx)(i.code,{children:"*"})," is a wildcard that enables all file types."]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Example: enable all file types"})}),"\n",(0,l.jsxs)(i.table,{children:[(0,l.jsx)(i.thead,{children:(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.th,{children:"File Type"}),(0,l.jsx)(i.th,{children:"Enabled"}),(0,l.jsx)(i.th,{children:"Comment"})]})}),(0,l.jsxs)(i.tbody,{children:[(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"*"})}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"true"})}),(0,l.jsx)(i.td,{children:"Enable all file types."})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"json"})}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"false"})}),(0,l.jsx)(i.td,{children:"Disable checking for json files."})]})]})]}),"\n",(0,l.jsx)(i.h4,{id:"title",children:"Title"}),"\n",(0,l.jsx)(i.p,{children:"Enabled File Types to Check"}),"\n",(0,l.jsx)(i.h4,{id:"since",children:"Since"}),"\n",(0,l.jsx)(i.p,{children:"8.8.1"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-8",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#enabledfiletypes",children:(0,l.jsx)(i.code,{children:"enabledFileTypes"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"enabledlanguageids",children:"enabledLanguageIds?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"enabledLanguageIds"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:976"}),"\n",(0,l.jsxs)(i.p,{children:["Specify a list of file types to spell check. It is better to use ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/AdvancedCSpellSettingsWithSourceTrace#enabledfiletypes",children:"Settings.enabledFileTypes"})," to Enable / Disable checking files types."]}),"\n",(0,l.jsx)(i.h4,{id:"title-1",children:"Title"}),"\n",(0,l.jsx)(i.p,{children:"Enabled Language Ids"}),"\n",(0,l.jsx)(i.h4,{id:"unique-items",children:"Unique Items"}),"\n",(0,l.jsx)(i.p,{children:"true"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-9",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#enabledlanguageids",children:(0,l.jsx)(i.code,{children:"enabledLanguageIds"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"enablefiletypes",children:"enableFiletypes?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"enableFiletypes"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1002"}),"\n",(0,l.jsx)(i.p,{children:"Enable / Disable checking file types (languageIds)."}),"\n",(0,l.jsxs)(i.p,{children:["These are in additional to the file types specified by ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/AdvancedCSpellSettingsWithSourceTrace#enabledlanguageids",children:"Settings.enabledLanguageIds"}),".\nTo disable a language, prefix with ",(0,l.jsx)(i.code,{children:"!"})," as in ",(0,l.jsx)(i.code,{children:"!json"}),","]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Example: individual file types"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"jsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n"})}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Example: enable all file types"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"*           // enable checking for all file types\n!json       // except for json\n"})}),"\n",(0,l.jsx)(i.h4,{id:"title-2",children:"Title"}),"\n",(0,l.jsx)(i.p,{children:"Enable File Types"}),"\n",(0,l.jsx)(i.h4,{id:"scope",children:"Scope"}),"\n",(0,l.jsx)(i.p,{children:"resource"}),"\n",(0,l.jsx)(i.h4,{id:"unique-items-1",children:"Unique Items"}),"\n",(0,l.jsx)(i.p,{children:"true"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-10",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#enablefiletypes",children:(0,l.jsx)(i.code,{children:"enableFiletypes"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"enableglobdot",children:"enableGlobDot?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"enableGlobDot"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:885"}),"\n",(0,l.jsxs)(i.p,{children:["Enable scanning files and directories beginning with ",(0,l.jsx)(i.code,{children:"."})," (period)."]}),"\n",(0,l.jsxs)(i.p,{children:["By default, CSpell does not scan ",(0,l.jsx)(i.code,{children:"hidden"})," files."]}),"\n",(0,l.jsx)(i.h4,{id:"default-4",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-11",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#enableglobdot",children:(0,l.jsx)(i.code,{children:"enableGlobDot"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"failfast",children:"failFast?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"failFast"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1151"}),"\n",(0,l.jsx)(i.p,{children:"Exit with non-zero code as soon as an issue/error is encountered (useful for CI or git hooks)"}),"\n",(0,l.jsx)(i.h4,{id:"default-5",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-12",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#failfast",children:(0,l.jsx)(i.code,{children:"failFast"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"features",children:"features?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"features"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/Features",children:(0,l.jsx)(i.code,{children:"Features"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:937"}),"\n",(0,l.jsx)(i.p,{children:"Configure CSpell features."}),"\n",(0,l.jsx)(i.h4,{id:"since-1",children:"Since"}),"\n",(0,l.jsx)(i.p,{children:"5.16.0"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-13",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#features",children:(0,l.jsx)(i.code,{children:"features"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"files",children:"files?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"files"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/Glob",children:(0,l.jsx)(i.code,{children:"Glob"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:877"}),"\n",(0,l.jsx)(i.p,{children:"Glob patterns of files to be checked."}),"\n",(0,l.jsxs)(i.p,{children:["Glob patterns are relative to the ",(0,l.jsx)(i.code,{children:"globRoot"})," of the configuration file that defines them."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-14",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#files",children:(0,l.jsx)(i.code,{children:"files"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"flagwords",children:"flagWords?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"flagWords"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:510"}),"\n",(0,l.jsxs)(i.p,{children:["List of words to always be considered incorrect. Words found in ",(0,l.jsx)(i.code,{children:"flagWords"})," override ",(0,l.jsx)(i.code,{children:"words"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["Format of ",(0,l.jsx)(i.code,{children:"flagWords"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["single word entry - ",(0,l.jsx)(i.code,{children:"word"})]}),"\n",(0,l.jsxs)(i.li,{children:["with suggestions - ",(0,l.jsx)(i.code,{children:"word:suggestion"})," or ",(0,l.jsx)(i.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Example:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-15",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#flagwords",children:(0,l.jsx)(i.code,{children:"flagWords"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"gitignoreroot",children:"gitignoreRoot?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"gitignoreRoot"}),": ",(0,l.jsx)(i.code,{children:"string"})," | ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:927"}),"\n",(0,l.jsxs)(i.p,{children:["Tells the spell checker to stop searching for ",(0,l.jsx)(i.code,{children:".gitignore"})," files when it reaches a matching root."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-16",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#gitignoreroot",children:(0,l.jsx)(i.code,{children:"gitignoreRoot"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"globroot",children:"globRoot?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"globRoot"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:871"}),"\n",(0,l.jsxs)(i.p,{children:["The root to use for glob patterns found in this configuration.\nDefault: location of the configuration file.\nFor compatibility reasons, config files with version 0.1, the glob root will\ndefault to be ",(0,l.jsx)(i.code,{children:"${cwd}"}),"."]}),"\n",(0,l.jsxs)(i.p,{children:["Use ",(0,l.jsx)(i.code,{children:"globRoot"})," to define a different location.\n",(0,l.jsx)(i.code,{children:"globRoot"})," can be relative to the location of this configuration file.\nDefining globRoot, does not impact imported configurations."]}),"\n",(0,l.jsx)(i.p,{children:"Special Values:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"${cwd}"})," - will be replaced with the current working directory."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"."})," - will be the location of the containing configuration file."]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-17",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#globroot",children:(0,l.jsx)(i.code,{children:"globRoot"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"id",children:"id?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"id"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1206"}),"\n",(0,l.jsx)(i.p,{children:"Optional identifier."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-18",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#id",children:(0,l.jsx)(i.code,{children:"id"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"ignorepaths",children:"ignorePaths?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"ignorePaths"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/Glob",children:(0,l.jsx)(i.code,{children:"Glob"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:891"}),"\n",(0,l.jsx)(i.p,{children:"Glob patterns of files to be ignored."}),"\n",(0,l.jsxs)(i.p,{children:["Glob patterns are relative to the ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#globroot",children:"globRoot"})," of the configuration file that defines them."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-19",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#ignorepaths",children:(0,l.jsx)(i.code,{children:"ignorePaths"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"ignorerandomstrings",children:"ignoreRandomStrings?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"ignoreRandomStrings"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:153"}),"\n",(0,l.jsx)(i.p,{children:"Ignore sequences of characters that look like random strings."}),"\n",(0,l.jsx)(i.h4,{id:"default-6",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"true\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-20",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#ignorerandomstrings",children:(0,l.jsx)(i.code,{children:"ignoreRandomStrings"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"ignoreregexplist",children:"ignoreRegExpList?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"ignoreRegExpList"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/RegExpPatternList",children:(0,l.jsx)(i.code,{children:"RegExpPatternList"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1295"}),"\n",(0,l.jsx)(i.p,{children:"List of regular expression patterns or pattern names to exclude from spell checking."}),"\n",(0,l.jsxs)(i.p,{children:["Example: ",(0,l.jsx)(i.code,{children:'["href"]'})," - to exclude html href pattern."]}),"\n",(0,l.jsx)(i.p,{children:"Regular expressions use JavaScript regular expression syntax."}),"\n",(0,l.jsx)(i.p,{children:"Example: to ignore ALL-CAPS words"}),"\n",(0,l.jsx)(i.p,{children:"JSON"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-json",children:'"ignoreRegExpList": ["/\\\\b[A-Z]+\\\\b/g"]\n'})}),"\n",(0,l.jsx)(i.p,{children:"YAML"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-yaml",children:"ignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n"})}),"\n",(0,l.jsxs)(i.p,{children:["By default, several patterns are excluded. See\n",(0,l.jsx)(i.a,{href:"https://cspell.org/configuration/patterns",children:"Configuration"})," for more details."]}),"\n",(0,l.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,l.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-21",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#ignoreregexplist",children:(0,l.jsx)(i.code,{children:"ignoreRegExpList"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"ignorewords",children:"ignoreWords?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"ignoreWords"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:515"}),"\n",(0,l.jsxs)(i.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,l.jsx)(i.code,{children:"flagWords"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-22",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#ignorewords",children:(0,l.jsx)(i.code,{children:"ignoreWords"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"import",children:"import?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"import"}),": ",(0,l.jsx)(i.code,{children:"string"})," | ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:855"}),"\n",(0,l.jsx)(i.p,{children:"Allows this configuration to inherit configuration for one or more other files."}),"\n",(0,l.jsxs)(i.p,{children:["See ",(0,l.jsx)(i.a,{href:"https://cspell.org/configuration/imports/",children:"Importing / Extending Configuration"})," for more details."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-23",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#import",children:(0,l.jsx)(i.code,{children:"import"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"includeregexplist",children:"includeRegExpList?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"includeRegExpList"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/RegExpPatternList",children:(0,l.jsx)(i.code,{children:"RegExpPatternList"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1304"}),"\n",(0,l.jsx)(i.p,{children:"List of regular expression patterns or defined pattern names to match for spell checking."}),"\n",(0,l.jsx)(i.p,{children:"If this property is defined, only text matching the included patterns will be checked."}),"\n",(0,l.jsxs)(i.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,l.jsx)(i.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-24",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#includeregexplist",children:(0,l.jsx)(i.code,{children:"includeRegExpList"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"language",children:"language?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"language"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1038"}),"\n",(0,l.jsx)(i.p,{children:"Current active spelling language. This specifies the language locale to use in choosing the\ngeneral dictionary."}),"\n",(0,l.jsx)(i.p,{children:"For example:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:'"en-GB" for British English.'}),"\n",(0,l.jsx)(i.li,{children:'"en,nl" to enable both English and Dutch.'}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"default-7",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'"en"\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-25",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#language",children:(0,l.jsx)(i.code,{children:"language"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"languageid",children:"languageId?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"languageId"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/MatchingFileType",children:(0,l.jsx)(i.code,{children:"MatchingFileType"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1047"}),"\n",(0,l.jsx)(i.p,{children:"Forces the spell checker to assume a give language id. Used mainly as an Override."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-26",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#languageid",children:(0,l.jsx)(i.code,{children:"languageId"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"languagesettings",children:"languageSettings?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"languageSettings"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LanguageSetting",children:(0,l.jsx)(i.code,{children:"LanguageSetting"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1045"}),"\n",(0,l.jsx)(i.p,{children:"Additional settings for individual languages."}),"\n",(0,l.jsxs)(i.p,{children:["See ",(0,l.jsx)(i.a,{href:"https://cspell.org/configuration/language-settings/",children:"Language Settings"})," for more details."]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-27",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#languagesettings",children:(0,l.jsx)(i.code,{children:"languageSettings"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"loaddefaultconfiguration",children:"loadDefaultConfiguration?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"loadDefaultConfiguration"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1054"}),"\n",(0,l.jsxs)(i.p,{children:["By default, the bundled dictionary configurations are loaded. Explicitly setting this to ",(0,l.jsx)(i.code,{children:"false"}),"\nwill prevent ALL default configuration from being loaded."]}),"\n",(0,l.jsx)(i.h4,{id:"default-8",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"true\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-28",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#loaddefaultconfiguration",children:(0,l.jsx)(i.code,{children:"loadDefaultConfiguration"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"maxduplicateproblems",children:"maxDuplicateProblems?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"maxDuplicateProblems"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:141"}),"\n",(0,l.jsx)(i.p,{children:"The maximum number of times the same word can be flagged as an error in a file."}),"\n",(0,l.jsx)(i.h4,{id:"default-9",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"5\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-29",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#maxduplicateproblems",children:(0,l.jsx)(i.code,{children:"maxDuplicateProblems"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"maxnumberofproblems",children:"maxNumberOfProblems?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"maxNumberOfProblems"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:135"}),"\n",(0,l.jsx)(i.p,{children:"The maximum number of problems to report in a file."}),"\n",(0,l.jsx)(i.h4,{id:"default-10",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"10000\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-30",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#maxnumberofproblems",children:(0,l.jsx)(i.code,{children:"maxNumberOfProblems"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"minrandomlength",children:"minRandomLength?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"minRandomLength"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:159"}),"\n",(0,l.jsx)(i.p,{children:"The minimum length of a random string to be ignored."}),"\n",(0,l.jsx)(i.h4,{id:"default-11",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"40\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-31",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#minrandomlength",children:(0,l.jsx)(i.code,{children:"minRandomLength"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"minwordlength",children:"minWordLength?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"minWordLength"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:147"}),"\n",(0,l.jsx)(i.p,{children:"The minimum length of a word before checking it against a dictionary."}),"\n",(0,l.jsx)(i.h4,{id:"default-12",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"4\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-32",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#minwordlength",children:(0,l.jsx)(i.code,{children:"minWordLength"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"name",children:"name?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"name"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1208"}),"\n",(0,l.jsx)(i.p,{children:"Optional name of configuration."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-33",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#name",children:(0,l.jsx)(i.code,{children:"name"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"noconfigsearch",children:"noConfigSearch?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"noConfigSearch"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:897"}),"\n",(0,l.jsx)(i.p,{children:"Prevents searching for local configuration when checking individual documents."}),"\n",(0,l.jsx)(i.h4,{id:"default-13",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-34",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#noconfigsearch",children:(0,l.jsx)(i.code,{children:"noConfigSearch"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"nosuggestdictionaries",children:"noSuggestDictionaries?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"noSuggestDictionaries"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1267"}),"\n",(0,l.jsx)(i.p,{children:"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions."}),"\n",(0,l.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-35",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#nosuggestdictionaries",children:(0,l.jsx)(i.code,{children:"noSuggestDictionaries"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"numsuggestions",children:"numSuggestions?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"numSuggestions"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1064"}),"\n",(0,l.jsx)(i.p,{children:"Number of suggestions to make."}),"\n",(0,l.jsx)(i.h4,{id:"default-14",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"10\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-36",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#numsuggestions",children:(0,l.jsx)(i.code,{children:"numSuggestions"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"overrides",children:"overrides?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"overrides"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/OverrideSettings",children:(0,l.jsx)(i.code,{children:"OverrideSettings"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:968"}),"\n",(0,l.jsx)(i.p,{children:"Overrides are used to apply settings for specific files in your project."}),"\n",(0,l.jsx)(i.p,{children:"For example:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-javascript",children:'"overrides": [\n  // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n  {\n    "filename": "**\u200b/{*.hrr,*.crr}",\n    "languageId": "cpp"\n  },\n  // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n  {\n    "language": "nl",\n    "filename": "**\u200b/dutch/**\u200b/*.txt"\n  }\n]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-37",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#overrides",children:(0,l.jsx)(i.code,{children:"overrides"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"parser",children:"parser?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"parser"}),": ",(0,l.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1551"}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:(0,l.jsx)(i.code,{children:"Experimental"})})}),"\n",(0,l.jsx)(i.p,{children:"Parser to use for the file content"}),"\n",(0,l.jsx)(i.h4,{id:"since-2",children:"Since"}),"\n",(0,l.jsx)(i.p,{children:"6.2.0"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-38",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#parser",children:(0,l.jsx)(i.code,{children:"parser"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"patterns",children:"patterns?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"patterns"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/RegExpPatternDefinition",children:(0,l.jsx)(i.code,{children:"RegExpPatternDefinition"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1330"}),"\n",(0,l.jsxs)(i.p,{children:["Defines a list of patterns that can be used with the ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/BaseSetting#ignoreregexplist",children:"ignoreRegExpList"})," and\n",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/BaseSetting#includeregexplist",children:"includeRegExpList"})," options."]}),"\n",(0,l.jsx)(i.p,{children:"For example:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-javascript",children:'"ignoreRegExpList": ["comments"],\n"patterns": [\n  {\n    "name": "comment-single-line",\n    "pattern": "/#.*\u200b/g"\n  },\n  {\n    "name": "comment-multi-line",\n    "pattern": "/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    "name": "comments",\n    "pattern": ["comment-single-line", "comment-multi-line"]\n  }\n]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-39",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#patterns",children:(0,l.jsx)(i.code,{children:"patterns"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"pnpfiles",children:"pnpFiles?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"pnpFiles"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1101"}),"\n",(0,l.jsxs)(i.p,{children:["The PnP files to search for. Note: ",(0,l.jsx)(i.code,{children:".mjs"})," files are not currently supported."]}),"\n",(0,l.jsx)(i.h4,{id:"default-15",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'[".pnp.js", ".pnp.cjs"]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-40",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#pnpfiles",children:(0,l.jsx)(i.code,{children:"pnpFiles"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"readonly",children:"readonly?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"readonly"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:905"}),"\n",(0,l.jsx)(i.p,{children:"Indicate that the configuration file should not be modified.\nThis is used to prevent tools like the VS Code Spell Checker from\nmodifying the file to add words and other configuration."}),"\n",(0,l.jsx)(i.h4,{id:"default-16",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-41",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#readonly",children:(0,l.jsx)(i.code,{children:"readonly"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"reporters",children:"reporters?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"reporters"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/ReporterSettings",children:(0,l.jsx)(i.code,{children:"ReporterSettings"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:918"}),"\n",(0,l.jsxs)(i.p,{children:["Define which reports to use.\n",(0,l.jsx)(i.code,{children:"default"})," - is a special name for the default cli reporter."]}),"\n",(0,l.jsx)(i.p,{children:"Examples:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:'["default"]'})," - to use the default reporter"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:'["@cspell/cspell-json-reporter"]'})," - use the cspell JSON reporter."]}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.code,{children:'[["@cspell/cspell-json-reporter", { "outFile": "out.json" }]]'})}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:'[ "default", ["@cspell/cspell-json-reporter", { "outFile": "out.json" }]]'})," - Use both the default reporter and the cspell-json-reporter."]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"default-17",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'["default"]\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-42",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#reporters",children:(0,l.jsx)(i.code,{children:"reporters"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"showstatus",children:(0,l.jsx)(i.del,{children:"showStatus?"})}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"showStatus"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1187"}),"\n",(0,l.jsx)(i.p,{children:"Show status."}),"\n",(0,l.jsx)(i.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,l.jsx)(i.p,{children:"true"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-43",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LegacySettings",children:(0,l.jsx)(i.code,{children:"LegacySettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LegacySettings#showstatus",children:(0,l.jsx)(i.code,{children:"showStatus"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"spellcheckdelayms",children:(0,l.jsx)(i.del,{children:"spellCheckDelayMs?"})}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"spellCheckDelayMs"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1192"}),"\n",(0,l.jsx)(i.p,{children:"Delay in ms after a document has changed before checking it for spelling errors."}),"\n",(0,l.jsx)(i.h4,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,l.jsx)(i.p,{children:"true"}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-44",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LegacySettings",children:(0,l.jsx)(i.code,{children:"LegacySettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/LegacySettings#spellcheckdelayms",children:(0,l.jsx)(i.code,{children:"spellCheckDelayMs"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"suggestionnumchanges",children:"suggestionNumChanges?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"suggestionNumChanges"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1080"}),"\n",(0,l.jsx)(i.p,{children:"The maximum number of changes allowed on a word to be considered a suggestions."}),"\n",(0,l.jsxs)(i.p,{children:["For example, appending an ",(0,l.jsx)(i.code,{children:"s"})," onto ",(0,l.jsx)(i.code,{children:"example"})," -> ",(0,l.jsx)(i.code,{children:"examples"})," is considered 1 change."]}),"\n",(0,l.jsx)(i.p,{children:"Range: between 1 and 5."}),"\n",(0,l.jsx)(i.h4,{id:"default-18",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"3\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-45",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#suggestionnumchanges",children:(0,l.jsx)(i.code,{children:"suggestionNumChanges"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"suggestionstimeout",children:"suggestionsTimeout?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"suggestionsTimeout"}),": ",(0,l.jsx)(i.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1070"}),"\n",(0,l.jsx)(i.p,{children:"The maximum amount of time in milliseconds to generate suggestions for a word."}),"\n",(0,l.jsx)(i.h4,{id:"default-19",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"500\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-46",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#suggestionstimeout",children:(0,l.jsx)(i.code,{children:"suggestionsTimeout"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"suggestwords",children:"suggestWords?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"suggestWords"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:529"}),"\n",(0,l.jsx)(i.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),"\n",(0,l.jsxs)(i.p,{children:["Format of ",(0,l.jsx)(i.code,{children:"suggestWords"})]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["Single suggestion (possible auto fix)","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.code,{children:"word: suggestion"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.code,{children:"word: first, second, third"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-47",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#suggestwords",children:(0,l.jsx)(i.code,{children:"suggestWords"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"usegitignore",children:"useGitignore?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"useGitignore"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:923"}),"\n",(0,l.jsxs)(i.p,{children:["Tells the spell checker to load ",(0,l.jsx)(i.code,{children:".gitignore"})," files and skip files that match the globs in the ",(0,l.jsx)(i.code,{children:".gitignore"})," files found."]}),"\n",(0,l.jsx)(i.h4,{id:"default-20",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-48",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#usegitignore",children:(0,l.jsx)(i.code,{children:"useGitignore"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"usepnp",children:"usePnP?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"usePnP"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:1095"}),"\n",(0,l.jsxs)(i.p,{children:["Packages managers like Yarn 2 use a ",(0,l.jsx)(i.code,{children:".pnp.cjs"})," file to assist in loading\npackages stored in the repository."]}),"\n",(0,l.jsx)(i.p,{children:"When true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it."}),"\n",(0,l.jsx)(i.h4,{id:"default-21",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:"false\n"})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-49",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#usepnp",children:(0,l.jsx)(i.code,{children:"usePnP"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"userwords",children:"userWords?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"userWords"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:849"}),"\n",(0,l.jsx)(i.p,{children:"Words to add to global dictionary -- should only be in the user config file."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-50",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#userwords",children:(0,l.jsx)(i.code,{children:"userWords"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"validatedirectives",children:"validateDirectives?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"validateDirectives"}),": ",(0,l.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:931"}),"\n",(0,l.jsx)(i.p,{children:"Verify that the in-document directives are correct."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-51",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#validatedirectives",children:(0,l.jsx)(i.code,{children:"validateDirectives"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"version",children:"version?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"version"}),": ",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/Version",children:(0,l.jsx)(i.code,{children:"Version"})})]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:847"}),"\n",(0,l.jsx)(i.p,{children:"Configuration format version of the settings file."}),"\n",(0,l.jsx)(i.p,{children:"This controls how the settings in the configuration file behave."}),"\n",(0,l.jsx)(i.h4,{id:"default-22",children:"Default"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ts",children:'"0.2"\n'})}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-52",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#version",children:(0,l.jsx)(i.code,{children:"version"})})]}),"\n",(0,l.jsx)(i.hr,{}),"\n",(0,l.jsx)(i.h3,{id:"words",children:"words?"}),"\n",(0,l.jsxs)(i.blockquote,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"optional"})," ",(0,l.jsx)(i.strong,{children:"words"}),": ",(0,l.jsx)(i.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:492"}),"\n",(0,l.jsx)(i.p,{children:"List of words to be considered correct."}),"\n",(0,l.jsx)(i.h4,{id:"inherited-from-53",children:"Inherited from"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings",children:(0,l.jsx)(i.code,{children:"FileSettings"})}),".",(0,l.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/FileSettings#words",children:(0,l.jsx)(i.code,{children:"words"})})]})]})}function a(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);