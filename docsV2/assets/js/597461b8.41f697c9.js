"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47105],{92410:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var t=s(86106),i=s(93309);const c={},r="Function: stringToRegExp()",l={id:"api/cspell-lib/namespaces/Text/functions/stringToRegExp",title:"Function: stringToRegExp()",description:"stringToRegExp(pattern, defaultFlags, forceFlags): RegExp \\| undefined",source:"@site/docs/api/cspell-lib/namespaces/Text/functions/stringToRegExp.md",sourceDirName:"api/cspell-lib/namespaces/Text/functions",slug:"/api/cspell-lib/namespaces/Text/functions/stringToRegExp",permalink:"/docsV2/docs/api/cspell-lib/namespaces/Text/functions/stringToRegExp",draft:!1,unlisted:!1,editUrl:"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/namespaces/Text/functions/stringToRegExp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Function: splitCamelCaseWordWithOffset()",permalink:"/docsV2/docs/api/cspell-lib/namespaces/Text/functions/splitCamelCaseWordWithOffset"},next:{title:"Function: textOffset()",permalink:"/docsV2/docs/api/cspell-lib/namespaces/Text/functions/textOffset"}},o={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"function-stringtoregexp",children:"Function: stringToRegExp()"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"stringToRegExp"}),"(",(0,t.jsx)(n.code,{children:"pattern"}),", ",(0,t.jsx)(n.code,{children:"defaultFlags"}),", ",(0,t.jsx)(n.code,{children:"forceFlags"}),"): ",(0,t.jsx)(n.code,{children:"RegExp"})," | ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"pattern"}),": ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"RegExp"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"defaultFlags"}),": ",(0,t.jsx)(n.code,{children:"string"})," = ",(0,t.jsx)(n.code,{children:"'gimu'"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"forceFlags"}),": ",(0,t.jsx)(n.code,{children:"string"})," = ",(0,t.jsx)(n.code,{children:"'g'"})]}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"RegExp"})," | ",(0,t.jsx)(n.code,{children:"undefined"})]}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/streetsidesoftware/cspell/blob/f033e9aa7914c4190e8657b69d97da52cd3dfd76/packages/cspell-lib/src/lib/util/textRegex.ts#L28",children:"packages/cspell-lib/src/lib/util/textRegex.ts:28"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},93309:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(7378);const i={},c=t.createContext(i);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);