"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47018],{12307:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"dictionaries/index","title":"Dictionaries","description":"The spell checker includes a set of default dictionaries.","source":"@site/docs/dictionaries/index.md","sourceDirName":"dictionaries","slug":"/dictionaries/","permalink":"/docsV2/docs/dictionaries/","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/dictionaries/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"layout":"default","title":"Dictionaries","categories":"docs","sidebar_position":1,"sidebar_label":"Default Dictionaries"},"sidebar":"tutorialSidebar","previous":{"title":"Exclude / Include Patterns","permalink":"/docsV2/docs/Configuration/patterns"},"next":{"title":"Custom Dictionaries","permalink":"/docsV2/docs/dictionaries/custom-dictionaries"}}');var r=n(86106),t=n(72300);const l={layout:"default",title:"Dictionaries",categories:"docs",sidebar_position:1,sidebar_label:"Default Dictionaries"},c="Dictionaries",o={},a=[{value:"General Dictionaries",id:"general-dictionaries",level:2},{value:"Programming Language Dictionaries",id:"programming-language-dictionaries",level:2},{value:"Miscellaneous Dictionaries",id:"miscellaneous-dictionaries",level:2},{value:"Dictionary Definition",id:"dictionary-definition",level:2},{value:"Disabling a Dictionary",id:"disabling-a-dictionary",level:2},{value:"Disable Default cpp Dictionary",id:"disable-default-cpp-dictionary",level:4}];function d(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"dictionaries",children:"Dictionaries"})}),"\n",(0,r.jsx)(i.p,{children:"The spell checker includes a set of default dictionaries."}),"\n",(0,r.jsxs)(i.p,{children:["Use the ",(0,r.jsx)(i.code,{children:"trace"})," command to see a list of dictionaries: See ",(0,r.jsx)(i.a,{href:"./dictionaries/searching-dictionaries",children:"Searching Dictionaries"})]}),"\n",(0,r.jsx)(i.h2,{id:"general-dictionaries",children:"General Dictionaries"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"en_US"})," - Derived from Hunspell US English words."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"en-gb"})," - Derived from Hunspell GB English words."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"companies"})," - List of well known companies"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"softwareTerms"}),' - Software Terms and concepts like "coroutine", "debounce", "tree", etc.']}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"misc"})," - Terms that do not belong in the other dictionaries."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"programming-language-dictionaries",children:"Programming Language Dictionaries"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"typescript"})," - keywords for TypeScript and JavaScript"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"node"})," - terms related to using nodejs."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"php"})," - ",(0,r.jsx)(i.em,{children:"php"})," keywords and library methods"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"go"})," - ",(0,r.jsx)(i.em,{children:"go"})," keywords and library methods"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"python"})," - ",(0,r.jsx)(i.em,{children:"python"})," keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"powershell"})," - ",(0,r.jsx)(i.em,{children:"powershell"})," keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"html"})," - ",(0,r.jsx)(i.em,{children:"html"})," related keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"css"})," - ",(0,r.jsx)(i.em,{children:"css"}),", ",(0,r.jsx)(i.em,{children:"less"}),", and ",(0,r.jsx)(i.em,{children:"scss"})," related keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"cpp"})," - ",(0,r.jsx)(i.em,{children:"C++"})," related keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"csharp"})," - ",(0,r.jsx)(i.em,{children:"C#"})," related keywords"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"latex"})," - LaTex related words"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"bash"})," - Bash/shell script keywords"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"miscellaneous-dictionaries",children:"Miscellaneous Dictionaries"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fonts"})," - long list of fonts - to assist with ",(0,r.jsx)(i.em,{children:"css"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"filetypes"})," - list of file types"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"npm"})," - list of top 500+ package names on npm."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"dictionary-definition",children:"Dictionary Definition"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"name"})," - The reference name of the dictionary, used with program language settings"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"description"})," - Optional description"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"path"})," - Path to the file, can be relative or absolute. Relative path is relative to the\ncurrent ",(0,r.jsx)(i.code,{children:"cspell.json"})," file."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"repMap"})," - Optional replacement map use to replace character prior to searching the dictionary.\nExample:","\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-javascript",children:'    // Replace various tick marks with a single \'\n    "repMap": [["\'|`|\u2019", "\'"]]\n'})}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"useCompounds"})," - ",(0,r.jsx)(i.em,{children:"Deprecated"})," - allow all possible combinations of words in the dictionary."]}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-javascript",children:'// Define each dictionary.  Relative paths are relative to the config file.\n"dictionaryDefinitions": [\n    { "name": "spanish", "path": "./spanish-words.txt"},\n    { "name": "ruby", "path": "./ruby.txt"},\n    { "name": "company-terms", "path": "./corp-terms.txt"}\n],\n'})}),"\n",(0,r.jsx)(i.h2,{id:"disabling-a-dictionary",children:"Disabling a Dictionary"}),"\n",(0,r.jsx)(i.p,{children:"It is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary."}),"\n",(0,r.jsx)(i.h4,{id:"disable-default-cpp-dictionary",children:"Disable Default cpp Dictionary"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-javascript",children:'"dictionaries": ["!cpp"],\n"overrides": [\n  {\n      "filename": "legacy/**/*.cpp",\n      "dictionaries": ["!!cpp"], // add it back for *.cpp files under the legacy folder\n  },\n]\n'})}),"\n",(0,r.jsxs)(i.p,{children:["The number of ",(0,r.jsx)(i.code,{children:"!"}),"'s is important."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"!cpp"})," remove ",(0,r.jsx)(i.code,{children:"cpp"})," dictionary"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"!!cpp"})," add it back"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"!!!cpp"})," remove it again."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},72300:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var s=n(7378);const r={},t=s.createContext(r);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);