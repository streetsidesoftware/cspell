"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[42107],{9713:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/cspell/interfaces/RegExpPatternDefinition","title":"Interface: RegExpPatternDefinition","description":"Properties","source":"@site/docs/api/cspell/interfaces/RegExpPatternDefinition.md","sourceDirName":"api/cspell/interfaces","slug":"/api/cspell/interfaces/RegExpPatternDefinition","permalink":"/docsV2/docs/api/cspell/interfaces/RegExpPatternDefinition","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell/interfaces/RegExpPatternDefinition.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: ProgressFileComplete","permalink":"/docsV2/docs/api/cspell/interfaces/ProgressFileComplete"},"next":{"title":"Interface: ReporterConfiguration","permalink":"/docsV2/docs/api/cspell/interfaces/ReporterConfiguration"}}');var r=i(86106),s=i(20945);const d={},c="Interface: RegExpPatternDefinition",o={},l=[{value:"Properties",id:"properties",level:2},{value:"description?",id:"description",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"pattern",id:"pattern",level:3},{value:"Defined in",id:"defined-in-2",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"interface-regexppatterndefinition",children:"Interface: RegExpPatternDefinition"})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"description",children:"description?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"description"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Description of the pattern."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"cspell-types/dist/index.d.mts:1453"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"name"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"cspell-types/dist/index.d.mts:1445"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"pattern",children:"pattern"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"pattern"}),": ",(0,r.jsx)(n.a,{href:"/docsV2/docs/api/cspell/type-aliases/Pattern",children:(0,r.jsx)(n.code,{children:"Pattern"})})," | ",(0,r.jsx)(n.a,{href:"/docsV2/docs/api/cspell/type-aliases/Pattern",children:(0,r.jsx)(n.code,{children:"Pattern"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"RegExp pattern or array of RegExp patterns."}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:"cspell-types/dist/index.d.mts:1449"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},20945:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var t=i(7378);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);