"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[346],{4687:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"dictionaries/custom-dictionaries","title":"Custom Dictionaries","description":"Dictionaries are optimized for searching and generating suggestions while minimizing on their size. When a custom dictionary (word list) is loaded, it is internally optimized. The number of words in a dictionary have no impact on the search time. It is the length of the word that makes a difference.","source":"@site/docs/dictionaries/custom-dictionaries.md","sourceDirName":"dictionaries","slug":"/dictionaries/custom-dictionaries","permalink":"/docsV2/docs/dictionaries/custom-dictionaries","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/dictionaries/custom-dictionaries.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"layout":"default","title":"Custom Dictionaries","categories":"docs","sidebar_position":2,"sidebar_label":"Custom Dictionaries"},"sidebar":"tutorialSidebar","previous":{"title":"Default Dictionaries","permalink":"/docsV2/docs/dictionaries/"},"next":{"title":"Searching Dictionaries","permalink":"/docsV2/docs/dictionaries/searching-dictionaries"}}');var s=n(6106),o=n(7735);const r={layout:"default",title:"Custom Dictionaries",categories:"docs",sidebar_position:2,sidebar_label:"Custom Dictionaries"},c="Custom Dictionaries",a={},d=[{value:"Example 1:",id:"example-1",level:3},{value:"Words List Syntax",id:"words-list-syntax",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"custom-dictionaries",children:"Custom Dictionaries"})}),"\n",(0,s.jsx)(i.p,{children:"Dictionaries are optimized for searching and generating suggestions while minimizing on their size. When a custom dictionary (word list) is loaded, it is internally optimized. The number of words in a dictionary have no impact on the search time. It is the length of the word that makes a difference."}),"\n",(0,s.jsx)(i.p,{children:"Creating custom dictionaries is rather straight forward. It requires two parts:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"A word list"}),"\n",(0,s.jsx)(i.li,{children:"A dictionary definition in a configuration file."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"example-1",children:"Example 1:"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:(0,s.jsx)(i.code,{children:"custom-words.txt"})})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"# This is a comment\n!forbiddenword\nthese\nare\nmy\nfavorite\nwords\n"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:(0,s.jsx)(i.code,{children:"cspell.json"})})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'{\n    // Enable your dictionary by adding it to the list of `dictionaries`\n    "dictionaries": ["custom-words"],\n\n    // Tell CSpell about your dictionary\n    "dictionaryDefinitions": [\n        {\n            // The name of the dictionary is used to look it up.\n            "name": "custom-words",\n            // Path to the custom word file. Relative to this `cspell.json` file.\n            "path": "./.cspell/custom-words.txt",\n            // Some editor extensions will use `addWords` for adding words to your\n            // personal dictionary.\n            "addWords": true\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"words-list-syntax",children:"Words List Syntax"}),"\n",(0,s.jsxs)(i.p,{children:["Where ",(0,s.jsx)(i.code,{children:"~"})," tells the spell checker it that case and possibly accents were removed."]}),"\n",(0,s.jsx)(i.p,{children:"Custom dictionaries tend to be very small compared to full language dictionaries, so, they are not optimized for size."}),"\n",(0,s.jsx)(i.p,{children:"Custom dictionaries support a few special characters:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"~"})," - prefix that tells the spell checker to only use the word when case sensitivity is turned off."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"+"})," - prefix/suffix that tells the spell checker that a word MUST be combined with another word to be valid."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"*"})," - prefix/suffix that tells the spell checker that a word can be combined with another word."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"!"})," - prefix forbid a word."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"If you have the following in your custom dictionary:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"fooo+\n+baar\n+bat\n+cat\nbig*\n!fooocat\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Then ",(0,s.jsx)(i.code,{children:"fooobaar"})," and ",(0,s.jsx)(i.code,{children:"fooobat"})," will be valid, but ",(0,s.jsx)(i.code,{children:"fooo"}),", ",(0,s.jsx)(i.code,{children:"baar"}),", and ",(0,s.jsx)(i.code,{children:"fooocat"})," will not be."]}),"\n",(0,s.jsx)(i.p,{children:"This is useful for languages where people commonly combine words: errorcode, systemtime, systemerror."}),"\n",(0,s.jsxs)(i.p,{children:["Note: the custom dictionary also allows other characters like: ",(0,s.jsx)(i.code,{children:"_"}),", ",(0,s.jsx)(i.code,{children:"-"}),", ",(0,s.jsx)(i.code,{children:"0-9"}),", ",(0,s.jsx)(i.code,{children:"'"}),"."]}),"\n",(0,s.jsx)(i.p,{children:"Dictionary entries like:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"systemerror-409\n503_serviceunavailable\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Will only match the entire entry: ",(0,s.jsx)(i.code,{children:"503_serviceunavailable"})," but not ",(0,s.jsx)(i.code,{children:"serviceunavailable"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},7735:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var t=n(7378);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);