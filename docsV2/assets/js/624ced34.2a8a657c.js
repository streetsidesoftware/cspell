"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88262],{42881:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"api/cspell-lib/interfaces/DictionaryDefinitionCustom","title":"Interface: DictionaryDefinitionCustom","description":"Defined in700","source":"@site/docs/api/cspell-lib/interfaces/DictionaryDefinitionCustom.md","sourceDirName":"api/cspell-lib/interfaces","slug":"/api/cspell-lib/interfaces/DictionaryDefinitionCustom","permalink":"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionCustom","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/interfaces/DictionaryDefinitionCustom.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: DictionaryDefinitionBase","permalink":"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionBase"},"next":{"title":"Interface: DictionaryDefinitionInlineFlagWords","permalink":"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionInlineFlagWords"}}');var r=n(86106),d=n(70542);const c={},o="Interface: DictionaryDefinitionCustom",l={},t=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"addWords",id:"addwords",level:3},{value:"description?",id:"description",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"name",id:"name",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"noSuggest?",id:"nosuggest",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"path",id:"path",level:3},{value:"Overrides",id:"overrides",level:4},{value:"repMap?",id:"repmap",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"scope?",id:"scope",level:3},{value:"type?",id:"type",level:3},{value:"Default",id:"default",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"useCompounds?",id:"usecompounds",level:3},{value:"Inherited from",id:"inherited-from-5",level:4}];function a(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"interface-dictionarydefinitioncustom",children:"Interface: DictionaryDefinitionCustom"})}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:700"}),"\n",(0,r.jsxs)(i.p,{children:["For Defining Custom dictionaries. They are generally scoped to a\n",(0,r.jsx)(i.code,{children:"user"}),", ",(0,r.jsx)(i.code,{children:"workspace"}),", or ",(0,r.jsx)(i.code,{children:"folder"}),".\nWhen ",(0,r.jsx)(i.code,{children:"addWords"})," is true, indicates that the spell checker can add words\nto the file."]}),"\n",(0,r.jsx)(i.p,{children:"Note: only plain text files with one word per line are supported at this moment."}),"\n",(0,r.jsx)(i.h2,{id:"extends",children:"Extends"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(i.h3,{id:"addwords",children:"addWords"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"addWords"}),": ",(0,r.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:712"}),"\n",(0,r.jsxs)(i.p,{children:["When ",(0,r.jsx)(i.code,{children:"true"}),", let's the spell checker know that words can be added to this dictionary."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"description",children:"description?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"description"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:549"}),"\n",(0,r.jsx)(i.p,{children:"Optional description of the contents / purpose of the dictionary."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#description",children:(0,r.jsx)(i.code,{children:"description"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"name",children:"name"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"name"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:545"}),"\n",(0,r.jsx)(i.p,{children:"This is the name of a dictionary."}),"\n",(0,r.jsx)(i.p,{children:"Name Format:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Must contain at least 1 number or letter."}),"\n",(0,r.jsx)(i.li,{children:"Spaces are allowed."}),"\n",(0,r.jsx)(i.li,{children:"Leading and trailing space will be removed."}),"\n",(0,r.jsx)(i.li,{children:"Names ARE case-sensitive."}),"\n",(0,r.jsxs)(i.li,{children:["Must not contain ",(0,r.jsx)(i.code,{children:"*"}),", ",(0,r.jsx)(i.code,{children:"!"}),", ",(0,r.jsx)(i.code,{children:";"}),", ",(0,r.jsx)(i.code,{children:","}),", ",(0,r.jsx)(i.code,{children:"{"}),", ",(0,r.jsx)(i.code,{children:"}"}),", ",(0,r.jsx)(i.code,{children:"["}),", ",(0,r.jsx)(i.code,{children:"]"}),", ",(0,r.jsx)(i.code,{children:"~"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#name",children:(0,r.jsx)(i.code,{children:"name"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"nosuggest",children:"noSuggest?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"noSuggest"}),": ",(0,r.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:563"}),"\n",(0,r.jsx)(i.p,{children:"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions."}),"\n",(0,r.jsx)(i.p,{children:"Note: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#nosuggest",children:(0,r.jsx)(i.code,{children:"noSuggest"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"path",children:"path"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"path"}),": ",(0,r.jsx)(i.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:702"}),"\n",(0,r.jsx)(i.p,{children:"Path to custom dictionary text file."}),"\n",(0,r.jsx)(i.h4,{id:"overrides",children:"Overrides"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#path",children:(0,r.jsx)(i.code,{children:"path"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"repmap",children:"repMap?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"repMap"}),": ",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/ReplaceMap",children:(0,r.jsx)(i.code,{children:"ReplaceMap"})})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:551"}),"\n",(0,r.jsx)(i.p,{children:"Replacement pairs."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#repmap",children:(0,r.jsx)(i.code,{children:"repMap"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"scope",children:"scope?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"scope"}),": ",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/CustomDictionaryScope",children:(0,r.jsx)(i.code,{children:"CustomDictionaryScope"})})," | ",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/CustomDictionaryScope",children:(0,r.jsx)(i.code,{children:"CustomDictionaryScope"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:708"}),"\n",(0,r.jsx)(i.p,{children:"Defines the scope for when words will be added to the dictionary."}),"\n",(0,r.jsxs)(i.p,{children:["Scope values: ",(0,r.jsx)(i.code,{children:"user"}),", ",(0,r.jsx)(i.code,{children:"workspace"}),", ",(0,r.jsx)(i.code,{children:"folder"}),"."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"type",children:"type?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"type"}),": ",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/DictionaryFileTypes",children:(0,r.jsx)(i.code,{children:"DictionaryFileTypes"})})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:578"}),"\n",(0,r.jsx)(i.p,{children:"Type of file:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"S - single word per line,"}),"\n",(0,r.jsx)(i.li,{children:"W - each line can contain one or more words separated by space,"}),"\n",(0,r.jsx)(i.li,{children:"C - each line is treated like code (Camel Case is allowed)."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Default is S."}),"\n",(0,r.jsx)(i.p,{children:"C is the slowest to load due to the need to split each line based upon code splitting rules."}),"\n",(0,r.jsxs)(i.p,{children:["Note: this settings does not apply to inline dictionaries or ",(0,r.jsx)(i.code,{children:".trie"})," files."]}),"\n",(0,r.jsx)(i.h4,{id:"default",children:"Default"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",children:'"S"\n'})}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#type",children:(0,r.jsx)(i.code,{children:"type"})})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"usecompounds",children:"useCompounds?"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"optional"})," ",(0,r.jsx)(i.strong,{children:"useCompounds"}),": ",(0,r.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defined in: packages/cspell-types/dist/index.d.mts:553"}),"\n",(0,r.jsx)(i.p,{children:"Use Compounds."}),"\n",(0,r.jsx)(i.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred",children:(0,r.jsx)(i.code,{children:"DictionaryDefinitionPreferred"})}),".",(0,r.jsx)(i.a,{href:"/docsV2/docs/api/cspell-lib/interfaces/DictionaryDefinitionPreferred#usecompounds",children:(0,r.jsx)(i.code,{children:"useCompounds"})})]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},70542:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(7378);const r={},d=s.createContext(r);function c(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);