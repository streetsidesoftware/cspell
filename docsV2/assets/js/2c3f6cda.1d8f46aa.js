"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43789],{53215:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api/cspell-types/interfaces/BaseSetting","title":"Interface: BaseSetting","description":"Defined in454","source":"@site/docs/api/cspell-types/interfaces/BaseSetting.md","sourceDirName":"api/cspell-types/interfaces","slug":"/api/cspell-types/interfaces/BaseSetting","permalink":"/docsV2/docs/api/cspell-types/interfaces/BaseSetting","draft":false,"unlisted":false,"editUrl":"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-types/interfaces/BaseSetting.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: AdvancedCSpellSettingsWithSourceTrace","permalink":"/docsV2/docs/api/cspell-types/interfaces/AdvancedCSpellSettingsWithSourceTrace"},"next":{"title":"Interface: CSpellReporter","permalink":"/docsV2/docs/api/cspell-types/interfaces/CSpellReporter"}}');var t=n(86106),r=n(20945);const l={},c="Interface: BaseSetting",d={},o=[{value:"Extends",id:"extends",level:2},{value:"Extended by",id:"extended-by",level:2},{value:"Properties",id:"properties",level:2},{value:"allowCompoundWords?",id:"allowcompoundwords",level:3},{value:"Default",id:"default",level:4},{value:"caseSensitive?",id:"casesensitive",level:3},{value:"Default",id:"default-1",level:4},{value:"description?",id:"description",level:3},{value:"dictionaries?",id:"dictionaries",level:3},{value:"dictionaryDefinitions?",id:"dictionarydefinitions",level:3},{value:"enabled?",id:"enabled",level:3},{value:"Default",id:"default-2",level:4},{value:"flagWords?",id:"flagwords",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"id?",id:"id",level:3},{value:"ignoreRegExpList?",id:"ignoreregexplist",level:3},{value:"ignoreWords?",id:"ignorewords",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"includeRegExpList?",id:"includeregexplist",level:3},{value:"name?",id:"name",level:3},{value:"noSuggestDictionaries?",id:"nosuggestdictionaries",level:3},{value:"parser?",id:"parser",level:3},{value:"Since",id:"since",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"patterns?",id:"patterns",level:3},{value:"suggestWords?",id:"suggestwords",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"words?",id:"words",level:3},{value:"Inherited from",id:"inherited-from-4",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"interface-basesetting",children:"Interface: BaseSetting"})}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L454",children:"CSpellSettingsDef.ts:454"})]}),"\n",(0,t.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"InlineDictionary"}),".",(0,t.jsx)(s.code,{children:"ExperimentalBaseSettings"})]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"extended-by",children:"Extended by"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/interfaces/LanguageSetting",children:(0,t.jsx)(s.code,{children:"LanguageSetting"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/interfaces/Settings",children:(0,t.jsx)(s.code,{children:"Settings"})})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"allowcompoundwords",children:"allowCompoundWords?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"allowCompoundWords"}),": ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L475",children:"CSpellSettingsDef.ts:475"})]}),"\n",(0,t.jsx)(s.p,{children:"True to enable compound word checking."}),"\n",(0,t.jsx)(s.h4,{id:"default",children:"Default"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"false\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"casesensitive",children:"caseSensitive?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"caseSensitive"}),": ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L488",children:"CSpellSettingsDef.ts:488"})]}),"\n",(0,t.jsx)(s.p,{children:"Determines if words must match case and accent rules."}),"\n",(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"https://cspell.org/docs/case-sensitive/",children:"Case Sensitivity"})," for more details."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"false"})," - Case is ignored and accents can be missing on the entire word.\nIncorrect accents or partially missing accents will be marked as incorrect."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"true"})," - Case and accents are enforced."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"default-1",children:"Default"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"false\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"description",children:"description?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"description"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L462",children:"CSpellSettingsDef.ts:462"})]}),"\n",(0,t.jsx)(s.p,{children:"Optional description of configuration."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"dictionaries",children:"dictionaries?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"dictionaries"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L514",children:"CSpellSettingsDef.ts:514"})]}),"\n",(0,t.jsx)(s.p,{children:"Optional list of dictionaries to use. Each entry should match the name of the dictionary."}),"\n",(0,t.jsxs)(s.p,{children:["To remove a dictionary from the list, add ",(0,t.jsx)(s.code,{children:"!"})," before the name."]}),"\n",(0,t.jsxs)(s.p,{children:["For example, ",(0,t.jsx)(s.code,{children:"!typescript"})," will turn off the dictionary with the name ",(0,t.jsx)(s.code,{children:"typescript"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["See the ",(0,t.jsx)(s.a,{href:"https://cspell.org/docs/dictionaries/",children:"Dictionaries"}),"\nand ",(0,t.jsx)(s.a,{href:"https://cspell.org/docs/dictionaries-custom/",children:"Custom Dictionaries"})," for more details."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"dictionarydefinitions",children:"dictionaryDefinitions?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"dictionaryDefinitions"}),": ",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/type-aliases/DictionaryDefinition",children:(0,t.jsx)(s.code,{children:"DictionaryDefinition"})}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L502",children:"CSpellSettingsDef.ts:502"})]}),"\n",(0,t.jsx)(s.p,{children:"Define additional available dictionaries."}),"\n",(0,t.jsx)(s.p,{children:"For example, you can use the following to add a custom dictionary:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'"dictionaryDefinitions": [\n  { "name": "custom-words", "path": "./custom-words.txt"}\n],\n"dictionaries": ["custom-words"]\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"enabled",children:"enabled?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"enabled"}),": ",(0,t.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L468",children:"CSpellSettingsDef.ts:468"})]}),"\n",(0,t.jsx)(s.p,{children:"Is the spell checker enabled."}),"\n",(0,t.jsx)(s.h4,{id:"default-2",children:"Default"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"true\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"flagwords",children:"flagWords?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"flagWords"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/InlineDictionary.ts#L25",children:"InlineDictionary.ts:25"})]}),"\n",(0,t.jsxs)(s.p,{children:["List of words to always be considered incorrect. Words found in ",(0,t.jsx)(s.code,{children:"flagWords"})," override ",(0,t.jsx)(s.code,{children:"words"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Format of ",(0,t.jsx)(s.code,{children:"flagWords"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["single word entry - ",(0,t.jsx)(s.code,{children:"word"})]}),"\n",(0,t.jsxs)(s.li,{children:["with suggestions - ",(0,t.jsx)(s.code,{children:"word:suggestion"})," or ",(0,t.jsx)(s.code,{children:"word->suggestion, suggestions"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'"flagWords": [\n  "color: colour",\n  "incase: in case, encase",\n  "canot->cannot",\n  "cancelled->canceled"\n]\n'})}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"InlineDictionary.flagWords"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"id",children:"id?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"id"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L456",children:"CSpellSettingsDef.ts:456"})]}),"\n",(0,t.jsx)(s.p,{children:"Optional identifier."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"ignoreregexplist",children:"ignoreRegExpList?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"ignoreRegExpList"}),": ",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/type-aliases/RegExpPatternList",children:(0,t.jsx)(s.code,{children:"RegExpPatternList"})})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L554",children:"CSpellSettingsDef.ts:554"})]}),"\n",(0,t.jsx)(s.p,{children:"List of regular expression patterns or pattern names to exclude from spell checking."}),"\n",(0,t.jsxs)(s.p,{children:["Example: ",(0,t.jsx)(s.code,{children:'["href"]'})," - to exclude html href pattern."]}),"\n",(0,t.jsx)(s.p,{children:"Regular expressions use JavaScript regular expression syntax."}),"\n",(0,t.jsx)(s.p,{children:"Example: to ignore ALL-CAPS words"}),"\n",(0,t.jsx)(s.p,{children:"JSON"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'"ignoreRegExpList": ["/\\\\b[A-Z]+\\\\b/g"]\n'})}),"\n",(0,t.jsx)(s.p,{children:"YAML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"ignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n"})}),"\n",(0,t.jsxs)(s.p,{children:["By default, several patterns are excluded. See\n",(0,t.jsx)(s.a,{href:"https://cspell.org/configuration/patterns",children:"Configuration"})," for more details."]}),"\n",(0,t.jsxs)(s.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,t.jsx)(s.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"ignorewords",children:"ignoreWords?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"ignoreWords"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/InlineDictionary.ts#L31",children:"InlineDictionary.ts:31"})]}),"\n",(0,t.jsxs)(s.p,{children:["List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the ",(0,t.jsx)(s.code,{children:"flagWords"}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"InlineDictionary.ignoreWords"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"includeregexplist",children:"includeRegExpList?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"includeRegExpList"}),": ",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/type-aliases/RegExpPatternList",children:(0,t.jsx)(s.code,{children:"RegExpPatternList"})})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L564",children:"CSpellSettingsDef.ts:564"})]}),"\n",(0,t.jsx)(s.p,{children:"List of regular expression patterns or defined pattern names to match for spell checking."}),"\n",(0,t.jsx)(s.p,{children:"If this property is defined, only text matching the included patterns will be checked."}),"\n",(0,t.jsxs)(s.p,{children:["While you can create your own patterns, you can also leverage several patterns that are\n",(0,t.jsx)(s.a,{href:"https://cspell.org/types/cspell-types/types/PredefinedPatterns.html",children:"built-in to CSpell"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"name",children:"name?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"name"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L459",children:"CSpellSettingsDef.ts:459"})]}),"\n",(0,t.jsx)(s.p,{children:"Optional name of configuration."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"nosuggestdictionaries",children:"noSuggestDictionaries?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"noSuggestDictionaries"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L525",children:"CSpellSettingsDef.ts:525"})]}),"\n",(0,t.jsx)(s.p,{children:"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions."}),"\n",(0,t.jsx)(s.p,{children:"Note: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"parser",children:"parser?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"parser"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L884",children:"CSpellSettingsDef.ts:884"})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Experimental"})})}),"\n",(0,t.jsx)(s.p,{children:"Parser to use for the file content"}),"\n",(0,t.jsx)(s.h4,{id:"since",children:"Since"}),"\n",(0,t.jsx)(s.p,{children:"6.2.0"}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"ExperimentalBaseSettings.parser"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"patterns",children:"patterns?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"patterns"}),": ",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/interfaces/RegExpPatternDefinition",children:(0,t.jsx)(s.code,{children:"RegExpPatternDefinition"})}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/CSpellSettingsDef.ts#L591",children:"CSpellSettingsDef.ts:591"})]}),"\n",(0,t.jsxs)(s.p,{children:["Defines a list of patterns that can be used with the ",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/interfaces/BaseSetting#ignoreregexplist",children:"ignoreRegExpList"})," and\n",(0,t.jsx)(s.a,{href:"/docsV2/docs/api/cspell-types/interfaces/BaseSetting#includeregexplist",children:"includeRegExpList"})," options."]}),"\n",(0,t.jsx)(s.p,{children:"For example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:'"ignoreRegExpList": ["comments"],\n"patterns": [\n  {\n    "name": "comment-single-line",\n    "pattern": "/#.*\u200b/g"\n  },\n  {\n    "name": "comment-multi-line",\n    "pattern": "/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    "name": "comments",\n    "pattern": ["comment-single-line", "comment-multi-line"]\n  }\n]\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"suggestwords",children:"suggestWords?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"suggestWords"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/InlineDictionary.ts#L46",children:"InlineDictionary.ts:46"})]}),"\n",(0,t.jsx)(s.p,{children:"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it."}),"\n",(0,t.jsxs)(s.p,{children:["Format of ",(0,t.jsx)(s.code,{children:"suggestWords"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Single suggestion (possible auto fix)","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"word: suggestion"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"word->suggestion"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Multiple suggestions (not auto fixable)","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"word: first, second, third"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"word->first, second, third"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"InlineDictionary.suggestWords"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"words",children:"words?"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"optional"})," ",(0,t.jsx)(s.strong,{children:"words"}),": ",(0,t.jsx)(s.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/streetsidesoftware/cspell/blob/628fd82e4fbd5d67578fcfa5a0007d0c28255ecb/packages/cspell-types/src/InlineDictionary.ts#L5",children:"InlineDictionary.ts:5"})]}),"\n",(0,t.jsx)(s.p,{children:"List of words to be considered correct."}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"InlineDictionary.words"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},20945:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var i=n(7378);const t={},r=i.createContext(t);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);