// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Test Aff > tests applying rules for es 1`] = `
[
  [
    "ababillar/RED -> ababilla (E) [|] --> 'ababilla'",
    "ababillar/RED -> ababilla (R) [|ba] --> 'ababillaba'",
    "ababillar/RED -> ababill (R) [|abais] --> 'ababillabais'",
    "ababillar/RED -> ababilla (R) [|ban] --> 'ababillaban'",
    "ababillar/RED -> ababilla (R) [|bas] --> 'ababillabas'",
    "ababillar/RED -> ababilla (R) [|d] --> 'ababillad'",
    "ababillar/RED -> ababilla (D) [|da] --> 'ababillada'",
    "ababillar/RED -> ababilla (D) [|das] --> 'ababilladas'",
    "ababillar/RED -> ababilla (D) [|do] --> 'ababillado'",
    "ababillar/RED -> ababilla (D) [|dos] --> 'ababillados'",
    "ababillar/RED -> ababilla (R) [|mos] --> 'ababillamos'",
    "ababillar/RED -> ababilla (E) [|n] --> 'ababillan'",
    "ababillar/RED -> ababilla (R) [|ndo] --> 'ababillando'",
    "ababillar/RED -> ababillar () [|] --> 'ababillar'",
    "ababillar/RED -> ababillar (R) [|a] --> 'ababillara'",
    "ababillar/RED -> ababillar (R) [|ais] --> 'ababillarais'",
    "ababillar/RED -> ababillar (R) [|an] --> 'ababillaran'",
    "ababillar/RED -> ababillar (R) [|as] --> 'ababillaras'",
    "ababillar/RED -> ababillar (R) [|e] --> 'ababillare'",
    "ababillar/RED -> ababillar (R) [|eis] --> 'ababillareis'",
    "ababillar/RED -> ababillar (R) [|emos] --> 'ababillaremos'",
    "ababillar/RED -> ababillar (R) [|en] --> 'ababillaren'",
    "ababillar/RED -> ababillar (R) [|es] --> 'ababillares'",
    "ababillar/RED -> ababilla (R) [|ron] --> 'ababillaron'",
    "ababillar/RED -> ababillar (R) [|se] --> 'ababillarse'",
    "ababillar/RED -> ababillar (R) [|á] --> 'ababillará'",
    "ababillar/RED -> ababillar (R) [|án] --> 'ababillarán'",
    "ababillar/RED -> ababillar (R) [|ás] --> 'ababillarás'",
    "ababillar/RED -> ababillar (R) [|é] --> 'ababillaré'",
    "ababillar/RED -> ababillar (R) [|éis] --> 'ababillaréis'",
    "ababillar/RED -> ababillar (R) [|ía] --> 'ababillaría'",
    "ababillar/RED -> ababillar (R) [|íais] --> 'ababillaríais'",
    "ababillar/RED -> ababillar (R) [|íamos] --> 'ababillaríamos'",
    "ababillar/RED -> ababillar (R) [|ían] --> 'ababillarían'",
    "ababillar/RED -> ababillar (R) [|ías] --> 'ababillarías'",
    "ababillar/RED -> ababilla (E) [|s] --> 'ababillas'",
    "ababillar/RED -> ababilla (R) [|se] --> 'ababillase'",
    "ababillar/RED -> ababilla (R) [|seis] --> 'ababillaseis'",
    "ababillar/RED -> ababilla (R) [|sen] --> 'ababillasen'",
    "ababillar/RED -> ababilla (R) [|ses] --> 'ababillases'",
    "ababillar/RED -> ababilla (R) [|ste] --> 'ababillaste'",
    "ababillar/RED -> ababilla (R) [|steis] --> 'ababillasteis'",
    "ababillar/RED -> ababill (E) [|e] --> 'ababille'",
    "ababillar/RED -> ababill (R) [|emos] --> 'ababillemos'",
    "ababillar/RED -> ababill (E) [|en] --> 'ababillen'",
    "ababillar/RED -> ababill (E) [|es] --> 'ababilles'",
    "ababillar/RED -> ababill (E) [|o] --> 'ababillo'",
    "ababillar/RED -> ababill (R) [|á] --> 'ababillá'",
    "ababillar/RED -> ababill (R) [|ábamos] --> 'ababillábamos'",
    "ababillar/RED -> ababill (R) [|áis] --> 'ababilláis'",
    "ababillar/RED -> ababill (R) [|ándose] --> 'ababillándose'",
    "ababillar/RED -> ababill (R) [|áramos] --> 'ababilláramos'",
    "ababillar/RED -> ababill (R) [|áremos] --> 'ababilláremos'",
    "ababillar/RED -> ababill (R) [|ás] --> 'ababillás'",
    "ababillar/RED -> ababill (R) [|ásemos] --> 'ababillásemos'",
    "ababillar/RED -> ababill (R) [|é] --> 'ababillé'",
    "ababillar/RED -> ababill (R) [|éis] --> 'ababilléis'",
    "ababillar/RED -> ababill (R) [|ó] --> 'ababilló'",
  ],
]
`;

exports[`Test Aff > tests applying rules for nl 1`] = `
[
  [
    "dc/ClCwKc -> dc (Kc Cw Cb Cc Cp) [-|] --> '-dc/CompoundEnd:CompoundMiddle:CompoundPermitted:KeepCase'",
    "dc/ClCwKc -> dc (Kc Cw Cb Cc Cp Cl Ca Cb Cp) [-|-] --> '-dc-/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted:KeepCase'",
    "dc/ClCwKc -> dc (Kc) [|] --> 'dc/KeepCase'",
    "dc/ClCwKc -> dc (Kc Cl Ca Cb Cp) [|-] --> 'dc-/CompoundBegin:CompoundMiddle:CompoundPermitted:KeepCase'",
  ],
  [
    "aak/Zf -> aak () [|] --> 'aak'",
    "aak/Zf -> a (Zf Ca Cb Cp) [|ken] --> 'aken/CompoundBegin:CompoundMiddle:CompoundPermitted'",
    "aak/Zf -> a (Zf Ca Cb Cp) [|ken-] --> 'aken-/CompoundBegin:CompoundMiddle:CompoundPermitted'",
  ],
  [
    "huis/CACcYbCQZhC0 -> huis (Cc CA Ca Cp) [|] --> 'huis/CompoundBegin:CompoundEnd:CompoundPermitted'",
    "huis/CACcYbCQZhC0 -> huis (Cc) [|] --> 'huis/CompoundEnd'",
    "huis/CACcYbCQZhC0 -> huis (Cc CA Ca Cp) [|-] --> 'huis-/CompoundBegin:CompoundEnd:CompoundPermitted'",
    "huis/CACcYbCQZhC0 -> huis (Cc Yb) [|je] --> 'huisje/CompoundEnd'",
    "huis/CACcYbCQZhC0 -> huis (Cc Yb Ca Cb Cp) [|jes] --> 'huisjes/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
    "huis/CACcYbCQZhC0 -> huis (Cc Yb Ca Cb Cp) [|jes-] --> 'huisjes-/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
    "huis/CACcYbCQZhC0 -> hui (Cc Zh Ca Cb Cp) [|zen] --> 'huizen/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
    "huis/CACcYbCQZhC0 -> hui (Cc Zh Ca Cb Cp) [|zen-] --> 'huizen-/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
  ],
  [
    "pannenkoek/ZbCACcC0 -> pannenkoek (Cc CA Ca Cp) [|] --> 'pannenkoek/CompoundBegin:CompoundEnd:CompoundPermitted'",
    "pannenkoek/ZbCACcC0 -> pannenkoek (Cc) [|] --> 'pannenkoek/CompoundEnd'",
    "pannenkoek/ZbCACcC0 -> pannenkoek (Cc CA Ca Cp) [|-] --> 'pannenkoek-/CompoundBegin:CompoundEnd:CompoundPermitted'",
    "pannenkoek/ZbCACcC0 -> pannenkoek (Cc Zb Ca Cb Cp) [|en] --> 'pannenkoeken/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
    "pannenkoek/ZbCACcC0 -> pannenkoek (Cc Zb Ca Cb Cp) [|en-] --> 'pannenkoeken-/CompoundBegin:CompoundEnd:CompoundMiddle:CompoundPermitted'",
  ],
]
`;
