import type { FileTypeDefinitions } from './types.js';

export const definitions: FileTypeDefinitions = [
    { id: 'ada', extensions: ['.adb', '.ads'] },
    { id: 'apiblueprint', extensions: ['.apib', '.apiblueprint'] },
    { id: 'argdown', extensions: ['.ad', '.adown', '.argdn', '.argdown'] },
    { id: 'asciidoc', extensions: ['.adoc', '.asc', '.asciidoc'] },
    { id: 'bat', extensions: ['.bat', '.cmd'] },
    { id: 'bazel', extensions: ['.bazel', '.bzl'] },
    { id: 'bicep', extensions: ['.bicep'] },
    { id: 'c', extensions: ['.c'] },
    { id: 'cache_files', extensions: [], filenames: ['.DS_Store', '.cspellcache', '.eslintcache'] },
    { id: 'clojure', extensions: ['.clj', '.cljs', '.cljx', '.clojure', '.edn'] },
    { id: 'cmake', extensions: ['.cmake'], filenames: ['CMakeLists.txt'] },
    { id: 'coffeescript', extensions: ['.coffee', '.cson'] },
    { id: 'cpp', extensions: ['.cc', '.cpp', '.cxx', '.h', '.hh', '.hpp', '.hxx', '.inl', '.ino', '.mm'] },
    { id: 'csharp', extensions: ['.cs'] },
    { id: 'css', extensions: ['.css'] },
    { id: 'dhall', extensions: ['.dhall'] },
    { id: 'diff', extensions: ['.diff', '.patch', '.rej'] },
    { id: 'dockerfile', extensions: ['.dockerfile'], filenames: ['Dockerfile', 'Dockerfile.dev', 'dockerfile', /\bDockerfile.[\w.-]/] },
    { id: 'elisp', extensions: ['.el'] },
    { id: 'elixir', extensions: ['.ex', '.exs'] },
    { id: 'elm', extensions: ['.elm'] },
    { id: 'erb', extensions: ['.erb', '.html.erb', '.rhtml'] },
    { id: 'fsharp', extensions: ['.fs', '.fsi', '.fsscript', '.fsx'] },
    { id: 'github-issues', extensions: ['.github-issues'] },
    { id: 'go', extensions: ['.go'] },
    { id: 'godot', extensions: ['.gd', '.godot', '.tres', '.tscn'] },
    { id: 'gradle', extensions: ['.gradle'] },
    { id: 'groovy', extensions: ['.gradle', '.groovy', '.gvy'] },
    { id: 'haml', extensions: ['.haml'] },
    { id: 'handlebars', extensions: ['.handlebars', '.hbs'] },
    { id: 'haskell', extensions: ['.hs', '.lhs'] },
    { id: 'haxe', extensions: ['.hx'] },
    {
        id: 'html',
        extensions: ['.asp', '.aspx', '.htm', '.html', '.jshtm', '.jsp', '.mdoc', '.shtml', '.volt', '.vue', '.xhtml'],
    },
    { id: 'ini', extensions: ['.conf', '.ini'] },
    { id: 'jade', extensions: ['.jade', '.pug'] },
    { id: 'java', extensions: ['.jav', '.java'] },
    { id: 'javascript', extensions: ['.cjs', '.es6', '.js', '.mjs'] },
    { id: 'javascriptreact', extensions: ['.jsx'] },
    { id: 'jinja', extensions: ['.jinja'] },
    {
        id: 'json',
        extensions: ['.babelrc', '.bowerrc', '.eslintrc', '.jscsrc', '.jshintrc', '.json', '.jsonc', '.webmanifest'],
    },
    { id: 'jsonc', extensions: ['.jsonc'] },
    { id: 'jsonc', extensions: ['.code-workspace'], filenames: ['.code-workspace'] },
    { id: 'julia', extensions: ['.jl'] },
    { id: 'jungle', extensions: ['.jungle'] },
    { id: 'kotlin', extensions: ['.kt'] },
    { id: 'latex', extensions: ['.tex'] },
    { id: 'less', extensions: ['.less'] },
    { id: 'lisp', extensions: ['.fasl', '.l', '.lisp', '.lsp'] },
    { id: 'literate haskell', extensions: ['.lhs'] },
    { id: 'lock', extensions: ['.lock'], filenames: ['package-lock.json', 'Cargo.lock'] },
    { id: 'lua', extensions: ['.lua'] },
    { id: 'makefile', extensions: ['.mk'], filenames: ['makefile'] },
    { id: 'map', extensions: ['.map'] },
    { id: 'markdown', extensions: ['.markdn', '.markdown', '.md', '.mdown'] },
    { id: 'mdx', extensions: ['.mdx'] },
    { id: 'monkeyc', extensions: ['.mb', '.mc'] },
    { id: 'mustache', extensions: ['.mst', '.mu', '.mustache', '.stache'] },
    { id: 'nunjucks', extensions: ['.nj', '.njk', '.nunj', '.nunjs', '.nunjucks', '.tmpl', '.tpl'] },
    { id: 'objective-c', extensions: ['.m'] },
    { id: 'ocaml', extensions: ['.eliom', '.eliomi', '.ml', '.mli', '.mll', '.mly'] },
    { id: 'pdf', extensions: ['.pdf'] },
    { id: 'pem', extensions: ['.pem', '.private-key.pem'] },
    { id: 'pem-private-key', extensions: ['.private-key.pem'] },
    { id: 'perl', extensions: ['.PL', '.pl', '.pm', '.pod', '.psgi', '.t'] },
    { id: 'perl6', extensions: ['.nqp', '.p6', '.pl6', '.pm6'] },
    { id: 'php', extensions: ['.ctp', '.php', '.php4', '.php5', '.phtml'] },
    { id: 'plaintext', extensions: ['.txt'] },
    { id: 'powershell', extensions: ['.ps1', '.psd1', '.psm1', '.psrc', '.pssc'] },
    { id: 'properties', extensions: ['.cfg', '.conf', '.gitconfig', '.properties'] },
    { id: 'puppet', extensions: ['.puppet'] },
    { id: 'purescript', extensions: ['.purs'] },
    { id: 'python', extensions: ['.cpy', '.gyp', '.gypi', '.py', '.pyw', '.rpy'] },
    { id: 'r', extensions: ['.r', '.rhistory', '.rprofile', '.rt'] },
    { id: 'r', extensions: ['.R', '.r', '.rhistory', '.rprofile', '.rt'] },
    { id: 'razor', extensions: ['.cshtml'] },
    { id: 'rescript', extensions: ['.res', '.resi'] },
    { id: 'rsa', extensions: ['.pub'], filenames: ['id_rsa', 'id_rsa.pub'] },
    { id: 'ruby', extensions: ['.gemspec', '.rake', '.rb', '.rbx', '.rjs', '.ru'] },
    { id: 'ruby', extensions: [], filenames: ['Gemfile'] },
    { id: 'rust', extensions: ['.rs'] },
    { id: 'sass', extensions: ['.sass'] },
    { id: 'scala', extensions: ['.sbt', '.sc', '.scala'] },
    { id: 'scss', extensions: ['.scss'] },
    { id: 'shaderlab', extensions: ['.cginc', '.shader'] },
    {
        id: 'shellscript',
        extensions: [
            '.bash',
            '.bash_aliases',
            '.bash_login',
            '.bash_logout',
            '.bash_profile',
            '.bashrc',
            '.ebuild',
            '.install',
            '.profile',
            '.sh',
            '.zlogin',
            '.zlogout',
            '.zprofile',
            '.zsh',
            '.zsh-theme',
            '.zshenv',
            '.zshrc',
        ],
    },
    { id: 'sql', extensions: ['.dsql', '.sql'] },
    { id: 'stylus', extensions: ['.styl'] },
    { id: 'svelte', extensions: ['.svelte'] },
    { id: 'swift', extensions: ['.swift'] },
    { id: 'terraform', extensions: ['.hcl', '.tf', '.tfvars'] },
    { id: 'terraform', extensions: ['.tf', '.tf.json'] },
    { id: 'tfvars', extensions: ['.tfvars'], description: 'Terraform Variables' },
    { id: 'todo', extensions: [], filenames: ['todo'] },
    { id: 'toml', extensions: ['.toml'], filenames: ['Cargo.lock', 'Cargo.toml'] },
    { id: 'typescript', extensions: ['.cts', '.mts', '.ts'] },
    { id: 'typescriptreact', extensions: ['.tsx'] },
    { id: 'vala', extensions: ['.vala'] },
    { id: 'vb', extensions: ['.bas', '.brs', '.vb', '.vbs'] },
    { id: 'vue', extensions: ['.vue'] },
    { id: 'vue', extensions: ['.vue'] },
    {
        id: 'xml',
        extensions: [
            '.ascx',
            '.atom',
            '.axml',
            '.bpmn',
            '.config',
            '.cpt',
            '.csl',
            '.csproj',
            '.csproj.user',
            '.dita',
            '.ditamap',
            '.dtd',
            '.dtml',
            '.ent',
            '.fsproj',
            '.fxml',
            '.iml',
            '.isml',
            '.jmx',
            '.launch',
            '.menu',
            '.mod',
            '.mxml',
            '.nuspec',
            '.opml',
            '.owl',
            '.proj',
            '.pt',
            '.pubxml',
            '.pubxml.user',
            '.rdf',
            '.rng',
            '.rss',
            '.shproj',
            '.storyboard',
            '.svg',
            '.targets',
            '.tld',
            '.tmx',
            '.vbproj',
            '.vbproj.user',
            '.vcxproj',
            '.vcxproj.filters',
            '.wsdl',
            '.wxi',
            '.wxl',
            '.wxs',
            '.xaml',
            '.xbl',
            '.xib',
            '.xlf',
            '.xliff',
            '.xml',
            '.xoml',
            '.xpdl',
            '.xsd',
            '.xul',
        ],
    },
    { id: 'xsl', extensions: ['.xsl', '.xslt'] },
    { id: 'yaml', extensions: ['.eyaml', '.eyml', '.yaml', '.yml'] },
    {
        id: 'binary',
        extensions: ['.bin', '.cur', '.dll', '.eot', '.exe', '.gz', '.lib', '.o', '.obj', '.zip'],
        format: 'Binary',
    },
    { id: 'dll', extensions: ['.dll'], format: 'Binary' },
    { id: 'exe', extensions: ['.exe'], format: 'Binary' },
    { id: 'fonts', extensions: ['.ttf', '.woff', '.woff2'], format: 'Binary' },
    { id: 'gzip', extensions: ['.gz'], format: 'Binary' },
    {
        id: 'image',
        extensions: ['.bmp', '.exr', '.gif', '.heic', '.ico', '.jpeg', '.jpg', '.pbm', '.pgm', '.png', '.ppm', '.ras', '.sgi', '.tiff', '.webp', '.xbm'],
        format: 'Binary',
        description: 'Some image extensions',
    },
    { id: 'jar', extensions: ['.jar'], format: 'Binary' },
    { id: 'mdb', extensions: ['.mdb'], format: 'Binary', description: 'Microsoft Access DB' },
    { id: 'object-file', extensions: ['.o', '.obj'], format: 'Binary' },
    { id: 'spv', extensions: ['.spv'], format: 'Binary', description: 'SPSS Output Document' },
    { id: 'trie', extensions: ['.trie'], format: 'Binary', description: 'CSpell dictionary file.' },
    { id: 'video', extensions: ['.avi', '.flv', '.mkv', '.mov', '.mp4', '.mpeg', '.mpg', '.wmv'], format: 'Binary' },
    { id: 'webm', extensions: ['.webm'], format: 'Binary', description: 'WebM is an audiovisual media file format.' },
    { id: 'wheel', extensions: ['.whl'], format: 'Binary' },
];

// cspell:ignore cljs cljx cson iname pcregrep fsscript fasl gradle shtml xhtml mdoc aspx jshtm gitconfig bowerrc
// cspell:ignore jshintrc jscsrc eslintrc babelrc webmanifest mdown markdn psgi phtml pssc psrc gypi rhistory
// cspell:ignore rprofile cshtml gemspec cginc ebuild zshrc zprofile zlogin zlogout zshenv dsql ascx axml
// cspell:ignore bpmn csproj dita ditamap dtml fsproj fxml isml mxml adoc
// cspell:ignore purescript purs dhall SPSS tfvars vala argdn argdown styl resi eliom eliomi nunj nunjs tmpl stache
// cspell:ignore haxe rhtml haml tscn bazel
