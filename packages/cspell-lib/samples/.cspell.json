// cSpell Settings
{
    // Version of the setting file.  Always 0.1
    "version": "0.1",
    "description": "Sample .cspell.json file with comments.",
    // language - current active spelling language
    "language": "en",
    "allowCompoundWords": false,
    // words - list of words to be always considered correct
    "words": [
        "gensequence",
        "xregexp",
        "sampletrace",
        "findall"
    ],
    "maxNumberOfProblems": 10000,
    "ignorePaths": [
        "dictionaries/**",
        "node_modules/**",
        "vscode-extension/**",
        ".git/**",
        ".vscode/**"
    ],
    // flagWords - list of words to be always considered incorrect
    // This is useful for offensive words and common spelling errors.
    // For example "hte" should be "the"
    "flagWords": [
        "hte"
    ],
    "dictionaryDefinitions": [
        {
            "name": "local words",
            "path": "./words.txt"
        },
        {
            "name": "missing dictionary file",
            "path": "./.missing.txt"
        }
    ],
    "languageSettings": [
        {
            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex
            // * will match against any file type.
            "languageId": "c,cpp",
            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.
            // Multiple locals can be specified like: "en, en-US" to match both English and English US.
            "local": "*",
            // By default the whole text of a file is included for spell checking
            // Adding patterns to the "includeRegExpList" to only include matching patterns
            "includeRegExpList": [
                "CStyleComment",
                "string"
            ],
            // To exclude patterns, add them to "ignoreRegExpList"
            "ignoreRegExpList": [
                "/#include.*/"
            ],
            // regex patterns than can be used with ignoreRegExpList or includeRegExpList
            // Example: "pattern": [{ "name": "mdash", "pattern": "&mdash;" }]
            // This could be included in "ignoreRegExpList": ["mdash"]
            "patterns": [
                {
                    "name": "string",
                    "pattern": "/(?:(['\"])(?:\\\\\\\\|(?:\\\\\\1)|[^\\1\\n])+\\1)|(?:([`])(?:\\\\\\\\|(?:\\\\\\2)|[^\\2])+?\\2)/gi"
                }
            ],
            // List of dictionaries to enable by name in `dictionaryDefinitions`
            "dictionaries": [
                "cpp"
            ],
            // Dictionary definitions can also be supplied here. They are only used iff "languageId" and "local" match.
            "dictionaryDefinitions": []
        },
        {
            // Turn off allowCompoundWords for Python
            "languageId": "python",
            "allowCompoundWords": false
        }
    ],
    "overrides": [
        {
            "filename": "**/{*.py}",
            "ignoreRegExpList": [
                "/'s\\b/"
            ]
        },
        {
            "filename": "**/{*.c,*.cpp}",
            "ignoreRegExpList": [
                "/'s\\b/"
            ]
        },
        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):
        {
            "language": "nl",
            "filename": "**/dutch/*.txt"
        }
    ]
}
